[["T_OPEN_TAG","<?php\n",1],["T_DOC_COMMENT","\/**\n * @link http:\/\/www.yiiframework.com\/\n * @copyright Copyright (c) 2008 Yii Software LLC\n * @license http:\/\/www.yiiframework.com\/license\/\n *\/",2],["T_WHITESPACE","\n\n",6],["T_NAMESPACE","namespace",8],["T_WHITESPACE"," ",8],["T_STRING","yii",8],["T_NS_SEPARATOR","\\",8],["T_STRING","db",8],";",["T_WHITESPACE","\n\n",8],["T_USE","use",10],["T_WHITESPACE"," ",10],["T_STRING","Yii",10],";",["T_WHITESPACE","\n",10],["T_USE","use",11],["T_WHITESPACE"," ",11],["T_STRING","yii",11],["T_NS_SEPARATOR","\\",11],["T_STRING","base",11],["T_NS_SEPARATOR","\\",11],["T_STRING","Component",11],";",["T_WHITESPACE","\n\n",11],["T_DOC_COMMENT","\/**\n * Query represents a SELECT SQL statement in a way that is independent of DBMS.\n *\n * Query provides a set of methods to facilitate the specification of different clauses\n * in a SELECT statement. These methods can be chained together.\n *\n * By calling [[createCommand()]], we can get a [[Command]] instance which can be further\n * used to perform\/execute the DB query against a database.\n *\n * For example,\n *\n * ```php\n * $query = new Query;\n * \/\/ compose the query\n * $query->select('id, name')\n *     ->from('user')\n *     ->limit(10);\n * \/\/ build and execute the query\n * $rows = $query->all();\n * \/\/ alternatively, you can create DB command and execute it\n * $command = $query->createCommand();\n * \/\/ $command->sql returns the actual SQL\n * $rows = $command->queryAll();\n * ```\n *\n * Query internally uses the [[QueryBuilder]] class to generate the SQL statement.\n *\n * A more detailed usage guide on how to work with Query can be found in the [guide article on Query Builder](guide:db-query-builder).\n *\n * @author Qiang Xue <qiang.xue@gmail.com>\n * @author Carsten Brandt <mail@cebe.cc>\n * @since 2.0\n *\/",13],["T_WHITESPACE","\n",45],["T_CLASS","class",46],["T_WHITESPACE"," ",46],["T_STRING","Query",46],["T_WHITESPACE"," ",46],["T_EXTENDS","extends",46],["T_WHITESPACE"," ",46],["T_STRING","Component",46],["T_WHITESPACE"," ",46],["T_IMPLEMENTS","implements",46],["T_WHITESPACE"," ",46],["T_STRING","QueryInterface",46],["T_WHITESPACE","\n",46],"{",["T_WHITESPACE","\n    ",47],["T_USE","use",48],["T_WHITESPACE"," ",48],["T_STRING","QueryTrait",48],";",["T_WHITESPACE","\n\n    ",48],["T_DOC_COMMENT","\/**\n     * @var array the columns being selected. For example, `['id', 'name']`.\n     * This is used to construct the SELECT clause in a SQL statement. If not set, it means selecting all columns.\n     * @see select()\n     *\/",50],["T_WHITESPACE","\n    ",54],["T_PUBLIC","public",55],["T_WHITESPACE"," ",55],["T_VARIABLE","$select",55],";",["T_WHITESPACE","\n    ",55],["T_DOC_COMMENT","\/**\n     * @var string additional option that should be appended to the 'SELECT' keyword. For example,\n     * in MySQL, the option 'SQL_CALC_FOUND_ROWS' can be used.\n     *\/",56],["T_WHITESPACE","\n    ",59],["T_PUBLIC","public",60],["T_WHITESPACE"," ",60],["T_VARIABLE","$selectOption",60],";",["T_WHITESPACE","\n    ",60],["T_DOC_COMMENT","\/**\n     * @var bool whether to select distinct rows of data only. If this is set true,\n     * the SELECT clause would be changed to SELECT DISTINCT.\n     *\/",61],["T_WHITESPACE","\n    ",64],["T_PUBLIC","public",65],["T_WHITESPACE"," ",65],["T_VARIABLE","$distinct",65],";",["T_WHITESPACE","\n    ",65],["T_DOC_COMMENT","\/**\n     * @var array the table(s) to be selected from. For example, `['user', 'post']`.\n     * This is used to construct the FROM clause in a SQL statement.\n     * @see from()\n     *\/",66],["T_WHITESPACE","\n    ",70],["T_PUBLIC","public",71],["T_WHITESPACE"," ",71],["T_VARIABLE","$from",71],";",["T_WHITESPACE","\n    ",71],["T_DOC_COMMENT","\/**\n     * @var array how to group the query results. For example, `['company', 'department']`.\n     * This is used to construct the GROUP BY clause in a SQL statement.\n     *\/",72],["T_WHITESPACE","\n    ",75],["T_PUBLIC","public",76],["T_WHITESPACE"," ",76],["T_VARIABLE","$groupBy",76],";",["T_WHITESPACE","\n    ",76],["T_DOC_COMMENT","\/**\n     * @var array how to join with other tables. Each array element represents the specification\n     * of one join which has the following structure:\n     *\n     * ```php\n     * [$joinType, $tableName, $joinCondition]\n     * ```\n     *\n     * For example,\n     *\n     * ```php\n     * [\n     *     ['INNER JOIN', 'user', 'user.id = author_id'],\n     *     ['LEFT JOIN', 'team', 'team.id = team_id'],\n     * ]\n     * ```\n     *\/",77],["T_WHITESPACE","\n    ",93],["T_PUBLIC","public",94],["T_WHITESPACE"," ",94],["T_VARIABLE","$join",94],";",["T_WHITESPACE","\n    ",94],["T_DOC_COMMENT","\/**\n     * @var string|array|Expression the condition to be applied in the GROUP BY clause.\n     * It can be either a string or an array. Please refer to [[where()]] on how to specify the condition.\n     *\/",95],["T_WHITESPACE","\n    ",98],["T_PUBLIC","public",99],["T_WHITESPACE"," ",99],["T_VARIABLE","$having",99],";",["T_WHITESPACE","\n    ",99],["T_DOC_COMMENT","\/**\n     * @var array this is used to construct the UNION clause(s) in a SQL statement.\n     * Each array element is an array of the following structure:\n     *\n     * - `query`: either a string or a [[Query]] object representing a query\n     * - `all`: boolean, whether it should be `UNION ALL` or `UNION`\n     *\/",100],["T_WHITESPACE","\n    ",106],["T_PUBLIC","public",107],["T_WHITESPACE"," ",107],["T_VARIABLE","$union",107],";",["T_WHITESPACE","\n    ",107],["T_DOC_COMMENT","\/**\n     * @var array list of query parameter values indexed by parameter placeholders.\n     * For example, `[':name' => 'Dan', ':age' => 31]`.\n     *\/",108],["T_WHITESPACE","\n    ",111],["T_PUBLIC","public",112],["T_WHITESPACE"," ",112],["T_VARIABLE","$params",112],["T_WHITESPACE"," ",112],"=",["T_WHITESPACE"," ",112],"[","]",";",["T_WHITESPACE","\n\n\n    ",112],["T_DOC_COMMENT","\/**\n     * Creates a DB command that can be used to execute this query.\n     * @param Connection $db the database connection used to generate the SQL statement.\n     * If this parameter is not given, the `db` application component will be used.\n     * @return Command the created DB command instance.\n     *\/",115],["T_WHITESPACE","\n    ",120],["T_PUBLIC","public",121],["T_WHITESPACE"," ",121],["T_FUNCTION","function",121],["T_WHITESPACE"," ",121],["T_STRING","createCommand",121],"(",["T_VARIABLE","$db",121],["T_WHITESPACE"," ",121],"=",["T_WHITESPACE"," ",121],["T_STRING","null",121],")",["T_WHITESPACE","\n    ",121],"{",["T_WHITESPACE","\n        ",122],["T_IF","if",123],["T_WHITESPACE"," ",123],"(",["T_VARIABLE","$db",123],["T_WHITESPACE"," ",123],["T_IS_IDENTICAL","===",123],["T_WHITESPACE"," ",123],["T_STRING","null",123],")",["T_WHITESPACE"," ",123],"{",["T_WHITESPACE","\n            ",123],["T_VARIABLE","$db",124],["T_WHITESPACE"," ",124],"=",["T_WHITESPACE"," ",124],["T_STRING","Yii",124],["T_DOUBLE_COLON","::",124],["T_VARIABLE","$app",124],["T_OBJECT_OPERATOR","->",124],["T_STRING","getDb",124],"(",")",";",["T_WHITESPACE","\n        ",124],"}",["T_WHITESPACE","\n        ",125],["T_LIST","list",126],["T_WHITESPACE"," ",126],"(",["T_VARIABLE","$sql",126],",",["T_WHITESPACE"," ",126],["T_VARIABLE","$params",126],")",["T_WHITESPACE"," ",126],"=",["T_WHITESPACE"," ",126],["T_VARIABLE","$db",126],["T_OBJECT_OPERATOR","->",126],["T_STRING","getQueryBuilder",126],"(",")",["T_OBJECT_OPERATOR","->",126],["T_STRING","build",126],"(",["T_VARIABLE","$this",126],")",";",["T_WHITESPACE","\n\n        ",126],["T_RETURN","return",128],["T_WHITESPACE"," ",128],["T_VARIABLE","$db",128],["T_OBJECT_OPERATOR","->",128],["T_STRING","createCommand",128],"(",["T_VARIABLE","$sql",128],",",["T_WHITESPACE"," ",128],["T_VARIABLE","$params",128],")",";",["T_WHITESPACE","\n    ",128],"}",["T_WHITESPACE","\n\n    ",129],["T_DOC_COMMENT","\/**\n     * Prepares for building SQL.\n     * This method is called by [[QueryBuilder]] when it starts to build SQL from a query object.\n     * You may override this method to do some final preparation work when converting a query into a SQL statement.\n     * @param QueryBuilder $builder\n     * @return $this a prepared query instance which will be used by [[QueryBuilder]] to build the SQL\n     *\/",131],["T_WHITESPACE","\n    ",137],["T_PUBLIC","public",138],["T_WHITESPACE"," ",138],["T_FUNCTION","function",138],["T_WHITESPACE"," ",138],["T_STRING","prepare",138],"(",["T_VARIABLE","$builder",138],")",["T_WHITESPACE","\n    ",138],"{",["T_WHITESPACE","\n        ",139],["T_RETURN","return",140],["T_WHITESPACE"," ",140],["T_VARIABLE","$this",140],";",["T_WHITESPACE","\n    ",140],"}",["T_WHITESPACE","\n\n    ",141],["T_DOC_COMMENT","\/**\n     * Starts a batch query.\n     *\n     * A batch query supports fetching data in batches, which can keep the memory usage under a limit.\n     * This method will return a [[BatchQueryResult]] object which implements the [[\\Iterator]] interface\n     * and can be traversed to retrieve the data in batches.\n     *\n     * For example,\n     *\n     * ```php\n     * $query = (new Query)->from('user');\n     * foreach ($query->batch() as $rows) {\n     *     \/\/ $rows is an array of 100 or fewer rows from user table\n     * }\n     * ```\n     *\n     * @param int $batchSize the number of records to be fetched in each batch.\n     * @param Connection $db the database connection. If not set, the \"db\" application component will be used.\n     * @return BatchQueryResult the batch query result. It implements the [[\\Iterator]] interface\n     * and can be traversed to retrieve the data in batches.\n     *\/",143],["T_WHITESPACE","\n    ",163],["T_PUBLIC","public",164],["T_WHITESPACE"," ",164],["T_FUNCTION","function",164],["T_WHITESPACE"," ",164],["T_STRING","batch",164],"(",["T_VARIABLE","$batchSize",164],["T_WHITESPACE"," ",164],"=",["T_WHITESPACE"," ",164],["T_LNUMBER","100",164],",",["T_WHITESPACE"," ",164],["T_VARIABLE","$db",164],["T_WHITESPACE"," ",164],"=",["T_WHITESPACE"," ",164],["T_STRING","null",164],")",["T_WHITESPACE","\n    ",164],"{",["T_WHITESPACE","\n        ",165],["T_RETURN","return",166],["T_WHITESPACE"," ",166],["T_STRING","Yii",166],["T_DOUBLE_COLON","::",166],["T_STRING","createObject",166],"(","[",["T_WHITESPACE","\n            ",166],["T_CONSTANT_ENCAPSED_STRING","'class'",167],["T_WHITESPACE"," ",167],["T_DOUBLE_ARROW","=>",167],["T_WHITESPACE"," ",167],["T_STRING","BatchQueryResult",167],["T_DOUBLE_COLON","::",167],["T_STRING","className",167],"(",")",",",["T_WHITESPACE","\n            ",167],["T_CONSTANT_ENCAPSED_STRING","'query'",168],["T_WHITESPACE"," ",168],["T_DOUBLE_ARROW","=>",168],["T_WHITESPACE"," ",168],["T_VARIABLE","$this",168],",",["T_WHITESPACE","\n            ",168],["T_CONSTANT_ENCAPSED_STRING","'batchSize'",169],["T_WHITESPACE"," ",169],["T_DOUBLE_ARROW","=>",169],["T_WHITESPACE"," ",169],["T_VARIABLE","$batchSize",169],",",["T_WHITESPACE","\n            ",169],["T_CONSTANT_ENCAPSED_STRING","'db'",170],["T_WHITESPACE"," ",170],["T_DOUBLE_ARROW","=>",170],["T_WHITESPACE"," ",170],["T_VARIABLE","$db",170],",",["T_WHITESPACE","\n            ",170],["T_CONSTANT_ENCAPSED_STRING","'each'",171],["T_WHITESPACE"," ",171],["T_DOUBLE_ARROW","=>",171],["T_WHITESPACE"," ",171],["T_STRING","false",171],",",["T_WHITESPACE","\n        ",171],"]",")",";",["T_WHITESPACE","\n    ",172],"}",["T_WHITESPACE","\n\n    ",173],["T_DOC_COMMENT","\/**\n     * Starts a batch query and retrieves data row by row.\n     * This method is similar to [[batch()]] except that in each iteration of the result,\n     * only one row of data is returned. For example,\n     *\n     * ```php\n     * $query = (new Query)->from('user');\n     * foreach ($query->each() as $row) {\n     * }\n     * ```\n     *\n     * @param int $batchSize the number of records to be fetched in each batch.\n     * @param Connection $db the database connection. If not set, the \"db\" application component will be used.\n     * @return BatchQueryResult the batch query result. It implements the [[\\Iterator]] interface\n     * and can be traversed to retrieve the data in batches.\n     *\/",175],["T_WHITESPACE","\n    ",190],["T_PUBLIC","public",191],["T_WHITESPACE"," ",191],["T_FUNCTION","function",191],["T_WHITESPACE"," ",191],["T_STRING","each",191],"(",["T_VARIABLE","$batchSize",191],["T_WHITESPACE"," ",191],"=",["T_WHITESPACE"," ",191],["T_LNUMBER","100",191],",",["T_WHITESPACE"," ",191],["T_VARIABLE","$db",191],["T_WHITESPACE"," ",191],"=",["T_WHITESPACE"," ",191],["T_STRING","null",191],")",["T_WHITESPACE","\n    ",191],"{",["T_WHITESPACE","\n        ",192],["T_RETURN","return",193],["T_WHITESPACE"," ",193],["T_STRING","Yii",193],["T_DOUBLE_COLON","::",193],["T_STRING","createObject",193],"(","[",["T_WHITESPACE","\n            ",193],["T_CONSTANT_ENCAPSED_STRING","'class'",194],["T_WHITESPACE"," ",194],["T_DOUBLE_ARROW","=>",194],["T_WHITESPACE"," ",194],["T_STRING","BatchQueryResult",194],["T_DOUBLE_COLON","::",194],["T_STRING","className",194],"(",")",",",["T_WHITESPACE","\n            ",194],["T_CONSTANT_ENCAPSED_STRING","'query'",195],["T_WHITESPACE"," ",195],["T_DOUBLE_ARROW","=>",195],["T_WHITESPACE"," ",195],["T_VARIABLE","$this",195],",",["T_WHITESPACE","\n            ",195],["T_CONSTANT_ENCAPSED_STRING","'batchSize'",196],["T_WHITESPACE"," ",196],["T_DOUBLE_ARROW","=>",196],["T_WHITESPACE"," ",196],["T_VARIABLE","$batchSize",196],",",["T_WHITESPACE","\n            ",196],["T_CONSTANT_ENCAPSED_STRING","'db'",197],["T_WHITESPACE"," ",197],["T_DOUBLE_ARROW","=>",197],["T_WHITESPACE"," ",197],["T_VARIABLE","$db",197],",",["T_WHITESPACE","\n            ",197],["T_CONSTANT_ENCAPSED_STRING","'each'",198],["T_WHITESPACE"," ",198],["T_DOUBLE_ARROW","=>",198],["T_WHITESPACE"," ",198],["T_STRING","true",198],",",["T_WHITESPACE","\n        ",198],"]",")",";",["T_WHITESPACE","\n    ",199],"}",["T_WHITESPACE","\n\n    ",200],["T_DOC_COMMENT","\/**\n     * Executes the query and returns all results as an array.\n     * @param Connection $db the database connection used to generate the SQL statement.\n     * If this parameter is not given, the `db` application component will be used.\n     * @return array the query results. If the query results in nothing, an empty array will be returned.\n     *\/",202],["T_WHITESPACE","\n    ",207],["T_PUBLIC","public",208],["T_WHITESPACE"," ",208],["T_FUNCTION","function",208],["T_WHITESPACE"," ",208],["T_STRING","all",208],"(",["T_VARIABLE","$db",208],["T_WHITESPACE"," ",208],"=",["T_WHITESPACE"," ",208],["T_STRING","null",208],")",["T_WHITESPACE","\n    ",208],"{",["T_WHITESPACE","\n        ",209],["T_IF","if",210],["T_WHITESPACE"," ",210],"(",["T_VARIABLE","$this",210],["T_OBJECT_OPERATOR","->",210],["T_STRING","emulateExecution",210],")",["T_WHITESPACE"," ",210],"{",["T_WHITESPACE","\n            ",210],["T_RETURN","return",211],["T_WHITESPACE"," ",211],"[","]",";",["T_WHITESPACE","\n        ",211],"}",["T_WHITESPACE","\n        ",212],["T_VARIABLE","$rows",213],["T_WHITESPACE"," ",213],"=",["T_WHITESPACE"," ",213],["T_VARIABLE","$this",213],["T_OBJECT_OPERATOR","->",213],["T_STRING","createCommand",213],"(",["T_VARIABLE","$db",213],")",["T_OBJECT_OPERATOR","->",213],["T_STRING","queryAll",213],"(",")",";",["T_WHITESPACE","\n        ",213],["T_RETURN","return",214],["T_WHITESPACE"," ",214],["T_VARIABLE","$this",214],["T_OBJECT_OPERATOR","->",214],["T_STRING","populate",214],"(",["T_VARIABLE","$rows",214],")",";",["T_WHITESPACE","\n    ",214],"}",["T_WHITESPACE","\n\n    ",215],["T_DOC_COMMENT","\/**\n     * Converts the raw query results into the format as specified by this query.\n     * This method is internally used to convert the data fetched from database\n     * into the format as required by this query.\n     * @param array $rows the raw query result from database\n     * @return array the converted query result\n     *\/",217],["T_WHITESPACE","\n    ",223],["T_PUBLIC","public",224],["T_WHITESPACE"," ",224],["T_FUNCTION","function",224],["T_WHITESPACE"," ",224],["T_STRING","populate",224],"(",["T_VARIABLE","$rows",224],")",["T_WHITESPACE","\n    ",224],"{",["T_WHITESPACE","\n        ",225],["T_IF","if",226],["T_WHITESPACE"," ",226],"(",["T_VARIABLE","$this",226],["T_OBJECT_OPERATOR","->",226],["T_STRING","indexBy",226],["T_WHITESPACE"," ",226],["T_IS_IDENTICAL","===",226],["T_WHITESPACE"," ",226],["T_STRING","null",226],")",["T_WHITESPACE"," ",226],"{",["T_WHITESPACE","\n            ",226],["T_RETURN","return",227],["T_WHITESPACE"," ",227],["T_VARIABLE","$rows",227],";",["T_WHITESPACE","\n        ",227],"}",["T_WHITESPACE","\n        ",228],["T_VARIABLE","$result",229],["T_WHITESPACE"," ",229],"=",["T_WHITESPACE"," ",229],"[","]",";",["T_WHITESPACE","\n        ",229],["T_FOREACH","foreach",230],["T_WHITESPACE"," ",230],"(",["T_VARIABLE","$rows",230],["T_WHITESPACE"," ",230],["T_AS","as",230],["T_WHITESPACE"," ",230],["T_VARIABLE","$row",230],")",["T_WHITESPACE"," ",230],"{",["T_WHITESPACE","\n            ",230],["T_IF","if",231],["T_WHITESPACE"," ",231],"(",["T_STRING","is_string",231],"(",["T_VARIABLE","$this",231],["T_OBJECT_OPERATOR","->",231],["T_STRING","indexBy",231],")",")",["T_WHITESPACE"," ",231],"{",["T_WHITESPACE","\n                ",231],["T_VARIABLE","$key",232],["T_WHITESPACE"," ",232],"=",["T_WHITESPACE"," ",232],["T_VARIABLE","$row",232],"[",["T_VARIABLE","$this",232],["T_OBJECT_OPERATOR","->",232],["T_STRING","indexBy",232],"]",";",["T_WHITESPACE","\n            ",232],"}",["T_WHITESPACE"," ",233],["T_ELSE","else",233],["T_WHITESPACE"," ",233],"{",["T_WHITESPACE","\n                ",233],["T_VARIABLE","$key",234],["T_WHITESPACE"," ",234],"=",["T_WHITESPACE"," ",234],["T_STRING","call_user_func",234],"(",["T_VARIABLE","$this",234],["T_OBJECT_OPERATOR","->",234],["T_STRING","indexBy",234],",",["T_WHITESPACE"," ",234],["T_VARIABLE","$row",234],")",";",["T_WHITESPACE","\n            ",234],"}",["T_WHITESPACE","\n            ",235],["T_VARIABLE","$result",236],"[",["T_VARIABLE","$key",236],"]",["T_WHITESPACE"," ",236],"=",["T_WHITESPACE"," ",236],["T_VARIABLE","$row",236],";",["T_WHITESPACE","\n        ",236],"}",["T_WHITESPACE","\n        ",237],["T_RETURN","return",238],["T_WHITESPACE"," ",238],["T_VARIABLE","$result",238],";",["T_WHITESPACE","\n    ",238],"}",["T_WHITESPACE","\n\n    ",239],["T_DOC_COMMENT","\/**\n     * Executes the query and returns a single row of result.\n     * @param Connection $db the database connection used to generate the SQL statement.\n     * If this parameter is not given, the `db` application component will be used.\n     * @return array|bool the first row (in terms of an array) of the query result. False is returned if the query\n     * results in nothing.\n     *\/",241],["T_WHITESPACE","\n    ",247],["T_PUBLIC","public",248],["T_WHITESPACE"," ",248],["T_FUNCTION","function",248],["T_WHITESPACE"," ",248],["T_STRING","one",248],"(",["T_VARIABLE","$db",248],["T_WHITESPACE"," ",248],"=",["T_WHITESPACE"," ",248],["T_STRING","null",248],")",["T_WHITESPACE","\n    ",248],"{",["T_WHITESPACE","\n        ",249],["T_IF","if",250],["T_WHITESPACE"," ",250],"(",["T_VARIABLE","$this",250],["T_OBJECT_OPERATOR","->",250],["T_STRING","emulateExecution",250],")",["T_WHITESPACE"," ",250],"{",["T_WHITESPACE","\n            ",250],["T_RETURN","return",251],["T_WHITESPACE"," ",251],["T_STRING","false",251],";",["T_WHITESPACE","\n        ",251],"}",["T_WHITESPACE","\n        ",252],["T_RETURN","return",253],["T_WHITESPACE"," ",253],["T_VARIABLE","$this",253],["T_OBJECT_OPERATOR","->",253],["T_STRING","createCommand",253],"(",["T_VARIABLE","$db",253],")",["T_OBJECT_OPERATOR","->",253],["T_STRING","queryOne",253],"(",")",";",["T_WHITESPACE","\n    ",253],"}",["T_WHITESPACE","\n\n    ",254],["T_DOC_COMMENT","\/**\n     * Returns the query result as a scalar value.\n     * The value returned will be the first column in the first row of the query results.\n     * @param Connection $db the database connection used to generate the SQL statement.\n     * If this parameter is not given, the `db` application component will be used.\n     * @return string|null|false the value of the first column in the first row of the query result.\n     * False is returned if the query result is empty.\n     *\/",256],["T_WHITESPACE","\n    ",263],["T_PUBLIC","public",264],["T_WHITESPACE"," ",264],["T_FUNCTION","function",264],["T_WHITESPACE"," ",264],["T_STRING","scalar",264],"(",["T_VARIABLE","$db",264],["T_WHITESPACE"," ",264],"=",["T_WHITESPACE"," ",264],["T_STRING","null",264],")",["T_WHITESPACE","\n    ",264],"{",["T_WHITESPACE","\n        ",265],["T_IF","if",266],["T_WHITESPACE"," ",266],"(",["T_VARIABLE","$this",266],["T_OBJECT_OPERATOR","->",266],["T_STRING","emulateExecution",266],")",["T_WHITESPACE"," ",266],"{",["T_WHITESPACE","\n            ",266],["T_RETURN","return",267],["T_WHITESPACE"," ",267],["T_STRING","null",267],";",["T_WHITESPACE","\n        ",267],"}",["T_WHITESPACE","\n        ",268],["T_RETURN","return",269],["T_WHITESPACE"," ",269],["T_VARIABLE","$this",269],["T_OBJECT_OPERATOR","->",269],["T_STRING","createCommand",269],"(",["T_VARIABLE","$db",269],")",["T_OBJECT_OPERATOR","->",269],["T_STRING","queryScalar",269],"(",")",";",["T_WHITESPACE","\n    ",269],"}",["T_WHITESPACE","\n\n    ",270],["T_DOC_COMMENT","\/**\n     * Executes the query and returns the first column of the result.\n     * @param Connection $db the database connection used to generate the SQL statement.\n     * If this parameter is not given, the `db` application component will be used.\n     * @return array the first column of the query result. An empty array is returned if the query results in nothing.\n     *\/",272],["T_WHITESPACE","\n    ",277],["T_PUBLIC","public",278],["T_WHITESPACE"," ",278],["T_FUNCTION","function",278],["T_WHITESPACE"," ",278],["T_STRING","column",278],"(",["T_VARIABLE","$db",278],["T_WHITESPACE"," ",278],"=",["T_WHITESPACE"," ",278],["T_STRING","null",278],")",["T_WHITESPACE","\n    ",278],"{",["T_WHITESPACE","\n        ",279],["T_IF","if",280],["T_WHITESPACE"," ",280],"(",["T_VARIABLE","$this",280],["T_OBJECT_OPERATOR","->",280],["T_STRING","emulateExecution",280],")",["T_WHITESPACE"," ",280],"{",["T_WHITESPACE","\n            ",280],["T_RETURN","return",281],["T_WHITESPACE"," ",281],"[","]",";",["T_WHITESPACE","\n        ",281],"}",["T_WHITESPACE","\n\n        ",282],["T_IF","if",284],["T_WHITESPACE"," ",284],"(",["T_VARIABLE","$this",284],["T_OBJECT_OPERATOR","->",284],["T_STRING","indexBy",284],["T_WHITESPACE"," ",284],["T_IS_IDENTICAL","===",284],["T_WHITESPACE"," ",284],["T_STRING","null",284],")",["T_WHITESPACE"," ",284],"{",["T_WHITESPACE","\n            ",284],["T_RETURN","return",285],["T_WHITESPACE"," ",285],["T_VARIABLE","$this",285],["T_OBJECT_OPERATOR","->",285],["T_STRING","createCommand",285],"(",["T_VARIABLE","$db",285],")",["T_OBJECT_OPERATOR","->",285],["T_STRING","queryColumn",285],"(",")",";",["T_WHITESPACE","\n        ",285],"}",["T_WHITESPACE","\n\n        ",286],["T_IF","if",288],["T_WHITESPACE"," ",288],"(",["T_STRING","is_string",288],"(",["T_VARIABLE","$this",288],["T_OBJECT_OPERATOR","->",288],["T_STRING","indexBy",288],")",["T_WHITESPACE"," ",288],["T_BOOLEAN_AND","&&",288],["T_WHITESPACE"," ",288],["T_STRING","is_array",288],"(",["T_VARIABLE","$this",288],["T_OBJECT_OPERATOR","->",288],["T_STRING","select",288],")",["T_WHITESPACE"," ",288],["T_BOOLEAN_AND","&&",288],["T_WHITESPACE"," ",288],["T_STRING","count",288],"(",["T_VARIABLE","$this",288],["T_OBJECT_OPERATOR","->",288],["T_STRING","select",288],")",["T_WHITESPACE"," ",288],["T_IS_IDENTICAL","===",288],["T_WHITESPACE"," ",288],["T_LNUMBER","1",288],")",["T_WHITESPACE"," ",288],"{",["T_WHITESPACE","\n            ",288],["T_VARIABLE","$this",289],["T_OBJECT_OPERATOR","->",289],["T_STRING","select",289],"[","]",["T_WHITESPACE"," ",289],"=",["T_WHITESPACE"," ",289],["T_VARIABLE","$this",289],["T_OBJECT_OPERATOR","->",289],["T_STRING","indexBy",289],";",["T_WHITESPACE","\n        ",289],"}",["T_WHITESPACE","\n        ",290],["T_VARIABLE","$rows",291],["T_WHITESPACE"," ",291],"=",["T_WHITESPACE"," ",291],["T_VARIABLE","$this",291],["T_OBJECT_OPERATOR","->",291],["T_STRING","createCommand",291],"(",["T_VARIABLE","$db",291],")",["T_OBJECT_OPERATOR","->",291],["T_STRING","queryAll",291],"(",")",";",["T_WHITESPACE","\n        ",291],["T_VARIABLE","$results",292],["T_WHITESPACE"," ",292],"=",["T_WHITESPACE"," ",292],"[","]",";",["T_WHITESPACE","\n        ",292],["T_FOREACH","foreach",293],["T_WHITESPACE"," ",293],"(",["T_VARIABLE","$rows",293],["T_WHITESPACE"," ",293],["T_AS","as",293],["T_WHITESPACE"," ",293],["T_VARIABLE","$row",293],")",["T_WHITESPACE"," ",293],"{",["T_WHITESPACE","\n            ",293],["T_VARIABLE","$value",294],["T_WHITESPACE"," ",294],"=",["T_WHITESPACE"," ",294],["T_STRING","reset",294],"(",["T_VARIABLE","$row",294],")",";",["T_WHITESPACE","\n\n            ",294],["T_IF","if",296],["T_WHITESPACE"," ",296],"(",["T_VARIABLE","$this",296],["T_OBJECT_OPERATOR","->",296],["T_STRING","indexBy",296],["T_WHITESPACE"," ",296],["T_INSTANCEOF","instanceof",296],["T_WHITESPACE"," ",296],["T_NS_SEPARATOR","\\",296],["T_STRING","Closure",296],")",["T_WHITESPACE"," ",296],"{",["T_WHITESPACE","\n                ",296],["T_VARIABLE","$results",297],"[",["T_STRING","call_user_func",297],"(",["T_VARIABLE","$this",297],["T_OBJECT_OPERATOR","->",297],["T_STRING","indexBy",297],",",["T_WHITESPACE"," ",297],["T_VARIABLE","$row",297],")","]",["T_WHITESPACE"," ",297],"=",["T_WHITESPACE"," ",297],["T_VARIABLE","$value",297],";",["T_WHITESPACE","\n            ",297],"}",["T_WHITESPACE"," ",298],["T_ELSE","else",298],["T_WHITESPACE"," ",298],"{",["T_WHITESPACE","\n                ",298],["T_VARIABLE","$results",299],"[",["T_VARIABLE","$row",299],"[",["T_VARIABLE","$this",299],["T_OBJECT_OPERATOR","->",299],["T_STRING","indexBy",299],"]","]",["T_WHITESPACE"," ",299],"=",["T_WHITESPACE"," ",299],["T_VARIABLE","$value",299],";",["T_WHITESPACE","\n            ",299],"}",["T_WHITESPACE","\n        ",300],"}",["T_WHITESPACE","\n        ",301],["T_RETURN","return",302],["T_WHITESPACE"," ",302],["T_VARIABLE","$results",302],";",["T_WHITESPACE","\n    ",302],"}",["T_WHITESPACE","\n\n    ",303],["T_DOC_COMMENT","\/**\n     * Returns the number of records.\n     * @param string $q the COUNT expression. Defaults to '*'.\n     * Make sure you properly [quote](guide:db-dao#quoting-table-and-column-names) column names in the expression.\n     * @param Connection $db the database connection used to generate the SQL statement.\n     * If this parameter is not given (or null), the `db` application component will be used.\n     * @return int|string number of records. The result may be a string depending on the\n     * underlying database engine and to support integer values higher than a 32bit PHP integer can handle.\n     *\/",305],["T_WHITESPACE","\n    ",313],["T_PUBLIC","public",314],["T_WHITESPACE"," ",314],["T_FUNCTION","function",314],["T_WHITESPACE"," ",314],["T_STRING","count",314],"(",["T_VARIABLE","$q",314],["T_WHITESPACE"," ",314],"=",["T_WHITESPACE"," ",314],["T_CONSTANT_ENCAPSED_STRING","'*'",314],",",["T_WHITESPACE"," ",314],["T_VARIABLE","$db",314],["T_WHITESPACE"," ",314],"=",["T_WHITESPACE"," ",314],["T_STRING","null",314],")",["T_WHITESPACE","\n    ",314],"{",["T_WHITESPACE","\n        ",315],["T_IF","if",316],["T_WHITESPACE"," ",316],"(",["T_VARIABLE","$this",316],["T_OBJECT_OPERATOR","->",316],["T_STRING","emulateExecution",316],")",["T_WHITESPACE"," ",316],"{",["T_WHITESPACE","\n            ",316],["T_RETURN","return",317],["T_WHITESPACE"," ",317],["T_LNUMBER","0",317],";",["T_WHITESPACE","\n        ",317],"}",["T_WHITESPACE","\n        ",318],["T_RETURN","return",319],["T_WHITESPACE"," ",319],["T_VARIABLE","$this",319],["T_OBJECT_OPERATOR","->",319],["T_STRING","queryScalar",319],"(","\"",["T_ENCAPSED_AND_WHITESPACE","COUNT(",319],["T_VARIABLE","$q",319],["T_ENCAPSED_AND_WHITESPACE",")",319],"\"",",",["T_WHITESPACE"," ",319],["T_VARIABLE","$db",319],")",";",["T_WHITESPACE","\n    ",319],"}",["T_WHITESPACE","\n\n    ",320],["T_DOC_COMMENT","\/**\n     * Returns the sum of the specified column values.\n     * @param string $q the column name or expression.\n     * Make sure you properly [quote](guide:db-dao#quoting-table-and-column-names) column names in the expression.\n     * @param Connection $db the database connection used to generate the SQL statement.\n     * If this parameter is not given, the `db` application component will be used.\n     * @return mixed the sum of the specified column values.\n     *\/",322],["T_WHITESPACE","\n    ",329],["T_PUBLIC","public",330],["T_WHITESPACE"," ",330],["T_FUNCTION","function",330],["T_WHITESPACE"," ",330],["T_STRING","sum",330],"(",["T_VARIABLE","$q",330],",",["T_WHITESPACE"," ",330],["T_VARIABLE","$db",330],["T_WHITESPACE"," ",330],"=",["T_WHITESPACE"," ",330],["T_STRING","null",330],")",["T_WHITESPACE","\n    ",330],"{",["T_WHITESPACE","\n        ",331],["T_IF","if",332],["T_WHITESPACE"," ",332],"(",["T_VARIABLE","$this",332],["T_OBJECT_OPERATOR","->",332],["T_STRING","emulateExecution",332],")",["T_WHITESPACE"," ",332],"{",["T_WHITESPACE","\n            ",332],["T_RETURN","return",333],["T_WHITESPACE"," ",333],["T_LNUMBER","0",333],";",["T_WHITESPACE","\n        ",333],"}",["T_WHITESPACE","\n        ",334],["T_RETURN","return",335],["T_WHITESPACE"," ",335],["T_VARIABLE","$this",335],["T_OBJECT_OPERATOR","->",335],["T_STRING","queryScalar",335],"(","\"",["T_ENCAPSED_AND_WHITESPACE","SUM(",335],["T_VARIABLE","$q",335],["T_ENCAPSED_AND_WHITESPACE",")",335],"\"",",",["T_WHITESPACE"," ",335],["T_VARIABLE","$db",335],")",";",["T_WHITESPACE","\n    ",335],"}",["T_WHITESPACE","\n\n    ",336],["T_DOC_COMMENT","\/**\n     * Returns the average of the specified column values.\n     * @param string $q the column name or expression.\n     * Make sure you properly [quote](guide:db-dao#quoting-table-and-column-names) column names in the expression.\n     * @param Connection $db the database connection used to generate the SQL statement.\n     * If this parameter is not given, the `db` application component will be used.\n     * @return mixed the average of the specified column values.\n     *\/",338],["T_WHITESPACE","\n    ",345],["T_PUBLIC","public",346],["T_WHITESPACE"," ",346],["T_FUNCTION","function",346],["T_WHITESPACE"," ",346],["T_STRING","average",346],"(",["T_VARIABLE","$q",346],",",["T_WHITESPACE"," ",346],["T_VARIABLE","$db",346],["T_WHITESPACE"," ",346],"=",["T_WHITESPACE"," ",346],["T_STRING","null",346],")",["T_WHITESPACE","\n    ",346],"{",["T_WHITESPACE","\n        ",347],["T_IF","if",348],["T_WHITESPACE"," ",348],"(",["T_VARIABLE","$this",348],["T_OBJECT_OPERATOR","->",348],["T_STRING","emulateExecution",348],")",["T_WHITESPACE"," ",348],"{",["T_WHITESPACE","\n            ",348],["T_RETURN","return",349],["T_WHITESPACE"," ",349],["T_LNUMBER","0",349],";",["T_WHITESPACE","\n        ",349],"}",["T_WHITESPACE","\n        ",350],["T_RETURN","return",351],["T_WHITESPACE"," ",351],["T_VARIABLE","$this",351],["T_OBJECT_OPERATOR","->",351],["T_STRING","queryScalar",351],"(","\"",["T_ENCAPSED_AND_WHITESPACE","AVG(",351],["T_VARIABLE","$q",351],["T_ENCAPSED_AND_WHITESPACE",")",351],"\"",",",["T_WHITESPACE"," ",351],["T_VARIABLE","$db",351],")",";",["T_WHITESPACE","\n    ",351],"}",["T_WHITESPACE","\n\n    ",352],["T_DOC_COMMENT","\/**\n     * Returns the minimum of the specified column values.\n     * @param string $q the column name or expression.\n     * Make sure you properly [quote](guide:db-dao#quoting-table-and-column-names) column names in the expression.\n     * @param Connection $db the database connection used to generate the SQL statement.\n     * If this parameter is not given, the `db` application component will be used.\n     * @return mixed the minimum of the specified column values.\n     *\/",354],["T_WHITESPACE","\n    ",361],["T_PUBLIC","public",362],["T_WHITESPACE"," ",362],["T_FUNCTION","function",362],["T_WHITESPACE"," ",362],["T_STRING","min",362],"(",["T_VARIABLE","$q",362],",",["T_WHITESPACE"," ",362],["T_VARIABLE","$db",362],["T_WHITESPACE"," ",362],"=",["T_WHITESPACE"," ",362],["T_STRING","null",362],")",["T_WHITESPACE","\n    ",362],"{",["T_WHITESPACE","\n        ",363],["T_RETURN","return",364],["T_WHITESPACE"," ",364],["T_VARIABLE","$this",364],["T_OBJECT_OPERATOR","->",364],["T_STRING","queryScalar",364],"(","\"",["T_ENCAPSED_AND_WHITESPACE","MIN(",364],["T_VARIABLE","$q",364],["T_ENCAPSED_AND_WHITESPACE",")",364],"\"",",",["T_WHITESPACE"," ",364],["T_VARIABLE","$db",364],")",";",["T_WHITESPACE","\n    ",364],"}",["T_WHITESPACE","\n\n    ",365],["T_DOC_COMMENT","\/**\n     * Returns the maximum of the specified column values.\n     * @param string $q the column name or expression.\n     * Make sure you properly [quote](guide:db-dao#quoting-table-and-column-names) column names in the expression.\n     * @param Connection $db the database connection used to generate the SQL statement.\n     * If this parameter is not given, the `db` application component will be used.\n     * @return mixed the maximum of the specified column values.\n     *\/",367],["T_WHITESPACE","\n    ",374],["T_PUBLIC","public",375],["T_WHITESPACE"," ",375],["T_FUNCTION","function",375],["T_WHITESPACE"," ",375],["T_STRING","max",375],"(",["T_VARIABLE","$q",375],",",["T_WHITESPACE"," ",375],["T_VARIABLE","$db",375],["T_WHITESPACE"," ",375],"=",["T_WHITESPACE"," ",375],["T_STRING","null",375],")",["T_WHITESPACE","\n    ",375],"{",["T_WHITESPACE","\n        ",376],["T_RETURN","return",377],["T_WHITESPACE"," ",377],["T_VARIABLE","$this",377],["T_OBJECT_OPERATOR","->",377],["T_STRING","queryScalar",377],"(","\"",["T_ENCAPSED_AND_WHITESPACE","MAX(",377],["T_VARIABLE","$q",377],["T_ENCAPSED_AND_WHITESPACE",")",377],"\"",",",["T_WHITESPACE"," ",377],["T_VARIABLE","$db",377],")",";",["T_WHITESPACE","\n    ",377],"}",["T_WHITESPACE","\n\n    ",378],["T_DOC_COMMENT","\/**\n     * Returns a value indicating whether the query result contains any row of data.\n     * @param Connection $db the database connection used to generate the SQL statement.\n     * If this parameter is not given, the `db` application component will be used.\n     * @return bool whether the query result contains any row of data.\n     *\/",380],["T_WHITESPACE","\n    ",385],["T_PUBLIC","public",386],["T_WHITESPACE"," ",386],["T_FUNCTION","function",386],["T_WHITESPACE"," ",386],["T_STRING","exists",386],"(",["T_VARIABLE","$db",386],["T_WHITESPACE"," ",386],"=",["T_WHITESPACE"," ",386],["T_STRING","null",386],")",["T_WHITESPACE","\n    ",386],"{",["T_WHITESPACE","\n        ",387],["T_IF","if",388],["T_WHITESPACE"," ",388],"(",["T_VARIABLE","$this",388],["T_OBJECT_OPERATOR","->",388],["T_STRING","emulateExecution",388],")",["T_WHITESPACE"," ",388],"{",["T_WHITESPACE","\n            ",388],["T_RETURN","return",389],["T_WHITESPACE"," ",389],["T_STRING","false",389],";",["T_WHITESPACE","\n        ",389],"}",["T_WHITESPACE","\n        ",390],["T_VARIABLE","$command",391],["T_WHITESPACE"," ",391],"=",["T_WHITESPACE"," ",391],["T_VARIABLE","$this",391],["T_OBJECT_OPERATOR","->",391],["T_STRING","createCommand",391],"(",["T_VARIABLE","$db",391],")",";",["T_WHITESPACE","\n        ",391],["T_VARIABLE","$params",392],["T_WHITESPACE"," ",392],"=",["T_WHITESPACE"," ",392],["T_VARIABLE","$command",392],["T_OBJECT_OPERATOR","->",392],["T_STRING","params",392],";",["T_WHITESPACE","\n        ",392],["T_VARIABLE","$command",393],["T_OBJECT_OPERATOR","->",393],["T_STRING","setSql",393],"(",["T_VARIABLE","$command",393],["T_OBJECT_OPERATOR","->",393],["T_STRING","db",393],["T_OBJECT_OPERATOR","->",393],["T_STRING","getQueryBuilder",393],"(",")",["T_OBJECT_OPERATOR","->",393],["T_STRING","selectExists",393],"(",["T_VARIABLE","$command",393],["T_OBJECT_OPERATOR","->",393],["T_STRING","getSql",393],"(",")",")",")",";",["T_WHITESPACE","\n        ",393],["T_VARIABLE","$command",394],["T_OBJECT_OPERATOR","->",394],["T_STRING","bindValues",394],"(",["T_VARIABLE","$params",394],")",";",["T_WHITESPACE","\n        ",394],["T_RETURN","return",395],["T_WHITESPACE"," ",395],["T_BOOL_CAST","(bool)",395],["T_WHITESPACE"," ",395],["T_VARIABLE","$command",395],["T_OBJECT_OPERATOR","->",395],["T_STRING","queryScalar",395],"(",")",";",["T_WHITESPACE","\n    ",395],"}",["T_WHITESPACE","\n\n    ",396],["T_DOC_COMMENT","\/**\n     * Queries a scalar value by setting [[select]] first.\n     * Restores the value of select to make this query reusable.\n     * @param string|Expression $selectExpression\n     * @param Connection|null $db\n     * @return bool|string\n     *\/",398],["T_WHITESPACE","\n    ",404],["T_PROTECTED","protected",405],["T_WHITESPACE"," ",405],["T_FUNCTION","function",405],["T_WHITESPACE"," ",405],["T_STRING","queryScalar",405],"(",["T_VARIABLE","$selectExpression",405],",",["T_WHITESPACE"," ",405],["T_VARIABLE","$db",405],")",["T_WHITESPACE","\n    ",405],"{",["T_WHITESPACE","\n        ",406],["T_IF","if",407],["T_WHITESPACE"," ",407],"(",["T_VARIABLE","$this",407],["T_OBJECT_OPERATOR","->",407],["T_STRING","emulateExecution",407],")",["T_WHITESPACE"," ",407],"{",["T_WHITESPACE","\n            ",407],["T_RETURN","return",408],["T_WHITESPACE"," ",408],["T_STRING","null",408],";",["T_WHITESPACE","\n        ",408],"}",["T_WHITESPACE","\n\n        ",409],["T_VARIABLE","$select",411],["T_WHITESPACE"," ",411],"=",["T_WHITESPACE"," ",411],["T_VARIABLE","$this",411],["T_OBJECT_OPERATOR","->",411],["T_STRING","select",411],";",["T_WHITESPACE","\n        ",411],["T_VARIABLE","$limit",412],["T_WHITESPACE"," ",412],"=",["T_WHITESPACE"," ",412],["T_VARIABLE","$this",412],["T_OBJECT_OPERATOR","->",412],["T_STRING","limit",412],";",["T_WHITESPACE","\n        ",412],["T_VARIABLE","$offset",413],["T_WHITESPACE"," ",413],"=",["T_WHITESPACE"," ",413],["T_VARIABLE","$this",413],["T_OBJECT_OPERATOR","->",413],["T_STRING","offset",413],";",["T_WHITESPACE","\n\n        ",413],["T_VARIABLE","$this",415],["T_OBJECT_OPERATOR","->",415],["T_STRING","select",415],["T_WHITESPACE"," ",415],"=",["T_WHITESPACE"," ",415],"[",["T_VARIABLE","$selectExpression",415],"]",";",["T_WHITESPACE","\n        ",415],["T_VARIABLE","$this",416],["T_OBJECT_OPERATOR","->",416],["T_STRING","limit",416],["T_WHITESPACE"," ",416],"=",["T_WHITESPACE"," ",416],["T_STRING","null",416],";",["T_WHITESPACE","\n        ",416],["T_VARIABLE","$this",417],["T_OBJECT_OPERATOR","->",417],["T_STRING","offset",417],["T_WHITESPACE"," ",417],"=",["T_WHITESPACE"," ",417],["T_STRING","null",417],";",["T_WHITESPACE","\n        ",417],["T_VARIABLE","$command",418],["T_WHITESPACE"," ",418],"=",["T_WHITESPACE"," ",418],["T_VARIABLE","$this",418],["T_OBJECT_OPERATOR","->",418],["T_STRING","createCommand",418],"(",["T_VARIABLE","$db",418],")",";",["T_WHITESPACE","\n\n        ",418],["T_VARIABLE","$this",420],["T_OBJECT_OPERATOR","->",420],["T_STRING","select",420],["T_WHITESPACE"," ",420],"=",["T_WHITESPACE"," ",420],["T_VARIABLE","$select",420],";",["T_WHITESPACE","\n        ",420],["T_VARIABLE","$this",421],["T_OBJECT_OPERATOR","->",421],["T_STRING","limit",421],["T_WHITESPACE"," ",421],"=",["T_WHITESPACE"," ",421],["T_VARIABLE","$limit",421],";",["T_WHITESPACE","\n        ",421],["T_VARIABLE","$this",422],["T_OBJECT_OPERATOR","->",422],["T_STRING","offset",422],["T_WHITESPACE"," ",422],"=",["T_WHITESPACE"," ",422],["T_VARIABLE","$offset",422],";",["T_WHITESPACE","\n\n        ",422],["T_IF","if",424],["T_WHITESPACE"," ",424],"(",["T_WHITESPACE","\n            ",424],"!",["T_VARIABLE","$this",425],["T_OBJECT_OPERATOR","->",425],["T_STRING","distinct",425],["T_WHITESPACE","\n            ",425],["T_BOOLEAN_AND","&&",426],["T_WHITESPACE"," ",426],["T_EMPTY","empty",426],"(",["T_VARIABLE","$this",426],["T_OBJECT_OPERATOR","->",426],["T_STRING","groupBy",426],")",["T_WHITESPACE","\n            ",426],["T_BOOLEAN_AND","&&",427],["T_WHITESPACE"," ",427],["T_EMPTY","empty",427],"(",["T_VARIABLE","$this",427],["T_OBJECT_OPERATOR","->",427],["T_STRING","having",427],")",["T_WHITESPACE","\n            ",427],["T_BOOLEAN_AND","&&",428],["T_WHITESPACE"," ",428],["T_EMPTY","empty",428],"(",["T_VARIABLE","$this",428],["T_OBJECT_OPERATOR","->",428],["T_STRING","union",428],")",["T_WHITESPACE","\n            ",428],["T_BOOLEAN_AND","&&",429],["T_WHITESPACE"," ",429],["T_EMPTY","empty",429],"(",["T_VARIABLE","$this",429],["T_OBJECT_OPERATOR","->",429],["T_STRING","orderBy",429],")",["T_WHITESPACE","\n        ",429],")",["T_WHITESPACE"," ",430],"{",["T_WHITESPACE","\n            ",430],["T_RETURN","return",431],["T_WHITESPACE"," ",431],["T_VARIABLE","$command",431],["T_OBJECT_OPERATOR","->",431],["T_STRING","queryScalar",431],"(",")",";",["T_WHITESPACE","\n        ",431],"}",["T_WHITESPACE"," ",432],["T_ELSE","else",432],["T_WHITESPACE"," ",432],"{",["T_WHITESPACE","\n            ",432],["T_RETURN","return",433],["T_WHITESPACE"," ",433],"(",["T_NEW","new",433],["T_WHITESPACE"," ",433],["T_STRING","Query",433],")",["T_OBJECT_OPERATOR","->",433],["T_STRING","select",433],"(","[",["T_VARIABLE","$selectExpression",433],"]",")",["T_WHITESPACE","\n                ",433],["T_OBJECT_OPERATOR","->",434],["T_STRING","from",434],"(","[",["T_CONSTANT_ENCAPSED_STRING","'c'",434],["T_WHITESPACE"," ",434],["T_DOUBLE_ARROW","=>",434],["T_WHITESPACE"," ",434],["T_VARIABLE","$this",434],"]",")",["T_WHITESPACE","\n                ",434],["T_OBJECT_OPERATOR","->",435],["T_STRING","createCommand",435],"(",["T_VARIABLE","$command",435],["T_OBJECT_OPERATOR","->",435],["T_STRING","db",435],")",["T_WHITESPACE","\n                ",435],["T_OBJECT_OPERATOR","->",436],["T_STRING","queryScalar",436],"(",")",";",["T_WHITESPACE","\n        ",436],"}",["T_WHITESPACE","\n    ",437],"}",["T_WHITESPACE","\n\n    ",438],["T_DOC_COMMENT","\/**\n     * Sets the SELECT part of the query.\n     * @param string|array|Expression $columns the columns to be selected.\n     * Columns can be specified in either a string (e.g. \"id, name\") or an array (e.g. ['id', 'name']).\n     * Columns can be prefixed with table names (e.g. \"user.id\") and\/or contain column aliases (e.g. \"user.id AS user_id\").\n     * The method will automatically quote the column names unless a column contains some parenthesis\n     * (which means the column contains a DB expression). A DB expression may also be passed in form of\n     * an [[Expression]] object.\n     *\n     * Note that if you are selecting an expression like `CONCAT(first_name, ' ', last_name)`, you should\n     * use an array to specify the columns. Otherwise, the expression may be incorrectly split into several parts.\n     *\n     * When the columns are specified as an array, you may also use array keys as the column aliases (if a column\n     * does not need alias, do not use a string key).\n     *\n     * Starting from version 2.0.1, you may also select sub-queries as columns by specifying each such column\n     * as a `Query` instance representing the sub-query.\n     *\n     * @param string $option additional option that should be appended to the 'SELECT' keyword. For example,\n     * in MySQL, the option 'SQL_CALC_FOUND_ROWS' can be used.\n     * @return $this the query object itself\n     *\/",440],["T_WHITESPACE","\n    ",461],["T_PUBLIC","public",462],["T_WHITESPACE"," ",462],["T_FUNCTION","function",462],["T_WHITESPACE"," ",462],["T_STRING","select",462],"(",["T_VARIABLE","$columns",462],",",["T_WHITESPACE"," ",462],["T_VARIABLE","$option",462],["T_WHITESPACE"," ",462],"=",["T_WHITESPACE"," ",462],["T_STRING","null",462],")",["T_WHITESPACE","\n    ",462],"{",["T_WHITESPACE","\n        ",463],["T_IF","if",464],["T_WHITESPACE"," ",464],"(",["T_VARIABLE","$columns",464],["T_WHITESPACE"," ",464],["T_INSTANCEOF","instanceof",464],["T_WHITESPACE"," ",464],["T_STRING","Expression",464],")",["T_WHITESPACE"," ",464],"{",["T_WHITESPACE","\n            ",464],["T_VARIABLE","$columns",465],["T_WHITESPACE"," ",465],"=",["T_WHITESPACE"," ",465],"[",["T_VARIABLE","$columns",465],"]",";",["T_WHITESPACE","\n        ",465],"}",["T_WHITESPACE"," ",466],["T_ELSEIF","elseif",466],["T_WHITESPACE"," ",466],"(","!",["T_STRING","is_array",466],"(",["T_VARIABLE","$columns",466],")",")",["T_WHITESPACE"," ",466],"{",["T_WHITESPACE","\n            ",466],["T_VARIABLE","$columns",467],["T_WHITESPACE"," ",467],"=",["T_WHITESPACE"," ",467],["T_STRING","preg_split",467],"(",["T_CONSTANT_ENCAPSED_STRING","'\/\\s*,\\s*\/'",467],",",["T_WHITESPACE"," ",467],["T_STRING","trim",467],"(",["T_VARIABLE","$columns",467],")",",",["T_WHITESPACE"," ",467],"-",["T_LNUMBER","1",467],",",["T_WHITESPACE"," ",467],["T_STRING","PREG_SPLIT_NO_EMPTY",467],")",";",["T_WHITESPACE","\n        ",467],"}",["T_WHITESPACE","\n        ",468],["T_VARIABLE","$this",469],["T_OBJECT_OPERATOR","->",469],["T_STRING","select",469],["T_WHITESPACE"," ",469],"=",["T_WHITESPACE"," ",469],["T_VARIABLE","$columns",469],";",["T_WHITESPACE","\n        ",469],["T_VARIABLE","$this",470],["T_OBJECT_OPERATOR","->",470],["T_STRING","selectOption",470],["T_WHITESPACE"," ",470],"=",["T_WHITESPACE"," ",470],["T_VARIABLE","$option",470],";",["T_WHITESPACE","\n        ",470],["T_RETURN","return",471],["T_WHITESPACE"," ",471],["T_VARIABLE","$this",471],";",["T_WHITESPACE","\n    ",471],"}",["T_WHITESPACE","\n\n    ",472],["T_DOC_COMMENT","\/**\n     * Add more columns to the SELECT part of the query.\n     *\n     * Note, that if [[select]] has not been specified before, you should include `*` explicitly\n     * if you want to select all remaining columns too:\n     *\n     * ```php\n     * $query->addSelect([\"*\", \"CONCAT(first_name, ' ', last_name) AS full_name\"])->one();\n     * ```\n     *\n     * @param string|array|Expression $columns the columns to add to the select. See [[select()]] for more\n     * details about the format of this parameter.\n     * @return $this the query object itself\n     * @see select()\n     *\/",474],["T_WHITESPACE","\n    ",488],["T_PUBLIC","public",489],["T_WHITESPACE"," ",489],["T_FUNCTION","function",489],["T_WHITESPACE"," ",489],["T_STRING","addSelect",489],"(",["T_VARIABLE","$columns",489],")",["T_WHITESPACE","\n    ",489],"{",["T_WHITESPACE","\n        ",490],["T_IF","if",491],["T_WHITESPACE"," ",491],"(",["T_VARIABLE","$columns",491],["T_WHITESPACE"," ",491],["T_INSTANCEOF","instanceof",491],["T_WHITESPACE"," ",491],["T_STRING","Expression",491],")",["T_WHITESPACE"," ",491],"{",["T_WHITESPACE","\n            ",491],["T_VARIABLE","$columns",492],["T_WHITESPACE"," ",492],"=",["T_WHITESPACE"," ",492],"[",["T_VARIABLE","$columns",492],"]",";",["T_WHITESPACE","\n        ",492],"}",["T_WHITESPACE"," ",493],["T_ELSEIF","elseif",493],["T_WHITESPACE"," ",493],"(","!",["T_STRING","is_array",493],"(",["T_VARIABLE","$columns",493],")",")",["T_WHITESPACE"," ",493],"{",["T_WHITESPACE","\n            ",493],["T_VARIABLE","$columns",494],["T_WHITESPACE"," ",494],"=",["T_WHITESPACE"," ",494],["T_STRING","preg_split",494],"(",["T_CONSTANT_ENCAPSED_STRING","'\/\\s*,\\s*\/'",494],",",["T_WHITESPACE"," ",494],["T_STRING","trim",494],"(",["T_VARIABLE","$columns",494],")",",",["T_WHITESPACE"," ",494],"-",["T_LNUMBER","1",494],",",["T_WHITESPACE"," ",494],["T_STRING","PREG_SPLIT_NO_EMPTY",494],")",";",["T_WHITESPACE","\n        ",494],"}",["T_WHITESPACE","\n        ",495],["T_IF","if",496],["T_WHITESPACE"," ",496],"(",["T_VARIABLE","$this",496],["T_OBJECT_OPERATOR","->",496],["T_STRING","select",496],["T_WHITESPACE"," ",496],["T_IS_IDENTICAL","===",496],["T_WHITESPACE"," ",496],["T_STRING","null",496],")",["T_WHITESPACE"," ",496],"{",["T_WHITESPACE","\n            ",496],["T_VARIABLE","$this",497],["T_OBJECT_OPERATOR","->",497],["T_STRING","select",497],["T_WHITESPACE"," ",497],"=",["T_WHITESPACE"," ",497],["T_VARIABLE","$columns",497],";",["T_WHITESPACE","\n        ",497],"}",["T_WHITESPACE"," ",498],["T_ELSE","else",498],["T_WHITESPACE"," ",498],"{",["T_WHITESPACE","\n            ",498],["T_VARIABLE","$this",499],["T_OBJECT_OPERATOR","->",499],["T_STRING","select",499],["T_WHITESPACE"," ",499],"=",["T_WHITESPACE"," ",499],["T_STRING","array_merge",499],"(",["T_VARIABLE","$this",499],["T_OBJECT_OPERATOR","->",499],["T_STRING","select",499],",",["T_WHITESPACE"," ",499],["T_VARIABLE","$columns",499],")",";",["T_WHITESPACE","\n        ",499],"}",["T_WHITESPACE","\n        ",500],["T_RETURN","return",501],["T_WHITESPACE"," ",501],["T_VARIABLE","$this",501],";",["T_WHITESPACE","\n    ",501],"}",["T_WHITESPACE","\n\n    ",502],["T_DOC_COMMENT","\/**\n     * Sets the value indicating whether to SELECT DISTINCT or not.\n     * @param bool $value whether to SELECT DISTINCT or not.\n     * @return $this the query object itself\n     *\/",504],["T_WHITESPACE","\n    ",508],["T_PUBLIC","public",509],["T_WHITESPACE"," ",509],["T_FUNCTION","function",509],["T_WHITESPACE"," ",509],["T_STRING","distinct",509],"(",["T_VARIABLE","$value",509],["T_WHITESPACE"," ",509],"=",["T_WHITESPACE"," ",509],["T_STRING","true",509],")",["T_WHITESPACE","\n    ",509],"{",["T_WHITESPACE","\n        ",510],["T_VARIABLE","$this",511],["T_OBJECT_OPERATOR","->",511],["T_STRING","distinct",511],["T_WHITESPACE"," ",511],"=",["T_WHITESPACE"," ",511],["T_VARIABLE","$value",511],";",["T_WHITESPACE","\n        ",511],["T_RETURN","return",512],["T_WHITESPACE"," ",512],["T_VARIABLE","$this",512],";",["T_WHITESPACE","\n    ",512],"}",["T_WHITESPACE","\n\n    ",513],["T_DOC_COMMENT","\/**\n     * Sets the FROM part of the query.\n     * @param string|array $tables the table(s) to be selected from. This can be either a string (e.g. `'user'`)\n     * or an array (e.g. `['user', 'profile']`) specifying one or several table names.\n     * Table names can contain schema prefixes (e.g. `'public.user'`) and\/or table aliases (e.g. `'user u'`).\n     * The method will automatically quote the table names unless it contains some parenthesis\n     * (which means the table is given as a sub-query or DB expression).\n     *\n     * When the tables are specified as an array, you may also use the array keys as the table aliases\n     * (if a table does not need alias, do not use a string key).\n     *\n     * Use a Query object to represent a sub-query. In this case, the corresponding array key will be used\n     * as the alias for the sub-query.\n     *\n     * Here are some examples:\n     *\n     * ```php\n     * \/\/ SELECT * FROM  `user` `u`, `profile`;\n     * $query = (new \\yii\\db\\Query)->from(['u' => 'user', 'profile']);\n     *\n     * \/\/ SELECT * FROM (SELECT * FROM `user` WHERE `active` = 1) `activeusers`;\n     * $subquery = (new \\yii\\db\\Query)->from('user')->where(['active' => true])\n     * $query = (new \\yii\\db\\Query)->from(['activeusers' => $subquery]);\n     *\n     * \/\/ subquery can also be a string with plain SQL wrapped in parenthesis\n     * \/\/ SELECT * FROM (SELECT * FROM `user` WHERE `active` = 1) `activeusers`;\n     * $subquery = \"(SELECT * FROM `user` WHERE `active` = 1)\";\n     * $query = (new \\yii\\db\\Query)->from(['activeusers' => $subquery]);\n     * ```\n     *\n     * @return $this the query object itself\n     *\/",515],["T_WHITESPACE","\n    ",546],["T_PUBLIC","public",547],["T_WHITESPACE"," ",547],["T_FUNCTION","function",547],["T_WHITESPACE"," ",547],["T_STRING","from",547],"(",["T_VARIABLE","$tables",547],")",["T_WHITESPACE","\n    ",547],"{",["T_WHITESPACE","\n        ",548],["T_IF","if",549],["T_WHITESPACE"," ",549],"(","!",["T_STRING","is_array",549],"(",["T_VARIABLE","$tables",549],")",")",["T_WHITESPACE"," ",549],"{",["T_WHITESPACE","\n            ",549],["T_VARIABLE","$tables",550],["T_WHITESPACE"," ",550],"=",["T_WHITESPACE"," ",550],["T_STRING","preg_split",550],"(",["T_CONSTANT_ENCAPSED_STRING","'\/\\s*,\\s*\/'",550],",",["T_WHITESPACE"," ",550],["T_STRING","trim",550],"(",["T_VARIABLE","$tables",550],")",",",["T_WHITESPACE"," ",550],"-",["T_LNUMBER","1",550],",",["T_WHITESPACE"," ",550],["T_STRING","PREG_SPLIT_NO_EMPTY",550],")",";",["T_WHITESPACE","\n        ",550],"}",["T_WHITESPACE","\n        ",551],["T_VARIABLE","$this",552],["T_OBJECT_OPERATOR","->",552],["T_STRING","from",552],["T_WHITESPACE"," ",552],"=",["T_WHITESPACE"," ",552],["T_VARIABLE","$tables",552],";",["T_WHITESPACE","\n        ",552],["T_RETURN","return",553],["T_WHITESPACE"," ",553],["T_VARIABLE","$this",553],";",["T_WHITESPACE","\n    ",553],"}",["T_WHITESPACE","\n\n    ",554],["T_DOC_COMMENT","\/**\n     * Sets the WHERE part of the query.\n     *\n     * The method requires a `$condition` parameter, and optionally a `$params` parameter\n     * specifying the values to be bound to the query.\n     *\n     * The `$condition` parameter should be either a string (e.g. `'id=1'`) or an array.\n     *\n     * @inheritdoc\n     *\n     * @param string|array|Expression $condition the conditions that should be put in the WHERE part.\n     * @param array $params the parameters (name => value) to be bound to the query.\n     * @return $this the query object itself\n     * @see andWhere()\n     * @see orWhere()\n     * @see QueryInterface::where()\n     *\/",556],["T_WHITESPACE","\n    ",572],["T_PUBLIC","public",573],["T_WHITESPACE"," ",573],["T_FUNCTION","function",573],["T_WHITESPACE"," ",573],["T_STRING","where",573],"(",["T_VARIABLE","$condition",573],",",["T_WHITESPACE"," ",573],["T_VARIABLE","$params",573],["T_WHITESPACE"," ",573],"=",["T_WHITESPACE"," ",573],"[","]",")",["T_WHITESPACE","\n    ",573],"{",["T_WHITESPACE","\n        ",574],["T_VARIABLE","$this",575],["T_OBJECT_OPERATOR","->",575],["T_STRING","where",575],["T_WHITESPACE"," ",575],"=",["T_WHITESPACE"," ",575],["T_VARIABLE","$condition",575],";",["T_WHITESPACE","\n        ",575],["T_VARIABLE","$this",576],["T_OBJECT_OPERATOR","->",576],["T_STRING","addParams",576],"(",["T_VARIABLE","$params",576],")",";",["T_WHITESPACE","\n        ",576],["T_RETURN","return",577],["T_WHITESPACE"," ",577],["T_VARIABLE","$this",577],";",["T_WHITESPACE","\n    ",577],"}",["T_WHITESPACE","\n\n    ",578],["T_DOC_COMMENT","\/**\n     * Adds an additional WHERE condition to the existing one.\n     * The new condition and the existing one will be joined using the `AND` operator.\n     * @param string|array|Expression $condition the new WHERE condition. Please refer to [[where()]]\n     * on how to specify this parameter.\n     * @param array $params the parameters (name => value) to be bound to the query.\n     * @return $this the query object itself\n     * @see where()\n     * @see orWhere()\n     *\/",580],["T_WHITESPACE","\n    ",589],["T_PUBLIC","public",590],["T_WHITESPACE"," ",590],["T_FUNCTION","function",590],["T_WHITESPACE"," ",590],["T_STRING","andWhere",590],"(",["T_VARIABLE","$condition",590],",",["T_WHITESPACE"," ",590],["T_VARIABLE","$params",590],["T_WHITESPACE"," ",590],"=",["T_WHITESPACE"," ",590],"[","]",")",["T_WHITESPACE","\n    ",590],"{",["T_WHITESPACE","\n        ",591],["T_IF","if",592],["T_WHITESPACE"," ",592],"(",["T_VARIABLE","$this",592],["T_OBJECT_OPERATOR","->",592],["T_STRING","where",592],["T_WHITESPACE"," ",592],["T_IS_IDENTICAL","===",592],["T_WHITESPACE"," ",592],["T_STRING","null",592],")",["T_WHITESPACE"," ",592],"{",["T_WHITESPACE","\n            ",592],["T_VARIABLE","$this",593],["T_OBJECT_OPERATOR","->",593],["T_STRING","where",593],["T_WHITESPACE"," ",593],"=",["T_WHITESPACE"," ",593],["T_VARIABLE","$condition",593],";",["T_WHITESPACE","\n        ",593],"}",["T_WHITESPACE"," ",594],["T_ELSEIF","elseif",594],["T_WHITESPACE"," ",594],"(",["T_STRING","is_array",594],"(",["T_VARIABLE","$this",594],["T_OBJECT_OPERATOR","->",594],["T_STRING","where",594],")",["T_WHITESPACE"," ",594],["T_BOOLEAN_AND","&&",594],["T_WHITESPACE"," ",594],["T_ISSET","isset",594],"(",["T_VARIABLE","$this",594],["T_OBJECT_OPERATOR","->",594],["T_STRING","where",594],"[",["T_LNUMBER","0",594],"]",")",["T_WHITESPACE"," ",594],["T_BOOLEAN_AND","&&",594],["T_WHITESPACE"," ",594],["T_STRING","strcasecmp",594],"(",["T_VARIABLE","$this",594],["T_OBJECT_OPERATOR","->",594],["T_STRING","where",594],"[",["T_LNUMBER","0",594],"]",",",["T_WHITESPACE"," ",594],["T_CONSTANT_ENCAPSED_STRING","'and'",594],")",["T_WHITESPACE"," ",594],["T_IS_IDENTICAL","===",594],["T_WHITESPACE"," ",594],["T_LNUMBER","0",594],")",["T_WHITESPACE"," ",594],"{",["T_WHITESPACE","\n            ",594],["T_VARIABLE","$this",595],["T_OBJECT_OPERATOR","->",595],["T_STRING","where",595],"[","]",["T_WHITESPACE"," ",595],"=",["T_WHITESPACE"," ",595],["T_VARIABLE","$condition",595],";",["T_WHITESPACE","\n        ",595],"}",["T_WHITESPACE"," ",596],["T_ELSE","else",596],["T_WHITESPACE"," ",596],"{",["T_WHITESPACE","\n            ",596],["T_VARIABLE","$this",597],["T_OBJECT_OPERATOR","->",597],["T_STRING","where",597],["T_WHITESPACE"," ",597],"=",["T_WHITESPACE"," ",597],"[",["T_CONSTANT_ENCAPSED_STRING","'and'",597],",",["T_WHITESPACE"," ",597],["T_VARIABLE","$this",597],["T_OBJECT_OPERATOR","->",597],["T_STRING","where",597],",",["T_WHITESPACE"," ",597],["T_VARIABLE","$condition",597],"]",";",["T_WHITESPACE","\n        ",597],"}",["T_WHITESPACE","\n        ",598],["T_VARIABLE","$this",599],["T_OBJECT_OPERATOR","->",599],["T_STRING","addParams",599],"(",["T_VARIABLE","$params",599],")",";",["T_WHITESPACE","\n        ",599],["T_RETURN","return",600],["T_WHITESPACE"," ",600],["T_VARIABLE","$this",600],";",["T_WHITESPACE","\n    ",600],"}",["T_WHITESPACE","\n\n    ",601],["T_DOC_COMMENT","\/**\n     * Adds an additional WHERE condition to the existing one.\n     * The new condition and the existing one will be joined using the `OR` operator.\n     * @param string|array|Expression $condition the new WHERE condition. Please refer to [[where()]]\n     * on how to specify this parameter.\n     * @param array $params the parameters (name => value) to be bound to the query.\n     * @return $this the query object itself\n     * @see where()\n     * @see andWhere()\n     *\/",603],["T_WHITESPACE","\n    ",612],["T_PUBLIC","public",613],["T_WHITESPACE"," ",613],["T_FUNCTION","function",613],["T_WHITESPACE"," ",613],["T_STRING","orWhere",613],"(",["T_VARIABLE","$condition",613],",",["T_WHITESPACE"," ",613],["T_VARIABLE","$params",613],["T_WHITESPACE"," ",613],"=",["T_WHITESPACE"," ",613],"[","]",")",["T_WHITESPACE","\n    ",613],"{",["T_WHITESPACE","\n        ",614],["T_IF","if",615],["T_WHITESPACE"," ",615],"(",["T_VARIABLE","$this",615],["T_OBJECT_OPERATOR","->",615],["T_STRING","where",615],["T_WHITESPACE"," ",615],["T_IS_IDENTICAL","===",615],["T_WHITESPACE"," ",615],["T_STRING","null",615],")",["T_WHITESPACE"," ",615],"{",["T_WHITESPACE","\n            ",615],["T_VARIABLE","$this",616],["T_OBJECT_OPERATOR","->",616],["T_STRING","where",616],["T_WHITESPACE"," ",616],"=",["T_WHITESPACE"," ",616],["T_VARIABLE","$condition",616],";",["T_WHITESPACE","\n        ",616],"}",["T_WHITESPACE"," ",617],["T_ELSE","else",617],["T_WHITESPACE"," ",617],"{",["T_WHITESPACE","\n            ",617],["T_VARIABLE","$this",618],["T_OBJECT_OPERATOR","->",618],["T_STRING","where",618],["T_WHITESPACE"," ",618],"=",["T_WHITESPACE"," ",618],"[",["T_CONSTANT_ENCAPSED_STRING","'or'",618],",",["T_WHITESPACE"," ",618],["T_VARIABLE","$this",618],["T_OBJECT_OPERATOR","->",618],["T_STRING","where",618],",",["T_WHITESPACE"," ",618],["T_VARIABLE","$condition",618],"]",";",["T_WHITESPACE","\n        ",618],"}",["T_WHITESPACE","\n        ",619],["T_VARIABLE","$this",620],["T_OBJECT_OPERATOR","->",620],["T_STRING","addParams",620],"(",["T_VARIABLE","$params",620],")",";",["T_WHITESPACE","\n        ",620],["T_RETURN","return",621],["T_WHITESPACE"," ",621],["T_VARIABLE","$this",621],";",["T_WHITESPACE","\n    ",621],"}",["T_WHITESPACE","\n\n    ",622],["T_DOC_COMMENT","\/**\n     * Adds a filtering condition for a specific column and allow the user to choose a filter operator.\n     *\n     * It adds an additional WHERE condition for the given field and determines the comparison operator\n     * based on the first few characters of the given value.\n     * The condition is added in the same way as in [[andFilterWhere]] so [[isEmpty()|empty values]] are ignored.\n     * The new condition and the existing one will be joined using the `AND` operator.\n     *\n     * The comparison operator is intelligently determined based on the first few characters in the given value.\n     * In particular, it recognizes the following operators if they appear as the leading characters in the given value:\n     *\n     * - `<`: the column must be less than the given value.\n     * - `>`: the column must be greater than the given value.\n     * - `<=`: the column must be less than or equal to the given value.\n     * - `>=`: the column must be greater than or equal to the given value.\n     * - `<>`: the column must not be the same as the given value.\n     * - `=`: the column must be equal to the given value.\n     * - If none of the above operators is detected, the `$defaultOperator` will be used.\n     *\n     * @param string $name the column name.\n     * @param string $value the column value optionally prepended with the comparison operator.\n     * @param string $defaultOperator The operator to use, when no operator is given in `$value`.\n     * Defaults to `=`, performing an exact match.\n     * @return $this The query object itself\n     * @since 2.0.8\n     *\/",624],["T_WHITESPACE","\n    ",649],["T_PUBLIC","public",650],["T_WHITESPACE"," ",650],["T_FUNCTION","function",650],["T_WHITESPACE"," ",650],["T_STRING","andFilterCompare",650],"(",["T_VARIABLE","$name",650],",",["T_WHITESPACE"," ",650],["T_VARIABLE","$value",650],",",["T_WHITESPACE"," ",650],["T_VARIABLE","$defaultOperator",650],["T_WHITESPACE"," ",650],"=",["T_WHITESPACE"," ",650],["T_CONSTANT_ENCAPSED_STRING","'='",650],")",["T_WHITESPACE","\n    ",650],"{",["T_WHITESPACE","\n        ",651],["T_IF","if",652],["T_WHITESPACE"," ",652],"(",["T_STRING","preg_match",652],"(",["T_CONSTANT_ENCAPSED_STRING","'\/^(<>|>=|>|<=|<|=)\/'",652],",",["T_WHITESPACE"," ",652],["T_VARIABLE","$value",652],",",["T_WHITESPACE"," ",652],["T_VARIABLE","$matches",652],")",")",["T_WHITESPACE"," ",652],"{",["T_WHITESPACE","\n            ",652],["T_VARIABLE","$operator",653],["T_WHITESPACE"," ",653],"=",["T_WHITESPACE"," ",653],["T_VARIABLE","$matches",653],"[",["T_LNUMBER","1",653],"]",";",["T_WHITESPACE","\n            ",653],["T_VARIABLE","$value",654],["T_WHITESPACE"," ",654],"=",["T_WHITESPACE"," ",654],["T_STRING","substr",654],"(",["T_VARIABLE","$value",654],",",["T_WHITESPACE"," ",654],["T_STRING","strlen",654],"(",["T_VARIABLE","$operator",654],")",")",";",["T_WHITESPACE","\n        ",654],"}",["T_WHITESPACE"," ",655],["T_ELSE","else",655],["T_WHITESPACE"," ",655],"{",["T_WHITESPACE","\n            ",655],["T_VARIABLE","$operator",656],["T_WHITESPACE"," ",656],"=",["T_WHITESPACE"," ",656],["T_VARIABLE","$defaultOperator",656],";",["T_WHITESPACE","\n        ",656],"}",["T_WHITESPACE","\n        ",657],["T_RETURN","return",658],["T_WHITESPACE"," ",658],["T_VARIABLE","$this",658],["T_OBJECT_OPERATOR","->",658],["T_STRING","andFilterWhere",658],"(","[",["T_VARIABLE","$operator",658],",",["T_WHITESPACE"," ",658],["T_VARIABLE","$name",658],",",["T_WHITESPACE"," ",658],["T_VARIABLE","$value",658],"]",")",";",["T_WHITESPACE","\n    ",658],"}",["T_WHITESPACE","\n\n    ",659],["T_DOC_COMMENT","\/**\n     * Appends a JOIN part to the query.\n     * The first parameter specifies what type of join it is.\n     * @param string $type the type of join, such as INNER JOIN, LEFT JOIN.\n     * @param string|array $table the table to be joined.\n     *\n     * Use a string to represent the name of the table to be joined.\n     * The table name can contain a schema prefix (e.g. 'public.user') and\/or table alias (e.g. 'user u').\n     * The method will automatically quote the table name unless it contains some parenthesis\n     * (which means the table is given as a sub-query or DB expression).\n     *\n     * Use an array to represent joining with a sub-query. The array must contain only one element.\n     * The value must be a [[Query]] object representing the sub-query while the corresponding key\n     * represents the alias for the sub-query.\n     *\n     * @param string|array $on the join condition that should appear in the ON part.\n     * Please refer to [[where()]] on how to specify this parameter.\n     *\n     * Note that the array format of [[where()]] is designed to match columns to values instead of columns to columns, so\n     * the following would **not** work as expected: `['post.author_id' => 'user.id']`, it would\n     * match the `post.author_id` column value against the string `'user.id'`.\n     * It is recommended to use the string syntax here which is more suited for a join:\n     *\n     * ```php\n     * 'post.author_id = user.id'\n     * ```\n     *\n     * @param array $params the parameters (name => value) to be bound to the query.\n     * @return $this the query object itself\n     *\/",661],["T_WHITESPACE","\n    ",690],["T_PUBLIC","public",691],["T_WHITESPACE"," ",691],["T_FUNCTION","function",691],["T_WHITESPACE"," ",691],["T_STRING","join",691],"(",["T_VARIABLE","$type",691],",",["T_WHITESPACE"," ",691],["T_VARIABLE","$table",691],",",["T_WHITESPACE"," ",691],["T_VARIABLE","$on",691],["T_WHITESPACE"," ",691],"=",["T_WHITESPACE"," ",691],["T_CONSTANT_ENCAPSED_STRING","''",691],",",["T_WHITESPACE"," ",691],["T_VARIABLE","$params",691],["T_WHITESPACE"," ",691],"=",["T_WHITESPACE"," ",691],"[","]",")",["T_WHITESPACE","\n    ",691],"{",["T_WHITESPACE","\n        ",692],["T_VARIABLE","$this",693],["T_OBJECT_OPERATOR","->",693],["T_STRING","join",693],"[","]",["T_WHITESPACE"," ",693],"=",["T_WHITESPACE"," ",693],"[",["T_VARIABLE","$type",693],",",["T_WHITESPACE"," ",693],["T_VARIABLE","$table",693],",",["T_WHITESPACE"," ",693],["T_VARIABLE","$on",693],"]",";",["T_WHITESPACE","\n        ",693],["T_RETURN","return",694],["T_WHITESPACE"," ",694],["T_VARIABLE","$this",694],["T_OBJECT_OPERATOR","->",694],["T_STRING","addParams",694],"(",["T_VARIABLE","$params",694],")",";",["T_WHITESPACE","\n    ",694],"}",["T_WHITESPACE","\n\n    ",695],["T_DOC_COMMENT","\/**\n     * Appends an INNER JOIN part to the query.\n     * @param string|array $table the table to be joined.\n     *\n     * Use a string to represent the name of the table to be joined.\n     * The table name can contain a schema prefix (e.g. 'public.user') and\/or table alias (e.g. 'user u').\n     * The method will automatically quote the table name unless it contains some parenthesis\n     * (which means the table is given as a sub-query or DB expression).\n     *\n     * Use an array to represent joining with a sub-query. The array must contain only one element.\n     * The value must be a [[Query]] object representing the sub-query while the corresponding key\n     * represents the alias for the sub-query.\n     *\n     * @param string|array $on the join condition that should appear in the ON part.\n     * Please refer to [[join()]] on how to specify this parameter.\n     * @param array $params the parameters (name => value) to be bound to the query.\n     * @return $this the query object itself\n     *\/",697],["T_WHITESPACE","\n    ",714],["T_PUBLIC","public",715],["T_WHITESPACE"," ",715],["T_FUNCTION","function",715],["T_WHITESPACE"," ",715],["T_STRING","innerJoin",715],"(",["T_VARIABLE","$table",715],",",["T_WHITESPACE"," ",715],["T_VARIABLE","$on",715],["T_WHITESPACE"," ",715],"=",["T_WHITESPACE"," ",715],["T_CONSTANT_ENCAPSED_STRING","''",715],",",["T_WHITESPACE"," ",715],["T_VARIABLE","$params",715],["T_WHITESPACE"," ",715],"=",["T_WHITESPACE"," ",715],"[","]",")",["T_WHITESPACE","\n    ",715],"{",["T_WHITESPACE","\n        ",716],["T_VARIABLE","$this",717],["T_OBJECT_OPERATOR","->",717],["T_STRING","join",717],"[","]",["T_WHITESPACE"," ",717],"=",["T_WHITESPACE"," ",717],"[",["T_CONSTANT_ENCAPSED_STRING","'INNER JOIN'",717],",",["T_WHITESPACE"," ",717],["T_VARIABLE","$table",717],",",["T_WHITESPACE"," ",717],["T_VARIABLE","$on",717],"]",";",["T_WHITESPACE","\n        ",717],["T_RETURN","return",718],["T_WHITESPACE"," ",718],["T_VARIABLE","$this",718],["T_OBJECT_OPERATOR","->",718],["T_STRING","addParams",718],"(",["T_VARIABLE","$params",718],")",";",["T_WHITESPACE","\n    ",718],"}",["T_WHITESPACE","\n\n    ",719],["T_DOC_COMMENT","\/**\n     * Appends a LEFT OUTER JOIN part to the query.\n     * @param string|array $table the table to be joined.\n     *\n     * Use a string to represent the name of the table to be joined.\n     * The table name can contain a schema prefix (e.g. 'public.user') and\/or table alias (e.g. 'user u').\n     * The method will automatically quote the table name unless it contains some parenthesis\n     * (which means the table is given as a sub-query or DB expression).\n     *\n     * Use an array to represent joining with a sub-query. The array must contain only one element.\n     * The value must be a [[Query]] object representing the sub-query while the corresponding key\n     * represents the alias for the sub-query.\n     *\n     * @param string|array $on the join condition that should appear in the ON part.\n     * Please refer to [[join()]] on how to specify this parameter.\n     * @param array $params the parameters (name => value) to be bound to the query\n     * @return $this the query object itself\n     *\/",721],["T_WHITESPACE","\n    ",738],["T_PUBLIC","public",739],["T_WHITESPACE"," ",739],["T_FUNCTION","function",739],["T_WHITESPACE"," ",739],["T_STRING","leftJoin",739],"(",["T_VARIABLE","$table",739],",",["T_WHITESPACE"," ",739],["T_VARIABLE","$on",739],["T_WHITESPACE"," ",739],"=",["T_WHITESPACE"," ",739],["T_CONSTANT_ENCAPSED_STRING","''",739],",",["T_WHITESPACE"," ",739],["T_VARIABLE","$params",739],["T_WHITESPACE"," ",739],"=",["T_WHITESPACE"," ",739],"[","]",")",["T_WHITESPACE","\n    ",739],"{",["T_WHITESPACE","\n        ",740],["T_VARIABLE","$this",741],["T_OBJECT_OPERATOR","->",741],["T_STRING","join",741],"[","]",["T_WHITESPACE"," ",741],"=",["T_WHITESPACE"," ",741],"[",["T_CONSTANT_ENCAPSED_STRING","'LEFT JOIN'",741],",",["T_WHITESPACE"," ",741],["T_VARIABLE","$table",741],",",["T_WHITESPACE"," ",741],["T_VARIABLE","$on",741],"]",";",["T_WHITESPACE","\n        ",741],["T_RETURN","return",742],["T_WHITESPACE"," ",742],["T_VARIABLE","$this",742],["T_OBJECT_OPERATOR","->",742],["T_STRING","addParams",742],"(",["T_VARIABLE","$params",742],")",";",["T_WHITESPACE","\n    ",742],"}",["T_WHITESPACE","\n\n    ",743],["T_DOC_COMMENT","\/**\n     * Appends a RIGHT OUTER JOIN part to the query.\n     * @param string|array $table the table to be joined.\n     *\n     * Use a string to represent the name of the table to be joined.\n     * The table name can contain a schema prefix (e.g. 'public.user') and\/or table alias (e.g. 'user u').\n     * The method will automatically quote the table name unless it contains some parenthesis\n     * (which means the table is given as a sub-query or DB expression).\n     *\n     * Use an array to represent joining with a sub-query. The array must contain only one element.\n     * The value must be a [[Query]] object representing the sub-query while the corresponding key\n     * represents the alias for the sub-query.\n     *\n     * @param string|array $on the join condition that should appear in the ON part.\n     * Please refer to [[join()]] on how to specify this parameter.\n     * @param array $params the parameters (name => value) to be bound to the query\n     * @return $this the query object itself\n     *\/",745],["T_WHITESPACE","\n    ",762],["T_PUBLIC","public",763],["T_WHITESPACE"," ",763],["T_FUNCTION","function",763],["T_WHITESPACE"," ",763],["T_STRING","rightJoin",763],"(",["T_VARIABLE","$table",763],",",["T_WHITESPACE"," ",763],["T_VARIABLE","$on",763],["T_WHITESPACE"," ",763],"=",["T_WHITESPACE"," ",763],["T_CONSTANT_ENCAPSED_STRING","''",763],",",["T_WHITESPACE"," ",763],["T_VARIABLE","$params",763],["T_WHITESPACE"," ",763],"=",["T_WHITESPACE"," ",763],"[","]",")",["T_WHITESPACE","\n    ",763],"{",["T_WHITESPACE","\n        ",764],["T_VARIABLE","$this",765],["T_OBJECT_OPERATOR","->",765],["T_STRING","join",765],"[","]",["T_WHITESPACE"," ",765],"=",["T_WHITESPACE"," ",765],"[",["T_CONSTANT_ENCAPSED_STRING","'RIGHT JOIN'",765],",",["T_WHITESPACE"," ",765],["T_VARIABLE","$table",765],",",["T_WHITESPACE"," ",765],["T_VARIABLE","$on",765],"]",";",["T_WHITESPACE","\n        ",765],["T_RETURN","return",766],["T_WHITESPACE"," ",766],["T_VARIABLE","$this",766],["T_OBJECT_OPERATOR","->",766],["T_STRING","addParams",766],"(",["T_VARIABLE","$params",766],")",";",["T_WHITESPACE","\n    ",766],"}",["T_WHITESPACE","\n\n    ",767],["T_DOC_COMMENT","\/**\n     * Sets the GROUP BY part of the query.\n     * @param string|array|Expression $columns the columns to be grouped by.\n     * Columns can be specified in either a string (e.g. \"id, name\") or an array (e.g. ['id', 'name']).\n     * The method will automatically quote the column names unless a column contains some parenthesis\n     * (which means the column contains a DB expression).\n     *\n     * Note that if your group-by is an expression containing commas, you should always use an array\n     * to represent the group-by information. Otherwise, the method will not be able to correctly determine\n     * the group-by columns.\n     *\n     * Since version 2.0.7, an [[Expression]] object can be passed to specify the GROUP BY part explicitly in plain SQL.\n     * @return $this the query object itself\n     * @see addGroupBy()\n     *\/",769],["T_WHITESPACE","\n    ",783],["T_PUBLIC","public",784],["T_WHITESPACE"," ",784],["T_FUNCTION","function",784],["T_WHITESPACE"," ",784],["T_STRING","groupBy",784],"(",["T_VARIABLE","$columns",784],")",["T_WHITESPACE","\n    ",784],"{",["T_WHITESPACE","\n        ",785],["T_IF","if",786],["T_WHITESPACE"," ",786],"(",["T_VARIABLE","$columns",786],["T_WHITESPACE"," ",786],["T_INSTANCEOF","instanceof",786],["T_WHITESPACE"," ",786],["T_STRING","Expression",786],")",["T_WHITESPACE"," ",786],"{",["T_WHITESPACE","\n            ",786],["T_VARIABLE","$columns",787],["T_WHITESPACE"," ",787],"=",["T_WHITESPACE"," ",787],"[",["T_VARIABLE","$columns",787],"]",";",["T_WHITESPACE","\n        ",787],"}",["T_WHITESPACE"," ",788],["T_ELSEIF","elseif",788],["T_WHITESPACE"," ",788],"(","!",["T_STRING","is_array",788],"(",["T_VARIABLE","$columns",788],")",")",["T_WHITESPACE"," ",788],"{",["T_WHITESPACE","\n            ",788],["T_VARIABLE","$columns",789],["T_WHITESPACE"," ",789],"=",["T_WHITESPACE"," ",789],["T_STRING","preg_split",789],"(",["T_CONSTANT_ENCAPSED_STRING","'\/\\s*,\\s*\/'",789],",",["T_WHITESPACE"," ",789],["T_STRING","trim",789],"(",["T_VARIABLE","$columns",789],")",",",["T_WHITESPACE"," ",789],"-",["T_LNUMBER","1",789],",",["T_WHITESPACE"," ",789],["T_STRING","PREG_SPLIT_NO_EMPTY",789],")",";",["T_WHITESPACE","\n        ",789],"}",["T_WHITESPACE","\n        ",790],["T_VARIABLE","$this",791],["T_OBJECT_OPERATOR","->",791],["T_STRING","groupBy",791],["T_WHITESPACE"," ",791],"=",["T_WHITESPACE"," ",791],["T_VARIABLE","$columns",791],";",["T_WHITESPACE","\n        ",791],["T_RETURN","return",792],["T_WHITESPACE"," ",792],["T_VARIABLE","$this",792],";",["T_WHITESPACE","\n    ",792],"}",["T_WHITESPACE","\n\n    ",793],["T_DOC_COMMENT","\/**\n     * Adds additional group-by columns to the existing ones.\n     * @param string|array $columns additional columns to be grouped by.\n     * Columns can be specified in either a string (e.g. \"id, name\") or an array (e.g. ['id', 'name']).\n     * The method will automatically quote the column names unless a column contains some parenthesis\n     * (which means the column contains a DB expression).\n     *\n     * Note that if your group-by is an expression containing commas, you should always use an array\n     * to represent the group-by information. Otherwise, the method will not be able to correctly determine\n     * the group-by columns.\n     *\n     * Since version 2.0.7, an [[Expression]] object can be passed to specify the GROUP BY part explicitly in plain SQL.\n     * @return $this the query object itself\n     * @see groupBy()\n     *\/",795],["T_WHITESPACE","\n    ",809],["T_PUBLIC","public",810],["T_WHITESPACE"," ",810],["T_FUNCTION","function",810],["T_WHITESPACE"," ",810],["T_STRING","addGroupBy",810],"(",["T_VARIABLE","$columns",810],")",["T_WHITESPACE","\n    ",810],"{",["T_WHITESPACE","\n        ",811],["T_IF","if",812],["T_WHITESPACE"," ",812],"(",["T_VARIABLE","$columns",812],["T_WHITESPACE"," ",812],["T_INSTANCEOF","instanceof",812],["T_WHITESPACE"," ",812],["T_STRING","Expression",812],")",["T_WHITESPACE"," ",812],"{",["T_WHITESPACE","\n            ",812],["T_VARIABLE","$columns",813],["T_WHITESPACE"," ",813],"=",["T_WHITESPACE"," ",813],"[",["T_VARIABLE","$columns",813],"]",";",["T_WHITESPACE","\n        ",813],"}",["T_WHITESPACE"," ",814],["T_ELSEIF","elseif",814],["T_WHITESPACE"," ",814],"(","!",["T_STRING","is_array",814],"(",["T_VARIABLE","$columns",814],")",")",["T_WHITESPACE"," ",814],"{",["T_WHITESPACE","\n            ",814],["T_VARIABLE","$columns",815],["T_WHITESPACE"," ",815],"=",["T_WHITESPACE"," ",815],["T_STRING","preg_split",815],"(",["T_CONSTANT_ENCAPSED_STRING","'\/\\s*,\\s*\/'",815],",",["T_WHITESPACE"," ",815],["T_STRING","trim",815],"(",["T_VARIABLE","$columns",815],")",",",["T_WHITESPACE"," ",815],"-",["T_LNUMBER","1",815],",",["T_WHITESPACE"," ",815],["T_STRING","PREG_SPLIT_NO_EMPTY",815],")",";",["T_WHITESPACE","\n        ",815],"}",["T_WHITESPACE","\n        ",816],["T_IF","if",817],["T_WHITESPACE"," ",817],"(",["T_VARIABLE","$this",817],["T_OBJECT_OPERATOR","->",817],["T_STRING","groupBy",817],["T_WHITESPACE"," ",817],["T_IS_IDENTICAL","===",817],["T_WHITESPACE"," ",817],["T_STRING","null",817],")",["T_WHITESPACE"," ",817],"{",["T_WHITESPACE","\n            ",817],["T_VARIABLE","$this",818],["T_OBJECT_OPERATOR","->",818],["T_STRING","groupBy",818],["T_WHITESPACE"," ",818],"=",["T_WHITESPACE"," ",818],["T_VARIABLE","$columns",818],";",["T_WHITESPACE","\n        ",818],"}",["T_WHITESPACE"," ",819],["T_ELSE","else",819],["T_WHITESPACE"," ",819],"{",["T_WHITESPACE","\n            ",819],["T_VARIABLE","$this",820],["T_OBJECT_OPERATOR","->",820],["T_STRING","groupBy",820],["T_WHITESPACE"," ",820],"=",["T_WHITESPACE"," ",820],["T_STRING","array_merge",820],"(",["T_VARIABLE","$this",820],["T_OBJECT_OPERATOR","->",820],["T_STRING","groupBy",820],",",["T_WHITESPACE"," ",820],["T_VARIABLE","$columns",820],")",";",["T_WHITESPACE","\n        ",820],"}",["T_WHITESPACE","\n        ",821],["T_RETURN","return",822],["T_WHITESPACE"," ",822],["T_VARIABLE","$this",822],";",["T_WHITESPACE","\n    ",822],"}",["T_WHITESPACE","\n\n    ",823],["T_DOC_COMMENT","\/**\n     * Sets the HAVING part of the query.\n     * @param string|array|Expression $condition the conditions to be put after HAVING.\n     * Please refer to [[where()]] on how to specify this parameter.\n     * @param array $params the parameters (name => value) to be bound to the query.\n     * @return $this the query object itself\n     * @see andHaving()\n     * @see orHaving()\n     *\/",825],["T_WHITESPACE","\n    ",833],["T_PUBLIC","public",834],["T_WHITESPACE"," ",834],["T_FUNCTION","function",834],["T_WHITESPACE"," ",834],["T_STRING","having",834],"(",["T_VARIABLE","$condition",834],",",["T_WHITESPACE"," ",834],["T_VARIABLE","$params",834],["T_WHITESPACE"," ",834],"=",["T_WHITESPACE"," ",834],"[","]",")",["T_WHITESPACE","\n    ",834],"{",["T_WHITESPACE","\n        ",835],["T_VARIABLE","$this",836],["T_OBJECT_OPERATOR","->",836],["T_STRING","having",836],["T_WHITESPACE"," ",836],"=",["T_WHITESPACE"," ",836],["T_VARIABLE","$condition",836],";",["T_WHITESPACE","\n        ",836],["T_VARIABLE","$this",837],["T_OBJECT_OPERATOR","->",837],["T_STRING","addParams",837],"(",["T_VARIABLE","$params",837],")",";",["T_WHITESPACE","\n        ",837],["T_RETURN","return",838],["T_WHITESPACE"," ",838],["T_VARIABLE","$this",838],";",["T_WHITESPACE","\n    ",838],"}",["T_WHITESPACE","\n\n    ",839],["T_DOC_COMMENT","\/**\n     * Adds an additional HAVING condition to the existing one.\n     * The new condition and the existing one will be joined using the `AND` operator.\n     * @param string|array|Expression $condition the new HAVING condition. Please refer to [[where()]]\n     * on how to specify this parameter.\n     * @param array $params the parameters (name => value) to be bound to the query.\n     * @return $this the query object itself\n     * @see having()\n     * @see orHaving()\n     *\/",841],["T_WHITESPACE","\n    ",850],["T_PUBLIC","public",851],["T_WHITESPACE"," ",851],["T_FUNCTION","function",851],["T_WHITESPACE"," ",851],["T_STRING","andHaving",851],"(",["T_VARIABLE","$condition",851],",",["T_WHITESPACE"," ",851],["T_VARIABLE","$params",851],["T_WHITESPACE"," ",851],"=",["T_WHITESPACE"," ",851],"[","]",")",["T_WHITESPACE","\n    ",851],"{",["T_WHITESPACE","\n        ",852],["T_IF","if",853],["T_WHITESPACE"," ",853],"(",["T_VARIABLE","$this",853],["T_OBJECT_OPERATOR","->",853],["T_STRING","having",853],["T_WHITESPACE"," ",853],["T_IS_IDENTICAL","===",853],["T_WHITESPACE"," ",853],["T_STRING","null",853],")",["T_WHITESPACE"," ",853],"{",["T_WHITESPACE","\n            ",853],["T_VARIABLE","$this",854],["T_OBJECT_OPERATOR","->",854],["T_STRING","having",854],["T_WHITESPACE"," ",854],"=",["T_WHITESPACE"," ",854],["T_VARIABLE","$condition",854],";",["T_WHITESPACE","\n        ",854],"}",["T_WHITESPACE"," ",855],["T_ELSE","else",855],["T_WHITESPACE"," ",855],"{",["T_WHITESPACE","\n            ",855],["T_VARIABLE","$this",856],["T_OBJECT_OPERATOR","->",856],["T_STRING","having",856],["T_WHITESPACE"," ",856],"=",["T_WHITESPACE"," ",856],"[",["T_CONSTANT_ENCAPSED_STRING","'and'",856],",",["T_WHITESPACE"," ",856],["T_VARIABLE","$this",856],["T_OBJECT_OPERATOR","->",856],["T_STRING","having",856],",",["T_WHITESPACE"," ",856],["T_VARIABLE","$condition",856],"]",";",["T_WHITESPACE","\n        ",856],"}",["T_WHITESPACE","\n        ",857],["T_VARIABLE","$this",858],["T_OBJECT_OPERATOR","->",858],["T_STRING","addParams",858],"(",["T_VARIABLE","$params",858],")",";",["T_WHITESPACE","\n        ",858],["T_RETURN","return",859],["T_WHITESPACE"," ",859],["T_VARIABLE","$this",859],";",["T_WHITESPACE","\n    ",859],"}",["T_WHITESPACE","\n\n    ",860],["T_DOC_COMMENT","\/**\n     * Adds an additional HAVING condition to the existing one.\n     * The new condition and the existing one will be joined using the `OR` operator.\n     * @param string|array|Expression $condition the new HAVING condition. Please refer to [[where()]]\n     * on how to specify this parameter.\n     * @param array $params the parameters (name => value) to be bound to the query.\n     * @return $this the query object itself\n     * @see having()\n     * @see andHaving()\n     *\/",862],["T_WHITESPACE","\n    ",871],["T_PUBLIC","public",872],["T_WHITESPACE"," ",872],["T_FUNCTION","function",872],["T_WHITESPACE"," ",872],["T_STRING","orHaving",872],"(",["T_VARIABLE","$condition",872],",",["T_WHITESPACE"," ",872],["T_VARIABLE","$params",872],["T_WHITESPACE"," ",872],"=",["T_WHITESPACE"," ",872],"[","]",")",["T_WHITESPACE","\n    ",872],"{",["T_WHITESPACE","\n        ",873],["T_IF","if",874],["T_WHITESPACE"," ",874],"(",["T_VARIABLE","$this",874],["T_OBJECT_OPERATOR","->",874],["T_STRING","having",874],["T_WHITESPACE"," ",874],["T_IS_IDENTICAL","===",874],["T_WHITESPACE"," ",874],["T_STRING","null",874],")",["T_WHITESPACE"," ",874],"{",["T_WHITESPACE","\n            ",874],["T_VARIABLE","$this",875],["T_OBJECT_OPERATOR","->",875],["T_STRING","having",875],["T_WHITESPACE"," ",875],"=",["T_WHITESPACE"," ",875],["T_VARIABLE","$condition",875],";",["T_WHITESPACE","\n        ",875],"}",["T_WHITESPACE"," ",876],["T_ELSE","else",876],["T_WHITESPACE"," ",876],"{",["T_WHITESPACE","\n            ",876],["T_VARIABLE","$this",877],["T_OBJECT_OPERATOR","->",877],["T_STRING","having",877],["T_WHITESPACE"," ",877],"=",["T_WHITESPACE"," ",877],"[",["T_CONSTANT_ENCAPSED_STRING","'or'",877],",",["T_WHITESPACE"," ",877],["T_VARIABLE","$this",877],["T_OBJECT_OPERATOR","->",877],["T_STRING","having",877],",",["T_WHITESPACE"," ",877],["T_VARIABLE","$condition",877],"]",";",["T_WHITESPACE","\n        ",877],"}",["T_WHITESPACE","\n        ",878],["T_VARIABLE","$this",879],["T_OBJECT_OPERATOR","->",879],["T_STRING","addParams",879],"(",["T_VARIABLE","$params",879],")",";",["T_WHITESPACE","\n        ",879],["T_RETURN","return",880],["T_WHITESPACE"," ",880],["T_VARIABLE","$this",880],";",["T_WHITESPACE","\n    ",880],"}",["T_WHITESPACE","\n\n    ",881],["T_DOC_COMMENT","\/**\n     * Sets the HAVING part of the query but ignores [[isEmpty()|empty operands]].\n     *\n     * This method is similar to [[having()]]. The main difference is that this method will\n     * remove [[isEmpty()|empty query operands]]. As a result, this method is best suited\n     * for building query conditions based on filter values entered by users.\n     *\n     * The following code shows the difference between this method and [[having()]]:\n     *\n     * ```php\n     * \/\/ HAVING `age`=:age\n     * $query->filterHaving(['name' => null, 'age' => 20]);\n     * \/\/ HAVING `age`=:age\n     * $query->having(['age' => 20]);\n     * \/\/ HAVING `name` IS NULL AND `age`=:age\n     * $query->having(['name' => null, 'age' => 20]);\n     * ```\n     *\n     * Note that unlike [[having()]], you cannot pass binding parameters to this method.\n     *\n     * @param array $condition the conditions that should be put in the HAVING part.\n     * See [[having()]] on how to specify this parameter.\n     * @return $this the query object itself\n     * @see having()\n     * @see andFilterHaving()\n     * @see orFilterHaving()\n     * @since 2.0.11\n     *\/",883],["T_WHITESPACE","\n    ",910],["T_PUBLIC","public",911],["T_WHITESPACE"," ",911],["T_FUNCTION","function",911],["T_WHITESPACE"," ",911],["T_STRING","filterHaving",911],"(",["T_ARRAY","array",911],["T_WHITESPACE"," ",911],["T_VARIABLE","$condition",911],")",["T_WHITESPACE","\n    ",911],"{",["T_WHITESPACE","\n        ",912],["T_VARIABLE","$condition",913],["T_WHITESPACE"," ",913],"=",["T_WHITESPACE"," ",913],["T_VARIABLE","$this",913],["T_OBJECT_OPERATOR","->",913],["T_STRING","filterCondition",913],"(",["T_VARIABLE","$condition",913],")",";",["T_WHITESPACE","\n        ",913],["T_IF","if",914],["T_WHITESPACE"," ",914],"(",["T_VARIABLE","$condition",914],["T_WHITESPACE"," ",914],["T_IS_NOT_IDENTICAL","!==",914],["T_WHITESPACE"," ",914],"[","]",")",["T_WHITESPACE"," ",914],"{",["T_WHITESPACE","\n            ",914],["T_VARIABLE","$this",915],["T_OBJECT_OPERATOR","->",915],["T_STRING","having",915],"(",["T_VARIABLE","$condition",915],")",";",["T_WHITESPACE","\n        ",915],"}",["T_WHITESPACE","\n        ",916],["T_RETURN","return",917],["T_WHITESPACE"," ",917],["T_VARIABLE","$this",917],";",["T_WHITESPACE","\n    ",917],"}",["T_WHITESPACE","\n\n    ",918],["T_DOC_COMMENT","\/**\n     * Adds an additional HAVING condition to the existing one but ignores [[isEmpty()|empty operands]].\n     * The new condition and the existing one will be joined using the `AND` operator.\n     *\n     * This method is similar to [[andHaving()]]. The main difference is that this method will\n     * remove [[isEmpty()|empty query operands]]. As a result, this method is best suited\n     * for building query conditions based on filter values entered by users.\n     *\n     * @param array $condition the new HAVING condition. Please refer to [[having()]]\n     * on how to specify this parameter.\n     * @return $this the query object itself\n     * @see filterHaving()\n     * @see orFilterHaving()\n     * @since 2.0.11\n     *\/",920],["T_WHITESPACE","\n    ",934],["T_PUBLIC","public",935],["T_WHITESPACE"," ",935],["T_FUNCTION","function",935],["T_WHITESPACE"," ",935],["T_STRING","andFilterHaving",935],"(",["T_ARRAY","array",935],["T_WHITESPACE"," ",935],["T_VARIABLE","$condition",935],")",["T_WHITESPACE","\n    ",935],"{",["T_WHITESPACE","\n        ",936],["T_VARIABLE","$condition",937],["T_WHITESPACE"," ",937],"=",["T_WHITESPACE"," ",937],["T_VARIABLE","$this",937],["T_OBJECT_OPERATOR","->",937],["T_STRING","filterCondition",937],"(",["T_VARIABLE","$condition",937],")",";",["T_WHITESPACE","\n        ",937],["T_IF","if",938],["T_WHITESPACE"," ",938],"(",["T_VARIABLE","$condition",938],["T_WHITESPACE"," ",938],["T_IS_NOT_IDENTICAL","!==",938],["T_WHITESPACE"," ",938],"[","]",")",["T_WHITESPACE"," ",938],"{",["T_WHITESPACE","\n            ",938],["T_VARIABLE","$this",939],["T_OBJECT_OPERATOR","->",939],["T_STRING","andHaving",939],"(",["T_VARIABLE","$condition",939],")",";",["T_WHITESPACE","\n        ",939],"}",["T_WHITESPACE","\n        ",940],["T_RETURN","return",941],["T_WHITESPACE"," ",941],["T_VARIABLE","$this",941],";",["T_WHITESPACE","\n    ",941],"}",["T_WHITESPACE","\n\n    ",942],["T_DOC_COMMENT","\/**\n     * Adds an additional HAVING condition to the existing one but ignores [[isEmpty()|empty operands]].\n     * The new condition and the existing one will be joined using the `OR` operator.\n     *\n     * This method is similar to [[orHaving()]]. The main difference is that this method will\n     * remove [[isEmpty()|empty query operands]]. As a result, this method is best suited\n     * for building query conditions based on filter values entered by users.\n     *\n     * @param array $condition the new HAVING condition. Please refer to [[having()]]\n     * on how to specify this parameter.\n     * @return $this the query object itself\n     * @see filterHaving()\n     * @see andFilterHaving()\n     * @since 2.0.11\n     *\/",944],["T_WHITESPACE","\n    ",958],["T_PUBLIC","public",959],["T_WHITESPACE"," ",959],["T_FUNCTION","function",959],["T_WHITESPACE"," ",959],["T_STRING","orFilterHaving",959],"(",["T_ARRAY","array",959],["T_WHITESPACE"," ",959],["T_VARIABLE","$condition",959],")",["T_WHITESPACE","\n    ",959],"{",["T_WHITESPACE","\n        ",960],["T_VARIABLE","$condition",961],["T_WHITESPACE"," ",961],"=",["T_WHITESPACE"," ",961],["T_VARIABLE","$this",961],["T_OBJECT_OPERATOR","->",961],["T_STRING","filterCondition",961],"(",["T_VARIABLE","$condition",961],")",";",["T_WHITESPACE","\n        ",961],["T_IF","if",962],["T_WHITESPACE"," ",962],"(",["T_VARIABLE","$condition",962],["T_WHITESPACE"," ",962],["T_IS_NOT_IDENTICAL","!==",962],["T_WHITESPACE"," ",962],"[","]",")",["T_WHITESPACE"," ",962],"{",["T_WHITESPACE","\n            ",962],["T_VARIABLE","$this",963],["T_OBJECT_OPERATOR","->",963],["T_STRING","orHaving",963],"(",["T_VARIABLE","$condition",963],")",";",["T_WHITESPACE","\n        ",963],"}",["T_WHITESPACE","\n        ",964],["T_RETURN","return",965],["T_WHITESPACE"," ",965],["T_VARIABLE","$this",965],";",["T_WHITESPACE","\n    ",965],"}",["T_WHITESPACE","\n\n    ",966],["T_DOC_COMMENT","\/**\n     * Appends a SQL statement using UNION operator.\n     * @param string|Query $sql the SQL statement to be appended using UNION\n     * @param bool $all TRUE if using UNION ALL and FALSE if using UNION\n     * @return $this the query object itself\n     *\/",968],["T_WHITESPACE","\n    ",973],["T_PUBLIC","public",974],["T_WHITESPACE"," ",974],["T_FUNCTION","function",974],["T_WHITESPACE"," ",974],["T_STRING","union",974],"(",["T_VARIABLE","$sql",974],",",["T_WHITESPACE"," ",974],["T_VARIABLE","$all",974],["T_WHITESPACE"," ",974],"=",["T_WHITESPACE"," ",974],["T_STRING","false",974],")",["T_WHITESPACE","\n    ",974],"{",["T_WHITESPACE","\n        ",975],["T_VARIABLE","$this",976],["T_OBJECT_OPERATOR","->",976],["T_STRING","union",976],"[","]",["T_WHITESPACE"," ",976],"=",["T_WHITESPACE"," ",976],"[",["T_CONSTANT_ENCAPSED_STRING","'query'",976],["T_WHITESPACE"," ",976],["T_DOUBLE_ARROW","=>",976],["T_WHITESPACE"," ",976],["T_VARIABLE","$sql",976],",",["T_WHITESPACE"," ",976],["T_CONSTANT_ENCAPSED_STRING","'all'",976],["T_WHITESPACE"," ",976],["T_DOUBLE_ARROW","=>",976],["T_WHITESPACE"," ",976],["T_VARIABLE","$all",976],"]",";",["T_WHITESPACE","\n        ",976],["T_RETURN","return",977],["T_WHITESPACE"," ",977],["T_VARIABLE","$this",977],";",["T_WHITESPACE","\n    ",977],"}",["T_WHITESPACE","\n\n    ",978],["T_DOC_COMMENT","\/**\n     * Sets the parameters to be bound to the query.\n     * @param array $params list of query parameter values indexed by parameter placeholders.\n     * For example, `[':name' => 'Dan', ':age' => 31]`.\n     * @return $this the query object itself\n     * @see addParams()\n     *\/",980],["T_WHITESPACE","\n    ",986],["T_PUBLIC","public",987],["T_WHITESPACE"," ",987],["T_FUNCTION","function",987],["T_WHITESPACE"," ",987],["T_STRING","params",987],"(",["T_VARIABLE","$params",987],")",["T_WHITESPACE","\n    ",987],"{",["T_WHITESPACE","\n        ",988],["T_VARIABLE","$this",989],["T_OBJECT_OPERATOR","->",989],["T_STRING","params",989],["T_WHITESPACE"," ",989],"=",["T_WHITESPACE"," ",989],["T_VARIABLE","$params",989],";",["T_WHITESPACE","\n        ",989],["T_RETURN","return",990],["T_WHITESPACE"," ",990],["T_VARIABLE","$this",990],";",["T_WHITESPACE","\n    ",990],"}",["T_WHITESPACE","\n\n    ",991],["T_DOC_COMMENT","\/**\n     * Adds additional parameters to be bound to the query.\n     * @param array $params list of query parameter values indexed by parameter placeholders.\n     * For example, `[':name' => 'Dan', ':age' => 31]`.\n     * @return $this the query object itself\n     * @see params()\n     *\/",993],["T_WHITESPACE","\n    ",999],["T_PUBLIC","public",1000],["T_WHITESPACE"," ",1000],["T_FUNCTION","function",1000],["T_WHITESPACE"," ",1000],["T_STRING","addParams",1000],"(",["T_VARIABLE","$params",1000],")",["T_WHITESPACE","\n    ",1000],"{",["T_WHITESPACE","\n        ",1001],["T_IF","if",1002],["T_WHITESPACE"," ",1002],"(","!",["T_EMPTY","empty",1002],"(",["T_VARIABLE","$params",1002],")",")",["T_WHITESPACE"," ",1002],"{",["T_WHITESPACE","\n            ",1002],["T_IF","if",1003],["T_WHITESPACE"," ",1003],"(",["T_EMPTY","empty",1003],"(",["T_VARIABLE","$this",1003],["T_OBJECT_OPERATOR","->",1003],["T_STRING","params",1003],")",")",["T_WHITESPACE"," ",1003],"{",["T_WHITESPACE","\n                ",1003],["T_VARIABLE","$this",1004],["T_OBJECT_OPERATOR","->",1004],["T_STRING","params",1004],["T_WHITESPACE"," ",1004],"=",["T_WHITESPACE"," ",1004],["T_VARIABLE","$params",1004],";",["T_WHITESPACE","\n            ",1004],"}",["T_WHITESPACE"," ",1005],["T_ELSE","else",1005],["T_WHITESPACE"," ",1005],"{",["T_WHITESPACE","\n                ",1005],["T_FOREACH","foreach",1006],["T_WHITESPACE"," ",1006],"(",["T_VARIABLE","$params",1006],["T_WHITESPACE"," ",1006],["T_AS","as",1006],["T_WHITESPACE"," ",1006],["T_VARIABLE","$name",1006],["T_WHITESPACE"," ",1006],["T_DOUBLE_ARROW","=>",1006],["T_WHITESPACE"," ",1006],["T_VARIABLE","$value",1006],")",["T_WHITESPACE"," ",1006],"{",["T_WHITESPACE","\n                    ",1006],["T_IF","if",1007],["T_WHITESPACE"," ",1007],"(",["T_STRING","is_int",1007],"(",["T_VARIABLE","$name",1007],")",")",["T_WHITESPACE"," ",1007],"{",["T_WHITESPACE","\n                        ",1007],["T_VARIABLE","$this",1008],["T_OBJECT_OPERATOR","->",1008],["T_STRING","params",1008],"[","]",["T_WHITESPACE"," ",1008],"=",["T_WHITESPACE"," ",1008],["T_VARIABLE","$value",1008],";",["T_WHITESPACE","\n                    ",1008],"}",["T_WHITESPACE"," ",1009],["T_ELSE","else",1009],["T_WHITESPACE"," ",1009],"{",["T_WHITESPACE","\n                        ",1009],["T_VARIABLE","$this",1010],["T_OBJECT_OPERATOR","->",1010],["T_STRING","params",1010],"[",["T_VARIABLE","$name",1010],"]",["T_WHITESPACE"," ",1010],"=",["T_WHITESPACE"," ",1010],["T_VARIABLE","$value",1010],";",["T_WHITESPACE","\n                    ",1010],"}",["T_WHITESPACE","\n                ",1011],"}",["T_WHITESPACE","\n            ",1012],"}",["T_WHITESPACE","\n        ",1013],"}",["T_WHITESPACE","\n        ",1014],["T_RETURN","return",1015],["T_WHITESPACE"," ",1015],["T_VARIABLE","$this",1015],";",["T_WHITESPACE","\n    ",1015],"}",["T_WHITESPACE","\n\n    ",1016],["T_DOC_COMMENT","\/**\n     * Creates a new Query object and copies its property values from an existing one.\n     * The properties being copies are the ones to be used by query builders.\n     * @param Query $from the source query object\n     * @return Query the new Query object\n     *\/",1018],["T_WHITESPACE","\n    ",1023],["T_PUBLIC","public",1024],["T_WHITESPACE"," ",1024],["T_STATIC","static",1024],["T_WHITESPACE"," ",1024],["T_FUNCTION","function",1024],["T_WHITESPACE"," ",1024],["T_STRING","create",1024],"(",["T_VARIABLE","$from",1024],")",["T_WHITESPACE","\n    ",1024],"{",["T_WHITESPACE","\n        ",1025],["T_RETURN","return",1026],["T_WHITESPACE"," ",1026],["T_NEW","new",1026],["T_WHITESPACE"," ",1026],["T_STRING","self",1026],"(","[",["T_WHITESPACE","\n            ",1026],["T_CONSTANT_ENCAPSED_STRING","'where'",1027],["T_WHITESPACE"," ",1027],["T_DOUBLE_ARROW","=>",1027],["T_WHITESPACE"," ",1027],["T_VARIABLE","$from",1027],["T_OBJECT_OPERATOR","->",1027],["T_STRING","where",1027],",",["T_WHITESPACE","\n            ",1027],["T_CONSTANT_ENCAPSED_STRING","'limit'",1028],["T_WHITESPACE"," ",1028],["T_DOUBLE_ARROW","=>",1028],["T_WHITESPACE"," ",1028],["T_VARIABLE","$from",1028],["T_OBJECT_OPERATOR","->",1028],["T_STRING","limit",1028],",",["T_WHITESPACE","\n            ",1028],["T_CONSTANT_ENCAPSED_STRING","'offset'",1029],["T_WHITESPACE"," ",1029],["T_DOUBLE_ARROW","=>",1029],["T_WHITESPACE"," ",1029],["T_VARIABLE","$from",1029],["T_OBJECT_OPERATOR","->",1029],["T_STRING","offset",1029],",",["T_WHITESPACE","\n            ",1029],["T_CONSTANT_ENCAPSED_STRING","'orderBy'",1030],["T_WHITESPACE"," ",1030],["T_DOUBLE_ARROW","=>",1030],["T_WHITESPACE"," ",1030],["T_VARIABLE","$from",1030],["T_OBJECT_OPERATOR","->",1030],["T_STRING","orderBy",1030],",",["T_WHITESPACE","\n            ",1030],["T_CONSTANT_ENCAPSED_STRING","'indexBy'",1031],["T_WHITESPACE"," ",1031],["T_DOUBLE_ARROW","=>",1031],["T_WHITESPACE"," ",1031],["T_VARIABLE","$from",1031],["T_OBJECT_OPERATOR","->",1031],["T_STRING","indexBy",1031],",",["T_WHITESPACE","\n            ",1031],["T_CONSTANT_ENCAPSED_STRING","'select'",1032],["T_WHITESPACE"," ",1032],["T_DOUBLE_ARROW","=>",1032],["T_WHITESPACE"," ",1032],["T_VARIABLE","$from",1032],["T_OBJECT_OPERATOR","->",1032],["T_STRING","select",1032],",",["T_WHITESPACE","\n            ",1032],["T_CONSTANT_ENCAPSED_STRING","'selectOption'",1033],["T_WHITESPACE"," ",1033],["T_DOUBLE_ARROW","=>",1033],["T_WHITESPACE"," ",1033],["T_VARIABLE","$from",1033],["T_OBJECT_OPERATOR","->",1033],["T_STRING","selectOption",1033],",",["T_WHITESPACE","\n            ",1033],["T_CONSTANT_ENCAPSED_STRING","'distinct'",1034],["T_WHITESPACE"," ",1034],["T_DOUBLE_ARROW","=>",1034],["T_WHITESPACE"," ",1034],["T_VARIABLE","$from",1034],["T_OBJECT_OPERATOR","->",1034],["T_STRING","distinct",1034],",",["T_WHITESPACE","\n            ",1034],["T_CONSTANT_ENCAPSED_STRING","'from'",1035],["T_WHITESPACE"," ",1035],["T_DOUBLE_ARROW","=>",1035],["T_WHITESPACE"," ",1035],["T_VARIABLE","$from",1035],["T_OBJECT_OPERATOR","->",1035],["T_STRING","from",1035],",",["T_WHITESPACE","\n            ",1035],["T_CONSTANT_ENCAPSED_STRING","'groupBy'",1036],["T_WHITESPACE"," ",1036],["T_DOUBLE_ARROW","=>",1036],["T_WHITESPACE"," ",1036],["T_VARIABLE","$from",1036],["T_OBJECT_OPERATOR","->",1036],["T_STRING","groupBy",1036],",",["T_WHITESPACE","\n            ",1036],["T_CONSTANT_ENCAPSED_STRING","'join'",1037],["T_WHITESPACE"," ",1037],["T_DOUBLE_ARROW","=>",1037],["T_WHITESPACE"," ",1037],["T_VARIABLE","$from",1037],["T_OBJECT_OPERATOR","->",1037],["T_STRING","join",1037],",",["T_WHITESPACE","\n            ",1037],["T_CONSTANT_ENCAPSED_STRING","'having'",1038],["T_WHITESPACE"," ",1038],["T_DOUBLE_ARROW","=>",1038],["T_WHITESPACE"," ",1038],["T_VARIABLE","$from",1038],["T_OBJECT_OPERATOR","->",1038],["T_STRING","having",1038],",",["T_WHITESPACE","\n            ",1038],["T_CONSTANT_ENCAPSED_STRING","'union'",1039],["T_WHITESPACE"," ",1039],["T_DOUBLE_ARROW","=>",1039],["T_WHITESPACE"," ",1039],["T_VARIABLE","$from",1039],["T_OBJECT_OPERATOR","->",1039],["T_STRING","union",1039],",",["T_WHITESPACE","\n            ",1039],["T_CONSTANT_ENCAPSED_STRING","'params'",1040],["T_WHITESPACE"," ",1040],["T_DOUBLE_ARROW","=>",1040],["T_WHITESPACE"," ",1040],["T_VARIABLE","$from",1040],["T_OBJECT_OPERATOR","->",1040],["T_STRING","params",1040],",",["T_WHITESPACE","\n        ",1040],"]",")",";",["T_WHITESPACE","\n    ",1041],"}",["T_WHITESPACE","\n",1042],"}",["T_WHITESPACE","\n",1043]]