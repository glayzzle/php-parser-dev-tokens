[["T_OPEN_TAG","<?php\n",1],["T_DOC_COMMENT","\/**\n * @link http:\/\/www.yiiframework.com\/\n * @copyright Copyright (c) 2008 Yii Software LLC\n * @license http:\/\/www.yiiframework.com\/license\/\n *\/",2],["T_WHITESPACE","\n\n",6],["T_NAMESPACE","namespace",8],["T_WHITESPACE"," ",8],["T_STRING","yii",8],["T_NS_SEPARATOR","\\",8],["T_STRING","db",8],";",["T_WHITESPACE","\n\n",8],["T_USE","use",10],["T_WHITESPACE"," ",10],["T_STRING","Yii",10],";",["T_WHITESPACE","\n",10],["T_USE","use",11],["T_WHITESPACE"," ",11],["T_STRING","yii",11],["T_NS_SEPARATOR","\\",11],["T_STRING","base",11],["T_NS_SEPARATOR","\\",11],["T_STRING","InvalidConfigException",11],";",["T_WHITESPACE","\n",11],["T_USE","use",12],["T_WHITESPACE"," ",12],["T_STRING","yii",12],["T_NS_SEPARATOR","\\",12],["T_STRING","helpers",12],["T_NS_SEPARATOR","\\",12],["T_STRING","ArrayHelper",12],";",["T_WHITESPACE","\n",12],["T_USE","use",13],["T_WHITESPACE"," ",13],["T_STRING","yii",13],["T_NS_SEPARATOR","\\",13],["T_STRING","helpers",13],["T_NS_SEPARATOR","\\",13],["T_STRING","Inflector",13],";",["T_WHITESPACE","\n",13],["T_USE","use",14],["T_WHITESPACE"," ",14],["T_STRING","yii",14],["T_NS_SEPARATOR","\\",14],["T_STRING","helpers",14],["T_NS_SEPARATOR","\\",14],["T_STRING","StringHelper",14],";",["T_WHITESPACE","\n\n",14],["T_DOC_COMMENT","\/**\n * ActiveRecord is the base class for classes representing relational data in terms of objects.\n *\n * Active Record implements the [Active Record design pattern](http:\/\/en.wikipedia.org\/wiki\/Active_record).\n * The premise behind Active Record is that an individual [[ActiveRecord]] object is associated with a specific\n * row in a database table. The object's attributes are mapped to the columns of the corresponding table.\n * Referencing an Active Record attribute is equivalent to accessing the corresponding table column for that record.\n *\n * As an example, say that the `Customer` ActiveRecord class is associated with the `customer` table.\n * This would mean that the class's `name` attribute is automatically mapped to the `name` column in `customer` table.\n * Thanks to Active Record, assuming the variable `$customer` is an object of type `Customer`, to get the value of\n * the `name` column for the table row, you can use the expression `$customer->name`.\n * In this example, Active Record is providing an object-oriented interface for accessing data stored in the database.\n * But Active Record provides much more functionality than this.\n *\n * To declare an ActiveRecord class you need to extend [[\\yii\\db\\ActiveRecord]] and\n * implement the `tableName` method:\n *\n * ```php\n * <?php\n *\n * class Customer extends \\yii\\db\\ActiveRecord\n * {\n *     public static function tableName()\n *     {\n *         return 'customer';\n *     }\n * }\n * ```\n *\n * The `tableName` method only has to return the name of the database table associated with the class.\n *\n * > Tip: You may also use the [Gii code generator](guide:start-gii) to generate ActiveRecord classes from your\n * > database tables.\n *\n * Class instances are obtained in one of two ways:\n *\n * * Using the `new` operator to create a new, empty object\n * * Using a method to fetch an existing record (or records) from the database\n *\n * Below is an example showing some typical usage of ActiveRecord:\n *\n * ```php\n * $user = new User();\n * $user->name = 'Qiang';\n * $user->save();  \/\/ a new row is inserted into user table\n *\n * \/\/ the following will retrieve the user 'CeBe' from the database\n * $user = User::find()->where(['name' => 'CeBe'])->one();\n *\n * \/\/ this will get related records from orders table when relation is defined\n * $orders = $user->orders;\n * ```\n *\n * For more details and usage information on ActiveRecord, see the [guide article on ActiveRecord](guide:db-active-record).\n *\n * @method ActiveQuery hasMany($class, array $link) see [[BaseActiveRecord::hasMany()]] for more info\n * @method ActiveQuery hasOne($class, array $link) see [[BaseActiveRecord::hasOne()]] for more info\n *\n * @author Qiang Xue <qiang.xue@gmail.com>\n * @author Carsten Brandt <mail@cebe.cc>\n * @since 2.0\n *\/",16],["T_WHITESPACE","\n",78],["T_CLASS","class",79],["T_WHITESPACE"," ",79],["T_STRING","ActiveRecord",79],["T_WHITESPACE"," ",79],["T_EXTENDS","extends",79],["T_WHITESPACE"," ",79],["T_STRING","BaseActiveRecord",79],["T_WHITESPACE","\n",79],"{",["T_WHITESPACE","\n    ",80],["T_DOC_COMMENT","\/**\n     * The insert operation. This is mainly used when overriding [[transactions()]] to specify which operations are transactional.\n     *\/",81],["T_WHITESPACE","\n    ",83],["T_CONST","const",84],["T_WHITESPACE"," ",84],["T_STRING","OP_INSERT",84],["T_WHITESPACE"," ",84],"=",["T_WHITESPACE"," ",84],["T_LNUMBER","0x01",84],";",["T_WHITESPACE","\n    ",84],["T_DOC_COMMENT","\/**\n     * The update operation. This is mainly used when overriding [[transactions()]] to specify which operations are transactional.\n     *\/",85],["T_WHITESPACE","\n    ",87],["T_CONST","const",88],["T_WHITESPACE"," ",88],["T_STRING","OP_UPDATE",88],["T_WHITESPACE"," ",88],"=",["T_WHITESPACE"," ",88],["T_LNUMBER","0x02",88],";",["T_WHITESPACE","\n    ",88],["T_DOC_COMMENT","\/**\n     * The delete operation. This is mainly used when overriding [[transactions()]] to specify which operations are transactional.\n     *\/",89],["T_WHITESPACE","\n    ",91],["T_CONST","const",92],["T_WHITESPACE"," ",92],["T_STRING","OP_DELETE",92],["T_WHITESPACE"," ",92],"=",["T_WHITESPACE"," ",92],["T_LNUMBER","0x04",92],";",["T_WHITESPACE","\n    ",92],["T_DOC_COMMENT","\/**\n     * All three operations: insert, update, delete.\n     * This is a shortcut of the expression: OP_INSERT | OP_UPDATE | OP_DELETE.\n     *\/",93],["T_WHITESPACE","\n    ",96],["T_CONST","const",97],["T_WHITESPACE"," ",97],["T_STRING","OP_ALL",97],["T_WHITESPACE"," ",97],"=",["T_WHITESPACE"," ",97],["T_LNUMBER","0x07",97],";",["T_WHITESPACE","\n\n\n    ",97],["T_DOC_COMMENT","\/**\n     * Loads default values from database table schema\n     *\n     * You may call this method to load default values after creating a new instance:\n     *\n     * ```php\n     * \/\/ class Customer extends \\yii\\db\\ActiveRecord\n     * $customer = new Customer();\n     * $customer->loadDefaultValues();\n     * ```\n     *\n     * @param bool $skipIfSet whether existing value should be preserved.\n     * This will only set defaults for attributes that are `null`.\n     * @return $this the model instance itself.\n     *\/",100],["T_WHITESPACE","\n    ",114],["T_PUBLIC","public",115],["T_WHITESPACE"," ",115],["T_FUNCTION","function",115],["T_WHITESPACE"," ",115],["T_STRING","loadDefaultValues",115],"(",["T_VARIABLE","$skipIfSet",115],["T_WHITESPACE"," ",115],"=",["T_WHITESPACE"," ",115],["T_STRING","true",115],")",["T_WHITESPACE","\n    ",115],"{",["T_WHITESPACE","\n        ",116],["T_FOREACH","foreach",117],["T_WHITESPACE"," ",117],"(",["T_STATIC","static",117],["T_DOUBLE_COLON","::",117],["T_STRING","getTableSchema",117],"(",")",["T_OBJECT_OPERATOR","->",117],["T_STRING","columns",117],["T_WHITESPACE"," ",117],["T_AS","as",117],["T_WHITESPACE"," ",117],["T_VARIABLE","$column",117],")",["T_WHITESPACE"," ",117],"{",["T_WHITESPACE","\n            ",117],["T_IF","if",118],["T_WHITESPACE"," ",118],"(",["T_VARIABLE","$column",118],["T_OBJECT_OPERATOR","->",118],["T_STRING","defaultValue",118],["T_WHITESPACE"," ",118],["T_IS_NOT_IDENTICAL","!==",118],["T_WHITESPACE"," ",118],["T_STRING","null",118],["T_WHITESPACE"," ",118],["T_BOOLEAN_AND","&&",118],["T_WHITESPACE"," ",118],"(","!",["T_VARIABLE","$skipIfSet",118],["T_WHITESPACE"," ",118],["T_BOOLEAN_OR","||",118],["T_WHITESPACE"," ",118],["T_VARIABLE","$this",118],["T_OBJECT_OPERATOR","->",118],"{",["T_VARIABLE","$column",118],["T_OBJECT_OPERATOR","->",118],["T_STRING","name",118],"}",["T_WHITESPACE"," ",118],["T_IS_IDENTICAL","===",118],["T_WHITESPACE"," ",118],["T_STRING","null",118],")",")",["T_WHITESPACE"," ",118],"{",["T_WHITESPACE","\n                ",118],["T_VARIABLE","$this",119],["T_OBJECT_OPERATOR","->",119],"{",["T_VARIABLE","$column",119],["T_OBJECT_OPERATOR","->",119],["T_STRING","name",119],"}",["T_WHITESPACE"," ",119],"=",["T_WHITESPACE"," ",119],["T_VARIABLE","$column",119],["T_OBJECT_OPERATOR","->",119],["T_STRING","defaultValue",119],";",["T_WHITESPACE","\n            ",119],"}",["T_WHITESPACE","\n        ",120],"}",["T_WHITESPACE","\n        ",121],["T_RETURN","return",122],["T_WHITESPACE"," ",122],["T_VARIABLE","$this",122],";",["T_WHITESPACE","\n    ",122],"}",["T_WHITESPACE","\n\n    ",123],["T_DOC_COMMENT","\/**\n     * Returns the database connection used by this AR class.\n     * By default, the \"db\" application component is used as the database connection.\n     * You may override this method if you want to use a different database connection.\n     * @return Connection the database connection used by this AR class.\n     *\/",125],["T_WHITESPACE","\n    ",130],["T_PUBLIC","public",131],["T_WHITESPACE"," ",131],["T_STATIC","static",131],["T_WHITESPACE"," ",131],["T_FUNCTION","function",131],["T_WHITESPACE"," ",131],["T_STRING","getDb",131],"(",")",["T_WHITESPACE","\n    ",131],"{",["T_WHITESPACE","\n        ",132],["T_RETURN","return",133],["T_WHITESPACE"," ",133],["T_STRING","Yii",133],["T_DOUBLE_COLON","::",133],["T_VARIABLE","$app",133],["T_OBJECT_OPERATOR","->",133],["T_STRING","getDb",133],"(",")",";",["T_WHITESPACE","\n    ",133],"}",["T_WHITESPACE","\n\n    ",134],["T_DOC_COMMENT","\/**\n     * Creates an [[ActiveQuery]] instance with a given SQL statement.\n     *\n     * Note that because the SQL statement is already specified, calling additional\n     * query modification methods (such as `where()`, `order()`) on the created [[ActiveQuery]]\n     * instance will have no effect. However, calling `with()`, `asArray()` or `indexBy()` is\n     * still fine.\n     *\n     * Below is an example:\n     *\n     * ```php\n     * $customers = Customer::findBySql('SELECT * FROM customer')->all();\n     * ```\n     *\n     * @param string $sql the SQL statement to be executed\n     * @param array $params parameters to be bound to the SQL statement during execution.\n     * @return ActiveQuery the newly created [[ActiveQuery]] instance\n     *\/",136],["T_WHITESPACE","\n    ",153],["T_PUBLIC","public",154],["T_WHITESPACE"," ",154],["T_STATIC","static",154],["T_WHITESPACE"," ",154],["T_FUNCTION","function",154],["T_WHITESPACE"," ",154],["T_STRING","findBySql",154],"(",["T_VARIABLE","$sql",154],",",["T_WHITESPACE"," ",154],["T_VARIABLE","$params",154],["T_WHITESPACE"," ",154],"=",["T_WHITESPACE"," ",154],"[","]",")",["T_WHITESPACE","\n    ",154],"{",["T_WHITESPACE","\n        ",155],["T_VARIABLE","$query",156],["T_WHITESPACE"," ",156],"=",["T_WHITESPACE"," ",156],["T_STATIC","static",156],["T_DOUBLE_COLON","::",156],["T_STRING","find",156],"(",")",";",["T_WHITESPACE","\n        ",156],["T_VARIABLE","$query",157],["T_OBJECT_OPERATOR","->",157],["T_STRING","sql",157],["T_WHITESPACE"," ",157],"=",["T_WHITESPACE"," ",157],["T_VARIABLE","$sql",157],";",["T_WHITESPACE","\n\n        ",157],["T_RETURN","return",159],["T_WHITESPACE"," ",159],["T_VARIABLE","$query",159],["T_OBJECT_OPERATOR","->",159],["T_STRING","params",159],"(",["T_VARIABLE","$params",159],")",";",["T_WHITESPACE","\n    ",159],"}",["T_WHITESPACE","\n\n    ",160],["T_DOC_COMMENT","\/**\n     * Finds ActiveRecord instance(s) by the given condition.\n     * This method is internally called by [[findOne()]] and [[findAll()]].\n     * @param mixed $condition please refer to [[findOne()]] for the explanation of this parameter\n     * @return ActiveQueryInterface the newly created [[ActiveQueryInterface|ActiveQuery]] instance.\n     * @throws InvalidConfigException if there is no primary key defined\n     * @internal\n     *\/",162],["T_WHITESPACE","\n    ",169],["T_PROTECTED","protected",170],["T_WHITESPACE"," ",170],["T_STATIC","static",170],["T_WHITESPACE"," ",170],["T_FUNCTION","function",170],["T_WHITESPACE"," ",170],["T_STRING","findByCondition",170],"(",["T_VARIABLE","$condition",170],")",["T_WHITESPACE","\n    ",170],"{",["T_WHITESPACE","\n        ",171],["T_VARIABLE","$query",172],["T_WHITESPACE"," ",172],"=",["T_WHITESPACE"," ",172],["T_STATIC","static",172],["T_DOUBLE_COLON","::",172],["T_STRING","find",172],"(",")",";",["T_WHITESPACE","\n\n        ",172],["T_IF","if",174],["T_WHITESPACE"," ",174],"(","!",["T_STRING","ArrayHelper",174],["T_DOUBLE_COLON","::",174],["T_STRING","isAssociative",174],"(",["T_VARIABLE","$condition",174],")",")",["T_WHITESPACE"," ",174],"{",["T_WHITESPACE","\n            ",174],["T_COMMENT","\/\/ query by primary key\n",175],["T_WHITESPACE","            ",176],["T_VARIABLE","$primaryKey",176],["T_WHITESPACE"," ",176],"=",["T_WHITESPACE"," ",176],["T_STATIC","static",176],["T_DOUBLE_COLON","::",176],["T_STRING","primaryKey",176],"(",")",";",["T_WHITESPACE","\n            ",176],["T_IF","if",177],["T_WHITESPACE"," ",177],"(",["T_ISSET","isset",177],"(",["T_VARIABLE","$primaryKey",177],"[",["T_LNUMBER","0",177],"]",")",")",["T_WHITESPACE"," ",177],"{",["T_WHITESPACE","\n                ",177],["T_VARIABLE","$pk",178],["T_WHITESPACE"," ",178],"=",["T_WHITESPACE"," ",178],["T_VARIABLE","$primaryKey",178],"[",["T_LNUMBER","0",178],"]",";",["T_WHITESPACE","\n                ",178],["T_IF","if",179],["T_WHITESPACE"," ",179],"(","!",["T_EMPTY","empty",179],"(",["T_VARIABLE","$query",179],["T_OBJECT_OPERATOR","->",179],["T_STRING","join",179],")",["T_WHITESPACE"," ",179],["T_BOOLEAN_OR","||",179],["T_WHITESPACE"," ",179],"!",["T_EMPTY","empty",179],"(",["T_VARIABLE","$query",179],["T_OBJECT_OPERATOR","->",179],["T_STRING","joinWith",179],")",")",["T_WHITESPACE"," ",179],"{",["T_WHITESPACE","\n                    ",179],["T_VARIABLE","$pk",180],["T_WHITESPACE"," ",180],"=",["T_WHITESPACE"," ",180],["T_STATIC","static",180],["T_DOUBLE_COLON","::",180],["T_STRING","tableName",180],"(",")",["T_WHITESPACE"," ",180],".",["T_WHITESPACE"," ",180],["T_CONSTANT_ENCAPSED_STRING","'.'",180],["T_WHITESPACE"," ",180],".",["T_WHITESPACE"," ",180],["T_VARIABLE","$pk",180],";",["T_WHITESPACE","\n                ",180],"}",["T_WHITESPACE","\n                ",181],["T_VARIABLE","$condition",182],["T_WHITESPACE"," ",182],"=",["T_WHITESPACE"," ",182],"[",["T_VARIABLE","$pk",182],["T_WHITESPACE"," ",182],["T_DOUBLE_ARROW","=>",182],["T_WHITESPACE"," ",182],["T_VARIABLE","$condition",182],"]",";",["T_WHITESPACE","\n            ",182],"}",["T_WHITESPACE"," ",183],["T_ELSE","else",183],["T_WHITESPACE"," ",183],"{",["T_WHITESPACE","\n                ",183],["T_THROW","throw",184],["T_WHITESPACE"," ",184],["T_NEW","new",184],["T_WHITESPACE"," ",184],["T_STRING","InvalidConfigException",184],"(",["T_CONSTANT_ENCAPSED_STRING","'\"'",184],["T_WHITESPACE"," ",184],".",["T_WHITESPACE"," ",184],["T_STRING","get_called_class",184],"(",")",["T_WHITESPACE"," ",184],".",["T_WHITESPACE"," ",184],["T_CONSTANT_ENCAPSED_STRING","'\" must have a primary key.'",184],")",";",["T_WHITESPACE","\n            ",184],"}",["T_WHITESPACE","\n        ",185],"}",["T_WHITESPACE","\n\n        ",186],["T_RETURN","return",188],["T_WHITESPACE"," ",188],["T_VARIABLE","$query",188],["T_OBJECT_OPERATOR","->",188],["T_STRING","andWhere",188],"(",["T_VARIABLE","$condition",188],")",";",["T_WHITESPACE","\n    ",188],"}",["T_WHITESPACE","\n\n    ",189],["T_DOC_COMMENT","\/**\n     * Updates the whole table using the provided attribute values and conditions.\n     *\n     * For example, to change the status to be 1 for all customers whose status is 2:\n     *\n     * ```php\n     * Customer::updateAll(['status' => 1], 'status = 2');\n     * ```\n     *\n     * > Warning: If you do not specify any condition, this method will update **all** rows in the table.\n     *\n     * Note that this method will not trigger any events. If you need [[EVENT_BEFORE_UPDATE]] or\n     * [[EVENT_AFTER_UPDATE]] to be triggered, you need to [[find()|find]] the models first and then\n     * call [[update()]] on each of them. For example an equivalent of the example above would be:\n     *\n     * ```php\n     * $models = Customer::find()->where('status = 2')->all();\n     * foreach($models as $model) {\n     *     $model->status = 1;\n     *     $model->update(false); \/\/ skipping validation as no user input is involved\n     * }\n     * ```\n     *\n     * For a large set of models you might consider using [[ActiveQuery::each()]] to keep memory usage within limits.\n     *\n     * @param array $attributes attribute values (name-value pairs) to be saved into the table\n     * @param string|array $condition the conditions that will be put in the WHERE part of the UPDATE SQL.\n     * Please refer to [[Query::where()]] on how to specify this parameter.\n     * @param array $params the parameters (name => value) to be bound to the query.\n     * @return int the number of rows updated\n     *\/",191],["T_WHITESPACE","\n    ",221],["T_PUBLIC","public",222],["T_WHITESPACE"," ",222],["T_STATIC","static",222],["T_WHITESPACE"," ",222],["T_FUNCTION","function",222],["T_WHITESPACE"," ",222],["T_STRING","updateAll",222],"(",["T_VARIABLE","$attributes",222],",",["T_WHITESPACE"," ",222],["T_VARIABLE","$condition",222],["T_WHITESPACE"," ",222],"=",["T_WHITESPACE"," ",222],["T_CONSTANT_ENCAPSED_STRING","''",222],",",["T_WHITESPACE"," ",222],["T_VARIABLE","$params",222],["T_WHITESPACE"," ",222],"=",["T_WHITESPACE"," ",222],"[","]",")",["T_WHITESPACE","\n    ",222],"{",["T_WHITESPACE","\n        ",223],["T_VARIABLE","$command",224],["T_WHITESPACE"," ",224],"=",["T_WHITESPACE"," ",224],["T_STATIC","static",224],["T_DOUBLE_COLON","::",224],["T_STRING","getDb",224],"(",")",["T_OBJECT_OPERATOR","->",224],["T_STRING","createCommand",224],"(",")",";",["T_WHITESPACE","\n        ",224],["T_VARIABLE","$command",225],["T_OBJECT_OPERATOR","->",225],["T_STRING","update",225],"(",["T_STATIC","static",225],["T_DOUBLE_COLON","::",225],["T_STRING","tableName",225],"(",")",",",["T_WHITESPACE"," ",225],["T_VARIABLE","$attributes",225],",",["T_WHITESPACE"," ",225],["T_VARIABLE","$condition",225],",",["T_WHITESPACE"," ",225],["T_VARIABLE","$params",225],")",";",["T_WHITESPACE","\n\n        ",225],["T_RETURN","return",227],["T_WHITESPACE"," ",227],["T_VARIABLE","$command",227],["T_OBJECT_OPERATOR","->",227],["T_STRING","execute",227],"(",")",";",["T_WHITESPACE","\n    ",227],"}",["T_WHITESPACE","\n\n    ",228],["T_DOC_COMMENT","\/**\n     * Updates the whole table using the provided counter changes and conditions.\n     *\n     * For example, to increment all customers' age by 1,\n     *\n     * ```php\n     * Customer::updateAllCounters(['age' => 1]);\n     * ```\n     *\n     * Note that this method will not trigger any events.\n     *\n     * @param array $counters the counters to be updated (attribute name => increment value).\n     * Use negative values if you want to decrement the counters.\n     * @param string|array $condition the conditions that will be put in the WHERE part of the UPDATE SQL.\n     * Please refer to [[Query::where()]] on how to specify this parameter.\n     * @param array $params the parameters (name => value) to be bound to the query.\n     * Do not name the parameters as `:bp0`, `:bp1`, etc., because they are used internally by this method.\n     * @return int the number of rows updated\n     *\/",230],["T_WHITESPACE","\n    ",248],["T_PUBLIC","public",249],["T_WHITESPACE"," ",249],["T_STATIC","static",249],["T_WHITESPACE"," ",249],["T_FUNCTION","function",249],["T_WHITESPACE"," ",249],["T_STRING","updateAllCounters",249],"(",["T_VARIABLE","$counters",249],",",["T_WHITESPACE"," ",249],["T_VARIABLE","$condition",249],["T_WHITESPACE"," ",249],"=",["T_WHITESPACE"," ",249],["T_CONSTANT_ENCAPSED_STRING","''",249],",",["T_WHITESPACE"," ",249],["T_VARIABLE","$params",249],["T_WHITESPACE"," ",249],"=",["T_WHITESPACE"," ",249],"[","]",")",["T_WHITESPACE","\n    ",249],"{",["T_WHITESPACE","\n        ",250],["T_VARIABLE","$n",251],["T_WHITESPACE"," ",251],"=",["T_WHITESPACE"," ",251],["T_LNUMBER","0",251],";",["T_WHITESPACE","\n        ",251],["T_FOREACH","foreach",252],["T_WHITESPACE"," ",252],"(",["T_VARIABLE","$counters",252],["T_WHITESPACE"," ",252],["T_AS","as",252],["T_WHITESPACE"," ",252],["T_VARIABLE","$name",252],["T_WHITESPACE"," ",252],["T_DOUBLE_ARROW","=>",252],["T_WHITESPACE"," ",252],["T_VARIABLE","$value",252],")",["T_WHITESPACE"," ",252],"{",["T_WHITESPACE","\n            ",252],["T_VARIABLE","$counters",253],"[",["T_VARIABLE","$name",253],"]",["T_WHITESPACE"," ",253],"=",["T_WHITESPACE"," ",253],["T_NEW","new",253],["T_WHITESPACE"," ",253],["T_STRING","Expression",253],"(","\"",["T_ENCAPSED_AND_WHITESPACE","[[",253],["T_VARIABLE","$name",253],["T_ENCAPSED_AND_WHITESPACE","]]+:bp",253],["T_CURLY_OPEN","{",253],["T_VARIABLE","$n",253],"}","\"",",",["T_WHITESPACE"," ",253],"[","\"",["T_ENCAPSED_AND_WHITESPACE",":bp",253],["T_CURLY_OPEN","{",253],["T_VARIABLE","$n",253],"}","\"",["T_WHITESPACE"," ",253],["T_DOUBLE_ARROW","=>",253],["T_WHITESPACE"," ",253],["T_VARIABLE","$value",253],"]",")",";",["T_WHITESPACE","\n            ",253],["T_VARIABLE","$n",254],["T_INC","++",254],";",["T_WHITESPACE","\n        ",254],"}",["T_WHITESPACE","\n        ",255],["T_VARIABLE","$command",256],["T_WHITESPACE"," ",256],"=",["T_WHITESPACE"," ",256],["T_STATIC","static",256],["T_DOUBLE_COLON","::",256],["T_STRING","getDb",256],"(",")",["T_OBJECT_OPERATOR","->",256],["T_STRING","createCommand",256],"(",")",";",["T_WHITESPACE","\n        ",256],["T_VARIABLE","$command",257],["T_OBJECT_OPERATOR","->",257],["T_STRING","update",257],"(",["T_STATIC","static",257],["T_DOUBLE_COLON","::",257],["T_STRING","tableName",257],"(",")",",",["T_WHITESPACE"," ",257],["T_VARIABLE","$counters",257],",",["T_WHITESPACE"," ",257],["T_VARIABLE","$condition",257],",",["T_WHITESPACE"," ",257],["T_VARIABLE","$params",257],")",";",["T_WHITESPACE","\n\n        ",257],["T_RETURN","return",259],["T_WHITESPACE"," ",259],["T_VARIABLE","$command",259],["T_OBJECT_OPERATOR","->",259],["T_STRING","execute",259],"(",")",";",["T_WHITESPACE","\n    ",259],"}",["T_WHITESPACE","\n\n    ",260],["T_DOC_COMMENT","\/**\n     * Deletes rows in the table using the provided conditions.\n     *\n     * For example, to delete all customers whose status is 3:\n     *\n     * ```php\n     * Customer::deleteAll('status = 3');\n     * ```\n     *\n     * > Warning: If you do not specify any condition, this method will delete **all** rows in the table.\n     *\n     * Note that this method will not trigger any events. If you need [[EVENT_BEFORE_DELETE]] or\n     * [[EVENT_AFTER_DELETE]] to be triggered, you need to [[find()|find]] the models first and then\n     * call [[delete()]] on each of them. For example an equivalent of the example above would be:\n     *\n     * ```php\n     * $models = Customer::find()->where('status = 3')->all();\n     * foreach($models as $model) {\n     *     $model->delete();\n     * }\n     * ```\n     *\n     * For a large set of models you might consider using [[ActiveQuery::each()]] to keep memory usage within limits.\n     *\n     * @param string|array $condition the conditions that will be put in the WHERE part of the DELETE SQL.\n     * Please refer to [[Query::where()]] on how to specify this parameter.\n     * @param array $params the parameters (name => value) to be bound to the query.\n     * @return int the number of rows deleted\n     *\/",262],["T_WHITESPACE","\n    ",290],["T_PUBLIC","public",291],["T_WHITESPACE"," ",291],["T_STATIC","static",291],["T_WHITESPACE"," ",291],["T_FUNCTION","function",291],["T_WHITESPACE"," ",291],["T_STRING","deleteAll",291],"(",["T_VARIABLE","$condition",291],["T_WHITESPACE"," ",291],"=",["T_WHITESPACE"," ",291],["T_CONSTANT_ENCAPSED_STRING","''",291],",",["T_WHITESPACE"," ",291],["T_VARIABLE","$params",291],["T_WHITESPACE"," ",291],"=",["T_WHITESPACE"," ",291],"[","]",")",["T_WHITESPACE","\n    ",291],"{",["T_WHITESPACE","\n        ",292],["T_VARIABLE","$command",293],["T_WHITESPACE"," ",293],"=",["T_WHITESPACE"," ",293],["T_STATIC","static",293],["T_DOUBLE_COLON","::",293],["T_STRING","getDb",293],"(",")",["T_OBJECT_OPERATOR","->",293],["T_STRING","createCommand",293],"(",")",";",["T_WHITESPACE","\n        ",293],["T_VARIABLE","$command",294],["T_OBJECT_OPERATOR","->",294],["T_STRING","delete",294],"(",["T_STATIC","static",294],["T_DOUBLE_COLON","::",294],["T_STRING","tableName",294],"(",")",",",["T_WHITESPACE"," ",294],["T_VARIABLE","$condition",294],",",["T_WHITESPACE"," ",294],["T_VARIABLE","$params",294],")",";",["T_WHITESPACE","\n\n        ",294],["T_RETURN","return",296],["T_WHITESPACE"," ",296],["T_VARIABLE","$command",296],["T_OBJECT_OPERATOR","->",296],["T_STRING","execute",296],"(",")",";",["T_WHITESPACE","\n    ",296],"}",["T_WHITESPACE","\n\n    ",297],["T_DOC_COMMENT","\/**\n     * @inheritdoc\n     * @return ActiveQuery the newly created [[ActiveQuery]] instance.\n     *\/",299],["T_WHITESPACE","\n    ",302],["T_PUBLIC","public",303],["T_WHITESPACE"," ",303],["T_STATIC","static",303],["T_WHITESPACE"," ",303],["T_FUNCTION","function",303],["T_WHITESPACE"," ",303],["T_STRING","find",303],"(",")",["T_WHITESPACE","\n    ",303],"{",["T_WHITESPACE","\n        ",304],["T_RETURN","return",305],["T_WHITESPACE"," ",305],["T_STRING","Yii",305],["T_DOUBLE_COLON","::",305],["T_STRING","createObject",305],"(",["T_STRING","ActiveQuery",305],["T_DOUBLE_COLON","::",305],["T_STRING","className",305],"(",")",",",["T_WHITESPACE"," ",305],"[",["T_STRING","get_called_class",305],"(",")","]",")",";",["T_WHITESPACE","\n    ",305],"}",["T_WHITESPACE","\n\n    ",306],["T_DOC_COMMENT","\/**\n     * Declares the name of the database table associated with this AR class.\n     * By default this method returns the class name as the table name by calling [[Inflector::camel2id()]]\n     * with prefix [[Connection::tablePrefix]]. For example if [[Connection::tablePrefix]] is `tbl_`,\n     * `Customer` becomes `tbl_customer`, and `OrderItem` becomes `tbl_order_item`. You may override this method\n     * if the table is not named after this convention.\n     * @return string the table name\n     *\/",308],["T_WHITESPACE","\n    ",315],["T_PUBLIC","public",316],["T_WHITESPACE"," ",316],["T_STATIC","static",316],["T_WHITESPACE"," ",316],["T_FUNCTION","function",316],["T_WHITESPACE"," ",316],["T_STRING","tableName",316],"(",")",["T_WHITESPACE","\n    ",316],"{",["T_WHITESPACE","\n        ",317],["T_RETURN","return",318],["T_WHITESPACE"," ",318],["T_CONSTANT_ENCAPSED_STRING","'{{%'",318],["T_WHITESPACE"," ",318],".",["T_WHITESPACE"," ",318],["T_STRING","Inflector",318],["T_DOUBLE_COLON","::",318],["T_STRING","camel2id",318],"(",["T_STRING","StringHelper",318],["T_DOUBLE_COLON","::",318],["T_STRING","basename",318],"(",["T_STRING","get_called_class",318],"(",")",")",",",["T_WHITESPACE"," ",318],["T_CONSTANT_ENCAPSED_STRING","'_'",318],")",["T_WHITESPACE"," ",318],".",["T_WHITESPACE"," ",318],["T_CONSTANT_ENCAPSED_STRING","'}}'",318],";",["T_WHITESPACE","\n    ",318],"}",["T_WHITESPACE","\n\n    ",319],["T_DOC_COMMENT","\/**\n     * Returns the schema information of the DB table associated with this AR class.\n     * @return TableSchema the schema information of the DB table associated with this AR class.\n     * @throws InvalidConfigException if the table for the AR class does not exist.\n     *\/",321],["T_WHITESPACE","\n    ",325],["T_PUBLIC","public",326],["T_WHITESPACE"," ",326],["T_STATIC","static",326],["T_WHITESPACE"," ",326],["T_FUNCTION","function",326],["T_WHITESPACE"," ",326],["T_STRING","getTableSchema",326],"(",")",["T_WHITESPACE","\n    ",326],"{",["T_WHITESPACE","\n        ",327],["T_VARIABLE","$tableSchema",328],["T_WHITESPACE"," ",328],"=",["T_WHITESPACE"," ",328],["T_STATIC","static",328],["T_DOUBLE_COLON","::",328],["T_STRING","getDb",328],"(",")",["T_WHITESPACE","\n            ",328],["T_OBJECT_OPERATOR","->",329],["T_STRING","getSchema",329],"(",")",["T_WHITESPACE","\n            ",329],["T_OBJECT_OPERATOR","->",330],["T_STRING","getTableSchema",330],"(",["T_STATIC","static",330],["T_DOUBLE_COLON","::",330],["T_STRING","tableName",330],"(",")",")",";",["T_WHITESPACE","\n\n        ",330],["T_IF","if",332],["T_WHITESPACE"," ",332],"(",["T_VARIABLE","$tableSchema",332],["T_WHITESPACE"," ",332],["T_IS_IDENTICAL","===",332],["T_WHITESPACE"," ",332],["T_STRING","null",332],")",["T_WHITESPACE"," ",332],"{",["T_WHITESPACE","\n            ",332],["T_THROW","throw",333],["T_WHITESPACE"," ",333],["T_NEW","new",333],["T_WHITESPACE"," ",333],["T_STRING","InvalidConfigException",333],"(",["T_CONSTANT_ENCAPSED_STRING","'The table does not exist: '",333],["T_WHITESPACE"," ",333],".",["T_WHITESPACE"," ",333],["T_STATIC","static",333],["T_DOUBLE_COLON","::",333],["T_STRING","tableName",333],"(",")",")",";",["T_WHITESPACE","\n        ",333],"}",["T_WHITESPACE","\n\n        ",334],["T_RETURN","return",336],["T_WHITESPACE"," ",336],["T_VARIABLE","$tableSchema",336],";",["T_WHITESPACE","\n    ",336],"}",["T_WHITESPACE","\n\n    ",337],["T_DOC_COMMENT","\/**\n     * Returns the primary key name(s) for this AR class.\n     * The default implementation will return the primary key(s) as declared\n     * in the DB table that is associated with this AR class.\n     *\n     * If the DB table does not declare any primary key, you should override\n     * this method to return the attributes that you want to use as primary keys\n     * for this AR class.\n     *\n     * Note that an array should be returned even for a table with single primary key.\n     *\n     * @return string[] the primary keys of the associated database table.\n     *\/",339],["T_WHITESPACE","\n    ",351],["T_PUBLIC","public",352],["T_WHITESPACE"," ",352],["T_STATIC","static",352],["T_WHITESPACE"," ",352],["T_FUNCTION","function",352],["T_WHITESPACE"," ",352],["T_STRING","primaryKey",352],"(",")",["T_WHITESPACE","\n    ",352],"{",["T_WHITESPACE","\n        ",353],["T_RETURN","return",354],["T_WHITESPACE"," ",354],["T_STATIC","static",354],["T_DOUBLE_COLON","::",354],["T_STRING","getTableSchema",354],"(",")",["T_OBJECT_OPERATOR","->",354],["T_STRING","primaryKey",354],";",["T_WHITESPACE","\n    ",354],"}",["T_WHITESPACE","\n\n    ",355],["T_DOC_COMMENT","\/**\n     * Returns the list of all attribute names of the model.\n     * The default implementation will return all column names of the table associated with this AR class.\n     * @return array list of attribute names.\n     *\/",357],["T_WHITESPACE","\n    ",361],["T_PUBLIC","public",362],["T_WHITESPACE"," ",362],["T_FUNCTION","function",362],["T_WHITESPACE"," ",362],["T_STRING","attributes",362],"(",")",["T_WHITESPACE","\n    ",362],"{",["T_WHITESPACE","\n        ",363],["T_RETURN","return",364],["T_WHITESPACE"," ",364],["T_STRING","array_keys",364],"(",["T_STATIC","static",364],["T_DOUBLE_COLON","::",364],["T_STRING","getTableSchema",364],"(",")",["T_OBJECT_OPERATOR","->",364],["T_STRING","columns",364],")",";",["T_WHITESPACE","\n    ",364],"}",["T_WHITESPACE","\n\n    ",365],["T_DOC_COMMENT","\/**\n     * Declares which DB operations should be performed within a transaction in different scenarios.\n     * The supported DB operations are: [[OP_INSERT]], [[OP_UPDATE]] and [[OP_DELETE]],\n     * which correspond to the [[insert()]], [[update()]] and [[delete()]] methods, respectively.\n     * By default, these methods are NOT enclosed in a DB transaction.\n     *\n     * In some scenarios, to ensure data consistency, you may want to enclose some or all of them\n     * in transactions. You can do so by overriding this method and returning the operations\n     * that need to be transactional. For example,\n     *\n     * ```php\n     * return [\n     *     'admin' => self::OP_INSERT,\n     *     'api' => self::OP_INSERT | self::OP_UPDATE | self::OP_DELETE,\n     *     \/\/ the above is equivalent to the following:\n     *     \/\/ 'api' => self::OP_ALL,\n     *\n     * ];\n     * ```\n     *\n     * The above declaration specifies that in the \"admin\" scenario, the insert operation ([[insert()]])\n     * should be done in a transaction; and in the \"api\" scenario, all the operations should be done\n     * in a transaction.\n     *\n     * @return array the declarations of transactional operations. The array keys are scenarios names,\n     * and the array values are the corresponding transaction operations.\n     *\/",367],["T_WHITESPACE","\n    ",393],["T_PUBLIC","public",394],["T_WHITESPACE"," ",394],["T_FUNCTION","function",394],["T_WHITESPACE"," ",394],["T_STRING","transactions",394],"(",")",["T_WHITESPACE","\n    ",394],"{",["T_WHITESPACE","\n        ",395],["T_RETURN","return",396],["T_WHITESPACE"," ",396],"[","]",";",["T_WHITESPACE","\n    ",396],"}",["T_WHITESPACE","\n\n    ",397],["T_DOC_COMMENT","\/**\n     * @inheritdoc\n     *\/",399],["T_WHITESPACE","\n    ",401],["T_PUBLIC","public",402],["T_WHITESPACE"," ",402],["T_STATIC","static",402],["T_WHITESPACE"," ",402],["T_FUNCTION","function",402],["T_WHITESPACE"," ",402],["T_STRING","populateRecord",402],"(",["T_VARIABLE","$record",402],",",["T_WHITESPACE"," ",402],["T_VARIABLE","$row",402],")",["T_WHITESPACE","\n    ",402],"{",["T_WHITESPACE","\n        ",403],["T_VARIABLE","$columns",404],["T_WHITESPACE"," ",404],"=",["T_WHITESPACE"," ",404],["T_STATIC","static",404],["T_DOUBLE_COLON","::",404],["T_STRING","getTableSchema",404],"(",")",["T_OBJECT_OPERATOR","->",404],["T_STRING","columns",404],";",["T_WHITESPACE","\n        ",404],["T_FOREACH","foreach",405],["T_WHITESPACE"," ",405],"(",["T_VARIABLE","$row",405],["T_WHITESPACE"," ",405],["T_AS","as",405],["T_WHITESPACE"," ",405],["T_VARIABLE","$name",405],["T_WHITESPACE"," ",405],["T_DOUBLE_ARROW","=>",405],["T_WHITESPACE"," ",405],["T_VARIABLE","$value",405],")",["T_WHITESPACE"," ",405],"{",["T_WHITESPACE","\n            ",405],["T_IF","if",406],["T_WHITESPACE"," ",406],"(",["T_ISSET","isset",406],"(",["T_VARIABLE","$columns",406],"[",["T_VARIABLE","$name",406],"]",")",")",["T_WHITESPACE"," ",406],"{",["T_WHITESPACE","\n                ",406],["T_VARIABLE","$row",407],"[",["T_VARIABLE","$name",407],"]",["T_WHITESPACE"," ",407],"=",["T_WHITESPACE"," ",407],["T_VARIABLE","$columns",407],"[",["T_VARIABLE","$name",407],"]",["T_OBJECT_OPERATOR","->",407],["T_STRING","phpTypecast",407],"(",["T_VARIABLE","$value",407],")",";",["T_WHITESPACE","\n            ",407],"}",["T_WHITESPACE","\n        ",408],"}",["T_WHITESPACE","\n        ",409],["T_STRING","parent",410],["T_DOUBLE_COLON","::",410],["T_STRING","populateRecord",410],"(",["T_VARIABLE","$record",410],",",["T_WHITESPACE"," ",410],["T_VARIABLE","$row",410],")",";",["T_WHITESPACE","\n    ",410],"}",["T_WHITESPACE","\n\n    ",411],["T_DOC_COMMENT","\/**\n     * Inserts a row into the associated database table using the attribute values of this record.\n     *\n     * This method performs the following steps in order:\n     *\n     * 1. call [[beforeValidate()]] when `$runValidation` is `true`. If [[beforeValidate()]]\n     *    returns `false`, the rest of the steps will be skipped;\n     * 2. call [[afterValidate()]] when `$runValidation` is `true`. If validation\n     *    failed, the rest of the steps will be skipped;\n     * 3. call [[beforeSave()]]. If [[beforeSave()]] returns `false`,\n     *    the rest of the steps will be skipped;\n     * 4. insert the record into database. If this fails, it will skip the rest of the steps;\n     * 5. call [[afterSave()]];\n     *\n     * In the above step 1, 2, 3 and 5, events [[EVENT_BEFORE_VALIDATE]],\n     * [[EVENT_AFTER_VALIDATE]], [[EVENT_BEFORE_INSERT]], and [[EVENT_AFTER_INSERT]]\n     * will be raised by the corresponding methods.\n     *\n     * Only the [[dirtyAttributes|changed attribute values]] will be inserted into database.\n     *\n     * If the table's primary key is auto-incremental and is `null` during insertion,\n     * it will be populated with the actual value after insertion.\n     *\n     * For example, to insert a customer record:\n     *\n     * ```php\n     * $customer = new Customer;\n     * $customer->name = $name;\n     * $customer->email = $email;\n     * $customer->insert();\n     * ```\n     *\n     * @param bool $runValidation whether to perform validation (calling [[validate()]])\n     * before saving the record. Defaults to `true`. If the validation fails, the record\n     * will not be saved to the database and this method will return `false`.\n     * @param array $attributes list of attributes that need to be saved. Defaults to `null`,\n     * meaning all attributes that are loaded from DB will be saved.\n     * @return bool whether the attributes are valid and the record is inserted successfully.\n     * @throws \\Exception in case insert failed.\n     *\/",413],["T_WHITESPACE","\n    ",452],["T_PUBLIC","public",453],["T_WHITESPACE"," ",453],["T_FUNCTION","function",453],["T_WHITESPACE"," ",453],["T_STRING","insert",453],"(",["T_VARIABLE","$runValidation",453],["T_WHITESPACE"," ",453],"=",["T_WHITESPACE"," ",453],["T_STRING","true",453],",",["T_WHITESPACE"," ",453],["T_VARIABLE","$attributes",453],["T_WHITESPACE"," ",453],"=",["T_WHITESPACE"," ",453],["T_STRING","null",453],")",["T_WHITESPACE","\n    ",453],"{",["T_WHITESPACE","\n        ",454],["T_IF","if",455],["T_WHITESPACE"," ",455],"(",["T_VARIABLE","$runValidation",455],["T_WHITESPACE"," ",455],["T_BOOLEAN_AND","&&",455],["T_WHITESPACE"," ",455],"!",["T_VARIABLE","$this",455],["T_OBJECT_OPERATOR","->",455],["T_STRING","validate",455],"(",["T_VARIABLE","$attributes",455],")",")",["T_WHITESPACE"," ",455],"{",["T_WHITESPACE","\n            ",455],["T_STRING","Yii",456],["T_DOUBLE_COLON","::",456],["T_STRING","info",456],"(",["T_CONSTANT_ENCAPSED_STRING","'Model not inserted due to validation error.'",456],",",["T_WHITESPACE"," ",456],["T_METHOD_C","__METHOD__",456],")",";",["T_WHITESPACE","\n            ",456],["T_RETURN","return",457],["T_WHITESPACE"," ",457],["T_STRING","false",457],";",["T_WHITESPACE","\n        ",457],"}",["T_WHITESPACE","\n\n        ",458],["T_IF","if",460],["T_WHITESPACE"," ",460],"(","!",["T_VARIABLE","$this",460],["T_OBJECT_OPERATOR","->",460],["T_STRING","isTransactional",460],"(",["T_STRING","self",460],["T_DOUBLE_COLON","::",460],["T_STRING","OP_INSERT",460],")",")",["T_WHITESPACE"," ",460],"{",["T_WHITESPACE","\n            ",460],["T_RETURN","return",461],["T_WHITESPACE"," ",461],["T_VARIABLE","$this",461],["T_OBJECT_OPERATOR","->",461],["T_STRING","insertInternal",461],"(",["T_VARIABLE","$attributes",461],")",";",["T_WHITESPACE","\n        ",461],"}",["T_WHITESPACE","\n\n        ",462],["T_VARIABLE","$transaction",464],["T_WHITESPACE"," ",464],"=",["T_WHITESPACE"," ",464],["T_STATIC","static",464],["T_DOUBLE_COLON","::",464],["T_STRING","getDb",464],"(",")",["T_OBJECT_OPERATOR","->",464],["T_STRING","beginTransaction",464],"(",")",";",["T_WHITESPACE","\n        ",464],["T_TRY","try",465],["T_WHITESPACE"," ",465],"{",["T_WHITESPACE","\n            ",465],["T_VARIABLE","$result",466],["T_WHITESPACE"," ",466],"=",["T_WHITESPACE"," ",466],["T_VARIABLE","$this",466],["T_OBJECT_OPERATOR","->",466],["T_STRING","insertInternal",466],"(",["T_VARIABLE","$attributes",466],")",";",["T_WHITESPACE","\n            ",466],["T_IF","if",467],["T_WHITESPACE"," ",467],"(",["T_VARIABLE","$result",467],["T_WHITESPACE"," ",467],["T_IS_IDENTICAL","===",467],["T_WHITESPACE"," ",467],["T_STRING","false",467],")",["T_WHITESPACE"," ",467],"{",["T_WHITESPACE","\n                ",467],["T_VARIABLE","$transaction",468],["T_OBJECT_OPERATOR","->",468],["T_STRING","rollBack",468],"(",")",";",["T_WHITESPACE","\n            ",468],"}",["T_WHITESPACE"," ",469],["T_ELSE","else",469],["T_WHITESPACE"," ",469],"{",["T_WHITESPACE","\n                ",469],["T_VARIABLE","$transaction",470],["T_OBJECT_OPERATOR","->",470],["T_STRING","commit",470],"(",")",";",["T_WHITESPACE","\n            ",470],"}",["T_WHITESPACE","\n            ",471],["T_RETURN","return",472],["T_WHITESPACE"," ",472],["T_VARIABLE","$result",472],";",["T_WHITESPACE","\n        ",472],"}",["T_WHITESPACE"," ",473],["T_CATCH","catch",473],["T_WHITESPACE"," ",473],"(",["T_NS_SEPARATOR","\\",473],["T_STRING","Exception",473],["T_WHITESPACE"," ",473],["T_VARIABLE","$e",473],")",["T_WHITESPACE"," ",473],"{",["T_WHITESPACE","\n            ",473],["T_VARIABLE","$transaction",474],["T_OBJECT_OPERATOR","->",474],["T_STRING","rollBack",474],"(",")",";",["T_WHITESPACE","\n            ",474],["T_THROW","throw",475],["T_WHITESPACE"," ",475],["T_VARIABLE","$e",475],";",["T_WHITESPACE","\n        ",475],"}",["T_WHITESPACE"," ",476],["T_CATCH","catch",476],["T_WHITESPACE"," ",476],"(",["T_NS_SEPARATOR","\\",476],["T_STRING","Throwable",476],["T_WHITESPACE"," ",476],["T_VARIABLE","$e",476],")",["T_WHITESPACE"," ",476],"{",["T_WHITESPACE","\n            ",476],["T_VARIABLE","$transaction",477],["T_OBJECT_OPERATOR","->",477],["T_STRING","rollBack",477],"(",")",";",["T_WHITESPACE","\n            ",477],["T_THROW","throw",478],["T_WHITESPACE"," ",478],["T_VARIABLE","$e",478],";",["T_WHITESPACE","\n        ",478],"}",["T_WHITESPACE","\n    ",479],"}",["T_WHITESPACE","\n\n    ",480],["T_DOC_COMMENT","\/**\n     * Inserts an ActiveRecord into DB without considering transaction.\n     * @param array $attributes list of attributes that need to be saved. Defaults to `null`,\n     * meaning all attributes that are loaded from DB will be saved.\n     * @return bool whether the record is inserted successfully.\n     *\/",482],["T_WHITESPACE","\n    ",487],["T_PROTECTED","protected",488],["T_WHITESPACE"," ",488],["T_FUNCTION","function",488],["T_WHITESPACE"," ",488],["T_STRING","insertInternal",488],"(",["T_VARIABLE","$attributes",488],["T_WHITESPACE"," ",488],"=",["T_WHITESPACE"," ",488],["T_STRING","null",488],")",["T_WHITESPACE","\n    ",488],"{",["T_WHITESPACE","\n        ",489],["T_IF","if",490],["T_WHITESPACE"," ",490],"(","!",["T_VARIABLE","$this",490],["T_OBJECT_OPERATOR","->",490],["T_STRING","beforeSave",490],"(",["T_STRING","true",490],")",")",["T_WHITESPACE"," ",490],"{",["T_WHITESPACE","\n            ",490],["T_RETURN","return",491],["T_WHITESPACE"," ",491],["T_STRING","false",491],";",["T_WHITESPACE","\n        ",491],"}",["T_WHITESPACE","\n        ",492],["T_VARIABLE","$values",493],["T_WHITESPACE"," ",493],"=",["T_WHITESPACE"," ",493],["T_VARIABLE","$this",493],["T_OBJECT_OPERATOR","->",493],["T_STRING","getDirtyAttributes",493],"(",["T_VARIABLE","$attributes",493],")",";",["T_WHITESPACE","\n        ",493],["T_IF","if",494],["T_WHITESPACE"," ",494],"(","(",["T_VARIABLE","$primaryKeys",494],["T_WHITESPACE"," ",494],"=",["T_WHITESPACE"," ",494],["T_STATIC","static",494],["T_DOUBLE_COLON","::",494],["T_STRING","getDb",494],"(",")",["T_OBJECT_OPERATOR","->",494],["T_STRING","schema",494],["T_OBJECT_OPERATOR","->",494],["T_STRING","insert",494],"(",["T_STATIC","static",494],["T_DOUBLE_COLON","::",494],["T_STRING","tableName",494],"(",")",",",["T_WHITESPACE"," ",494],["T_VARIABLE","$values",494],")",")",["T_WHITESPACE"," ",494],["T_IS_IDENTICAL","===",494],["T_WHITESPACE"," ",494],["T_STRING","false",494],")",["T_WHITESPACE"," ",494],"{",["T_WHITESPACE","\n            ",494],["T_RETURN","return",495],["T_WHITESPACE"," ",495],["T_STRING","false",495],";",["T_WHITESPACE","\n        ",495],"}",["T_WHITESPACE","\n        ",496],["T_FOREACH","foreach",497],["T_WHITESPACE"," ",497],"(",["T_VARIABLE","$primaryKeys",497],["T_WHITESPACE"," ",497],["T_AS","as",497],["T_WHITESPACE"," ",497],["T_VARIABLE","$name",497],["T_WHITESPACE"," ",497],["T_DOUBLE_ARROW","=>",497],["T_WHITESPACE"," ",497],["T_VARIABLE","$value",497],")",["T_WHITESPACE"," ",497],"{",["T_WHITESPACE","\n            ",497],["T_VARIABLE","$id",498],["T_WHITESPACE"," ",498],"=",["T_WHITESPACE"," ",498],["T_STATIC","static",498],["T_DOUBLE_COLON","::",498],["T_STRING","getTableSchema",498],"(",")",["T_OBJECT_OPERATOR","->",498],["T_STRING","columns",498],"[",["T_VARIABLE","$name",498],"]",["T_OBJECT_OPERATOR","->",498],["T_STRING","phpTypecast",498],"(",["T_VARIABLE","$value",498],")",";",["T_WHITESPACE","\n            ",498],["T_VARIABLE","$this",499],["T_OBJECT_OPERATOR","->",499],["T_STRING","setAttribute",499],"(",["T_VARIABLE","$name",499],",",["T_WHITESPACE"," ",499],["T_VARIABLE","$id",499],")",";",["T_WHITESPACE","\n            ",499],["T_VARIABLE","$values",500],"[",["T_VARIABLE","$name",500],"]",["T_WHITESPACE"," ",500],"=",["T_WHITESPACE"," ",500],["T_VARIABLE","$id",500],";",["T_WHITESPACE","\n        ",500],"}",["T_WHITESPACE","\n\n        ",501],["T_VARIABLE","$changedAttributes",503],["T_WHITESPACE"," ",503],"=",["T_WHITESPACE"," ",503],["T_STRING","array_fill_keys",503],"(",["T_STRING","array_keys",503],"(",["T_VARIABLE","$values",503],")",",",["T_WHITESPACE"," ",503],["T_STRING","null",503],")",";",["T_WHITESPACE","\n        ",503],["T_VARIABLE","$this",504],["T_OBJECT_OPERATOR","->",504],["T_STRING","setOldAttributes",504],"(",["T_VARIABLE","$values",504],")",";",["T_WHITESPACE","\n        ",504],["T_VARIABLE","$this",505],["T_OBJECT_OPERATOR","->",505],["T_STRING","afterSave",505],"(",["T_STRING","true",505],",",["T_WHITESPACE"," ",505],["T_VARIABLE","$changedAttributes",505],")",";",["T_WHITESPACE","\n\n        ",505],["T_RETURN","return",507],["T_WHITESPACE"," ",507],["T_STRING","true",507],";",["T_WHITESPACE","\n    ",507],"}",["T_WHITESPACE","\n\n    ",508],["T_DOC_COMMENT","\/**\n     * Saves the changes to this active record into the associated database table.\n     *\n     * This method performs the following steps in order:\n     *\n     * 1. call [[beforeValidate()]] when `$runValidation` is `true`. If [[beforeValidate()]]\n     *    returns `false`, the rest of the steps will be skipped;\n     * 2. call [[afterValidate()]] when `$runValidation` is `true`. If validation\n     *    failed, the rest of the steps will be skipped;\n     * 3. call [[beforeSave()]]. If [[beforeSave()]] returns `false`,\n     *    the rest of the steps will be skipped;\n     * 4. save the record into database. If this fails, it will skip the rest of the steps;\n     * 5. call [[afterSave()]];\n     *\n     * In the above step 1, 2, 3 and 5, events [[EVENT_BEFORE_VALIDATE]],\n     * [[EVENT_AFTER_VALIDATE]], [[EVENT_BEFORE_UPDATE]], and [[EVENT_AFTER_UPDATE]]\n     * will be raised by the corresponding methods.\n     *\n     * Only the [[dirtyAttributes|changed attribute values]] will be saved into database.\n     *\n     * For example, to update a customer record:\n     *\n     * ```php\n     * $customer = Customer::findOne($id);\n     * $customer->name = $name;\n     * $customer->email = $email;\n     * $customer->update();\n     * ```\n     *\n     * Note that it is possible the update does not affect any row in the table.\n     * In this case, this method will return 0. For this reason, you should use the following\n     * code to check if update() is successful or not:\n     *\n     * ```php\n     * if ($customer->update() !== false) {\n     *     \/\/ update successful\n     * } else {\n     *     \/\/ update failed\n     * }\n     * ```\n     *\n     * @param bool $runValidation whether to perform validation (calling [[validate()]])\n     * before saving the record. Defaults to `true`. If the validation fails, the record\n     * will not be saved to the database and this method will return `false`.\n     * @param array $attributeNames list of attributes that need to be saved. Defaults to `null`,\n     * meaning all attributes that are loaded from DB will be saved.\n     * @return int|false the number of rows affected, or false if validation fails\n     * or [[beforeSave()]] stops the updating process.\n     * @throws StaleObjectException if [[optimisticLock|optimistic locking]] is enabled and the data\n     * being updated is outdated.\n     * @throws \\Exception in case update failed.\n     *\/",510],["T_WHITESPACE","\n    ",561],["T_PUBLIC","public",562],["T_WHITESPACE"," ",562],["T_FUNCTION","function",562],["T_WHITESPACE"," ",562],["T_STRING","update",562],"(",["T_VARIABLE","$runValidation",562],["T_WHITESPACE"," ",562],"=",["T_WHITESPACE"," ",562],["T_STRING","true",562],",",["T_WHITESPACE"," ",562],["T_VARIABLE","$attributeNames",562],["T_WHITESPACE"," ",562],"=",["T_WHITESPACE"," ",562],["T_STRING","null",562],")",["T_WHITESPACE","\n    ",562],"{",["T_WHITESPACE","\n        ",563],["T_IF","if",564],["T_WHITESPACE"," ",564],"(",["T_VARIABLE","$runValidation",564],["T_WHITESPACE"," ",564],["T_BOOLEAN_AND","&&",564],["T_WHITESPACE"," ",564],"!",["T_VARIABLE","$this",564],["T_OBJECT_OPERATOR","->",564],["T_STRING","validate",564],"(",["T_VARIABLE","$attributeNames",564],")",")",["T_WHITESPACE"," ",564],"{",["T_WHITESPACE","\n            ",564],["T_STRING","Yii",565],["T_DOUBLE_COLON","::",565],["T_STRING","info",565],"(",["T_CONSTANT_ENCAPSED_STRING","'Model not updated due to validation error.'",565],",",["T_WHITESPACE"," ",565],["T_METHOD_C","__METHOD__",565],")",";",["T_WHITESPACE","\n            ",565],["T_RETURN","return",566],["T_WHITESPACE"," ",566],["T_STRING","false",566],";",["T_WHITESPACE","\n        ",566],"}",["T_WHITESPACE","\n\n        ",567],["T_IF","if",569],["T_WHITESPACE"," ",569],"(","!",["T_VARIABLE","$this",569],["T_OBJECT_OPERATOR","->",569],["T_STRING","isTransactional",569],"(",["T_STRING","self",569],["T_DOUBLE_COLON","::",569],["T_STRING","OP_UPDATE",569],")",")",["T_WHITESPACE"," ",569],"{",["T_WHITESPACE","\n            ",569],["T_RETURN","return",570],["T_WHITESPACE"," ",570],["T_VARIABLE","$this",570],["T_OBJECT_OPERATOR","->",570],["T_STRING","updateInternal",570],"(",["T_VARIABLE","$attributeNames",570],")",";",["T_WHITESPACE","\n        ",570],"}",["T_WHITESPACE","\n\n        ",571],["T_VARIABLE","$transaction",573],["T_WHITESPACE"," ",573],"=",["T_WHITESPACE"," ",573],["T_STATIC","static",573],["T_DOUBLE_COLON","::",573],["T_STRING","getDb",573],"(",")",["T_OBJECT_OPERATOR","->",573],["T_STRING","beginTransaction",573],"(",")",";",["T_WHITESPACE","\n        ",573],["T_TRY","try",574],["T_WHITESPACE"," ",574],"{",["T_WHITESPACE","\n            ",574],["T_VARIABLE","$result",575],["T_WHITESPACE"," ",575],"=",["T_WHITESPACE"," ",575],["T_VARIABLE","$this",575],["T_OBJECT_OPERATOR","->",575],["T_STRING","updateInternal",575],"(",["T_VARIABLE","$attributeNames",575],")",";",["T_WHITESPACE","\n            ",575],["T_IF","if",576],["T_WHITESPACE"," ",576],"(",["T_VARIABLE","$result",576],["T_WHITESPACE"," ",576],["T_IS_IDENTICAL","===",576],["T_WHITESPACE"," ",576],["T_STRING","false",576],")",["T_WHITESPACE"," ",576],"{",["T_WHITESPACE","\n                ",576],["T_VARIABLE","$transaction",577],["T_OBJECT_OPERATOR","->",577],["T_STRING","rollBack",577],"(",")",";",["T_WHITESPACE","\n            ",577],"}",["T_WHITESPACE"," ",578],["T_ELSE","else",578],["T_WHITESPACE"," ",578],"{",["T_WHITESPACE","\n                ",578],["T_VARIABLE","$transaction",579],["T_OBJECT_OPERATOR","->",579],["T_STRING","commit",579],"(",")",";",["T_WHITESPACE","\n            ",579],"}",["T_WHITESPACE","\n            ",580],["T_RETURN","return",581],["T_WHITESPACE"," ",581],["T_VARIABLE","$result",581],";",["T_WHITESPACE","\n        ",581],"}",["T_WHITESPACE"," ",582],["T_CATCH","catch",582],["T_WHITESPACE"," ",582],"(",["T_NS_SEPARATOR","\\",582],["T_STRING","Exception",582],["T_WHITESPACE"," ",582],["T_VARIABLE","$e",582],")",["T_WHITESPACE"," ",582],"{",["T_WHITESPACE","\n            ",582],["T_VARIABLE","$transaction",583],["T_OBJECT_OPERATOR","->",583],["T_STRING","rollBack",583],"(",")",";",["T_WHITESPACE","\n            ",583],["T_THROW","throw",584],["T_WHITESPACE"," ",584],["T_VARIABLE","$e",584],";",["T_WHITESPACE","\n        ",584],"}",["T_WHITESPACE"," ",585],["T_CATCH","catch",585],["T_WHITESPACE"," ",585],"(",["T_NS_SEPARATOR","\\",585],["T_STRING","Throwable",585],["T_WHITESPACE"," ",585],["T_VARIABLE","$e",585],")",["T_WHITESPACE"," ",585],"{",["T_WHITESPACE","\n            ",585],["T_VARIABLE","$transaction",586],["T_OBJECT_OPERATOR","->",586],["T_STRING","rollBack",586],"(",")",";",["T_WHITESPACE","\n            ",586],["T_THROW","throw",587],["T_WHITESPACE"," ",587],["T_VARIABLE","$e",587],";",["T_WHITESPACE","\n        ",587],"}",["T_WHITESPACE","\n    ",588],"}",["T_WHITESPACE","\n\n    ",589],["T_DOC_COMMENT","\/**\n     * Deletes the table row corresponding to this active record.\n     *\n     * This method performs the following steps in order:\n     *\n     * 1. call [[beforeDelete()]]. If the method returns `false`, it will skip the\n     *    rest of the steps;\n     * 2. delete the record from the database;\n     * 3. call [[afterDelete()]].\n     *\n     * In the above step 1 and 3, events named [[EVENT_BEFORE_DELETE]] and [[EVENT_AFTER_DELETE]]\n     * will be raised by the corresponding methods.\n     *\n     * @return int|false the number of rows deleted, or `false` if the deletion is unsuccessful for some reason.\n     * Note that it is possible the number of rows deleted is 0, even though the deletion execution is successful.\n     * @throws StaleObjectException if [[optimisticLock|optimistic locking]] is enabled and the data\n     * being deleted is outdated.\n     * @throws \\Exception in case delete failed.\n     *\/",591],["T_WHITESPACE","\n    ",609],["T_PUBLIC","public",610],["T_WHITESPACE"," ",610],["T_FUNCTION","function",610],["T_WHITESPACE"," ",610],["T_STRING","delete",610],"(",")",["T_WHITESPACE","\n    ",610],"{",["T_WHITESPACE","\n        ",611],["T_IF","if",612],["T_WHITESPACE"," ",612],"(","!",["T_VARIABLE","$this",612],["T_OBJECT_OPERATOR","->",612],["T_STRING","isTransactional",612],"(",["T_STRING","self",612],["T_DOUBLE_COLON","::",612],["T_STRING","OP_DELETE",612],")",")",["T_WHITESPACE"," ",612],"{",["T_WHITESPACE","\n            ",612],["T_RETURN","return",613],["T_WHITESPACE"," ",613],["T_VARIABLE","$this",613],["T_OBJECT_OPERATOR","->",613],["T_STRING","deleteInternal",613],"(",")",";",["T_WHITESPACE","\n        ",613],"}",["T_WHITESPACE","\n\n        ",614],["T_VARIABLE","$transaction",616],["T_WHITESPACE"," ",616],"=",["T_WHITESPACE"," ",616],["T_STATIC","static",616],["T_DOUBLE_COLON","::",616],["T_STRING","getDb",616],"(",")",["T_OBJECT_OPERATOR","->",616],["T_STRING","beginTransaction",616],"(",")",";",["T_WHITESPACE","\n        ",616],["T_TRY","try",617],["T_WHITESPACE"," ",617],"{",["T_WHITESPACE","\n            ",617],["T_VARIABLE","$result",618],["T_WHITESPACE"," ",618],"=",["T_WHITESPACE"," ",618],["T_VARIABLE","$this",618],["T_OBJECT_OPERATOR","->",618],["T_STRING","deleteInternal",618],"(",")",";",["T_WHITESPACE","\n            ",618],["T_IF","if",619],["T_WHITESPACE"," ",619],"(",["T_VARIABLE","$result",619],["T_WHITESPACE"," ",619],["T_IS_IDENTICAL","===",619],["T_WHITESPACE"," ",619],["T_STRING","false",619],")",["T_WHITESPACE"," ",619],"{",["T_WHITESPACE","\n                ",619],["T_VARIABLE","$transaction",620],["T_OBJECT_OPERATOR","->",620],["T_STRING","rollBack",620],"(",")",";",["T_WHITESPACE","\n            ",620],"}",["T_WHITESPACE"," ",621],["T_ELSE","else",621],["T_WHITESPACE"," ",621],"{",["T_WHITESPACE","\n                ",621],["T_VARIABLE","$transaction",622],["T_OBJECT_OPERATOR","->",622],["T_STRING","commit",622],"(",")",";",["T_WHITESPACE","\n            ",622],"}",["T_WHITESPACE","\n            ",623],["T_RETURN","return",624],["T_WHITESPACE"," ",624],["T_VARIABLE","$result",624],";",["T_WHITESPACE","\n        ",624],"}",["T_WHITESPACE"," ",625],["T_CATCH","catch",625],["T_WHITESPACE"," ",625],"(",["T_NS_SEPARATOR","\\",625],["T_STRING","Exception",625],["T_WHITESPACE"," ",625],["T_VARIABLE","$e",625],")",["T_WHITESPACE"," ",625],"{",["T_WHITESPACE","\n            ",625],["T_VARIABLE","$transaction",626],["T_OBJECT_OPERATOR","->",626],["T_STRING","rollBack",626],"(",")",";",["T_WHITESPACE","\n            ",626],["T_THROW","throw",627],["T_WHITESPACE"," ",627],["T_VARIABLE","$e",627],";",["T_WHITESPACE","\n        ",627],"}",["T_WHITESPACE"," ",628],["T_CATCH","catch",628],["T_WHITESPACE"," ",628],"(",["T_NS_SEPARATOR","\\",628],["T_STRING","Throwable",628],["T_WHITESPACE"," ",628],["T_VARIABLE","$e",628],")",["T_WHITESPACE"," ",628],"{",["T_WHITESPACE","\n            ",628],["T_VARIABLE","$transaction",629],["T_OBJECT_OPERATOR","->",629],["T_STRING","rollBack",629],"(",")",";",["T_WHITESPACE","\n            ",629],["T_THROW","throw",630],["T_WHITESPACE"," ",630],["T_VARIABLE","$e",630],";",["T_WHITESPACE","\n        ",630],"}",["T_WHITESPACE","\n    ",631],"}",["T_WHITESPACE","\n\n    ",632],["T_DOC_COMMENT","\/**\n     * Deletes an ActiveRecord without considering transaction.\n     * @return int|false the number of rows deleted, or `false` if the deletion is unsuccessful for some reason.\n     * Note that it is possible the number of rows deleted is 0, even though the deletion execution is successful.\n     * @throws StaleObjectException\n     *\/",634],["T_WHITESPACE","\n    ",639],["T_PROTECTED","protected",640],["T_WHITESPACE"," ",640],["T_FUNCTION","function",640],["T_WHITESPACE"," ",640],["T_STRING","deleteInternal",640],"(",")",["T_WHITESPACE","\n    ",640],"{",["T_WHITESPACE","\n        ",641],["T_IF","if",642],["T_WHITESPACE"," ",642],"(","!",["T_VARIABLE","$this",642],["T_OBJECT_OPERATOR","->",642],["T_STRING","beforeDelete",642],"(",")",")",["T_WHITESPACE"," ",642],"{",["T_WHITESPACE","\n            ",642],["T_RETURN","return",643],["T_WHITESPACE"," ",643],["T_STRING","false",643],";",["T_WHITESPACE","\n        ",643],"}",["T_WHITESPACE","\n\n        ",644],["T_COMMENT","\/\/ we do not check the return value of deleteAll() because it's possible\n",646],["T_WHITESPACE","        ",647],["T_COMMENT","\/\/ the record is already deleted in the database and thus the method will return 0\n",647],["T_WHITESPACE","        ",648],["T_VARIABLE","$condition",648],["T_WHITESPACE"," ",648],"=",["T_WHITESPACE"," ",648],["T_VARIABLE","$this",648],["T_OBJECT_OPERATOR","->",648],["T_STRING","getOldPrimaryKey",648],"(",["T_STRING","true",648],")",";",["T_WHITESPACE","\n        ",648],["T_VARIABLE","$lock",649],["T_WHITESPACE"," ",649],"=",["T_WHITESPACE"," ",649],["T_VARIABLE","$this",649],["T_OBJECT_OPERATOR","->",649],["T_STRING","optimisticLock",649],"(",")",";",["T_WHITESPACE","\n        ",649],["T_IF","if",650],["T_WHITESPACE"," ",650],"(",["T_VARIABLE","$lock",650],["T_WHITESPACE"," ",650],["T_IS_NOT_IDENTICAL","!==",650],["T_WHITESPACE"," ",650],["T_STRING","null",650],")",["T_WHITESPACE"," ",650],"{",["T_WHITESPACE","\n            ",650],["T_VARIABLE","$condition",651],"[",["T_VARIABLE","$lock",651],"]",["T_WHITESPACE"," ",651],"=",["T_WHITESPACE"," ",651],["T_VARIABLE","$this",651],["T_OBJECT_OPERATOR","->",651],["T_VARIABLE","$lock",651],";",["T_WHITESPACE","\n        ",651],"}",["T_WHITESPACE","\n        ",652],["T_VARIABLE","$result",653],["T_WHITESPACE"," ",653],"=",["T_WHITESPACE"," ",653],["T_STATIC","static",653],["T_DOUBLE_COLON","::",653],["T_STRING","deleteAll",653],"(",["T_VARIABLE","$condition",653],")",";",["T_WHITESPACE","\n        ",653],["T_IF","if",654],["T_WHITESPACE"," ",654],"(",["T_VARIABLE","$lock",654],["T_WHITESPACE"," ",654],["T_IS_NOT_IDENTICAL","!==",654],["T_WHITESPACE"," ",654],["T_STRING","null",654],["T_WHITESPACE"," ",654],["T_BOOLEAN_AND","&&",654],["T_WHITESPACE"," ",654],"!",["T_VARIABLE","$result",654],")",["T_WHITESPACE"," ",654],"{",["T_WHITESPACE","\n            ",654],["T_THROW","throw",655],["T_WHITESPACE"," ",655],["T_NEW","new",655],["T_WHITESPACE"," ",655],["T_STRING","StaleObjectException",655],"(",["T_CONSTANT_ENCAPSED_STRING","'The object being deleted is outdated.'",655],")",";",["T_WHITESPACE","\n        ",655],"}",["T_WHITESPACE","\n        ",656],["T_VARIABLE","$this",657],["T_OBJECT_OPERATOR","->",657],["T_STRING","setOldAttributes",657],"(",["T_STRING","null",657],")",";",["T_WHITESPACE","\n        ",657],["T_VARIABLE","$this",658],["T_OBJECT_OPERATOR","->",658],["T_STRING","afterDelete",658],"(",")",";",["T_WHITESPACE","\n\n        ",658],["T_RETURN","return",660],["T_WHITESPACE"," ",660],["T_VARIABLE","$result",660],";",["T_WHITESPACE","\n    ",660],"}",["T_WHITESPACE","\n\n    ",661],["T_DOC_COMMENT","\/**\n     * Returns a value indicating whether the given active record is the same as the current one.\n     * The comparison is made by comparing the table names and the primary key values of the two active records.\n     * If one of the records [[isNewRecord|is new]] they are also considered not equal.\n     * @param ActiveRecord $record record to compare to\n     * @return bool whether the two active records refer to the same row in the same database table.\n     *\/",663],["T_WHITESPACE","\n    ",669],["T_PUBLIC","public",670],["T_WHITESPACE"," ",670],["T_FUNCTION","function",670],["T_WHITESPACE"," ",670],["T_STRING","equals",670],"(",["T_VARIABLE","$record",670],")",["T_WHITESPACE","\n    ",670],"{",["T_WHITESPACE","\n        ",671],["T_IF","if",672],["T_WHITESPACE"," ",672],"(",["T_VARIABLE","$this",672],["T_OBJECT_OPERATOR","->",672],["T_STRING","isNewRecord",672],["T_WHITESPACE"," ",672],["T_BOOLEAN_OR","||",672],["T_WHITESPACE"," ",672],["T_VARIABLE","$record",672],["T_OBJECT_OPERATOR","->",672],["T_STRING","isNewRecord",672],")",["T_WHITESPACE"," ",672],"{",["T_WHITESPACE","\n            ",672],["T_RETURN","return",673],["T_WHITESPACE"," ",673],["T_STRING","false",673],";",["T_WHITESPACE","\n        ",673],"}",["T_WHITESPACE","\n\n        ",674],["T_RETURN","return",676],["T_WHITESPACE"," ",676],["T_STATIC","static",676],["T_DOUBLE_COLON","::",676],["T_STRING","tableName",676],"(",")",["T_WHITESPACE"," ",676],["T_IS_IDENTICAL","===",676],["T_WHITESPACE"," ",676],["T_VARIABLE","$record",676],["T_OBJECT_OPERATOR","->",676],["T_STRING","tableName",676],"(",")",["T_WHITESPACE"," ",676],["T_BOOLEAN_AND","&&",676],["T_WHITESPACE"," ",676],["T_VARIABLE","$this",676],["T_OBJECT_OPERATOR","->",676],["T_STRING","getPrimaryKey",676],"(",")",["T_WHITESPACE"," ",676],["T_IS_IDENTICAL","===",676],["T_WHITESPACE"," ",676],["T_VARIABLE","$record",676],["T_OBJECT_OPERATOR","->",676],["T_STRING","getPrimaryKey",676],"(",")",";",["T_WHITESPACE","\n    ",676],"}",["T_WHITESPACE","\n\n    ",677],["T_DOC_COMMENT","\/**\n     * Returns a value indicating whether the specified operation is transactional in the current [[$scenario]].\n     * @param int $operation the operation to check. Possible values are [[OP_INSERT]], [[OP_UPDATE]] and [[OP_DELETE]].\n     * @return bool whether the specified operation is transactional in the current [[scenario]].\n     *\/",679],["T_WHITESPACE","\n    ",683],["T_PUBLIC","public",684],["T_WHITESPACE"," ",684],["T_FUNCTION","function",684],["T_WHITESPACE"," ",684],["T_STRING","isTransactional",684],"(",["T_VARIABLE","$operation",684],")",["T_WHITESPACE","\n    ",684],"{",["T_WHITESPACE","\n        ",685],["T_VARIABLE","$scenario",686],["T_WHITESPACE"," ",686],"=",["T_WHITESPACE"," ",686],["T_VARIABLE","$this",686],["T_OBJECT_OPERATOR","->",686],["T_STRING","getScenario",686],"(",")",";",["T_WHITESPACE","\n        ",686],["T_VARIABLE","$transactions",687],["T_WHITESPACE"," ",687],"=",["T_WHITESPACE"," ",687],["T_VARIABLE","$this",687],["T_OBJECT_OPERATOR","->",687],["T_STRING","transactions",687],"(",")",";",["T_WHITESPACE","\n\n        ",687],["T_RETURN","return",689],["T_WHITESPACE"," ",689],["T_ISSET","isset",689],"(",["T_VARIABLE","$transactions",689],"[",["T_VARIABLE","$scenario",689],"]",")",["T_WHITESPACE"," ",689],["T_BOOLEAN_AND","&&",689],["T_WHITESPACE"," ",689],"(",["T_VARIABLE","$transactions",689],"[",["T_VARIABLE","$scenario",689],"]",["T_WHITESPACE"," ",689],"&",["T_WHITESPACE"," ",689],["T_VARIABLE","$operation",689],")",";",["T_WHITESPACE","\n    ",689],"}",["T_WHITESPACE","\n",690],"}",["T_WHITESPACE","\n",691]]