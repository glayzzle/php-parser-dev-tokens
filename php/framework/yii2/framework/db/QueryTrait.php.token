[["T_OPEN_TAG","<?php\n",1],["T_DOC_COMMENT","\/**\n * @link http:\/\/www.yiiframework.com\/\n * @copyright Copyright (c) 2008 Yii Software LLC\n * @license http:\/\/www.yiiframework.com\/license\/\n *\/",2],["T_WHITESPACE","\n\n",6],["T_NAMESPACE","namespace",8],["T_WHITESPACE"," ",8],["T_STRING","yii",8],["T_NS_SEPARATOR","\\",8],["T_STRING","db",8],";",["T_WHITESPACE","\n\n",8],["T_USE","use",10],["T_WHITESPACE"," ",10],["T_STRING","yii",10],["T_NS_SEPARATOR","\\",10],["T_STRING","base",10],["T_NS_SEPARATOR","\\",10],["T_STRING","NotSupportedException",10],";",["T_WHITESPACE","\n\n",10],["T_DOC_COMMENT","\/**\n * The BaseQuery trait represents the minimum method set of a database Query.\n *\n * It is supposed to be used in a class that implements the [[QueryInterface]].\n *\n * @author Qiang Xue <qiang.xue@gmail.com>\n * @author Carsten Brandt <mail@cebe.cc>\n * @since 2.0\n *\/",12],["T_WHITESPACE","\n",20],["T_TRAIT","trait",21],["T_WHITESPACE"," ",21],["T_STRING","QueryTrait",21],["T_WHITESPACE","\n",21],"{",["T_WHITESPACE","\n    ",22],["T_DOC_COMMENT","\/**\n     * @var string|array query condition. This refers to the WHERE clause in a SQL statement.\n     * For example, `['age' => 31, 'team' => 1]`.\n     * @see where() for valid syntax on specifying this value.\n     *\/",23],["T_WHITESPACE","\n    ",27],["T_PUBLIC","public",28],["T_WHITESPACE"," ",28],["T_VARIABLE","$where",28],";",["T_WHITESPACE","\n    ",28],["T_DOC_COMMENT","\/**\n     * @var int maximum number of records to be returned. If not set or less than 0, it means no limit.\n     *\/",29],["T_WHITESPACE","\n    ",31],["T_PUBLIC","public",32],["T_WHITESPACE"," ",32],["T_VARIABLE","$limit",32],";",["T_WHITESPACE","\n    ",32],["T_DOC_COMMENT","\/**\n     * @var int zero-based offset from where the records are to be returned. If not set or\n     * less than 0, it means starting from the beginning.\n     *\/",33],["T_WHITESPACE","\n    ",36],["T_PUBLIC","public",37],["T_WHITESPACE"," ",37],["T_VARIABLE","$offset",37],";",["T_WHITESPACE","\n    ",37],["T_DOC_COMMENT","\/**\n     * @var array how to sort the query results. This is used to construct the ORDER BY clause in a SQL statement.\n     * The array keys are the columns to be sorted by, and the array values are the corresponding sort directions which\n     * can be either [SORT_ASC](http:\/\/php.net\/manual\/en\/array.constants.php#constant.sort-asc)\n     * or [SORT_DESC](http:\/\/php.net\/manual\/en\/array.constants.php#constant.sort-desc).\n     * The array may also contain [[Expression]] objects. If that is the case, the expressions\n     * will be converted into strings without any change.\n     *\/",38],["T_WHITESPACE","\n    ",45],["T_PUBLIC","public",46],["T_WHITESPACE"," ",46],["T_VARIABLE","$orderBy",46],";",["T_WHITESPACE","\n    ",46],["T_DOC_COMMENT","\/**\n     * @var string|callable $column the name of the column by which the query results should be indexed by.\n     * This can also be a callable (e.g. anonymous function) that returns the index value based on the given\n     * row data. For more details, see [[indexBy()]]. This property is only used by [[QueryInterface::all()|all()]].\n     *\/",47],["T_WHITESPACE","\n    ",51],["T_PUBLIC","public",52],["T_WHITESPACE"," ",52],["T_VARIABLE","$indexBy",52],";",["T_WHITESPACE","\n    ",52],["T_DOC_COMMENT","\/**\n     * @var boolean whether to emulate the actual query execution, returning empty or false results.\n     * @see emulateExecution()\n     * @since 2.0.11\n     *\/",53],["T_WHITESPACE","\n    ",57],["T_PUBLIC","public",58],["T_WHITESPACE"," ",58],["T_VARIABLE","$emulateExecution",58],["T_WHITESPACE"," ",58],"=",["T_WHITESPACE"," ",58],["T_STRING","false",58],";",["T_WHITESPACE","\n\n\n    ",58],["T_DOC_COMMENT","\/**\n     * Sets the [[indexBy]] property.\n     * @param string|callable $column the name of the column by which the query results should be indexed by.\n     * This can also be a callable (e.g. anonymous function) that returns the index value based on the given\n     * row data. The signature of the callable should be:\n     *\n     * ```php\n     * function ($row)\n     * {\n     *     \/\/ return the index value corresponding to $row\n     * }\n     * ```\n     *\n     * @return $this the query object itself\n     *\/",61],["T_WHITESPACE","\n    ",75],["T_PUBLIC","public",76],["T_WHITESPACE"," ",76],["T_FUNCTION","function",76],["T_WHITESPACE"," ",76],["T_STRING","indexBy",76],"(",["T_VARIABLE","$column",76],")",["T_WHITESPACE","\n    ",76],"{",["T_WHITESPACE","\n        ",77],["T_VARIABLE","$this",78],["T_OBJECT_OPERATOR","->",78],["T_STRING","indexBy",78],["T_WHITESPACE"," ",78],"=",["T_WHITESPACE"," ",78],["T_VARIABLE","$column",78],";",["T_WHITESPACE","\n        ",78],["T_RETURN","return",79],["T_WHITESPACE"," ",79],["T_VARIABLE","$this",79],";",["T_WHITESPACE","\n    ",79],"}",["T_WHITESPACE","\n\n    ",80],["T_DOC_COMMENT","\/**\n     * Sets the WHERE part of the query.\n     *\n     * See [[QueryInterface::where()]] for detailed documentation.\n     *\n     * @param string|array $condition the conditions that should be put in the WHERE part.\n     * @return $this the query object itself\n     * @see andWhere()\n     * @see orWhere()\n     *\/",82],["T_WHITESPACE","\n    ",91],["T_PUBLIC","public",92],["T_WHITESPACE"," ",92],["T_FUNCTION","function",92],["T_WHITESPACE"," ",92],["T_STRING","where",92],"(",["T_VARIABLE","$condition",92],")",["T_WHITESPACE","\n    ",92],"{",["T_WHITESPACE","\n        ",93],["T_VARIABLE","$this",94],["T_OBJECT_OPERATOR","->",94],["T_STRING","where",94],["T_WHITESPACE"," ",94],"=",["T_WHITESPACE"," ",94],["T_VARIABLE","$condition",94],";",["T_WHITESPACE","\n        ",94],["T_RETURN","return",95],["T_WHITESPACE"," ",95],["T_VARIABLE","$this",95],";",["T_WHITESPACE","\n    ",95],"}",["T_WHITESPACE","\n\n    ",96],["T_DOC_COMMENT","\/**\n     * Adds an additional WHERE condition to the existing one.\n     * The new condition and the existing one will be joined using the 'AND' operator.\n     * @param string|array $condition the new WHERE condition. Please refer to [[where()]]\n     * on how to specify this parameter.\n     * @return $this the query object itself\n     * @see where()\n     * @see orWhere()\n     *\/",98],["T_WHITESPACE","\n    ",106],["T_PUBLIC","public",107],["T_WHITESPACE"," ",107],["T_FUNCTION","function",107],["T_WHITESPACE"," ",107],["T_STRING","andWhere",107],"(",["T_VARIABLE","$condition",107],")",["T_WHITESPACE","\n    ",107],"{",["T_WHITESPACE","\n        ",108],["T_IF","if",109],["T_WHITESPACE"," ",109],"(",["T_VARIABLE","$this",109],["T_OBJECT_OPERATOR","->",109],["T_STRING","where",109],["T_WHITESPACE"," ",109],["T_IS_IDENTICAL","===",109],["T_WHITESPACE"," ",109],["T_STRING","null",109],")",["T_WHITESPACE"," ",109],"{",["T_WHITESPACE","\n            ",109],["T_VARIABLE","$this",110],["T_OBJECT_OPERATOR","->",110],["T_STRING","where",110],["T_WHITESPACE"," ",110],"=",["T_WHITESPACE"," ",110],["T_VARIABLE","$condition",110],";",["T_WHITESPACE","\n        ",110],"}",["T_WHITESPACE"," ",111],["T_ELSE","else",111],["T_WHITESPACE"," ",111],"{",["T_WHITESPACE","\n            ",111],["T_VARIABLE","$this",112],["T_OBJECT_OPERATOR","->",112],["T_STRING","where",112],["T_WHITESPACE"," ",112],"=",["T_WHITESPACE"," ",112],"[",["T_CONSTANT_ENCAPSED_STRING","'and'",112],",",["T_WHITESPACE"," ",112],["T_VARIABLE","$this",112],["T_OBJECT_OPERATOR","->",112],["T_STRING","where",112],",",["T_WHITESPACE"," ",112],["T_VARIABLE","$condition",112],"]",";",["T_WHITESPACE","\n        ",112],"}",["T_WHITESPACE","\n        ",113],["T_RETURN","return",114],["T_WHITESPACE"," ",114],["T_VARIABLE","$this",114],";",["T_WHITESPACE","\n    ",114],"}",["T_WHITESPACE","\n\n    ",115],["T_DOC_COMMENT","\/**\n     * Adds an additional WHERE condition to the existing one.\n     * The new condition and the existing one will be joined using the 'OR' operator.\n     * @param string|array $condition the new WHERE condition. Please refer to [[where()]]\n     * on how to specify this parameter.\n     * @return $this the query object itself\n     * @see where()\n     * @see andWhere()\n     *\/",117],["T_WHITESPACE","\n    ",125],["T_PUBLIC","public",126],["T_WHITESPACE"," ",126],["T_FUNCTION","function",126],["T_WHITESPACE"," ",126],["T_STRING","orWhere",126],"(",["T_VARIABLE","$condition",126],")",["T_WHITESPACE","\n    ",126],"{",["T_WHITESPACE","\n        ",127],["T_IF","if",128],["T_WHITESPACE"," ",128],"(",["T_VARIABLE","$this",128],["T_OBJECT_OPERATOR","->",128],["T_STRING","where",128],["T_WHITESPACE"," ",128],["T_IS_IDENTICAL","===",128],["T_WHITESPACE"," ",128],["T_STRING","null",128],")",["T_WHITESPACE"," ",128],"{",["T_WHITESPACE","\n            ",128],["T_VARIABLE","$this",129],["T_OBJECT_OPERATOR","->",129],["T_STRING","where",129],["T_WHITESPACE"," ",129],"=",["T_WHITESPACE"," ",129],["T_VARIABLE","$condition",129],";",["T_WHITESPACE","\n        ",129],"}",["T_WHITESPACE"," ",130],["T_ELSE","else",130],["T_WHITESPACE"," ",130],"{",["T_WHITESPACE","\n            ",130],["T_VARIABLE","$this",131],["T_OBJECT_OPERATOR","->",131],["T_STRING","where",131],["T_WHITESPACE"," ",131],"=",["T_WHITESPACE"," ",131],"[",["T_CONSTANT_ENCAPSED_STRING","'or'",131],",",["T_WHITESPACE"," ",131],["T_VARIABLE","$this",131],["T_OBJECT_OPERATOR","->",131],["T_STRING","where",131],",",["T_WHITESPACE"," ",131],["T_VARIABLE","$condition",131],"]",";",["T_WHITESPACE","\n        ",131],"}",["T_WHITESPACE","\n        ",132],["T_RETURN","return",133],["T_WHITESPACE"," ",133],["T_VARIABLE","$this",133],";",["T_WHITESPACE","\n    ",133],"}",["T_WHITESPACE","\n\n    ",134],["T_DOC_COMMENT","\/**\n     * Sets the WHERE part of the query but ignores [[isEmpty()|empty operands]].\n     *\n     * This method is similar to [[where()]]. The main difference is that this method will\n     * remove [[isEmpty()|empty query operands]]. As a result, this method is best suited\n     * for building query conditions based on filter values entered by users.\n     *\n     * The following code shows the difference between this method and [[where()]]:\n     *\n     * ```php\n     * \/\/ WHERE `age`=:age\n     * $query->filterWhere(['name' => null, 'age' => 20]);\n     * \/\/ WHERE `age`=:age\n     * $query->where(['age' => 20]);\n     * \/\/ WHERE `name` IS NULL AND `age`=:age\n     * $query->where(['name' => null, 'age' => 20]);\n     * ```\n     *\n     * Note that unlike [[where()]], you cannot pass binding parameters to this method.\n     *\n     * @param array $condition the conditions that should be put in the WHERE part.\n     * See [[where()]] on how to specify this parameter.\n     * @return $this the query object itself\n     * @see where()\n     * @see andFilterWhere()\n     * @see orFilterWhere()\n     *\/",136],["T_WHITESPACE","\n    ",162],["T_PUBLIC","public",163],["T_WHITESPACE"," ",163],["T_FUNCTION","function",163],["T_WHITESPACE"," ",163],["T_STRING","filterWhere",163],"(",["T_ARRAY","array",163],["T_WHITESPACE"," ",163],["T_VARIABLE","$condition",163],")",["T_WHITESPACE","\n    ",163],"{",["T_WHITESPACE","\n        ",164],["T_VARIABLE","$condition",165],["T_WHITESPACE"," ",165],"=",["T_WHITESPACE"," ",165],["T_VARIABLE","$this",165],["T_OBJECT_OPERATOR","->",165],["T_STRING","filterCondition",165],"(",["T_VARIABLE","$condition",165],")",";",["T_WHITESPACE","\n        ",165],["T_IF","if",166],["T_WHITESPACE"," ",166],"(",["T_VARIABLE","$condition",166],["T_WHITESPACE"," ",166],["T_IS_NOT_IDENTICAL","!==",166],["T_WHITESPACE"," ",166],"[","]",")",["T_WHITESPACE"," ",166],"{",["T_WHITESPACE","\n            ",166],["T_VARIABLE","$this",167],["T_OBJECT_OPERATOR","->",167],["T_STRING","where",167],"(",["T_VARIABLE","$condition",167],")",";",["T_WHITESPACE","\n        ",167],"}",["T_WHITESPACE","\n        ",168],["T_RETURN","return",169],["T_WHITESPACE"," ",169],["T_VARIABLE","$this",169],";",["T_WHITESPACE","\n    ",169],"}",["T_WHITESPACE","\n\n    ",170],["T_DOC_COMMENT","\/**\n     * Adds an additional WHERE condition to the existing one but ignores [[isEmpty()|empty operands]].\n     * The new condition and the existing one will be joined using the 'AND' operator.\n     *\n     * This method is similar to [[andWhere()]]. The main difference is that this method will\n     * remove [[isEmpty()|empty query operands]]. As a result, this method is best suited\n     * for building query conditions based on filter values entered by users.\n     *\n     * @param array $condition the new WHERE condition. Please refer to [[where()]]\n     * on how to specify this parameter.\n     * @return $this the query object itself\n     * @see filterWhere()\n     * @see orFilterWhere()\n     *\/",172],["T_WHITESPACE","\n    ",185],["T_PUBLIC","public",186],["T_WHITESPACE"," ",186],["T_FUNCTION","function",186],["T_WHITESPACE"," ",186],["T_STRING","andFilterWhere",186],"(",["T_ARRAY","array",186],["T_WHITESPACE"," ",186],["T_VARIABLE","$condition",186],")",["T_WHITESPACE","\n    ",186],"{",["T_WHITESPACE","\n        ",187],["T_VARIABLE","$condition",188],["T_WHITESPACE"," ",188],"=",["T_WHITESPACE"," ",188],["T_VARIABLE","$this",188],["T_OBJECT_OPERATOR","->",188],["T_STRING","filterCondition",188],"(",["T_VARIABLE","$condition",188],")",";",["T_WHITESPACE","\n        ",188],["T_IF","if",189],["T_WHITESPACE"," ",189],"(",["T_VARIABLE","$condition",189],["T_WHITESPACE"," ",189],["T_IS_NOT_IDENTICAL","!==",189],["T_WHITESPACE"," ",189],"[","]",")",["T_WHITESPACE"," ",189],"{",["T_WHITESPACE","\n            ",189],["T_VARIABLE","$this",190],["T_OBJECT_OPERATOR","->",190],["T_STRING","andWhere",190],"(",["T_VARIABLE","$condition",190],")",";",["T_WHITESPACE","\n        ",190],"}",["T_WHITESPACE","\n        ",191],["T_RETURN","return",192],["T_WHITESPACE"," ",192],["T_VARIABLE","$this",192],";",["T_WHITESPACE","\n    ",192],"}",["T_WHITESPACE","\n\n    ",193],["T_DOC_COMMENT","\/**\n     * Adds an additional WHERE condition to the existing one but ignores [[isEmpty()|empty operands]].\n     * The new condition and the existing one will be joined using the 'OR' operator.\n     *\n     * This method is similar to [[orWhere()]]. The main difference is that this method will\n     * remove [[isEmpty()|empty query operands]]. As a result, this method is best suited\n     * for building query conditions based on filter values entered by users.\n     *\n     * @param array $condition the new WHERE condition. Please refer to [[where()]]\n     * on how to specify this parameter.\n     * @return $this the query object itself\n     * @see filterWhere()\n     * @see andFilterWhere()\n     *\/",195],["T_WHITESPACE","\n    ",208],["T_PUBLIC","public",209],["T_WHITESPACE"," ",209],["T_FUNCTION","function",209],["T_WHITESPACE"," ",209],["T_STRING","orFilterWhere",209],"(",["T_ARRAY","array",209],["T_WHITESPACE"," ",209],["T_VARIABLE","$condition",209],")",["T_WHITESPACE","\n    ",209],"{",["T_WHITESPACE","\n        ",210],["T_VARIABLE","$condition",211],["T_WHITESPACE"," ",211],"=",["T_WHITESPACE"," ",211],["T_VARIABLE","$this",211],["T_OBJECT_OPERATOR","->",211],["T_STRING","filterCondition",211],"(",["T_VARIABLE","$condition",211],")",";",["T_WHITESPACE","\n        ",211],["T_IF","if",212],["T_WHITESPACE"," ",212],"(",["T_VARIABLE","$condition",212],["T_WHITESPACE"," ",212],["T_IS_NOT_IDENTICAL","!==",212],["T_WHITESPACE"," ",212],"[","]",")",["T_WHITESPACE"," ",212],"{",["T_WHITESPACE","\n            ",212],["T_VARIABLE","$this",213],["T_OBJECT_OPERATOR","->",213],["T_STRING","orWhere",213],"(",["T_VARIABLE","$condition",213],")",";",["T_WHITESPACE","\n        ",213],"}",["T_WHITESPACE","\n        ",214],["T_RETURN","return",215],["T_WHITESPACE"," ",215],["T_VARIABLE","$this",215],";",["T_WHITESPACE","\n    ",215],"}",["T_WHITESPACE","\n\n    ",216],["T_DOC_COMMENT","\/**\n     * Removes [[isEmpty()|empty operands]] from the given query condition.\n     *\n     * @param array $condition the original condition\n     * @return array the condition with [[isEmpty()|empty operands]] removed.\n     * @throws NotSupportedException if the condition operator is not supported\n     *\/",218],["T_WHITESPACE","\n    ",224],["T_PROTECTED","protected",225],["T_WHITESPACE"," ",225],["T_FUNCTION","function",225],["T_WHITESPACE"," ",225],["T_STRING","filterCondition",225],"(",["T_VARIABLE","$condition",225],")",["T_WHITESPACE","\n    ",225],"{",["T_WHITESPACE","\n        ",226],["T_IF","if",227],["T_WHITESPACE"," ",227],"(","!",["T_STRING","is_array",227],"(",["T_VARIABLE","$condition",227],")",")",["T_WHITESPACE"," ",227],"{",["T_WHITESPACE","\n            ",227],["T_RETURN","return",228],["T_WHITESPACE"," ",228],["T_VARIABLE","$condition",228],";",["T_WHITESPACE","\n        ",228],"}",["T_WHITESPACE","\n\n        ",229],["T_IF","if",231],["T_WHITESPACE"," ",231],"(","!",["T_ISSET","isset",231],"(",["T_VARIABLE","$condition",231],"[",["T_LNUMBER","0",231],"]",")",")",["T_WHITESPACE"," ",231],"{",["T_WHITESPACE","\n            ",231],["T_COMMENT","\/\/ hash format: 'column1' => 'value1', 'column2' => 'value2', ...\n",232],["T_WHITESPACE","            ",233],["T_FOREACH","foreach",233],["T_WHITESPACE"," ",233],"(",["T_VARIABLE","$condition",233],["T_WHITESPACE"," ",233],["T_AS","as",233],["T_WHITESPACE"," ",233],["T_VARIABLE","$name",233],["T_WHITESPACE"," ",233],["T_DOUBLE_ARROW","=>",233],["T_WHITESPACE"," ",233],["T_VARIABLE","$value",233],")",["T_WHITESPACE"," ",233],"{",["T_WHITESPACE","\n                ",233],["T_IF","if",234],["T_WHITESPACE"," ",234],"(",["T_VARIABLE","$this",234],["T_OBJECT_OPERATOR","->",234],["T_STRING","isEmpty",234],"(",["T_VARIABLE","$value",234],")",")",["T_WHITESPACE"," ",234],"{",["T_WHITESPACE","\n                    ",234],["T_UNSET","unset",235],"(",["T_VARIABLE","$condition",235],"[",["T_VARIABLE","$name",235],"]",")",";",["T_WHITESPACE","\n                ",235],"}",["T_WHITESPACE","\n            ",236],"}",["T_WHITESPACE","\n            ",237],["T_RETURN","return",238],["T_WHITESPACE"," ",238],["T_VARIABLE","$condition",238],";",["T_WHITESPACE","\n        ",238],"}",["T_WHITESPACE","\n\n        ",239],["T_COMMENT","\/\/ operator format: operator, operand 1, operand 2, ...\n",241],["T_WHITESPACE","\n        ",242],["T_VARIABLE","$operator",243],["T_WHITESPACE"," ",243],"=",["T_WHITESPACE"," ",243],["T_STRING","array_shift",243],"(",["T_VARIABLE","$condition",243],")",";",["T_WHITESPACE","\n\n        ",243],["T_SWITCH","switch",245],["T_WHITESPACE"," ",245],"(",["T_STRING","strtoupper",245],"(",["T_VARIABLE","$operator",245],")",")",["T_WHITESPACE"," ",245],"{",["T_WHITESPACE","\n            ",245],["T_CASE","case",246],["T_WHITESPACE"," ",246],["T_CONSTANT_ENCAPSED_STRING","'NOT'",246],":",["T_WHITESPACE","\n            ",246],["T_CASE","case",247],["T_WHITESPACE"," ",247],["T_CONSTANT_ENCAPSED_STRING","'AND'",247],":",["T_WHITESPACE","\n            ",247],["T_CASE","case",248],["T_WHITESPACE"," ",248],["T_CONSTANT_ENCAPSED_STRING","'OR'",248],":",["T_WHITESPACE","\n                ",248],["T_FOREACH","foreach",249],["T_WHITESPACE"," ",249],"(",["T_VARIABLE","$condition",249],["T_WHITESPACE"," ",249],["T_AS","as",249],["T_WHITESPACE"," ",249],["T_VARIABLE","$i",249],["T_WHITESPACE"," ",249],["T_DOUBLE_ARROW","=>",249],["T_WHITESPACE"," ",249],["T_VARIABLE","$operand",249],")",["T_WHITESPACE"," ",249],"{",["T_WHITESPACE","\n                    ",249],["T_VARIABLE","$subCondition",250],["T_WHITESPACE"," ",250],"=",["T_WHITESPACE"," ",250],["T_VARIABLE","$this",250],["T_OBJECT_OPERATOR","->",250],["T_STRING","filterCondition",250],"(",["T_VARIABLE","$operand",250],")",";",["T_WHITESPACE","\n                    ",250],["T_IF","if",251],["T_WHITESPACE"," ",251],"(",["T_VARIABLE","$this",251],["T_OBJECT_OPERATOR","->",251],["T_STRING","isEmpty",251],"(",["T_VARIABLE","$subCondition",251],")",")",["T_WHITESPACE"," ",251],"{",["T_WHITESPACE","\n                        ",251],["T_UNSET","unset",252],"(",["T_VARIABLE","$condition",252],"[",["T_VARIABLE","$i",252],"]",")",";",["T_WHITESPACE","\n                    ",252],"}",["T_WHITESPACE"," ",253],["T_ELSE","else",253],["T_WHITESPACE"," ",253],"{",["T_WHITESPACE","\n                        ",253],["T_VARIABLE","$condition",254],"[",["T_VARIABLE","$i",254],"]",["T_WHITESPACE"," ",254],"=",["T_WHITESPACE"," ",254],["T_VARIABLE","$subCondition",254],";",["T_WHITESPACE","\n                    ",254],"}",["T_WHITESPACE","\n                ",255],"}",["T_WHITESPACE","\n\n                ",256],["T_IF","if",258],["T_WHITESPACE"," ",258],"(",["T_EMPTY","empty",258],"(",["T_VARIABLE","$condition",258],")",")",["T_WHITESPACE"," ",258],"{",["T_WHITESPACE","\n                    ",258],["T_RETURN","return",259],["T_WHITESPACE"," ",259],"[","]",";",["T_WHITESPACE","\n                ",259],"}",["T_WHITESPACE","\n                ",260],["T_BREAK","break",261],";",["T_WHITESPACE","\n            ",261],["T_CASE","case",262],["T_WHITESPACE"," ",262],["T_CONSTANT_ENCAPSED_STRING","'BETWEEN'",262],":",["T_WHITESPACE","\n            ",262],["T_CASE","case",263],["T_WHITESPACE"," ",263],["T_CONSTANT_ENCAPSED_STRING","'NOT BETWEEN'",263],":",["T_WHITESPACE","\n                ",263],["T_IF","if",264],["T_WHITESPACE"," ",264],"(",["T_STRING","array_key_exists",264],"(",["T_LNUMBER","1",264],",",["T_WHITESPACE"," ",264],["T_VARIABLE","$condition",264],")",["T_WHITESPACE"," ",264],["T_BOOLEAN_AND","&&",264],["T_WHITESPACE"," ",264],["T_STRING","array_key_exists",264],"(",["T_LNUMBER","2",264],",",["T_WHITESPACE"," ",264],["T_VARIABLE","$condition",264],")",")",["T_WHITESPACE"," ",264],"{",["T_WHITESPACE","\n                    ",264],["T_IF","if",265],["T_WHITESPACE"," ",265],"(",["T_VARIABLE","$this",265],["T_OBJECT_OPERATOR","->",265],["T_STRING","isEmpty",265],"(",["T_VARIABLE","$condition",265],"[",["T_LNUMBER","1",265],"]",")",["T_WHITESPACE"," ",265],["T_BOOLEAN_OR","||",265],["T_WHITESPACE"," ",265],["T_VARIABLE","$this",265],["T_OBJECT_OPERATOR","->",265],["T_STRING","isEmpty",265],"(",["T_VARIABLE","$condition",265],"[",["T_LNUMBER","2",265],"]",")",")",["T_WHITESPACE"," ",265],"{",["T_WHITESPACE","\n                        ",265],["T_RETURN","return",266],["T_WHITESPACE"," ",266],"[","]",";",["T_WHITESPACE","\n                    ",266],"}",["T_WHITESPACE","\n                ",267],"}",["T_WHITESPACE","\n                ",268],["T_BREAK","break",269],";",["T_WHITESPACE","\n            ",269],["T_DEFAULT","default",270],":",["T_WHITESPACE","\n                ",270],["T_IF","if",271],["T_WHITESPACE"," ",271],"(",["T_STRING","array_key_exists",271],"(",["T_LNUMBER","1",271],",",["T_WHITESPACE"," ",271],["T_VARIABLE","$condition",271],")",["T_WHITESPACE"," ",271],["T_BOOLEAN_AND","&&",271],["T_WHITESPACE"," ",271],["T_VARIABLE","$this",271],["T_OBJECT_OPERATOR","->",271],["T_STRING","isEmpty",271],"(",["T_VARIABLE","$condition",271],"[",["T_LNUMBER","1",271],"]",")",")",["T_WHITESPACE"," ",271],"{",["T_WHITESPACE","\n                    ",271],["T_RETURN","return",272],["T_WHITESPACE"," ",272],"[","]",";",["T_WHITESPACE","\n                ",272],"}",["T_WHITESPACE","\n        ",273],"}",["T_WHITESPACE","\n\n        ",274],["T_STRING","array_unshift",276],"(",["T_VARIABLE","$condition",276],",",["T_WHITESPACE"," ",276],["T_VARIABLE","$operator",276],")",";",["T_WHITESPACE","\n\n        ",276],["T_RETURN","return",278],["T_WHITESPACE"," ",278],["T_VARIABLE","$condition",278],";",["T_WHITESPACE","\n    ",278],"}",["T_WHITESPACE","\n\n    ",279],["T_DOC_COMMENT","\/**\n     * Returns a value indicating whether the give value is \"empty\".\n     *\n     * The value is considered \"empty\", if one of the following conditions is satisfied:\n     *\n     * - it is `null`,\n     * - an empty string (`''`),\n     * - a string containing only whitespace characters,\n     * - or an empty array.\n     *\n     * @param mixed $value\n     * @return bool if the value is empty\n     *\/",281],["T_WHITESPACE","\n    ",293],["T_PROTECTED","protected",294],["T_WHITESPACE"," ",294],["T_FUNCTION","function",294],["T_WHITESPACE"," ",294],["T_STRING","isEmpty",294],"(",["T_VARIABLE","$value",294],")",["T_WHITESPACE","\n    ",294],"{",["T_WHITESPACE","\n        ",295],["T_RETURN","return",296],["T_WHITESPACE"," ",296],["T_VARIABLE","$value",296],["T_WHITESPACE"," ",296],["T_IS_IDENTICAL","===",296],["T_WHITESPACE"," ",296],["T_CONSTANT_ENCAPSED_STRING","''",296],["T_WHITESPACE"," ",296],["T_BOOLEAN_OR","||",296],["T_WHITESPACE"," ",296],["T_VARIABLE","$value",296],["T_WHITESPACE"," ",296],["T_IS_IDENTICAL","===",296],["T_WHITESPACE"," ",296],"[","]",["T_WHITESPACE"," ",296],["T_BOOLEAN_OR","||",296],["T_WHITESPACE"," ",296],["T_VARIABLE","$value",296],["T_WHITESPACE"," ",296],["T_IS_IDENTICAL","===",296],["T_WHITESPACE"," ",296],["T_STRING","null",296],["T_WHITESPACE"," ",296],["T_BOOLEAN_OR","||",296],["T_WHITESPACE"," ",296],["T_STRING","is_string",296],"(",["T_VARIABLE","$value",296],")",["T_WHITESPACE"," ",296],["T_BOOLEAN_AND","&&",296],["T_WHITESPACE"," ",296],["T_STRING","trim",296],"(",["T_VARIABLE","$value",296],")",["T_WHITESPACE"," ",296],["T_IS_IDENTICAL","===",296],["T_WHITESPACE"," ",296],["T_CONSTANT_ENCAPSED_STRING","''",296],";",["T_WHITESPACE","\n    ",296],"}",["T_WHITESPACE","\n\n    ",297],["T_DOC_COMMENT","\/**\n     * Sets the ORDER BY part of the query.\n     * @param string|array|Expression $columns the columns (and the directions) to be ordered by.\n     * Columns can be specified in either a string (e.g. `\"id ASC, name DESC\"`) or an array\n     * (e.g. `['id' => SORT_ASC, 'name' => SORT_DESC]`).\n     *\n     * The method will automatically quote the column names unless a column contains some parenthesis\n     * (which means the column contains a DB expression).\n     *\n     * Note that if your order-by is an expression containing commas, you should always use an array\n     * to represent the order-by information. Otherwise, the method will not be able to correctly determine\n     * the order-by columns.\n     *\n     * Since version 2.0.7, an [[Expression]] object can be passed to specify the ORDER BY part explicitly in plain SQL.\n     * @return $this the query object itself\n     * @see addOrderBy()\n     *\/",299],["T_WHITESPACE","\n    ",315],["T_PUBLIC","public",316],["T_WHITESPACE"," ",316],["T_FUNCTION","function",316],["T_WHITESPACE"," ",316],["T_STRING","orderBy",316],"(",["T_VARIABLE","$columns",316],")",["T_WHITESPACE","\n    ",316],"{",["T_WHITESPACE","\n        ",317],["T_VARIABLE","$this",318],["T_OBJECT_OPERATOR","->",318],["T_STRING","orderBy",318],["T_WHITESPACE"," ",318],"=",["T_WHITESPACE"," ",318],["T_VARIABLE","$this",318],["T_OBJECT_OPERATOR","->",318],["T_STRING","normalizeOrderBy",318],"(",["T_VARIABLE","$columns",318],")",";",["T_WHITESPACE","\n        ",318],["T_RETURN","return",319],["T_WHITESPACE"," ",319],["T_VARIABLE","$this",319],";",["T_WHITESPACE","\n    ",319],"}",["T_WHITESPACE","\n\n    ",320],["T_DOC_COMMENT","\/**\n     * Adds additional ORDER BY columns to the query.\n     * @param string|array|Expression $columns the columns (and the directions) to be ordered by.\n     * Columns can be specified in either a string (e.g. \"id ASC, name DESC\") or an array\n     * (e.g. `['id' => SORT_ASC, 'name' => SORT_DESC]`).\n     *\n     * The method will automatically quote the column names unless a column contains some parenthesis\n     * (which means the column contains a DB expression).\n     *\n     * Note that if your order-by is an expression containing commas, you should always use an array\n     * to represent the order-by information. Otherwise, the method will not be able to correctly determine\n     * the order-by columns.\n     *\n     * Since version 2.0.7, an [[Expression]] object can be passed to specify the ORDER BY part explicitly in plain SQL.\n     * @return $this the query object itself\n     * @see orderBy()\n     *\/",322],["T_WHITESPACE","\n    ",338],["T_PUBLIC","public",339],["T_WHITESPACE"," ",339],["T_FUNCTION","function",339],["T_WHITESPACE"," ",339],["T_STRING","addOrderBy",339],"(",["T_VARIABLE","$columns",339],")",["T_WHITESPACE","\n    ",339],"{",["T_WHITESPACE","\n        ",340],["T_VARIABLE","$columns",341],["T_WHITESPACE"," ",341],"=",["T_WHITESPACE"," ",341],["T_VARIABLE","$this",341],["T_OBJECT_OPERATOR","->",341],["T_STRING","normalizeOrderBy",341],"(",["T_VARIABLE","$columns",341],")",";",["T_WHITESPACE","\n        ",341],["T_IF","if",342],["T_WHITESPACE"," ",342],"(",["T_VARIABLE","$this",342],["T_OBJECT_OPERATOR","->",342],["T_STRING","orderBy",342],["T_WHITESPACE"," ",342],["T_IS_IDENTICAL","===",342],["T_WHITESPACE"," ",342],["T_STRING","null",342],")",["T_WHITESPACE"," ",342],"{",["T_WHITESPACE","\n            ",342],["T_VARIABLE","$this",343],["T_OBJECT_OPERATOR","->",343],["T_STRING","orderBy",343],["T_WHITESPACE"," ",343],"=",["T_WHITESPACE"," ",343],["T_VARIABLE","$columns",343],";",["T_WHITESPACE","\n        ",343],"}",["T_WHITESPACE"," ",344],["T_ELSE","else",344],["T_WHITESPACE"," ",344],"{",["T_WHITESPACE","\n            ",344],["T_VARIABLE","$this",345],["T_OBJECT_OPERATOR","->",345],["T_STRING","orderBy",345],["T_WHITESPACE"," ",345],"=",["T_WHITESPACE"," ",345],["T_STRING","array_merge",345],"(",["T_VARIABLE","$this",345],["T_OBJECT_OPERATOR","->",345],["T_STRING","orderBy",345],",",["T_WHITESPACE"," ",345],["T_VARIABLE","$columns",345],")",";",["T_WHITESPACE","\n        ",345],"}",["T_WHITESPACE","\n        ",346],["T_RETURN","return",347],["T_WHITESPACE"," ",347],["T_VARIABLE","$this",347],";",["T_WHITESPACE","\n    ",347],"}",["T_WHITESPACE","\n\n    ",348],["T_DOC_COMMENT","\/**\n     * Normalizes format of ORDER BY data\n     *\n     * @param array|string|Expression $columns the columns value to normalize. See [[orderBy]] and [[addOrderBy]].\n     * @return array\n     *\/",350],["T_WHITESPACE","\n    ",355],["T_PROTECTED","protected",356],["T_WHITESPACE"," ",356],["T_FUNCTION","function",356],["T_WHITESPACE"," ",356],["T_STRING","normalizeOrderBy",356],"(",["T_VARIABLE","$columns",356],")",["T_WHITESPACE","\n    ",356],"{",["T_WHITESPACE","\n        ",357],["T_IF","if",358],["T_WHITESPACE"," ",358],"(",["T_VARIABLE","$columns",358],["T_WHITESPACE"," ",358],["T_INSTANCEOF","instanceof",358],["T_WHITESPACE"," ",358],["T_STRING","Expression",358],")",["T_WHITESPACE"," ",358],"{",["T_WHITESPACE","\n            ",358],["T_RETURN","return",359],["T_WHITESPACE"," ",359],"[",["T_VARIABLE","$columns",359],"]",";",["T_WHITESPACE","\n        ",359],"}",["T_WHITESPACE"," ",360],["T_ELSEIF","elseif",360],["T_WHITESPACE"," ",360],"(",["T_STRING","is_array",360],"(",["T_VARIABLE","$columns",360],")",")",["T_WHITESPACE"," ",360],"{",["T_WHITESPACE","\n            ",360],["T_RETURN","return",361],["T_WHITESPACE"," ",361],["T_VARIABLE","$columns",361],";",["T_WHITESPACE","\n        ",361],"}",["T_WHITESPACE"," ",362],["T_ELSE","else",362],["T_WHITESPACE"," ",362],"{",["T_WHITESPACE","\n            ",362],["T_VARIABLE","$columns",363],["T_WHITESPACE"," ",363],"=",["T_WHITESPACE"," ",363],["T_STRING","preg_split",363],"(",["T_CONSTANT_ENCAPSED_STRING","'\/\\s*,\\s*\/'",363],",",["T_WHITESPACE"," ",363],["T_STRING","trim",363],"(",["T_VARIABLE","$columns",363],")",",",["T_WHITESPACE"," ",363],"-",["T_LNUMBER","1",363],",",["T_WHITESPACE"," ",363],["T_STRING","PREG_SPLIT_NO_EMPTY",363],")",";",["T_WHITESPACE","\n            ",363],["T_VARIABLE","$result",364],["T_WHITESPACE"," ",364],"=",["T_WHITESPACE"," ",364],"[","]",";",["T_WHITESPACE","\n            ",364],["T_FOREACH","foreach",365],["T_WHITESPACE"," ",365],"(",["T_VARIABLE","$columns",365],["T_WHITESPACE"," ",365],["T_AS","as",365],["T_WHITESPACE"," ",365],["T_VARIABLE","$column",365],")",["T_WHITESPACE"," ",365],"{",["T_WHITESPACE","\n                ",365],["T_IF","if",366],["T_WHITESPACE"," ",366],"(",["T_STRING","preg_match",366],"(",["T_CONSTANT_ENCAPSED_STRING","'\/^(.*?)\\s+(asc|desc)$\/i'",366],",",["T_WHITESPACE"," ",366],["T_VARIABLE","$column",366],",",["T_WHITESPACE"," ",366],["T_VARIABLE","$matches",366],")",")",["T_WHITESPACE"," ",366],"{",["T_WHITESPACE","\n                    ",366],["T_VARIABLE","$result",367],"[",["T_VARIABLE","$matches",367],"[",["T_LNUMBER","1",367],"]","]",["T_WHITESPACE"," ",367],"=",["T_WHITESPACE"," ",367],["T_STRING","strcasecmp",367],"(",["T_VARIABLE","$matches",367],"[",["T_LNUMBER","2",367],"]",",",["T_WHITESPACE"," ",367],["T_CONSTANT_ENCAPSED_STRING","'desc'",367],")",["T_WHITESPACE"," ",367],"?",["T_WHITESPACE"," ",367],["T_STRING","SORT_ASC",367],["T_WHITESPACE"," ",367],":",["T_WHITESPACE"," ",367],["T_STRING","SORT_DESC",367],";",["T_WHITESPACE","\n                ",367],"}",["T_WHITESPACE"," ",368],["T_ELSE","else",368],["T_WHITESPACE"," ",368],"{",["T_WHITESPACE","\n                    ",368],["T_VARIABLE","$result",369],"[",["T_VARIABLE","$column",369],"]",["T_WHITESPACE"," ",369],"=",["T_WHITESPACE"," ",369],["T_STRING","SORT_ASC",369],";",["T_WHITESPACE","\n                ",369],"}",["T_WHITESPACE","\n            ",370],"}",["T_WHITESPACE","\n            ",371],["T_RETURN","return",372],["T_WHITESPACE"," ",372],["T_VARIABLE","$result",372],";",["T_WHITESPACE","\n        ",372],"}",["T_WHITESPACE","\n    ",373],"}",["T_WHITESPACE","\n\n    ",374],["T_DOC_COMMENT","\/**\n     * Sets the LIMIT part of the query.\n     * @param int $limit the limit. Use null or negative value to disable limit.\n     * @return $this the query object itself\n     *\/",376],["T_WHITESPACE","\n    ",380],["T_PUBLIC","public",381],["T_WHITESPACE"," ",381],["T_FUNCTION","function",381],["T_WHITESPACE"," ",381],["T_STRING","limit",381],"(",["T_VARIABLE","$limit",381],")",["T_WHITESPACE","\n    ",381],"{",["T_WHITESPACE","\n        ",382],["T_VARIABLE","$this",383],["T_OBJECT_OPERATOR","->",383],["T_STRING","limit",383],["T_WHITESPACE"," ",383],"=",["T_WHITESPACE"," ",383],["T_VARIABLE","$limit",383],";",["T_WHITESPACE","\n        ",383],["T_RETURN","return",384],["T_WHITESPACE"," ",384],["T_VARIABLE","$this",384],";",["T_WHITESPACE","\n    ",384],"}",["T_WHITESPACE","\n\n    ",385],["T_DOC_COMMENT","\/**\n     * Sets the OFFSET part of the query.\n     * @param int $offset the offset. Use null or negative value to disable offset.\n     * @return $this the query object itself\n     *\/",387],["T_WHITESPACE","\n    ",391],["T_PUBLIC","public",392],["T_WHITESPACE"," ",392],["T_FUNCTION","function",392],["T_WHITESPACE"," ",392],["T_STRING","offset",392],"(",["T_VARIABLE","$offset",392],")",["T_WHITESPACE","\n    ",392],"{",["T_WHITESPACE","\n        ",393],["T_VARIABLE","$this",394],["T_OBJECT_OPERATOR","->",394],["T_STRING","offset",394],["T_WHITESPACE"," ",394],"=",["T_WHITESPACE"," ",394],["T_VARIABLE","$offset",394],";",["T_WHITESPACE","\n        ",394],["T_RETURN","return",395],["T_WHITESPACE"," ",395],["T_VARIABLE","$this",395],";",["T_WHITESPACE","\n    ",395],"}",["T_WHITESPACE","\n\n    ",396],["T_DOC_COMMENT","\/**\n     * Sets whether to emulate query execution, preventing any interaction with data storage.\n     * After this mode is enabled, methods, returning query results like [[one()]], [[all()]], [[exists()]]\n     * and so on, will return empty or false values.\n     * You should use this method in case your program logic indicates query should not return any results, like\n     * in case you set false where condition like `0=1`.\n     * @param boolean $value whether to prevent query execution.\n     * @return $this the query object itself.\n     * @since 2.0.11\n     *\/",398],["T_WHITESPACE","\n    ",407],["T_PUBLIC","public",408],["T_WHITESPACE"," ",408],["T_FUNCTION","function",408],["T_WHITESPACE"," ",408],["T_STRING","emulateExecution",408],"(",["T_VARIABLE","$value",408],["T_WHITESPACE"," ",408],"=",["T_WHITESPACE"," ",408],["T_STRING","true",408],")",["T_WHITESPACE","\n    ",408],"{",["T_WHITESPACE","\n        ",409],["T_VARIABLE","$this",410],["T_OBJECT_OPERATOR","->",410],["T_STRING","emulateExecution",410],["T_WHITESPACE"," ",410],"=",["T_WHITESPACE"," ",410],["T_VARIABLE","$value",410],";",["T_WHITESPACE","\n        ",410],["T_RETURN","return",411],["T_WHITESPACE"," ",411],["T_VARIABLE","$this",411],";",["T_WHITESPACE","\n    ",411],"}",["T_WHITESPACE","\n",412],"}",["T_WHITESPACE","\n",413]]