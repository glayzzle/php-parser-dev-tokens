[["T_OPEN_TAG","<?php\n",1],["T_DOC_COMMENT","\/**\n * @link http:\/\/www.yiiframework.com\/\n * @copyright Copyright (c) 2008 Yii Software LLC\n * @license http:\/\/www.yiiframework.com\/license\/\n *\/",2],["T_WHITESPACE","\n\n",6],["T_NAMESPACE","namespace",8],["T_WHITESPACE"," ",8],["T_STRING","yii",8],["T_NS_SEPARATOR","\\",8],["T_STRING","db",8],";",["T_WHITESPACE","\n\n",8],["T_USE","use",10],["T_WHITESPACE"," ",10],["T_STRING","yii",10],["T_NS_SEPARATOR","\\",10],["T_STRING","base",10],["T_NS_SEPARATOR","\\",10],["T_STRING","InvalidCallException",10],";",["T_WHITESPACE","\n\n",10],["T_DOC_COMMENT","\/**\n * DataReader represents a forward-only stream of rows from a query result set.\n *\n * To read the current row of data, call [[read()]]. The method [[readAll()]]\n * returns all the rows in a single array. Rows of data can also be read by\n * iterating through the reader. For example,\n *\n * ```php\n * $command = $connection->createCommand('SELECT * FROM post');\n * $reader = $command->query();\n *\n * while ($row = $reader->read()) {\n *     $rows[] = $row;\n * }\n *\n * \/\/ equivalent to:\n * foreach ($reader as $row) {\n *     $rows[] = $row;\n * }\n *\n * \/\/ equivalent to:\n * $rows = $reader->readAll();\n * ```\n *\n * Note that since DataReader is a forward-only stream, you can only traverse it once.\n * Doing it the second time will throw an exception.\n *\n * It is possible to use a specific mode of data fetching by setting\n * [[fetchMode]]. See the [PHP manual](http:\/\/www.php.net\/manual\/en\/function.PDOStatement-setFetchMode.php)\n * for more details about possible fetch mode.\n *\n * @property int $columnCount The number of columns in the result set. This property is read-only.\n * @property int $fetchMode Fetch mode. This property is write-only.\n * @property bool $isClosed Whether the reader is closed or not. This property is read-only.\n * @property int $rowCount Number of rows contained in the result. This property is read-only.\n *\n * @author Qiang Xue <qiang.xue@gmail.com>\n * @since 2.0\n *\/",12],["T_WHITESPACE","\n",50],["T_CLASS","class",51],["T_WHITESPACE"," ",51],["T_STRING","DataReader",51],["T_WHITESPACE"," ",51],["T_EXTENDS","extends",51],["T_WHITESPACE"," ",51],["T_NS_SEPARATOR","\\",51],["T_STRING","yii",51],["T_NS_SEPARATOR","\\",51],["T_STRING","base",51],["T_NS_SEPARATOR","\\",51],["T_STRING","Object",51],["T_WHITESPACE"," ",51],["T_IMPLEMENTS","implements",51],["T_WHITESPACE"," ",51],["T_NS_SEPARATOR","\\",51],["T_STRING","Iterator",51],",",["T_WHITESPACE"," ",51],["T_NS_SEPARATOR","\\",51],["T_STRING","Countable",51],["T_WHITESPACE","\n",51],"{",["T_WHITESPACE","\n    ",52],["T_DOC_COMMENT","\/**\n     * @var \\PDOStatement the PDOStatement associated with the command\n     *\/",53],["T_WHITESPACE","\n    ",55],["T_PRIVATE","private",56],["T_WHITESPACE"," ",56],["T_VARIABLE","$_statement",56],";",["T_WHITESPACE","\n    ",56],["T_PRIVATE","private",57],["T_WHITESPACE"," ",57],["T_VARIABLE","$_closed",57],["T_WHITESPACE"," ",57],"=",["T_WHITESPACE"," ",57],["T_STRING","false",57],";",["T_WHITESPACE","\n    ",57],["T_PRIVATE","private",58],["T_WHITESPACE"," ",58],["T_VARIABLE","$_row",58],";",["T_WHITESPACE","\n    ",58],["T_PRIVATE","private",59],["T_WHITESPACE"," ",59],["T_VARIABLE","$_index",59],["T_WHITESPACE"," ",59],"=",["T_WHITESPACE"," ",59],"-",["T_LNUMBER","1",59],";",["T_WHITESPACE","\n\n\n    ",59],["T_DOC_COMMENT","\/**\n     * Constructor.\n     * @param Command $command the command generating the query result\n     * @param array $config name-value pairs that will be used to initialize the object properties\n     *\/",62],["T_WHITESPACE","\n    ",66],["T_PUBLIC","public",67],["T_WHITESPACE"," ",67],["T_FUNCTION","function",67],["T_WHITESPACE"," ",67],["T_STRING","__construct",67],"(",["T_STRING","Command",67],["T_WHITESPACE"," ",67],["T_VARIABLE","$command",67],",",["T_WHITESPACE"," ",67],["T_VARIABLE","$config",67],["T_WHITESPACE"," ",67],"=",["T_WHITESPACE"," ",67],"[","]",")",["T_WHITESPACE","\n    ",67],"{",["T_WHITESPACE","\n        ",68],["T_VARIABLE","$this",69],["T_OBJECT_OPERATOR","->",69],["T_STRING","_statement",69],["T_WHITESPACE"," ",69],"=",["T_WHITESPACE"," ",69],["T_VARIABLE","$command",69],["T_OBJECT_OPERATOR","->",69],["T_STRING","pdoStatement",69],";",["T_WHITESPACE","\n        ",69],["T_VARIABLE","$this",70],["T_OBJECT_OPERATOR","->",70],["T_STRING","_statement",70],["T_OBJECT_OPERATOR","->",70],["T_STRING","setFetchMode",70],"(",["T_NS_SEPARATOR","\\",70],["T_STRING","PDO",70],["T_DOUBLE_COLON","::",70],["T_STRING","FETCH_ASSOC",70],")",";",["T_WHITESPACE","\n        ",70],["T_STRING","parent",71],["T_DOUBLE_COLON","::",71],["T_STRING","__construct",71],"(",["T_VARIABLE","$config",71],")",";",["T_WHITESPACE","\n    ",71],"}",["T_WHITESPACE","\n\n    ",72],["T_DOC_COMMENT","\/**\n     * Binds a column to a PHP variable.\n     * When rows of data are being fetched, the corresponding column value\n     * will be set in the variable. Note, the fetch mode must include PDO::FETCH_BOUND.\n     * @param int|string $column Number of the column (1-indexed) or name of the column\n     * in the result set. If using the column name, be aware that the name\n     * should match the case of the column, as returned by the driver.\n     * @param mixed $value Name of the PHP variable to which the column will be bound.\n     * @param int $dataType Data type of the parameter\n     * @see http:\/\/www.php.net\/manual\/en\/function.PDOStatement-bindColumn.php\n     *\/",74],["T_WHITESPACE","\n    ",84],["T_PUBLIC","public",85],["T_WHITESPACE"," ",85],["T_FUNCTION","function",85],["T_WHITESPACE"," ",85],["T_STRING","bindColumn",85],"(",["T_VARIABLE","$column",85],",",["T_WHITESPACE"," ",85],"&",["T_VARIABLE","$value",85],",",["T_WHITESPACE"," ",85],["T_VARIABLE","$dataType",85],["T_WHITESPACE"," ",85],"=",["T_WHITESPACE"," ",85],["T_STRING","null",85],")",["T_WHITESPACE","\n    ",85],"{",["T_WHITESPACE","\n        ",86],["T_IF","if",87],["T_WHITESPACE"," ",87],"(",["T_VARIABLE","$dataType",87],["T_WHITESPACE"," ",87],["T_IS_IDENTICAL","===",87],["T_WHITESPACE"," ",87],["T_STRING","null",87],")",["T_WHITESPACE"," ",87],"{",["T_WHITESPACE","\n            ",87],["T_VARIABLE","$this",88],["T_OBJECT_OPERATOR","->",88],["T_STRING","_statement",88],["T_OBJECT_OPERATOR","->",88],["T_STRING","bindColumn",88],"(",["T_VARIABLE","$column",88],",",["T_WHITESPACE"," ",88],["T_VARIABLE","$value",88],")",";",["T_WHITESPACE","\n        ",88],"}",["T_WHITESPACE"," ",89],["T_ELSE","else",89],["T_WHITESPACE"," ",89],"{",["T_WHITESPACE","\n            ",89],["T_VARIABLE","$this",90],["T_OBJECT_OPERATOR","->",90],["T_STRING","_statement",90],["T_OBJECT_OPERATOR","->",90],["T_STRING","bindColumn",90],"(",["T_VARIABLE","$column",90],",",["T_WHITESPACE"," ",90],["T_VARIABLE","$value",90],",",["T_WHITESPACE"," ",90],["T_VARIABLE","$dataType",90],")",";",["T_WHITESPACE","\n        ",90],"}",["T_WHITESPACE","\n    ",91],"}",["T_WHITESPACE","\n\n    ",92],["T_DOC_COMMENT","\/**\n     * Set the default fetch mode for this statement\n     * @param int $mode fetch mode\n     * @see http:\/\/www.php.net\/manual\/en\/function.PDOStatement-setFetchMode.php\n     *\/",94],["T_WHITESPACE","\n    ",98],["T_PUBLIC","public",99],["T_WHITESPACE"," ",99],["T_FUNCTION","function",99],["T_WHITESPACE"," ",99],["T_STRING","setFetchMode",99],"(",["T_VARIABLE","$mode",99],")",["T_WHITESPACE","\n    ",99],"{",["T_WHITESPACE","\n        ",100],["T_VARIABLE","$params",101],["T_WHITESPACE"," ",101],"=",["T_WHITESPACE"," ",101],["T_STRING","func_get_args",101],"(",")",";",["T_WHITESPACE","\n        ",101],["T_STRING","call_user_func_array",102],"(","[",["T_VARIABLE","$this",102],["T_OBJECT_OPERATOR","->",102],["T_STRING","_statement",102],",",["T_WHITESPACE"," ",102],["T_CONSTANT_ENCAPSED_STRING","'setFetchMode'",102],"]",",",["T_WHITESPACE"," ",102],["T_VARIABLE","$params",102],")",";",["T_WHITESPACE","\n    ",102],"}",["T_WHITESPACE","\n\n    ",103],["T_DOC_COMMENT","\/**\n     * Advances the reader to the next row in a result set.\n     * @return array the current row, false if no more row available\n     *\/",105],["T_WHITESPACE","\n    ",108],["T_PUBLIC","public",109],["T_WHITESPACE"," ",109],["T_FUNCTION","function",109],["T_WHITESPACE"," ",109],["T_STRING","read",109],"(",")",["T_WHITESPACE","\n    ",109],"{",["T_WHITESPACE","\n        ",110],["T_RETURN","return",111],["T_WHITESPACE"," ",111],["T_VARIABLE","$this",111],["T_OBJECT_OPERATOR","->",111],["T_STRING","_statement",111],["T_OBJECT_OPERATOR","->",111],["T_STRING","fetch",111],"(",")",";",["T_WHITESPACE","\n    ",111],"}",["T_WHITESPACE","\n\n    ",112],["T_DOC_COMMENT","\/**\n     * Returns a single column from the next row of a result set.\n     * @param int $columnIndex zero-based column index\n     * @return mixed the column of the current row, false if no more rows available\n     *\/",114],["T_WHITESPACE","\n    ",118],["T_PUBLIC","public",119],["T_WHITESPACE"," ",119],["T_FUNCTION","function",119],["T_WHITESPACE"," ",119],["T_STRING","readColumn",119],"(",["T_VARIABLE","$columnIndex",119],")",["T_WHITESPACE","\n    ",119],"{",["T_WHITESPACE","\n        ",120],["T_RETURN","return",121],["T_WHITESPACE"," ",121],["T_VARIABLE","$this",121],["T_OBJECT_OPERATOR","->",121],["T_STRING","_statement",121],["T_OBJECT_OPERATOR","->",121],["T_STRING","fetchColumn",121],"(",["T_VARIABLE","$columnIndex",121],")",";",["T_WHITESPACE","\n    ",121],"}",["T_WHITESPACE","\n\n    ",122],["T_DOC_COMMENT","\/**\n     * Returns an object populated with the next row of data.\n     * @param string $className class name of the object to be created and populated\n     * @param array $fields Elements of this array are passed to the constructor\n     * @return mixed the populated object, false if no more row of data available\n     *\/",124],["T_WHITESPACE","\n    ",129],["T_PUBLIC","public",130],["T_WHITESPACE"," ",130],["T_FUNCTION","function",130],["T_WHITESPACE"," ",130],["T_STRING","readObject",130],"(",["T_VARIABLE","$className",130],",",["T_WHITESPACE"," ",130],["T_VARIABLE","$fields",130],")",["T_WHITESPACE","\n    ",130],"{",["T_WHITESPACE","\n        ",131],["T_RETURN","return",132],["T_WHITESPACE"," ",132],["T_VARIABLE","$this",132],["T_OBJECT_OPERATOR","->",132],["T_STRING","_statement",132],["T_OBJECT_OPERATOR","->",132],["T_STRING","fetchObject",132],"(",["T_VARIABLE","$className",132],",",["T_WHITESPACE"," ",132],["T_VARIABLE","$fields",132],")",";",["T_WHITESPACE","\n    ",132],"}",["T_WHITESPACE","\n\n    ",133],["T_DOC_COMMENT","\/**\n     * Reads the whole result set into an array.\n     * @return array the result set (each array element represents a row of data).\n     * An empty array will be returned if the result contains no row.\n     *\/",135],["T_WHITESPACE","\n    ",139],["T_PUBLIC","public",140],["T_WHITESPACE"," ",140],["T_FUNCTION","function",140],["T_WHITESPACE"," ",140],["T_STRING","readAll",140],"(",")",["T_WHITESPACE","\n    ",140],"{",["T_WHITESPACE","\n        ",141],["T_RETURN","return",142],["T_WHITESPACE"," ",142],["T_VARIABLE","$this",142],["T_OBJECT_OPERATOR","->",142],["T_STRING","_statement",142],["T_OBJECT_OPERATOR","->",142],["T_STRING","fetchAll",142],"(",")",";",["T_WHITESPACE","\n    ",142],"}",["T_WHITESPACE","\n\n    ",143],["T_DOC_COMMENT","\/**\n     * Advances the reader to the next result when reading the results of a batch of statements.\n     * This method is only useful when there are multiple result sets\n     * returned by the query. Not all DBMS support this feature.\n     * @return bool Returns true on success or false on failure.\n     *\/",145],["T_WHITESPACE","\n    ",150],["T_PUBLIC","public",151],["T_WHITESPACE"," ",151],["T_FUNCTION","function",151],["T_WHITESPACE"," ",151],["T_STRING","nextResult",151],"(",")",["T_WHITESPACE","\n    ",151],"{",["T_WHITESPACE","\n        ",152],["T_IF","if",153],["T_WHITESPACE"," ",153],"(","(",["T_VARIABLE","$result",153],["T_WHITESPACE"," ",153],"=",["T_WHITESPACE"," ",153],["T_VARIABLE","$this",153],["T_OBJECT_OPERATOR","->",153],["T_STRING","_statement",153],["T_OBJECT_OPERATOR","->",153],["T_STRING","nextRowset",153],"(",")",")",["T_WHITESPACE"," ",153],["T_IS_NOT_IDENTICAL","!==",153],["T_WHITESPACE"," ",153],["T_STRING","false",153],")",["T_WHITESPACE"," ",153],"{",["T_WHITESPACE","\n            ",153],["T_VARIABLE","$this",154],["T_OBJECT_OPERATOR","->",154],["T_STRING","_index",154],["T_WHITESPACE"," ",154],"=",["T_WHITESPACE"," ",154],"-",["T_LNUMBER","1",154],";",["T_WHITESPACE","\n        ",154],"}",["T_WHITESPACE","\n\n        ",155],["T_RETURN","return",157],["T_WHITESPACE"," ",157],["T_VARIABLE","$result",157],";",["T_WHITESPACE","\n    ",157],"}",["T_WHITESPACE","\n\n    ",158],["T_DOC_COMMENT","\/**\n     * Closes the reader.\n     * This frees up the resources allocated for executing this SQL statement.\n     * Read attempts after this method call are unpredictable.\n     *\/",160],["T_WHITESPACE","\n    ",164],["T_PUBLIC","public",165],["T_WHITESPACE"," ",165],["T_FUNCTION","function",165],["T_WHITESPACE"," ",165],["T_STRING","close",165],"(",")",["T_WHITESPACE","\n    ",165],"{",["T_WHITESPACE","\n        ",166],["T_VARIABLE","$this",167],["T_OBJECT_OPERATOR","->",167],["T_STRING","_statement",167],["T_OBJECT_OPERATOR","->",167],["T_STRING","closeCursor",167],"(",")",";",["T_WHITESPACE","\n        ",167],["T_VARIABLE","$this",168],["T_OBJECT_OPERATOR","->",168],["T_STRING","_closed",168],["T_WHITESPACE"," ",168],"=",["T_WHITESPACE"," ",168],["T_STRING","true",168],";",["T_WHITESPACE","\n    ",168],"}",["T_WHITESPACE","\n\n    ",169],["T_DOC_COMMENT","\/**\n     * whether the reader is closed or not.\n     * @return bool whether the reader is closed or not.\n     *\/",171],["T_WHITESPACE","\n    ",174],["T_PUBLIC","public",175],["T_WHITESPACE"," ",175],["T_FUNCTION","function",175],["T_WHITESPACE"," ",175],["T_STRING","getIsClosed",175],"(",")",["T_WHITESPACE","\n    ",175],"{",["T_WHITESPACE","\n        ",176],["T_RETURN","return",177],["T_WHITESPACE"," ",177],["T_VARIABLE","$this",177],["T_OBJECT_OPERATOR","->",177],["T_STRING","_closed",177],";",["T_WHITESPACE","\n    ",177],"}",["T_WHITESPACE","\n\n    ",178],["T_DOC_COMMENT","\/**\n     * Returns the number of rows in the result set.\n     * Note, most DBMS may not give a meaningful count.\n     * In this case, use \"SELECT COUNT(*) FROM tableName\" to obtain the number of rows.\n     * @return int number of rows contained in the result.\n     *\/",180],["T_WHITESPACE","\n    ",185],["T_PUBLIC","public",186],["T_WHITESPACE"," ",186],["T_FUNCTION","function",186],["T_WHITESPACE"," ",186],["T_STRING","getRowCount",186],"(",")",["T_WHITESPACE","\n    ",186],"{",["T_WHITESPACE","\n        ",187],["T_RETURN","return",188],["T_WHITESPACE"," ",188],["T_VARIABLE","$this",188],["T_OBJECT_OPERATOR","->",188],["T_STRING","_statement",188],["T_OBJECT_OPERATOR","->",188],["T_STRING","rowCount",188],"(",")",";",["T_WHITESPACE","\n    ",188],"}",["T_WHITESPACE","\n\n    ",189],["T_DOC_COMMENT","\/**\n     * Returns the number of rows in the result set.\n     * This method is required by the Countable interface.\n     * Note, most DBMS may not give a meaningful count.\n     * In this case, use \"SELECT COUNT(*) FROM tableName\" to obtain the number of rows.\n     * @return int number of rows contained in the result.\n     *\/",191],["T_WHITESPACE","\n    ",197],["T_PUBLIC","public",198],["T_WHITESPACE"," ",198],["T_FUNCTION","function",198],["T_WHITESPACE"," ",198],["T_STRING","count",198],"(",")",["T_WHITESPACE","\n    ",198],"{",["T_WHITESPACE","\n        ",199],["T_RETURN","return",200],["T_WHITESPACE"," ",200],["T_VARIABLE","$this",200],["T_OBJECT_OPERATOR","->",200],["T_STRING","getRowCount",200],"(",")",";",["T_WHITESPACE","\n    ",200],"}",["T_WHITESPACE","\n\n    ",201],["T_DOC_COMMENT","\/**\n     * Returns the number of columns in the result set.\n     * Note, even there's no row in the reader, this still gives correct column number.\n     * @return int the number of columns in the result set.\n     *\/",203],["T_WHITESPACE","\n    ",207],["T_PUBLIC","public",208],["T_WHITESPACE"," ",208],["T_FUNCTION","function",208],["T_WHITESPACE"," ",208],["T_STRING","getColumnCount",208],"(",")",["T_WHITESPACE","\n    ",208],"{",["T_WHITESPACE","\n        ",209],["T_RETURN","return",210],["T_WHITESPACE"," ",210],["T_VARIABLE","$this",210],["T_OBJECT_OPERATOR","->",210],["T_STRING","_statement",210],["T_OBJECT_OPERATOR","->",210],["T_STRING","columnCount",210],"(",")",";",["T_WHITESPACE","\n    ",210],"}",["T_WHITESPACE","\n\n    ",211],["T_DOC_COMMENT","\/**\n     * Resets the iterator to the initial state.\n     * This method is required by the interface [[\\Iterator]].\n     * @throws InvalidCallException if this method is invoked twice\n     *\/",213],["T_WHITESPACE","\n    ",217],["T_PUBLIC","public",218],["T_WHITESPACE"," ",218],["T_FUNCTION","function",218],["T_WHITESPACE"," ",218],["T_STRING","rewind",218],"(",")",["T_WHITESPACE","\n    ",218],"{",["T_WHITESPACE","\n        ",219],["T_IF","if",220],["T_WHITESPACE"," ",220],"(",["T_VARIABLE","$this",220],["T_OBJECT_OPERATOR","->",220],["T_STRING","_index",220],["T_WHITESPACE"," ",220],"<",["T_WHITESPACE"," ",220],["T_LNUMBER","0",220],")",["T_WHITESPACE"," ",220],"{",["T_WHITESPACE","\n            ",220],["T_VARIABLE","$this",221],["T_OBJECT_OPERATOR","->",221],["T_STRING","_row",221],["T_WHITESPACE"," ",221],"=",["T_WHITESPACE"," ",221],["T_VARIABLE","$this",221],["T_OBJECT_OPERATOR","->",221],["T_STRING","_statement",221],["T_OBJECT_OPERATOR","->",221],["T_STRING","fetch",221],"(",")",";",["T_WHITESPACE","\n            ",221],["T_VARIABLE","$this",222],["T_OBJECT_OPERATOR","->",222],["T_STRING","_index",222],["T_WHITESPACE"," ",222],"=",["T_WHITESPACE"," ",222],["T_LNUMBER","0",222],";",["T_WHITESPACE","\n        ",222],"}",["T_WHITESPACE"," ",223],["T_ELSE","else",223],["T_WHITESPACE"," ",223],"{",["T_WHITESPACE","\n            ",223],["T_THROW","throw",224],["T_WHITESPACE"," ",224],["T_NEW","new",224],["T_WHITESPACE"," ",224],["T_STRING","InvalidCallException",224],"(",["T_CONSTANT_ENCAPSED_STRING","'DataReader cannot rewind. It is a forward-only reader.'",224],")",";",["T_WHITESPACE","\n        ",224],"}",["T_WHITESPACE","\n    ",225],"}",["T_WHITESPACE","\n\n    ",226],["T_DOC_COMMENT","\/**\n     * Returns the index of the current row.\n     * This method is required by the interface [[\\Iterator]].\n     * @return int the index of the current row.\n     *\/",228],["T_WHITESPACE","\n    ",232],["T_PUBLIC","public",233],["T_WHITESPACE"," ",233],["T_FUNCTION","function",233],["T_WHITESPACE"," ",233],["T_STRING","key",233],"(",")",["T_WHITESPACE","\n    ",233],"{",["T_WHITESPACE","\n        ",234],["T_RETURN","return",235],["T_WHITESPACE"," ",235],["T_VARIABLE","$this",235],["T_OBJECT_OPERATOR","->",235],["T_STRING","_index",235],";",["T_WHITESPACE","\n    ",235],"}",["T_WHITESPACE","\n\n    ",236],["T_DOC_COMMENT","\/**\n     * Returns the current row.\n     * This method is required by the interface [[\\Iterator]].\n     * @return mixed the current row.\n     *\/",238],["T_WHITESPACE","\n    ",242],["T_PUBLIC","public",243],["T_WHITESPACE"," ",243],["T_FUNCTION","function",243],["T_WHITESPACE"," ",243],["T_STRING","current",243],"(",")",["T_WHITESPACE","\n    ",243],"{",["T_WHITESPACE","\n        ",244],["T_RETURN","return",245],["T_WHITESPACE"," ",245],["T_VARIABLE","$this",245],["T_OBJECT_OPERATOR","->",245],["T_STRING","_row",245],";",["T_WHITESPACE","\n    ",245],"}",["T_WHITESPACE","\n\n    ",246],["T_DOC_COMMENT","\/**\n     * Moves the internal pointer to the next row.\n     * This method is required by the interface [[\\Iterator]].\n     *\/",248],["T_WHITESPACE","\n    ",251],["T_PUBLIC","public",252],["T_WHITESPACE"," ",252],["T_FUNCTION","function",252],["T_WHITESPACE"," ",252],["T_STRING","next",252],"(",")",["T_WHITESPACE","\n    ",252],"{",["T_WHITESPACE","\n        ",253],["T_VARIABLE","$this",254],["T_OBJECT_OPERATOR","->",254],["T_STRING","_row",254],["T_WHITESPACE"," ",254],"=",["T_WHITESPACE"," ",254],["T_VARIABLE","$this",254],["T_OBJECT_OPERATOR","->",254],["T_STRING","_statement",254],["T_OBJECT_OPERATOR","->",254],["T_STRING","fetch",254],"(",")",";",["T_WHITESPACE","\n        ",254],["T_VARIABLE","$this",255],["T_OBJECT_OPERATOR","->",255],["T_STRING","_index",255],["T_INC","++",255],";",["T_WHITESPACE","\n    ",255],"}",["T_WHITESPACE","\n\n    ",256],["T_DOC_COMMENT","\/**\n     * Returns whether there is a row of data at current position.\n     * This method is required by the interface [[\\Iterator]].\n     * @return bool whether there is a row of data at current position.\n     *\/",258],["T_WHITESPACE","\n    ",262],["T_PUBLIC","public",263],["T_WHITESPACE"," ",263],["T_FUNCTION","function",263],["T_WHITESPACE"," ",263],["T_STRING","valid",263],"(",")",["T_WHITESPACE","\n    ",263],"{",["T_WHITESPACE","\n        ",264],["T_RETURN","return",265],["T_WHITESPACE"," ",265],["T_VARIABLE","$this",265],["T_OBJECT_OPERATOR","->",265],["T_STRING","_row",265],["T_WHITESPACE"," ",265],["T_IS_NOT_IDENTICAL","!==",265],["T_WHITESPACE"," ",265],["T_STRING","false",265],";",["T_WHITESPACE","\n    ",265],"}",["T_WHITESPACE","\n",266],"}",["T_WHITESPACE","\n",267]]