[["T_OPEN_TAG","<?php\n",1],["T_DOC_COMMENT","\/**\n * @link http:\/\/www.yiiframework.com\/\n * @copyright Copyright (c) 2008 Yii Software LLC\n * @license http:\/\/www.yiiframework.com\/license\/\n *\/",2],["T_WHITESPACE","\n\n",6],["T_NAMESPACE","namespace",8],["T_WHITESPACE"," ",8],["T_STRING","yii",8],["T_NS_SEPARATOR","\\",8],["T_STRING","behaviors",8],";",["T_WHITESPACE","\n\n",8],["T_USE","use",10],["T_WHITESPACE"," ",10],["T_STRING","yii",10],["T_NS_SEPARATOR","\\",10],["T_STRING","base",10],["T_NS_SEPARATOR","\\",10],["T_STRING","Behavior",10],";",["T_WHITESPACE","\n",10],["T_USE","use",11],["T_WHITESPACE"," ",11],["T_STRING","yii",11],["T_NS_SEPARATOR","\\",11],["T_STRING","base",11],["T_NS_SEPARATOR","\\",11],["T_STRING","InvalidParamException",11],";",["T_WHITESPACE","\n",11],["T_USE","use",12],["T_WHITESPACE"," ",12],["T_STRING","yii",12],["T_NS_SEPARATOR","\\",12],["T_STRING","base",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Model",12],";",["T_WHITESPACE","\n",12],["T_USE","use",13],["T_WHITESPACE"," ",13],["T_STRING","yii",13],["T_NS_SEPARATOR","\\",13],["T_STRING","db",13],["T_NS_SEPARATOR","\\",13],["T_STRING","BaseActiveRecord",13],";",["T_WHITESPACE","\n",13],["T_USE","use",14],["T_WHITESPACE"," ",14],["T_STRING","yii",14],["T_NS_SEPARATOR","\\",14],["T_STRING","validators",14],["T_NS_SEPARATOR","\\",14],["T_STRING","BooleanValidator",14],";",["T_WHITESPACE","\n",14],["T_USE","use",15],["T_WHITESPACE"," ",15],["T_STRING","yii",15],["T_NS_SEPARATOR","\\",15],["T_STRING","validators",15],["T_NS_SEPARATOR","\\",15],["T_STRING","NumberValidator",15],";",["T_WHITESPACE","\n",15],["T_USE","use",16],["T_WHITESPACE"," ",16],["T_STRING","yii",16],["T_NS_SEPARATOR","\\",16],["T_STRING","validators",16],["T_NS_SEPARATOR","\\",16],["T_STRING","StringValidator",16],";",["T_WHITESPACE","\n\n",16],["T_DOC_COMMENT","\/**\n * AttributeTypecastBehavior provides an ability of automatic model attribute typecasting.\n * This behavior is very useful in case of usage of ActiveRecord for the schema-less databases like MongoDB or Redis.\n * It may also come in handy for regular [[\\yii\\db\\ActiveRecord]] or even [[\\yii\\base\\Model]], allowing to maintain\n * strict attribute types after model validation.\n *\n * This behavior should be attached to [[\\yii\\base\\Model]] or [[\\yii\\db\\BaseActiveRecord]] descendant.\n *\n * You should specify exact attribute types via [[attributeTypes]].\n *\n * For example:\n *\n * ```php\n * use yii\\behaviors\\AttributeTypecastBehavior;\n *\n * class Item extends \\yii\\db\\ActiveRecord\n * {\n *     public function behaviors()\n *     {\n *         return [\n *             'typecast' => [\n *                 'class' => AttributeTypecastBehavior::className(),\n *                 'attributeTypes' => [\n *                     'amount' => AttributeTypecastBehavior::TYPE_INTEGER,\n *                     'price' => AttributeTypecastBehavior::TYPE_FLOAT,\n *                     'is_active' => AttributeTypecastBehavior::TYPE_BOOLEAN,\n *                 ],\n *                 'typecastAfterValidate' => true,\n *                 'typecastBeforeSave' => false,\n *                 'typecastAfterFind' => false,\n *             ],\n *         ];\n *     }\n *\n *     \/\/ ...\n * }\n * ```\n *\n * Tip: you may left [[attributeTypes]] blank - in this case its value will be detected\n * automatically based on owner validation rules.\n * Following example will automatically create same [[attributeTypes]] value as it was configured at the above one:\n *\n * ```php\n * use yii\\behaviors\\AttributeTypecastBehavior;\n *\n * class Item extends \\yii\\db\\ActiveRecord\n * {\n *\n *     public function rules()\n *     {\n *         return [\n *             ['amount', 'integer'],\n *             ['price', 'number'],\n *             ['is_active', 'boolean'],\n *         ];\n *     }\n *\n *     public function behaviors()\n *     {\n *         return [\n *             'typecast' => [\n *                 'class' => AttributeTypecastBehavior::className(),\n *                 \/\/ 'attributeTypes' will be composed automatically according to `rules()`\n *             ],\n *         ];\n *     }\n *\n *     \/\/ ...\n * }\n * ```\n *\n * This behavior allows automatic attribute typecasting at following cases:\n *\n * - after successful model validation\n * - before model save (insert or update)\n * - after model find (found by query or refreshed)\n *\n * You may control automatic typecasting for particular case using fields [[typecastAfterValidate]],\n * [[typecastBeforeSave]] and [[typecastAfterFind]].\n * By default typecasting will be performed only after model validation.\n *\n * Note: you can manually trigger attribute typecasting anytime invoking [[typecastAttributes()]] method:\n *\n * ```php\n * $model = new Item();\n * $model->price = '38.5';\n * $model->is_active = 1;\n * $model->typecastAttributes();\n * ```\n *\n * @author Paul Klimov <klimov.paul@gmail.com>\n * @since 2.0.10\n *\/",18],["T_WHITESPACE","\n",110],["T_CLASS","class",111],["T_WHITESPACE"," ",111],["T_STRING","AttributeTypecastBehavior",111],["T_WHITESPACE"," ",111],["T_EXTENDS","extends",111],["T_WHITESPACE"," ",111],["T_STRING","Behavior",111],["T_WHITESPACE","\n",111],"{",["T_WHITESPACE","\n    ",112],["T_CONST","const",113],["T_WHITESPACE"," ",113],["T_STRING","TYPE_INTEGER",113],["T_WHITESPACE"," ",113],"=",["T_WHITESPACE"," ",113],["T_CONSTANT_ENCAPSED_STRING","'integer'",113],";",["T_WHITESPACE","\n    ",113],["T_CONST","const",114],["T_WHITESPACE"," ",114],["T_STRING","TYPE_FLOAT",114],["T_WHITESPACE"," ",114],"=",["T_WHITESPACE"," ",114],["T_CONSTANT_ENCAPSED_STRING","'float'",114],";",["T_WHITESPACE","\n    ",114],["T_CONST","const",115],["T_WHITESPACE"," ",115],["T_STRING","TYPE_BOOLEAN",115],["T_WHITESPACE"," ",115],"=",["T_WHITESPACE"," ",115],["T_CONSTANT_ENCAPSED_STRING","'boolean'",115],";",["T_WHITESPACE","\n    ",115],["T_CONST","const",116],["T_WHITESPACE"," ",116],["T_STRING","TYPE_STRING",116],["T_WHITESPACE"," ",116],"=",["T_WHITESPACE"," ",116],["T_CONSTANT_ENCAPSED_STRING","'string'",116],";",["T_WHITESPACE","\n\n    ",116],["T_DOC_COMMENT","\/**\n     * @var Model|BaseActiveRecord the owner of this behavior.\n     *\/",118],["T_WHITESPACE","\n    ",120],["T_PUBLIC","public",121],["T_WHITESPACE"," ",121],["T_VARIABLE","$owner",121],";",["T_WHITESPACE","\n    ",121],["T_DOC_COMMENT","\/**\n     * @var array attribute typecast map in format: attributeName => type.\n     * Type can be set via PHP callable, which accept raw value as an argument and should return\n     * typecast result.\n     * For example:\n     *\n     * ```php\n     * [\n     *     'amount' => 'integer',\n     *     'price' => 'float',\n     *     'is_active' => 'boolean',\n     *     'date' => function ($value) {\n     *         return ($value instanceof \\DateTime) ? $value->getTimestamp(): (int)$value;\n     *     },\n     * ]\n     * ```\n     *\n     * If not set, attribute type map will be composed automatically from the owner validation rules.\n     *\/",122],["T_WHITESPACE","\n    ",140],["T_PUBLIC","public",141],["T_WHITESPACE"," ",141],["T_VARIABLE","$attributeTypes",141],";",["T_WHITESPACE","\n    ",141],["T_DOC_COMMENT","\/**\n     * @var bool whether to skip typecasting of `null` values.\n     * If enabled attribute value which equals to `null` will not be type-casted (e.g. `null` remains `null`),\n     * otherwise it will be converted according to the type configured at [[attributeTypes]].\n     *\/",142],["T_WHITESPACE","\n    ",146],["T_PUBLIC","public",147],["T_WHITESPACE"," ",147],["T_VARIABLE","$skipOnNull",147],["T_WHITESPACE"," ",147],"=",["T_WHITESPACE"," ",147],["T_STRING","true",147],";",["T_WHITESPACE","\n    ",147],["T_DOC_COMMENT","\/**\n     * @var bool whether to perform typecasting after owner model validation.\n     * Note that typecasting will be performed only if validation was successful, e.g.\n     * owner model has no errors.\n     * Note that changing this option value will have no effect after this behavior has been attached to the model.\n     *\/",148],["T_WHITESPACE","\n    ",153],["T_PUBLIC","public",154],["T_WHITESPACE"," ",154],["T_VARIABLE","$typecastAfterValidate",154],["T_WHITESPACE"," ",154],"=",["T_WHITESPACE"," ",154],["T_STRING","true",154],";",["T_WHITESPACE","\n    ",154],["T_DOC_COMMENT","\/**\n     * @var bool whether to perform typecasting before saving owner model (insert or update).\n     * This option may be disabled in order to achieve better performance.\n     * For example, in case of [[\\yii\\db\\ActiveRecord]] usage, typecasting before save\n     * will grant no benefit an thus can be disabled.\n     * Note that changing this option value will have no effect after this behavior has been attached to the model.\n     *\/",155],["T_WHITESPACE","\n    ",161],["T_PUBLIC","public",162],["T_WHITESPACE"," ",162],["T_VARIABLE","$typecastBeforeSave",162],["T_WHITESPACE"," ",162],"=",["T_WHITESPACE"," ",162],["T_STRING","false",162],";",["T_WHITESPACE","\n    ",162],["T_DOC_COMMENT","\/**\n     * @var bool whether to perform typecasting after retrieving owner model data from\n     * the database (after find or refresh).\n     * This option may be disabled in order to achieve better performance.\n     * For example, in case of [[\\yii\\db\\ActiveRecord]] usage, typecasting after find\n     * will grant no benefit in most cases an thus can be disabled.\n     * Note that changing this option value will have no effect after this behavior has been attached to the model.\n     *\/",163],["T_WHITESPACE","\n    ",170],["T_PUBLIC","public",171],["T_WHITESPACE"," ",171],["T_VARIABLE","$typecastAfterFind",171],["T_WHITESPACE"," ",171],"=",["T_WHITESPACE"," ",171],["T_STRING","false",171],";",["T_WHITESPACE","\n\n    ",171],["T_DOC_COMMENT","\/**\n     * @var array internal static cache for auto detected [[attributeTypes]] values\n     * in format: ownerClassName => attributeTypes\n     *\/",173],["T_WHITESPACE","\n    ",176],["T_PRIVATE","private",177],["T_WHITESPACE"," ",177],["T_STATIC","static",177],["T_WHITESPACE"," ",177],["T_VARIABLE","$autoDetectedAttributeTypes",177],["T_WHITESPACE"," ",177],"=",["T_WHITESPACE"," ",177],"[","]",";",["T_WHITESPACE","\n\n\n    ",177],["T_DOC_COMMENT","\/**\n     * Clears internal static cache of auto detected [[attributeTypes]] values\n     * over all affected owner classes.\n     *\/",180],["T_WHITESPACE","\n    ",183],["T_PUBLIC","public",184],["T_WHITESPACE"," ",184],["T_STATIC","static",184],["T_WHITESPACE"," ",184],["T_FUNCTION","function",184],["T_WHITESPACE"," ",184],["T_STRING","clearAutoDetectedAttributeTypes",184],"(",")",["T_WHITESPACE","\n    ",184],"{",["T_WHITESPACE","\n        ",185],["T_STRING","self",186],["T_DOUBLE_COLON","::",186],["T_VARIABLE","$autoDetectedAttributeTypes",186],["T_WHITESPACE"," ",186],"=",["T_WHITESPACE"," ",186],"[","]",";",["T_WHITESPACE","\n    ",186],"}",["T_WHITESPACE","\n\n    ",187],["T_DOC_COMMENT","\/**\n     * @inheritdoc\n     *\/",189],["T_WHITESPACE","\n    ",191],["T_PUBLIC","public",192],["T_WHITESPACE"," ",192],["T_FUNCTION","function",192],["T_WHITESPACE"," ",192],["T_STRING","attach",192],"(",["T_VARIABLE","$owner",192],")",["T_WHITESPACE","\n    ",192],"{",["T_WHITESPACE","\n        ",193],["T_STRING","parent",194],["T_DOUBLE_COLON","::",194],["T_STRING","attach",194],"(",["T_VARIABLE","$owner",194],")",";",["T_WHITESPACE","\n\n        ",194],["T_IF","if",196],["T_WHITESPACE"," ",196],"(",["T_VARIABLE","$this",196],["T_OBJECT_OPERATOR","->",196],["T_STRING","attributeTypes",196],["T_WHITESPACE"," ",196],["T_IS_IDENTICAL","===",196],["T_WHITESPACE"," ",196],["T_STRING","null",196],")",["T_WHITESPACE"," ",196],"{",["T_WHITESPACE","\n            ",196],["T_VARIABLE","$ownerClass",197],["T_WHITESPACE"," ",197],"=",["T_WHITESPACE"," ",197],["T_STRING","get_class",197],"(",["T_VARIABLE","$this",197],["T_OBJECT_OPERATOR","->",197],["T_STRING","owner",197],")",";",["T_WHITESPACE","\n            ",197],["T_IF","if",198],["T_WHITESPACE"," ",198],"(","!",["T_ISSET","isset",198],"(",["T_STRING","self",198],["T_DOUBLE_COLON","::",198],["T_VARIABLE","$autoDetectedAttributeTypes",198],"[",["T_VARIABLE","$ownerClass",198],"]",")",")",["T_WHITESPACE"," ",198],"{",["T_WHITESPACE","\n                ",198],["T_STRING","self",199],["T_DOUBLE_COLON","::",199],["T_VARIABLE","$autoDetectedAttributeTypes",199],"[",["T_VARIABLE","$ownerClass",199],"]",["T_WHITESPACE"," ",199],"=",["T_WHITESPACE"," ",199],["T_VARIABLE","$this",199],["T_OBJECT_OPERATOR","->",199],["T_STRING","detectAttributeTypes",199],"(",")",";",["T_WHITESPACE","\n            ",199],"}",["T_WHITESPACE","\n            ",200],["T_VARIABLE","$this",201],["T_OBJECT_OPERATOR","->",201],["T_STRING","attributeTypes",201],["T_WHITESPACE"," ",201],"=",["T_WHITESPACE"," ",201],["T_STRING","self",201],["T_DOUBLE_COLON","::",201],["T_VARIABLE","$autoDetectedAttributeTypes",201],"[",["T_VARIABLE","$ownerClass",201],"]",";",["T_WHITESPACE","\n        ",201],"}",["T_WHITESPACE","\n    ",202],"}",["T_WHITESPACE","\n\n    ",203],["T_DOC_COMMENT","\/**\n     * Typecast owner attributes according to [[attributeTypes]].\n     * @param array $attributeNames list of attribute names that should be type-casted.\n     * If this parameter is empty, it means any attribute listed in the [[attributeTypes]]\n     * should be type-casted.\n     *\/",205],["T_WHITESPACE","\n    ",210],["T_PUBLIC","public",211],["T_WHITESPACE"," ",211],["T_FUNCTION","function",211],["T_WHITESPACE"," ",211],["T_STRING","typecastAttributes",211],"(",["T_VARIABLE","$attributeNames",211],["T_WHITESPACE"," ",211],"=",["T_WHITESPACE"," ",211],["T_STRING","null",211],")",["T_WHITESPACE","\n    ",211],"{",["T_WHITESPACE","\n        ",212],["T_VARIABLE","$attributeTypes",213],["T_WHITESPACE"," ",213],"=",["T_WHITESPACE"," ",213],"[","]",";",["T_WHITESPACE","\n\n        ",213],["T_IF","if",215],["T_WHITESPACE"," ",215],"(",["T_VARIABLE","$attributeNames",215],["T_WHITESPACE"," ",215],["T_IS_IDENTICAL","===",215],["T_WHITESPACE"," ",215],["T_STRING","null",215],")",["T_WHITESPACE"," ",215],"{",["T_WHITESPACE","\n            ",215],["T_VARIABLE","$attributeTypes",216],["T_WHITESPACE"," ",216],"=",["T_WHITESPACE"," ",216],["T_VARIABLE","$this",216],["T_OBJECT_OPERATOR","->",216],["T_STRING","attributeTypes",216],";",["T_WHITESPACE","\n        ",216],"}",["T_WHITESPACE"," ",217],["T_ELSE","else",217],["T_WHITESPACE"," ",217],"{",["T_WHITESPACE","\n            ",217],["T_FOREACH","foreach",218],["T_WHITESPACE"," ",218],"(",["T_VARIABLE","$attributeNames",218],["T_WHITESPACE"," ",218],["T_AS","as",218],["T_WHITESPACE"," ",218],["T_VARIABLE","$attribute",218],")",["T_WHITESPACE"," ",218],"{",["T_WHITESPACE","\n                ",218],["T_IF","if",219],["T_WHITESPACE"," ",219],"(","!",["T_ISSET","isset",219],"(",["T_VARIABLE","$this",219],["T_OBJECT_OPERATOR","->",219],["T_STRING","attributeTypes",219],"[",["T_VARIABLE","$attribute",219],"]",")",")",["T_WHITESPACE"," ",219],"{",["T_WHITESPACE","\n                    ",219],["T_THROW","throw",220],["T_WHITESPACE"," ",220],["T_NEW","new",220],["T_WHITESPACE"," ",220],["T_STRING","InvalidParamException",220],"(","\"",["T_ENCAPSED_AND_WHITESPACE","There is no type mapping for '",220],["T_CURLY_OPEN","{",220],["T_VARIABLE","$attribute",220],"}",["T_ENCAPSED_AND_WHITESPACE","'.",220],"\"",")",";",["T_WHITESPACE","\n                ",220],"}",["T_WHITESPACE","\n                ",221],["T_VARIABLE","$attributeTypes",222],"[",["T_VARIABLE","$attribute",222],"]",["T_WHITESPACE"," ",222],"=",["T_WHITESPACE"," ",222],["T_VARIABLE","$this",222],["T_OBJECT_OPERATOR","->",222],["T_STRING","attributeTypes",222],"[",["T_VARIABLE","$attribute",222],"]",";",["T_WHITESPACE","\n            ",222],"}",["T_WHITESPACE","\n        ",223],"}",["T_WHITESPACE","\n\n        ",224],["T_FOREACH","foreach",226],["T_WHITESPACE"," ",226],"(",["T_VARIABLE","$attributeTypes",226],["T_WHITESPACE"," ",226],["T_AS","as",226],["T_WHITESPACE"," ",226],["T_VARIABLE","$attribute",226],["T_WHITESPACE"," ",226],["T_DOUBLE_ARROW","=>",226],["T_WHITESPACE"," ",226],["T_VARIABLE","$type",226],")",["T_WHITESPACE"," ",226],"{",["T_WHITESPACE","\n            ",226],["T_VARIABLE","$value",227],["T_WHITESPACE"," ",227],"=",["T_WHITESPACE"," ",227],["T_VARIABLE","$this",227],["T_OBJECT_OPERATOR","->",227],["T_STRING","owner",227],["T_OBJECT_OPERATOR","->",227],"{",["T_VARIABLE","$attribute",227],"}",";",["T_WHITESPACE","\n            ",227],["T_IF","if",228],["T_WHITESPACE"," ",228],"(",["T_VARIABLE","$this",228],["T_OBJECT_OPERATOR","->",228],["T_STRING","skipOnNull",228],["T_WHITESPACE"," ",228],["T_BOOLEAN_AND","&&",228],["T_WHITESPACE"," ",228],["T_VARIABLE","$value",228],["T_WHITESPACE"," ",228],["T_IS_IDENTICAL","===",228],["T_WHITESPACE"," ",228],["T_STRING","null",228],")",["T_WHITESPACE"," ",228],"{",["T_WHITESPACE","\n                ",228],["T_CONTINUE","continue",229],";",["T_WHITESPACE","\n            ",229],"}",["T_WHITESPACE","\n            ",230],["T_VARIABLE","$this",231],["T_OBJECT_OPERATOR","->",231],["T_STRING","owner",231],["T_OBJECT_OPERATOR","->",231],"{",["T_VARIABLE","$attribute",231],"}",["T_WHITESPACE"," ",231],"=",["T_WHITESPACE"," ",231],["T_VARIABLE","$this",231],["T_OBJECT_OPERATOR","->",231],["T_STRING","typecastValue",231],"(",["T_VARIABLE","$value",231],",",["T_WHITESPACE"," ",231],["T_VARIABLE","$type",231],")",";",["T_WHITESPACE","\n        ",231],"}",["T_WHITESPACE","\n    ",232],"}",["T_WHITESPACE","\n\n    ",233],["T_DOC_COMMENT","\/**\n     * Casts the given value to the specified type.\n     * @param mixed $value value to be type-casted.\n     * @param string|callable $type type name or typecast callable.\n     * @return mixed typecast result.\n     *\/",235],["T_WHITESPACE","\n    ",240],["T_PROTECTED","protected",241],["T_WHITESPACE"," ",241],["T_FUNCTION","function",241],["T_WHITESPACE"," ",241],["T_STRING","typecastValue",241],"(",["T_VARIABLE","$value",241],",",["T_WHITESPACE"," ",241],["T_VARIABLE","$type",241],")",["T_WHITESPACE","\n    ",241],"{",["T_WHITESPACE","\n        ",242],["T_IF","if",243],["T_WHITESPACE"," ",243],"(",["T_STRING","is_scalar",243],"(",["T_VARIABLE","$type",243],")",")",["T_WHITESPACE"," ",243],"{",["T_WHITESPACE","\n            ",243],["T_IF","if",244],["T_WHITESPACE"," ",244],"(",["T_STRING","is_object",244],"(",["T_VARIABLE","$value",244],")",["T_WHITESPACE"," ",244],["T_BOOLEAN_AND","&&",244],["T_WHITESPACE"," ",244],["T_STRING","method_exists",244],"(",["T_VARIABLE","$value",244],",",["T_WHITESPACE"," ",244],["T_CONSTANT_ENCAPSED_STRING","'__toString'",244],")",")",["T_WHITESPACE"," ",244],"{",["T_WHITESPACE","\n                ",244],["T_VARIABLE","$value",245],["T_WHITESPACE"," ",245],"=",["T_WHITESPACE"," ",245],["T_VARIABLE","$value",245],["T_OBJECT_OPERATOR","->",245],["T_STRING","__toString",245],"(",")",";",["T_WHITESPACE","\n            ",245],"}",["T_WHITESPACE","\n\n            ",246],["T_SWITCH","switch",248],["T_WHITESPACE"," ",248],"(",["T_VARIABLE","$type",248],")",["T_WHITESPACE"," ",248],"{",["T_WHITESPACE","\n                ",248],["T_CASE","case",249],["T_WHITESPACE"," ",249],["T_STRING","self",249],["T_DOUBLE_COLON","::",249],["T_STRING","TYPE_INTEGER",249],":",["T_WHITESPACE","\n                    ",249],["T_RETURN","return",250],["T_WHITESPACE"," ",250],["T_INT_CAST","(int)",250],["T_WHITESPACE"," ",250],["T_VARIABLE","$value",250],";",["T_WHITESPACE","\n                ",250],["T_CASE","case",251],["T_WHITESPACE"," ",251],["T_STRING","self",251],["T_DOUBLE_COLON","::",251],["T_STRING","TYPE_FLOAT",251],":",["T_WHITESPACE","\n                    ",251],["T_RETURN","return",252],["T_WHITESPACE"," ",252],["T_DOUBLE_CAST","(float)",252],["T_WHITESPACE"," ",252],["T_VARIABLE","$value",252],";",["T_WHITESPACE","\n                ",252],["T_CASE","case",253],["T_WHITESPACE"," ",253],["T_STRING","self",253],["T_DOUBLE_COLON","::",253],["T_STRING","TYPE_BOOLEAN",253],":",["T_WHITESPACE","\n                    ",253],["T_RETURN","return",254],["T_WHITESPACE"," ",254],["T_BOOL_CAST","(bool)",254],["T_WHITESPACE"," ",254],["T_VARIABLE","$value",254],";",["T_WHITESPACE","\n                ",254],["T_CASE","case",255],["T_WHITESPACE"," ",255],["T_STRING","self",255],["T_DOUBLE_COLON","::",255],["T_STRING","TYPE_STRING",255],":",["T_WHITESPACE","\n                    ",255],["T_RETURN","return",256],["T_WHITESPACE"," ",256],["T_STRING_CAST","(string)",256],["T_WHITESPACE"," ",256],["T_VARIABLE","$value",256],";",["T_WHITESPACE","\n                ",256],["T_DEFAULT","default",257],":",["T_WHITESPACE","\n                    ",257],["T_THROW","throw",258],["T_WHITESPACE"," ",258],["T_NEW","new",258],["T_WHITESPACE"," ",258],["T_STRING","InvalidParamException",258],"(","\"",["T_ENCAPSED_AND_WHITESPACE","Unsupported type '",258],["T_CURLY_OPEN","{",258],["T_VARIABLE","$type",258],"}",["T_ENCAPSED_AND_WHITESPACE","'",258],"\"",")",";",["T_WHITESPACE","\n            ",258],"}",["T_WHITESPACE","\n        ",259],"}",["T_WHITESPACE","\n\n        ",260],["T_RETURN","return",262],["T_WHITESPACE"," ",262],["T_STRING","call_user_func",262],"(",["T_VARIABLE","$type",262],",",["T_WHITESPACE"," ",262],["T_VARIABLE","$value",262],")",";",["T_WHITESPACE","\n    ",262],"}",["T_WHITESPACE","\n\n    ",263],["T_DOC_COMMENT","\/**\n     * Composes default value for [[attributeTypes]] from the owner validation rules.\n     * @return array attribute type map.\n     *\/",265],["T_WHITESPACE","\n    ",268],["T_PROTECTED","protected",269],["T_WHITESPACE"," ",269],["T_FUNCTION","function",269],["T_WHITESPACE"," ",269],["T_STRING","detectAttributeTypes",269],"(",")",["T_WHITESPACE","\n    ",269],"{",["T_WHITESPACE","\n        ",270],["T_VARIABLE","$attributeTypes",271],["T_WHITESPACE"," ",271],"=",["T_WHITESPACE"," ",271],"[","]",";",["T_WHITESPACE","\n        ",271],["T_FOREACH","foreach",272],["T_WHITESPACE"," ",272],"(",["T_VARIABLE","$this",272],["T_OBJECT_OPERATOR","->",272],["T_STRING","owner",272],["T_OBJECT_OPERATOR","->",272],["T_STRING","getValidators",272],"(",")",["T_WHITESPACE"," ",272],["T_AS","as",272],["T_WHITESPACE"," ",272],["T_VARIABLE","$validator",272],")",["T_WHITESPACE"," ",272],"{",["T_WHITESPACE","\n            ",272],["T_VARIABLE","$type",273],["T_WHITESPACE"," ",273],"=",["T_WHITESPACE"," ",273],["T_STRING","null",273],";",["T_WHITESPACE","\n            ",273],["T_IF","if",274],["T_WHITESPACE"," ",274],"(",["T_VARIABLE","$validator",274],["T_WHITESPACE"," ",274],["T_INSTANCEOF","instanceof",274],["T_WHITESPACE"," ",274],["T_STRING","BooleanValidator",274],")",["T_WHITESPACE"," ",274],"{",["T_WHITESPACE","\n                ",274],["T_VARIABLE","$type",275],["T_WHITESPACE"," ",275],"=",["T_WHITESPACE"," ",275],["T_STRING","self",275],["T_DOUBLE_COLON","::",275],["T_STRING","TYPE_BOOLEAN",275],";",["T_WHITESPACE","\n            ",275],"}",["T_WHITESPACE"," ",276],["T_ELSEIF","elseif",276],["T_WHITESPACE"," ",276],"(",["T_VARIABLE","$validator",276],["T_WHITESPACE"," ",276],["T_INSTANCEOF","instanceof",276],["T_WHITESPACE"," ",276],["T_STRING","NumberValidator",276],")",["T_WHITESPACE"," ",276],"{",["T_WHITESPACE","\n                ",276],["T_VARIABLE","$type",277],["T_WHITESPACE"," ",277],"=",["T_WHITESPACE"," ",277],["T_VARIABLE","$validator",277],["T_OBJECT_OPERATOR","->",277],["T_STRING","integerOnly",277],["T_WHITESPACE"," ",277],"?",["T_WHITESPACE"," ",277],["T_STRING","self",277],["T_DOUBLE_COLON","::",277],["T_STRING","TYPE_INTEGER",277],["T_WHITESPACE"," ",277],":",["T_WHITESPACE"," ",277],["T_STRING","self",277],["T_DOUBLE_COLON","::",277],["T_STRING","TYPE_FLOAT",277],";",["T_WHITESPACE","\n            ",277],"}",["T_WHITESPACE"," ",278],["T_ELSEIF","elseif",278],["T_WHITESPACE"," ",278],"(",["T_VARIABLE","$validator",278],["T_WHITESPACE"," ",278],["T_INSTANCEOF","instanceof",278],["T_WHITESPACE"," ",278],["T_STRING","StringValidator",278],")",["T_WHITESPACE"," ",278],"{",["T_WHITESPACE","\n                ",278],["T_VARIABLE","$type",279],["T_WHITESPACE"," ",279],"=",["T_WHITESPACE"," ",279],["T_STRING","self",279],["T_DOUBLE_COLON","::",279],["T_STRING","TYPE_STRING",279],";",["T_WHITESPACE","\n            ",279],"}",["T_WHITESPACE","\n\n            ",280],["T_IF","if",282],["T_WHITESPACE"," ",282],"(",["T_VARIABLE","$type",282],["T_WHITESPACE"," ",282],["T_IS_NOT_IDENTICAL","!==",282],["T_WHITESPACE"," ",282],["T_STRING","null",282],")",["T_WHITESPACE"," ",282],"{",["T_WHITESPACE","\n                ",282],["T_FOREACH","foreach",283],["T_WHITESPACE"," ",283],"(",["T_ARRAY_CAST","(array)",283],["T_VARIABLE","$validator",283],["T_OBJECT_OPERATOR","->",283],["T_STRING","attributes",283],["T_WHITESPACE"," ",283],["T_AS","as",283],["T_WHITESPACE"," ",283],["T_VARIABLE","$attribute",283],")",["T_WHITESPACE"," ",283],"{",["T_WHITESPACE","\n                    ",283],["T_VARIABLE","$attributeTypes",284],"[",["T_VARIABLE","$attribute",284],"]",["T_WHITESPACE"," ",284],"=",["T_WHITESPACE"," ",284],["T_VARIABLE","$type",284],";",["T_WHITESPACE","\n                ",284],"}",["T_WHITESPACE","\n            ",285],"}",["T_WHITESPACE","\n        ",286],"}",["T_WHITESPACE","\n        ",287],["T_RETURN","return",288],["T_WHITESPACE"," ",288],["T_VARIABLE","$attributeTypes",288],";",["T_WHITESPACE","\n    ",288],"}",["T_WHITESPACE","\n\n    ",289],["T_DOC_COMMENT","\/**\n     * @inheritdoc\n     *\/",291],["T_WHITESPACE","\n    ",293],["T_PUBLIC","public",294],["T_WHITESPACE"," ",294],["T_FUNCTION","function",294],["T_WHITESPACE"," ",294],["T_STRING","events",294],"(",")",["T_WHITESPACE","\n    ",294],"{",["T_WHITESPACE","\n        ",295],["T_VARIABLE","$events",296],["T_WHITESPACE"," ",296],"=",["T_WHITESPACE"," ",296],"[","]",";",["T_WHITESPACE","\n\n        ",296],["T_IF","if",298],["T_WHITESPACE"," ",298],"(",["T_VARIABLE","$this",298],["T_OBJECT_OPERATOR","->",298],["T_STRING","typecastAfterValidate",298],")",["T_WHITESPACE"," ",298],"{",["T_WHITESPACE","\n            ",298],["T_VARIABLE","$events",299],"[",["T_STRING","Model",299],["T_DOUBLE_COLON","::",299],["T_STRING","EVENT_AFTER_VALIDATE",299],"]",["T_WHITESPACE"," ",299],"=",["T_WHITESPACE"," ",299],["T_CONSTANT_ENCAPSED_STRING","'afterValidate'",299],";",["T_WHITESPACE","\n        ",299],"}",["T_WHITESPACE","\n        ",300],["T_IF","if",301],["T_WHITESPACE"," ",301],"(",["T_VARIABLE","$this",301],["T_OBJECT_OPERATOR","->",301],["T_STRING","typecastBeforeSave",301],")",["T_WHITESPACE"," ",301],"{",["T_WHITESPACE","\n            ",301],["T_VARIABLE","$events",302],"[",["T_STRING","BaseActiveRecord",302],["T_DOUBLE_COLON","::",302],["T_STRING","EVENT_BEFORE_INSERT",302],"]",["T_WHITESPACE"," ",302],"=",["T_WHITESPACE"," ",302],["T_CONSTANT_ENCAPSED_STRING","'beforeSave'",302],";",["T_WHITESPACE","\n            ",302],["T_VARIABLE","$events",303],"[",["T_STRING","BaseActiveRecord",303],["T_DOUBLE_COLON","::",303],["T_STRING","EVENT_BEFORE_UPDATE",303],"]",["T_WHITESPACE"," ",303],"=",["T_WHITESPACE"," ",303],["T_CONSTANT_ENCAPSED_STRING","'beforeSave'",303],";",["T_WHITESPACE","\n        ",303],"}",["T_WHITESPACE","\n        ",304],["T_IF","if",305],["T_WHITESPACE"," ",305],"(",["T_VARIABLE","$this",305],["T_OBJECT_OPERATOR","->",305],["T_STRING","typecastAfterFind",305],")",["T_WHITESPACE"," ",305],"{",["T_WHITESPACE","\n            ",305],["T_VARIABLE","$events",306],"[",["T_STRING","BaseActiveRecord",306],["T_DOUBLE_COLON","::",306],["T_STRING","EVENT_AFTER_FIND",306],"]",["T_WHITESPACE"," ",306],"=",["T_WHITESPACE"," ",306],["T_CONSTANT_ENCAPSED_STRING","'afterFind'",306],";",["T_WHITESPACE","\n        ",306],"}",["T_WHITESPACE","\n\n        ",307],["T_RETURN","return",309],["T_WHITESPACE"," ",309],["T_VARIABLE","$events",309],";",["T_WHITESPACE","\n    ",309],"}",["T_WHITESPACE","\n\n    ",310],["T_DOC_COMMENT","\/**\n     * Handles owner 'afterValidate' event, ensuring attribute typecasting.\n     * @param \\yii\\base\\Event $event event instance.\n     *\/",312],["T_WHITESPACE","\n    ",315],["T_PUBLIC","public",316],["T_WHITESPACE"," ",316],["T_FUNCTION","function",316],["T_WHITESPACE"," ",316],["T_STRING","afterValidate",316],"(",["T_VARIABLE","$event",316],")",["T_WHITESPACE","\n    ",316],"{",["T_WHITESPACE","\n        ",317],["T_IF","if",318],["T_WHITESPACE"," ",318],"(","!",["T_VARIABLE","$this",318],["T_OBJECT_OPERATOR","->",318],["T_STRING","owner",318],["T_OBJECT_OPERATOR","->",318],["T_STRING","hasErrors",318],"(",")",")",["T_WHITESPACE"," ",318],"{",["T_WHITESPACE","\n            ",318],["T_VARIABLE","$this",319],["T_OBJECT_OPERATOR","->",319],["T_STRING","typecastAttributes",319],"(",")",";",["T_WHITESPACE","\n        ",319],"}",["T_WHITESPACE","\n    ",320],"}",["T_WHITESPACE","\n\n    ",321],["T_DOC_COMMENT","\/**\n     * Handles owner 'afterInsert' and 'afterUpdate' events, ensuring attribute typecasting.\n     * @param \\yii\\base\\Event $event event instance.\n     *\/",323],["T_WHITESPACE","\n    ",326],["T_PUBLIC","public",327],["T_WHITESPACE"," ",327],["T_FUNCTION","function",327],["T_WHITESPACE"," ",327],["T_STRING","beforeSave",327],"(",["T_VARIABLE","$event",327],")",["T_WHITESPACE","\n    ",327],"{",["T_WHITESPACE","\n        ",328],["T_VARIABLE","$this",329],["T_OBJECT_OPERATOR","->",329],["T_STRING","typecastAttributes",329],"(",")",";",["T_WHITESPACE","\n    ",329],"}",["T_WHITESPACE","\n\n    ",330],["T_DOC_COMMENT","\/**\n     * Handles owner 'afterFind' event, ensuring attribute typecasting.\n     * @param \\yii\\base\\Event $event event instance.\n     *\/",332],["T_WHITESPACE","\n    ",335],["T_PUBLIC","public",336],["T_WHITESPACE"," ",336],["T_FUNCTION","function",336],["T_WHITESPACE"," ",336],["T_STRING","afterFind",336],"(",["T_VARIABLE","$event",336],")",["T_WHITESPACE","\n    ",336],"{",["T_WHITESPACE","\n        ",337],["T_VARIABLE","$this",338],["T_OBJECT_OPERATOR","->",338],["T_STRING","typecastAttributes",338],"(",")",";",["T_WHITESPACE","\n    ",338],"}",["T_WHITESPACE","\n",339],"}",["T_WHITESPACE","\n",340]]