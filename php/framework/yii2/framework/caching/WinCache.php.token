[["T_OPEN_TAG","<?php\n",1],["T_DOC_COMMENT","\/**\n * @link http:\/\/www.yiiframework.com\/\n * @copyright Copyright (c) 2008 Yii Software LLC\n * @license http:\/\/www.yiiframework.com\/license\/\n *\/",2],["T_WHITESPACE","\n\n",6],["T_NAMESPACE","namespace",8],["T_WHITESPACE"," ",8],["T_STRING","yii",8],["T_NS_SEPARATOR","\\",8],["T_STRING","caching",8],";",["T_WHITESPACE","\n\n",8],["T_DOC_COMMENT","\/**\n * WinCache provides Windows Cache caching in terms of an application component.\n *\n * To use this application component, the [WinCache PHP extension](http:\/\/www.iis.net\/expand\/wincacheforphp)\n * must be loaded. Also note that \"wincache.ucenabled\" should be set to \"On\" in your php.ini file.\n *\n * See [[Cache]] manual for common cache operations that are supported by WinCache.\n *\n * For more details and usage information on Cache, see the [guide article on caching](guide:caching-overview).\n * \n * @author Qiang Xue <qiang.xue@gmail.com>\n * @since 2.0\n *\/",10],["T_WHITESPACE","\n",22],["T_CLASS","class",23],["T_WHITESPACE"," ",23],["T_STRING","WinCache",23],["T_WHITESPACE"," ",23],["T_EXTENDS","extends",23],["T_WHITESPACE"," ",23],["T_STRING","Cache",23],["T_WHITESPACE","\n",23],"{",["T_WHITESPACE","\n    ",24],["T_DOC_COMMENT","\/**\n     * Checks whether a specified key exists in the cache.\n     * This can be faster than getting the value from the cache if the data is big.\n     * Note that this method does not check whether the dependency associated\n     * with the cached data, if there is any, has changed. So a call to [[get]]\n     * may return false while exists returns true.\n     * @param mixed $key a key identifying the cached value. This can be a simple string or\n     * a complex data structure consisting of factors representing the key.\n     * @return bool true if a value exists in cache, false if the value is not in the cache or expired.\n     *\/",25],["T_WHITESPACE","\n    ",34],["T_PUBLIC","public",35],["T_WHITESPACE"," ",35],["T_FUNCTION","function",35],["T_WHITESPACE"," ",35],["T_STRING","exists",35],"(",["T_VARIABLE","$key",35],")",["T_WHITESPACE","\n    ",35],"{",["T_WHITESPACE","\n        ",36],["T_VARIABLE","$key",37],["T_WHITESPACE"," ",37],"=",["T_WHITESPACE"," ",37],["T_VARIABLE","$this",37],["T_OBJECT_OPERATOR","->",37],["T_STRING","buildKey",37],"(",["T_VARIABLE","$key",37],")",";",["T_WHITESPACE","\n\n        ",37],["T_RETURN","return",39],["T_WHITESPACE"," ",39],["T_STRING","wincache_ucache_exists",39],"(",["T_VARIABLE","$key",39],")",";",["T_WHITESPACE","\n    ",39],"}",["T_WHITESPACE","\n\n    ",40],["T_DOC_COMMENT","\/**\n     * Retrieves a value from cache with a specified key.\n     * This is the implementation of the method declared in the parent class.\n     * @param string $key a unique key identifying the cached value\n     * @return string|bool the value stored in cache, false if the value is not in the cache or expired.\n     *\/",42],["T_WHITESPACE","\n    ",47],["T_PROTECTED","protected",48],["T_WHITESPACE"," ",48],["T_FUNCTION","function",48],["T_WHITESPACE"," ",48],["T_STRING","getValue",48],"(",["T_VARIABLE","$key",48],")",["T_WHITESPACE","\n    ",48],"{",["T_WHITESPACE","\n        ",49],["T_RETURN","return",50],["T_WHITESPACE"," ",50],["T_STRING","wincache_ucache_get",50],"(",["T_VARIABLE","$key",50],")",";",["T_WHITESPACE","\n    ",50],"}",["T_WHITESPACE","\n\n    ",51],["T_DOC_COMMENT","\/**\n     * Retrieves multiple values from cache with the specified keys.\n     * @param array $keys a list of keys identifying the cached values\n     * @return array a list of cached values indexed by the keys\n     *\/",53],["T_WHITESPACE","\n    ",57],["T_PROTECTED","protected",58],["T_WHITESPACE"," ",58],["T_FUNCTION","function",58],["T_WHITESPACE"," ",58],["T_STRING","getValues",58],"(",["T_VARIABLE","$keys",58],")",["T_WHITESPACE","\n    ",58],"{",["T_WHITESPACE","\n        ",59],["T_RETURN","return",60],["T_WHITESPACE"," ",60],["T_STRING","wincache_ucache_get",60],"(",["T_VARIABLE","$keys",60],")",";",["T_WHITESPACE","\n    ",60],"}",["T_WHITESPACE","\n\n    ",61],["T_DOC_COMMENT","\/**\n     * Stores a value identified by a key in cache.\n     * This is the implementation of the method declared in the parent class.\n     *\n     * @param string $key the key identifying the value to be cached\n     * @param mixed $value the value to be cached. Most often it's a string. If you have disabled [[serializer]],\n     * it could be something else.\n     * @param int $duration the number of seconds in which the cached value will expire. 0 means never expire.\n     * @return bool true if the value is successfully stored into cache, false otherwise\n     *\/",63],["T_WHITESPACE","\n    ",72],["T_PROTECTED","protected",73],["T_WHITESPACE"," ",73],["T_FUNCTION","function",73],["T_WHITESPACE"," ",73],["T_STRING","setValue",73],"(",["T_VARIABLE","$key",73],",",["T_WHITESPACE"," ",73],["T_VARIABLE","$value",73],",",["T_WHITESPACE"," ",73],["T_VARIABLE","$duration",73],")",["T_WHITESPACE","\n    ",73],"{",["T_WHITESPACE","\n        ",74],["T_RETURN","return",75],["T_WHITESPACE"," ",75],["T_STRING","wincache_ucache_set",75],"(",["T_VARIABLE","$key",75],",",["T_WHITESPACE"," ",75],["T_VARIABLE","$value",75],",",["T_WHITESPACE"," ",75],["T_VARIABLE","$duration",75],")",";",["T_WHITESPACE","\n    ",75],"}",["T_WHITESPACE","\n\n    ",76],["T_DOC_COMMENT","\/**\n     * Stores multiple key-value pairs in cache.\n     * @param array $data array where key corresponds to cache key while value is the value stored\n     * @param int $duration the number of seconds in which the cached values will expire. 0 means never expire.\n     * @return array array of failed keys\n     *\/",78],["T_WHITESPACE","\n    ",83],["T_PROTECTED","protected",84],["T_WHITESPACE"," ",84],["T_FUNCTION","function",84],["T_WHITESPACE"," ",84],["T_STRING","setValues",84],"(",["T_VARIABLE","$data",84],",",["T_WHITESPACE"," ",84],["T_VARIABLE","$duration",84],")",["T_WHITESPACE","\n    ",84],"{",["T_WHITESPACE","\n        ",85],["T_RETURN","return",86],["T_WHITESPACE"," ",86],["T_STRING","wincache_ucache_set",86],"(",["T_VARIABLE","$data",86],",",["T_WHITESPACE"," ",86],["T_STRING","null",86],",",["T_WHITESPACE"," ",86],["T_VARIABLE","$duration",86],")",";",["T_WHITESPACE","\n    ",86],"}",["T_WHITESPACE","\n\n    ",87],["T_DOC_COMMENT","\/**\n     * Stores a value identified by a key into cache if the cache does not contain this key.\n     * This is the implementation of the method declared in the parent class.\n     *\n     * @param string $key the key identifying the value to be cached\n     * @param mixed $value the value to be cached. Most often it's a string. If you have disabled [[serializer]],\n     * it could be something else.\n     * @param int $duration the number of seconds in which the cached value will expire. 0 means never expire.\n     * @return bool true if the value is successfully stored into cache, false otherwise\n     *\/",89],["T_WHITESPACE","\n    ",98],["T_PROTECTED","protected",99],["T_WHITESPACE"," ",99],["T_FUNCTION","function",99],["T_WHITESPACE"," ",99],["T_STRING","addValue",99],"(",["T_VARIABLE","$key",99],",",["T_WHITESPACE"," ",99],["T_VARIABLE","$value",99],",",["T_WHITESPACE"," ",99],["T_VARIABLE","$duration",99],")",["T_WHITESPACE","\n    ",99],"{",["T_WHITESPACE","\n        ",100],["T_RETURN","return",101],["T_WHITESPACE"," ",101],["T_STRING","wincache_ucache_add",101],"(",["T_VARIABLE","$key",101],",",["T_WHITESPACE"," ",101],["T_VARIABLE","$value",101],",",["T_WHITESPACE"," ",101],["T_VARIABLE","$duration",101],")",";",["T_WHITESPACE","\n    ",101],"}",["T_WHITESPACE","\n\n    ",102],["T_DOC_COMMENT","\/**\n     * Adds multiple key-value pairs to cache.\n     * The default implementation calls [[addValue()]] multiple times add values one by one. If the underlying cache\n     * storage supports multiadd, this method should be overridden to exploit that feature.\n     * @param array $data array where key corresponds to cache key while value is the value stored\n     * @param int $duration the number of seconds in which the cached values will expire. 0 means never expire.\n     * @return array array of failed keys\n     *\/",104],["T_WHITESPACE","\n    ",111],["T_PROTECTED","protected",112],["T_WHITESPACE"," ",112],["T_FUNCTION","function",112],["T_WHITESPACE"," ",112],["T_STRING","addValues",112],"(",["T_VARIABLE","$data",112],",",["T_WHITESPACE"," ",112],["T_VARIABLE","$duration",112],")",["T_WHITESPACE","\n    ",112],"{",["T_WHITESPACE","\n        ",113],["T_RETURN","return",114],["T_WHITESPACE"," ",114],["T_STRING","wincache_ucache_add",114],"(",["T_VARIABLE","$data",114],",",["T_WHITESPACE"," ",114],["T_STRING","null",114],",",["T_WHITESPACE"," ",114],["T_VARIABLE","$duration",114],")",";",["T_WHITESPACE","\n    ",114],"}",["T_WHITESPACE","\n\n    ",115],["T_DOC_COMMENT","\/**\n     * Deletes a value with the specified key from cache\n     * This is the implementation of the method declared in the parent class.\n     * @param string $key the key of the value to be deleted\n     * @return bool if no error happens during deletion\n     *\/",117],["T_WHITESPACE","\n    ",122],["T_PROTECTED","protected",123],["T_WHITESPACE"," ",123],["T_FUNCTION","function",123],["T_WHITESPACE"," ",123],["T_STRING","deleteValue",123],"(",["T_VARIABLE","$key",123],")",["T_WHITESPACE","\n    ",123],"{",["T_WHITESPACE","\n        ",124],["T_RETURN","return",125],["T_WHITESPACE"," ",125],["T_STRING","wincache_ucache_delete",125],"(",["T_VARIABLE","$key",125],")",";",["T_WHITESPACE","\n    ",125],"}",["T_WHITESPACE","\n\n    ",126],["T_DOC_COMMENT","\/**\n     * Deletes all values from cache.\n     * This is the implementation of the method declared in the parent class.\n     * @return bool whether the flush operation was successful.\n     *\/",128],["T_WHITESPACE","\n    ",132],["T_PROTECTED","protected",133],["T_WHITESPACE"," ",133],["T_FUNCTION","function",133],["T_WHITESPACE"," ",133],["T_STRING","flushValues",133],"(",")",["T_WHITESPACE","\n    ",133],"{",["T_WHITESPACE","\n        ",134],["T_RETURN","return",135],["T_WHITESPACE"," ",135],["T_STRING","wincache_ucache_clear",135],"(",")",";",["T_WHITESPACE","\n    ",135],"}",["T_WHITESPACE","\n",136],"}",["T_WHITESPACE","\n",137]]