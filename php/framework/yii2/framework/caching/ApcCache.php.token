[["T_OPEN_TAG","<?php\n",1],["T_DOC_COMMENT","\/**\n * @link http:\/\/www.yiiframework.com\/\n * @copyright Copyright (c) 2008 Yii Software LLC\n * @license http:\/\/www.yiiframework.com\/license\/\n *\/",2],["T_WHITESPACE","\n\n",6],["T_NAMESPACE","namespace",8],["T_WHITESPACE"," ",8],["T_STRING","yii",8],["T_NS_SEPARATOR","\\",8],["T_STRING","caching",8],";",["T_WHITESPACE","\n\n",8],["T_USE","use",10],["T_WHITESPACE"," ",10],["T_STRING","yii",10],["T_NS_SEPARATOR","\\",10],["T_STRING","base",10],["T_NS_SEPARATOR","\\",10],["T_STRING","InvalidConfigException",10],";",["T_WHITESPACE","\n\n",10],["T_DOC_COMMENT","\/**\n * ApcCache provides APC caching in terms of an application component.\n *\n * To use this application component, the [APC PHP extension](http:\/\/www.php.net\/apc) must be loaded.\n * Alternatively [APCu PHP extension](http:\/\/www.php.net\/apcu) could be used via setting `useApcu` to `true`.\n * In order to enable APC or APCu for CLI you should add \"apc.enable_cli = 1\" to your php.ini.\n *\n * See [[Cache]] for common cache operations that ApcCache supports.\n *\n * For more details and usage information on Cache, see the [guide article on caching](guide:caching-overview).\n *\n * @author Qiang Xue <qiang.xue@gmail.com>\n * @since 2.0\n *\/",12],["T_WHITESPACE","\n",25],["T_CLASS","class",26],["T_WHITESPACE"," ",26],["T_STRING","ApcCache",26],["T_WHITESPACE"," ",26],["T_EXTENDS","extends",26],["T_WHITESPACE"," ",26],["T_STRING","Cache",26],["T_WHITESPACE","\n",26],"{",["T_WHITESPACE","\n    ",27],["T_DOC_COMMENT","\/**\n     * @var bool whether to use apcu or apc as the underlying caching extension.\n     * If true, [apcu](http:\/\/pecl.php.net\/package\/apcu) will be used.\n     * If false, [apc](http:\/\/pecl.php.net\/package\/apc) will be used.\n     * Defaults to false.\n     * @since 2.0.7\n     *\/",28],["T_WHITESPACE","\n    ",34],["T_PUBLIC","public",35],["T_WHITESPACE"," ",35],["T_VARIABLE","$useApcu",35],["T_WHITESPACE"," ",35],"=",["T_WHITESPACE"," ",35],["T_STRING","false",35],";",["T_WHITESPACE","\n\n\n    ",35],["T_DOC_COMMENT","\/**\n     * Initializes this application component.\n     * It checks if extension required is loaded.\n     *\/",38],["T_WHITESPACE","\n    ",41],["T_PUBLIC","public",42],["T_WHITESPACE"," ",42],["T_FUNCTION","function",42],["T_WHITESPACE"," ",42],["T_STRING","init",42],"(",")",["T_WHITESPACE","\n    ",42],"{",["T_WHITESPACE","\n        ",43],["T_STRING","parent",44],["T_DOUBLE_COLON","::",44],["T_STRING","init",44],"(",")",";",["T_WHITESPACE","\n        ",44],["T_VARIABLE","$extension",45],["T_WHITESPACE"," ",45],"=",["T_WHITESPACE"," ",45],["T_VARIABLE","$this",45],["T_OBJECT_OPERATOR","->",45],["T_STRING","useApcu",45],["T_WHITESPACE"," ",45],"?",["T_WHITESPACE"," ",45],["T_CONSTANT_ENCAPSED_STRING","'apcu'",45],["T_WHITESPACE"," ",45],":",["T_WHITESPACE"," ",45],["T_CONSTANT_ENCAPSED_STRING","'apc'",45],";",["T_WHITESPACE","\n        ",45],["T_IF","if",46],["T_WHITESPACE"," ",46],"(","!",["T_STRING","extension_loaded",46],"(",["T_VARIABLE","$extension",46],")",")",["T_WHITESPACE"," ",46],"{",["T_WHITESPACE","\n            ",46],["T_THROW","throw",47],["T_WHITESPACE"," ",47],["T_NEW","new",47],["T_WHITESPACE"," ",47],["T_STRING","InvalidConfigException",47],"(","\"",["T_ENCAPSED_AND_WHITESPACE","ApcCache requires PHP ",47],["T_VARIABLE","$extension",47],["T_ENCAPSED_AND_WHITESPACE"," extension to be loaded.",47],"\"",")",";",["T_WHITESPACE","\n        ",47],"}",["T_WHITESPACE","\n    ",48],"}",["T_WHITESPACE","\n\n    ",49],["T_DOC_COMMENT","\/**\n     * Checks whether a specified key exists in the cache.\n     * This can be faster than getting the value from the cache if the data is big.\n     * Note that this method does not check whether the dependency associated\n     * with the cached data, if there is any, has changed. So a call to [[get]]\n     * may return false while exists returns true.\n     * @param mixed $key a key identifying the cached value. This can be a simple string or\n     * a complex data structure consisting of factors representing the key.\n     * @return bool true if a value exists in cache, false if the value is not in the cache or expired.\n     *\/",51],["T_WHITESPACE","\n    ",60],["T_PUBLIC","public",61],["T_WHITESPACE"," ",61],["T_FUNCTION","function",61],["T_WHITESPACE"," ",61],["T_STRING","exists",61],"(",["T_VARIABLE","$key",61],")",["T_WHITESPACE","\n    ",61],"{",["T_WHITESPACE","\n        ",62],["T_VARIABLE","$key",63],["T_WHITESPACE"," ",63],"=",["T_WHITESPACE"," ",63],["T_VARIABLE","$this",63],["T_OBJECT_OPERATOR","->",63],["T_STRING","buildKey",63],"(",["T_VARIABLE","$key",63],")",";",["T_WHITESPACE","\n\n        ",63],["T_RETURN","return",65],["T_WHITESPACE"," ",65],["T_VARIABLE","$this",65],["T_OBJECT_OPERATOR","->",65],["T_STRING","useApcu",65],["T_WHITESPACE"," ",65],"?",["T_WHITESPACE"," ",65],["T_STRING","apcu_exists",65],"(",["T_VARIABLE","$key",65],")",["T_WHITESPACE"," ",65],":",["T_WHITESPACE"," ",65],["T_STRING","apc_exists",65],"(",["T_VARIABLE","$key",65],")",";",["T_WHITESPACE","\n    ",65],"}",["T_WHITESPACE","\n\n    ",66],["T_DOC_COMMENT","\/**\n     * Retrieves a value from cache with a specified key.\n     * This is the implementation of the method declared in the parent class.\n     * @param string $key a unique key identifying the cached value\n     * @return mixed|false the value stored in cache, false if the value is not in the cache or expired.\n     *\/",68],["T_WHITESPACE","\n    ",73],["T_PROTECTED","protected",74],["T_WHITESPACE"," ",74],["T_FUNCTION","function",74],["T_WHITESPACE"," ",74],["T_STRING","getValue",74],"(",["T_VARIABLE","$key",74],")",["T_WHITESPACE","\n    ",74],"{",["T_WHITESPACE","\n        ",75],["T_RETURN","return",76],["T_WHITESPACE"," ",76],["T_VARIABLE","$this",76],["T_OBJECT_OPERATOR","->",76],["T_STRING","useApcu",76],["T_WHITESPACE"," ",76],"?",["T_WHITESPACE"," ",76],["T_STRING","apcu_fetch",76],"(",["T_VARIABLE","$key",76],")",["T_WHITESPACE"," ",76],":",["T_WHITESPACE"," ",76],["T_STRING","apc_fetch",76],"(",["T_VARIABLE","$key",76],")",";",["T_WHITESPACE","\n    ",76],"}",["T_WHITESPACE","\n\n    ",77],["T_DOC_COMMENT","\/**\n     * Retrieves multiple values from cache with the specified keys.\n     * @param array $keys a list of keys identifying the cached values\n     * @return array a list of cached values indexed by the keys\n     *\/",79],["T_WHITESPACE","\n    ",83],["T_PROTECTED","protected",84],["T_WHITESPACE"," ",84],["T_FUNCTION","function",84],["T_WHITESPACE"," ",84],["T_STRING","getValues",84],"(",["T_VARIABLE","$keys",84],")",["T_WHITESPACE","\n    ",84],"{",["T_WHITESPACE","\n        ",85],["T_VARIABLE","$values",86],["T_WHITESPACE"," ",86],"=",["T_WHITESPACE"," ",86],["T_VARIABLE","$this",86],["T_OBJECT_OPERATOR","->",86],["T_STRING","useApcu",86],["T_WHITESPACE"," ",86],"?",["T_WHITESPACE"," ",86],["T_STRING","apcu_fetch",86],"(",["T_VARIABLE","$keys",86],")",["T_WHITESPACE"," ",86],":",["T_WHITESPACE"," ",86],["T_STRING","apc_fetch",86],"(",["T_VARIABLE","$keys",86],")",";",["T_WHITESPACE","\n        ",86],["T_RETURN","return",87],["T_WHITESPACE"," ",87],["T_STRING","is_array",87],"(",["T_VARIABLE","$values",87],")",["T_WHITESPACE"," ",87],"?",["T_WHITESPACE"," ",87],["T_VARIABLE","$values",87],["T_WHITESPACE"," ",87],":",["T_WHITESPACE"," ",87],"[","]",";",["T_WHITESPACE","\n    ",87],"}",["T_WHITESPACE","\n\n    ",88],["T_DOC_COMMENT","\/**\n     * Stores a value identified by a key in cache.\n     * This is the implementation of the method declared in the parent class.\n     *\n     * @param string $key the key identifying the value to be cached\n     * @param mixed $value the value to be cached. Most often it's a string. If you have disabled [[serializer]],\n     * it could be something else.\n     * @param int $duration the number of seconds in which the cached value will expire. 0 means never expire.\n     * @return bool true if the value is successfully stored into cache, false otherwise.\n     *\/",90],["T_WHITESPACE","\n    ",99],["T_PROTECTED","protected",100],["T_WHITESPACE"," ",100],["T_FUNCTION","function",100],["T_WHITESPACE"," ",100],["T_STRING","setValue",100],"(",["T_VARIABLE","$key",100],",",["T_WHITESPACE"," ",100],["T_VARIABLE","$value",100],",",["T_WHITESPACE"," ",100],["T_VARIABLE","$duration",100],")",["T_WHITESPACE","\n    ",100],"{",["T_WHITESPACE","\n        ",101],["T_RETURN","return",102],["T_WHITESPACE"," ",102],["T_VARIABLE","$this",102],["T_OBJECT_OPERATOR","->",102],["T_STRING","useApcu",102],["T_WHITESPACE"," ",102],"?",["T_WHITESPACE"," ",102],["T_STRING","apcu_store",102],"(",["T_VARIABLE","$key",102],",",["T_WHITESPACE"," ",102],["T_VARIABLE","$value",102],",",["T_WHITESPACE"," ",102],["T_VARIABLE","$duration",102],")",["T_WHITESPACE"," ",102],":",["T_WHITESPACE"," ",102],["T_STRING","apc_store",102],"(",["T_VARIABLE","$key",102],",",["T_WHITESPACE"," ",102],["T_VARIABLE","$value",102],",",["T_WHITESPACE"," ",102],["T_VARIABLE","$duration",102],")",";",["T_WHITESPACE","\n    ",102],"}",["T_WHITESPACE","\n\n    ",103],["T_DOC_COMMENT","\/**\n     * Stores multiple key-value pairs in cache.\n     * @param array $data array where key corresponds to cache key while value\n     * @param int $duration the number of seconds in which the cached values will expire. 0 means never expire.\n     * @return array array of failed keys\n     *\/",105],["T_WHITESPACE","\n    ",110],["T_PROTECTED","protected",111],["T_WHITESPACE"," ",111],["T_FUNCTION","function",111],["T_WHITESPACE"," ",111],["T_STRING","setValues",111],"(",["T_VARIABLE","$data",111],",",["T_WHITESPACE"," ",111],["T_VARIABLE","$duration",111],")",["T_WHITESPACE","\n    ",111],"{",["T_WHITESPACE","\n        ",112],["T_VARIABLE","$result",113],["T_WHITESPACE"," ",113],"=",["T_WHITESPACE"," ",113],["T_VARIABLE","$this",113],["T_OBJECT_OPERATOR","->",113],["T_STRING","useApcu",113],["T_WHITESPACE"," ",113],"?",["T_WHITESPACE"," ",113],["T_STRING","apcu_store",113],"(",["T_VARIABLE","$data",113],",",["T_WHITESPACE"," ",113],["T_STRING","null",113],",",["T_WHITESPACE"," ",113],["T_VARIABLE","$duration",113],")",["T_WHITESPACE"," ",113],":",["T_WHITESPACE"," ",113],["T_STRING","apc_store",113],"(",["T_VARIABLE","$data",113],",",["T_WHITESPACE"," ",113],["T_STRING","null",113],",",["T_WHITESPACE"," ",113],["T_VARIABLE","$duration",113],")",";",["T_WHITESPACE","\n        ",113],["T_RETURN","return",114],["T_WHITESPACE"," ",114],["T_STRING","is_array",114],"(",["T_VARIABLE","$result",114],")",["T_WHITESPACE"," ",114],"?",["T_WHITESPACE"," ",114],["T_STRING","array_keys",114],"(",["T_VARIABLE","$result",114],")",["T_WHITESPACE"," ",114],":",["T_WHITESPACE"," ",114],"[","]",";",["T_WHITESPACE","\n    ",114],"}",["T_WHITESPACE","\n\n    ",115],["T_DOC_COMMENT","\/**\n     * Stores a value identified by a key into cache if the cache does not contain this key.\n     * This is the implementation of the method declared in the parent class.\n     * @param string $key the key identifying the value to be cached\n     * @param mixed $value the value to be cached. Most often it's a string. If you have disabled [[serializer]],\n     * it could be something else.\n     * @param int $duration the number of seconds in which the cached value will expire. 0 means never expire.\n     * @return bool true if the value is successfully stored into cache, false otherwise\n     *\/",117],["T_WHITESPACE","\n    ",125],["T_PROTECTED","protected",126],["T_WHITESPACE"," ",126],["T_FUNCTION","function",126],["T_WHITESPACE"," ",126],["T_STRING","addValue",126],"(",["T_VARIABLE","$key",126],",",["T_WHITESPACE"," ",126],["T_VARIABLE","$value",126],",",["T_WHITESPACE"," ",126],["T_VARIABLE","$duration",126],")",["T_WHITESPACE","\n    ",126],"{",["T_WHITESPACE","\n        ",127],["T_RETURN","return",128],["T_WHITESPACE"," ",128],["T_VARIABLE","$this",128],["T_OBJECT_OPERATOR","->",128],["T_STRING","useApcu",128],["T_WHITESPACE"," ",128],"?",["T_WHITESPACE"," ",128],["T_STRING","apcu_add",128],"(",["T_VARIABLE","$key",128],",",["T_WHITESPACE"," ",128],["T_VARIABLE","$value",128],",",["T_WHITESPACE"," ",128],["T_VARIABLE","$duration",128],")",["T_WHITESPACE"," ",128],":",["T_WHITESPACE"," ",128],["T_STRING","apc_add",128],"(",["T_VARIABLE","$key",128],",",["T_WHITESPACE"," ",128],["T_VARIABLE","$value",128],",",["T_WHITESPACE"," ",128],["T_VARIABLE","$duration",128],")",";",["T_WHITESPACE","\n    ",128],"}",["T_WHITESPACE","\n\n    ",129],["T_DOC_COMMENT","\/**\n     * Adds multiple key-value pairs to cache.\n     * @param array $data array where key corresponds to cache key while value is the value stored\n     * @param int $duration the number of seconds in which the cached values will expire. 0 means never expire.\n     * @return array array of failed keys\n     *\/",131],["T_WHITESPACE","\n    ",136],["T_PROTECTED","protected",137],["T_WHITESPACE"," ",137],["T_FUNCTION","function",137],["T_WHITESPACE"," ",137],["T_STRING","addValues",137],"(",["T_VARIABLE","$data",137],",",["T_WHITESPACE"," ",137],["T_VARIABLE","$duration",137],")",["T_WHITESPACE","\n    ",137],"{",["T_WHITESPACE","\n        ",138],["T_VARIABLE","$result",139],["T_WHITESPACE"," ",139],"=",["T_WHITESPACE"," ",139],["T_VARIABLE","$this",139],["T_OBJECT_OPERATOR","->",139],["T_STRING","useApcu",139],["T_WHITESPACE"," ",139],"?",["T_WHITESPACE"," ",139],["T_STRING","apcu_add",139],"(",["T_VARIABLE","$data",139],",",["T_WHITESPACE"," ",139],["T_STRING","null",139],",",["T_WHITESPACE"," ",139],["T_VARIABLE","$duration",139],")",["T_WHITESPACE"," ",139],":",["T_WHITESPACE"," ",139],["T_STRING","apc_add",139],"(",["T_VARIABLE","$data",139],",",["T_WHITESPACE"," ",139],["T_STRING","null",139],",",["T_WHITESPACE"," ",139],["T_VARIABLE","$duration",139],")",";",["T_WHITESPACE","\n        ",139],["T_RETURN","return",140],["T_WHITESPACE"," ",140],["T_STRING","is_array",140],"(",["T_VARIABLE","$result",140],")",["T_WHITESPACE"," ",140],"?",["T_WHITESPACE"," ",140],["T_STRING","array_keys",140],"(",["T_VARIABLE","$result",140],")",["T_WHITESPACE"," ",140],":",["T_WHITESPACE"," ",140],"[","]",";",["T_WHITESPACE","\n    ",140],"}",["T_WHITESPACE","\n\n    ",141],["T_DOC_COMMENT","\/**\n     * Deletes a value with the specified key from cache\n     * This is the implementation of the method declared in the parent class.\n     * @param string $key the key of the value to be deleted\n     * @return bool if no error happens during deletion\n     *\/",143],["T_WHITESPACE","\n    ",148],["T_PROTECTED","protected",149],["T_WHITESPACE"," ",149],["T_FUNCTION","function",149],["T_WHITESPACE"," ",149],["T_STRING","deleteValue",149],"(",["T_VARIABLE","$key",149],")",["T_WHITESPACE","\n    ",149],"{",["T_WHITESPACE","\n        ",150],["T_RETURN","return",151],["T_WHITESPACE"," ",151],["T_VARIABLE","$this",151],["T_OBJECT_OPERATOR","->",151],["T_STRING","useApcu",151],["T_WHITESPACE"," ",151],"?",["T_WHITESPACE"," ",151],["T_STRING","apcu_delete",151],"(",["T_VARIABLE","$key",151],")",["T_WHITESPACE"," ",151],":",["T_WHITESPACE"," ",151],["T_STRING","apc_delete",151],"(",["T_VARIABLE","$key",151],")",";",["T_WHITESPACE","\n    ",151],"}",["T_WHITESPACE","\n\n    ",152],["T_DOC_COMMENT","\/**\n     * Deletes all values from cache.\n     * This is the implementation of the method declared in the parent class.\n     * @return bool whether the flush operation was successful.\n     *\/",154],["T_WHITESPACE","\n    ",158],["T_PROTECTED","protected",159],["T_WHITESPACE"," ",159],["T_FUNCTION","function",159],["T_WHITESPACE"," ",159],["T_STRING","flushValues",159],"(",")",["T_WHITESPACE","\n    ",159],"{",["T_WHITESPACE","\n        ",160],["T_RETURN","return",161],["T_WHITESPACE"," ",161],["T_VARIABLE","$this",161],["T_OBJECT_OPERATOR","->",161],["T_STRING","useApcu",161],["T_WHITESPACE"," ",161],"?",["T_WHITESPACE"," ",161],["T_STRING","apcu_clear_cache",161],"(",")",["T_WHITESPACE"," ",161],":",["T_WHITESPACE"," ",161],["T_STRING","apc_clear_cache",161],"(",["T_CONSTANT_ENCAPSED_STRING","'user'",161],")",";",["T_WHITESPACE","\n    ",161],"}",["T_WHITESPACE","\n",162],"}",["T_WHITESPACE","\n",163]]