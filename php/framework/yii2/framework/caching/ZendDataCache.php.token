[["T_OPEN_TAG","<?php\n",1],["T_DOC_COMMENT","\/**\n * @link http:\/\/www.yiiframework.com\/\n * @copyright Copyright (c) 2008 Yii Software LLC\n * @license http:\/\/www.yiiframework.com\/license\/\n *\/",2],["T_WHITESPACE","\n\n",6],["T_NAMESPACE","namespace",8],["T_WHITESPACE"," ",8],["T_STRING","yii",8],["T_NS_SEPARATOR","\\",8],["T_STRING","caching",8],";",["T_WHITESPACE","\n\n",8],["T_DOC_COMMENT","\/**\n * ZendDataCache provides Zend data caching in terms of an application component.\n *\n * To use this application component, the [Zend Data Cache PHP extension](http:\/\/www.zend.com\/en\/products\/server\/)\n * must be loaded.\n *\n * See [[Cache]] for common cache operations that ZendDataCache supports.\n *\n * For more details and usage information on Cache, see the [guide article on caching](guide:caching-overview).\n *\n * @author Qiang Xue <qiang.xue@gmail.com>\n * @since 2.0\n *\/",10],["T_WHITESPACE","\n",22],["T_CLASS","class",23],["T_WHITESPACE"," ",23],["T_STRING","ZendDataCache",23],["T_WHITESPACE"," ",23],["T_EXTENDS","extends",23],["T_WHITESPACE"," ",23],["T_STRING","Cache",23],["T_WHITESPACE","\n",23],"{",["T_WHITESPACE","\n    ",24],["T_DOC_COMMENT","\/**\n     * Retrieves a value from cache with a specified key.\n     * This is the implementation of the method declared in the parent class.\n     * @param string $key a unique key identifying the cached value\n     * @return mixed|false the value stored in cache, false if the value is not in the cache or expired.\n     *\/",25],["T_WHITESPACE","\n    ",30],["T_PROTECTED","protected",31],["T_WHITESPACE"," ",31],["T_FUNCTION","function",31],["T_WHITESPACE"," ",31],["T_STRING","getValue",31],"(",["T_VARIABLE","$key",31],")",["T_WHITESPACE","\n    ",31],"{",["T_WHITESPACE","\n        ",32],["T_VARIABLE","$result",33],["T_WHITESPACE"," ",33],"=",["T_WHITESPACE"," ",33],["T_STRING","zend_shm_cache_fetch",33],"(",["T_VARIABLE","$key",33],")",";",["T_WHITESPACE","\n\n        ",33],["T_RETURN","return",35],["T_WHITESPACE"," ",35],["T_VARIABLE","$result",35],["T_WHITESPACE"," ",35],["T_IS_IDENTICAL","===",35],["T_WHITESPACE"," ",35],["T_STRING","null",35],["T_WHITESPACE"," ",35],"?",["T_WHITESPACE"," ",35],["T_STRING","false",35],["T_WHITESPACE"," ",35],":",["T_WHITESPACE"," ",35],["T_VARIABLE","$result",35],";",["T_WHITESPACE","\n    ",35],"}",["T_WHITESPACE","\n\n    ",36],["T_DOC_COMMENT","\/**\n     * Stores a value identified by a key in cache.\n     * This is the implementation of the method declared in the parent class.\n     *\n     * @param string $key the key identifying the value to be cached\n     * @param mixed $value the value to be cached. Most often it's a string. If you have disabled [[serializer]],\n     * it could be something else.\n     * @param int $duration the number of seconds in which the cached value will expire. 0 means never expire.\n     * @return bool true if the value is successfully stored into cache, false otherwise\n     *\/",38],["T_WHITESPACE","\n    ",47],["T_PROTECTED","protected",48],["T_WHITESPACE"," ",48],["T_FUNCTION","function",48],["T_WHITESPACE"," ",48],["T_STRING","setValue",48],"(",["T_VARIABLE","$key",48],",",["T_WHITESPACE"," ",48],["T_VARIABLE","$value",48],",",["T_WHITESPACE"," ",48],["T_VARIABLE","$duration",48],")",["T_WHITESPACE","\n    ",48],"{",["T_WHITESPACE","\n        ",49],["T_RETURN","return",50],["T_WHITESPACE"," ",50],["T_STRING","zend_shm_cache_store",50],"(",["T_VARIABLE","$key",50],",",["T_WHITESPACE"," ",50],["T_VARIABLE","$value",50],",",["T_WHITESPACE"," ",50],["T_VARIABLE","$duration",50],")",";",["T_WHITESPACE","\n    ",50],"}",["T_WHITESPACE","\n\n    ",51],["T_DOC_COMMENT","\/**\n     * Stores a value identified by a key into cache if the cache does not contain this key.\n     * This is the implementation of the method declared in the parent class.\n     *\n     * @param string $key the key identifying the value to be cached\n     * @param mixed $value the value to be cached. Most often it's a string. If you have disabled [[serializer]],\n     * it could be something else.\n     * @param int $duration the number of seconds in which the cached value will expire. 0 means never expire.\n     * @return bool true if the value is successfully stored into cache, false otherwise\n     *\/",53],["T_WHITESPACE","\n    ",62],["T_PROTECTED","protected",63],["T_WHITESPACE"," ",63],["T_FUNCTION","function",63],["T_WHITESPACE"," ",63],["T_STRING","addValue",63],"(",["T_VARIABLE","$key",63],",",["T_WHITESPACE"," ",63],["T_VARIABLE","$value",63],",",["T_WHITESPACE"," ",63],["T_VARIABLE","$duration",63],")",["T_WHITESPACE","\n    ",63],"{",["T_WHITESPACE","\n        ",64],["T_RETURN","return",65],["T_WHITESPACE"," ",65],["T_STRING","zend_shm_cache_fetch",65],"(",["T_VARIABLE","$key",65],")",["T_WHITESPACE"," ",65],["T_IS_IDENTICAL","===",65],["T_WHITESPACE"," ",65],["T_STRING","null",65],["T_WHITESPACE"," ",65],"?",["T_WHITESPACE"," ",65],["T_VARIABLE","$this",65],["T_OBJECT_OPERATOR","->",65],["T_STRING","setValue",65],"(",["T_VARIABLE","$key",65],",",["T_WHITESPACE"," ",65],["T_VARIABLE","$value",65],",",["T_WHITESPACE"," ",65],["T_VARIABLE","$duration",65],")",["T_WHITESPACE"," ",65],":",["T_WHITESPACE"," ",65],["T_STRING","false",65],";",["T_WHITESPACE","\n    ",65],"}",["T_WHITESPACE","\n\n    ",66],["T_DOC_COMMENT","\/**\n     * Deletes a value with the specified key from cache\n     * This is the implementation of the method declared in the parent class.\n     * @param string $key the key of the value to be deleted\n     * @return bool if no error happens during deletion\n     *\/",68],["T_WHITESPACE","\n    ",73],["T_PROTECTED","protected",74],["T_WHITESPACE"," ",74],["T_FUNCTION","function",74],["T_WHITESPACE"," ",74],["T_STRING","deleteValue",74],"(",["T_VARIABLE","$key",74],")",["T_WHITESPACE","\n    ",74],"{",["T_WHITESPACE","\n        ",75],["T_RETURN","return",76],["T_WHITESPACE"," ",76],["T_STRING","zend_shm_cache_delete",76],"(",["T_VARIABLE","$key",76],")",";",["T_WHITESPACE","\n    ",76],"}",["T_WHITESPACE","\n\n    ",77],["T_DOC_COMMENT","\/**\n     * Deletes all values from cache.\n     * This is the implementation of the method declared in the parent class.\n     * @return bool whether the flush operation was successful.\n     *\/",79],["T_WHITESPACE","\n    ",83],["T_PROTECTED","protected",84],["T_WHITESPACE"," ",84],["T_FUNCTION","function",84],["T_WHITESPACE"," ",84],["T_STRING","flushValues",84],"(",")",["T_WHITESPACE","\n    ",84],"{",["T_WHITESPACE","\n        ",85],["T_RETURN","return",86],["T_WHITESPACE"," ",86],["T_STRING","zend_shm_cache_clear",86],"(",")",";",["T_WHITESPACE","\n    ",86],"}",["T_WHITESPACE","\n",87],"}",["T_WHITESPACE","\n",88]]