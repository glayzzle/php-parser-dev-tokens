[["T_OPEN_TAG","<?php\n",1],["T_DOC_COMMENT","\/**\n * @link http:\/\/www.yiiframework.com\/\n * @copyright Copyright (c) 2008 Yii Software LLC\n * @license http:\/\/www.yiiframework.com\/license\/\n *\/",2],["T_WHITESPACE","\n\n",6],["T_NAMESPACE","namespace",8],["T_WHITESPACE"," ",8],["T_STRING","yii",8],["T_NS_SEPARATOR","\\",8],["T_STRING","web",8],";",["T_WHITESPACE","\n\n",8],["T_USE","use",10],["T_WHITESPACE"," ",10],["T_STRING","Yii",10],";",["T_WHITESPACE","\n",10],["T_USE","use",11],["T_WHITESPACE"," ",11],["T_STRING","yii",11],["T_NS_SEPARATOR","\\",11],["T_STRING","base",11],["T_NS_SEPARATOR","\\",11],["T_STRING","Object",11],";",["T_WHITESPACE","\n",11],["T_USE","use",12],["T_WHITESPACE"," ",12],["T_STRING","ArrayIterator",12],";",["T_WHITESPACE","\n\n",12],["T_DOC_COMMENT","\/**\n * HeaderCollection is used by [[Response]] to maintain the currently registered HTTP headers.\n *\n * @property int $count The number of headers in the collection. This property is read-only.\n * @property ArrayIterator $iterator An iterator for traversing the headers in the collection. This property\n * is read-only.\n *\n * @author Qiang Xue <qiang.xue@gmail.com>\n * @since 2.0\n *\/",14],["T_WHITESPACE","\n",23],["T_CLASS","class",24],["T_WHITESPACE"," ",24],["T_STRING","HeaderCollection",24],["T_WHITESPACE"," ",24],["T_EXTENDS","extends",24],["T_WHITESPACE"," ",24],["T_STRING","Object",24],["T_WHITESPACE"," ",24],["T_IMPLEMENTS","implements",24],["T_WHITESPACE"," ",24],["T_NS_SEPARATOR","\\",24],["T_STRING","IteratorAggregate",24],",",["T_WHITESPACE"," ",24],["T_NS_SEPARATOR","\\",24],["T_STRING","ArrayAccess",24],",",["T_WHITESPACE"," ",24],["T_NS_SEPARATOR","\\",24],["T_STRING","Countable",24],["T_WHITESPACE","\n",24],"{",["T_WHITESPACE","\n    ",25],["T_DOC_COMMENT","\/**\n     * @var array the headers in this collection (indexed by the header names)\n     *\/",26],["T_WHITESPACE","\n    ",28],["T_PRIVATE","private",29],["T_WHITESPACE"," ",29],["T_VARIABLE","$_headers",29],["T_WHITESPACE"," ",29],"=",["T_WHITESPACE"," ",29],"[","]",";",["T_WHITESPACE","\n\n\n    ",29],["T_DOC_COMMENT","\/**\n     * Returns an iterator for traversing the headers in the collection.\n     * This method is required by the SPL interface [[\\IteratorAggregate]].\n     * It will be implicitly called when you use `foreach` to traverse the collection.\n     * @return ArrayIterator an iterator for traversing the headers in the collection.\n     *\/",32],["T_WHITESPACE","\n    ",37],["T_PUBLIC","public",38],["T_WHITESPACE"," ",38],["T_FUNCTION","function",38],["T_WHITESPACE"," ",38],["T_STRING","getIterator",38],"(",")",["T_WHITESPACE","\n    ",38],"{",["T_WHITESPACE","\n        ",39],["T_RETURN","return",40],["T_WHITESPACE"," ",40],["T_NEW","new",40],["T_WHITESPACE"," ",40],["T_STRING","ArrayIterator",40],"(",["T_VARIABLE","$this",40],["T_OBJECT_OPERATOR","->",40],["T_STRING","_headers",40],")",";",["T_WHITESPACE","\n    ",40],"}",["T_WHITESPACE","\n\n    ",41],["T_DOC_COMMENT","\/**\n     * Returns the number of headers in the collection.\n     * This method is required by the SPL `Countable` interface.\n     * It will be implicitly called when you use `count($collection)`.\n     * @return int the number of headers in the collection.\n     *\/",43],["T_WHITESPACE","\n    ",48],["T_PUBLIC","public",49],["T_WHITESPACE"," ",49],["T_FUNCTION","function",49],["T_WHITESPACE"," ",49],["T_STRING","count",49],"(",")",["T_WHITESPACE","\n    ",49],"{",["T_WHITESPACE","\n        ",50],["T_RETURN","return",51],["T_WHITESPACE"," ",51],["T_VARIABLE","$this",51],["T_OBJECT_OPERATOR","->",51],["T_STRING","getCount",51],"(",")",";",["T_WHITESPACE","\n    ",51],"}",["T_WHITESPACE","\n\n    ",52],["T_DOC_COMMENT","\/**\n     * Returns the number of headers in the collection.\n     * @return int the number of headers in the collection.\n     *\/",54],["T_WHITESPACE","\n    ",57],["T_PUBLIC","public",58],["T_WHITESPACE"," ",58],["T_FUNCTION","function",58],["T_WHITESPACE"," ",58],["T_STRING","getCount",58],"(",")",["T_WHITESPACE","\n    ",58],"{",["T_WHITESPACE","\n        ",59],["T_RETURN","return",60],["T_WHITESPACE"," ",60],["T_STRING","count",60],"(",["T_VARIABLE","$this",60],["T_OBJECT_OPERATOR","->",60],["T_STRING","_headers",60],")",";",["T_WHITESPACE","\n    ",60],"}",["T_WHITESPACE","\n\n    ",61],["T_DOC_COMMENT","\/**\n     * Returns the named header(s).\n     * @param string $name the name of the header to return\n     * @param mixed $default the value to return in case the named header does not exist\n     * @param bool $first whether to only return the first header of the specified name.\n     * If false, all headers of the specified name will be returned.\n     * @return string|array the named header(s). If `$first` is true, a string will be returned;\n     * If `$first` is false, an array will be returned.\n     *\/",63],["T_WHITESPACE","\n    ",71],["T_PUBLIC","public",72],["T_WHITESPACE"," ",72],["T_FUNCTION","function",72],["T_WHITESPACE"," ",72],["T_STRING","get",72],"(",["T_VARIABLE","$name",72],",",["T_WHITESPACE"," ",72],["T_VARIABLE","$default",72],["T_WHITESPACE"," ",72],"=",["T_WHITESPACE"," ",72],["T_STRING","null",72],",",["T_WHITESPACE"," ",72],["T_VARIABLE","$first",72],["T_WHITESPACE"," ",72],"=",["T_WHITESPACE"," ",72],["T_STRING","true",72],")",["T_WHITESPACE","\n    ",72],"{",["T_WHITESPACE","\n        ",73],["T_VARIABLE","$name",74],["T_WHITESPACE"," ",74],"=",["T_WHITESPACE"," ",74],["T_STRING","strtolower",74],"(",["T_VARIABLE","$name",74],")",";",["T_WHITESPACE","\n        ",74],["T_IF","if",75],["T_WHITESPACE"," ",75],"(",["T_ISSET","isset",75],"(",["T_VARIABLE","$this",75],["T_OBJECT_OPERATOR","->",75],["T_STRING","_headers",75],"[",["T_VARIABLE","$name",75],"]",")",")",["T_WHITESPACE"," ",75],"{",["T_WHITESPACE","\n            ",75],["T_RETURN","return",76],["T_WHITESPACE"," ",76],["T_VARIABLE","$first",76],["T_WHITESPACE"," ",76],"?",["T_WHITESPACE"," ",76],["T_STRING","reset",76],"(",["T_VARIABLE","$this",76],["T_OBJECT_OPERATOR","->",76],["T_STRING","_headers",76],"[",["T_VARIABLE","$name",76],"]",")",["T_WHITESPACE"," ",76],":",["T_WHITESPACE"," ",76],["T_VARIABLE","$this",76],["T_OBJECT_OPERATOR","->",76],["T_STRING","_headers",76],"[",["T_VARIABLE","$name",76],"]",";",["T_WHITESPACE","\n        ",76],"}",["T_WHITESPACE"," ",77],["T_ELSE","else",77],["T_WHITESPACE"," ",77],"{",["T_WHITESPACE","\n            ",77],["T_RETURN","return",78],["T_WHITESPACE"," ",78],["T_VARIABLE","$default",78],";",["T_WHITESPACE","\n        ",78],"}",["T_WHITESPACE","\n    ",79],"}",["T_WHITESPACE","\n\n    ",80],["T_DOC_COMMENT","\/**\n     * Adds a new header.\n     * If there is already a header with the same name, it will be replaced.\n     * @param string $name the name of the header\n     * @param string $value the value of the header\n     * @return $this the collection object itself\n     *\/",82],["T_WHITESPACE","\n    ",88],["T_PUBLIC","public",89],["T_WHITESPACE"," ",89],["T_FUNCTION","function",89],["T_WHITESPACE"," ",89],["T_STRING","set",89],"(",["T_VARIABLE","$name",89],",",["T_WHITESPACE"," ",89],["T_VARIABLE","$value",89],["T_WHITESPACE"," ",89],"=",["T_WHITESPACE"," ",89],["T_CONSTANT_ENCAPSED_STRING","''",89],")",["T_WHITESPACE","\n    ",89],"{",["T_WHITESPACE","\n        ",90],["T_VARIABLE","$name",91],["T_WHITESPACE"," ",91],"=",["T_WHITESPACE"," ",91],["T_STRING","strtolower",91],"(",["T_VARIABLE","$name",91],")",";",["T_WHITESPACE","\n        ",91],["T_VARIABLE","$this",92],["T_OBJECT_OPERATOR","->",92],["T_STRING","_headers",92],"[",["T_VARIABLE","$name",92],"]",["T_WHITESPACE"," ",92],"=",["T_WHITESPACE"," ",92],["T_ARRAY_CAST","(array)",92],["T_WHITESPACE"," ",92],["T_VARIABLE","$value",92],";",["T_WHITESPACE","\n\n        ",92],["T_RETURN","return",94],["T_WHITESPACE"," ",94],["T_VARIABLE","$this",94],";",["T_WHITESPACE","\n    ",94],"}",["T_WHITESPACE","\n\n    ",95],["T_DOC_COMMENT","\/**\n     * Adds a new header.\n     * If there is already a header with the same name, the new one will\n     * be appended to it instead of replacing it.\n     * @param string $name the name of the header\n     * @param string $value the value of the header\n     * @return $this the collection object itself\n     *\/",97],["T_WHITESPACE","\n    ",104],["T_PUBLIC","public",105],["T_WHITESPACE"," ",105],["T_FUNCTION","function",105],["T_WHITESPACE"," ",105],["T_STRING","add",105],"(",["T_VARIABLE","$name",105],",",["T_WHITESPACE"," ",105],["T_VARIABLE","$value",105],")",["T_WHITESPACE","\n    ",105],"{",["T_WHITESPACE","\n        ",106],["T_VARIABLE","$name",107],["T_WHITESPACE"," ",107],"=",["T_WHITESPACE"," ",107],["T_STRING","strtolower",107],"(",["T_VARIABLE","$name",107],")",";",["T_WHITESPACE","\n        ",107],["T_VARIABLE","$this",108],["T_OBJECT_OPERATOR","->",108],["T_STRING","_headers",108],"[",["T_VARIABLE","$name",108],"]","[","]",["T_WHITESPACE"," ",108],"=",["T_WHITESPACE"," ",108],["T_VARIABLE","$value",108],";",["T_WHITESPACE","\n\n        ",108],["T_RETURN","return",110],["T_WHITESPACE"," ",110],["T_VARIABLE","$this",110],";",["T_WHITESPACE","\n    ",110],"}",["T_WHITESPACE","\n\n    ",111],["T_DOC_COMMENT","\/**\n     * Sets a new header only if it does not exist yet.\n     * If there is already a header with the same name, the new one will be ignored.\n     * @param string $name the name of the header\n     * @param string $value the value of the header\n     * @return $this the collection object itself\n     *\/",113],["T_WHITESPACE","\n    ",119],["T_PUBLIC","public",120],["T_WHITESPACE"," ",120],["T_FUNCTION","function",120],["T_WHITESPACE"," ",120],["T_STRING","setDefault",120],"(",["T_VARIABLE","$name",120],",",["T_WHITESPACE"," ",120],["T_VARIABLE","$value",120],")",["T_WHITESPACE","\n    ",120],"{",["T_WHITESPACE","\n        ",121],["T_VARIABLE","$name",122],["T_WHITESPACE"," ",122],"=",["T_WHITESPACE"," ",122],["T_STRING","strtolower",122],"(",["T_VARIABLE","$name",122],")",";",["T_WHITESPACE","\n        ",122],["T_IF","if",123],["T_WHITESPACE"," ",123],"(",["T_EMPTY","empty",123],"(",["T_VARIABLE","$this",123],["T_OBJECT_OPERATOR","->",123],["T_STRING","_headers",123],"[",["T_VARIABLE","$name",123],"]",")",")",["T_WHITESPACE"," ",123],"{",["T_WHITESPACE","\n            ",123],["T_VARIABLE","$this",124],["T_OBJECT_OPERATOR","->",124],["T_STRING","_headers",124],"[",["T_VARIABLE","$name",124],"]","[","]",["T_WHITESPACE"," ",124],"=",["T_WHITESPACE"," ",124],["T_VARIABLE","$value",124],";",["T_WHITESPACE","\n        ",124],"}",["T_WHITESPACE","\n\n        ",125],["T_RETURN","return",127],["T_WHITESPACE"," ",127],["T_VARIABLE","$this",127],";",["T_WHITESPACE","\n    ",127],"}",["T_WHITESPACE","\n\n    ",128],["T_DOC_COMMENT","\/**\n     * Returns a value indicating whether the named header exists.\n     * @param string $name the name of the header\n     * @return bool whether the named header exists\n     *\/",130],["T_WHITESPACE","\n    ",134],["T_PUBLIC","public",135],["T_WHITESPACE"," ",135],["T_FUNCTION","function",135],["T_WHITESPACE"," ",135],["T_STRING","has",135],"(",["T_VARIABLE","$name",135],")",["T_WHITESPACE","\n    ",135],"{",["T_WHITESPACE","\n        ",136],["T_VARIABLE","$name",137],["T_WHITESPACE"," ",137],"=",["T_WHITESPACE"," ",137],["T_STRING","strtolower",137],"(",["T_VARIABLE","$name",137],")",";",["T_WHITESPACE","\n\n        ",137],["T_RETURN","return",139],["T_WHITESPACE"," ",139],["T_ISSET","isset",139],"(",["T_VARIABLE","$this",139],["T_OBJECT_OPERATOR","->",139],["T_STRING","_headers",139],"[",["T_VARIABLE","$name",139],"]",")",";",["T_WHITESPACE","\n    ",139],"}",["T_WHITESPACE","\n\n    ",140],["T_DOC_COMMENT","\/**\n     * Removes a header.\n     * @param string $name the name of the header to be removed.\n     * @return array the value of the removed header. Null is returned if the header does not exist.\n     *\/",142],["T_WHITESPACE","\n    ",146],["T_PUBLIC","public",147],["T_WHITESPACE"," ",147],["T_FUNCTION","function",147],["T_WHITESPACE"," ",147],["T_STRING","remove",147],"(",["T_VARIABLE","$name",147],")",["T_WHITESPACE","\n    ",147],"{",["T_WHITESPACE","\n        ",148],["T_VARIABLE","$name",149],["T_WHITESPACE"," ",149],"=",["T_WHITESPACE"," ",149],["T_STRING","strtolower",149],"(",["T_VARIABLE","$name",149],")",";",["T_WHITESPACE","\n        ",149],["T_IF","if",150],["T_WHITESPACE"," ",150],"(",["T_ISSET","isset",150],"(",["T_VARIABLE","$this",150],["T_OBJECT_OPERATOR","->",150],["T_STRING","_headers",150],"[",["T_VARIABLE","$name",150],"]",")",")",["T_WHITESPACE"," ",150],"{",["T_WHITESPACE","\n            ",150],["T_VARIABLE","$value",151],["T_WHITESPACE"," ",151],"=",["T_WHITESPACE"," ",151],["T_VARIABLE","$this",151],["T_OBJECT_OPERATOR","->",151],["T_STRING","_headers",151],"[",["T_VARIABLE","$name",151],"]",";",["T_WHITESPACE","\n            ",151],["T_UNSET","unset",152],"(",["T_VARIABLE","$this",152],["T_OBJECT_OPERATOR","->",152],["T_STRING","_headers",152],"[",["T_VARIABLE","$name",152],"]",")",";",["T_WHITESPACE","\n            ",152],["T_RETURN","return",153],["T_WHITESPACE"," ",153],["T_VARIABLE","$value",153],";",["T_WHITESPACE","\n        ",153],"}",["T_WHITESPACE"," ",154],["T_ELSE","else",154],["T_WHITESPACE"," ",154],"{",["T_WHITESPACE","\n            ",154],["T_RETURN","return",155],["T_WHITESPACE"," ",155],["T_STRING","null",155],";",["T_WHITESPACE","\n        ",155],"}",["T_WHITESPACE","\n    ",156],"}",["T_WHITESPACE","\n\n    ",157],["T_DOC_COMMENT","\/**\n     * Removes all headers.\n     *\/",159],["T_WHITESPACE","\n    ",161],["T_PUBLIC","public",162],["T_WHITESPACE"," ",162],["T_FUNCTION","function",162],["T_WHITESPACE"," ",162],["T_STRING","removeAll",162],"(",")",["T_WHITESPACE","\n    ",162],"{",["T_WHITESPACE","\n        ",163],["T_VARIABLE","$this",164],["T_OBJECT_OPERATOR","->",164],["T_STRING","_headers",164],["T_WHITESPACE"," ",164],"=",["T_WHITESPACE"," ",164],"[","]",";",["T_WHITESPACE","\n    ",164],"}",["T_WHITESPACE","\n\n    ",165],["T_DOC_COMMENT","\/**\n     * Returns the collection as a PHP array.\n     * @return array the array representation of the collection.\n     * The array keys are header names, and the array values are the corresponding header values.\n     *\/",167],["T_WHITESPACE","\n    ",171],["T_PUBLIC","public",172],["T_WHITESPACE"," ",172],["T_FUNCTION","function",172],["T_WHITESPACE"," ",172],["T_STRING","toArray",172],"(",")",["T_WHITESPACE","\n    ",172],"{",["T_WHITESPACE","\n        ",173],["T_RETURN","return",174],["T_WHITESPACE"," ",174],["T_VARIABLE","$this",174],["T_OBJECT_OPERATOR","->",174],["T_STRING","_headers",174],";",["T_WHITESPACE","\n    ",174],"}",["T_WHITESPACE","\n\n    ",175],["T_DOC_COMMENT","\/**\n     * Populates the header collection from an array.\n     * @param array $array the headers to populate from\n     * @since 2.0.3\n     *\/",177],["T_WHITESPACE","\n    ",181],["T_PUBLIC","public",182],["T_WHITESPACE"," ",182],["T_FUNCTION","function",182],["T_WHITESPACE"," ",182],["T_STRING","fromArray",182],"(",["T_ARRAY","array",182],["T_WHITESPACE"," ",182],["T_VARIABLE","$array",182],")",["T_WHITESPACE","\n    ",182],"{",["T_WHITESPACE","\n        ",183],["T_VARIABLE","$this",184],["T_OBJECT_OPERATOR","->",184],["T_STRING","_headers",184],["T_WHITESPACE"," ",184],"=",["T_WHITESPACE"," ",184],["T_VARIABLE","$array",184],";",["T_WHITESPACE","\n    ",184],"}",["T_WHITESPACE","\n\n    ",185],["T_DOC_COMMENT","\/**\n     * Returns whether there is a header with the specified name.\n     * This method is required by the SPL interface [[\\ArrayAccess]].\n     * It is implicitly called when you use something like `isset($collection[$name])`.\n     * @param string $name the header name\n     * @return bool whether the named header exists\n     *\/",187],["T_WHITESPACE","\n    ",193],["T_PUBLIC","public",194],["T_WHITESPACE"," ",194],["T_FUNCTION","function",194],["T_WHITESPACE"," ",194],["T_STRING","offsetExists",194],"(",["T_VARIABLE","$name",194],")",["T_WHITESPACE","\n    ",194],"{",["T_WHITESPACE","\n        ",195],["T_RETURN","return",196],["T_WHITESPACE"," ",196],["T_VARIABLE","$this",196],["T_OBJECT_OPERATOR","->",196],["T_STRING","has",196],"(",["T_VARIABLE","$name",196],")",";",["T_WHITESPACE","\n    ",196],"}",["T_WHITESPACE","\n\n    ",197],["T_DOC_COMMENT","\/**\n     * Returns the header with the specified name.\n     * This method is required by the SPL interface [[\\ArrayAccess]].\n     * It is implicitly called when you use something like `$header = $collection[$name];`.\n     * This is equivalent to [[get()]].\n     * @param string $name the header name\n     * @return string the header value with the specified name, null if the named header does not exist.\n     *\/",199],["T_WHITESPACE","\n    ",206],["T_PUBLIC","public",207],["T_WHITESPACE"," ",207],["T_FUNCTION","function",207],["T_WHITESPACE"," ",207],["T_STRING","offsetGet",207],"(",["T_VARIABLE","$name",207],")",["T_WHITESPACE","\n    ",207],"{",["T_WHITESPACE","\n        ",208],["T_RETURN","return",209],["T_WHITESPACE"," ",209],["T_VARIABLE","$this",209],["T_OBJECT_OPERATOR","->",209],["T_STRING","get",209],"(",["T_VARIABLE","$name",209],")",";",["T_WHITESPACE","\n    ",209],"}",["T_WHITESPACE","\n\n    ",210],["T_DOC_COMMENT","\/**\n     * Adds the header to the collection.\n     * This method is required by the SPL interface [[\\ArrayAccess]].\n     * It is implicitly called when you use something like `$collection[$name] = $header;`.\n     * This is equivalent to [[add()]].\n     * @param string $name the header name\n     * @param string $value the header value to be added\n     *\/",212],["T_WHITESPACE","\n    ",219],["T_PUBLIC","public",220],["T_WHITESPACE"," ",220],["T_FUNCTION","function",220],["T_WHITESPACE"," ",220],["T_STRING","offsetSet",220],"(",["T_VARIABLE","$name",220],",",["T_WHITESPACE"," ",220],["T_VARIABLE","$value",220],")",["T_WHITESPACE","\n    ",220],"{",["T_WHITESPACE","\n        ",221],["T_VARIABLE","$this",222],["T_OBJECT_OPERATOR","->",222],["T_STRING","set",222],"(",["T_VARIABLE","$name",222],",",["T_WHITESPACE"," ",222],["T_VARIABLE","$value",222],")",";",["T_WHITESPACE","\n    ",222],"}",["T_WHITESPACE","\n\n    ",223],["T_DOC_COMMENT","\/**\n     * Removes the named header.\n     * This method is required by the SPL interface [[\\ArrayAccess]].\n     * It is implicitly called when you use something like `unset($collection[$name])`.\n     * This is equivalent to [[remove()]].\n     * @param string $name the header name\n     *\/",225],["T_WHITESPACE","\n    ",231],["T_PUBLIC","public",232],["T_WHITESPACE"," ",232],["T_FUNCTION","function",232],["T_WHITESPACE"," ",232],["T_STRING","offsetUnset",232],"(",["T_VARIABLE","$name",232],")",["T_WHITESPACE","\n    ",232],"{",["T_WHITESPACE","\n        ",233],["T_VARIABLE","$this",234],["T_OBJECT_OPERATOR","->",234],["T_STRING","remove",234],"(",["T_VARIABLE","$name",234],")",";",["T_WHITESPACE","\n    ",234],"}",["T_WHITESPACE","\n",235],"}",["T_WHITESPACE","\n",236]]