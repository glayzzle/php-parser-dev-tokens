[["T_OPEN_TAG","<?php\n",1],["T_DOC_COMMENT","\/**\n * @link http:\/\/www.yiiframework.com\/\n * @copyright Copyright (c) 2008 Yii Software LLC\n * @license http:\/\/www.yiiframework.com\/license\/\n *\/",2],["T_WHITESPACE","\n\n",6],["T_NAMESPACE","namespace",8],["T_WHITESPACE"," ",8],["T_STRING","yii",8],["T_NS_SEPARATOR","\\",8],["T_STRING","mail",8],";",["T_WHITESPACE","\n\n",8],["T_DOC_COMMENT","\/**\n * MailerInterface is the interface that should be implemented by mailer classes.\n *\n * A mailer should mainly support creating and sending [[MessageInterface|mail messages]]. It should\n * also support composition of the message body through the view rendering mechanism. For example,\n *\n * ```php\n * Yii::$app->mailer->compose('contact\/html', ['contactForm' => $form])\n *     ->setFrom('from@domain.com')\n *     ->setTo($form->email)\n *     ->setSubject($form->subject)\n *     ->send();\n * ```\n *\n * @see MessageInterface\n *\n * @author Paul Klimov <klimov.paul@gmail.com>\n * @since 2.0\n *\/",10],["T_WHITESPACE","\n",28],["T_INTERFACE","interface",29],["T_WHITESPACE"," ",29],["T_STRING","MailerInterface",29],["T_WHITESPACE","\n",29],"{",["T_WHITESPACE","\n    ",30],["T_DOC_COMMENT","\/**\n     * Creates a new message instance and optionally composes its body content via view rendering.\n     *\n     * @param string|array|null $view the view to be used for rendering the message body. This can be:\n     *\n     * - a string, which represents the view name or path alias for rendering the HTML body of the email.\n     *   In this case, the text body will be generated by applying `strip_tags()` to the HTML body.\n     * - an array with 'html' and\/or 'text' elements. The 'html' element refers to the view name or path alias\n     *   for rendering the HTML body, while 'text' element is for rendering the text body. For example,\n     *   `['html' => 'contact-html', 'text' => 'contact-text']`.\n     * - null, meaning the message instance will be returned without body content.\n     *\n     * @param array $params the parameters (name-value pairs) that will be extracted and made available in the view file.\n     * @return MessageInterface message instance.\n     *\/",31],["T_WHITESPACE","\n    ",45],["T_PUBLIC","public",46],["T_WHITESPACE"," ",46],["T_FUNCTION","function",46],["T_WHITESPACE"," ",46],["T_STRING","compose",46],"(",["T_VARIABLE","$view",46],["T_WHITESPACE"," ",46],"=",["T_WHITESPACE"," ",46],["T_STRING","null",46],",",["T_WHITESPACE"," ",46],["T_ARRAY","array",46],["T_WHITESPACE"," ",46],["T_VARIABLE","$params",46],["T_WHITESPACE"," ",46],"=",["T_WHITESPACE"," ",46],"[","]",")",";",["T_WHITESPACE","\n\n    ",46],["T_DOC_COMMENT","\/**\n     * Sends the given email message.\n     * @param MessageInterface $message email message instance to be sent\n     * @return bool whether the message has been sent successfully\n     *\/",48],["T_WHITESPACE","\n    ",52],["T_PUBLIC","public",53],["T_WHITESPACE"," ",53],["T_FUNCTION","function",53],["T_WHITESPACE"," ",53],["T_STRING","send",53],"(",["T_VARIABLE","$message",53],")",";",["T_WHITESPACE","\n\n    ",53],["T_DOC_COMMENT","\/**\n     * Sends multiple messages at once.\n     *\n     * This method may be implemented by some mailers which support more efficient way of sending multiple messages in the same batch.\n     *\n     * @param array $messages list of email messages, which should be sent.\n     * @return int number of messages that are successfully sent.\n     *\/",55],["T_WHITESPACE","\n    ",62],["T_PUBLIC","public",63],["T_WHITESPACE"," ",63],["T_FUNCTION","function",63],["T_WHITESPACE"," ",63],["T_STRING","sendMultiple",63],"(",["T_ARRAY","array",63],["T_WHITESPACE"," ",63],["T_VARIABLE","$messages",63],")",";",["T_WHITESPACE","\n",63],"}",["T_WHITESPACE","\n",64]]