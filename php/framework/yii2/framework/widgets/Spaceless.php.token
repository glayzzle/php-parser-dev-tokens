[["T_OPEN_TAG","<?php\n",1],["T_DOC_COMMENT","\/**\n * @link http:\/\/www.yiiframework.com\/\n * @copyright Copyright (c) 2008 Yii Software LLC\n * @license http:\/\/www.yiiframework.com\/license\/\n *\/",2],["T_WHITESPACE","\n\n",6],["T_NAMESPACE","namespace",8],["T_WHITESPACE"," ",8],["T_STRING","yii",8],["T_NS_SEPARATOR","\\",8],["T_STRING","widgets",8],";",["T_WHITESPACE","\n\n",8],["T_USE","use",10],["T_WHITESPACE"," ",10],["T_STRING","yii",10],["T_NS_SEPARATOR","\\",10],["T_STRING","base",10],["T_NS_SEPARATOR","\\",10],["T_STRING","Widget",10],";",["T_WHITESPACE","\n\n",10],["T_DOC_COMMENT","\/**\n * Spaceless widget removes whitespace characters between HTML tags. Whitespaces within HTML tags\n * or in a plain text are always left untouched.\n *\n * Usage example:\n *\n * ```php\n * <body>\n *     <?php Spaceless::begin(); ?>\n *         <div class=\"nav-bar\">\n *             <!-- tags -->\n *         <\/div>\n *         <div class=\"content\">\n *             <!-- tags -->\n *         <\/div>\n *     <?php Spaceless::end(); ?>\n * <\/body>\n * ```\n *\n * This example will generate the following HTML:\n *\n * ```html\n * <body>\n *     <div class=\"nav-bar\"><!-- tags --><\/div><div class=\"content\"><!-- tags --><\/div><\/body>\n * ```\n *\n * This method is not designed for content compression (you should use `gzip` output compression to\n * achieve it). Main intention is to strip out extra whitespace characters between HTML tags in order\n * to avoid browser rendering quirks in some circumstances (e.g. newlines between inline-block elements).\n *\n * Note, never use this method with `pre` or `textarea` tags. It's not that trivial to deal with such tags\n * as it may seem at first sight. For this case you should consider using\n * [HTML Tidy Project](http:\/\/tidy.sourceforge.net\/) instead.\n *\n * @see http:\/\/tidy.sourceforge.net\/\n * @author resurtm <resurtm@gmail.com>\n * @since 2.0\n *\/",12],["T_WHITESPACE","\n",49],["T_CLASS","class",50],["T_WHITESPACE"," ",50],["T_STRING","Spaceless",50],["T_WHITESPACE"," ",50],["T_EXTENDS","extends",50],["T_WHITESPACE"," ",50],["T_STRING","Widget",50],["T_WHITESPACE","\n",50],"{",["T_WHITESPACE","\n    ",51],["T_DOC_COMMENT","\/**\n     * Starts capturing an output to be cleaned from whitespace characters between HTML tags.\n     *\/",52],["T_WHITESPACE","\n    ",54],["T_PUBLIC","public",55],["T_WHITESPACE"," ",55],["T_FUNCTION","function",55],["T_WHITESPACE"," ",55],["T_STRING","init",55],"(",")",["T_WHITESPACE","\n    ",55],"{",["T_WHITESPACE","\n        ",56],["T_STRING","ob_start",57],"(",")",";",["T_WHITESPACE","\n        ",57],["T_STRING","ob_implicit_flush",58],"(",["T_STRING","false",58],")",";",["T_WHITESPACE","\n    ",58],"}",["T_WHITESPACE","\n\n    ",59],["T_DOC_COMMENT","\/**\n     * Marks the end of content to be cleaned from whitespace characters between HTML tags.\n     * Stops capturing an output and echoes cleaned result.\n     *\/",61],["T_WHITESPACE","\n    ",64],["T_PUBLIC","public",65],["T_WHITESPACE"," ",65],["T_FUNCTION","function",65],["T_WHITESPACE"," ",65],["T_STRING","run",65],"(",")",["T_WHITESPACE","\n    ",65],"{",["T_WHITESPACE","\n        ",66],["T_ECHO","echo",67],["T_WHITESPACE"," ",67],["T_STRING","trim",67],"(",["T_STRING","preg_replace",67],"(",["T_CONSTANT_ENCAPSED_STRING","'\/>\\s+<\/'",67],",",["T_WHITESPACE"," ",67],["T_CONSTANT_ENCAPSED_STRING","'><'",67],",",["T_WHITESPACE"," ",67],["T_STRING","ob_get_clean",67],"(",")",")",")",";",["T_WHITESPACE","\n    ",67],"}",["T_WHITESPACE","\n",68],"}",["T_WHITESPACE","\n",69]]