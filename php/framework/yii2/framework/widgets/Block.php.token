[["T_OPEN_TAG","<?php\n",1],["T_DOC_COMMENT","\/**\n * @link http:\/\/www.yiiframework.com\/\n * @copyright Copyright (c) 2008 Yii Software LLC\n * @license http:\/\/www.yiiframework.com\/license\/\n *\/",2],["T_WHITESPACE","\n\n",6],["T_NAMESPACE","namespace",8],["T_WHITESPACE"," ",8],["T_STRING","yii",8],["T_NS_SEPARATOR","\\",8],["T_STRING","widgets",8],";",["T_WHITESPACE","\n\n",8],["T_USE","use",10],["T_WHITESPACE"," ",10],["T_STRING","yii",10],["T_NS_SEPARATOR","\\",10],["T_STRING","base",10],["T_NS_SEPARATOR","\\",10],["T_STRING","Widget",10],";",["T_WHITESPACE","\n\n",10],["T_DOC_COMMENT","\/**\n * Block records all output between [[begin()]] and [[end()]] calls and stores it in [[\\yii\\base\\View::$blocks]].\n * for later use.\n *\n * [[\\yii\\base\\View]] component contains two methods [[\\yii\\base\\View::beginBlock()]] and [[\\yii\\base\\View::endBlock()]].\n * The general idea is that you're defining block default in a view or layout:\n *\n * ```php\n * <?php $this->beginBlock('messages', true) ?>\n * Nothing.\n * <?php $this->endBlock() ?>\n * ```\n *\n * And then overriding default in sub-views:\n *\n * ```php\n * <?php $this->beginBlock('username') ?>\n * Umm... hello?\n * <?php $this->endBlock() ?>\n * ```\n *\n * Second parameter defines if block content should be outputted which is desired when rendering its content but isn't\n * desired when redefining it in subviews.\n *\n * @author Qiang Xue <qiang.xue@gmail.com>\n * @since 2.0\n *\/",12],["T_WHITESPACE","\n",38],["T_CLASS","class",39],["T_WHITESPACE"," ",39],["T_STRING","Block",39],["T_WHITESPACE"," ",39],["T_EXTENDS","extends",39],["T_WHITESPACE"," ",39],["T_STRING","Widget",39],["T_WHITESPACE","\n",39],"{",["T_WHITESPACE","\n    ",40],["T_DOC_COMMENT","\/**\n     * @var bool whether to render the block content in place. Defaults to false,\n     * meaning the captured block content will not be displayed.\n     *\/",41],["T_WHITESPACE","\n    ",44],["T_PUBLIC","public",45],["T_WHITESPACE"," ",45],["T_VARIABLE","$renderInPlace",45],["T_WHITESPACE"," ",45],"=",["T_WHITESPACE"," ",45],["T_STRING","false",45],";",["T_WHITESPACE","\n\n\n    ",45],["T_DOC_COMMENT","\/**\n     * Starts recording a block.\n     *\/",48],["T_WHITESPACE","\n    ",50],["T_PUBLIC","public",51],["T_WHITESPACE"," ",51],["T_FUNCTION","function",51],["T_WHITESPACE"," ",51],["T_STRING","init",51],"(",")",["T_WHITESPACE","\n    ",51],"{",["T_WHITESPACE","\n        ",52],["T_STRING","ob_start",53],"(",")",";",["T_WHITESPACE","\n        ",53],["T_STRING","ob_implicit_flush",54],"(",["T_STRING","false",54],")",";",["T_WHITESPACE","\n    ",54],"}",["T_WHITESPACE","\n\n    ",55],["T_DOC_COMMENT","\/**\n     * Ends recording a block.\n     * This method stops output buffering and saves the rendering result as a named block in the view.\n     *\/",57],["T_WHITESPACE","\n    ",60],["T_PUBLIC","public",61],["T_WHITESPACE"," ",61],["T_FUNCTION","function",61],["T_WHITESPACE"," ",61],["T_STRING","run",61],"(",")",["T_WHITESPACE","\n    ",61],"{",["T_WHITESPACE","\n        ",62],["T_VARIABLE","$block",63],["T_WHITESPACE"," ",63],"=",["T_WHITESPACE"," ",63],["T_STRING","ob_get_clean",63],"(",")",";",["T_WHITESPACE","\n        ",63],["T_IF","if",64],["T_WHITESPACE"," ",64],"(",["T_VARIABLE","$this",64],["T_OBJECT_OPERATOR","->",64],["T_STRING","renderInPlace",64],")",["T_WHITESPACE"," ",64],"{",["T_WHITESPACE","\n            ",64],["T_ECHO","echo",65],["T_WHITESPACE"," ",65],["T_VARIABLE","$block",65],";",["T_WHITESPACE","\n        ",65],"}",["T_WHITESPACE","\n        ",66],["T_VARIABLE","$this",67],["T_OBJECT_OPERATOR","->",67],["T_STRING","view",67],["T_OBJECT_OPERATOR","->",67],["T_STRING","blocks",67],"[",["T_VARIABLE","$this",67],["T_OBJECT_OPERATOR","->",67],["T_STRING","getId",67],"(",")","]",["T_WHITESPACE"," ",67],"=",["T_WHITESPACE"," ",67],["T_VARIABLE","$block",67],";",["T_WHITESPACE","\n    ",67],"}",["T_WHITESPACE","\n",68],"}",["T_WHITESPACE","\n",69]]