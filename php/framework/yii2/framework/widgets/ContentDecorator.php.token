[["T_OPEN_TAG","<?php\n",1],["T_DOC_COMMENT","\/**\n * @link http:\/\/www.yiiframework.com\/\n * @copyright Copyright (c) 2008 Yii Software LLC\n * @license http:\/\/www.yiiframework.com\/license\/\n *\/",2],["T_WHITESPACE","\n\n",6],["T_NAMESPACE","namespace",8],["T_WHITESPACE"," ",8],["T_STRING","yii",8],["T_NS_SEPARATOR","\\",8],["T_STRING","widgets",8],";",["T_WHITESPACE","\n\n",8],["T_USE","use",10],["T_WHITESPACE"," ",10],["T_STRING","yii",10],["T_NS_SEPARATOR","\\",10],["T_STRING","base",10],["T_NS_SEPARATOR","\\",10],["T_STRING","InvalidConfigException",10],";",["T_WHITESPACE","\n",10],["T_USE","use",11],["T_WHITESPACE"," ",11],["T_STRING","yii",11],["T_NS_SEPARATOR","\\",11],["T_STRING","base",11],["T_NS_SEPARATOR","\\",11],["T_STRING","Widget",11],";",["T_WHITESPACE","\n\n",11],["T_DOC_COMMENT","\/**\n * ContentDecorator records all output between [[begin()]] and [[end()]] calls, passes it to the given view file\n * as `$content` and then echoes rendering result.\n *\n * ```php\n * <?php ContentDecorator::begin([\n *     'viewFile' => '@app\/views\/layouts\/base.php',\n *     'params' => [],\n *     'view' => $this,\n * ]) ?>\n *\n * some content here\n *\n * <?php ContentDecorator::end() ?>\n * ```\n *\n * There are [[\\yii\\base\\View::beginContent()]] and [[\\yii\\base\\View::endContent()]] wrapper methods in the\n * [[\\yii\\base\\View]] component to make syntax more friendly. In the view these could be used as follows:\n *\n * ```php\n * <?php $this->beginContent('@app\/views\/layouts\/base.php') ?>\n *\n * some content here\n *\n * <?php $this->endContent() ?>\n * ```\n *\n * @author Qiang Xue <qiang.xue@gmail.com>\n * @since 2.0\n *\/",13],["T_WHITESPACE","\n",42],["T_CLASS","class",43],["T_WHITESPACE"," ",43],["T_STRING","ContentDecorator",43],["T_WHITESPACE"," ",43],["T_EXTENDS","extends",43],["T_WHITESPACE"," ",43],["T_STRING","Widget",43],["T_WHITESPACE","\n",43],"{",["T_WHITESPACE","\n    ",44],["T_DOC_COMMENT","\/**\n     * @var string the view file that will be used to decorate the content enclosed by this widget.\n     * This can be specified as either the view file path or path alias.\n     *\/",45],["T_WHITESPACE","\n    ",48],["T_PUBLIC","public",49],["T_WHITESPACE"," ",49],["T_VARIABLE","$viewFile",49],";",["T_WHITESPACE","\n    ",49],["T_DOC_COMMENT","\/**\n     * @var array the parameters (name => value) to be extracted and made available in the decorative view.\n     *\/",50],["T_WHITESPACE","\n    ",52],["T_PUBLIC","public",53],["T_WHITESPACE"," ",53],["T_VARIABLE","$params",53],["T_WHITESPACE"," ",53],"=",["T_WHITESPACE"," ",53],"[","]",";",["T_WHITESPACE","\n\n\n    ",53],["T_DOC_COMMENT","\/**\n     * Starts recording a clip.\n     *\/",56],["T_WHITESPACE","\n    ",58],["T_PUBLIC","public",59],["T_WHITESPACE"," ",59],["T_FUNCTION","function",59],["T_WHITESPACE"," ",59],["T_STRING","init",59],"(",")",["T_WHITESPACE","\n    ",59],"{",["T_WHITESPACE","\n        ",60],["T_IF","if",61],["T_WHITESPACE"," ",61],"(",["T_VARIABLE","$this",61],["T_OBJECT_OPERATOR","->",61],["T_STRING","viewFile",61],["T_WHITESPACE"," ",61],["T_IS_IDENTICAL","===",61],["T_WHITESPACE"," ",61],["T_STRING","null",61],")",["T_WHITESPACE"," ",61],"{",["T_WHITESPACE","\n            ",61],["T_THROW","throw",62],["T_WHITESPACE"," ",62],["T_NEW","new",62],["T_WHITESPACE"," ",62],["T_STRING","InvalidConfigException",62],"(",["T_CONSTANT_ENCAPSED_STRING","'ContentDecorator::viewFile must be set.'",62],")",";",["T_WHITESPACE","\n        ",62],"}",["T_WHITESPACE","\n        ",63],["T_STRING","ob_start",64],"(",")",";",["T_WHITESPACE","\n        ",64],["T_STRING","ob_implicit_flush",65],"(",["T_STRING","false",65],")",";",["T_WHITESPACE","\n    ",65],"}",["T_WHITESPACE","\n\n    ",66],["T_DOC_COMMENT","\/**\n     * Ends recording a clip.\n     * This method stops output buffering and saves the rendering result as a named clip in the controller.\n     *\/",68],["T_WHITESPACE","\n    ",71],["T_PUBLIC","public",72],["T_WHITESPACE"," ",72],["T_FUNCTION","function",72],["T_WHITESPACE"," ",72],["T_STRING","run",72],"(",")",["T_WHITESPACE","\n    ",72],"{",["T_WHITESPACE","\n        ",73],["T_VARIABLE","$params",74],["T_WHITESPACE"," ",74],"=",["T_WHITESPACE"," ",74],["T_VARIABLE","$this",74],["T_OBJECT_OPERATOR","->",74],["T_STRING","params",74],";",["T_WHITESPACE","\n        ",74],["T_VARIABLE","$params",75],"[",["T_CONSTANT_ENCAPSED_STRING","'content'",75],"]",["T_WHITESPACE"," ",75],"=",["T_WHITESPACE"," ",75],["T_STRING","ob_get_clean",75],"(",")",";",["T_WHITESPACE","\n        ",75],["T_COMMENT","\/\/ render under the existing context\n",76],["T_WHITESPACE","        ",77],["T_ECHO","echo",77],["T_WHITESPACE"," ",77],["T_VARIABLE","$this",77],["T_OBJECT_OPERATOR","->",77],["T_STRING","view",77],["T_OBJECT_OPERATOR","->",77],["T_STRING","renderFile",77],"(",["T_VARIABLE","$this",77],["T_OBJECT_OPERATOR","->",77],["T_STRING","viewFile",77],",",["T_WHITESPACE"," ",77],["T_VARIABLE","$params",77],")",";",["T_WHITESPACE","\n    ",77],"}",["T_WHITESPACE","\n",78],"}",["T_WHITESPACE","\n",79]]