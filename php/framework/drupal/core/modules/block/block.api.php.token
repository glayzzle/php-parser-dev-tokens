[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_DOC_COMMENT","\/**\n * @file\n * Hooks provided by the Block module.\n *\/",3],["T_WHITESPACE","\n\n",6],["T_USE","use",8],["T_WHITESPACE"," ",8],["T_STRING","Drupal",8],["T_NS_SEPARATOR","\\",8],["T_STRING","Core",8],["T_NS_SEPARATOR","\\",8],["T_STRING","Access",8],["T_NS_SEPARATOR","\\",8],["T_STRING","AccessResult",8],";",["T_WHITESPACE","\n\n",8],["T_DOC_COMMENT","\/**\n * @defgroup block_api Block API\n * @{\n * Information about the classes and interfaces that make up the Block API.\n *\n * Blocks are a combination of a configuration entity and a plugin. The\n * configuration entity stores placement information (theme, region, weight) and\n * any other configuration that is specific to the block. The block plugin does\n * the work of rendering the block's content for display.\n *\n * To define a block in a module you need to:\n * - Define a Block plugin by creating a new class that implements the\n *   \\Drupal\\Core\\Block\\BlockPluginInterface, in namespace Plugin\\Block under your\n *   module namespace. For more information about creating plugins, see the\n *   @link plugin_api Plugin API topic. @endlink\n * - Usually you will want to extend the \\Drupal\\Core\\Block\\BlockBase class, which\n *   provides a common configuration form and utility methods for getting and\n *   setting configuration in the block configuration entity.\n * - Block plugins use the annotations defined by\n *   \\Drupal\\Core\\Block\\Annotation\\Block. See the\n *   @link annotation Annotations topic @endlink for more information about\n *   annotations.\n *\n * The Block API also makes use of Condition plugins, for conditional block\n * placement. Condition plugins have interface\n * \\Drupal\\Core\\Condition\\ConditionInterface, base class\n * \\Drupal\\Core\\Condition\\ConditionPluginBase, and go in plugin namespace\n * Plugin\\Condition. Again, see the Plugin API and Annotations topics for\n * details of how to create a plugin class and annotate it.\n *\n * There are also several block-related hooks, which allow you to affect\n * the content and access permissions for blocks:\n * - hook_block_view_alter()\n * - hook_block_view_BASE_BLOCK_ID_alter()\n * - hook_block_access()\n *\n * Further information and examples:\n * - \\Drupal\\system\\Plugin\\Block\\SystemPoweredByBlock provides a simple example\n *   of defining a block.\n * - \\Drupal\\user\\Plugin\\Condition\\UserRole is a straightforward example of a\n *   block placement condition plugin.\n * - \\Drupal\\book\\Plugin\\Block\\BookNavigationBlock is an example of a block with\n *   a custom configuration form.\n * - For a more in-depth discussion of the Block API, see\n *   https:\/\/www.drupal.org\/developing\/api\/8\/block_api.\n * - The Examples for Developers project also provides a Block example in\n *   https:\/\/www.drupal.org\/project\/examples.\n * @}\n *\/",10],["T_WHITESPACE","\n\n",58],["T_DOC_COMMENT","\/**\n * @addtogroup hooks\n * @{\n *\/",60],["T_WHITESPACE","\n\n",63],["T_DOC_COMMENT","\/**\n * Alter the result of \\Drupal\\Core\\Block\\BlockBase::build().\n *\n * This hook is called after the content has been assembled in a structured\n * array and may be used for doing processing which requires that the complete\n * block content structure has been built.\n *\n * If the module wishes to act on the rendered HTML of the block rather than\n * the structured content array, it may use this hook to add a #post_render\n * callback. Alternatively, it could also implement hook_preprocess_HOOK() for\n * block.html.twig. See drupal_render() documentation or the\n * @link themeable Default theme implementations topic @endlink for details.\n *\n * In addition to hook_block_view_alter(), which is called for all blocks, there\n * is hook_block_view_BASE_BLOCK_ID_alter(), which can be used to target a\n * specific block or set of similar blocks.\n *\n * @param array &$build\n *   A renderable array of data, as returned from the build() implementation of\n *   the plugin that defined the block:\n *   - #title: The default localized title of the block.\n * @param \\Drupal\\Core\\Block\\BlockPluginInterface $block\n *   The block plugin instance.\n *\n * @see hook_block_view_BASE_BLOCK_ID_alter()\n * @see entity_crud\n *\n * @ingroup block_api\n *\/",65],["T_WHITESPACE","\n",93],["T_FUNCTION","function",94],["T_WHITESPACE"," ",94],["T_STRING","hook_block_view_alter",94],"(",["T_ARRAY","array",94],["T_WHITESPACE"," ",94],"&",["T_VARIABLE","$build",94],",",["T_WHITESPACE"," ",94],["T_NS_SEPARATOR","\\",94],["T_STRING","Drupal",94],["T_NS_SEPARATOR","\\",94],["T_STRING","Core",94],["T_NS_SEPARATOR","\\",94],["T_STRING","Block",94],["T_NS_SEPARATOR","\\",94],["T_STRING","BlockPluginInterface",94],["T_WHITESPACE"," ",94],["T_VARIABLE","$block",94],")",["T_WHITESPACE"," ",94],"{",["T_WHITESPACE","\n  ",94],["T_COMMENT","\/\/ Remove the contextual links on all blocks that provide them.\n",95],["T_WHITESPACE","  ",96],["T_IF","if",96],["T_WHITESPACE"," ",96],"(",["T_ISSET","isset",96],"(",["T_VARIABLE","$build",96],"[",["T_CONSTANT_ENCAPSED_STRING","'#contextual_links'",96],"]",")",")",["T_WHITESPACE"," ",96],"{",["T_WHITESPACE","\n    ",96],["T_UNSET","unset",97],"(",["T_VARIABLE","$build",97],"[",["T_CONSTANT_ENCAPSED_STRING","'#contextual_links'",97],"]",")",";",["T_WHITESPACE","\n  ",97],"}",["T_WHITESPACE","\n",98],"}",["T_WHITESPACE","\n\n",99],["T_DOC_COMMENT","\/**\n * Provide a block plugin specific block_view alteration.\n *\n * In this hook name, BASE_BLOCK_ID refers to the block implementation's plugin\n * id, regardless of whether the plugin supports derivatives. For example, for\n * the \\Drupal\\system\\Plugin\\Block\\SystemPoweredByBlock block, this would be\n * 'system_powered_by_block' as per that class's annotation. And for the\n * \\Drupal\\system\\Plugin\\Block\\SystemMenuBlock block, it would be\n * 'system_menu_block' as per that class's annotation, regardless of which menu\n * the derived block is for.\n *\n * @param array $build\n *   A renderable array of data, as returned from the build() implementation of\n *   the plugin that defined the block:\n *   - #title: The default localized title of the block.\n * @param \\Drupal\\Core\\Block\\BlockPluginInterface $block\n *   The block plugin instance.\n *\n * @see hook_block_view_alter()\n * @see entity_crud\n *\n * @ingroup block_api\n *\/",101],["T_WHITESPACE","\n",123],["T_FUNCTION","function",124],["T_WHITESPACE"," ",124],["T_STRING","hook_block_view_BASE_BLOCK_ID_alter",124],"(",["T_ARRAY","array",124],["T_WHITESPACE"," ",124],"&",["T_VARIABLE","$build",124],",",["T_WHITESPACE"," ",124],["T_NS_SEPARATOR","\\",124],["T_STRING","Drupal",124],["T_NS_SEPARATOR","\\",124],["T_STRING","Core",124],["T_NS_SEPARATOR","\\",124],["T_STRING","Block",124],["T_NS_SEPARATOR","\\",124],["T_STRING","BlockPluginInterface",124],["T_WHITESPACE"," ",124],["T_VARIABLE","$block",124],")",["T_WHITESPACE"," ",124],"{",["T_WHITESPACE","\n  ",124],["T_COMMENT","\/\/ Change the title of the specific block.\n",125],["T_WHITESPACE","  ",126],["T_VARIABLE","$build",126],"[",["T_CONSTANT_ENCAPSED_STRING","'#title'",126],"]",["T_WHITESPACE"," ",126],"=",["T_WHITESPACE"," ",126],["T_STRING","t",126],"(",["T_CONSTANT_ENCAPSED_STRING","'New title of the block'",126],")",";",["T_WHITESPACE","\n",126],"}",["T_WHITESPACE","\n\n",127],["T_DOC_COMMENT","\/**\n * Alter the result of \\Drupal\\Core\\Block\\BlockBase::build().\n *\n * Unlike hook_block_view_alter(), this hook is called very early, before the\n * block is being assembled. Therefore, it is early enough to alter the\n * cacheability metadata (change #cache), or to explicitly placeholder the block\n * (set #create_placeholder).\n *\n * In addition to hook_block_build_alter(), which is called for all blocks,\n * there is hook_block_build_BASE_BLOCK_ID_alter(), which can be used to target\n * a specific block or set of similar blocks.\n *\n * @param array &$build\n *   A renderable array of data, only containing #cache.\n * @param \\Drupal\\Core\\Block\\BlockPluginInterface $block\n *   The block plugin instance.\n *\n * @see hook_block_build_BASE_BLOCK_ID_alter()\n * @see entity_crud\n *\n * @ingroup block_api\n *\/",129],["T_WHITESPACE","\n",150],["T_FUNCTION","function",151],["T_WHITESPACE"," ",151],["T_STRING","hook_block_build_alter",151],"(",["T_ARRAY","array",151],["T_WHITESPACE"," ",151],"&",["T_VARIABLE","$build",151],",",["T_WHITESPACE"," ",151],["T_NS_SEPARATOR","\\",151],["T_STRING","Drupal",151],["T_NS_SEPARATOR","\\",151],["T_STRING","Core",151],["T_NS_SEPARATOR","\\",151],["T_STRING","Block",151],["T_NS_SEPARATOR","\\",151],["T_STRING","BlockPluginInterface",151],["T_WHITESPACE"," ",151],["T_VARIABLE","$block",151],")",["T_WHITESPACE"," ",151],"{",["T_WHITESPACE","\n  ",151],["T_COMMENT","\/\/ Add the 'user' cache context to some blocks.\n",152],["T_WHITESPACE","  ",153],["T_IF","if",153],["T_WHITESPACE"," ",153],"(",["T_VARIABLE","$some_condition",153],")",["T_WHITESPACE"," ",153],"{",["T_WHITESPACE","\n    ",153],["T_VARIABLE","$build",154],"[",["T_CONSTANT_ENCAPSED_STRING","'#cache'",154],"]","[",["T_CONSTANT_ENCAPSED_STRING","'contexts'",154],"]","[","]",["T_WHITESPACE"," ",154],"=",["T_WHITESPACE"," ",154],["T_CONSTANT_ENCAPSED_STRING","'user'",154],";",["T_WHITESPACE","\n  ",154],"}",["T_WHITESPACE","\n",155],"}",["T_WHITESPACE","\n\n",156],["T_DOC_COMMENT","\/**\n * Provide a block plugin specific block_build alteration.\n *\n * In this hook name, BASE_BLOCK_ID refers to the block implementation's plugin\n * id, regardless of whether the plugin supports derivatives. For example, for\n * the \\Drupal\\system\\Plugin\\Block\\SystemPoweredByBlock block, this would be\n * 'system_powered_by_block' as per that class's annotation. And for the\n * \\Drupal\\system\\Plugin\\Block\\SystemMenuBlock block, it would be\n * 'system_menu_block' as per that class's annotation, regardless of which menu\n * the derived block is for.\n *\n * @param array $build\n *   A renderable array of data, only containing #cache.\n * @param \\Drupal\\Core\\Block\\BlockPluginInterface $block\n *   The block plugin instance.\n *\n * @see hook_block_build_alter()\n * @see entity_crud\n *\n * @ingroup block_api\n *\/",158],["T_WHITESPACE","\n",178],["T_FUNCTION","function",179],["T_WHITESPACE"," ",179],["T_STRING","hook_block_build_BASE_BLOCK_ID_alter",179],"(",["T_ARRAY","array",179],["T_WHITESPACE"," ",179],"&",["T_VARIABLE","$build",179],",",["T_WHITESPACE"," ",179],["T_NS_SEPARATOR","\\",179],["T_STRING","Drupal",179],["T_NS_SEPARATOR","\\",179],["T_STRING","Core",179],["T_NS_SEPARATOR","\\",179],["T_STRING","Block",179],["T_NS_SEPARATOR","\\",179],["T_STRING","BlockPluginInterface",179],["T_WHITESPACE"," ",179],["T_VARIABLE","$block",179],")",["T_WHITESPACE"," ",179],"{",["T_WHITESPACE","\n  ",179],["T_COMMENT","\/\/ Explicitly enable placeholdering of the specific block.\n",180],["T_WHITESPACE","  ",181],["T_VARIABLE","$build",181],"[",["T_CONSTANT_ENCAPSED_STRING","'#create_placeholder'",181],"]",["T_WHITESPACE"," ",181],"=",["T_WHITESPACE"," ",181],["T_STRING","TRUE",181],";",["T_WHITESPACE","\n",181],"}",["T_WHITESPACE","\n\n",182],["T_DOC_COMMENT","\/**\n * Control access to a block instance.\n *\n * Modules may implement this hook if they want to have a say in whether or not\n * a given user has access to perform a given operation on a block instance.\n *\n * @param \\Drupal\\block\\Entity\\Block $block\n *   The block instance.\n * @param string $operation\n *   The operation to be performed; for instance, 'view', 'create', 'delete', or\n *   'update'.\n * @param \\Drupal\\Core\\Session\\AccountInterface $account\n *   The user object to perform the access check operation on.\n *\n * @return \\Drupal\\Core\\Access\\AccessResultInterface\n *   The access result. If all implementations of this hook return\n *   AccessResultInterface objects whose value is !isAllowed() and\n *   !isForbidden(), then default access rules from\n *   \\Drupal\\block\\BlockAccessControlHandler::checkAccess() are used.\n *\n * @see \\Drupal\\Core\\Entity\\EntityAccessControlHandler::access()\n * @see \\Drupal\\block\\BlockAccessControlHandler::checkAccess()\n * @ingroup block_api\n *\/",184],["T_WHITESPACE","\n",207],["T_FUNCTION","function",208],["T_WHITESPACE"," ",208],["T_STRING","hook_block_access",208],"(",["T_NS_SEPARATOR","\\",208],["T_STRING","Drupal",208],["T_NS_SEPARATOR","\\",208],["T_STRING","block",208],["T_NS_SEPARATOR","\\",208],["T_STRING","Entity",208],["T_NS_SEPARATOR","\\",208],["T_STRING","Block",208],["T_WHITESPACE"," ",208],["T_VARIABLE","$block",208],",",["T_WHITESPACE"," ",208],["T_VARIABLE","$operation",208],",",["T_WHITESPACE"," ",208],["T_NS_SEPARATOR","\\",208],["T_STRING","Drupal",208],["T_NS_SEPARATOR","\\",208],["T_STRING","Core",208],["T_NS_SEPARATOR","\\",208],["T_STRING","Session",208],["T_NS_SEPARATOR","\\",208],["T_STRING","AccountInterface",208],["T_WHITESPACE"," ",208],["T_VARIABLE","$account",208],")",["T_WHITESPACE"," ",208],"{",["T_WHITESPACE","\n  ",208],["T_COMMENT","\/\/ Example code that would prevent displaying the 'Powered by Drupal' block in\n",209],["T_WHITESPACE","  ",210],["T_COMMENT","\/\/ a region different than the footer.\n",210],["T_WHITESPACE","  ",211],["T_IF","if",211],["T_WHITESPACE"," ",211],"(",["T_VARIABLE","$operation",211],["T_WHITESPACE"," ",211],["T_IS_EQUAL","==",211],["T_WHITESPACE"," ",211],["T_CONSTANT_ENCAPSED_STRING","'view'",211],["T_WHITESPACE"," ",211],["T_BOOLEAN_AND","&&",211],["T_WHITESPACE"," ",211],["T_VARIABLE","$block",211],["T_OBJECT_OPERATOR","->",211],["T_STRING","getPluginId",211],"(",")",["T_WHITESPACE"," ",211],["T_IS_EQUAL","==",211],["T_WHITESPACE"," ",211],["T_CONSTANT_ENCAPSED_STRING","'system_powered_by_block'",211],")",["T_WHITESPACE"," ",211],"{",["T_WHITESPACE","\n    ",211],["T_RETURN","return",212],["T_WHITESPACE"," ",212],["T_STRING","AccessResult",212],["T_DOUBLE_COLON","::",212],["T_STRING","forbiddenIf",212],"(",["T_VARIABLE","$block",212],["T_OBJECT_OPERATOR","->",212],["T_STRING","getRegion",212],"(",")",["T_WHITESPACE"," ",212],["T_IS_NOT_EQUAL","!=",212],["T_WHITESPACE"," ",212],["T_CONSTANT_ENCAPSED_STRING","'footer'",212],")",["T_OBJECT_OPERATOR","->",212],["T_STRING","addCacheableDependency",212],"(",["T_VARIABLE","$block",212],")",";",["T_WHITESPACE","\n  ",212],"}",["T_WHITESPACE","\n\n  ",213],["T_COMMENT","\/\/ No opinion.\n",215],["T_WHITESPACE","  ",216],["T_RETURN","return",216],["T_WHITESPACE"," ",216],["T_STRING","AccessResult",216],["T_DOUBLE_COLON","::",216],["T_STRING","neutral",216],"(",")",";",["T_WHITESPACE","\n",216],"}",["T_WHITESPACE","\n\n",217],["T_DOC_COMMENT","\/**\n * @} End of \"addtogroup hooks\".\n *\/",219],["T_WHITESPACE","\n",221]]