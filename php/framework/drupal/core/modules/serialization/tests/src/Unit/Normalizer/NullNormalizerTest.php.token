[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Tests",3],["T_NS_SEPARATOR","\\",3],["T_STRING","serialization",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Unit",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Normalizer",3],";",["T_WHITESPACE","\n\n",3],["T_USE","use",5],["T_WHITESPACE"," ",5],["T_STRING","Drupal",5],["T_NS_SEPARATOR","\\",5],["T_STRING","serialization",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Normalizer",5],["T_NS_SEPARATOR","\\",5],["T_STRING","NullNormalizer",5],";",["T_WHITESPACE","\n",5],["T_USE","use",6],["T_WHITESPACE"," ",6],["T_STRING","Drupal",6],["T_NS_SEPARATOR","\\",6],["T_STRING","Tests",6],["T_NS_SEPARATOR","\\",6],["T_STRING","UnitTestCase",6],";",["T_WHITESPACE","\n\n",6],["T_DOC_COMMENT","\/**\n * @coversDefaultClass \\Drupal\\serialization\\Normalizer\\NullNormalizer\n * @group serialization\n *\/",8],["T_WHITESPACE","\n",11],["T_CLASS","class",12],["T_WHITESPACE"," ",12],["T_STRING","NullNormalizerTest",12],["T_WHITESPACE"," ",12],["T_EXTENDS","extends",12],["T_WHITESPACE"," ",12],["T_STRING","UnitTestCase",12],["T_WHITESPACE"," ",12],"{",["T_WHITESPACE","\n\n  ",12],["T_DOC_COMMENT","\/**\n   * The NullNormalizer instance.\n   *\n   * @var \\Drupal\\serialization\\Normalizer\\NullNormalizer\n   *\/",14],["T_WHITESPACE","\n  ",18],["T_PROTECTED","protected",19],["T_WHITESPACE"," ",19],["T_VARIABLE","$normalizer",19],";",["T_WHITESPACE","\n\n  ",19],["T_DOC_COMMENT","\/**\n   * The interface to use in testing.\n   *\n   * @var string\n   *\/",21],["T_WHITESPACE","\n  ",25],["T_PROTECTED","protected",26],["T_WHITESPACE"," ",26],["T_VARIABLE","$interface",26],["T_WHITESPACE"," ",26],"=",["T_WHITESPACE"," ",26],["T_CONSTANT_ENCAPSED_STRING","'Drupal\\Core\\TypedData\\TypedDataInterface'",26],";",["T_WHITESPACE","\n\n  ",26],["T_DOC_COMMENT","\/**\n   * {@inheritdoc}\n   *\/",28],["T_WHITESPACE","\n  ",30],["T_PROTECTED","protected",31],["T_WHITESPACE"," ",31],["T_FUNCTION","function",31],["T_WHITESPACE"," ",31],["T_STRING","setUp",31],"(",")",["T_WHITESPACE"," ",31],"{",["T_WHITESPACE","\n    ",31],["T_VARIABLE","$this",32],["T_OBJECT_OPERATOR","->",32],["T_STRING","normalizer",32],["T_WHITESPACE"," ",32],"=",["T_WHITESPACE"," ",32],["T_NEW","new",32],["T_WHITESPACE"," ",32],["T_STRING","NullNormalizer",32],"(",["T_VARIABLE","$this",32],["T_OBJECT_OPERATOR","->",32],["T_STRING","interface",32],")",";",["T_WHITESPACE","\n  ",32],"}",["T_WHITESPACE","\n\n  ",33],["T_DOC_COMMENT","\/**\n   * @covers ::__construct\n   * @covers ::supportsNormalization\n   *\/",35],["T_WHITESPACE","\n  ",38],["T_PUBLIC","public",39],["T_WHITESPACE"," ",39],["T_FUNCTION","function",39],["T_WHITESPACE"," ",39],["T_STRING","testSupportsNormalization",39],"(",")",["T_WHITESPACE"," ",39],"{",["T_WHITESPACE","\n    ",39],["T_VARIABLE","$mock",40],["T_WHITESPACE"," ",40],"=",["T_WHITESPACE"," ",40],["T_VARIABLE","$this",40],["T_OBJECT_OPERATOR","->",40],["T_STRING","getMock",40],"(",["T_CONSTANT_ENCAPSED_STRING","'Drupal\\Core\\TypedData\\TypedDataInterface'",40],")",";",["T_WHITESPACE","\n    ",40],["T_VARIABLE","$this",41],["T_OBJECT_OPERATOR","->",41],["T_STRING","assertTrue",41],"(",["T_VARIABLE","$this",41],["T_OBJECT_OPERATOR","->",41],["T_STRING","normalizer",41],["T_OBJECT_OPERATOR","->",41],["T_STRING","supportsNormalization",41],"(",["T_VARIABLE","$mock",41],")",")",";",["T_WHITESPACE","\n    ",41],["T_COMMENT","\/\/ Also test that an object not implementing TypedDataInterface fails.\n",42],["T_WHITESPACE","    ",43],["T_VARIABLE","$this",43],["T_OBJECT_OPERATOR","->",43],["T_STRING","assertFalse",43],"(",["T_VARIABLE","$this",43],["T_OBJECT_OPERATOR","->",43],["T_STRING","normalizer",43],["T_OBJECT_OPERATOR","->",43],["T_STRING","supportsNormalization",43],"(",["T_NEW","new",43],["T_WHITESPACE"," ",43],["T_NS_SEPARATOR","\\",43],["T_STRING","stdClass",43],"(",")",")",")",";",["T_WHITESPACE","\n  ",43],"}",["T_WHITESPACE","\n\n  ",44],["T_DOC_COMMENT","\/**\n   * @covers ::normalize\n   *\/",46],["T_WHITESPACE","\n  ",48],["T_PUBLIC","public",49],["T_WHITESPACE"," ",49],["T_FUNCTION","function",49],["T_WHITESPACE"," ",49],["T_STRING","testNormalize",49],"(",")",["T_WHITESPACE"," ",49],"{",["T_WHITESPACE","\n    ",49],["T_VARIABLE","$mock",50],["T_WHITESPACE"," ",50],"=",["T_WHITESPACE"," ",50],["T_VARIABLE","$this",50],["T_OBJECT_OPERATOR","->",50],["T_STRING","getMock",50],"(",["T_CONSTANT_ENCAPSED_STRING","'Drupal\\Core\\TypedData\\TypedDataInterface'",50],")",";",["T_WHITESPACE","\n    ",50],["T_VARIABLE","$this",51],["T_OBJECT_OPERATOR","->",51],["T_STRING","assertNull",51],"(",["T_VARIABLE","$this",51],["T_OBJECT_OPERATOR","->",51],["T_STRING","normalizer",51],["T_OBJECT_OPERATOR","->",51],["T_STRING","normalize",51],"(",["T_VARIABLE","$mock",51],")",")",";",["T_WHITESPACE","\n  ",51],"}",["T_WHITESPACE","\n\n",52],"}",["T_WHITESPACE","\n",54]]