[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","serialization_test",3],";",["T_WHITESPACE","\n\n",3],["T_USE","use",5],["T_WHITESPACE"," ",5],["T_STRING","Symfony",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Component",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Serializer",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Normalizer",5],["T_NS_SEPARATOR","\\",5],["T_STRING","NormalizerInterface",5],";",["T_WHITESPACE","\n\n",5],["T_CLASS","class",7],["T_WHITESPACE"," ",7],["T_STRING","SerializationTestNormalizer",7],["T_WHITESPACE"," ",7],["T_IMPLEMENTS","implements",7],["T_WHITESPACE"," ",7],["T_STRING","NormalizerInterface",7],["T_WHITESPACE"," ",7],"{",["T_WHITESPACE","\n\n  ",7],["T_DOC_COMMENT","\/**\n   * The format that this Normalizer supports.\n   *\n   * @var string\n   *\/",9],["T_WHITESPACE","\n  ",13],["T_STATIC","static",14],["T_WHITESPACE"," ",14],["T_PROTECTED","protected",14],["T_WHITESPACE"," ",14],["T_VARIABLE","$format",14],["T_WHITESPACE"," ",14],"=",["T_WHITESPACE"," ",14],["T_CONSTANT_ENCAPSED_STRING","'serialization_test'",14],";",["T_WHITESPACE","\n\n  ",14],["T_DOC_COMMENT","\/**\n   * Normalizes an object into a set of arrays\/scalars.\n   *\n   * @param object $object\n   *   Object to normalize.\n   * @param string $format\n   *   Format the normalization result will be encoded as.\n   *\n   * @return array\n   *   An array containing a normalized representation of $object, appropriate\n   *   for encoding to the requested format.\n   *\/",16],["T_WHITESPACE","\n  ",27],["T_PUBLIC","public",28],["T_WHITESPACE"," ",28],["T_FUNCTION","function",28],["T_WHITESPACE"," ",28],["T_STRING","normalize",28],"(",["T_VARIABLE","$object",28],",",["T_WHITESPACE"," ",28],["T_VARIABLE","$format",28],["T_WHITESPACE"," ",28],"=",["T_WHITESPACE"," ",28],["T_STRING","NULL",28],",",["T_WHITESPACE"," ",28],["T_ARRAY","array",28],["T_WHITESPACE"," ",28],["T_VARIABLE","$context",28],["T_WHITESPACE"," ",28],"=",["T_WHITESPACE"," ",28],["T_ARRAY","array",28],"(",")",")",["T_WHITESPACE"," ",28],"{",["T_WHITESPACE","\n    ",28],["T_VARIABLE","$normalized",29],["T_WHITESPACE"," ",29],"=",["T_WHITESPACE"," ",29],["T_ARRAY_CAST","(array)",29],["T_WHITESPACE"," ",29],["T_VARIABLE","$object",29],";",["T_WHITESPACE","\n    ",29],["T_COMMENT","\/\/ Add identifying value that can be used to verify that the expected\n",30],["T_WHITESPACE","    ",31],["T_COMMENT","\/\/ normalizer was invoked.\n",31],["T_WHITESPACE","    ",32],["T_VARIABLE","$normalized",32],"[",["T_CONSTANT_ENCAPSED_STRING","'normalized_by'",32],"]",["T_WHITESPACE"," ",32],"=",["T_WHITESPACE"," ",32],["T_CONSTANT_ENCAPSED_STRING","'SerializationTestNormalizer'",32],";",["T_WHITESPACE","\n    ",32],["T_RETURN","return",33],["T_WHITESPACE"," ",33],["T_VARIABLE","$normalized",33],";",["T_WHITESPACE","\n  ",33],"}",["T_WHITESPACE","\n\n  ",34],["T_DOC_COMMENT","\/**\n   * Checks whether format is supported by this normalizer.\n   *\n   * @param mixed $data\n   *   Data to normalize.\n   * @param string $format\n   *   Format the normalization result will be encoded as.\n   *\n   * @return bool\n   *   Returns TRUE if the normalizer can handle the request.\n   *\/",36],["T_WHITESPACE","\n  ",46],["T_PUBLIC","public",47],["T_WHITESPACE"," ",47],["T_FUNCTION","function",47],["T_WHITESPACE"," ",47],["T_STRING","supportsNormalization",47],"(",["T_VARIABLE","$data",47],",",["T_WHITESPACE"," ",47],["T_VARIABLE","$format",47],["T_WHITESPACE"," ",47],"=",["T_WHITESPACE"," ",47],["T_STRING","NULL",47],")",["T_WHITESPACE"," ",47],"{",["T_WHITESPACE","\n    ",47],["T_RETURN","return",48],["T_WHITESPACE"," ",48],["T_STATIC","static",48],["T_DOUBLE_COLON","::",48],["T_VARIABLE","$format",48],["T_WHITESPACE"," ",48],["T_IS_IDENTICAL","===",48],["T_WHITESPACE"," ",48],["T_VARIABLE","$format",48],";",["T_WHITESPACE","\n  ",48],"}",["T_WHITESPACE","\n\n",49],"}",["T_WHITESPACE","\n",51]]