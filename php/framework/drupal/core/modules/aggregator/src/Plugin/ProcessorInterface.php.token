[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","aggregator",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Plugin",3],";",["T_WHITESPACE","\n\n",3],["T_USE","use",5],["T_WHITESPACE"," ",5],["T_STRING","Drupal",5],["T_NS_SEPARATOR","\\",5],["T_STRING","aggregator",5],["T_NS_SEPARATOR","\\",5],["T_STRING","FeedInterface",5],";",["T_WHITESPACE","\n\n",5],["T_DOC_COMMENT","\/**\n * Defines an interface for aggregator processor implementations.\n *\n * A processor acts on parsed feed data. Active processors are called at the\n * third and last of the aggregation stages: first, data is downloaded by the\n * active fetcher; second, it is converted to a common format by the active\n * parser; and finally, it is passed to all active processors that manipulate or\n * store the data.\n *\n * @see \\Drupal\\aggregator\\Annotation\\AggregatorProcessor\n * @see \\Drupal\\aggregator\\Plugin\\AggregatorPluginSettingsBase\n * @see \\Drupal\\aggregator\\Plugin\\AggregatorPluginManager\n * @see plugin_api\n *\/",7],["T_WHITESPACE","\n",20],["T_INTERFACE","interface",21],["T_WHITESPACE"," ",21],["T_STRING","ProcessorInterface",21],["T_WHITESPACE"," ",21],"{",["T_WHITESPACE","\n\n  ",21],["T_DOC_COMMENT","\/**\n   * Processes feed data.\n   *\n   * @param \\Drupal\\aggregator\\FeedInterface $feed\n   *   A feed object representing the resource to be processed.\n   *   $feed->items contains an array of feed items downloaded and parsed at the\n   *   parsing stage. See \\Drupal\\aggregator\\Plugin\\FetcherInterface::parse()\n   *   for the basic format of a single item in the $feed->items array.\n   *   For the exact format refer to the particular parser in use.\n   *\/",23],["T_WHITESPACE","\n  ",32],["T_PUBLIC","public",33],["T_WHITESPACE"," ",33],["T_FUNCTION","function",33],["T_WHITESPACE"," ",33],["T_STRING","process",33],"(",["T_STRING","FeedInterface",33],["T_WHITESPACE"," ",33],["T_VARIABLE","$feed",33],")",";",["T_WHITESPACE","\n\n  ",33],["T_DOC_COMMENT","\/**\n   * Refreshes feed information.\n   *\n   * Called after the processing of the feed is completed by all selected\n   * processors.\n   *\n   * @param \\Drupal\\aggregator\\FeedInterface $feed\n   *   Object describing feed.\n   *\n   * @see aggregator_refresh()\n   *\/",35],["T_WHITESPACE","\n  ",45],["T_PUBLIC","public",46],["T_WHITESPACE"," ",46],["T_FUNCTION","function",46],["T_WHITESPACE"," ",46],["T_STRING","postProcess",46],"(",["T_STRING","FeedInterface",46],["T_WHITESPACE"," ",46],["T_VARIABLE","$feed",46],")",";",["T_WHITESPACE","\n\n  ",46],["T_DOC_COMMENT","\/**\n   * Deletes stored feed data.\n   *\n   * Called by aggregator if either a feed is deleted or a user clicks on\n   * \"delete items\".\n   *\n   * @param \\Drupal\\aggregator\\FeedInterface $feed\n   *   The $feed object whose items are being deleted.\n   *\/",48],["T_WHITESPACE","\n  ",56],["T_PUBLIC","public",57],["T_WHITESPACE"," ",57],["T_FUNCTION","function",57],["T_WHITESPACE"," ",57],["T_STRING","delete",57],"(",["T_STRING","FeedInterface",57],["T_WHITESPACE"," ",57],["T_VARIABLE","$feed",57],")",";",["T_WHITESPACE","\n\n",57],"}",["T_WHITESPACE","\n",59]]