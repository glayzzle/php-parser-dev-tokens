[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","aggregator",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Plugin",3],";",["T_WHITESPACE","\n\n",3],["T_USE","use",5],["T_WHITESPACE"," ",5],["T_STRING","Drupal",5],["T_NS_SEPARATOR","\\",5],["T_STRING","aggregator",5],["T_NS_SEPARATOR","\\",5],["T_STRING","FeedInterface",5],";",["T_WHITESPACE","\n\n",5],["T_DOC_COMMENT","\/**\n * Defines an interface for aggregator fetcher implementations.\n *\n * A fetcher downloads feed data to a Drupal site. The fetcher is called at the\n * first of the three aggregation stages: first, data is downloaded by the\n * active fetcher; second, it is converted to a common format by the active\n * parser; and finally, it is passed to all active processors, which manipulate\n * or store the data.\n *\n * @see \\Drupal\\aggregator\\Annotation\\AggregatorFetcher\n * @see \\Drupal\\aggregator\\Plugin\\AggregatorPluginSettingsBase\n * @see \\Drupal\\aggregator\\Plugin\\AggregatorPluginManager\n * @see plugin_api\n *\/",7],["T_WHITESPACE","\n",20],["T_INTERFACE","interface",21],["T_WHITESPACE"," ",21],["T_STRING","FetcherInterface",21],["T_WHITESPACE"," ",21],"{",["T_WHITESPACE","\n\n  ",21],["T_DOC_COMMENT","\/**\n   * Downloads feed data.\n   *\n   * @param \\Drupal\\aggregator\\FeedInterface $feed\n   *   A feed object representing the resource to be downloaded.\n   *   $feed->getUrl() contains the link to the feed.\n   *   Download the data at the URL and expose it\n   *   to other modules by attaching it to $feed->source_string.\n   *\n   * @return bool\n   *   TRUE if fetching was successful, FALSE otherwise.\n   *\/",23],["T_WHITESPACE","\n  ",34],["T_PUBLIC","public",35],["T_WHITESPACE"," ",35],["T_FUNCTION","function",35],["T_WHITESPACE"," ",35],["T_STRING","fetch",35],"(",["T_STRING","FeedInterface",35],["T_WHITESPACE"," ",35],["T_VARIABLE","$feed",35],")",";",["T_WHITESPACE","\n\n",35],"}",["T_WHITESPACE","\n",37]]