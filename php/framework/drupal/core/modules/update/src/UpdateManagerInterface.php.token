[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","update",3],";",["T_WHITESPACE","\n\n",3],["T_DOC_COMMENT","\/**\n * Manages project update information.\n *\/",5],["T_WHITESPACE","\n",7],["T_INTERFACE","interface",8],["T_WHITESPACE"," ",8],["T_STRING","UpdateManagerInterface",8],["T_WHITESPACE"," ",8],"{",["T_WHITESPACE","\n\n  ",8],["T_DOC_COMMENT","\/**\n   * Fetches an array of installed and enabled projects.\n   *\n   * This is only responsible for generating an array of projects (taking into\n   * account projects that include more than one module or theme). Other\n   * information like the specific version and install type (official release,\n   * dev snapshot, etc) is handled later in update_process_project_info() since\n   * that logic is only required when preparing the status report, not for\n   * fetching the available release data.\n   *\n   * This array is fairly expensive to construct, since it involves a lot of\n   * disk I\/O, so we store the results. However, since this is not the data\n   * about available updates fetched from the network, it is acceptable to\n   * invalidate it somewhat quickly. If we keep this data for very long, site\n   * administrators are more likely to see incorrect results if they upgrade to\n   * a newer version of a module or theme but do not visit certain pages that\n   * automatically clear this data.\n   *\n   * @return array\n   *   An associative array of currently enabled projects keyed by the\n   *   machine-readable project short name. Each project contains:\n   *   - name: The machine-readable project short name.\n   *   - info: An array with values from the main .info.yml file for this\n   *     project.\n   *     - name: The human-readable name of the project.\n   *     - package: The package that the project is grouped under.\n   *     - version: The version of the project.\n   *     - project: The Drupal.org project name.\n   *     - datestamp: The date stamp of the project's main .info.yml file.\n   *     - _info_file_ctime: The maximum file change time for all of the\n   *       .info.yml\n   *       files included in this project.\n   *   - datestamp: The date stamp when the project was released, if known.\n   *   - includes: An associative array containing all projects included with\n   *     this project, keyed by the machine-readable short name with the\n   *     human-readable name as value.\n   *   - project_type: The type of project. Allowed values are 'module' and\n   *     'theme'.\n   *   - project_status: This indicates if the project is enabled and will\n   *     always be TRUE, as the function only returns enabled projects.\n   *\n   * @see update_process_project_info()\n   * @see update_calculate_project_data()\n   * @see \\Drupal\\update\\UpdateManager::projectStorage()\n   *\/",10],["T_WHITESPACE","\n  ",54],["T_PUBLIC","public",55],["T_WHITESPACE"," ",55],["T_FUNCTION","function",55],["T_WHITESPACE"," ",55],["T_STRING","getProjects",55],"(",")",";",["T_WHITESPACE","\n\n  ",55],["T_DOC_COMMENT","\/**\n   * Processes a step in batch for fetching available update data.\n   *\n   * @param array $context\n   *   Reference to an array used for Batch API storage.\n   *\/",57],["T_WHITESPACE","\n  ",62],["T_PUBLIC","public",63],["T_WHITESPACE"," ",63],["T_FUNCTION","function",63],["T_WHITESPACE"," ",63],["T_STRING","fetchDataBatch",63],"(","&",["T_VARIABLE","$context",63],")",";",["T_WHITESPACE","\n\n  ",63],["T_DOC_COMMENT","\/**\n   * Clears out all the available update data and initiates re-fetching.\n   *\/",65],["T_WHITESPACE","\n  ",67],["T_PUBLIC","public",68],["T_WHITESPACE"," ",68],["T_FUNCTION","function",68],["T_WHITESPACE"," ",68],["T_STRING","refreshUpdateData",68],"(",")",";",["T_WHITESPACE","\n\n  ",68],["T_DOC_COMMENT","\/**\n   * Retrieves update storage data or empties it.\n   *\n   * Two very expensive arrays computed by this module are the list of all\n   * installed modules and themes (and .info.yml data, project associations,\n   * etc), and the current status of the site relative to the currently\n   * available releases. These two arrays are stored and used whenever possible.\n   * The data is cleared whenever the administrator visits the status report,\n   * available updates report, or the module or theme administration pages,\n   * since we should always recompute the most current values on any of those\n   * pages.\n   *\n   * Note: while both of these arrays are expensive to compute (in terms of disk\n   * I\/O and some fairly heavy CPU processing), neither of these is the actual\n   * data about available updates that we have to fetch over the network from\n   * updates.drupal.org. That information is stored in the\n   * 'update_available_releases' collection -- it needs to persist longer than 1\n   * hour and never get invalidated just by visiting a page on the site.\n   *\n   * @param string $key\n   *   The key of data to return. Valid options are 'update_project_data' and\n   *   'update_project_projects'.\n   *\n   * @return array\n   *   The stored value of the $projects array generated by\n   *   update_calculate_project_data() or\n   *   \\Drupal\\Update\\UpdateManager::getProjects(), or an empty array when the\n   *   storage is cleared.\n   *   array when the storage is cleared.\n   *\/",70],["T_WHITESPACE","\n  ",99],["T_PUBLIC","public",100],["T_WHITESPACE"," ",100],["T_FUNCTION","function",100],["T_WHITESPACE"," ",100],["T_STRING","projectStorage",100],"(",["T_VARIABLE","$key",100],")",";",["T_WHITESPACE","\n\n",100],"}",["T_WHITESPACE","\n",102]]