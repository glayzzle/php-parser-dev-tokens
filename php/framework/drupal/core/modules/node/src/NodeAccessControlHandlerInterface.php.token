[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","node",3],";",["T_WHITESPACE","\n\n",3],["T_USE","use",5],["T_WHITESPACE"," ",5],["T_STRING","Drupal",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Core",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Session",5],["T_NS_SEPARATOR","\\",5],["T_STRING","AccountInterface",5],";",["T_WHITESPACE","\n\n",5],["T_DOC_COMMENT","\/**\n * Node specific entity access control methods.\n *\n * @ingroup node_access\n *\/",7],["T_WHITESPACE","\n",11],["T_INTERFACE","interface",12],["T_WHITESPACE"," ",12],["T_STRING","NodeAccessControlHandlerInterface",12],["T_WHITESPACE"," ",12],"{",["T_WHITESPACE","\n\n  ",12],["T_DOC_COMMENT","\/**\n   * Gets the list of node access grants.\n   *\n   * This function is called to check the access grants for a node. It collects\n   * all node access grants for the node from hook_node_access_records()\n   * implementations, allows these grants to be altered via\n   * hook_node_access_records_alter() implementations, and returns the grants to\n   * the caller.\n   *\n   * @param \\Drupal\\node\\NodeInterface $node\n   *   The $node to acquire grants for.\n   *\n   * @return array $grants\n   *   The access rules for the node.\n   *\/",14],["T_WHITESPACE","\n  ",28],["T_PUBLIC","public",29],["T_WHITESPACE"," ",29],["T_FUNCTION","function",29],["T_WHITESPACE"," ",29],["T_STRING","acquireGrants",29],"(",["T_STRING","NodeInterface",29],["T_WHITESPACE"," ",29],["T_VARIABLE","$node",29],")",";",["T_WHITESPACE","\n\n  ",29],["T_DOC_COMMENT","\/**\n   * Writes a list of grants to the database, deleting any previously saved ones.\n   *\n   * Modules that use node access can use this function when doing mass updates\n   * due to widespread permission changes.\n   *\n   * Note: Don't call this function directly from a contributed module. Call\n   * \\Drupal\\node\\NodeAccessControlHandlerInterface::acquireGrants() instead.\n   *\n   * @param \\Drupal\\node\\NodeInterface $node\n   *   The node whose grants are being written.\n   * @param $delete\n   *   (optional) If false, does not delete records. This is only for optimization\n   *   purposes, and assumes the caller has already performed a mass delete of\n   *   some form. Defaults to TRUE.\n   *\n   * @deprecated in Drupal 8.x, will be removed before Drupal 9.0.\n   *   Use \\Drupal\\node\\NodeAccessControlHandlerInterface::acquireGrants().\n   *\/",31],["T_WHITESPACE","\n  ",49],["T_PUBLIC","public",50],["T_WHITESPACE"," ",50],["T_FUNCTION","function",50],["T_WHITESPACE"," ",50],["T_STRING","writeGrants",50],"(",["T_STRING","NodeInterface",50],["T_WHITESPACE"," ",50],["T_VARIABLE","$node",50],",",["T_WHITESPACE"," ",50],["T_VARIABLE","$delete",50],["T_WHITESPACE"," ",50],"=",["T_WHITESPACE"," ",50],["T_STRING","TRUE",50],")",";",["T_WHITESPACE","\n\n  ",50],["T_DOC_COMMENT","\/**\n   * Creates the default node access grant entry on the grant storage.\n   *\/",52],["T_WHITESPACE","\n  ",54],["T_PUBLIC","public",55],["T_WHITESPACE"," ",55],["T_FUNCTION","function",55],["T_WHITESPACE"," ",55],["T_STRING","writeDefaultGrant",55],"(",")",";",["T_WHITESPACE","\n\n  ",55],["T_DOC_COMMENT","\/**\n   * Deletes all node access entries.\n   *\/",57],["T_WHITESPACE","\n  ",59],["T_PUBLIC","public",60],["T_WHITESPACE"," ",60],["T_FUNCTION","function",60],["T_WHITESPACE"," ",60],["T_STRING","deleteGrants",60],"(",")",";",["T_WHITESPACE","\n\n  ",60],["T_DOC_COMMENT","\/**\n   * Counts available node grants.\n   *\n   * @return int\n   *   Returns the amount of node grants.\n   *\/",62],["T_WHITESPACE","\n  ",67],["T_PUBLIC","public",68],["T_WHITESPACE"," ",68],["T_FUNCTION","function",68],["T_WHITESPACE"," ",68],["T_STRING","countGrants",68],"(",")",";",["T_WHITESPACE","\n\n  ",68],["T_DOC_COMMENT","\/**\n   * Checks all grants for a given account.\n   *\n   * @param \\Drupal\\Core\\Session\\AccountInterface $account\n   *   A user object representing the user for whom the operation is to be\n   *   performed.\n   *\n   * @return int.\n   *   Status of the access check.\n   *\/",70],["T_WHITESPACE","\n  ",79],["T_PUBLIC","public",80],["T_WHITESPACE"," ",80],["T_FUNCTION","function",80],["T_WHITESPACE"," ",80],["T_STRING","checkAllGrants",80],"(",["T_STRING","AccountInterface",80],["T_WHITESPACE"," ",80],["T_VARIABLE","$account",80],")",";",["T_WHITESPACE","\n\n",80],"}",["T_WHITESPACE","\n",82]]