[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Tests",3],["T_NS_SEPARATOR","\\",3],["T_STRING","rest",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Functional",3],";",["T_WHITESPACE","\n\n",3],["T_USE","use",5],["T_WHITESPACE"," ",5],["T_STRING","Drupal",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Core",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Url",5],";",["T_WHITESPACE","\n",5],["T_USE","use",6],["T_WHITESPACE"," ",6],["T_STRING","Drupal",6],["T_NS_SEPARATOR","\\",6],["T_STRING","rest",6],["T_NS_SEPARATOR","\\",6],["T_STRING","RestResourceConfigInterface",6],";",["T_WHITESPACE","\n",6],["T_USE","use",7],["T_WHITESPACE"," ",7],["T_STRING","Drupal",7],["T_NS_SEPARATOR","\\",7],["T_STRING","Tests",7],["T_NS_SEPARATOR","\\",7],["T_STRING","BrowserTestBase",7],";",["T_WHITESPACE","\n",7],["T_USE","use",8],["T_WHITESPACE"," ",8],["T_STRING","Drupal",8],["T_NS_SEPARATOR","\\",8],["T_STRING","user",8],["T_NS_SEPARATOR","\\",8],["T_STRING","Entity",8],["T_NS_SEPARATOR","\\",8],["T_STRING","Role",8],";",["T_WHITESPACE","\n",8],["T_USE","use",9],["T_WHITESPACE"," ",9],["T_STRING","Drupal",9],["T_NS_SEPARATOR","\\",9],["T_STRING","user",9],["T_NS_SEPARATOR","\\",9],["T_STRING","RoleInterface",9],";",["T_WHITESPACE","\n",9],["T_USE","use",10],["T_WHITESPACE"," ",10],["T_STRING","GuzzleHttp",10],["T_NS_SEPARATOR","\\",10],["T_STRING","RequestOptions",10],";",["T_WHITESPACE","\n",10],["T_USE","use",11],["T_WHITESPACE"," ",11],["T_STRING","Psr",11],["T_NS_SEPARATOR","\\",11],["T_STRING","Http",11],["T_NS_SEPARATOR","\\",11],["T_STRING","Message",11],["T_NS_SEPARATOR","\\",11],["T_STRING","ResponseInterface",11],";",["T_WHITESPACE","\n\n",11],["T_DOC_COMMENT","\/**\n * Subclass this for every REST resource, every format and every auth provider.\n *\n * For more guidance see\n * \\Drupal\\Tests\\rest\\Functional\\EntityResource\\EntityResourceTestBase\n * which has recommendations for testing the\n * \\Drupal\\rest\\Plugin\\rest\\resource\\EntityResource REST resource for every\n * format and every auth provider. It's a special case (because that single REST\n * resource generates supports not just one thing, but many things\u00c2\u00a0\u00e2\u0080\u0094 multiple\n * entity types), but the same principles apply.\n *\/",13],["T_WHITESPACE","\n",23],["T_ABSTRACT","abstract",24],["T_WHITESPACE"," ",24],["T_CLASS","class",24],["T_WHITESPACE"," ",24],["T_STRING","ResourceTestBase",24],["T_WHITESPACE"," ",24],["T_EXTENDS","extends",24],["T_WHITESPACE"," ",24],["T_STRING","BrowserTestBase",24],["T_WHITESPACE"," ",24],"{",["T_WHITESPACE","\n\n  ",24],["T_DOC_COMMENT","\/**\n   * The format to use in this test.\n   *\n   * A format is the combination of a certain normalizer and a certain\n   * serializer.\n   *\n   * @see https:\/\/www.drupal.org\/developing\/api\/8\/serialization\n   *\n   * (The default is 'json' because that doesn't depend on any module.)\n   *\n   * @var string\n   *\/",26],["T_WHITESPACE","\n  ",37],["T_PROTECTED","protected",38],["T_WHITESPACE"," ",38],["T_STATIC","static",38],["T_WHITESPACE"," ",38],["T_VARIABLE","$format",38],["T_WHITESPACE"," ",38],"=",["T_WHITESPACE"," ",38],["T_CONSTANT_ENCAPSED_STRING","'json'",38],";",["T_WHITESPACE","\n\n  ",38],["T_DOC_COMMENT","\/**\n   * The MIME type that corresponds to $format.\n   *\n   * (Sadly this cannot be computed automatically yet.)\n   *\n   * @var string\n   *\/",40],["T_WHITESPACE","\n  ",46],["T_PROTECTED","protected",47],["T_WHITESPACE"," ",47],["T_STATIC","static",47],["T_WHITESPACE"," ",47],["T_VARIABLE","$mimeType",47],["T_WHITESPACE"," ",47],"=",["T_WHITESPACE"," ",47],["T_CONSTANT_ENCAPSED_STRING","'application\/json'",47],";",["T_WHITESPACE","\n\n  ",47],["T_DOC_COMMENT","\/**\n   * The expected MIME type in case of 4xx error responses.\n   *\n   * (Can be different, when $mimeType for example encodes a particular\n   * normalization, such as 'application\/hal+json': its error response MIME\n   * type is 'application\/json'.)\n   *\n   * @var string\n   *\/",49],["T_WHITESPACE","\n  ",57],["T_PROTECTED","protected",58],["T_WHITESPACE"," ",58],["T_STATIC","static",58],["T_WHITESPACE"," ",58],["T_VARIABLE","$expectedErrorMimeType",58],["T_WHITESPACE"," ",58],"=",["T_WHITESPACE"," ",58],["T_CONSTANT_ENCAPSED_STRING","'application\/json'",58],";",["T_WHITESPACE","\n\n  ",58],["T_DOC_COMMENT","\/**\n   * The authentication mechanism to use in this test.\n   *\n   * (The default is 'cookie' because that doesn't depend on any module.)\n   *\n   * @var string\n   *\/",60],["T_WHITESPACE","\n  ",66],["T_PROTECTED","protected",67],["T_WHITESPACE"," ",67],["T_STATIC","static",67],["T_WHITESPACE"," ",67],["T_VARIABLE","$auth",67],["T_WHITESPACE"," ",67],"=",["T_WHITESPACE"," ",67],["T_STRING","FALSE",67],";",["T_WHITESPACE","\n\n  ",67],["T_DOC_COMMENT","\/**\n   * The account to use for authentication, if any.\n   *\n   * @var null|\\Drupal\\Core\\Session\\AccountInterface\n   *\/",69],["T_WHITESPACE","\n  ",73],["T_PROTECTED","protected",74],["T_WHITESPACE"," ",74],["T_VARIABLE","$account",74],["T_WHITESPACE"," ",74],"=",["T_WHITESPACE"," ",74],["T_STRING","NULL",74],";",["T_WHITESPACE","\n\n  ",74],["T_DOC_COMMENT","\/**\n   * The REST resource config entity storage.\n   *\n   * @var \\Drupal\\Core\\Entity\\EntityStorageInterface\n   *\/",76],["T_WHITESPACE","\n  ",80],["T_PROTECTED","protected",81],["T_WHITESPACE"," ",81],["T_VARIABLE","$resourceConfigStorage",81],";",["T_WHITESPACE","\n\n  ",81],["T_DOC_COMMENT","\/**\n   * The serializer service.\n   *\n   * @var \\Symfony\\Component\\Serializer\\Serializer\n   *\/",83],["T_WHITESPACE","\n  ",87],["T_PROTECTED","protected",88],["T_WHITESPACE"," ",88],["T_VARIABLE","$serializer",88],";",["T_WHITESPACE","\n\n  ",88],["T_DOC_COMMENT","\/**\n   * Modules to install.\n   *\n   * @var array\n   *\/",90],["T_WHITESPACE","\n  ",94],["T_PUBLIC","public",95],["T_WHITESPACE"," ",95],["T_STATIC","static",95],["T_WHITESPACE"," ",95],["T_VARIABLE","$modules",95],["T_WHITESPACE"," ",95],"=",["T_WHITESPACE"," ",95],"[",["T_CONSTANT_ENCAPSED_STRING","'rest'",95],"]",";",["T_WHITESPACE","\n\n  ",95],["T_DOC_COMMENT","\/**\n   * {@inheritdoc}\n   *\/",97],["T_WHITESPACE","\n  ",99],["T_PUBLIC","public",100],["T_WHITESPACE"," ",100],["T_FUNCTION","function",100],["T_WHITESPACE"," ",100],["T_STRING","setUp",100],"(",")",["T_WHITESPACE"," ",100],"{",["T_WHITESPACE","\n    ",100],["T_STRING","parent",101],["T_DOUBLE_COLON","::",101],["T_STRING","setUp",101],"(",")",";",["T_WHITESPACE","\n\n    ",101],["T_COMMENT","\/\/ Ensure the anonymous user role has no permissions at all.\n",103],["T_WHITESPACE","    ",104],["T_VARIABLE","$user_role",104],["T_WHITESPACE"," ",104],"=",["T_WHITESPACE"," ",104],["T_STRING","Role",104],["T_DOUBLE_COLON","::",104],["T_STRING","load",104],"(",["T_STRING","RoleInterface",104],["T_DOUBLE_COLON","::",104],["T_STRING","ANONYMOUS_ID",104],")",";",["T_WHITESPACE","\n    ",104],["T_FOREACH","foreach",105],["T_WHITESPACE"," ",105],"(",["T_VARIABLE","$user_role",105],["T_OBJECT_OPERATOR","->",105],["T_STRING","getPermissions",105],"(",")",["T_WHITESPACE"," ",105],["T_AS","as",105],["T_WHITESPACE"," ",105],["T_VARIABLE","$permission",105],")",["T_WHITESPACE"," ",105],"{",["T_WHITESPACE","\n      ",105],["T_VARIABLE","$user_role",106],["T_OBJECT_OPERATOR","->",106],["T_STRING","revokePermission",106],"(",["T_VARIABLE","$permission",106],")",";",["T_WHITESPACE","\n    ",106],"}",["T_WHITESPACE","\n    ",107],["T_VARIABLE","$user_role",108],["T_OBJECT_OPERATOR","->",108],["T_STRING","save",108],"(",")",";",["T_WHITESPACE","\n    ",108],["T_STRING","assert",109],"(",["T_CONSTANT_ENCAPSED_STRING","'[] === $user_role->getPermissions()'",109],",",["T_WHITESPACE"," ",109],["T_CONSTANT_ENCAPSED_STRING","'The anonymous user role has no permissions at all.'",109],")",";",["T_WHITESPACE","\n\n    ",109],["T_IF","if",111],["T_WHITESPACE"," ",111],"(",["T_STATIC","static",111],["T_DOUBLE_COLON","::",111],["T_VARIABLE","$auth",111],["T_WHITESPACE"," ",111],["T_IS_NOT_IDENTICAL","!==",111],["T_WHITESPACE"," ",111],["T_STRING","FALSE",111],")",["T_WHITESPACE"," ",111],"{",["T_WHITESPACE","\n      ",111],["T_COMMENT","\/\/ Ensure the authenticated user role has no permissions at all.\n",112],["T_WHITESPACE","      ",113],["T_VARIABLE","$user_role",113],["T_WHITESPACE"," ",113],"=",["T_WHITESPACE"," ",113],["T_STRING","Role",113],["T_DOUBLE_COLON","::",113],["T_STRING","load",113],"(",["T_STRING","RoleInterface",113],["T_DOUBLE_COLON","::",113],["T_STRING","AUTHENTICATED_ID",113],")",";",["T_WHITESPACE","\n      ",113],["T_FOREACH","foreach",114],["T_WHITESPACE"," ",114],"(",["T_VARIABLE","$user_role",114],["T_OBJECT_OPERATOR","->",114],["T_STRING","getPermissions",114],"(",")",["T_WHITESPACE"," ",114],["T_AS","as",114],["T_WHITESPACE"," ",114],["T_VARIABLE","$permission",114],")",["T_WHITESPACE"," ",114],"{",["T_WHITESPACE","\n        ",114],["T_VARIABLE","$user_role",115],["T_OBJECT_OPERATOR","->",115],["T_STRING","revokePermission",115],"(",["T_VARIABLE","$permission",115],")",";",["T_WHITESPACE","\n      ",115],"}",["T_WHITESPACE","\n      ",116],["T_VARIABLE","$user_role",117],["T_OBJECT_OPERATOR","->",117],["T_STRING","save",117],"(",")",";",["T_WHITESPACE","\n      ",117],["T_STRING","assert",118],"(",["T_CONSTANT_ENCAPSED_STRING","'[] === $user_role->getPermissions()'",118],",",["T_WHITESPACE"," ",118],["T_CONSTANT_ENCAPSED_STRING","'The authenticated user role has no permissions at all.'",118],")",";",["T_WHITESPACE","\n\n      ",118],["T_COMMENT","\/\/ Create an account.\n",120],["T_WHITESPACE","      ",121],["T_VARIABLE","$this",121],["T_OBJECT_OPERATOR","->",121],["T_STRING","account",121],["T_WHITESPACE"," ",121],"=",["T_WHITESPACE"," ",121],["T_VARIABLE","$this",121],["T_OBJECT_OPERATOR","->",121],["T_STRING","createUser",121],"(",")",";",["T_WHITESPACE","\n    ",121],"}",["T_WHITESPACE","\n    ",122],["T_ELSE","else",123],["T_WHITESPACE"," ",123],"{",["T_WHITESPACE","\n      ",123],["T_COMMENT","\/\/ Otherwise, also create an account, so that any test involving User\n",124],["T_WHITESPACE","      ",125],["T_COMMENT","\/\/ entities will have the same user IDs regardless of authentication.\n",125],["T_WHITESPACE","      ",126],["T_VARIABLE","$this",126],["T_OBJECT_OPERATOR","->",126],["T_STRING","createUser",126],"(",")",";",["T_WHITESPACE","\n    ",126],"}",["T_WHITESPACE","\n\n    ",127],["T_VARIABLE","$this",129],["T_OBJECT_OPERATOR","->",129],["T_STRING","resourceConfigStorage",129],["T_WHITESPACE"," ",129],"=",["T_WHITESPACE"," ",129],["T_VARIABLE","$this",129],["T_OBJECT_OPERATOR","->",129],["T_STRING","container",129],["T_OBJECT_OPERATOR","->",129],["T_STRING","get",129],"(",["T_CONSTANT_ENCAPSED_STRING","'entity_type.manager'",129],")",["T_OBJECT_OPERATOR","->",129],["T_STRING","getStorage",129],"(",["T_CONSTANT_ENCAPSED_STRING","'rest_resource_config'",129],")",";",["T_WHITESPACE","\n\n    ",129],["T_COMMENT","\/\/ Ensure there's a clean slate: delete all REST resource config entities.\n",131],["T_WHITESPACE","    ",132],["T_VARIABLE","$this",132],["T_OBJECT_OPERATOR","->",132],["T_STRING","resourceConfigStorage",132],["T_OBJECT_OPERATOR","->",132],["T_STRING","delete",132],"(",["T_VARIABLE","$this",132],["T_OBJECT_OPERATOR","->",132],["T_STRING","resourceConfigStorage",132],["T_OBJECT_OPERATOR","->",132],["T_STRING","loadMultiple",132],"(",")",")",";",["T_WHITESPACE","\n  ",132],"}",["T_WHITESPACE","\n\n  ",133],["T_DOC_COMMENT","\/**\n   * Provisions a REST resource.\n   *\n   * @param string $resource_type\n   *   The resource type (REST resource plugin ID).\n   * @param string[] $formats\n   *   The allowed formats for this resource.\n   * @param string[] $authentication\n   *   The allowed authentication providers for this resource.\n   *\/",135],["T_WHITESPACE","\n  ",144],["T_PROTECTED","protected",145],["T_WHITESPACE"," ",145],["T_FUNCTION","function",145],["T_WHITESPACE"," ",145],["T_STRING","provisionResource",145],"(",["T_VARIABLE","$resource_type",145],",",["T_WHITESPACE"," ",145],["T_VARIABLE","$formats",145],["T_WHITESPACE"," ",145],"=",["T_WHITESPACE"," ",145],"[","]",",",["T_WHITESPACE"," ",145],["T_VARIABLE","$authentication",145],["T_WHITESPACE"," ",145],"=",["T_WHITESPACE"," ",145],"[","]",")",["T_WHITESPACE"," ",145],"{",["T_WHITESPACE","\n    ",145],["T_VARIABLE","$this",146],["T_OBJECT_OPERATOR","->",146],["T_STRING","resourceConfigStorage",146],["T_OBJECT_OPERATOR","->",146],["T_STRING","create",146],"(","[",["T_WHITESPACE","\n      ",146],["T_CONSTANT_ENCAPSED_STRING","'id'",147],["T_WHITESPACE"," ",147],["T_DOUBLE_ARROW","=>",147],["T_WHITESPACE"," ",147],["T_VARIABLE","$resource_type",147],",",["T_WHITESPACE","\n      ",147],["T_CONSTANT_ENCAPSED_STRING","'granularity'",148],["T_WHITESPACE"," ",148],["T_DOUBLE_ARROW","=>",148],["T_WHITESPACE"," ",148],["T_STRING","RestResourceConfigInterface",148],["T_DOUBLE_COLON","::",148],["T_STRING","RESOURCE_GRANULARITY",148],",",["T_WHITESPACE","\n      ",148],["T_CONSTANT_ENCAPSED_STRING","'configuration'",149],["T_WHITESPACE"," ",149],["T_DOUBLE_ARROW","=>",149],["T_WHITESPACE"," ",149],"[",["T_WHITESPACE","\n        ",149],["T_CONSTANT_ENCAPSED_STRING","'methods'",150],["T_WHITESPACE"," ",150],["T_DOUBLE_ARROW","=>",150],["T_WHITESPACE"," ",150],"[",["T_CONSTANT_ENCAPSED_STRING","'GET'",150],",",["T_WHITESPACE"," ",150],["T_CONSTANT_ENCAPSED_STRING","'POST'",150],",",["T_WHITESPACE"," ",150],["T_CONSTANT_ENCAPSED_STRING","'PATCH'",150],",",["T_WHITESPACE"," ",150],["T_CONSTANT_ENCAPSED_STRING","'DELETE'",150],"]",",",["T_WHITESPACE","\n        ",150],["T_CONSTANT_ENCAPSED_STRING","'formats'",151],["T_WHITESPACE"," ",151],["T_DOUBLE_ARROW","=>",151],["T_WHITESPACE"," ",151],["T_VARIABLE","$formats",151],",",["T_WHITESPACE","\n        ",151],["T_CONSTANT_ENCAPSED_STRING","'authentication'",152],["T_WHITESPACE"," ",152],["T_DOUBLE_ARROW","=>",152],["T_WHITESPACE"," ",152],["T_VARIABLE","$authentication",152],",",["T_WHITESPACE","\n      ",152],"]",["T_WHITESPACE","\n    ",153],"]",")",["T_OBJECT_OPERATOR","->",154],["T_STRING","save",154],"(",")",";",["T_WHITESPACE","\n    ",154],["T_COMMENT","\/\/ @todo Remove this in https:\/\/www.drupal.org\/node\/2815845.\n",155],["T_WHITESPACE","    ",156],["T_STRING","drupal_flush_all_caches",156],"(",")",";",["T_WHITESPACE","\n  ",156],"}",["T_WHITESPACE","\n\n  ",157],["T_DOC_COMMENT","\/**\n   * Sets up the necessary authorization.\n   *\n   * In case of a test verifying publicly accessible REST resources: grant\n   * permissions to the anonymous user role.\n   *\n   * In case of a test verifying behavior when using a particular authentication\n   * provider: create a user with a particular set of permissions.\n   *\n   * Because of the $method parameter, it's possible to first set up\n   * authentication for only GET, then add POST, et cetera. This then also\n   * allows for verifying a 403 in case of missing authorization.\n   *\n   * @param string $method\n   *   The HTTP method for which to set up authentication.\n   *\n   * @see ::grantPermissionsToAnonymousRole()\n   * @see ::grantPermissionsToAuthenticatedRole()\n   *\/",159],["T_WHITESPACE","\n  ",177],["T_ABSTRACT","abstract",178],["T_WHITESPACE"," ",178],["T_PROTECTED","protected",178],["T_WHITESPACE"," ",178],["T_FUNCTION","function",178],["T_WHITESPACE"," ",178],["T_STRING","setUpAuthorization",178],"(",["T_VARIABLE","$method",178],")",";",["T_WHITESPACE","\n\n  ",178],["T_DOC_COMMENT","\/**\n   * Verifies the error response in case of missing authentication.\n   *\/",180],["T_WHITESPACE","\n  ",182],["T_ABSTRACT","abstract",183],["T_WHITESPACE"," ",183],["T_PROTECTED","protected",183],["T_WHITESPACE"," ",183],["T_FUNCTION","function",183],["T_WHITESPACE"," ",183],["T_STRING","assertResponseWhenMissingAuthentication",183],"(",["T_STRING","ResponseInterface",183],["T_WHITESPACE"," ",183],["T_VARIABLE","$response",183],")",";",["T_WHITESPACE","\n\n  ",183],["T_DOC_COMMENT","\/**\n   * Asserts normalization-specific edge cases.\n   *\n   * (Should be called before sending a well-formed request.)\n   *\n   * @see \\GuzzleHttp\\ClientInterface::request()\n   *\n   * @param string $method\n   *   HTTP method.\n   * @param \\Drupal\\Core\\Url $url\n   *   URL to request.\n   * @param array $request_options\n   *   Request options to apply.\n   *\/",185],["T_WHITESPACE","\n  ",198],["T_ABSTRACT","abstract",199],["T_WHITESPACE"," ",199],["T_PROTECTED","protected",199],["T_WHITESPACE"," ",199],["T_FUNCTION","function",199],["T_WHITESPACE"," ",199],["T_STRING","assertNormalizationEdgeCases",199],"(",["T_VARIABLE","$method",199],",",["T_WHITESPACE"," ",199],["T_STRING","Url",199],["T_WHITESPACE"," ",199],["T_VARIABLE","$url",199],",",["T_WHITESPACE"," ",199],["T_ARRAY","array",199],["T_WHITESPACE"," ",199],["T_VARIABLE","$request_options",199],")",";",["T_WHITESPACE","\n\n  ",199],["T_DOC_COMMENT","\/**\n   * Asserts authentication provider-specific edge cases.\n   *\n   * (Should be called before sending a well-formed request.)\n   *\n   * @see \\GuzzleHttp\\ClientInterface::request()\n   *\n   * @param string $method\n   *   HTTP method.\n   * @param \\Drupal\\Core\\Url $url\n   *   URL to request.\n   * @param array $request_options\n   *   Request options to apply.\n   *\/",201],["T_WHITESPACE","\n  ",214],["T_ABSTRACT","abstract",215],["T_WHITESPACE"," ",215],["T_PROTECTED","protected",215],["T_WHITESPACE"," ",215],["T_FUNCTION","function",215],["T_WHITESPACE"," ",215],["T_STRING","assertAuthenticationEdgeCases",215],"(",["T_VARIABLE","$method",215],",",["T_WHITESPACE"," ",215],["T_STRING","Url",215],["T_WHITESPACE"," ",215],["T_VARIABLE","$url",215],",",["T_WHITESPACE"," ",215],["T_ARRAY","array",215],["T_WHITESPACE"," ",215],["T_VARIABLE","$request_options",215],")",";",["T_WHITESPACE","\n\n  ",215],["T_DOC_COMMENT","\/**\n   * Initializes authentication.\n   *\n   * E.g. for cookie authentication, we first need to get a cookie.\n   *\/",217],["T_WHITESPACE","\n  ",221],["T_PROTECTED","protected",222],["T_WHITESPACE"," ",222],["T_FUNCTION","function",222],["T_WHITESPACE"," ",222],["T_STRING","initAuthentication",222],"(",")",["T_WHITESPACE"," ",222],"{","}",["T_WHITESPACE","\n\n  ",222],["T_DOC_COMMENT","\/**\n   * Returns Guzzle request options for authentication.\n   *\n   * @param string $method\n   *   The HTTP method for this authenticated request.\n   *\n   * @return array\n   *   Guzzle request options to use for authentication.\n   *\n   * @see \\GuzzleHttp\\ClientInterface::request()\n   *\/",224],["T_WHITESPACE","\n  ",234],["T_PROTECTED","protected",235],["T_WHITESPACE"," ",235],["T_FUNCTION","function",235],["T_WHITESPACE"," ",235],["T_STRING","getAuthenticationRequestOptions",235],"(",["T_VARIABLE","$method",235],")",["T_WHITESPACE"," ",235],"{",["T_WHITESPACE","\n    ",235],["T_RETURN","return",236],["T_WHITESPACE"," ",236],"[","]",";",["T_WHITESPACE","\n  ",236],"}",["T_WHITESPACE","\n\n  ",237],["T_DOC_COMMENT","\/**\n   * Grants permissions to the anonymous role.\n   *\n   * @param string[] $permissions\n   *   Permissions to grant.\n   *\/",239],["T_WHITESPACE","\n  ",244],["T_PROTECTED","protected",245],["T_WHITESPACE"," ",245],["T_FUNCTION","function",245],["T_WHITESPACE"," ",245],["T_STRING","grantPermissionsToAnonymousRole",245],"(",["T_ARRAY","array",245],["T_WHITESPACE"," ",245],["T_VARIABLE","$permissions",245],")",["T_WHITESPACE"," ",245],"{",["T_WHITESPACE","\n    ",245],["T_VARIABLE","$this",246],["T_OBJECT_OPERATOR","->",246],["T_STRING","grantPermissions",246],"(",["T_STRING","Role",246],["T_DOUBLE_COLON","::",246],["T_STRING","load",246],"(",["T_STRING","RoleInterface",246],["T_DOUBLE_COLON","::",246],["T_STRING","ANONYMOUS_ID",246],")",",",["T_WHITESPACE"," ",246],["T_VARIABLE","$permissions",246],")",";",["T_WHITESPACE","\n  ",246],"}",["T_WHITESPACE","\n\n  ",247],["T_DOC_COMMENT","\/**\n   * Grants permissions to the authenticated role.\n   *\n   * @param string[] $permissions\n   *   Permissions to grant.\n   *\/",249],["T_WHITESPACE","\n  ",254],["T_PROTECTED","protected",255],["T_WHITESPACE"," ",255],["T_FUNCTION","function",255],["T_WHITESPACE"," ",255],["T_STRING","grantPermissionsToAuthenticatedRole",255],"(",["T_ARRAY","array",255],["T_WHITESPACE"," ",255],["T_VARIABLE","$permissions",255],")",["T_WHITESPACE"," ",255],"{",["T_WHITESPACE","\n    ",255],["T_VARIABLE","$this",256],["T_OBJECT_OPERATOR","->",256],["T_STRING","grantPermissions",256],"(",["T_STRING","Role",256],["T_DOUBLE_COLON","::",256],["T_STRING","load",256],"(",["T_STRING","RoleInterface",256],["T_DOUBLE_COLON","::",256],["T_STRING","AUTHENTICATED_ID",256],")",",",["T_WHITESPACE"," ",256],["T_VARIABLE","$permissions",256],")",";",["T_WHITESPACE","\n  ",256],"}",["T_WHITESPACE","\n\n  ",257],["T_DOC_COMMENT","\/**\n   * Grants permissions to the tested role: anonymous or authenticated.\n   *\n   * @param string[] $permissions\n   *   Permissions to grant.\n   *\n   * @see ::grantPermissionsToAuthenticatedRole()\n   * @see ::grantPermissionsToAnonymousRole()\n   *\/",259],["T_WHITESPACE","\n  ",267],["T_PROTECTED","protected",268],["T_WHITESPACE"," ",268],["T_FUNCTION","function",268],["T_WHITESPACE"," ",268],["T_STRING","grantPermissionsToTestedRole",268],"(",["T_ARRAY","array",268],["T_WHITESPACE"," ",268],["T_VARIABLE","$permissions",268],")",["T_WHITESPACE"," ",268],"{",["T_WHITESPACE","\n    ",268],["T_IF","if",269],["T_WHITESPACE"," ",269],"(",["T_STATIC","static",269],["T_DOUBLE_COLON","::",269],["T_VARIABLE","$auth",269],")",["T_WHITESPACE"," ",269],"{",["T_WHITESPACE","\n      ",269],["T_VARIABLE","$this",270],["T_OBJECT_OPERATOR","->",270],["T_STRING","grantPermissionsToAuthenticatedRole",270],"(",["T_VARIABLE","$permissions",270],")",";",["T_WHITESPACE","\n    ",270],"}",["T_WHITESPACE","\n    ",271],["T_ELSE","else",272],["T_WHITESPACE"," ",272],"{",["T_WHITESPACE","\n      ",272],["T_VARIABLE","$this",273],["T_OBJECT_OPERATOR","->",273],["T_STRING","grantPermissionsToAnonymousRole",273],"(",["T_VARIABLE","$permissions",273],")",";",["T_WHITESPACE","\n    ",273],"}",["T_WHITESPACE","\n  ",274],"}",["T_WHITESPACE","\n\n  ",275],["T_DOC_COMMENT","\/**\n   * Performs a HTTP request. Wraps the Guzzle HTTP client.\n   *\n   * Why wrap the Guzzle HTTP client? Because we want to keep the actual test\n   * code as simple as possible, and hence not require them to specify the\n   * 'http_errors = FALSE' request option, nor do we want them to have to\n   * convert Drupal Url objects to strings.\n   *\n   * @see \\GuzzleHttp\\ClientInterface::request()\n   *\n   * @param string $method\n   *   HTTP method.\n   * @param \\Drupal\\Core\\Url $url\n   *   URL to request.\n   * @param array $request_options\n   *   Request options to apply.\n   *\n   * @return \\Psr\\Http\\Message\\ResponseInterface\n   *\/",277],["T_WHITESPACE","\n  ",295],["T_PROTECTED","protected",296],["T_WHITESPACE"," ",296],["T_FUNCTION","function",296],["T_WHITESPACE"," ",296],["T_STRING","request",296],"(",["T_VARIABLE","$method",296],",",["T_WHITESPACE"," ",296],["T_STRING","Url",296],["T_WHITESPACE"," ",296],["T_VARIABLE","$url",296],",",["T_WHITESPACE"," ",296],["T_ARRAY","array",296],["T_WHITESPACE"," ",296],["T_VARIABLE","$request_options",296],")",["T_WHITESPACE"," ",296],"{",["T_WHITESPACE","\n    ",296],["T_VARIABLE","$request_options",297],"[",["T_STRING","RequestOptions",297],["T_DOUBLE_COLON","::",297],["T_STRING","HTTP_ERRORS",297],"]",["T_WHITESPACE"," ",297],"=",["T_WHITESPACE"," ",297],["T_STRING","FALSE",297],";",["T_WHITESPACE","\n    ",297],["T_RETURN","return",298],["T_WHITESPACE"," ",298],["T_VARIABLE","$this",298],["T_OBJECT_OPERATOR","->",298],["T_STRING","httpClient",298],["T_OBJECT_OPERATOR","->",298],["T_STRING","request",298],"(",["T_VARIABLE","$method",298],",",["T_WHITESPACE"," ",298],["T_VARIABLE","$url",298],["T_OBJECT_OPERATOR","->",298],["T_STRING","toString",298],"(",")",",",["T_WHITESPACE"," ",298],["T_VARIABLE","$request_options",298],")",";",["T_WHITESPACE","\n  ",298],"}",["T_WHITESPACE","\n\n  ",299],["T_DOC_COMMENT","\/**\n   * Asserts that a resource response has the given status code and body.\n   *\n   * (Also asserts that the expected error MIME type is present, but this is\n   * defined globally for the test via static::$expectedErrorMimeType, because\n   * all error responses should use the same MIME type.)\n   *\n   * @param int $expected_status_code\n   *   The expected response status.\n   * @param string|false $expected_body\n   *   The expected response body. FALSE in case this should not be asserted.\n   * @param \\Psr\\Http\\Message\\ResponseInterface $response\n   *   The response to assert.\n   *\/",301],["T_WHITESPACE","\n  ",314],["T_PROTECTED","protected",315],["T_WHITESPACE"," ",315],["T_FUNCTION","function",315],["T_WHITESPACE"," ",315],["T_STRING","assertResourceResponse",315],"(",["T_VARIABLE","$expected_status_code",315],",",["T_WHITESPACE"," ",315],["T_VARIABLE","$expected_body",315],",",["T_WHITESPACE"," ",315],["T_STRING","ResponseInterface",315],["T_WHITESPACE"," ",315],["T_VARIABLE","$response",315],")",["T_WHITESPACE"," ",315],"{",["T_WHITESPACE","\n    ",315],["T_VARIABLE","$this",316],["T_OBJECT_OPERATOR","->",316],["T_STRING","assertSame",316],"(",["T_VARIABLE","$expected_status_code",316],",",["T_WHITESPACE"," ",316],["T_VARIABLE","$response",316],["T_OBJECT_OPERATOR","->",316],["T_STRING","getStatusCode",316],"(",")",")",";",["T_WHITESPACE","\n    ",316],["T_IF","if",317],["T_WHITESPACE"," ",317],"(",["T_VARIABLE","$expected_status_code",317],["T_WHITESPACE"," ",317],"<",["T_WHITESPACE"," ",317],["T_LNUMBER","400",317],")",["T_WHITESPACE"," ",317],"{",["T_WHITESPACE","\n      ",317],["T_VARIABLE","$this",318],["T_OBJECT_OPERATOR","->",318],["T_STRING","assertSame",318],"(","[",["T_STATIC","static",318],["T_DOUBLE_COLON","::",318],["T_VARIABLE","$mimeType",318],"]",",",["T_WHITESPACE"," ",318],["T_VARIABLE","$response",318],["T_OBJECT_OPERATOR","->",318],["T_STRING","getHeader",318],"(",["T_CONSTANT_ENCAPSED_STRING","'Content-Type'",318],")",")",";",["T_WHITESPACE","\n    ",318],"}",["T_WHITESPACE","\n    ",319],["T_ELSE","else",320],["T_WHITESPACE"," ",320],"{",["T_WHITESPACE","\n      ",320],["T_VARIABLE","$this",321],["T_OBJECT_OPERATOR","->",321],["T_STRING","assertSame",321],"(","[",["T_STATIC","static",321],["T_DOUBLE_COLON","::",321],["T_VARIABLE","$expectedErrorMimeType",321],"]",",",["T_WHITESPACE"," ",321],["T_VARIABLE","$response",321],["T_OBJECT_OPERATOR","->",321],["T_STRING","getHeader",321],"(",["T_CONSTANT_ENCAPSED_STRING","'Content-Type'",321],")",")",";",["T_WHITESPACE","\n    ",321],"}",["T_WHITESPACE","\n    ",322],["T_IF","if",323],["T_WHITESPACE"," ",323],"(",["T_VARIABLE","$expected_body",323],["T_WHITESPACE"," ",323],["T_IS_NOT_IDENTICAL","!==",323],["T_WHITESPACE"," ",323],["T_STRING","FALSE",323],")",["T_WHITESPACE"," ",323],"{",["T_WHITESPACE","\n      ",323],["T_VARIABLE","$this",324],["T_OBJECT_OPERATOR","->",324],["T_STRING","assertSame",324],"(",["T_VARIABLE","$expected_body",324],",",["T_WHITESPACE"," ",324],["T_STRING_CAST","(string)",324],["T_WHITESPACE"," ",324],["T_VARIABLE","$response",324],["T_OBJECT_OPERATOR","->",324],["T_STRING","getBody",324],"(",")",")",";",["T_WHITESPACE","\n    ",324],"}",["T_WHITESPACE","\n  ",325],"}",["T_WHITESPACE","\n\n  ",326],["T_DOC_COMMENT","\/**\n   * Asserts that a resource error response has the given message.\n   *\n   * (Also asserts that the expected error MIME type is present, but this is\n   * defined globally for the test via static::$expectedErrorMimeType, because\n   * all error responses should use the same MIME type.)\n   *\n   * @param int $expected_status_code\n   *   The expected response status.\n   * @param string $expected_message\n   *   The expected error message.\n   * @param \\Psr\\Http\\Message\\ResponseInterface $response\n   *   The error response to assert.\n   *\/",328],["T_WHITESPACE","\n  ",341],["T_PROTECTED","protected",342],["T_WHITESPACE"," ",342],["T_FUNCTION","function",342],["T_WHITESPACE"," ",342],["T_STRING","assertResourceErrorResponse",342],"(",["T_VARIABLE","$expected_status_code",342],",",["T_WHITESPACE"," ",342],["T_VARIABLE","$expected_message",342],",",["T_WHITESPACE"," ",342],["T_STRING","ResponseInterface",342],["T_WHITESPACE"," ",342],["T_VARIABLE","$response",342],")",["T_WHITESPACE"," ",342],"{",["T_WHITESPACE","\n    ",342],["T_COMMENT","\/\/ @todo Fix this in https:\/\/www.drupal.org\/node\/2813755.\n",343],["T_WHITESPACE","    ",344],["T_VARIABLE","$encode_options",344],["T_WHITESPACE"," ",344],"=",["T_WHITESPACE"," ",344],"[",["T_CONSTANT_ENCAPSED_STRING","'json_encode_options'",344],["T_WHITESPACE"," ",344],["T_DOUBLE_ARROW","=>",344],["T_WHITESPACE"," ",344],["T_STRING","JSON_HEX_TAG",344],["T_WHITESPACE"," ",344],"|",["T_WHITESPACE"," ",344],["T_STRING","JSON_HEX_APOS",344],["T_WHITESPACE"," ",344],"|",["T_WHITESPACE"," ",344],["T_STRING","JSON_HEX_AMP",344],["T_WHITESPACE"," ",344],"|",["T_WHITESPACE"," ",344],["T_STRING","JSON_HEX_QUOT",344],"]",";",["T_WHITESPACE","\n    ",344],["T_VARIABLE","$expected_body",345],["T_WHITESPACE"," ",345],"=",["T_WHITESPACE"," ",345],["T_VARIABLE","$this",345],["T_OBJECT_OPERATOR","->",345],["T_STRING","serializer",345],["T_OBJECT_OPERATOR","->",345],["T_STRING","encode",345],"(","[",["T_CONSTANT_ENCAPSED_STRING","'message'",345],["T_WHITESPACE"," ",345],["T_DOUBLE_ARROW","=>",345],["T_WHITESPACE"," ",345],["T_VARIABLE","$expected_message",345],"]",",",["T_WHITESPACE"," ",345],["T_STATIC","static",345],["T_DOUBLE_COLON","::",345],["T_VARIABLE","$format",345],",",["T_WHITESPACE"," ",345],["T_VARIABLE","$encode_options",345],")",";",["T_WHITESPACE","\n    ",345],["T_VARIABLE","$this",346],["T_OBJECT_OPERATOR","->",346],["T_STRING","assertResourceResponse",346],"(",["T_VARIABLE","$expected_status_code",346],",",["T_WHITESPACE"," ",346],["T_VARIABLE","$expected_body",346],",",["T_WHITESPACE"," ",346],["T_VARIABLE","$response",346],")",";",["T_WHITESPACE","\n  ",346],"}",["T_WHITESPACE","\n\n",347],"}",["T_WHITESPACE","\n",349]]