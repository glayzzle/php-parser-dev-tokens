[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","plugin_test",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Plugin",3],";",["T_WHITESPACE","\n\n",3],["T_USE","use",5],["T_WHITESPACE"," ",5],["T_STRING","Drupal",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Component",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Plugin",5],["T_NS_SEPARATOR","\\",5],["T_STRING","PluginManagerBase",5],";",["T_WHITESPACE","\n",5],["T_USE","use",6],["T_WHITESPACE"," ",6],["T_STRING","Drupal",6],["T_NS_SEPARATOR","\\",6],["T_STRING","Component",6],["T_NS_SEPARATOR","\\",6],["T_STRING","Plugin",6],["T_NS_SEPARATOR","\\",6],["T_STRING","Discovery",6],["T_NS_SEPARATOR","\\",6],["T_STRING","StaticDiscovery",6],";",["T_WHITESPACE","\n",6],["T_USE","use",7],["T_WHITESPACE"," ",7],["T_STRING","Drupal",7],["T_NS_SEPARATOR","\\",7],["T_STRING","Component",7],["T_NS_SEPARATOR","\\",7],["T_STRING","Plugin",7],["T_NS_SEPARATOR","\\",7],["T_STRING","Discovery",7],["T_NS_SEPARATOR","\\",7],["T_STRING","DerivativeDiscoveryDecorator",7],";",["T_WHITESPACE","\n",7],["T_USE","use",8],["T_WHITESPACE"," ",8],["T_STRING","Drupal",8],["T_NS_SEPARATOR","\\",8],["T_STRING","Component",8],["T_NS_SEPARATOR","\\",8],["T_STRING","Plugin",8],["T_NS_SEPARATOR","\\",8],["T_STRING","Factory",8],["T_NS_SEPARATOR","\\",8],["T_STRING","ReflectionFactory",8],";",["T_WHITESPACE","\n",8],["T_USE","use",9],["T_WHITESPACE"," ",9],["T_STRING","Drupal",9],["T_NS_SEPARATOR","\\",9],["T_STRING","Core",9],["T_NS_SEPARATOR","\\",9],["T_STRING","Plugin",9],["T_NS_SEPARATOR","\\",9],["T_STRING","Context",9],["T_NS_SEPARATOR","\\",9],["T_STRING","ContextDefinition",9],";",["T_WHITESPACE","\n\n",9],["T_DOC_COMMENT","\/**\n * Defines a plugin manager used by Plugin API derivative unit tests.\n *\/",11],["T_WHITESPACE","\n",13],["T_CLASS","class",14],["T_WHITESPACE"," ",14],["T_STRING","MockBlockManager",14],["T_WHITESPACE"," ",14],["T_EXTENDS","extends",14],["T_WHITESPACE"," ",14],["T_STRING","PluginManagerBase",14],["T_WHITESPACE"," ",14],"{",["T_WHITESPACE","\n  ",14],["T_PUBLIC","public",15],["T_WHITESPACE"," ",15],["T_FUNCTION","function",15],["T_WHITESPACE"," ",15],["T_STRING","__construct",15],"(",")",["T_WHITESPACE"," ",15],"{",["T_WHITESPACE","\n\n    ",15],["T_COMMENT","\/\/ Create the object that can be used to return definitions for all the\n",17],["T_WHITESPACE","    ",18],["T_COMMENT","\/\/ plugins available for this type. Most real plugin managers use a richer\n",18],["T_WHITESPACE","    ",19],["T_COMMENT","\/\/ discovery implementation, but StaticDiscovery lets us add some simple\n",19],["T_WHITESPACE","    ",20],["T_COMMENT","\/\/ mock plugins for unit testing.\n",20],["T_WHITESPACE","    ",21],["T_VARIABLE","$this",21],["T_OBJECT_OPERATOR","->",21],["T_STRING","discovery",21],["T_WHITESPACE"," ",21],"=",["T_WHITESPACE"," ",21],["T_NEW","new",21],["T_WHITESPACE"," ",21],["T_STRING","StaticDiscovery",21],"(",")",";",["T_WHITESPACE","\n\n    ",21],["T_COMMENT","\/\/ Derivative plugins are plugins that are derived from a base plugin\n",23],["T_WHITESPACE","    ",24],["T_COMMENT","\/\/ definition and some site configuration (examples below). To allow for\n",24],["T_WHITESPACE","    ",25],["T_COMMENT","\/\/ such plugins, we add the DerivativeDiscoveryDecorator to our discovery\n",25],["T_WHITESPACE","    ",26],["T_COMMENT","\/\/ object.\n",26],["T_WHITESPACE","    ",27],["T_VARIABLE","$this",27],["T_OBJECT_OPERATOR","->",27],["T_STRING","discovery",27],["T_WHITESPACE"," ",27],"=",["T_WHITESPACE"," ",27],["T_NEW","new",27],["T_WHITESPACE"," ",27],["T_STRING","DerivativeDiscoveryDecorator",27],"(",["T_VARIABLE","$this",27],["T_OBJECT_OPERATOR","->",27],["T_STRING","discovery",27],")",";",["T_WHITESPACE","\n\n    ",27],["T_COMMENT","\/\/ The plugin definitions that follow are based on work that is in progress\n",29],["T_WHITESPACE","    ",30],["T_COMMENT","\/\/ for the Drupal 8 Blocks and Layouts initiative\n",30],["T_WHITESPACE","    ",31],["T_COMMENT","\/\/ (http:\/\/groups.drupal.org\/node\/213563). As stated above, we set\n",31],["T_WHITESPACE","    ",32],["T_COMMENT","\/\/ definitions here, because this is for unit testing. Real plugin managers\n",32],["T_WHITESPACE","    ",33],["T_COMMENT","\/\/ use a discovery implementation that allows for any module to add new\n",33],["T_WHITESPACE","    ",34],["T_COMMENT","\/\/ plugins to the system.\n",34],["T_WHITESPACE","\n    ",35],["T_COMMENT","\/\/ A simple plugin: the user login block.\n",36],["T_WHITESPACE","    ",37],["T_VARIABLE","$this",37],["T_OBJECT_OPERATOR","->",37],["T_STRING","discovery",37],["T_OBJECT_OPERATOR","->",37],["T_STRING","setDefinition",37],"(",["T_CONSTANT_ENCAPSED_STRING","'user_login'",37],",",["T_WHITESPACE"," ",37],["T_ARRAY","array",37],"(",["T_WHITESPACE","\n      ",37],["T_CONSTANT_ENCAPSED_STRING","'label'",38],["T_WHITESPACE"," ",38],["T_DOUBLE_ARROW","=>",38],["T_WHITESPACE"," ",38],["T_STRING","t",38],"(",["T_CONSTANT_ENCAPSED_STRING","'User login'",38],")",",",["T_WHITESPACE","\n      ",38],["T_CONSTANT_ENCAPSED_STRING","'class'",39],["T_WHITESPACE"," ",39],["T_DOUBLE_ARROW","=>",39],["T_WHITESPACE"," ",39],["T_CONSTANT_ENCAPSED_STRING","'Drupal\\plugin_test\\Plugin\\plugin_test\\mock_block\\MockUserLoginBlock'",39],",",["T_WHITESPACE","\n    ",39],")",")",";",["T_WHITESPACE","\n\n    ",40],["T_COMMENT","\/\/ A plugin that requires derivatives: the menu block plugin. We do not want\n",42],["T_WHITESPACE","    ",43],["T_COMMENT","\/\/ a generic \"Menu\" block showing up in the Block administration UI.\n",43],["T_WHITESPACE","    ",44],["T_COMMENT","\/\/ Instead, we want a block for each menu, but the number of menus in the\n",44],["T_WHITESPACE","    ",45],["T_COMMENT","\/\/ system and each one's title is user configurable. The\n",45],["T_WHITESPACE","    ",46],["T_COMMENT","\/\/ MockMenuBlockDeriver class ensures that only derivatives, and not the\n",46],["T_WHITESPACE","    ",47],["T_COMMENT","\/\/ base plugin, are available to the system.\n",47],["T_WHITESPACE","    ",48],["T_VARIABLE","$this",48],["T_OBJECT_OPERATOR","->",48],["T_STRING","discovery",48],["T_OBJECT_OPERATOR","->",48],["T_STRING","setDefinition",48],"(",["T_CONSTANT_ENCAPSED_STRING","'menu'",48],",",["T_WHITESPACE"," ",48],["T_ARRAY","array",48],"(",["T_WHITESPACE","\n      ",48],["T_CONSTANT_ENCAPSED_STRING","'class'",49],["T_WHITESPACE"," ",49],["T_DOUBLE_ARROW","=>",49],["T_WHITESPACE"," ",49],["T_CONSTANT_ENCAPSED_STRING","'Drupal\\plugin_test\\Plugin\\plugin_test\\mock_block\\MockMenuBlock'",49],",",["T_WHITESPACE","\n      ",49],["T_CONSTANT_ENCAPSED_STRING","'deriver'",50],["T_WHITESPACE"," ",50],["T_DOUBLE_ARROW","=>",50],["T_WHITESPACE"," ",50],["T_CONSTANT_ENCAPSED_STRING","'Drupal\\plugin_test\\Plugin\\plugin_test\\mock_block\\MockMenuBlockDeriver'",50],",",["T_WHITESPACE","\n    ",50],")",")",";",["T_WHITESPACE","\n    ",51],["T_COMMENT","\/\/ A plugin defining itself as a derivative.\n",52],["T_WHITESPACE","    ",53],["T_VARIABLE","$this",53],["T_OBJECT_OPERATOR","->",53],["T_STRING","discovery",53],["T_OBJECT_OPERATOR","->",53],["T_STRING","setDefinition",53],"(",["T_CONSTANT_ENCAPSED_STRING","'menu:foo'",53],",",["T_WHITESPACE"," ",53],["T_ARRAY","array",53],"(",["T_WHITESPACE","\n      ",53],["T_CONSTANT_ENCAPSED_STRING","'label'",54],["T_WHITESPACE"," ",54],["T_DOUBLE_ARROW","=>",54],["T_WHITESPACE"," ",54],["T_STRING","t",54],"(",["T_CONSTANT_ENCAPSED_STRING","'Base label'",54],")",",",["T_WHITESPACE","\n      ",54],["T_CONSTANT_ENCAPSED_STRING","'class'",55],["T_WHITESPACE"," ",55],["T_DOUBLE_ARROW","=>",55],["T_WHITESPACE"," ",55],["T_CONSTANT_ENCAPSED_STRING","'Drupal\\plugin_test\\Plugin\\plugin_test\\mock_block\\MockMenuBlock'",55],",",["T_WHITESPACE","\n    ",55],")",")",";",["T_WHITESPACE","\n\n    ",56],["T_COMMENT","\/\/ A block plugin that can optionally be derived: the layout block plugin.\n",58],["T_WHITESPACE","    ",59],["T_COMMENT","\/\/ A layout is a special kind of block into which other blocks can be\n",59],["T_WHITESPACE","    ",60],["T_COMMENT","\/\/ placed. We want both a generic \"Layout\" block available in the Block\n",60],["T_WHITESPACE","    ",61],["T_COMMENT","\/\/ administration UI as well as additional user-created custom layouts. The\n",61],["T_WHITESPACE","    ",62],["T_COMMENT","\/\/ MockLayoutBlockDeriver class ensures that both the base plugin and the\n",62],["T_WHITESPACE","    ",63],["T_COMMENT","\/\/ derivatives are available to the system.\n",63],["T_WHITESPACE","    ",64],["T_VARIABLE","$this",64],["T_OBJECT_OPERATOR","->",64],["T_STRING","discovery",64],["T_OBJECT_OPERATOR","->",64],["T_STRING","setDefinition",64],"(",["T_CONSTANT_ENCAPSED_STRING","'layout'",64],",",["T_WHITESPACE"," ",64],["T_ARRAY","array",64],"(",["T_WHITESPACE","\n      ",64],["T_CONSTANT_ENCAPSED_STRING","'label'",65],["T_WHITESPACE"," ",65],["T_DOUBLE_ARROW","=>",65],["T_WHITESPACE"," ",65],["T_STRING","t",65],"(",["T_CONSTANT_ENCAPSED_STRING","'Layout'",65],")",",",["T_WHITESPACE","\n      ",65],["T_CONSTANT_ENCAPSED_STRING","'class'",66],["T_WHITESPACE"," ",66],["T_DOUBLE_ARROW","=>",66],["T_WHITESPACE"," ",66],["T_CONSTANT_ENCAPSED_STRING","'Drupal\\plugin_test\\Plugin\\plugin_test\\mock_block\\MockLayoutBlock'",66],",",["T_WHITESPACE","\n      ",66],["T_CONSTANT_ENCAPSED_STRING","'deriver'",67],["T_WHITESPACE"," ",67],["T_DOUBLE_ARROW","=>",67],["T_WHITESPACE"," ",67],["T_CONSTANT_ENCAPSED_STRING","'Drupal\\plugin_test\\Plugin\\plugin_test\\mock_block\\MockLayoutBlockDeriver'",67],",",["T_WHITESPACE","\n    ",67],")",")",";",["T_WHITESPACE","\n\n    ",68],["T_COMMENT","\/\/ A block plugin that requires context to function. This block requires a\n",70],["T_WHITESPACE","    ",71],["T_COMMENT","\/\/ user object in order to return the user name from the getTitle() method.\n",71],["T_WHITESPACE","    ",72],["T_VARIABLE","$this",72],["T_OBJECT_OPERATOR","->",72],["T_STRING","discovery",72],["T_OBJECT_OPERATOR","->",72],["T_STRING","setDefinition",72],"(",["T_CONSTANT_ENCAPSED_STRING","'user_name'",72],",",["T_WHITESPACE"," ",72],["T_ARRAY","array",72],"(",["T_WHITESPACE","\n      ",72],["T_CONSTANT_ENCAPSED_STRING","'label'",73],["T_WHITESPACE"," ",73],["T_DOUBLE_ARROW","=>",73],["T_WHITESPACE"," ",73],["T_STRING","t",73],"(",["T_CONSTANT_ENCAPSED_STRING","'User name'",73],")",",",["T_WHITESPACE","\n      ",73],["T_CONSTANT_ENCAPSED_STRING","'class'",74],["T_WHITESPACE"," ",74],["T_DOUBLE_ARROW","=>",74],["T_WHITESPACE"," ",74],["T_CONSTANT_ENCAPSED_STRING","'Drupal\\plugin_test\\Plugin\\plugin_test\\mock_block\\MockUserNameBlock'",74],",",["T_WHITESPACE","\n      ",74],["T_CONSTANT_ENCAPSED_STRING","'context'",75],["T_WHITESPACE"," ",75],["T_DOUBLE_ARROW","=>",75],["T_WHITESPACE"," ",75],["T_ARRAY","array",75],"(",["T_WHITESPACE","\n        ",75],["T_CONSTANT_ENCAPSED_STRING","'user'",76],["T_WHITESPACE"," ",76],["T_DOUBLE_ARROW","=>",76],["T_WHITESPACE"," ",76],["T_VARIABLE","$this",76],["T_OBJECT_OPERATOR","->",76],["T_STRING","createContextDefinition",76],"(",["T_CONSTANT_ENCAPSED_STRING","'entity:user'",76],",",["T_WHITESPACE"," ",76],["T_STRING","t",76],"(",["T_CONSTANT_ENCAPSED_STRING","'User'",76],")",")",",",["T_WHITESPACE","\n      ",76],")",",",["T_WHITESPACE","\n    ",77],")",")",";",["T_WHITESPACE","\n\n    ",78],["T_COMMENT","\/\/ An optional context version of the previous block plugin.\n",80],["T_WHITESPACE","    ",81],["T_VARIABLE","$this",81],["T_OBJECT_OPERATOR","->",81],["T_STRING","discovery",81],["T_OBJECT_OPERATOR","->",81],["T_STRING","setDefinition",81],"(",["T_CONSTANT_ENCAPSED_STRING","'user_name_optional'",81],",",["T_WHITESPACE"," ",81],["T_ARRAY","array",81],"(",["T_WHITESPACE","\n      ",81],["T_CONSTANT_ENCAPSED_STRING","'label'",82],["T_WHITESPACE"," ",82],["T_DOUBLE_ARROW","=>",82],["T_WHITESPACE"," ",82],["T_STRING","t",82],"(",["T_CONSTANT_ENCAPSED_STRING","'User name optional'",82],")",",",["T_WHITESPACE","\n      ",82],["T_CONSTANT_ENCAPSED_STRING","'class'",83],["T_WHITESPACE"," ",83],["T_DOUBLE_ARROW","=>",83],["T_WHITESPACE"," ",83],["T_CONSTANT_ENCAPSED_STRING","'Drupal\\plugin_test\\Plugin\\plugin_test\\mock_block\\MockUserNameBlock'",83],",",["T_WHITESPACE","\n      ",83],["T_CONSTANT_ENCAPSED_STRING","'context'",84],["T_WHITESPACE"," ",84],["T_DOUBLE_ARROW","=>",84],["T_WHITESPACE"," ",84],["T_ARRAY","array",84],"(",["T_WHITESPACE","\n        ",84],["T_CONSTANT_ENCAPSED_STRING","'user'",85],["T_WHITESPACE"," ",85],["T_DOUBLE_ARROW","=>",85],["T_WHITESPACE"," ",85],["T_VARIABLE","$this",85],["T_OBJECT_OPERATOR","->",85],["T_STRING","createContextDefinition",85],"(",["T_CONSTANT_ENCAPSED_STRING","'entity:user'",85],",",["T_WHITESPACE"," ",85],["T_STRING","t",85],"(",["T_CONSTANT_ENCAPSED_STRING","'User'",85],")",",",["T_WHITESPACE"," ",85],["T_STRING","FALSE",85],")",",",["T_WHITESPACE","\n      ",85],")",",",["T_WHITESPACE","\n    ",86],")",")",";",["T_WHITESPACE","\n\n    ",87],["T_COMMENT","\/\/ A block plugin that requires a typed data string context to function.\n",89],["T_WHITESPACE","    ",90],["T_VARIABLE","$this",90],["T_OBJECT_OPERATOR","->",90],["T_STRING","discovery",90],["T_OBJECT_OPERATOR","->",90],["T_STRING","setDefinition",90],"(",["T_CONSTANT_ENCAPSED_STRING","'string_context'",90],",",["T_WHITESPACE"," ",90],["T_ARRAY","array",90],"(",["T_WHITESPACE","\n      ",90],["T_CONSTANT_ENCAPSED_STRING","'label'",91],["T_WHITESPACE"," ",91],["T_DOUBLE_ARROW","=>",91],["T_WHITESPACE"," ",91],["T_STRING","t",91],"(",["T_CONSTANT_ENCAPSED_STRING","'String typed data'",91],")",",",["T_WHITESPACE","\n      ",91],["T_CONSTANT_ENCAPSED_STRING","'class'",92],["T_WHITESPACE"," ",92],["T_DOUBLE_ARROW","=>",92],["T_WHITESPACE"," ",92],["T_CONSTANT_ENCAPSED_STRING","'Drupal\\plugin_test\\Plugin\\plugin_test\\mock_block\\TypedDataStringBlock'",92],",",["T_WHITESPACE","\n    ",92],")",")",";",["T_WHITESPACE","\n\n    ",93],["T_COMMENT","\/\/ A complex context plugin that requires both a user and node for context.\n",95],["T_WHITESPACE","    ",96],["T_VARIABLE","$this",96],["T_OBJECT_OPERATOR","->",96],["T_STRING","discovery",96],["T_OBJECT_OPERATOR","->",96],["T_STRING","setDefinition",96],"(",["T_CONSTANT_ENCAPSED_STRING","'complex_context'",96],",",["T_WHITESPACE"," ",96],["T_ARRAY","array",96],"(",["T_WHITESPACE","\n      ",96],["T_CONSTANT_ENCAPSED_STRING","'label'",97],["T_WHITESPACE"," ",97],["T_DOUBLE_ARROW","=>",97],["T_WHITESPACE"," ",97],["T_STRING","t",97],"(",["T_CONSTANT_ENCAPSED_STRING","'Complex context'",97],")",",",["T_WHITESPACE","\n      ",97],["T_CONSTANT_ENCAPSED_STRING","'class'",98],["T_WHITESPACE"," ",98],["T_DOUBLE_ARROW","=>",98],["T_WHITESPACE"," ",98],["T_CONSTANT_ENCAPSED_STRING","'Drupal\\plugin_test\\Plugin\\plugin_test\\mock_block\\MockComplexContextBlock'",98],",",["T_WHITESPACE","\n      ",98],["T_CONSTANT_ENCAPSED_STRING","'context'",99],["T_WHITESPACE"," ",99],["T_DOUBLE_ARROW","=>",99],["T_WHITESPACE"," ",99],["T_ARRAY","array",99],"(",["T_WHITESPACE","\n        ",99],["T_CONSTANT_ENCAPSED_STRING","'user'",100],["T_WHITESPACE"," ",100],["T_DOUBLE_ARROW","=>",100],["T_WHITESPACE"," ",100],["T_VARIABLE","$this",100],["T_OBJECT_OPERATOR","->",100],["T_STRING","createContextDefinition",100],"(",["T_CONSTANT_ENCAPSED_STRING","'entity:user'",100],",",["T_WHITESPACE"," ",100],["T_STRING","t",100],"(",["T_CONSTANT_ENCAPSED_STRING","'User'",100],")",")",",",["T_WHITESPACE","\n        ",100],["T_CONSTANT_ENCAPSED_STRING","'node'",101],["T_WHITESPACE"," ",101],["T_DOUBLE_ARROW","=>",101],["T_WHITESPACE"," ",101],["T_VARIABLE","$this",101],["T_OBJECT_OPERATOR","->",101],["T_STRING","createContextDefinition",101],"(",["T_CONSTANT_ENCAPSED_STRING","'entity:node'",101],",",["T_WHITESPACE"," ",101],["T_STRING","t",101],"(",["T_CONSTANT_ENCAPSED_STRING","'Node'",101],")",")",",",["T_WHITESPACE","\n      ",101],")",",",["T_WHITESPACE","\n    ",102],")",")",";",["T_WHITESPACE","\n\n    ",103],["T_COMMENT","\/\/ In addition to finding all of the plugins available for a type, a plugin\n",105],["T_WHITESPACE","    ",106],["T_COMMENT","\/\/ type must also be able to create instances of that plugin. For example, a\n",106],["T_WHITESPACE","    ",107],["T_COMMENT","\/\/ specific instance of a \"Main menu\" menu block, configured to show just\n",107],["T_WHITESPACE","    ",108],["T_COMMENT","\/\/ the top-level of links. To handle plugin instantiation, plugin managers\n",108],["T_WHITESPACE","    ",109],["T_COMMENT","\/\/ can use one of the factory classes included with the plugin system, or\n",109],["T_WHITESPACE","    ",110],["T_COMMENT","\/\/ create their own. ReflectionFactory is a general purpose, flexible\n",110],["T_WHITESPACE","    ",111],["T_COMMENT","\/\/ factory suitable for many kinds of plugin types. Factories need access to\n",111],["T_WHITESPACE","    ",112],["T_COMMENT","\/\/ the plugin definitions (e.g., since that's where the plugin's class is\n",112],["T_WHITESPACE","    ",113],["T_COMMENT","\/\/ specified), so we provide it the discovery object.\n",113],["T_WHITESPACE","    ",114],["T_VARIABLE","$this",114],["T_OBJECT_OPERATOR","->",114],["T_STRING","factory",114],["T_WHITESPACE"," ",114],"=",["T_WHITESPACE"," ",114],["T_NEW","new",114],["T_WHITESPACE"," ",114],["T_STRING","ReflectionFactory",114],"(",["T_VARIABLE","$this",114],["T_OBJECT_OPERATOR","->",114],["T_STRING","discovery",114],")",";",["T_WHITESPACE","\n  ",114],"}",["T_WHITESPACE","\n\n  ",115],["T_DOC_COMMENT","\/**\n   * Creates a new context definition with a label that is cast to string.\n   *\n   * @param string $data_type\n   *   The required data type.\n   * @param mixed string|null $label\n   *   The label of this context definition for the UI.\n   * @param bool $required\n   *   Whether the context definition is required.\n   *\n   * @return \\Drupal\\Core\\Plugin\\Context\\ContextDefinition\n   *\/",117],["T_WHITESPACE","\n  ",128],["T_PROTECTED","protected",129],["T_WHITESPACE"," ",129],["T_FUNCTION","function",129],["T_WHITESPACE"," ",129],["T_STRING","createContextDefinition",129],"(",["T_VARIABLE","$data_type",129],",",["T_WHITESPACE"," ",129],["T_VARIABLE","$label",129],",",["T_WHITESPACE"," ",129],["T_VARIABLE","$required",129],["T_WHITESPACE"," ",129],"=",["T_WHITESPACE"," ",129],["T_STRING","TRUE",129],")",["T_WHITESPACE"," ",129],"{",["T_WHITESPACE","\n    ",129],["T_COMMENT","\/\/ We cast the label to string for testing purposes only, as it may be\n",130],["T_WHITESPACE","    ",131],["T_COMMENT","\/\/ a TranslatableMarkup and we will do assertEqual() checks on arrays that\n",131],["T_WHITESPACE","    ",132],["T_COMMENT","\/\/ include ContextDefinition objects, and var_export() has problems\n",132],["T_WHITESPACE","    ",133],["T_COMMENT","\/\/ printing TranslatableMarkup objects.\n",133],["T_WHITESPACE","    ",134],["T_RETURN","return",134],["T_WHITESPACE"," ",134],["T_NEW","new",134],["T_WHITESPACE"," ",134],["T_STRING","ContextDefinition",134],"(",["T_VARIABLE","$data_type",134],",",["T_WHITESPACE"," ",134],["T_STRING_CAST","(string)",134],["T_WHITESPACE"," ",134],["T_VARIABLE","$label",134],",",["T_WHITESPACE"," ",134],["T_VARIABLE","$required",134],")",";",["T_WHITESPACE","\n  ",134],"}",["T_WHITESPACE","\n\n",135],"}",["T_WHITESPACE","\n",137]]