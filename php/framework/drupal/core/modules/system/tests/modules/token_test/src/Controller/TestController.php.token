[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","token_test",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Controller",3],";",["T_WHITESPACE","\n\n\n",3],["T_USE","use",6],["T_WHITESPACE"," ",6],["T_STRING","Drupal",6],["T_NS_SEPARATOR","\\",6],["T_STRING","Core",6],["T_NS_SEPARATOR","\\",6],["T_STRING","Controller",6],["T_NS_SEPARATOR","\\",6],["T_STRING","ControllerBase",6],";",["T_WHITESPACE","\n",6],["T_USE","use",7],["T_WHITESPACE"," ",7],["T_STRING","Drupal",7],["T_NS_SEPARATOR","\\",7],["T_STRING","Core",7],["T_NS_SEPARATOR","\\",7],["T_STRING","Render",7],["T_NS_SEPARATOR","\\",7],["T_STRING","BubbleableMetadata",7],";",["T_WHITESPACE","\n",7],["T_USE","use",8],["T_WHITESPACE"," ",8],["T_STRING","Drupal",8],["T_NS_SEPARATOR","\\",8],["T_STRING","Core",8],["T_NS_SEPARATOR","\\",8],["T_STRING","Utility",8],["T_NS_SEPARATOR","\\",8],["T_STRING","Token",8],";",["T_WHITESPACE","\n",8],["T_USE","use",9],["T_WHITESPACE"," ",9],["T_STRING","Drupal",9],["T_NS_SEPARATOR","\\",9],["T_STRING","node",9],["T_NS_SEPARATOR","\\",9],["T_STRING","NodeInterface",9],";",["T_WHITESPACE","\n",9],["T_USE","use",10],["T_WHITESPACE"," ",10],["T_STRING","Symfony",10],["T_NS_SEPARATOR","\\",10],["T_STRING","Component",10],["T_NS_SEPARATOR","\\",10],["T_STRING","DependencyInjection",10],["T_NS_SEPARATOR","\\",10],["T_STRING","ContainerInterface",10],";",["T_WHITESPACE","\n\n",10],["T_DOC_COMMENT","\/**\n * Provides a test controller for token replacement.\n *\/",12],["T_WHITESPACE","\n",14],["T_CLASS","class",15],["T_WHITESPACE"," ",15],["T_STRING","TestController",15],["T_WHITESPACE"," ",15],["T_EXTENDS","extends",15],["T_WHITESPACE"," ",15],["T_STRING","ControllerBase",15],["T_WHITESPACE"," ",15],"{",["T_WHITESPACE","\n\n  ",15],["T_DOC_COMMENT","\/**\n   * The token replacement system.\n   *\n   * @var \\Drupal\\Core\\Utility\\Token\n   *\/",17],["T_WHITESPACE","\n  ",21],["T_PROTECTED","protected",22],["T_WHITESPACE"," ",22],["T_VARIABLE","$token",22],";",["T_WHITESPACE","\n\n  ",22],["T_DOC_COMMENT","\/**\n   * Constructs a new TestController instance.\n   *\n   * @param \\Drupal\\Core\\Utility\\Token $token\n   *   The token replacement system.\n   *\/",24],["T_WHITESPACE","\n  ",29],["T_PUBLIC","public",30],["T_WHITESPACE"," ",30],["T_FUNCTION","function",30],["T_WHITESPACE"," ",30],["T_STRING","__construct",30],"(",["T_STRING","Token",30],["T_WHITESPACE"," ",30],["T_VARIABLE","$token",30],")",["T_WHITESPACE"," ",30],"{",["T_WHITESPACE","\n    ",30],["T_VARIABLE","$this",31],["T_OBJECT_OPERATOR","->",31],["T_STRING","token",31],["T_WHITESPACE"," ",31],"=",["T_WHITESPACE"," ",31],["T_VARIABLE","$token",31],";",["T_WHITESPACE","\n  ",31],"}",["T_WHITESPACE","\n\n  ",32],["T_DOC_COMMENT","\/**\n   * {@inheritdoc}\n   *\/",34],["T_WHITESPACE","\n  ",36],["T_PUBLIC","public",37],["T_WHITESPACE"," ",37],["T_STATIC","static",37],["T_WHITESPACE"," ",37],["T_FUNCTION","function",37],["T_WHITESPACE"," ",37],["T_STRING","create",37],"(",["T_STRING","ContainerInterface",37],["T_WHITESPACE"," ",37],["T_VARIABLE","$container",37],")",["T_WHITESPACE"," ",37],"{",["T_WHITESPACE","\n    ",37],["T_RETURN","return",38],["T_WHITESPACE"," ",38],["T_NEW","new",38],["T_WHITESPACE"," ",38],["T_STATIC","static",38],"(",["T_VARIABLE","$container",38],["T_OBJECT_OPERATOR","->",38],["T_STRING","get",38],"(",["T_CONSTANT_ENCAPSED_STRING","'token'",38],")",")",";",["T_WHITESPACE","\n  ",38],"}",["T_WHITESPACE","\n\n  ",39],["T_DOC_COMMENT","\/**\n   * Provides a token replacement with a node as well as the current user.\n   *\n   * This controller passes an explicit bubbleable metadata object to\n   * $this->token->replace(), and applies the collected metadata to the render\n   * array being built.\n   *\n   * @param \\Drupal\\node\\NodeInterface $node\n   *   The node.\n   *\n   * @return array\n   *   The render array.\n   *\/",41],["T_WHITESPACE","\n  ",53],["T_PUBLIC","public",54],["T_WHITESPACE"," ",54],["T_FUNCTION","function",54],["T_WHITESPACE"," ",54],["T_STRING","tokenReplace",54],"(",["T_STRING","NodeInterface",54],["T_WHITESPACE"," ",54],["T_VARIABLE","$node",54],")",["T_WHITESPACE"," ",54],"{",["T_WHITESPACE","\n    ",54],["T_VARIABLE","$bubbleable_metadata",55],["T_WHITESPACE"," ",55],"=",["T_WHITESPACE"," ",55],["T_NEW","new",55],["T_WHITESPACE"," ",55],["T_STRING","BubbleableMetadata",55],"(",")",";",["T_WHITESPACE","\n    ",55],["T_VARIABLE","$build",56],"[",["T_CONSTANT_ENCAPSED_STRING","'#markup'",56],"]",["T_WHITESPACE"," ",56],"=",["T_WHITESPACE"," ",56],["T_VARIABLE","$this",56],["T_OBJECT_OPERATOR","->",56],["T_STRING","token",56],["T_OBJECT_OPERATOR","->",56],["T_STRING","replace",56],"(",["T_CONSTANT_ENCAPSED_STRING","'Tokens: [node:nid] [current-user:uid]'",56],",",["T_WHITESPACE"," ",56],"[",["T_CONSTANT_ENCAPSED_STRING","'node'",56],["T_WHITESPACE"," ",56],["T_DOUBLE_ARROW","=>",56],["T_WHITESPACE"," ",56],["T_VARIABLE","$node",56],"]",",",["T_WHITESPACE"," ",56],"[","]",",",["T_WHITESPACE"," ",56],["T_VARIABLE","$bubbleable_metadata",56],")",";",["T_WHITESPACE","\n    ",56],["T_VARIABLE","$bubbleable_metadata",57],["T_OBJECT_OPERATOR","->",57],["T_STRING","applyTo",57],"(",["T_VARIABLE","$build",57],")",";",["T_WHITESPACE","\n\n    ",57],["T_RETURN","return",59],["T_WHITESPACE"," ",59],["T_VARIABLE","$build",59],";",["T_WHITESPACE","\n  ",59],"}",["T_WHITESPACE","\n\n  ",60],["T_DOC_COMMENT","\/**\n   * Provides a token replacement with a node as well as the current user.\n   *\n   * This controller is for testing the token service's fallback behavior of\n   * applying collected metadata to the currently active render context when an\n   * explicit bubbleable metadata object isn't passed in.\n   *\n   * @param \\Drupal\\node\\NodeInterface $node\n   *   The node.\n   *\n   * @return array\n   *   The render array.\n   *\/",62],["T_WHITESPACE","\n  ",74],["T_PUBLIC","public",75],["T_WHITESPACE"," ",75],["T_FUNCTION","function",75],["T_WHITESPACE"," ",75],["T_STRING","tokenReplaceWithoutPassedBubbleableMetadata",75],"(",["T_STRING","NodeInterface",75],["T_WHITESPACE"," ",75],["T_VARIABLE","$node",75],")",["T_WHITESPACE"," ",75],"{",["T_WHITESPACE","\n    ",75],["T_VARIABLE","$build",76],"[",["T_CONSTANT_ENCAPSED_STRING","'#markup'",76],"]",["T_WHITESPACE"," ",76],"=",["T_WHITESPACE"," ",76],["T_VARIABLE","$this",76],["T_OBJECT_OPERATOR","->",76],["T_STRING","token",76],["T_OBJECT_OPERATOR","->",76],["T_STRING","replace",76],"(",["T_CONSTANT_ENCAPSED_STRING","'Tokens: [node:nid] [current-user:uid]'",76],",",["T_WHITESPACE"," ",76],"[",["T_CONSTANT_ENCAPSED_STRING","'node'",76],["T_WHITESPACE"," ",76],["T_DOUBLE_ARROW","=>",76],["T_WHITESPACE"," ",76],["T_VARIABLE","$node",76],"]",",",["T_WHITESPACE"," ",76],"[","]",")",";",["T_WHITESPACE","\n\n    ",76],["T_RETURN","return",78],["T_WHITESPACE"," ",78],["T_VARIABLE","$build",78],";",["T_WHITESPACE","\n  ",78],"}",["T_WHITESPACE","\n\n",79],"}",["T_WHITESPACE","\n",81]]