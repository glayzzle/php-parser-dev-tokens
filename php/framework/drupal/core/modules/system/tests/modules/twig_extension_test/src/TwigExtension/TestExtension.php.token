[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","twig_extension_test",3],["T_NS_SEPARATOR","\\",3],["T_STRING","TwigExtension",3],";",["T_WHITESPACE","\n\n",3],["T_USE","use",5],["T_WHITESPACE"," ",5],["T_STRING","Drupal",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Core",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Template",5],["T_NS_SEPARATOR","\\",5],["T_STRING","TwigExtension",5],";",["T_WHITESPACE","\n\n",5],["T_DOC_COMMENT","\/**\n * A test Twig extension that adds a custom function and a custom filter.\n *\/",7],["T_WHITESPACE","\n",9],["T_CLASS","class",10],["T_WHITESPACE"," ",10],["T_STRING","TestExtension",10],["T_WHITESPACE"," ",10],["T_EXTENDS","extends",10],["T_WHITESPACE"," ",10],["T_STRING","TwigExtension",10],["T_WHITESPACE"," ",10],"{",["T_WHITESPACE","\n\n  ",10],["T_DOC_COMMENT","\/**\n   * Generates a list of all Twig functions that this extension defines.\n   *\n   * @return array\n   *   A key\/value array that defines custom Twig functions. The key denotes the\n   *   function name used in the tag, e.g.:\n   *   @code\n   *   {{ testfunc() }}\n   *   @endcode\n   *\n   *   The value is a standard PHP callback that defines what the function does.\n   *\/",12],["T_WHITESPACE","\n  ",23],["T_PUBLIC","public",24],["T_WHITESPACE"," ",24],["T_FUNCTION","function",24],["T_WHITESPACE"," ",24],["T_STRING","getFunctions",24],"(",")",["T_WHITESPACE"," ",24],"{",["T_WHITESPACE","\n    ",24],["T_RETURN","return",25],["T_WHITESPACE"," ",25],["T_ARRAY","array",25],"(",["T_WHITESPACE","\n      ",25],["T_CONSTANT_ENCAPSED_STRING","'testfunc'",26],["T_WHITESPACE"," ",26],["T_DOUBLE_ARROW","=>",26],["T_WHITESPACE"," ",26],["T_NEW","new",26],["T_WHITESPACE"," ",26],["T_NS_SEPARATOR","\\",26],["T_STRING","Twig_Function_Function",26],"(",["T_ARRAY","array",26],"(",["T_CONSTANT_ENCAPSED_STRING","'Drupal\\twig_extension_test\\TwigExtension\\TestExtension'",26],",",["T_WHITESPACE"," ",26],["T_CONSTANT_ENCAPSED_STRING","'testFunction'",26],")",")",",",["T_WHITESPACE","\n    ",26],")",";",["T_WHITESPACE","\n  ",27],"}",["T_WHITESPACE","\n\n  ",28],["T_DOC_COMMENT","\/**\n   * Generates a list of all Twig filters that this extension defines.\n   *\n   * @return array\n   *   A key\/value array that defines custom Twig filters. The key denotes the\n   *   filter name used in the tag, e.g.:\n   *   @code\n   *   {{ foo|testfilter }}\n   *   @endcode\n   *\n   *   The value is a standard PHP callback that defines what the filter does.\n   *\/",30],["T_WHITESPACE","\n  ",41],["T_PUBLIC","public",42],["T_WHITESPACE"," ",42],["T_FUNCTION","function",42],["T_WHITESPACE"," ",42],["T_STRING","getFilters",42],"(",")",["T_WHITESPACE"," ",42],"{",["T_WHITESPACE","\n    ",42],["T_RETURN","return",43],["T_WHITESPACE"," ",43],["T_ARRAY","array",43],"(",["T_WHITESPACE","\n      ",43],["T_CONSTANT_ENCAPSED_STRING","'testfilter'",44],["T_WHITESPACE"," ",44],["T_DOUBLE_ARROW","=>",44],["T_WHITESPACE"," ",44],["T_NEW","new",44],["T_WHITESPACE"," ",44],["T_NS_SEPARATOR","\\",44],["T_STRING","Twig_Filter_Function",44],"(",["T_ARRAY","array",44],"(",["T_CONSTANT_ENCAPSED_STRING","'Drupal\\twig_extension_test\\TwigExtension\\TestExtension'",44],",",["T_WHITESPACE"," ",44],["T_CONSTANT_ENCAPSED_STRING","'testFilter'",44],")",")",",",["T_WHITESPACE","\n    ",44],")",";",["T_WHITESPACE","\n  ",45],"}",["T_WHITESPACE","\n\n  ",46],["T_DOC_COMMENT","\/**\n   * Gets a unique identifier for this Twig extension.\n   *\n   * @return string\n   *   A unique identifier for this Twig extension.\n   *\/",48],["T_WHITESPACE","\n  ",53],["T_PUBLIC","public",54],["T_WHITESPACE"," ",54],["T_FUNCTION","function",54],["T_WHITESPACE"," ",54],["T_STRING","getName",54],"(",")",["T_WHITESPACE"," ",54],"{",["T_WHITESPACE","\n    ",54],["T_RETURN","return",55],["T_WHITESPACE"," ",55],["T_CONSTANT_ENCAPSED_STRING","'twig_extension_test.test_extension'",55],";",["T_WHITESPACE","\n  ",55],"}",["T_WHITESPACE","\n\n  ",56],["T_DOC_COMMENT","\/**\n   * Outputs either an uppercase or lowercase test phrase.\n   *\n   * The function generates either an uppercase or lowercase version of the\n   * phrase \"The quick brown fox jumps over the lazy dog 123.\", depending on\n   * whether or not the $upperCase parameter evaluates to TRUE. If $upperCase\n   * evaluates to TRUE, the result will be uppercase, and if it evaluates to\n   * FALSE, the result will be lowercase.\n   *\n   * @param bool $upperCase\n   *   (optional) Whether the result is uppercase (true) or lowercase (false).\n   *\n   * @return string\n   *   The generated string.\n   *\n   * @see \\Drupal\\system\\Tests\\Theme\\TwigExtensionTest::testTwigExtensionFunction()\n   *\/",58],["T_WHITESPACE","\n  ",74],["T_PUBLIC","public",75],["T_WHITESPACE"," ",75],["T_STATIC","static",75],["T_WHITESPACE"," ",75],["T_FUNCTION","function",75],["T_WHITESPACE"," ",75],["T_STRING","testFunction",75],"(",["T_VARIABLE","$upperCase",75],["T_WHITESPACE"," ",75],"=",["T_WHITESPACE"," ",75],["T_STRING","FALSE",75],")",["T_WHITESPACE"," ",75],"{",["T_WHITESPACE","\n    ",75],["T_VARIABLE","$string",76],["T_WHITESPACE"," ",76],"=",["T_WHITESPACE"," ",76],["T_CONSTANT_ENCAPSED_STRING","\"The quick brown box jumps over the lazy dog 123.\"",76],";",["T_WHITESPACE","\n    ",76],["T_IF","if",77],["T_WHITESPACE"," ",77],"(",["T_VARIABLE","$upperCase",77],["T_WHITESPACE"," ",77],["T_IS_EQUAL","==",77],["T_WHITESPACE"," ",77],["T_STRING","TRUE",77],")",["T_WHITESPACE"," ",77],"{",["T_WHITESPACE","\n      ",77],["T_RETURN","return",78],["T_WHITESPACE"," ",78],["T_STRING","strtoupper",78],"(",["T_VARIABLE","$string",78],")",";",["T_WHITESPACE","\n    ",78],"}",["T_WHITESPACE","\n    ",79],["T_ELSE","else",80],["T_WHITESPACE"," ",80],"{",["T_WHITESPACE","\n      ",80],["T_RETURN","return",81],["T_WHITESPACE"," ",81],["T_STRING","strtolower",81],"(",["T_VARIABLE","$string",81],")",";",["T_WHITESPACE","\n    ",81],"}",["T_WHITESPACE","\n  ",82],"}",["T_WHITESPACE","\n\n  ",83],["T_DOC_COMMENT","\/**\n   * Replaces all instances of \"animal\" in a string with \"plant\".\n   *\n   * @param string $string\n   *   The string to be filtered.\n   *\n   * @return string\n   *   The filtered string.\n   *\n   * @see \\Drupal\\system\\Tests\\Theme\\TwigExtensionTest::testTwigExtensionFilter()\n   *\/",85],["T_WHITESPACE","\n  ",95],["T_PUBLIC","public",96],["T_WHITESPACE"," ",96],["T_STATIC","static",96],["T_WHITESPACE"," ",96],["T_FUNCTION","function",96],["T_WHITESPACE"," ",96],["T_STRING","testFilter",96],"(",["T_VARIABLE","$string",96],")",["T_WHITESPACE"," ",96],"{",["T_WHITESPACE","\n    ",96],["T_RETURN","return",97],["T_WHITESPACE"," ",97],["T_STRING","str_replace",97],"(",["T_ARRAY","array",97],"(",["T_CONSTANT_ENCAPSED_STRING","'animal'",97],")",",",["T_WHITESPACE"," ",97],["T_ARRAY","array",97],"(",["T_CONSTANT_ENCAPSED_STRING","'plant'",97],")",",",["T_WHITESPACE"," ",97],["T_VARIABLE","$string",97],")",";",["T_WHITESPACE","\n  ",97],"}",["T_WHITESPACE","\n\n",98],"}",["T_WHITESPACE","\n",100]]