[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","plugin_test",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Plugin",3],["T_NS_SEPARATOR","\\",3],["T_STRING","plugin_test",3],["T_NS_SEPARATOR","\\",3],["T_STRING","mock_block",3],";",["T_WHITESPACE","\n\n",3],["T_USE","use",5],["T_WHITESPACE"," ",5],["T_STRING","Drupal",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Component",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Plugin",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Derivative",5],["T_NS_SEPARATOR","\\",5],["T_STRING","DeriverInterface",5],";",["T_WHITESPACE","\n\n",5],["T_DOC_COMMENT","\/**\n * Mock implementation of DeriverInterface for the mock layout block plugin.\n *\n * @see \\Drupal\\plugin_test\\Plugin\\MockBlockManager\n *\/",7],["T_WHITESPACE","\n",11],["T_CLASS","class",12],["T_WHITESPACE"," ",12],["T_STRING","MockLayoutBlockDeriver",12],["T_WHITESPACE"," ",12],["T_IMPLEMENTS","implements",12],["T_WHITESPACE"," ",12],["T_STRING","DeriverInterface",12],["T_WHITESPACE"," ",12],"{",["T_WHITESPACE","\n\n  ",12],["T_DOC_COMMENT","\/**\n   * {@inheritdoc}\n   *\/",14],["T_WHITESPACE","\n  ",16],["T_PUBLIC","public",17],["T_WHITESPACE"," ",17],["T_FUNCTION","function",17],["T_WHITESPACE"," ",17],["T_STRING","getDerivativeDefinition",17],"(",["T_VARIABLE","$derivative_id",17],",",["T_WHITESPACE"," ",17],["T_VARIABLE","$base_plugin_definition",17],")",["T_WHITESPACE"," ",17],"{",["T_WHITESPACE","\n    ",17],["T_VARIABLE","$derivatives",18],["T_WHITESPACE"," ",18],"=",["T_WHITESPACE"," ",18],["T_VARIABLE","$this",18],["T_OBJECT_OPERATOR","->",18],["T_STRING","getDerivativeDefinitions",18],"(",["T_VARIABLE","$base_plugin_definition",18],")",";",["T_WHITESPACE","\n    ",18],["T_IF","if",19],["T_WHITESPACE"," ",19],"(",["T_ISSET","isset",19],"(",["T_VARIABLE","$derivatives",19],"[",["T_VARIABLE","$derivative_id",19],"]",")",")",["T_WHITESPACE"," ",19],"{",["T_WHITESPACE","\n      ",19],["T_RETURN","return",20],["T_WHITESPACE"," ",20],["T_VARIABLE","$derivatives",20],"[",["T_VARIABLE","$derivative_id",20],"]",";",["T_WHITESPACE","\n    ",20],"}",["T_WHITESPACE","\n  ",21],"}",["T_WHITESPACE","\n\n  ",22],["T_DOC_COMMENT","\/**\n   * {@inheritdoc}\n   *\/",24],["T_WHITESPACE","\n  ",26],["T_PUBLIC","public",27],["T_WHITESPACE"," ",27],["T_FUNCTION","function",27],["T_WHITESPACE"," ",27],["T_STRING","getDerivativeDefinitions",27],"(",["T_VARIABLE","$base_plugin_definition",27],")",["T_WHITESPACE"," ",27],"{",["T_WHITESPACE","\n    ",27],["T_COMMENT","\/\/ This isn't strictly necessary, but it helps reduce clutter in\n",28],["T_WHITESPACE","    ",29],["T_COMMENT","\/\/ DerivativePluginTest::testDerivativeDecorator()'s $expected variable.\n",29],["T_WHITESPACE","    ",30],["T_COMMENT","\/\/ Since derivative definitions don't need further deriving, we remove this\n",30],["T_WHITESPACE","    ",31],["T_COMMENT","\/\/ key from the returned definitions.\n",31],["T_WHITESPACE","    ",32],["T_UNSET","unset",32],"(",["T_VARIABLE","$base_plugin_definition",32],"[",["T_CONSTANT_ENCAPSED_STRING","'deriver'",32],"]",")",";",["T_WHITESPACE","\n\n    ",32],["T_VARIABLE","$derivatives",34],["T_WHITESPACE"," ",34],"=",["T_WHITESPACE"," ",34],["T_ARRAY","array",34],"(",["T_WHITESPACE","\n      ",34],["T_COMMENT","\/\/ Adding a NULL key signifies that the base plugin may also be used in\n",35],["T_WHITESPACE","      ",36],["T_COMMENT","\/\/ addition to the derivatives. In this case, we allow the administrator\n",36],["T_WHITESPACE","      ",37],["T_COMMENT","\/\/ to add a generic layout block to the page.\n",37],["T_WHITESPACE","      ",38],["T_STRING","NULL",38],["T_WHITESPACE"," ",38],["T_DOUBLE_ARROW","=>",38],["T_WHITESPACE"," ",38],["T_VARIABLE","$base_plugin_definition",38],",",["T_WHITESPACE","\n\n      ",38],["T_COMMENT","\/\/ We also allow them to add a customized one. Here, we just mock the\n",40],["T_WHITESPACE","      ",41],["T_COMMENT","\/\/ customized one, but in a real implementation, this would be fetched\n",41],["T_WHITESPACE","      ",42],["T_COMMENT","\/\/ from some \\Drupal::config() object.\n",42],["T_WHITESPACE","      ",43],["T_CONSTANT_ENCAPSED_STRING","'foo'",43],["T_WHITESPACE"," ",43],["T_DOUBLE_ARROW","=>",43],["T_WHITESPACE"," ",43],["T_ARRAY","array",43],"(",["T_WHITESPACE","\n        ",43],["T_CONSTANT_ENCAPSED_STRING","'label'",44],["T_WHITESPACE"," ",44],["T_DOUBLE_ARROW","=>",44],["T_WHITESPACE"," ",44],["T_STRING","t",44],"(",["T_CONSTANT_ENCAPSED_STRING","'Layout Foo'",44],")",",",["T_WHITESPACE","\n      ",44],")",["T_WHITESPACE"," ",45],"+",["T_WHITESPACE"," ",45],["T_VARIABLE","$base_plugin_definition",45],",",["T_WHITESPACE","\n    ",45],")",";",["T_WHITESPACE","\n\n    ",46],["T_RETURN","return",48],["T_WHITESPACE"," ",48],["T_VARIABLE","$derivatives",48],";",["T_WHITESPACE","\n  ",48],"}",["T_WHITESPACE","\n\n",49],"}",["T_WHITESPACE","\n",51]]