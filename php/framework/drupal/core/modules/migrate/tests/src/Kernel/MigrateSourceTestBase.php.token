[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Tests",3],["T_NS_SEPARATOR","\\",3],["T_STRING","migrate",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Kernel",3],";",["T_WHITESPACE","\n\n",3],["T_USE","use",5],["T_WHITESPACE"," ",5],["T_STRING","Drupal",5],["T_NS_SEPARATOR","\\",5],["T_STRING","KernelTests",5],["T_NS_SEPARATOR","\\",5],["T_STRING","KernelTestBase",5],";",["T_WHITESPACE","\n",5],["T_USE","use",6],["T_WHITESPACE"," ",6],["T_STRING","Drupal",6],["T_NS_SEPARATOR","\\",6],["T_STRING","migrate",6],["T_NS_SEPARATOR","\\",6],["T_STRING","Plugin",6],["T_NS_SEPARATOR","\\",6],["T_STRING","MigrateIdMapInterface",6],";",["T_WHITESPACE","\n",6],["T_USE","use",7],["T_WHITESPACE"," ",7],["T_STRING","Drupal",7],["T_NS_SEPARATOR","\\",7],["T_STRING","migrate",7],["T_NS_SEPARATOR","\\",7],["T_STRING","Plugin",7],["T_NS_SEPARATOR","\\",7],["T_STRING","MigrationInterface",7],";",["T_WHITESPACE","\n",7],["T_USE","use",8],["T_WHITESPACE"," ",8],["T_STRING","Drupal",8],["T_NS_SEPARATOR","\\",8],["T_STRING","migrate",8],["T_NS_SEPARATOR","\\",8],["T_STRING","Row",8],";",["T_WHITESPACE","\n\n",8],["T_DOC_COMMENT","\/**\n * Base class for tests of Migrate source plugins.\n *\/",10],["T_WHITESPACE","\n",12],["T_ABSTRACT","abstract",13],["T_WHITESPACE"," ",13],["T_CLASS","class",13],["T_WHITESPACE"," ",13],["T_STRING","MigrateSourceTestBase",13],["T_WHITESPACE"," ",13],["T_EXTENDS","extends",13],["T_WHITESPACE"," ",13],["T_STRING","KernelTestBase",13],["T_WHITESPACE"," ",13],"{",["T_WHITESPACE","\n\n  ",13],["T_DOC_COMMENT","\/**\n   * {@inheritdoc}\n   *\/",15],["T_WHITESPACE","\n  ",17],["T_PUBLIC","public",18],["T_WHITESPACE"," ",18],["T_STATIC","static",18],["T_WHITESPACE"," ",18],["T_VARIABLE","$modules",18],["T_WHITESPACE"," ",18],"=",["T_WHITESPACE"," ",18],"[",["T_CONSTANT_ENCAPSED_STRING","'migrate'",18],"]",";",["T_WHITESPACE","\n\n  ",18],["T_DOC_COMMENT","\/**\n   * The mocked migration.\n   *\n   * @var MigrationInterface|\\Prophecy\\Prophecy\\ObjectProphecy\n   *\/",20],["T_WHITESPACE","\n  ",24],["T_PROTECTED","protected",25],["T_WHITESPACE"," ",25],["T_VARIABLE","$migration",25],";",["T_WHITESPACE","\n\n  ",25],["T_DOC_COMMENT","\/**\n   * The source plugin under test.\n   *\n   * @var \\Drupal\\migrate\\Plugin\\MigrateSourceInterface\n   *\/",27],["T_WHITESPACE","\n  ",31],["T_PROTECTED","protected",32],["T_WHITESPACE"," ",32],["T_VARIABLE","$plugin",32],";",["T_WHITESPACE","\n\n  ",32],["T_DOC_COMMENT","\/**\n   * The data provider.\n   *\n   * @see \\Drupal\\Tests\\migrate\\Kernel\\MigrateSourceTestBase::testSource\n   *\n   * @return array\n   *   Array of data sets to test, each of which is a numerically indexed array\n   *   with the following elements:\n   *   - An array of source data, which can be optionally processed and set up\n   *     by subclasses.\n   *   - An array of expected result rows.\n   *   - (optional) The number of result rows the plugin under test is expected\n   *     to return. If this is not a numeric value, the plugin will not be\n   *     counted.\n   *   - (optional) Array of configuration options for the plugin under test.\n   *\/",34],["T_WHITESPACE","\n  ",49],["T_ABSTRACT","abstract",50],["T_WHITESPACE"," ",50],["T_PUBLIC","public",50],["T_WHITESPACE"," ",50],["T_FUNCTION","function",50],["T_WHITESPACE"," ",50],["T_STRING","providerSource",50],"(",")",";",["T_WHITESPACE","\n\n  ",50],["T_DOC_COMMENT","\/**\n   * {@inheritdoc}\n   *\/",52],["T_WHITESPACE","\n  ",54],["T_PROTECTED","protected",55],["T_WHITESPACE"," ",55],["T_FUNCTION","function",55],["T_WHITESPACE"," ",55],["T_STRING","setUp",55],"(",")",["T_WHITESPACE"," ",55],"{",["T_WHITESPACE","\n    ",55],["T_STRING","parent",56],["T_DOUBLE_COLON","::",56],["T_STRING","setUp",56],"(",")",";",["T_WHITESPACE","\n\n    ",56],["T_COMMENT","\/\/ Create a mock migration. This will be injected into the source plugin\n",58],["T_WHITESPACE","    ",59],["T_COMMENT","\/\/ under test.\n",59],["T_WHITESPACE","    ",60],["T_VARIABLE","$this",60],["T_OBJECT_OPERATOR","->",60],["T_STRING","migration",60],["T_WHITESPACE"," ",60],"=",["T_WHITESPACE"," ",60],["T_VARIABLE","$this",60],["T_OBJECT_OPERATOR","->",60],["T_STRING","prophesize",60],"(",["T_STRING","MigrationInterface",60],["T_DOUBLE_COLON","::",60],["T_CLASS","class",60],")",";",["T_WHITESPACE","\n\n    ",60],["T_VARIABLE","$this",62],["T_OBJECT_OPERATOR","->",62],["T_STRING","migration",62],["T_OBJECT_OPERATOR","->",62],["T_STRING","id",62],"(",")",["T_OBJECT_OPERATOR","->",62],["T_STRING","willReturn",62],"(",["T_WHITESPACE","\n      ",62],["T_VARIABLE","$this",63],["T_OBJECT_OPERATOR","->",63],["T_STRING","randomMachineName",63],"(",["T_LNUMBER","16",63],")",["T_WHITESPACE","\n    ",63],")",";",["T_WHITESPACE","\n    ",64],["T_COMMENT","\/\/ Prophesize a useless ID map plugin and an empty set of destination IDs.\n",65],["T_WHITESPACE","    ",66],["T_COMMENT","\/\/ Calling code can override these prophecies later and set up different\n",66],["T_WHITESPACE","    ",67],["T_COMMENT","\/\/ behaviors.\n",67],["T_WHITESPACE","    ",68],["T_VARIABLE","$this",68],["T_OBJECT_OPERATOR","->",68],["T_STRING","migration",68],["T_OBJECT_OPERATOR","->",68],["T_STRING","getIdMap",68],"(",")",["T_OBJECT_OPERATOR","->",68],["T_STRING","willReturn",68],"(",["T_WHITESPACE","\n      ",68],["T_VARIABLE","$this",69],["T_OBJECT_OPERATOR","->",69],["T_STRING","prophesize",69],"(",["T_STRING","MigrateIdMapInterface",69],["T_DOUBLE_COLON","::",69],["T_CLASS","class",69],")",["T_OBJECT_OPERATOR","->",69],["T_STRING","reveal",69],"(",")",["T_WHITESPACE","\n    ",69],")",";",["T_WHITESPACE","\n    ",70],["T_VARIABLE","$this",71],["T_OBJECT_OPERATOR","->",71],["T_STRING","migration",71],["T_OBJECT_OPERATOR","->",71],["T_STRING","getDestinationIds",71],"(",")",["T_OBJECT_OPERATOR","->",71],["T_STRING","willReturn",71],"(","[","]",")",";",["T_WHITESPACE","\n  ",71],"}",["T_WHITESPACE","\n\n  ",72],["T_DOC_COMMENT","\/**\n   * Determines the plugin to be tested by reading the class @covers annotation.\n   *\n   * @return string\n   *\/",74],["T_WHITESPACE","\n  ",78],["T_PROTECTED","protected",79],["T_WHITESPACE"," ",79],["T_FUNCTION","function",79],["T_WHITESPACE"," ",79],["T_STRING","getPluginClass",79],"(",")",["T_WHITESPACE"," ",79],"{",["T_WHITESPACE","\n    ",79],["T_VARIABLE","$annotations",80],["T_WHITESPACE"," ",80],"=",["T_WHITESPACE"," ",80],["T_VARIABLE","$this",80],["T_OBJECT_OPERATOR","->",80],["T_STRING","getAnnotations",80],"(",")",";",["T_WHITESPACE","\n\n    ",80],["T_IF","if",82],["T_WHITESPACE"," ",82],"(",["T_ISSET","isset",82],"(",["T_VARIABLE","$annotations",82],"[",["T_CONSTANT_ENCAPSED_STRING","'class'",82],"]","[",["T_CONSTANT_ENCAPSED_STRING","'covers'",82],"]",")",")",["T_WHITESPACE"," ",82],"{",["T_WHITESPACE","\n      ",82],["T_RETURN","return",83],["T_WHITESPACE"," ",83],["T_VARIABLE","$annotations",83],"[",["T_CONSTANT_ENCAPSED_STRING","'class'",83],"]","[",["T_CONSTANT_ENCAPSED_STRING","'covers'",83],"]","[",["T_LNUMBER","0",83],"]",";",["T_WHITESPACE","\n    ",83],"}",["T_WHITESPACE","\n    ",84],["T_ELSE","else",85],["T_WHITESPACE"," ",85],"{",["T_WHITESPACE","\n      ",85],["T_VARIABLE","$this",86],["T_OBJECT_OPERATOR","->",86],["T_STRING","fail",86],"(",["T_CONSTANT_ENCAPSED_STRING","'No plugin class was specified'",86],")",";",["T_WHITESPACE","\n    ",86],"}",["T_WHITESPACE","\n  ",87],"}",["T_WHITESPACE","\n\n  ",88],["T_DOC_COMMENT","\/**\n   * Instantiates the source plugin under test.\n   *\n   * @param array $configuration\n   *   The source plugin configuration.\n   *\n   * @return \\Drupal\\migrate\\Plugin\\MigrateSourceInterface|object\n   *   The fully configured source plugin.\n   *\/",90],["T_WHITESPACE","\n  ",98],["T_PROTECTED","protected",99],["T_WHITESPACE"," ",99],["T_FUNCTION","function",99],["T_WHITESPACE"," ",99],["T_STRING","getPlugin",99],"(",["T_ARRAY","array",99],["T_WHITESPACE"," ",99],["T_VARIABLE","$configuration",99],")",["T_WHITESPACE"," ",99],"{",["T_WHITESPACE","\n    ",99],["T_COMMENT","\/\/ Only create the plugin once per test.\n",100],["T_WHITESPACE","    ",101],["T_IF","if",101],["T_WHITESPACE"," ",101],"(",["T_VARIABLE","$this",101],["T_OBJECT_OPERATOR","->",101],["T_STRING","plugin",101],")",["T_WHITESPACE"," ",101],"{",["T_WHITESPACE","\n      ",101],["T_RETURN","return",102],["T_WHITESPACE"," ",102],["T_VARIABLE","$this",102],["T_OBJECT_OPERATOR","->",102],["T_STRING","plugin",102],";",["T_WHITESPACE","\n    ",102],"}",["T_WHITESPACE","\n\n    ",103],["T_VARIABLE","$class",105],["T_WHITESPACE"," ",105],"=",["T_WHITESPACE"," ",105],["T_STRING","ltrim",105],"(",["T_VARIABLE","$this",105],["T_OBJECT_OPERATOR","->",105],["T_STRING","getPluginClass",105],"(",")",",",["T_WHITESPACE"," ",105],["T_CONSTANT_ENCAPSED_STRING","'\\\\'",105],")",";",["T_WHITESPACE","\n\n    ",105],["T_DOC_COMMENT","\/** @var \\Drupal\\migrate\\Plugin\\MigratePluginManager $plugin_manager *\/",107],["T_WHITESPACE","\n    ",107],["T_VARIABLE","$plugin_manager",108],["T_WHITESPACE"," ",108],"=",["T_WHITESPACE"," ",108],["T_VARIABLE","$this",108],["T_OBJECT_OPERATOR","->",108],["T_STRING","container",108],["T_OBJECT_OPERATOR","->",108],["T_STRING","get",108],"(",["T_CONSTANT_ENCAPSED_STRING","'plugin.manager.migrate.source'",108],")",";",["T_WHITESPACE","\n\n    ",108],["T_FOREACH","foreach",110],["T_WHITESPACE"," ",110],"(",["T_VARIABLE","$plugin_manager",110],["T_OBJECT_OPERATOR","->",110],["T_STRING","getDefinitions",110],"(",")",["T_WHITESPACE"," ",110],["T_AS","as",110],["T_WHITESPACE"," ",110],["T_VARIABLE","$id",110],["T_WHITESPACE"," ",110],["T_DOUBLE_ARROW","=>",110],["T_WHITESPACE"," ",110],["T_VARIABLE","$definition",110],")",["T_WHITESPACE"," ",110],"{",["T_WHITESPACE","\n      ",110],["T_IF","if",111],["T_WHITESPACE"," ",111],"(",["T_STRING","ltrim",111],"(",["T_VARIABLE","$definition",111],"[",["T_CONSTANT_ENCAPSED_STRING","'class'",111],"]",",",["T_WHITESPACE"," ",111],["T_CONSTANT_ENCAPSED_STRING","'\\\\'",111],")",["T_WHITESPACE"," ",111],["T_IS_EQUAL","==",111],["T_WHITESPACE"," ",111],["T_VARIABLE","$class",111],")",["T_WHITESPACE"," ",111],"{",["T_WHITESPACE","\n        ",111],["T_VARIABLE","$this",112],["T_OBJECT_OPERATOR","->",112],["T_STRING","plugin",112],["T_WHITESPACE"," ",112],"=",["T_WHITESPACE"," ",112],["T_VARIABLE","$plugin_manager",112],["T_WHITESPACE","\n          ",112],["T_OBJECT_OPERATOR","->",113],["T_STRING","createInstance",113],"(",["T_VARIABLE","$id",113],",",["T_WHITESPACE"," ",113],["T_VARIABLE","$configuration",113],",",["T_WHITESPACE"," ",113],["T_VARIABLE","$this",113],["T_OBJECT_OPERATOR","->",113],["T_STRING","migration",113],["T_OBJECT_OPERATOR","->",113],["T_STRING","reveal",113],"(",")",")",";",["T_WHITESPACE","\n\n        ",113],["T_VARIABLE","$this",115],["T_OBJECT_OPERATOR","->",115],["T_STRING","migration",115],["T_WHITESPACE","\n          ",115],["T_OBJECT_OPERATOR","->",116],["T_STRING","getSourcePlugin",116],"(",")",["T_WHITESPACE","\n          ",116],["T_OBJECT_OPERATOR","->",117],["T_STRING","willReturn",117],"(",["T_VARIABLE","$this",117],["T_OBJECT_OPERATOR","->",117],["T_STRING","plugin",117],")",";",["T_WHITESPACE","\n\n        ",117],["T_RETURN","return",119],["T_WHITESPACE"," ",119],["T_VARIABLE","$this",119],["T_OBJECT_OPERATOR","->",119],["T_STRING","plugin",119],";",["T_WHITESPACE","\n      ",119],"}",["T_WHITESPACE","\n    ",120],"}",["T_WHITESPACE","\n    ",121],["T_VARIABLE","$this",122],["T_OBJECT_OPERATOR","->",122],["T_STRING","fail",122],"(",["T_CONSTANT_ENCAPSED_STRING","'No plugin found for class '",122],["T_WHITESPACE"," ",122],".",["T_WHITESPACE"," ",122],["T_VARIABLE","$class",122],")",";",["T_WHITESPACE","\n  ",122],"}",["T_WHITESPACE","\n\n  ",123],["T_DOC_COMMENT","\/**\n   * Tests the source plugin against a particular data set.\n   *\n   * @param array $source_data\n   *   The source data that the source plugin will read.\n   * @param array $expected_data\n   *   The result rows the source plugin is expected to return.\n   * @param mixed $expected_count\n   *   (optional) How many rows the source plugin is expected to return.\n   *   Defaults to count($expected_data). If set to a non-null, non-numeric\n   *   value (like FALSE or 'nope'), the source plugin will not be counted.\n   * @param array $configuration\n   *   (optional) Configuration for the source plugin.\n   *\n   * @dataProvider providerSource\n   *\/",125],["T_WHITESPACE","\n  ",140],["T_PUBLIC","public",141],["T_WHITESPACE"," ",141],["T_FUNCTION","function",141],["T_WHITESPACE"," ",141],["T_STRING","testSource",141],"(",["T_ARRAY","array",141],["T_WHITESPACE"," ",141],["T_VARIABLE","$source_data",141],",",["T_WHITESPACE"," ",141],["T_ARRAY","array",141],["T_WHITESPACE"," ",141],["T_VARIABLE","$expected_data",141],",",["T_WHITESPACE"," ",141],["T_VARIABLE","$expected_count",141],["T_WHITESPACE"," ",141],"=",["T_WHITESPACE"," ",141],["T_STRING","NULL",141],",",["T_WHITESPACE"," ",141],["T_ARRAY","array",141],["T_WHITESPACE"," ",141],["T_VARIABLE","$configuration",141],["T_WHITESPACE"," ",141],"=",["T_WHITESPACE"," ",141],"[","]",")",["T_WHITESPACE"," ",141],"{",["T_WHITESPACE","\n    ",141],["T_VARIABLE","$plugin",142],["T_WHITESPACE"," ",142],"=",["T_WHITESPACE"," ",142],["T_VARIABLE","$this",142],["T_OBJECT_OPERATOR","->",142],["T_STRING","getPlugin",142],"(",["T_VARIABLE","$configuration",142],")",";",["T_WHITESPACE","\n\n    ",142],["T_COMMENT","\/\/ All source plugins must define IDs.\n",144],["T_WHITESPACE","    ",145],["T_VARIABLE","$this",145],["T_OBJECT_OPERATOR","->",145],["T_STRING","assertNotEmpty",145],"(",["T_VARIABLE","$plugin",145],["T_OBJECT_OPERATOR","->",145],["T_STRING","getIds",145],"(",")",")",";",["T_WHITESPACE","\n\n    ",145],["T_IF","if",147],["T_WHITESPACE"," ",147],"(",["T_STRING","is_null",147],"(",["T_VARIABLE","$expected_count",147],")",")",["T_WHITESPACE"," ",147],"{",["T_WHITESPACE","\n      ",147],["T_VARIABLE","$expected_count",148],["T_WHITESPACE"," ",148],"=",["T_WHITESPACE"," ",148],["T_STRING","count",148],"(",["T_VARIABLE","$expected_data",148],")",";",["T_WHITESPACE","\n    ",148],"}",["T_WHITESPACE","\n    ",149],["T_COMMENT","\/\/ If an expected count was given, assert it only if the plugin is\n",150],["T_WHITESPACE","    ",151],["T_COMMENT","\/\/ countable.\n",151],["T_WHITESPACE","    ",152],["T_IF","if",152],["T_WHITESPACE"," ",152],"(",["T_STRING","is_numeric",152],"(",["T_VARIABLE","$expected_count",152],")",")",["T_WHITESPACE"," ",152],"{",["T_WHITESPACE","\n      ",152],["T_VARIABLE","$this",153],["T_OBJECT_OPERATOR","->",153],["T_STRING","assertInstanceOf",153],"(",["T_CONSTANT_ENCAPSED_STRING","'\\Countable'",153],",",["T_WHITESPACE"," ",153],["T_VARIABLE","$plugin",153],")",";",["T_WHITESPACE","\n      ",153],["T_VARIABLE","$this",154],["T_OBJECT_OPERATOR","->",154],["T_STRING","assertCount",154],"(",["T_VARIABLE","$expected_count",154],",",["T_WHITESPACE"," ",154],["T_VARIABLE","$plugin",154],")",";",["T_WHITESPACE","\n    ",154],"}",["T_WHITESPACE","\n\n    ",155],["T_VARIABLE","$i",157],["T_WHITESPACE"," ",157],"=",["T_WHITESPACE"," ",157],["T_LNUMBER","0",157],";",["T_WHITESPACE","\n    ",157],["T_DOC_COMMENT","\/** @var \\Drupal\\migrate\\Row $row *\/",158],["T_WHITESPACE","\n    ",158],["T_FOREACH","foreach",159],["T_WHITESPACE"," ",159],"(",["T_VARIABLE","$plugin",159],["T_WHITESPACE"," ",159],["T_AS","as",159],["T_WHITESPACE"," ",159],["T_VARIABLE","$row",159],")",["T_WHITESPACE"," ",159],"{",["T_WHITESPACE","\n      ",159],["T_VARIABLE","$this",160],["T_OBJECT_OPERATOR","->",160],["T_STRING","assertInstanceOf",160],"(",["T_STRING","Row",160],["T_DOUBLE_COLON","::",160],["T_CLASS","class",160],",",["T_WHITESPACE"," ",160],["T_VARIABLE","$row",160],")",";",["T_WHITESPACE","\n\n      ",160],["T_VARIABLE","$expected",162],["T_WHITESPACE"," ",162],"=",["T_WHITESPACE"," ",162],["T_VARIABLE","$expected_data",162],"[",["T_VARIABLE","$i",162],["T_INC","++",162],"]",";",["T_WHITESPACE","\n      ",162],["T_VARIABLE","$actual",163],["T_WHITESPACE"," ",163],"=",["T_WHITESPACE"," ",163],["T_VARIABLE","$row",163],["T_OBJECT_OPERATOR","->",163],["T_STRING","getSource",163],"(",")",";",["T_WHITESPACE","\n\n      ",163],["T_FOREACH","foreach",165],["T_WHITESPACE"," ",165],"(",["T_VARIABLE","$expected",165],["T_WHITESPACE"," ",165],["T_AS","as",165],["T_WHITESPACE"," ",165],["T_VARIABLE","$key",165],["T_WHITESPACE"," ",165],["T_DOUBLE_ARROW","=>",165],["T_WHITESPACE"," ",165],["T_VARIABLE","$value",165],")",["T_WHITESPACE"," ",165],"{",["T_WHITESPACE","\n        ",165],["T_VARIABLE","$this",166],["T_OBJECT_OPERATOR","->",166],["T_STRING","assertArrayHasKey",166],"(",["T_VARIABLE","$key",166],",",["T_WHITESPACE"," ",166],["T_VARIABLE","$actual",166],")",";",["T_WHITESPACE","\n\n        ",166],["T_IF","if",168],["T_WHITESPACE"," ",168],"(",["T_STRING","is_array",168],"(",["T_VARIABLE","$value",168],")",")",["T_WHITESPACE"," ",168],"{",["T_WHITESPACE","\n          ",168],["T_STRING","ksort",169],"(",["T_VARIABLE","$value",169],")",";",["T_WHITESPACE","\n          ",169],["T_STRING","ksort",170],"(",["T_VARIABLE","$actual",170],"[",["T_VARIABLE","$key",170],"]",")",";",["T_WHITESPACE","\n          ",170],["T_VARIABLE","$this",171],["T_OBJECT_OPERATOR","->",171],["T_STRING","assertEquals",171],"(",["T_VARIABLE","$value",171],",",["T_WHITESPACE"," ",171],["T_VARIABLE","$actual",171],"[",["T_VARIABLE","$key",171],"]",")",";",["T_WHITESPACE","\n        ",171],"}",["T_WHITESPACE","\n        ",172],["T_ELSE","else",173],["T_WHITESPACE"," ",173],"{",["T_WHITESPACE","\n          ",173],["T_VARIABLE","$this",174],["T_OBJECT_OPERATOR","->",174],["T_STRING","assertSame",174],"(",["T_STRING_CAST","(string)",174],["T_WHITESPACE"," ",174],["T_VARIABLE","$value",174],",",["T_WHITESPACE"," ",174],["T_STRING_CAST","(string)",174],["T_WHITESPACE"," ",174],["T_VARIABLE","$actual",174],"[",["T_VARIABLE","$key",174],"]",")",";",["T_WHITESPACE","\n        ",174],"}",["T_WHITESPACE","\n      ",175],"}",["T_WHITESPACE","\n    ",176],"}",["T_WHITESPACE","\n  ",177],"}",["T_WHITESPACE","\n\n",178],"}",["T_WHITESPACE","\n",180]]