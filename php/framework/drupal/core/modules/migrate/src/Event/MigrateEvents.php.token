[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","migrate",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Event",3],";",["T_WHITESPACE","\n\n",3],["T_DOC_COMMENT","\/**\n * Defines events for the migration system.\n *\n * @see \\Drupal\\migrate\\Event\\MigrateMapSaveEvent\n * @see \\Drupal\\migrate\\Event\\MigrateMapDeleteEvent\n * @see \\Drupal\\migrate\\Event\\MigrateImportEvent\n * @see \\Drupal\\migrate\\Event\\MigratePreRowSaveEvent\n * @see \\Drupal\\migrate\\Event\\MigratePostRowSaveEvent\n * @see \\Drupal\\migrate\\Event\\MigrateRollbackEvent\n * @see \\Drupal\\migrate\\Event\\MigrateRowDeleteEvent\n * @see \\Drupal\\migrate\\Event\\MigrateIdMapMessageEvent\n *\/",5],["T_WHITESPACE","\n",16],["T_FINAL","final",17],["T_WHITESPACE"," ",17],["T_CLASS","class",17],["T_WHITESPACE"," ",17],["T_STRING","MigrateEvents",17],["T_WHITESPACE"," ",17],"{",["T_WHITESPACE","\n\n  ",17],["T_DOC_COMMENT","\/**\n   * Name of the event fired when saving to a migration's map.\n   *\n   * This event allows modules to perform an action whenever the disposition of\n   * an item being migrated is saved to the map table. The event listener method\n   * receives a \\Drupal\\migrate\\Event\\MigrateMapSaveEvent instance.\n   *\n   * @Event\n   *\n   * @see \\Drupal\\migrate\\Event\\MigrateMapSaveEvent\n   *\n   * @var string\n   *\/",19],["T_WHITESPACE","\n  ",31],["T_CONST","const",32],["T_WHITESPACE"," ",32],["T_STRING","MAP_SAVE",32],["T_WHITESPACE"," ",32],"=",["T_WHITESPACE"," ",32],["T_CONSTANT_ENCAPSED_STRING","'migrate.map_save'",32],";",["T_WHITESPACE","\n\n  ",32],["T_DOC_COMMENT","\/**\n   * Name of the event fired when removing an entry from a migration's map.\n   *\n   * This event allows modules to perform an action whenever a row is deleted\n   * from a migration's map table (implying it has been rolled back). The event\n   * listener method receives a \\Drupal\\migrate\\Event\\MigrateMapDeleteEvent instance.\n   *\n   * @Event\n   *\n   * @see \\Drupal\\migrate\\Event\\MigrateMapDeleteEvent\n   *\n   * @var string\n   *\/",34],["T_WHITESPACE","\n  ",46],["T_CONST","const",47],["T_WHITESPACE"," ",47],["T_STRING","MAP_DELETE",47],["T_WHITESPACE"," ",47],"=",["T_WHITESPACE"," ",47],["T_CONSTANT_ENCAPSED_STRING","'migrate.map_delete'",47],";",["T_WHITESPACE","\n\n  ",47],["T_DOC_COMMENT","\/**\n   * Name of the event fired when beginning a migration import operation.\n   *\n   * This event allows modules to perform an action whenever a migration import\n   * operation is about to begin. The event listener method receives a\n   * \\Drupal\\migrate\\Event\\MigrateImportEvent instance.\n   *\n   * @Event\n   *\n   * @see \\Drupal\\migrate\\Event\\MigrateImportEvent\n   *\n   * @var string\n   *\/",49],["T_WHITESPACE","\n  ",61],["T_CONST","const",62],["T_WHITESPACE"," ",62],["T_STRING","PRE_IMPORT",62],["T_WHITESPACE"," ",62],"=",["T_WHITESPACE"," ",62],["T_CONSTANT_ENCAPSED_STRING","'migrate.pre_import'",62],";",["T_WHITESPACE","\n\n  ",62],["T_DOC_COMMENT","\/**\n   * Name of the event fired when finishing a migration import operation.\n   *\n   * This event allows modules to perform an action whenever a migration import\n   * operation is completing. The event listener method receives a\n   * \\Drupal\\migrate\\Event\\MigrateImportEvent instance.\n   *\n   * @Event\n   *\n   * @see \\Drupal\\migrate\\Event\\MigrateImportEvent\n   *\n   * @var string\n   *\/",64],["T_WHITESPACE","\n  ",76],["T_CONST","const",77],["T_WHITESPACE"," ",77],["T_STRING","POST_IMPORT",77],["T_WHITESPACE"," ",77],"=",["T_WHITESPACE"," ",77],["T_CONSTANT_ENCAPSED_STRING","'migrate.post_import'",77],";",["T_WHITESPACE","\n\n  ",77],["T_DOC_COMMENT","\/**\n   * Name of the event fired when about to import a single item.\n   *\n   * This event allows modules to perform an action whenever a specific item\n   * is about to be saved by the destination plugin. The event listener method\n   * receives a \\Drupal\\migrate\\Event\\MigratePreRowSaveEvent instance.\n   *\n   * @Event\n   *\n   * @see \\Drupal\\migrate\\Event\\MigratePreRowSaveEvent\n   *\n   * @var string\n   *\/",79],["T_WHITESPACE","\n  ",91],["T_CONST","const",92],["T_WHITESPACE"," ",92],["T_STRING","PRE_ROW_SAVE",92],["T_WHITESPACE"," ",92],"=",["T_WHITESPACE"," ",92],["T_CONSTANT_ENCAPSED_STRING","'migrate.pre_row_save'",92],";",["T_WHITESPACE","\n\n  ",92],["T_DOC_COMMENT","\/**\n   * Name of the event fired just after a single item has been imported.\n   *\n   * This event allows modules to perform an action whenever a specific item\n   * has been saved by the destination plugin. The event listener method\n   * receives a \\Drupal\\migrate\\Event\\MigratePostRowSaveEvent instance.\n   *\n   * @Event\n   *\n   * @see \\Drupal\\migrate\\Event\\MigratePostRowSaveEvent\n   *\n   * @var string\n   *\/",94],["T_WHITESPACE","\n  ",106],["T_CONST","const",107],["T_WHITESPACE"," ",107],["T_STRING","POST_ROW_SAVE",107],["T_WHITESPACE"," ",107],"=",["T_WHITESPACE"," ",107],["T_CONSTANT_ENCAPSED_STRING","'migrate.post_row_save'",107],";",["T_WHITESPACE","\n\n  ",107],["T_DOC_COMMENT","\/**\n   * Name of the event fired when beginning a migration rollback operation.\n   *\n   * This event allows modules to perform an action whenever a migration\n   * rollback operation is about to begin. The event listener method receives a\n   * \\Drupal\\migrate\\Event\\MigrateRollbackEvent instance.\n   *\n   * @Event\n   *\n   * @see \\Drupal\\migrate\\Event\\MigrateRollbackEvent\n   *\n   * @var string\n   *\/",109],["T_WHITESPACE","\n  ",121],["T_CONST","const",122],["T_WHITESPACE"," ",122],["T_STRING","PRE_ROLLBACK",122],["T_WHITESPACE"," ",122],"=",["T_WHITESPACE"," ",122],["T_CONSTANT_ENCAPSED_STRING","'migrate.pre_rollback'",122],";",["T_WHITESPACE","\n\n  ",122],["T_DOC_COMMENT","\/**\n   * Name of the event fired when finishing a migration rollback operation.\n   *\n   * This event allows modules to perform an action whenever a migration\n   * rollback operation is completing. The event listener method receives a\n   * \\Drupal\\migrate\\Event\\MigrateRollbackEvent instance.\n   *\n   * @Event\n   *\n   * @see \\Drupal\\migrate\\Event\\MigrateRollbackEvent\n   *\n   * @var string\n   *\/",124],["T_WHITESPACE","\n  ",136],["T_CONST","const",137],["T_WHITESPACE"," ",137],["T_STRING","POST_ROLLBACK",137],["T_WHITESPACE"," ",137],"=",["T_WHITESPACE"," ",137],["T_CONSTANT_ENCAPSED_STRING","'migrate.post_rollback'",137],";",["T_WHITESPACE","\n\n  ",137],["T_DOC_COMMENT","\/**\n   * Name of the event fired when about to delete a single item.\n   *\n   * This event allows modules to perform an action whenever a specific item\n   * is about to be deleted by the destination plugin. The event listener method\n   * receives a \\Drupal\\migrate\\Event\\MigrateRowDeleteEvent instance.\n   *\n   * @Event\n   *\n   * @see \\Drupal\\migrate\\Event\\MigrateRowDeleteEvent\n   *\n   * @var string\n   *\/",139],["T_WHITESPACE","\n  ",151],["T_CONST","const",152],["T_WHITESPACE"," ",152],["T_STRING","PRE_ROW_DELETE",152],["T_WHITESPACE"," ",152],"=",["T_WHITESPACE"," ",152],["T_CONSTANT_ENCAPSED_STRING","'migrate.pre_row_delete'",152],";",["T_WHITESPACE","\n\n  ",152],["T_DOC_COMMENT","\/**\n   * Name of the event fired just after a single item has been deleted.\n   *\n   * This event allows modules to perform an action whenever a specific item\n   * has been deleted by the destination plugin. The event listener method\n   * receives a \\Drupal\\migrate\\Event\\MigrateRowDeleteEvent instance.\n   *\n   * @Event\n   *\n   * @see \\Drupal\\migrate\\Event\\MigrateRowDeleteEvent\n   *\n   * @var string\n   *\/",154],["T_WHITESPACE","\n  ",166],["T_CONST","const",167],["T_WHITESPACE"," ",167],["T_STRING","POST_ROW_DELETE",167],["T_WHITESPACE"," ",167],"=",["T_WHITESPACE"," ",167],["T_CONSTANT_ENCAPSED_STRING","'migrate.post_row_delete'",167],";",["T_WHITESPACE","\n\n  ",167],["T_DOC_COMMENT","\/**\n   * Name of the event fired when saving a message to the idmap.\n   *\n   * This event allows modules to perform an action whenever a message is being\n   * logged by the idmap. The event listener method\n   * receives a \\Drupal\\migrate\\Event\\MigrateIdMapMessageEvent instance.\n   *\n   * @Event\n   *\n   * @see \\Drupal\\migrate\\Event\\MigrateIdMapMessageEvent\n   *\n   * @var string\n   *\/",169],["T_WHITESPACE","\n  ",181],["T_CONST","const",182],["T_WHITESPACE"," ",182],["T_STRING","IDMAP_MESSAGE",182],["T_WHITESPACE"," ",182],"=",["T_WHITESPACE"," ",182],["T_CONSTANT_ENCAPSED_STRING","'migrate.idmap_message'",182],";",["T_WHITESPACE","\n\n",182],"}",["T_WHITESPACE","\n",184]]