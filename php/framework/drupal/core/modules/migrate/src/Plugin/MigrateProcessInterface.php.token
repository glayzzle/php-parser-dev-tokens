[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","migrate",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Plugin",3],";",["T_WHITESPACE","\n\n",3],["T_USE","use",5],["T_WHITESPACE"," ",5],["T_STRING","Drupal",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Component",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Plugin",5],["T_NS_SEPARATOR","\\",5],["T_STRING","PluginInspectionInterface",5],";",["T_WHITESPACE","\n",5],["T_USE","use",6],["T_WHITESPACE"," ",6],["T_STRING","Drupal",6],["T_NS_SEPARATOR","\\",6],["T_STRING","migrate",6],["T_NS_SEPARATOR","\\",6],["T_STRING","MigrateExecutableInterface",6],";",["T_WHITESPACE","\n",6],["T_USE","use",7],["T_WHITESPACE"," ",7],["T_STRING","Drupal",7],["T_NS_SEPARATOR","\\",7],["T_STRING","migrate",7],["T_NS_SEPARATOR","\\",7],["T_STRING","Row",7],";",["T_WHITESPACE","\n\n",7],["T_DOC_COMMENT","\/**\n * An interface for migrate process plugins.\n *\n * A process plugin can use any number of methods instead of (but not in\n * addition to) transform with the same arguments and then the plugin\n * configuration needs to provide the name of the method to be called via the\n * \"method\" key. See \\Drupal\\migrate\\Plugin\\migrate\\process\\SkipOnEmpty and\n * migrate.migration.d6_field_instance_widget_settings.yml for examples.\n *\n * @see \\Drupal\\migrate\\Plugin\\MigratePluginManager\n * @see \\Drupal\\migrate\\ProcessPluginBase\n * @see \\Drupal\\migrate\\Annotation\\MigrateProcessPlugin\n * @see plugin_api\n *\n * @ingroup migration\n *\/",9],["T_WHITESPACE","\n",24],["T_INTERFACE","interface",25],["T_WHITESPACE"," ",25],["T_STRING","MigrateProcessInterface",25],["T_WHITESPACE"," ",25],["T_EXTENDS","extends",25],["T_WHITESPACE"," ",25],["T_STRING","PluginInspectionInterface",25],["T_WHITESPACE"," ",25],"{",["T_WHITESPACE","\n\n  ",25],["T_DOC_COMMENT","\/**\n   * Performs the associated process.\n   *\n   * @param mixed $value\n   *   The value to be transformed.\n   * @param \\Drupal\\migrate\\MigrateExecutableInterface $migrate_executable\n   *   The migration in which this process is being executed.\n   * @param \\Drupal\\migrate\\Row $row\n   *   The row from the source to process. Normally, just transforming the value\n   *   is adequate but very rarely you might need to change two columns at the\n   *   same time or something like that.\n   * @param string $destination_property\n   *   The destination property currently worked on. This is only used together\n   *   with the $row above.\n   *\n   * @return string|array\n   *   The newly transformed value.\n   *\/",27],["T_WHITESPACE","\n  ",44],["T_PUBLIC","public",45],["T_WHITESPACE"," ",45],["T_FUNCTION","function",45],["T_WHITESPACE"," ",45],["T_STRING","transform",45],"(",["T_VARIABLE","$value",45],",",["T_WHITESPACE"," ",45],["T_STRING","MigrateExecutableInterface",45],["T_WHITESPACE"," ",45],["T_VARIABLE","$migrate_executable",45],",",["T_WHITESPACE"," ",45],["T_STRING","Row",45],["T_WHITESPACE"," ",45],["T_VARIABLE","$row",45],",",["T_WHITESPACE"," ",45],["T_VARIABLE","$destination_property",45],")",";",["T_WHITESPACE","\n\n  ",45],["T_DOC_COMMENT","\/**\n   * Indicates whether the returned value requires multiple handling.\n   *\n   * @return bool\n   *   TRUE when the returned value contains a list of values to be processed.\n   *   For example, when the 'source' property is a string and the value found\n   *   is an array.\n   *\/",47],["T_WHITESPACE","\n  ",54],["T_PUBLIC","public",55],["T_WHITESPACE"," ",55],["T_FUNCTION","function",55],["T_WHITESPACE"," ",55],["T_STRING","multiple",55],"(",")",";",["T_WHITESPACE","\n\n",55],"}",["T_WHITESPACE","\n",57]]