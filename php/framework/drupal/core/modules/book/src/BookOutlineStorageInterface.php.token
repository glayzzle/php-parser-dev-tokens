[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","book",3],";",["T_WHITESPACE","\n\n",3],["T_DOC_COMMENT","\/**\n * Defines a common interface for book outline storage classes.\n *\/",5],["T_WHITESPACE","\n",7],["T_INTERFACE","interface",8],["T_WHITESPACE"," ",8],["T_STRING","BookOutlineStorageInterface",8],["T_WHITESPACE"," ",8],"{",["T_WHITESPACE","\n\n  ",8],["T_DOC_COMMENT","\/**\n   * Gets books (the highest positioned book links).\n   *\n   * @return array\n   *   An array of book IDs.\n   *\/",10],["T_WHITESPACE","\n  ",15],["T_PUBLIC","public",16],["T_WHITESPACE"," ",16],["T_FUNCTION","function",16],["T_WHITESPACE"," ",16],["T_STRING","getBooks",16],"(",")",";",["T_WHITESPACE","\n\n  ",16],["T_DOC_COMMENT","\/**\n   * Checks if there are any books.\n   *\n   * @return bool\n   *   TRUE if there are books, FALSE if not.\n   *\/",18],["T_WHITESPACE","\n  ",23],["T_PUBLIC","public",24],["T_WHITESPACE"," ",24],["T_FUNCTION","function",24],["T_WHITESPACE"," ",24],["T_STRING","hasBooks",24],"(",")",";",["T_WHITESPACE","\n\n  ",24],["T_DOC_COMMENT","\/**\n   * Loads books.\n   *\n   * Each book entry consists of the following keys:\n   *   - bid: The node ID of the main book.\n   *   - nid: The node ID of the book entry itself.\n   *   - pid: The parent node ID of the book.\n   *   - has_children: A boolean to indicate whether the book has children.\n   *   - weight: The weight of the book entry to order siblings.\n   *   - depth: The depth in the menu hierarchy the entry is placed into.\n   *\n   * @param array $nids\n   *   An array of node IDs.\n   * @param bool $access\n   *   Whether access checking should be taken into account.\n   *\n   * @return array\n   *   Array of loaded book items.\n   *\/",26],["T_WHITESPACE","\n  ",44],["T_PUBLIC","public",45],["T_WHITESPACE"," ",45],["T_FUNCTION","function",45],["T_WHITESPACE"," ",45],["T_STRING","loadMultiple",45],"(",["T_VARIABLE","$nids",45],",",["T_WHITESPACE"," ",45],["T_VARIABLE","$access",45],["T_WHITESPACE"," ",45],"=",["T_WHITESPACE"," ",45],["T_STRING","TRUE",45],")",";",["T_WHITESPACE","\n\n  ",45],["T_DOC_COMMENT","\/**\n   * Gets child relative depth.\n   *\n   * @param array $book_link\n   *   The book link.\n   * @param int $max_depth\n   *   The maximum supported depth of the book tree.\n   *\n   * @return int\n   *   The depth of the searched book.\n   *\/",47],["T_WHITESPACE","\n  ",57],["T_PUBLIC","public",58],["T_WHITESPACE"," ",58],["T_FUNCTION","function",58],["T_WHITESPACE"," ",58],["T_STRING","getChildRelativeDepth",58],"(",["T_VARIABLE","$book_link",58],",",["T_WHITESPACE"," ",58],["T_VARIABLE","$max_depth",58],")",";",["T_WHITESPACE","\n\n  ",58],["T_DOC_COMMENT","\/**\n   * Deletes a book entry.\n   *\n   * @param int $nid\n   *   Deletes a book entry.\n   *\n   * @return mixed\n   *   Number of deleted book entries.\n   *\/",60],["T_WHITESPACE","\n  ",68],["T_PUBLIC","public",69],["T_WHITESPACE"," ",69],["T_FUNCTION","function",69],["T_WHITESPACE"," ",69],["T_STRING","delete",69],"(",["T_VARIABLE","$nid",69],")",";",["T_WHITESPACE","\n\n  ",69],["T_DOC_COMMENT","\/**\n   * Loads book's children using it's parent ID.\n   *\n   * @param int $pid\n   *   The book's parent ID.\n   *\n   * @return array\n   *   Array of loaded book items.\n   *\/",71],["T_WHITESPACE","\n  ",79],["T_PUBLIC","public",80],["T_WHITESPACE"," ",80],["T_FUNCTION","function",80],["T_WHITESPACE"," ",80],["T_STRING","loadBookChildren",80],"(",["T_VARIABLE","$pid",80],")",";",["T_WHITESPACE","\n\n  ",80],["T_DOC_COMMENT","\/**\n   * Builds tree data used for the menu tree.\n   *\n   * @param int $bid\n   *   The ID of the book that we are building the tree for.\n   * @param array $parameters\n   *   An associative array of build parameters. For info about individual\n   *   parameters see BookManager::bookTreeBuild().\n   * @param int $min_depth\n   *   The minimum depth of book links in the resulting tree.\n   * @param int $max_depth\n   *   The maximum supported depth of the book tree.\n   *\n   * @return array\n   *   Array of loaded book links.\n   *\/",82],["T_WHITESPACE","\n  ",97],["T_PUBLIC","public",98],["T_WHITESPACE"," ",98],["T_FUNCTION","function",98],["T_WHITESPACE"," ",98],["T_STRING","getBookMenuTree",98],"(",["T_VARIABLE","$bid",98],",",["T_WHITESPACE"," ",98],["T_VARIABLE","$parameters",98],",",["T_WHITESPACE"," ",98],["T_VARIABLE","$min_depth",98],",",["T_WHITESPACE"," ",98],["T_VARIABLE","$max_depth",98],")",";",["T_WHITESPACE","\n\n  ",98],["T_DOC_COMMENT","\/**\n   * Inserts a book link.\n   *\n   * @param array $link\n   *   The link array to be inserted in the database.\n   * @param array $parents\n   *   The array of parent ids for the link to be inserted.\n   *\n   * @return mixed\n   *   The last insert ID of the query, if one exists.\n   *\/",100],["T_WHITESPACE","\n  ",110],["T_PUBLIC","public",111],["T_WHITESPACE"," ",111],["T_FUNCTION","function",111],["T_WHITESPACE"," ",111],["T_STRING","insert",111],"(",["T_VARIABLE","$link",111],",",["T_WHITESPACE"," ",111],["T_VARIABLE","$parents",111],")",";",["T_WHITESPACE","\n\n\n  ",111],["T_DOC_COMMENT","\/**\n   * Updates book reference for links that were moved between books.\n   *\n   * @param int $nid\n   *   The nid of the book entry to be updated.\n   * @param array $fields\n   *   The array of fields to be updated.\n   *\n   * @return mixed\n   *   The number of rows matched by the update query.\n   *\/",114],["T_WHITESPACE","\n  ",124],["T_PUBLIC","public",125],["T_WHITESPACE"," ",125],["T_FUNCTION","function",125],["T_WHITESPACE"," ",125],["T_STRING","update",125],"(",["T_VARIABLE","$nid",125],",",["T_WHITESPACE"," ",125],["T_VARIABLE","$fields",125],")",";",["T_WHITESPACE","\n\n  ",125],["T_DOC_COMMENT","\/**\n   * Update the book ID of the book link that it's being moved.\n   *\n   * @param int $bid\n   *   The ID of the book whose children we move.\n   * @param array $original\n   *   The original parent of the book link.\n   * @param array $expressions\n   *   Array of expressions to be added to the query.\n   * @param int $shift\n   *   The difference in depth between the old and the new position of the\n   *   element being moved.\n   *\n   * @return mixed\n   *   The number of rows matched by the update query.\n   *\/",127],["T_WHITESPACE","\n  ",142],["T_PUBLIC","public",143],["T_WHITESPACE"," ",143],["T_FUNCTION","function",143],["T_WHITESPACE"," ",143],["T_STRING","updateMovedChildren",143],"(",["T_VARIABLE","$bid",143],",",["T_WHITESPACE"," ",143],["T_VARIABLE","$original",143],",",["T_WHITESPACE"," ",143],["T_VARIABLE","$expressions",143],",",["T_WHITESPACE"," ",143],["T_VARIABLE","$shift",143],")",";",["T_WHITESPACE","\n\n  ",143],["T_DOC_COMMENT","\/**\n   * Count the number of original link children.\n   *\n   * @param array $original\n   *   The book link array.\n   *\n   * @return int\n   *   Number of children.\n   *\/",145],["T_WHITESPACE","\n  ",153],["T_PUBLIC","public",154],["T_WHITESPACE"," ",154],["T_FUNCTION","function",154],["T_WHITESPACE"," ",154],["T_STRING","countOriginalLinkChildren",154],"(",["T_VARIABLE","$original",154],")",";",["T_WHITESPACE","\n\n  ",154],["T_DOC_COMMENT","\/**\n   * Get book subtree.\n   *\n   * @param array $link\n   *   A fully loaded book link.\n   * @param int $max_depth\n   *   The maximum supported depth of the book tree.\n   *\n   * @return array\n   *   Array of unordered subtree book items.\n   *\/",156],["T_WHITESPACE","\n  ",166],["T_PUBLIC","public",167],["T_WHITESPACE"," ",167],["T_FUNCTION","function",167],["T_WHITESPACE"," ",167],["T_STRING","getBookSubtree",167],"(",["T_VARIABLE","$link",167],",",["T_WHITESPACE"," ",167],["T_VARIABLE","$max_depth",167],")",";",["T_WHITESPACE","\n\n",167],"}",["T_WHITESPACE","\n",169]]