[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","field",3],";",["T_WHITESPACE","\n\n",3],["T_USE","use",5],["T_WHITESPACE"," ",5],["T_STRING","Drupal",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Core",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Config",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Entity",5],["T_NS_SEPARATOR","\\",5],["T_STRING","ConfigEntityInterface",5],";",["T_WHITESPACE","\n",5],["T_USE","use",6],["T_WHITESPACE"," ",6],["T_STRING","Drupal",6],["T_NS_SEPARATOR","\\",6],["T_STRING","Core",6],["T_NS_SEPARATOR","\\",6],["T_STRING","Field",6],["T_NS_SEPARATOR","\\",6],["T_STRING","FieldStorageDefinitionInterface",6],";",["T_WHITESPACE","\n\n",6],["T_DOC_COMMENT","\/**\n * Provides an interface defining a field storage entity.\n *\/",8],["T_WHITESPACE","\n",10],["T_INTERFACE","interface",11],["T_WHITESPACE"," ",11],["T_STRING","FieldStorageConfigInterface",11],["T_WHITESPACE"," ",11],["T_EXTENDS","extends",11],["T_WHITESPACE"," ",11],["T_STRING","ConfigEntityInterface",11],",",["T_WHITESPACE"," ",11],["T_STRING","FieldStorageDefinitionInterface",11],["T_WHITESPACE"," ",11],"{",["T_WHITESPACE","\n\n  ",11],["T_DOC_COMMENT","\/**\n   * Returns the field type.\n   *\n   * @return string\n   *   The field type, i.e. the id of a field type plugin. For example 'text'.\n   *\/",13],["T_WHITESPACE","\n  ",18],["T_PUBLIC","public",19],["T_WHITESPACE"," ",19],["T_FUNCTION","function",19],["T_WHITESPACE"," ",19],["T_STRING","getType",19],"(",")",";",["T_WHITESPACE","\n\n  ",19],["T_DOC_COMMENT","\/**\n   * Returns the name of the module providing the field type.\n   *\n   * @return string\n   *   The name of the module that provides the field type.\n   *\/",21],["T_WHITESPACE","\n  ",26],["T_PUBLIC","public",27],["T_WHITESPACE"," ",27],["T_FUNCTION","function",27],["T_WHITESPACE"," ",27],["T_STRING","getTypeProvider",27],"(",")",";",["T_WHITESPACE","\n\n  ",27],["T_DOC_COMMENT","\/**\n   * Returns the list of bundles where the field storage has fields.\n   *\n   * @return array\n   *   An array of bundle names.\n   *\/",29],["T_WHITESPACE","\n  ",34],["T_PUBLIC","public",35],["T_WHITESPACE"," ",35],["T_FUNCTION","function",35],["T_WHITESPACE"," ",35],["T_STRING","getBundles",35],"(",")",";",["T_WHITESPACE","\n\n  ",35],["T_DOC_COMMENT","\/**\n   * Returns whether the field is deleted or not.\n   *\n   * @return bool\n   *   TRUE if the field is deleted.\n   *\/",37],["T_WHITESPACE","\n  ",42],["T_PUBLIC","public",43],["T_WHITESPACE"," ",43],["T_FUNCTION","function",43],["T_WHITESPACE"," ",43],["T_STRING","isDeleted",43],"(",")",";",["T_WHITESPACE","\n\n  ",43],["T_DOC_COMMENT","\/**\n   * Checks if the field storage can be deleted.\n   *\n   * @return bool\n   *   TRUE if the field storage can be deleted.\n   *\/",45],["T_WHITESPACE","\n  ",50],["T_PUBLIC","public",51],["T_WHITESPACE"," ",51],["T_FUNCTION","function",51],["T_WHITESPACE"," ",51],["T_STRING","isDeletable",51],"(",")",";",["T_WHITESPACE","\n\n  ",51],["T_DOC_COMMENT","\/**\n   * Returns whether the field storage is locked or not.\n   *\n   * @return bool\n   *   TRUE if the field storage is locked.\n   *\/",53],["T_WHITESPACE","\n  ",58],["T_PUBLIC","public",59],["T_WHITESPACE"," ",59],["T_FUNCTION","function",59],["T_WHITESPACE"," ",59],["T_STRING","isLocked",59],"(",")",";",["T_WHITESPACE","\n\n  ",59],["T_DOC_COMMENT","\/**\n   * Sets the locked flag.\n   *\n   * @param bool $locked\n   *   Sets value of locked flag.\n   *\n   * @return $this\n   *\/",61],["T_WHITESPACE","\n  ",68],["T_PUBLIC","public",69],["T_WHITESPACE"," ",69],["T_FUNCTION","function",69],["T_WHITESPACE"," ",69],["T_STRING","setLocked",69],"(",["T_VARIABLE","$locked",69],")",";",["T_WHITESPACE","\n\n  ",69],["T_DOC_COMMENT","\/**\n   * Sets the maximum number of items allowed for the field.\n   *\n   * @param int $cardinality\n   *   The cardinality value.\n   *\n   * @return $this\n   *\/",71],["T_WHITESPACE","\n  ",78],["T_PUBLIC","public",79],["T_WHITESPACE"," ",79],["T_FUNCTION","function",79],["T_WHITESPACE"," ",79],["T_STRING","setCardinality",79],"(",["T_VARIABLE","$cardinality",79],")",";",["T_WHITESPACE","\n\n  ",79],["T_DOC_COMMENT","\/**\n   * Sets the value for a field setting by name.\n   *\n   * @param string $setting_name\n   *   The name of the setting.\n   * @param mixed $value\n   *   The value of the setting.\n   *\n   * @return $this\n   *\/",81],["T_WHITESPACE","\n  ",90],["T_PUBLIC","public",91],["T_WHITESPACE"," ",91],["T_FUNCTION","function",91],["T_WHITESPACE"," ",91],["T_STRING","setSetting",91],"(",["T_VARIABLE","$setting_name",91],",",["T_WHITESPACE"," ",91],["T_VARIABLE","$value",91],")",";",["T_WHITESPACE","\n\n  ",91],["T_DOC_COMMENT","\/**\n   * Sets field storage settings.\n   *\n   * Note that the method does not unset existing settings not specified in the\n   * incoming $settings array.\n   *\n   * For example:\n   * @code\n   *   \/\/ Given these are the default settings.\n   *   $storage_definition->getSettings() === [\n   *     'fruit' => 'apple',\n   *     'season' => 'summer',\n   *   ];\n   *   \/\/ Change only the 'fruit' setting.\n   *   $storage_definition->setSettings(['fruit' => 'banana']);\n   *   \/\/ The 'season' setting persists unchanged.\n   *   $storage_definition->getSettings() === [\n   *     'fruit' => 'banana',\n   *     'season' => 'summer',\n   *   ];\n   * @endcode\n   *\n   * For clarity, it is preferred to use setSetting() if not all available\n   * settings are supplied.\n   *\n   * @param array $settings\n   *   The array of storage settings.\n   *\n   * @return $this\n   *\/",93],["T_WHITESPACE","\n  ",122],["T_PUBLIC","public",123],["T_WHITESPACE"," ",123],["T_FUNCTION","function",123],["T_WHITESPACE"," ",123],["T_STRING","setSettings",123],"(",["T_ARRAY","array",123],["T_WHITESPACE"," ",123],["T_VARIABLE","$settings",123],")",";",["T_WHITESPACE","\n\n  ",123],["T_DOC_COMMENT","\/**\n   * Sets whether the field is translatable.\n   *\n   * @param bool $translatable\n   *   Whether the field is translatable.\n   *\n   * @return $this\n   *\/",125],["T_WHITESPACE","\n  ",132],["T_PUBLIC","public",133],["T_WHITESPACE"," ",133],["T_FUNCTION","function",133],["T_WHITESPACE"," ",133],["T_STRING","setTranslatable",133],"(",["T_VARIABLE","$translatable",133],")",";",["T_WHITESPACE","\n\n  ",133],["T_DOC_COMMENT","\/**\n   * Returns the custom storage indexes for the field data storage.\n   *\n   * @return array\n   *   An array of custom indexes.\n   *\/",135],["T_WHITESPACE","\n  ",140],["T_PUBLIC","public",141],["T_WHITESPACE"," ",141],["T_FUNCTION","function",141],["T_WHITESPACE"," ",141],["T_STRING","getIndexes",141],"(",")",";",["T_WHITESPACE","\n\n  ",141],["T_DOC_COMMENT","\/**\n   * Sets the custom storage indexes for the field data storage..\n   *\n   * @param array $indexes\n   *   The array of custom indexes.\n   *\n   * @return $this\n   *\/",143],["T_WHITESPACE","\n  ",150],["T_PUBLIC","public",151],["T_WHITESPACE"," ",151],["T_FUNCTION","function",151],["T_WHITESPACE"," ",151],["T_STRING","setIndexes",151],"(",["T_ARRAY","array",151],["T_WHITESPACE"," ",151],["T_VARIABLE","$indexes",151],")",";",["T_WHITESPACE","\n\n",151],"}",["T_WHITESPACE","\n",153]]