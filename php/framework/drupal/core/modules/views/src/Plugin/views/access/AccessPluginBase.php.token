[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","views",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Plugin",3],["T_NS_SEPARATOR","\\",3],["T_STRING","views",3],["T_NS_SEPARATOR","\\",3],["T_STRING","access",3],";",["T_WHITESPACE","\n\n",3],["T_USE","use",5],["T_WHITESPACE"," ",5],["T_STRING","Drupal",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Core",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Session",5],["T_NS_SEPARATOR","\\",5],["T_STRING","AccountInterface",5],";",["T_WHITESPACE","\n",5],["T_USE","use",6],["T_WHITESPACE"," ",6],["T_STRING","Drupal",6],["T_NS_SEPARATOR","\\",6],["T_STRING","views",6],["T_NS_SEPARATOR","\\",6],["T_STRING","Plugin",6],["T_NS_SEPARATOR","\\",6],["T_STRING","views",6],["T_NS_SEPARATOR","\\",6],["T_STRING","PluginBase",6],";",["T_WHITESPACE","\n",6],["T_USE","use",7],["T_WHITESPACE"," ",7],["T_STRING","Symfony",7],["T_NS_SEPARATOR","\\",7],["T_STRING","Component",7],["T_NS_SEPARATOR","\\",7],["T_STRING","Routing",7],["T_NS_SEPARATOR","\\",7],["T_STRING","Route",7],";",["T_WHITESPACE","\n\n",7],["T_DOC_COMMENT","\/**\n * @defgroup views_access_plugins Views access plugins\n * @{\n * Plugins to handle access checking for views.\n *\n * Access plugins are responsible for controlling access to the view.\n *\n * Access plugins extend \\Drupal\\views\\Plugin\\views\\access\\AccessPluginBase,\n * implementing the access() and alterRouteDefinition() methods. They must be\n * annotated with \\Drupal\\views\\Annotation\\ViewsAccess annotation, and they\n * must be in namespace directory Plugin\\views\\access.\n *\n * @ingroup views_plugins\n * @see plugin_api\n *\/",9],["T_WHITESPACE","\n\n",23],["T_DOC_COMMENT","\/**\n * The base plugin to handle access control.\n *\n * Access plugins are responsible for controlling a user's access to the view.\n * Views includes plugins for checking user roles and individual permissions.\n *\n * To define an access control plugin, extend this base class. Your access\n * plugin should have an annotation that includes the plugin's metadata, for\n * example:\n * @Plugin(\n *   id = \"denyall\",\n *   title = @Translation(\"No Access\"),\n *   help = @Translation(\"Will not be accessible.\")\n * )\n * The definition should include the following keys:\n * - id: The unique identifier of your access plugin.\n * - title: The human-readable name for your access plugin.\n * - help: A short help message for your plugin.\n *\n * @see \\Drupal\\views\\Plugin\\ViewsPluginManager\n *\/",25],["T_WHITESPACE","\n",45],["T_ABSTRACT","abstract",46],["T_WHITESPACE"," ",46],["T_CLASS","class",46],["T_WHITESPACE"," ",46],["T_STRING","AccessPluginBase",46],["T_WHITESPACE"," ",46],["T_EXTENDS","extends",46],["T_WHITESPACE"," ",46],["T_STRING","PluginBase",46],["T_WHITESPACE"," ",46],"{",["T_WHITESPACE","\n\n  ",46],["T_DOC_COMMENT","\/**\n   * {@inheritdoc}\n   *\/",48],["T_WHITESPACE","\n  ",50],["T_PUBLIC","public",51],["T_WHITESPACE"," ",51],["T_FUNCTION","function",51],["T_WHITESPACE"," ",51],["T_STRING","summaryTitle",51],"(",")",["T_WHITESPACE"," ",51],"{",["T_WHITESPACE","\n    ",51],["T_RETURN","return",52],["T_WHITESPACE"," ",52],["T_VARIABLE","$this",52],["T_OBJECT_OPERATOR","->",52],["T_STRING","t",52],"(",["T_CONSTANT_ENCAPSED_STRING","'Unknown'",52],")",";",["T_WHITESPACE","\n  ",52],"}",["T_WHITESPACE","\n\n  ",53],["T_DOC_COMMENT","\/**\n   * Determine if the current user has access or not.\n   *\n   * @param \\Drupal\\Core\\Session\\AccountInterface $account\n   *   The user who wants to access this view.\n   *\n   * @return bool\n   *   Returns whether the user has access to the view.\n   *\/",55],["T_WHITESPACE","\n  ",63],["T_ABSTRACT","abstract",64],["T_WHITESPACE"," ",64],["T_PUBLIC","public",64],["T_WHITESPACE"," ",64],["T_FUNCTION","function",64],["T_WHITESPACE"," ",64],["T_STRING","access",64],"(",["T_STRING","AccountInterface",64],["T_WHITESPACE"," ",64],["T_VARIABLE","$account",64],")",";",["T_WHITESPACE","\n\n  ",64],["T_DOC_COMMENT","\/**\n   * Allows access plugins to alter the route definition of a view.\n   *\n   * Likely the access plugin will add new requirements, so its custom access\n   * checker can be applied.\n   *\n   * @param \\Symfony\\Component\\Routing\\Route $route\n   *   The route to change.\n   *\/",66],["T_WHITESPACE","\n  ",74],["T_ABSTRACT","abstract",75],["T_WHITESPACE"," ",75],["T_PUBLIC","public",75],["T_WHITESPACE"," ",75],["T_FUNCTION","function",75],["T_WHITESPACE"," ",75],["T_STRING","alterRouteDefinition",75],"(",["T_STRING","Route",75],["T_WHITESPACE"," ",75],["T_VARIABLE","$route",75],")",";",["T_WHITESPACE","\n\n",75],"}",["T_WHITESPACE","\n\n",77],["T_DOC_COMMENT","\/**\n * @}\n *\/",79],["T_WHITESPACE","\n",81]]