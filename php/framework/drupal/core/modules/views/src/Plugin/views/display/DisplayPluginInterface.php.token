[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","views",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Plugin",3],["T_NS_SEPARATOR","\\",3],["T_STRING","views",3],["T_NS_SEPARATOR","\\",3],["T_STRING","display",3],";",["T_WHITESPACE","\n\n",3],["T_USE","use",5],["T_WHITESPACE"," ",5],["T_STRING","Drupal",5],["T_NS_SEPARATOR","\\",5],["T_STRING","views",5],["T_NS_SEPARATOR","\\",5],["T_STRING","ViewExecutable",5],";",["T_WHITESPACE","\n",5],["T_USE","use",6],["T_WHITESPACE"," ",6],["T_STRING","Drupal",6],["T_NS_SEPARATOR","\\",6],["T_STRING","Core",6],["T_NS_SEPARATOR","\\",6],["T_STRING","Form",6],["T_NS_SEPARATOR","\\",6],["T_STRING","FormStateInterface",6],";",["T_WHITESPACE","\n",6],["T_USE","use",7],["T_WHITESPACE"," ",7],["T_STRING","Drupal",7],["T_NS_SEPARATOR","\\",7],["T_STRING","Core",7],["T_NS_SEPARATOR","\\",7],["T_STRING","Session",7],["T_NS_SEPARATOR","\\",7],["T_STRING","AccountInterface",7],";",["T_WHITESPACE","\n\n",7],["T_DOC_COMMENT","\/**\n * @defgroup views_display_plugins Views display plugins\n * @{\n * Plugins to handle the overall display of views.\n *\n * Display plugins are responsible for controlling where a view is rendered;\n * that is, how it is exposed to other parts of Drupal. 'Page' and 'block' are\n * the most commonly used display plugins. Each view also has a 'master' (or\n * 'default') display that includes information shared between all its\n * displays (see \\Drupal\\views\\Plugin\\views\\display\\DefaultDisplay).\n *\n * Display plugins extend \\Drupal\\views\\Plugin\\views\\display\\DisplayPluginBase.\n * They must be annotated with \\Drupal\\views\\Annotation\\ViewsDisplay\n * annotation, and they must be in namespace directory Plugin\\views\\display.\n *\n * @ingroup views_plugins\n *\n * @see plugin_api\n * @see views_display_extender_plugins\n *\/",9],["T_WHITESPACE","\n\n",28],["T_DOC_COMMENT","\/**\n * Provides an interface for Views display plugins.\n *\/",30],["T_WHITESPACE","\n",32],["T_INTERFACE","interface",33],["T_WHITESPACE"," ",33],["T_STRING","DisplayPluginInterface",33],["T_WHITESPACE"," ",33],"{",["T_WHITESPACE","\n\n  ",33],["T_DOC_COMMENT","\/**\n   * Initializes the display plugin.\n   *\n   * @param \\Drupal\\views\\ViewExecutable $view\n   *   The views executable.\n   * @param array $display\n   *   The display that will be populated and attached to the view.\n   * @param array $options\n   *   (optional) The options for the display plugin. Defaults to NULL.\n   *\/",35],["T_WHITESPACE","\n  ",44],["T_PUBLIC","public",45],["T_WHITESPACE"," ",45],["T_FUNCTION","function",45],["T_WHITESPACE"," ",45],["T_STRING","initDisplay",45],"(",["T_STRING","ViewExecutable",45],["T_WHITESPACE"," ",45],["T_VARIABLE","$view",45],",",["T_WHITESPACE"," ",45],["T_ARRAY","array",45],["T_WHITESPACE"," ",45],"&",["T_VARIABLE","$display",45],",",["T_WHITESPACE"," ",45],["T_ARRAY","array",45],["T_WHITESPACE"," ",45],"&",["T_VARIABLE","$options",45],["T_WHITESPACE"," ",45],"=",["T_WHITESPACE"," ",45],["T_STRING","NULL",45],")",";",["T_WHITESPACE","\n\n  ",45],["T_DOC_COMMENT","\/**\n   * Destroys the display's components and the display itself.\n   *\/",47],["T_WHITESPACE","\n  ",49],["T_PUBLIC","public",50],["T_WHITESPACE"," ",50],["T_FUNCTION","function",50],["T_WHITESPACE"," ",50],["T_STRING","destroy",50],"(",")",";",["T_WHITESPACE","\n\n  ",50],["T_DOC_COMMENT","\/**\n   * Determines if this display is the 'default' display.\n   *\n   * 'Default' display contains fallback settings.\n   *\/",52],["T_WHITESPACE","\n  ",56],["T_PUBLIC","public",57],["T_WHITESPACE"," ",57],["T_FUNCTION","function",57],["T_WHITESPACE"," ",57],["T_STRING","isDefaultDisplay",57],"(",")",";",["T_WHITESPACE","\n\n  ",57],["T_DOC_COMMENT","\/**\n   * Determines if this display uses exposed filters.\n   *\/",59],["T_WHITESPACE","\n  ",61],["T_PUBLIC","public",62],["T_WHITESPACE"," ",62],["T_FUNCTION","function",62],["T_WHITESPACE"," ",62],["T_STRING","usesExposed",62],"(",")",";",["T_WHITESPACE","\n\n  ",62],["T_DOC_COMMENT","\/**\n   * Determines if this display should display the exposed filters widgets.\n   *\n   * Regardless of what this function\n   * returns, exposed filters will not be used nor\n   * displayed unless usesExposed() returns TRUE.\n   *\/",64],["T_WHITESPACE","\n  ",70],["T_PUBLIC","public",71],["T_WHITESPACE"," ",71],["T_FUNCTION","function",71],["T_WHITESPACE"," ",71],["T_STRING","displaysExposed",71],"(",")",";",["T_WHITESPACE","\n\n  ",71],["T_DOC_COMMENT","\/**\n   * Whether the display allows the use of AJAX or not.\n   *\n   * @return bool\n   *\/",73],["T_WHITESPACE","\n  ",77],["T_PUBLIC","public",78],["T_WHITESPACE"," ",78],["T_FUNCTION","function",78],["T_WHITESPACE"," ",78],["T_STRING","usesAJAX",78],"(",")",";",["T_WHITESPACE","\n\n  ",78],["T_DOC_COMMENT","\/**\n   * Whether the display is actually using AJAX or not.\n   *\n   * @return bool\n   *\/",80],["T_WHITESPACE","\n  ",84],["T_PUBLIC","public",85],["T_WHITESPACE"," ",85],["T_FUNCTION","function",85],["T_WHITESPACE"," ",85],["T_STRING","ajaxEnabled",85],"(",")",";",["T_WHITESPACE","\n\n  ",85],["T_DOC_COMMENT","\/**\n   * Whether the display is enabled.\n   *\n   * @return bool\n   *   Returns TRUE if the display is marked as enabled, else FALSE.\n   *\/",87],["T_WHITESPACE","\n  ",92],["T_PUBLIC","public",93],["T_WHITESPACE"," ",93],["T_FUNCTION","function",93],["T_WHITESPACE"," ",93],["T_STRING","isEnabled",93],"(",")",";",["T_WHITESPACE","\n\n  ",93],["T_DOC_COMMENT","\/**\n   * Whether the display allows the use of a pager or not.\n   *\n   * @return bool\n   *\/",95],["T_WHITESPACE","\n  ",99],["T_PUBLIC","public",100],["T_WHITESPACE"," ",100],["T_FUNCTION","function",100],["T_WHITESPACE"," ",100],["T_STRING","usesPager",100],"(",")",";",["T_WHITESPACE","\n\n  ",100],["T_DOC_COMMENT","\/**\n   * Whether the display is using a pager or not.\n   *\n   * @return bool\n   *\/",102],["T_WHITESPACE","\n  ",106],["T_PUBLIC","public",107],["T_WHITESPACE"," ",107],["T_FUNCTION","function",107],["T_WHITESPACE"," ",107],["T_STRING","isPagerEnabled",107],"(",")",";",["T_WHITESPACE","\n\n  ",107],["T_DOC_COMMENT","\/**\n   * Whether the display allows the use of a 'more' link or not.\n   *\n   * @return bool\n   *\/",109],["T_WHITESPACE","\n  ",113],["T_PUBLIC","public",114],["T_WHITESPACE"," ",114],["T_FUNCTION","function",114],["T_WHITESPACE"," ",114],["T_STRING","usesMore",114],"(",")",";",["T_WHITESPACE","\n\n  ",114],["T_DOC_COMMENT","\/**\n   * Whether the display is using the 'more' link or not.\n   *\n   * @return bool\n   *\/",116],["T_WHITESPACE","\n  ",120],["T_PUBLIC","public",121],["T_WHITESPACE"," ",121],["T_FUNCTION","function",121],["T_WHITESPACE"," ",121],["T_STRING","isMoreEnabled",121],"(",")",";",["T_WHITESPACE","\n\n  ",121],["T_DOC_COMMENT","\/**\n   * Does the display have groupby enabled?\n   *\/",123],["T_WHITESPACE","\n  ",125],["T_PUBLIC","public",126],["T_WHITESPACE"," ",126],["T_FUNCTION","function",126],["T_WHITESPACE"," ",126],["T_STRING","useGroupBy",126],"(",")",";",["T_WHITESPACE","\n\n  ",126],["T_DOC_COMMENT","\/**\n   * Should the enabled display more link be shown when no more items?\n   *\/",128],["T_WHITESPACE","\n  ",130],["T_PUBLIC","public",131],["T_WHITESPACE"," ",131],["T_FUNCTION","function",131],["T_WHITESPACE"," ",131],["T_STRING","useMoreAlways",131],"(",")",";",["T_WHITESPACE","\n\n  ",131],["T_DOC_COMMENT","\/**\n   * Does the display have custom link text?\n   *\/",133],["T_WHITESPACE","\n  ",135],["T_PUBLIC","public",136],["T_WHITESPACE"," ",136],["T_FUNCTION","function",136],["T_WHITESPACE"," ",136],["T_STRING","useMoreText",136],"(",")",";",["T_WHITESPACE","\n\n  ",136],["T_DOC_COMMENT","\/**\n   * Determines whether this display can use attachments.\n   *\n   * @return bool\n   *\/",138],["T_WHITESPACE","\n  ",142],["T_PUBLIC","public",143],["T_WHITESPACE"," ",143],["T_FUNCTION","function",143],["T_WHITESPACE"," ",143],["T_STRING","acceptAttachments",143],"(",")",";",["T_WHITESPACE","\n\n  ",143],["T_DOC_COMMENT","\/**\n   * Returns whether the display can use attachments.\n   *\n   * @return bool\n   *\/",145],["T_WHITESPACE","\n  ",149],["T_PUBLIC","public",150],["T_WHITESPACE"," ",150],["T_FUNCTION","function",150],["T_WHITESPACE"," ",150],["T_STRING","usesAttachments",150],"(",")",";",["T_WHITESPACE","\n\n  ",150],["T_DOC_COMMENT","\/**\n   * Returns whether the display can use areas.\n   *\n   * @return bool\n   *   TRUE if the display can use areas, or FALSE otherwise.\n   *\/",152],["T_WHITESPACE","\n  ",157],["T_PUBLIC","public",158],["T_WHITESPACE"," ",158],["T_FUNCTION","function",158],["T_WHITESPACE"," ",158],["T_STRING","usesAreas",158],"(",")",";",["T_WHITESPACE","\n\n  ",158],["T_DOC_COMMENT","\/**\n   * Allows displays to attach to other views.\n   *\n   * @param \\Drupal\\views\\ViewExecutable $view\n   *   The views executable.\n   * @param string $display_id\n   *   The display to attach to.\n   * @param array $build\n   *   The parent view render array.\n   *\/",160],["T_WHITESPACE","\n  ",169],["T_PUBLIC","public",170],["T_WHITESPACE"," ",170],["T_FUNCTION","function",170],["T_WHITESPACE"," ",170],["T_STRING","attachTo",170],"(",["T_STRING","ViewExecutable",170],["T_WHITESPACE"," ",170],["T_VARIABLE","$view",170],",",["T_WHITESPACE"," ",170],["T_VARIABLE","$display_id",170],",",["T_WHITESPACE"," ",170],["T_ARRAY","array",170],["T_WHITESPACE"," ",170],"&",["T_VARIABLE","$build",170],")",";",["T_WHITESPACE","\n\n  ",170],["T_DOC_COMMENT","\/**\n   * Lists the 'defaultable' sections and what items each section contains.\n   *\/",172],["T_WHITESPACE","\n  ",174],["T_PUBLIC","public",175],["T_WHITESPACE"," ",175],["T_FUNCTION","function",175],["T_WHITESPACE"," ",175],["T_STRING","defaultableSections",175],"(",["T_VARIABLE","$section",175],["T_WHITESPACE"," ",175],"=",["T_WHITESPACE"," ",175],["T_STRING","NULL",175],")",";",["T_WHITESPACE","\n\n  ",175],["T_DOC_COMMENT","\/**\n   * Checks to see if the display has a 'path' field.\n   *\n   * This is a pure function and not just a setting on the definition\n   * because some displays (such as a panel pane) may have a path based\n   * upon configuration.\n   *\n   * By default, displays do not have a path.\n   *\/",177],["T_WHITESPACE","\n  ",185],["T_PUBLIC","public",186],["T_WHITESPACE"," ",186],["T_FUNCTION","function",186],["T_WHITESPACE"," ",186],["T_STRING","hasPath",186],"(",")",";",["T_WHITESPACE","\n\n  ",186],["T_DOC_COMMENT","\/**\n   * Checks to see if the display has some need to link to another display.\n   *\n   * For the most part, displays without a path will use a link display.\n   * However, sometimes displays that have a path might also need to link to\n   * another display. This is true for feeds.\n   *\/",188],["T_WHITESPACE","\n  ",194],["T_PUBLIC","public",195],["T_WHITESPACE"," ",195],["T_FUNCTION","function",195],["T_WHITESPACE"," ",195],["T_STRING","usesLinkDisplay",195],"(",")",";",["T_WHITESPACE","\n\n  ",195],["T_DOC_COMMENT","\/**\n   * Checks to see if the display can put the exposed form in a block.\n   *\n   * By default, displays that do not have a path cannot disconnect\n   * the exposed form and put it in a block, because the form has no\n   * place to go and Views really wants the forms to go to a specific\n   * page.\n   *\/",197],["T_WHITESPACE","\n  ",204],["T_PUBLIC","public",205],["T_WHITESPACE"," ",205],["T_FUNCTION","function",205],["T_WHITESPACE"," ",205],["T_STRING","usesExposedFormInBlock",205],"(",")",";",["T_WHITESPACE","\n\n  ",205],["T_DOC_COMMENT","\/**\n   * Find out all displays which are attached to this display.\n   *\n   * The method is just using the pure storage object to avoid loading of the\n   * sub displays which would kill lazy loading.\n   *\/",207],["T_WHITESPACE","\n  ",212],["T_PUBLIC","public",213],["T_WHITESPACE"," ",213],["T_FUNCTION","function",213],["T_WHITESPACE"," ",213],["T_STRING","getAttachedDisplays",213],"(",")",";",["T_WHITESPACE","\n\n  ",213],["T_DOC_COMMENT","\/**\n   * Returns the ID of the display to use when making links.\n   *\/",215],["T_WHITESPACE","\n  ",217],["T_PUBLIC","public",218],["T_WHITESPACE"," ",218],["T_FUNCTION","function",218],["T_WHITESPACE"," ",218],["T_STRING","getLinkDisplay",218],"(",")",";",["T_WHITESPACE","\n\n  ",218],["T_DOC_COMMENT","\/**\n   * Returns the base path to use for this display.\n   *\n   * This can be overridden for displays that do strange things\n   * with the path.\n   *\/",220],["T_WHITESPACE","\n  ",225],["T_PUBLIC","public",226],["T_WHITESPACE"," ",226],["T_FUNCTION","function",226],["T_WHITESPACE"," ",226],["T_STRING","getPath",226],"(",")",";",["T_WHITESPACE","\n\n  ",226],["T_DOC_COMMENT","\/**\n   * Points to the display which can be linked by this display.\n   *\n   * If the display has route information, the display itself is returned.\n   * Otherwise, the configured linked display is returned. For example, if a\n   * block display links to a page display, the page display will be returned\n   * in both cases.\n   *\n   * @return \\Drupal\\views\\Plugin\\views\\display\\DisplayRouterInterface|null\n   *\/",228],["T_WHITESPACE","\n  ",237],["T_PUBLIC","public",238],["T_WHITESPACE"," ",238],["T_FUNCTION","function",238],["T_WHITESPACE"," ",238],["T_STRING","getRoutedDisplay",238],"(",")",";",["T_WHITESPACE","\n\n  ",238],["T_DOC_COMMENT","\/**\n   * Returns a URL to $this display or its configured linked display.\n   *\n   * @return \\Drupal\\Core\\Url|null\n   *\/",240],["T_WHITESPACE","\n  ",244],["T_PUBLIC","public",245],["T_WHITESPACE"," ",245],["T_FUNCTION","function",245],["T_WHITESPACE"," ",245],["T_STRING","getUrl",245],"(",")",";",["T_WHITESPACE","\n\n  ",245],["T_DOC_COMMENT","\/**\n   * Determines if an option is set to use the default or current display.\n   *\n   * @return\n   *   TRUE for the default display.\n   *\/",247],["T_WHITESPACE","\n  ",252],["T_PUBLIC","public",253],["T_WHITESPACE"," ",253],["T_FUNCTION","function",253],["T_WHITESPACE"," ",253],["T_STRING","isDefaulted",253],"(",["T_VARIABLE","$option",253],")",";",["T_WHITESPACE","\n\n  ",253],["T_DOC_COMMENT","\/**\n   * Gets an option, from this display or the default display.\n   *\/",255],["T_WHITESPACE","\n  ",257],["T_PUBLIC","public",258],["T_WHITESPACE"," ",258],["T_FUNCTION","function",258],["T_WHITESPACE"," ",258],["T_STRING","getOption",258],"(",["T_VARIABLE","$option",258],")",";",["T_WHITESPACE","\n\n  ",258],["T_DOC_COMMENT","\/**\n   * Determines if the display's style uses fields.\n   *\n   * @return bool\n   *\/",260],["T_WHITESPACE","\n  ",264],["T_PUBLIC","public",265],["T_WHITESPACE"," ",265],["T_FUNCTION","function",265],["T_WHITESPACE"," ",265],["T_STRING","usesFields",265],"(",")",";",["T_WHITESPACE","\n\n  ",265],["T_DOC_COMMENT","\/**\n   * Get the instance of a plugin, for example style or row.\n   *\n   * @param string $type\n   *   The type of the plugin.\n   *\n   * @return \\Drupal\\views\\Plugin\\views\\ViewsPluginInterface\n   *\/",267],["T_WHITESPACE","\n  ",274],["T_PUBLIC","public",275],["T_WHITESPACE"," ",275],["T_FUNCTION","function",275],["T_WHITESPACE"," ",275],["T_STRING","getPlugin",275],"(",["T_VARIABLE","$type",275],")",";",["T_WHITESPACE","\n\n  ",275],["T_DOC_COMMENT","\/**\n   * Get the handler object for a single handler.\n   *\/",277],["T_WHITESPACE","\n  ",279],["T_PUBLIC","public",280],["T_WHITESPACE"," ",280],["T_FUNCTION","function",280],["T_WHITESPACE"," ",280],["T_STRING","getHandler",280],"(",["T_VARIABLE","$type",280],",",["T_WHITESPACE"," ",280],["T_VARIABLE","$id",280],")",";",["T_WHITESPACE","\n\n  ",280],["T_DOC_COMMENT","\/**\n   * Get a full array of handlers for $type. This caches them.\n   *\n   * @return \\Drupal\\views\\Plugin\\views\\ViewsHandlerInterface[]\n   *\/",282],["T_WHITESPACE","\n  ",286],["T_PUBLIC","public",287],["T_WHITESPACE"," ",287],["T_FUNCTION","function",287],["T_WHITESPACE"," ",287],["T_STRING","getHandlers",287],"(",["T_VARIABLE","$type",287],")",";",["T_WHITESPACE","\n\n  ",287],["T_DOC_COMMENT","\/**\n   * Retrieves a list of fields for the current display.\n   *\n   * This also takes into account any associated relationships, if they exist.\n   *\n   * @param bool $groupable_only\n   *   (optional) TRUE to only return an array of field labels from handlers\n   *   that support the useStringGroupBy method, defaults to FALSE.\n   *\n   * @return array\n   *   An array of applicable field options, keyed by ID.\n   *\/",289],["T_WHITESPACE","\n  ",300],["T_PUBLIC","public",301],["T_WHITESPACE"," ",301],["T_FUNCTION","function",301],["T_WHITESPACE"," ",301],["T_STRING","getFieldLabels",301],"(",["T_VARIABLE","$groupable_only",301],["T_WHITESPACE"," ",301],"=",["T_WHITESPACE"," ",301],["T_STRING","FALSE",301],")",";",["T_WHITESPACE","\n\n  ",301],["T_DOC_COMMENT","\/**\n   * Sets an option, on this display or the default display.\n   *\/",303],["T_WHITESPACE","\n  ",305],["T_PUBLIC","public",306],["T_WHITESPACE"," ",306],["T_FUNCTION","function",306],["T_WHITESPACE"," ",306],["T_STRING","setOption",306],"(",["T_VARIABLE","$option",306],",",["T_WHITESPACE"," ",306],["T_VARIABLE","$value",306],")",";",["T_WHITESPACE","\n\n  ",306],["T_DOC_COMMENT","\/**\n   * Set an option and force it to be an override.\n   *\/",308],["T_WHITESPACE","\n  ",310],["T_PUBLIC","public",311],["T_WHITESPACE"," ",311],["T_FUNCTION","function",311],["T_WHITESPACE"," ",311],["T_STRING","overrideOption",311],"(",["T_VARIABLE","$option",311],",",["T_WHITESPACE"," ",311],["T_VARIABLE","$value",311],")",";",["T_WHITESPACE","\n\n  ",311],["T_DOC_COMMENT","\/**\n   * Returns a link to a section of a form.\n   *\n   * Because forms may be split up into sections, this provides an easy URL\n   * to exactly the right section. Don't override this.\n   *\/",313],["T_WHITESPACE","\n  ",318],["T_PUBLIC","public",319],["T_WHITESPACE"," ",319],["T_FUNCTION","function",319],["T_WHITESPACE"," ",319],["T_STRING","optionLink",319],"(",["T_VARIABLE","$text",319],",",["T_WHITESPACE"," ",319],["T_VARIABLE","$section",319],",",["T_WHITESPACE"," ",319],["T_VARIABLE","$class",319],["T_WHITESPACE"," ",319],"=",["T_WHITESPACE"," ",319],["T_CONSTANT_ENCAPSED_STRING","''",319],",",["T_WHITESPACE"," ",319],["T_VARIABLE","$title",319],["T_WHITESPACE"," ",319],"=",["T_WHITESPACE"," ",319],["T_CONSTANT_ENCAPSED_STRING","''",319],")",";",["T_WHITESPACE","\n\n  ",319],["T_DOC_COMMENT","\/**\n   * Returns to tokens for arguments.\n   *\n   * This function is similar to views_handler_field::getRenderTokens()\n   * but without fields tokens.\n   *\/",321],["T_WHITESPACE","\n  ",326],["T_PUBLIC","public",327],["T_WHITESPACE"," ",327],["T_FUNCTION","function",327],["T_WHITESPACE"," ",327],["T_STRING","getArgumentsTokens",327],"(",")",";",["T_WHITESPACE","\n\n  ",327],["T_DOC_COMMENT","\/**\n   * Provides the default summary for options in the views UI.\n   *\n   * This output is returned as an array.\n   *\/",329],["T_WHITESPACE","\n  ",333],["T_PUBLIC","public",334],["T_WHITESPACE"," ",334],["T_FUNCTION","function",334],["T_WHITESPACE"," ",334],["T_STRING","optionsSummary",334],"(","&",["T_VARIABLE","$categories",334],",",["T_WHITESPACE"," ",334],"&",["T_VARIABLE","$options",334],")",";",["T_WHITESPACE","\n\n  ",334],["T_DOC_COMMENT","\/**\n   * Provides the default form for setting options.\n   *\/",336],["T_WHITESPACE","\n  ",338],["T_PUBLIC","public",339],["T_WHITESPACE"," ",339],["T_FUNCTION","function",339],["T_WHITESPACE"," ",339],["T_STRING","buildOptionsForm",339],"(","&",["T_VARIABLE","$form",339],",",["T_WHITESPACE"," ",339],["T_STRING","FormStateInterface",339],["T_WHITESPACE"," ",339],["T_VARIABLE","$form_state",339],")",";",["T_WHITESPACE","\n\n  ",339],["T_DOC_COMMENT","\/**\n   * Validates the options form.\n   *\/",341],["T_WHITESPACE","\n  ",343],["T_PUBLIC","public",344],["T_WHITESPACE"," ",344],["T_FUNCTION","function",344],["T_WHITESPACE"," ",344],["T_STRING","validateOptionsForm",344],"(","&",["T_VARIABLE","$form",344],",",["T_WHITESPACE"," ",344],["T_STRING","FormStateInterface",344],["T_WHITESPACE"," ",344],["T_VARIABLE","$form_state",344],")",";",["T_WHITESPACE","\n\n  ",344],["T_DOC_COMMENT","\/**\n   * Performs any necessary changes to the form values prior to storage.\n   *\n   * There is no need for this function to actually store the data.\n   *\/",346],["T_WHITESPACE","\n  ",350],["T_PUBLIC","public",351],["T_WHITESPACE"," ",351],["T_FUNCTION","function",351],["T_WHITESPACE"," ",351],["T_STRING","submitOptionsForm",351],"(","&",["T_VARIABLE","$form",351],",",["T_WHITESPACE"," ",351],["T_STRING","FormStateInterface",351],["T_WHITESPACE"," ",351],["T_VARIABLE","$form_state",351],")",";",["T_WHITESPACE","\n\n  ",351],["T_DOC_COMMENT","\/**\n   * If override\/revert was clicked, perform the proper toggle.\n   *\/",353],["T_WHITESPACE","\n  ",355],["T_PUBLIC","public",356],["T_WHITESPACE"," ",356],["T_FUNCTION","function",356],["T_WHITESPACE"," ",356],["T_STRING","optionsOverride",356],"(",["T_VARIABLE","$form",356],",",["T_WHITESPACE"," ",356],["T_STRING","FormStateInterface",356],["T_WHITESPACE"," ",356],["T_VARIABLE","$form_state",356],")",";",["T_WHITESPACE","\n\n  ",356],["T_DOC_COMMENT","\/**\n   * Flip the override setting for the given section.\n   *\n   * @param string $section\n   *   Which option should be marked as overridden, for example \"filters\".\n   * @param bool $new_state\n   *   Select the new state of the option:\n   *   - TRUE: Revert new state option to default.\n   *   - FALSE: Mark it as overridden.\n   *\/",358],["T_WHITESPACE","\n  ",367],["T_PUBLIC","public",368],["T_WHITESPACE"," ",368],["T_FUNCTION","function",368],["T_WHITESPACE"," ",368],["T_STRING","setOverride",368],"(",["T_VARIABLE","$section",368],",",["T_WHITESPACE"," ",368],["T_VARIABLE","$new_state",368],["T_WHITESPACE"," ",368],"=",["T_WHITESPACE"," ",368],["T_STRING","NULL",368],")",";",["T_WHITESPACE","\n\n  ",368],["T_DOC_COMMENT","\/**\n   * Injects anything into the query that the display handler needs.\n   *\/",370],["T_WHITESPACE","\n  ",372],["T_PUBLIC","public",373],["T_WHITESPACE"," ",373],["T_FUNCTION","function",373],["T_WHITESPACE"," ",373],["T_STRING","query",373],"(",")",";",["T_WHITESPACE","\n\n  ",373],["T_DOC_COMMENT","\/**\n   * Does nothing (obsolete function).\n   *\n   * @todo This function no longer seems to be used.\n   *\/",375],["T_WHITESPACE","\n  ",379],["T_PUBLIC","public",380],["T_WHITESPACE"," ",380],["T_FUNCTION","function",380],["T_WHITESPACE"," ",380],["T_STRING","renderFilters",380],"(",")",";",["T_WHITESPACE","\n\n  ",380],["T_DOC_COMMENT","\/**\n   * Checks to see if the display plugins support pager rendering.\n   *\/",382],["T_WHITESPACE","\n  ",384],["T_PUBLIC","public",385],["T_WHITESPACE"," ",385],["T_FUNCTION","function",385],["T_WHITESPACE"," ",385],["T_STRING","renderPager",385],"(",")",";",["T_WHITESPACE","\n\n  ",385],["T_DOC_COMMENT","\/**\n   * Renders the 'more' link.\n   *\/",387],["T_WHITESPACE","\n  ",389],["T_PUBLIC","public",390],["T_WHITESPACE"," ",390],["T_FUNCTION","function",390],["T_WHITESPACE"," ",390],["T_STRING","renderMoreLink",390],"(",")",";",["T_WHITESPACE","\n\n  ",390],["T_DOC_COMMENT","\/**\n   * Renders this display.\n   *\/",392],["T_WHITESPACE","\n  ",394],["T_PUBLIC","public",395],["T_WHITESPACE"," ",395],["T_FUNCTION","function",395],["T_WHITESPACE"," ",395],["T_STRING","render",395],"(",")",";",["T_WHITESPACE","\n\n  ",395],["T_DOC_COMMENT","\/**\n   * #pre_render callback for view display rendering.\n   *\n   * @see self::render()\n   *\n   * @param array $element\n   *   The element to #pre_render\n   *\n   * @return array\n   *   The processed element.\n   *\/",397],["T_WHITESPACE","\n  ",407],["T_PUBLIC","public",408],["T_WHITESPACE"," ",408],["T_FUNCTION","function",408],["T_WHITESPACE"," ",408],["T_STRING","elementPreRender",408],"(",["T_ARRAY","array",408],["T_WHITESPACE"," ",408],["T_VARIABLE","$element",408],")",";",["T_WHITESPACE","\n\n  ",408],["T_DOC_COMMENT","\/**\n   * Renders one of the available areas.\n   *\n   * @param string $area\n   *   Identifier of the specific area to render.\n   * @param bool $empty\n   *   (optional) Indicator whether or not the view result is empty. Defaults to\n   *   FALSE\n   *\n   * @return array\n   *   A render array for the given area.\n   *\/",410],["T_WHITESPACE","\n  ",421],["T_PUBLIC","public",422],["T_WHITESPACE"," ",422],["T_FUNCTION","function",422],["T_WHITESPACE"," ",422],["T_STRING","renderArea",422],"(",["T_VARIABLE","$area",422],",",["T_WHITESPACE"," ",422],["T_VARIABLE","$empty",422],["T_WHITESPACE"," ",422],"=",["T_WHITESPACE"," ",422],["T_STRING","FALSE",422],")",";",["T_WHITESPACE","\n\n  ",422],["T_DOC_COMMENT","\/**\n   * Determines if the user has access to this display of the view.\n   *\/",424],["T_WHITESPACE","\n  ",426],["T_PUBLIC","public",427],["T_WHITESPACE"," ",427],["T_FUNCTION","function",427],["T_WHITESPACE"," ",427],["T_STRING","access",427],"(",["T_STRING","AccountInterface",427],["T_WHITESPACE"," ",427],["T_VARIABLE","$account",427],["T_WHITESPACE"," ",427],"=",["T_WHITESPACE"," ",427],["T_STRING","NULL",427],")",";",["T_WHITESPACE","\n\n  ",427],["T_DOC_COMMENT","\/**\n   * Sets up any variables on the view prior to execution.\n   *\n   * These are separated from execute because they are extremely common\n   * and unlikely to be overridden on an individual display.\n   *\/",429],["T_WHITESPACE","\n  ",434],["T_PUBLIC","public",435],["T_WHITESPACE"," ",435],["T_FUNCTION","function",435],["T_WHITESPACE"," ",435],["T_STRING","preExecute",435],"(",")",";",["T_WHITESPACE","\n\n  ",435],["T_DOC_COMMENT","\/**\n   * Calculates the display's cache metadata by inspecting each handler\/plugin.\n   *\n   * @return \\Drupal\\Core\\Cache\\CacheableMetadata\n   *   The cache metadata.\n   *\/",437],["T_WHITESPACE","\n  ",442],["T_PUBLIC","public",443],["T_WHITESPACE"," ",443],["T_FUNCTION","function",443],["T_WHITESPACE"," ",443],["T_STRING","calculateCacheMetadata",443],"(",")",";",["T_WHITESPACE","\n\n  ",443],["T_DOC_COMMENT","\/**\n   * Gets the cache metadata.\n   *\n   * @return \\Drupal\\Core\\Cache\\CacheableMetadata\n   *   The cache metadata.\n   *\/",445],["T_WHITESPACE","\n  ",450],["T_PUBLIC","public",451],["T_WHITESPACE"," ",451],["T_FUNCTION","function",451],["T_WHITESPACE"," ",451],["T_STRING","getCacheMetadata",451],"(",")",";",["T_WHITESPACE","\n\n  ",451],["T_DOC_COMMENT","\/**\n   * Executes the view and returns data in the format required.\n   *\n   * The base class cannot be executed.\n   *\/",453],["T_WHITESPACE","\n  ",457],["T_PUBLIC","public",458],["T_WHITESPACE"," ",458],["T_FUNCTION","function",458],["T_WHITESPACE"," ",458],["T_STRING","execute",458],"(",")",";",["T_WHITESPACE","\n\n\n  ",458],["T_DOC_COMMENT","\/**\n   * Builds a basic render array which can be properly render cached.\n   *\n   * In order to be rendered cached, it includes cache keys as well as the data\n   * required to load the view on cache misses.\n   *\n   * @param string $view_id\n   *   The view ID.\n   * @param string $display_id\n   *   The display ID.\n   * @param array $args\n   *   (optional) The view arguments.\n   *\n   * @return array\n   *   The view render array.\n   *\/",461],["T_WHITESPACE","\n  ",476],["T_PUBLIC","public",477],["T_WHITESPACE"," ",477],["T_STATIC","static",477],["T_WHITESPACE"," ",477],["T_FUNCTION","function",477],["T_WHITESPACE"," ",477],["T_STRING","buildBasicRenderable",477],"(",["T_VARIABLE","$view_id",477],",",["T_WHITESPACE"," ",477],["T_VARIABLE","$display_id",477],",",["T_WHITESPACE"," ",477],["T_ARRAY","array",477],["T_WHITESPACE"," ",477],["T_VARIABLE","$args",477],["T_WHITESPACE"," ",477],"=",["T_WHITESPACE"," ",477],"[","]",")",";",["T_WHITESPACE","\n\n  ",477],["T_DOC_COMMENT","\/**\n   * Builds a renderable array of the view.\n   *\n   * Note: This does not yet contain the executed view, but just the loaded view\n   * executable.\n   *\n   * @param array $args\n   *   (optional) Arguments of the view.\n   * @param bool $cache\n   *   (optional) Specify FALSE in order to opt out of render caching.\n   *\n   * @return array\n   *   The render array of a view.\n   *\/",479],["T_WHITESPACE","\n  ",492],["T_PUBLIC","public",493],["T_WHITESPACE"," ",493],["T_FUNCTION","function",493],["T_WHITESPACE"," ",493],["T_STRING","buildRenderable",493],"(",["T_ARRAY","array",493],["T_WHITESPACE"," ",493],["T_VARIABLE","$args",493],["T_WHITESPACE"," ",493],"=",["T_WHITESPACE"," ",493],"[","]",",",["T_WHITESPACE"," ",493],["T_VARIABLE","$cache",493],["T_WHITESPACE"," ",493],"=",["T_WHITESPACE"," ",493],["T_STRING","TRUE",493],")",";",["T_WHITESPACE","\n\n  ",493],["T_DOC_COMMENT","\/**\n   * Renders the display for the purposes of a live preview.\n   *\n   * Also might be used for some other AJAXy reason.\n   *\/",495],["T_WHITESPACE","\n  ",499],["T_FUNCTION","function",500],["T_WHITESPACE"," ",500],["T_STRING","preview",500],"(",")",";",["T_WHITESPACE","\n\n  ",500],["T_DOC_COMMENT","\/**\n   * Returns the display type that this display requires.\n   *\n   * This can be used for filtering views plugins. E.g. if a plugin category of\n   * 'foo' is specified, only plugins with no 'types' declared or 'types'\n   * containing 'foo'. If you have a type of bar, this plugin will not be used.\n   * This is applicable for style, row, access, cache, and exposed_form plugins.\n   *\n   * @return string\n   *   The required display type. Defaults to 'normal'.\n   *\n   * @see \\Drupal\\views\\Views::fetchPluginNames()\n   *\/",502],["T_WHITESPACE","\n  ",514],["T_PUBLIC","public",515],["T_WHITESPACE"," ",515],["T_FUNCTION","function",515],["T_WHITESPACE"," ",515],["T_STRING","getType",515],"(",")",";",["T_WHITESPACE","\n\n  ",515],["T_DOC_COMMENT","\/**\n   * Make sure the display and all associated handlers are valid.\n   *\n   * @return\n   *   Empty array if the display is valid; an array of error strings if it is\n   *   not.\n   *\/",517],["T_WHITESPACE","\n  ",523],["T_PUBLIC","public",524],["T_WHITESPACE"," ",524],["T_FUNCTION","function",524],["T_WHITESPACE"," ",524],["T_STRING","validate",524],"(",")",";",["T_WHITESPACE","\n\n  ",524],["T_DOC_COMMENT","\/**\n   * Reacts on adding a display.\n   *\n   * @see \\Drupal\\views\\Entity\\View::newDisplay()\n   *\/",526],["T_WHITESPACE","\n  ",530],["T_PUBLIC","public",531],["T_WHITESPACE"," ",531],["T_FUNCTION","function",531],["T_WHITESPACE"," ",531],["T_STRING","newDisplay",531],"(",")",";",["T_WHITESPACE","\n\n  ",531],["T_DOC_COMMENT","\/**\n   * Reacts on deleting a display.\n   *\/",533],["T_WHITESPACE","\n  ",535],["T_PUBLIC","public",536],["T_WHITESPACE"," ",536],["T_FUNCTION","function",536],["T_WHITESPACE"," ",536],["T_STRING","remove",536],"(",")",";",["T_WHITESPACE","\n\n  ",536],["T_DOC_COMMENT","\/**\n   * Checks if the provided identifier is unique.\n   *\n   * @param string $id\n   *   The id of the handler which is checked.\n   * @param string $identifier\n   *   The actual get identifier configured in the exposed settings.\n   *\n   * @return bool\n   *   Returns whether the identifier is unique on all handlers.\n   *\/",538],["T_WHITESPACE","\n  ",548],["T_PUBLIC","public",549],["T_WHITESPACE"," ",549],["T_FUNCTION","function",549],["T_WHITESPACE"," ",549],["T_STRING","isIdentifierUnique",549],"(",["T_VARIABLE","$id",549],",",["T_WHITESPACE"," ",549],["T_VARIABLE","$identifier",549],")",";",["T_WHITESPACE","\n\n  ",549],["T_DOC_COMMENT","\/**\n   * Is the output of the view empty.\n   *\n   * If a view has no result and neither the empty, nor the footer nor the header\n   * does show anything return FALSE.\n   *\n   * @return bool\n   *   Returns TRUE if the output is empty, else FALSE.\n   *\/",551],["T_WHITESPACE","\n  ",559],["T_PUBLIC","public",560],["T_WHITESPACE"," ",560],["T_FUNCTION","function",560],["T_WHITESPACE"," ",560],["T_STRING","outputIsEmpty",560],"(",")",";",["T_WHITESPACE","\n\n  ",560],["T_DOC_COMMENT","\/**\n   * Provides the block system with any exposed widget blocks for this display.\n   *\/",562],["T_WHITESPACE","\n  ",564],["T_PUBLIC","public",565],["T_WHITESPACE"," ",565],["T_FUNCTION","function",565],["T_WHITESPACE"," ",565],["T_STRING","getSpecialBlocks",565],"(",")",";",["T_WHITESPACE","\n\n  ",565],["T_DOC_COMMENT","\/**\n   * Renders the exposed form as block.\n   *\n   * @return string|null\n   *   The rendered exposed form as string or NULL otherwise.\n   *\/",567],["T_WHITESPACE","\n  ",572],["T_PUBLIC","public",573],["T_WHITESPACE"," ",573],["T_FUNCTION","function",573],["T_WHITESPACE"," ",573],["T_STRING","viewExposedFormBlocks",573],"(",")",";",["T_WHITESPACE","\n\n  ",573],["T_DOC_COMMENT","\/**\n   * Provides help text for the arguments.\n   *\n   * @return array\n   *   Returns an array which contains text for the argument fieldset:\n   *   - filter value present: The title of the fieldset in the argument\n   *     where you can configure what should be done with a given argument.\n   *   - filter value not present: The title of the fieldset in the argument\n   *     where you can configure what should be done if the argument does not\n   *     exist.\n   *   - description: A description about how arguments are passed\n   *     to the display. For example blocks can't get arguments from url.\n   *\/",575],["T_WHITESPACE","\n  ",587],["T_PUBLIC","public",588],["T_WHITESPACE"," ",588],["T_FUNCTION","function",588],["T_WHITESPACE"," ",588],["T_STRING","getArgumentText",588],"(",")",";",["T_WHITESPACE","\n\n  ",588],["T_DOC_COMMENT","\/**\n   * Provides help text for pagers.\n   *\n   * @return array\n   *   Returns an array which contains text for the items_per_page form\n   *   element:\n   *   - items per page title: The title text for the items_per_page form\n   *     element.\n   *   - items per page description: The description text for the\n   *     items_per_page form element.\n   *\/",590],["T_WHITESPACE","\n  ",600],["T_PUBLIC","public",601],["T_WHITESPACE"," ",601],["T_FUNCTION","function",601],["T_WHITESPACE"," ",601],["T_STRING","getPagerText",601],"(",")",";",["T_WHITESPACE","\n\n  ",601],["T_DOC_COMMENT","\/**\n   * Merges default values for all plugin types.\n   *\/",603],["T_WHITESPACE","\n  ",605],["T_PUBLIC","public",606],["T_WHITESPACE"," ",606],["T_FUNCTION","function",606],["T_WHITESPACE"," ",606],["T_STRING","mergeDefaults",606],"(",")",";",["T_WHITESPACE","\n\n  ",606],["T_DOC_COMMENT","\/**\n   * Gets the display extenders.\n   *\n   * @return \\Drupal\\views\\Plugin\\views\\display_extender\\DisplayExtenderPluginBase[]\n   *\/",608],["T_WHITESPACE","\n  ",612],["T_PUBLIC","public",613],["T_WHITESPACE"," ",613],["T_FUNCTION","function",613],["T_WHITESPACE"," ",613],["T_STRING","getExtenders",613],"(",")",";",["T_WHITESPACE","\n\n",613],"}",["T_WHITESPACE","\n",615]]