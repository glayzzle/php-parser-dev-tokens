[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","views",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Plugin",3],["T_NS_SEPARATOR","\\",3],["T_STRING","views",3],["T_NS_SEPARATOR","\\",3],["T_STRING","field",3],";",["T_WHITESPACE","\n\n",3],["T_USE","use",5],["T_WHITESPACE"," ",5],["T_STRING","Drupal",5],["T_NS_SEPARATOR","\\",5],["T_STRING","views",5],["T_NS_SEPARATOR","\\",5],["T_STRING","ResultRow",5],";",["T_WHITESPACE","\n",5],["T_USE","use",6],["T_WHITESPACE"," ",6],["T_STRING","Drupal",6],["T_NS_SEPARATOR","\\",6],["T_STRING","views",6],["T_NS_SEPARATOR","\\",6],["T_STRING","Plugin",6],["T_NS_SEPARATOR","\\",6],["T_STRING","views",6],["T_NS_SEPARATOR","\\",6],["T_STRING","ViewsHandlerInterface",6],";",["T_WHITESPACE","\n\n",6],["T_DOC_COMMENT","\/**\n * Base field handler that has no options and renders an unformatted field.\n *\/",8],["T_WHITESPACE","\n",10],["T_INTERFACE","interface",11],["T_WHITESPACE"," ",11],["T_STRING","FieldHandlerInterface",11],["T_WHITESPACE"," ",11],["T_EXTENDS","extends",11],["T_WHITESPACE"," ",11],["T_STRING","ViewsHandlerInterface",11],["T_WHITESPACE"," ",11],"{",["T_WHITESPACE","\n\n  ",11],["T_DOC_COMMENT","\/**\n   * Adds an ORDER BY clause to the query for click sort columns.\n   *\n   * @param string $order\n   *   Either ASC or DESC\n   *\/",13],["T_WHITESPACE","\n  ",18],["T_PUBLIC","public",19],["T_WHITESPACE"," ",19],["T_FUNCTION","function",19],["T_WHITESPACE"," ",19],["T_STRING","clickSort",19],"(",["T_VARIABLE","$order",19],")",";",["T_WHITESPACE","\n\n  ",19],["T_DOC_COMMENT","\/**\n   * Determines if this field is click sortable.\n   *\n   * @return bool\n   *   The value of 'click sortable' from the plugin definition, this defaults\n   *   to TRUE if not set.\n   *\/",21],["T_WHITESPACE","\n  ",27],["T_PUBLIC","public",28],["T_WHITESPACE"," ",28],["T_FUNCTION","function",28],["T_WHITESPACE"," ",28],["T_STRING","clickSortable",28],"(",")",";",["T_WHITESPACE","\n\n  ",28],["T_DOC_COMMENT","\/**\n   * Gets this field's label.\n   *\/",30],["T_WHITESPACE","\n  ",32],["T_PUBLIC","public",33],["T_WHITESPACE"," ",33],["T_FUNCTION","function",33],["T_WHITESPACE"," ",33],["T_STRING","label",33],"(",")",";",["T_WHITESPACE","\n\n  ",33],["T_DOC_COMMENT","\/**\n   * Returns an HTML element based upon the field's element type.\n   *\n   * @param bool $none_supported\n   *   Whether or not this HTML element is supported.\n   * @param bool $default_empty\n   *   Whether or not this HTML element is empty by default.\n   * @param bool $inline\n   *   Whether or not this HTML element is inline.\n   *\/",35],["T_WHITESPACE","\n  ",44],["T_PUBLIC","public",45],["T_WHITESPACE"," ",45],["T_FUNCTION","function",45],["T_WHITESPACE"," ",45],["T_STRING","elementType",45],"(",["T_VARIABLE","$none_supported",45],["T_WHITESPACE"," ",45],"=",["T_WHITESPACE"," ",45],["T_STRING","FALSE",45],",",["T_WHITESPACE"," ",45],["T_VARIABLE","$default_empty",45],["T_WHITESPACE"," ",45],"=",["T_WHITESPACE"," ",45],["T_STRING","FALSE",45],",",["T_WHITESPACE"," ",45],["T_VARIABLE","$inline",45],["T_WHITESPACE"," ",45],"=",["T_WHITESPACE"," ",45],["T_STRING","FALSE",45],")",";",["T_WHITESPACE","\n\n  ",45],["T_DOC_COMMENT","\/**\n   * Returns an HTML element for the label based upon the field's element type.\n   *\n   * @param bool $none_supported\n   *   Whether or not this HTML element is supported.\n   * @param bool $default_empty\n   *   Whether or not this HTML element is empty by default.\n   *\/",47],["T_WHITESPACE","\n  ",54],["T_PUBLIC","public",55],["T_WHITESPACE"," ",55],["T_FUNCTION","function",55],["T_WHITESPACE"," ",55],["T_STRING","elementLabelType",55],"(",["T_VARIABLE","$none_supported",55],["T_WHITESPACE"," ",55],"=",["T_WHITESPACE"," ",55],["T_STRING","FALSE",55],",",["T_WHITESPACE"," ",55],["T_VARIABLE","$default_empty",55],["T_WHITESPACE"," ",55],"=",["T_WHITESPACE"," ",55],["T_STRING","FALSE",55],")",";",["T_WHITESPACE","\n\n  ",55],["T_DOC_COMMENT","\/**\n   * Returns an HTML element for the wrapper based upon the field's element type.\n   *\n   * @param bool $none_supported\n   *   Whether or not this HTML element is supported.\n   * @param bool $default_empty\n   *   Whether or not this HTML element is empty by default.\n   *\/",57],["T_WHITESPACE","\n  ",64],["T_PUBLIC","public",65],["T_WHITESPACE"," ",65],["T_FUNCTION","function",65],["T_WHITESPACE"," ",65],["T_STRING","elementWrapperType",65],"(",["T_VARIABLE","$none_supported",65],["T_WHITESPACE"," ",65],"=",["T_WHITESPACE"," ",65],["T_STRING","FALSE",65],",",["T_WHITESPACE"," ",65],["T_VARIABLE","$default_empty",65],["T_WHITESPACE"," ",65],"=",["T_WHITESPACE"," ",65],["T_STRING","FALSE",65],")",";",["T_WHITESPACE","\n\n  ",65],["T_DOC_COMMENT","\/**\n   * Provides a list of elements valid for field HTML.\n   *\n   * This function can be overridden by fields that want more or fewer\n   * elements available, though this seems like it would be an incredibly\n   * rare occurrence.\n   *\/",67],["T_WHITESPACE","\n  ",73],["T_PUBLIC","public",74],["T_WHITESPACE"," ",74],["T_FUNCTION","function",74],["T_WHITESPACE"," ",74],["T_STRING","getElements",74],"(",")",";",["T_WHITESPACE","\n\n  ",74],["T_DOC_COMMENT","\/**\n   * Returns the class of the field.\n   *\n   * @param bool $row_index\n   *   The index of current row.\n   *\/",76],["T_WHITESPACE","\n  ",81],["T_PUBLIC","public",82],["T_WHITESPACE"," ",82],["T_FUNCTION","function",82],["T_WHITESPACE"," ",82],["T_STRING","elementClasses",82],"(",["T_VARIABLE","$row_index",82],["T_WHITESPACE"," ",82],"=",["T_WHITESPACE"," ",82],["T_STRING","NULL",82],")",";",["T_WHITESPACE","\n\n  ",82],["T_DOC_COMMENT","\/**\n   * Replaces a value with tokens from the last field.\n   *\n   * This function actually figures out which field was last and uses its\n   * tokens so they will all be available.\n   *\n   * @param string $value\n   *   The raw string.\n   * @param bool $row_index\n   *   The index of current row.\n   *\/",84],["T_WHITESPACE","\n  ",94],["T_PUBLIC","public",95],["T_WHITESPACE"," ",95],["T_FUNCTION","function",95],["T_WHITESPACE"," ",95],["T_STRING","tokenizeValue",95],"(",["T_VARIABLE","$value",95],",",["T_WHITESPACE"," ",95],["T_VARIABLE","$row_index",95],["T_WHITESPACE"," ",95],"=",["T_WHITESPACE"," ",95],["T_STRING","NULL",95],")",";",["T_WHITESPACE","\n\n  ",95],["T_DOC_COMMENT","\/**\n   * Returns the class of the field's label.\n   *\n   * @param bool $row_index\n   *   The index of current row.\n   *\/",97],["T_WHITESPACE","\n  ",102],["T_PUBLIC","public",103],["T_WHITESPACE"," ",103],["T_FUNCTION","function",103],["T_WHITESPACE"," ",103],["T_STRING","elementLabelClasses",103],"(",["T_VARIABLE","$row_index",103],["T_WHITESPACE"," ",103],"=",["T_WHITESPACE"," ",103],["T_STRING","NULL",103],")",";",["T_WHITESPACE","\n\n  ",103],["T_DOC_COMMENT","\/**\n   * Returns the class of the field's wrapper.\n   *\n   * @param bool $row_index\n   *   The index of current row.\n   *\/",105],["T_WHITESPACE","\n  ",110],["T_PUBLIC","public",111],["T_WHITESPACE"," ",111],["T_FUNCTION","function",111],["T_WHITESPACE"," ",111],["T_STRING","elementWrapperClasses",111],"(",["T_VARIABLE","$row_index",111],["T_WHITESPACE"," ",111],"=",["T_WHITESPACE"," ",111],["T_STRING","NULL",111],")",";",["T_WHITESPACE","\n\n  ",111],["T_DOC_COMMENT","\/**\n   * Gets the entity matching the current row and relationship.\n   *\n   * @param \\Drupal\\views\\ResultRow $values\n   *   An object containing all retrieved values.\n   *\n   * @return \\Drupal\\Core\\Entity\\EntityInterface|null\n   *   Returns the entity matching the values or NULL if there is no matching\n   *   entity.\n   *\/",113],["T_WHITESPACE","\n  ",122],["T_PUBLIC","public",123],["T_WHITESPACE"," ",123],["T_FUNCTION","function",123],["T_WHITESPACE"," ",123],["T_STRING","getEntity",123],"(",["T_STRING","ResultRow",123],["T_WHITESPACE"," ",123],["T_VARIABLE","$values",123],")",";",["T_WHITESPACE","\n\n  ",123],["T_DOC_COMMENT","\/**\n   * Gets the value that's supposed to be rendered.\n   *\n   * This api exists so that other modules can easy set the values of the field\n   * without having the need to change the render method as well.\n   *\n   * @param \\Drupal\\views\\ResultRow $values\n   *   An object containing all retrieved values.\n   * @param string $field\n   *   Optional name of the field where the value is stored.\n   *\/",125],["T_WHITESPACE","\n  ",135],["T_PUBLIC","public",136],["T_WHITESPACE"," ",136],["T_FUNCTION","function",136],["T_WHITESPACE"," ",136],["T_STRING","getValue",136],"(",["T_STRING","ResultRow",136],["T_WHITESPACE"," ",136],["T_VARIABLE","$values",136],",",["T_WHITESPACE"," ",136],["T_VARIABLE","$field",136],["T_WHITESPACE"," ",136],"=",["T_WHITESPACE"," ",136],["T_STRING","NULL",136],")",";",["T_WHITESPACE","\n\n  ",136],["T_DOC_COMMENT","\/**\n   * Determines if this field will be available as an option to group the result\n   * by in the style settings.\n   *\n   * @return bool\n   *   TRUE if this field handler is groupable, otherwise FALSE.\n   *\/",138],["T_WHITESPACE","\n  ",144],["T_PUBLIC","public",145],["T_WHITESPACE"," ",145],["T_FUNCTION","function",145],["T_WHITESPACE"," ",145],["T_STRING","useStringGroupBy",145],"(",")",";",["T_WHITESPACE","\n\n  ",145],["T_DOC_COMMENT","\/**\n   * Runs before any fields are rendered.\n   *\n   * This gives the handlers some time to set up before any handler has\n   * been rendered.\n   *\n   * @param \\Drupal\\views\\ResultRow[] $values\n   *   An array of all ResultRow objects returned from the query.\n   *\/",147],["T_WHITESPACE","\n  ",155],["T_PUBLIC","public",156],["T_WHITESPACE"," ",156],["T_FUNCTION","function",156],["T_WHITESPACE"," ",156],["T_STRING","preRender",156],"(","&",["T_VARIABLE","$values",156],")",";",["T_WHITESPACE","\n\n  ",156],["T_DOC_COMMENT","\/**\n   * Renders the field.\n   *\n   * @param \\Drupal\\views\\ResultRow $values\n   *   The values retrieved from a single row of a view's query result.\n   *\n   * @return string|\\Drupal\\Component\\Render\\MarkupInterface\n   *   The rendered output. If the output is safe it will be wrapped in an\n   *   object that implements MarkupInterface. If it is empty or unsafe it\n   *   will be a string.\n   *\/",158],["T_WHITESPACE","\n  ",168],["T_PUBLIC","public",169],["T_WHITESPACE"," ",169],["T_FUNCTION","function",169],["T_WHITESPACE"," ",169],["T_STRING","render",169],"(",["T_STRING","ResultRow",169],["T_WHITESPACE"," ",169],["T_VARIABLE","$values",169],")",";",["T_WHITESPACE","\n\n  ",169],["T_DOC_COMMENT","\/**\n   * Runs after every field has been rendered.\n   *\n   * This is meant to be used mainly to deal with field handlers whose output\n   * cannot be cached at row level but can be cached at display level. The\n   * typical example is the row counter. For completely uncacheable field output\n   * placeholders should be used.\n   *\n   * @param \\Drupal\\views\\ResultRow $row\n   *   An array of all ResultRow objects returned from the query.\n   * @param $output\n   *   The field rendered output.\n   *\n   * @return string[]\n   *   An associative array of post-render token values keyed by placeholder.\n   *\n   * @see \\Drupal\\views\\Plugin\\views\\field\\UncacheableFieldHandlerTrait\n   *\/",171],["T_WHITESPACE","\n  ",188],["T_PUBLIC","public",189],["T_WHITESPACE"," ",189],["T_FUNCTION","function",189],["T_WHITESPACE"," ",189],["T_STRING","postRender",189],"(",["T_STRING","ResultRow",189],["T_WHITESPACE"," ",189],["T_VARIABLE","$row",189],",",["T_WHITESPACE"," ",189],["T_VARIABLE","$output",189],")",";",["T_WHITESPACE","\n\n  ",189],["T_DOC_COMMENT","\/**\n   * Renders a field using advanced settings.\n   *\n   * This renders a field normally, then decides if render-as-link and\n   * text-replacement rendering is necessary.\n   *\n   * @param \\Drupal\\views\\ResultRow $values\n   *   The values retrieved from a single row of a view's query result.\n   *\n   * @return string|\\Drupal\\Component\\Render\\MarkupInterface\n   *   The advanced rendered output. If the output is safe it will be wrapped in\n   *   an object that implements MarkupInterface. If it is empty or unsafe\n   *   it will be a string.\n   *\/",191],["T_WHITESPACE","\n  ",204],["T_PUBLIC","public",205],["T_WHITESPACE"," ",205],["T_FUNCTION","function",205],["T_WHITESPACE"," ",205],["T_STRING","advancedRender",205],"(",["T_STRING","ResultRow",205],["T_WHITESPACE"," ",205],["T_VARIABLE","$values",205],")",";",["T_WHITESPACE","\n\n  ",205],["T_DOC_COMMENT","\/**\n   * Checks if a field value is empty.\n   *\n   * @param $value\n   *   The field value.\n   * @param bool $empty_zero\n   *   Whether or not this field is configured to consider 0 as empty.\n   * @param bool $no_skip_empty\n   *   Whether or not to use empty() to check the value.\n   *\n   * @return bool\n   *   TRUE if the value is considered empty, FALSE otherwise.\n   *\/",207],["T_WHITESPACE","\n  ",219],["T_PUBLIC","public",220],["T_WHITESPACE"," ",220],["T_FUNCTION","function",220],["T_WHITESPACE"," ",220],["T_STRING","isValueEmpty",220],"(",["T_VARIABLE","$value",220],",",["T_WHITESPACE"," ",220],["T_VARIABLE","$empty_zero",220],",",["T_WHITESPACE"," ",220],["T_VARIABLE","$no_skip_empty",220],["T_WHITESPACE"," ",220],"=",["T_WHITESPACE"," ",220],["T_STRING","TRUE",220],")",";",["T_WHITESPACE","\n\n  ",220],["T_DOC_COMMENT","\/**\n   * Performs an advanced text render for the item.\n   *\n   * This is separated out as some fields may render lists, and this allows\n   * each item to be handled individually.\n   *\n   * @param array $alter\n   *   The alter array of options to use.\n   *     - max_length: Maximum length of the string, the rest gets truncated.\n   *     - word_boundary: Trim only on a word boundary.\n   *     - ellipsis: Show an ellipsis (\u00e2\u0080\u00a6) at the end of the trimmed string.\n   *     - html: Make sure that the html is correct.\n   *\n   * @return string|\\Drupal\\Component\\Render\\MarkupInterface\n   *   The rendered output. If the output is safe it will be wrapped in an\n   *   object that implements MarkupInterface. If it is empty or unsafe it\n   *   will be a string.\n   *\/",222],["T_WHITESPACE","\n  ",239],["T_PUBLIC","public",240],["T_WHITESPACE"," ",240],["T_FUNCTION","function",240],["T_WHITESPACE"," ",240],["T_STRING","renderText",240],"(",["T_VARIABLE","$alter",240],")",";",["T_WHITESPACE","\n\n  ",240],["T_DOC_COMMENT","\/**\n   * Gets the 'render' tokens to use for advanced rendering.\n   *\n   * This runs through all of the fields and arguments that\n   * are available and gets their values. This will then be\n   * used in one giant str_replace().\n   *\n   * @param mixed $item\n   *   The item to render.\n   *\n   * @return array\n   *   An array of available tokens\n   *\/",242],["T_WHITESPACE","\n  ",254],["T_PUBLIC","public",255],["T_WHITESPACE"," ",255],["T_FUNCTION","function",255],["T_WHITESPACE"," ",255],["T_STRING","getRenderTokens",255],"(",["T_VARIABLE","$item",255],")",";",["T_WHITESPACE","\n\n  ",255],["T_DOC_COMMENT","\/**\n   * Passes values to drupal_render() using $this->themeFunctions() as #theme.\n   *\n   * @param \\Drupal\\views\\ResultRow $values\n   *   Holds single row of a view's result set.\n   *\n   * @return string|\\Drupal\\Component\\Render\\MarkupInterface\n   *   Returns rendered output of the given theme implementation. If the output\n   *   is safe it will be wrapped in an object that implements\n   *   MarkupInterface. If it is empty or unsafe it will be a string.\n   *\/",257],["T_WHITESPACE","\n  ",267],["T_FUNCTION","function",268],["T_WHITESPACE"," ",268],["T_STRING","theme",268],"(",["T_STRING","ResultRow",268],["T_WHITESPACE"," ",268],["T_VARIABLE","$values",268],")",";",["T_WHITESPACE","\n\n",268],"}",["T_WHITESPACE","\n",270]]