[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","views",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Plugin",3],["T_NS_SEPARATOR","\\",3],["T_STRING","views",3],["T_NS_SEPARATOR","\\",3],["T_STRING","display",3],";",["T_WHITESPACE","\n\n",3],["T_DOC_COMMENT","\/**\n * A plugin to handle defaults on a view.\n *\n * @ingroup views_display_plugins\n *\n * @ViewsDisplay(\n *   id = \"default\",\n *   title = @Translation(\"Master\"),\n *   help = @Translation(\"Default settings for this view.\"),\n *   theme = \"views_view\",\n *   no_ui = TRUE\n * )\n *\/",5],["T_WHITESPACE","\n",17],["T_CLASS","class",18],["T_WHITESPACE"," ",18],["T_STRING","DefaultDisplay",18],["T_WHITESPACE"," ",18],["T_EXTENDS","extends",18],["T_WHITESPACE"," ",18],["T_STRING","DisplayPluginBase",18],["T_WHITESPACE"," ",18],"{",["T_WHITESPACE","\n\n  ",18],["T_DOC_COMMENT","\/**\n   * Whether the display allows attachments.\n   *\n   * @var bool\n   *\/",20],["T_WHITESPACE","\n  ",24],["T_PROTECTED","protected",25],["T_WHITESPACE"," ",25],["T_VARIABLE","$usesAttachments",25],["T_WHITESPACE"," ",25],"=",["T_WHITESPACE"," ",25],["T_STRING","TRUE",25],";",["T_WHITESPACE","\n\n  ",25],["T_DOC_COMMENT","\/**\n   * Determine if this display is the 'default' display which contains\n   * fallback settings\n   *\/",27],["T_WHITESPACE","\n  ",30],["T_PUBLIC","public",31],["T_WHITESPACE"," ",31],["T_FUNCTION","function",31],["T_WHITESPACE"," ",31],["T_STRING","isDefaultDisplay",31],"(",")",["T_WHITESPACE"," ",31],"{",["T_WHITESPACE"," ",31],["T_RETURN","return",31],["T_WHITESPACE"," ",31],["T_STRING","TRUE",31],";",["T_WHITESPACE"," ",31],"}",["T_WHITESPACE","\n\n  ",31],["T_DOC_COMMENT","\/**\n   * The default execute handler fully renders the view.\n   *\n   * For the simplest use:\n   * @code\n   *   $output = $view->executeDisplay('default', $args);\n   * @endcode\n   *\n   * For more complex usages, a view can be partially built:\n   * @code\n   *   $view->setArguments($args);\n   *   $view->build('default'); \/\/ Build the query\n   *   $view->preExecute(); \/\/ Pre-execute the query.\n   *   $view->execute(); \/\/ Run the query\n   *   $output = $view->render(); \/\/ Render the view\n   * @endcode\n   *\n   * If short circuited at any point, look in $view->build_info for\n   * information about the query. After execute, look in $view->result\n   * for the array of objects returned from db_query.\n   *\n   * You can also do:\n   * @code\n   *   $view->setArguments($args);\n   *   $output = $view->render('default'); \/\/ Render the view\n   * @endcode\n   *\n   * This illustrates that render is smart enough to call build and execute\n   * if these items have not already been accomplished.\n   *\n   * Note that execute also must accomplish other tasks, such as setting page\n   * titles, and generating exposed filter data if necessary.\n   *\/",33],["T_WHITESPACE","\n  ",65],["T_PUBLIC","public",66],["T_WHITESPACE"," ",66],["T_FUNCTION","function",66],["T_WHITESPACE"," ",66],["T_STRING","execute",66],"(",")",["T_WHITESPACE"," ",66],"{",["T_WHITESPACE","\n    ",66],["T_RETURN","return",67],["T_WHITESPACE"," ",67],["T_VARIABLE","$this",67],["T_OBJECT_OPERATOR","->",67],["T_STRING","view",67],["T_OBJECT_OPERATOR","->",67],["T_STRING","render",67],"(",["T_VARIABLE","$this",67],["T_OBJECT_OPERATOR","->",67],["T_STRING","display",67],"[",["T_CONSTANT_ENCAPSED_STRING","'id'",67],"]",")",";",["T_WHITESPACE","\n  ",67],"}",["T_WHITESPACE","\n\n",68],"}",["T_WHITESPACE","\n",70]]