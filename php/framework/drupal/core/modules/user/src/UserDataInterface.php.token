[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","user",3],";",["T_WHITESPACE","\n\n",3],["T_DOC_COMMENT","\/**\n * Defines the user data service interface.\n *\/",5],["T_WHITESPACE","\n",7],["T_INTERFACE","interface",8],["T_WHITESPACE"," ",8],["T_STRING","UserDataInterface",8],["T_WHITESPACE"," ",8],"{",["T_WHITESPACE","\n\n  ",8],["T_DOC_COMMENT","\/**\n   * Returns data stored for a user account.\n   *\n   * @param string $module\n   *   The name of the module the data is associated with.\n   * @param int $uid\n   *   (optional) The user account ID the data is associated with.\n   * @param string $name\n   *   (optional) The name of the data key.\n   *\n   * @return mixed|array\n   *   The requested user account data, depending on the arguments passed:\n   *   - For $module, $name, and $uid, the stored value is returned, or NULL if\n   *     no value was found.\n   *   - For $module and $uid, an associative array is returned that contains\n   *     the stored data name\/value pairs.\n   *   - For $module and $name, an associative array is returned whose keys are\n   *     user IDs and whose values contain the stored values.\n   *   - For $module only, an associative array is returned that contains all\n   *     existing data for $module in all user accounts, keyed first by user ID\n   *     and $name second.\n   *\/",10],["T_WHITESPACE","\n  ",31],["T_PUBLIC","public",32],["T_WHITESPACE"," ",32],["T_FUNCTION","function",32],["T_WHITESPACE"," ",32],["T_STRING","get",32],"(",["T_VARIABLE","$module",32],",",["T_WHITESPACE"," ",32],["T_VARIABLE","$uid",32],["T_WHITESPACE"," ",32],"=",["T_WHITESPACE"," ",32],["T_STRING","NULL",32],",",["T_WHITESPACE"," ",32],["T_VARIABLE","$name",32],["T_WHITESPACE"," ",32],"=",["T_WHITESPACE"," ",32],["T_STRING","NULL",32],")",";",["T_WHITESPACE","\n\n  ",32],["T_DOC_COMMENT","\/**\n   * Stores data for a user account.\n   *\n   * @param string $module\n   *   The name of the module the data is associated with.\n   * @param int $uid\n   *   The user account ID the data is associated with.\n   * @param string $name\n   *   The name of the data key.\n   * @param mixed $value\n   *   The value to store. Non-scalar values are serialized automatically.\n   *\/",34],["T_WHITESPACE","\n  ",45],["T_PUBLIC","public",46],["T_WHITESPACE"," ",46],["T_FUNCTION","function",46],["T_WHITESPACE"," ",46],["T_STRING","set",46],"(",["T_VARIABLE","$module",46],",",["T_WHITESPACE"," ",46],["T_VARIABLE","$uid",46],",",["T_WHITESPACE"," ",46],["T_VARIABLE","$name",46],",",["T_WHITESPACE"," ",46],["T_VARIABLE","$value",46],")",";",["T_WHITESPACE","\n\n  ",46],["T_DOC_COMMENT","\/**\n   * Deletes data stored for a user account.\n   *\n   * @param string|array $module\n   *   (optional) The name of the module the data is associated with. Can also\n   *   be an array to delete the data of multiple modules.\n   * @param int|array $uid\n   *   (optional) The user account ID the data is associated with. If omitted,\n   *   all data for $module is deleted. Can also be an array of IDs to delete\n   *   the data of multiple user accounts.\n   * @param string $name\n   *   (optional) The name of the data key. If omitted, all data associated with\n   *   $module and $uid is deleted.\n   *\/",48],["T_WHITESPACE","\n  ",61],["T_PUBLIC","public",62],["T_WHITESPACE"," ",62],["T_FUNCTION","function",62],["T_WHITESPACE"," ",62],["T_STRING","delete",62],"(",["T_VARIABLE","$module",62],["T_WHITESPACE"," ",62],"=",["T_WHITESPACE"," ",62],["T_STRING","NULL",62],",",["T_WHITESPACE"," ",62],["T_VARIABLE","$uid",62],["T_WHITESPACE"," ",62],"=",["T_WHITESPACE"," ",62],["T_STRING","NULL",62],",",["T_WHITESPACE"," ",62],["T_VARIABLE","$name",62],["T_WHITESPACE"," ",62],"=",["T_WHITESPACE"," ",62],["T_STRING","NULL",62],")",";",["T_WHITESPACE","\n\n",62],"}",["T_WHITESPACE","\n",64]]