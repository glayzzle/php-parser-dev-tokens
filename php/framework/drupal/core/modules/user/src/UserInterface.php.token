[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","user",3],";",["T_WHITESPACE","\n\n",3],["T_USE","use",5],["T_WHITESPACE"," ",5],["T_STRING","Drupal",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Core",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Entity",5],["T_NS_SEPARATOR","\\",5],["T_STRING","EntityChangedInterface",5],";",["T_WHITESPACE","\n",5],["T_USE","use",6],["T_WHITESPACE"," ",6],["T_STRING","Drupal",6],["T_NS_SEPARATOR","\\",6],["T_STRING","Core",6],["T_NS_SEPARATOR","\\",6],["T_STRING","Entity",6],["T_NS_SEPARATOR","\\",6],["T_STRING","ContentEntityInterface",6],";",["T_WHITESPACE","\n",6],["T_USE","use",7],["T_WHITESPACE"," ",7],["T_STRING","Drupal",7],["T_NS_SEPARATOR","\\",7],["T_STRING","Core",7],["T_NS_SEPARATOR","\\",7],["T_STRING","Session",7],["T_NS_SEPARATOR","\\",7],["T_STRING","AccountInterface",7],";",["T_WHITESPACE","\n\n",7],["T_DOC_COMMENT","\/**\n * Provides an interface defining a user entity.\n *\n * @ingroup user_api\n *\/",9],["T_WHITESPACE","\n",13],["T_INTERFACE","interface",14],["T_WHITESPACE"," ",14],["T_STRING","UserInterface",14],["T_WHITESPACE"," ",14],["T_EXTENDS","extends",14],["T_WHITESPACE"," ",14],["T_STRING","ContentEntityInterface",14],",",["T_WHITESPACE"," ",14],["T_STRING","EntityChangedInterface",14],",",["T_WHITESPACE"," ",14],["T_STRING","AccountInterface",14],["T_WHITESPACE"," ",14],"{",["T_WHITESPACE","\n\n  ",14],["T_DOC_COMMENT","\/**\n   * Whether a user has a certain role.\n   *\n   * @param string $rid\n   *   The role ID to check.\n   *\n   * @return bool\n   *   Returns TRUE if the user has the role, otherwise FALSE.\n   *\/",16],["T_WHITESPACE","\n  ",24],["T_PUBLIC","public",25],["T_WHITESPACE"," ",25],["T_FUNCTION","function",25],["T_WHITESPACE"," ",25],["T_STRING","hasRole",25],"(",["T_VARIABLE","$rid",25],")",";",["T_WHITESPACE","\n\n  ",25],["T_DOC_COMMENT","\/**\n   * Add a role to a user.\n   *\n   * @param string $rid\n   *   The role ID to add.\n   *\/",27],["T_WHITESPACE","\n  ",32],["T_PUBLIC","public",33],["T_WHITESPACE"," ",33],["T_FUNCTION","function",33],["T_WHITESPACE"," ",33],["T_STRING","addRole",33],"(",["T_VARIABLE","$rid",33],")",";",["T_WHITESPACE","\n\n  ",33],["T_DOC_COMMENT","\/**\n   * Remove a role from a user.\n   *\n   * @param string $rid\n   *   The role ID to remove.\n   *\/",35],["T_WHITESPACE","\n  ",40],["T_PUBLIC","public",41],["T_WHITESPACE"," ",41],["T_FUNCTION","function",41],["T_WHITESPACE"," ",41],["T_STRING","removeRole",41],"(",["T_VARIABLE","$rid",41],")",";",["T_WHITESPACE","\n\n  ",41],["T_DOC_COMMENT","\/**\n   * Sets the username of this account.\n   *\n   * @param string $username\n   *   The new user name.\n   *\n   * @return \\Drupal\\user\\UserInterface\n   *   The called user entity.\n   *\/",43],["T_WHITESPACE","\n  ",51],["T_PUBLIC","public",52],["T_WHITESPACE"," ",52],["T_FUNCTION","function",52],["T_WHITESPACE"," ",52],["T_STRING","setUsername",52],"(",["T_VARIABLE","$username",52],")",";",["T_WHITESPACE","\n\n  ",52],["T_DOC_COMMENT","\/**\n   * Returns the hashed password.\n   *\n   * @return string\n   *   The hashed password.\n   *\/",54],["T_WHITESPACE","\n  ",59],["T_PUBLIC","public",60],["T_WHITESPACE"," ",60],["T_FUNCTION","function",60],["T_WHITESPACE"," ",60],["T_STRING","getPassword",60],"(",")",";",["T_WHITESPACE","\n\n  ",60],["T_DOC_COMMENT","\/**\n   * Sets the user password.\n   *\n   * @param string $password\n   *   The new unhashed password.\n   *\n   * @return \\Drupal\\user\\UserInterface\n   *   The called user entity.\n   *\/",62],["T_WHITESPACE","\n  ",70],["T_PUBLIC","public",71],["T_WHITESPACE"," ",71],["T_FUNCTION","function",71],["T_WHITESPACE"," ",71],["T_STRING","setPassword",71],"(",["T_VARIABLE","$password",71],")",";",["T_WHITESPACE","\n\n  ",71],["T_DOC_COMMENT","\/**\n   * Sets the email address of the user.\n   *\n   * @param string $mail\n   *   The new email address of the user.\n   *\n   * @return \\Drupal\\user\\UserInterface\n   *   The called user entity.\n   *\/",73],["T_WHITESPACE","\n  ",81],["T_PUBLIC","public",82],["T_WHITESPACE"," ",82],["T_FUNCTION","function",82],["T_WHITESPACE"," ",82],["T_STRING","setEmail",82],"(",["T_VARIABLE","$mail",82],")",";",["T_WHITESPACE","\n\n  ",82],["T_DOC_COMMENT","\/**\n   * Returns the creation time of the user as a UNIX timestamp.\n   *\n   * @return int\n   *   Timestamp of the creation date.\n   *\/",84],["T_WHITESPACE","\n  ",89],["T_PUBLIC","public",90],["T_WHITESPACE"," ",90],["T_FUNCTION","function",90],["T_WHITESPACE"," ",90],["T_STRING","getCreatedTime",90],"(",")",";",["T_WHITESPACE","\n\n  ",90],["T_DOC_COMMENT","\/**\n   * Sets the UNIX timestamp when the user last accessed the site..\n   *\n   * @param int $timestamp\n   *   Timestamp of the last access.\n   *\n   * @return \\Drupal\\user\\UserInterface\n   *   The called user entity.\n   *\/",92],["T_WHITESPACE","\n  ",100],["T_PUBLIC","public",101],["T_WHITESPACE"," ",101],["T_FUNCTION","function",101],["T_WHITESPACE"," ",101],["T_STRING","setLastAccessTime",101],"(",["T_VARIABLE","$timestamp",101],")",";",["T_WHITESPACE","\n\n  ",101],["T_DOC_COMMENT","\/**\n   * Returns the UNIX timestamp when the user last logged in.\n   *\n   * @return int\n   *   Timestamp of the last login time.\n   *\/",103],["T_WHITESPACE","\n  ",108],["T_PUBLIC","public",109],["T_WHITESPACE"," ",109],["T_FUNCTION","function",109],["T_WHITESPACE"," ",109],["T_STRING","getLastLoginTime",109],"(",")",";",["T_WHITESPACE","\n\n  ",109],["T_DOC_COMMENT","\/**\n   * Sets the UNIX timestamp when the user last logged in.\n   *\n   * @param int $timestamp\n   *   Timestamp of the last login time.\n   *\n   * @return \\Drupal\\user\\UserInterface\n   *   The called user entity.\n   *\/",111],["T_WHITESPACE","\n  ",119],["T_PUBLIC","public",120],["T_WHITESPACE"," ",120],["T_FUNCTION","function",120],["T_WHITESPACE"," ",120],["T_STRING","setLastLoginTime",120],"(",["T_VARIABLE","$timestamp",120],")",";",["T_WHITESPACE","\n\n  ",120],["T_DOC_COMMENT","\/**\n   * Returns TRUE if the user is active.\n   *\n   * @return bool\n   *   TRUE if the user is active, false otherwise.\n   *\/",122],["T_WHITESPACE","\n  ",127],["T_PUBLIC","public",128],["T_WHITESPACE"," ",128],["T_FUNCTION","function",128],["T_WHITESPACE"," ",128],["T_STRING","isActive",128],"(",")",";",["T_WHITESPACE","\n\n  ",128],["T_DOC_COMMENT","\/**\n   * Returns TRUE if the user is blocked.\n   *\n   * @return bool\n   *   TRUE if the user is blocked, false otherwise.\n   *\/",130],["T_WHITESPACE","\n  ",135],["T_PUBLIC","public",136],["T_WHITESPACE"," ",136],["T_FUNCTION","function",136],["T_WHITESPACE"," ",136],["T_STRING","isBlocked",136],"(",")",";",["T_WHITESPACE","\n\n  ",136],["T_DOC_COMMENT","\/**\n   * Activates the user.\n   *\n   * @return \\Drupal\\user\\UserInterface\n   *   The called user entity.\n   *\/",138],["T_WHITESPACE","\n  ",143],["T_PUBLIC","public",144],["T_WHITESPACE"," ",144],["T_FUNCTION","function",144],["T_WHITESPACE"," ",144],["T_STRING","activate",144],"(",")",";",["T_WHITESPACE","\n\n  ",144],["T_DOC_COMMENT","\/**\n   * Blocks the user.\n   *\n   * @return \\Drupal\\user\\UserInterface\n   *   The called user entity.\n   *\/",146],["T_WHITESPACE","\n  ",151],["T_PUBLIC","public",152],["T_WHITESPACE"," ",152],["T_FUNCTION","function",152],["T_WHITESPACE"," ",152],["T_STRING","block",152],"(",")",";",["T_WHITESPACE","\n\n  ",152],["T_DOC_COMMENT","\/**\n   * Returns the email that was used when the user was registered.\n   *\n   * @return string\n   *   Initial email address of the user.\n   *\/",154],["T_WHITESPACE","\n  ",159],["T_PUBLIC","public",160],["T_WHITESPACE"," ",160],["T_FUNCTION","function",160],["T_WHITESPACE"," ",160],["T_STRING","getInitialEmail",160],"(",")",";",["T_WHITESPACE","\n\n  ",160],["T_DOC_COMMENT","\/**\n   * Sets the existing plain text password.\n   *\n   * Required for validation when changing the password, name or email fields.\n   *\n   * @param string $password\n   *   The existing plain text password of the user.\n   *\n   * @return $this\n   *\/",162],["T_WHITESPACE","\n  ",171],["T_PUBLIC","public",172],["T_WHITESPACE"," ",172],["T_FUNCTION","function",172],["T_WHITESPACE"," ",172],["T_STRING","setExistingPassword",172],"(",["T_VARIABLE","$password",172],")",";",["T_WHITESPACE","\n\n  ",172],["T_DOC_COMMENT","\/**\n   * Checks the existing password if set.\n   *\n   * @param \\Drupal\\user\\UserInterface $account_unchanged\n   *   The unchanged user entity to compare against.\n   *\n   * @return bool\n   *   TRUE if the correct existing password was provided.\n   *\n   * @see UserInterface::setExistingPassword()\n   *\/",174],["T_WHITESPACE","\n  ",184],["T_PUBLIC","public",185],["T_WHITESPACE"," ",185],["T_FUNCTION","function",185],["T_WHITESPACE"," ",185],["T_STRING","checkExistingPassword",185],"(",["T_STRING","UserInterface",185],["T_WHITESPACE"," ",185],["T_VARIABLE","$account_unchanged",185],")",";",["T_WHITESPACE","\n\n",185],"}",["T_WHITESPACE","\n",187]]