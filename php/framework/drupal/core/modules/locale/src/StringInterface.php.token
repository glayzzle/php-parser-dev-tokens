[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","locale",3],";",["T_WHITESPACE","\n\n",3],["T_DOC_COMMENT","\/**\n * Defines the locale string interface.\n *\/",5],["T_WHITESPACE","\n",7],["T_INTERFACE","interface",8],["T_WHITESPACE"," ",8],["T_STRING","StringInterface",8],["T_WHITESPACE"," ",8],"{",["T_WHITESPACE","\n\n  ",8],["T_DOC_COMMENT","\/**\n   * Gets the string unique identifier.\n   *\n   * @return int\n   *   The string identifier.\n   *\/",10],["T_WHITESPACE","\n  ",15],["T_PUBLIC","public",16],["T_WHITESPACE"," ",16],["T_FUNCTION","function",16],["T_WHITESPACE"," ",16],["T_STRING","getId",16],"(",")",";",["T_WHITESPACE","\n\n  ",16],["T_DOC_COMMENT","\/**\n   * Sets the string unique identifier.\n   *\n   * @param int $id\n   *   The string identifier.\n   *\n   * @return $this\n   *\/",18],["T_WHITESPACE","\n  ",25],["T_PUBLIC","public",26],["T_WHITESPACE"," ",26],["T_FUNCTION","function",26],["T_WHITESPACE"," ",26],["T_STRING","setId",26],"(",["T_VARIABLE","$id",26],")",";",["T_WHITESPACE","\n\n  ",26],["T_DOC_COMMENT","\/**\n   * Gets the string version.\n   *\n   * @return string\n   *   Version identifier.\n   *\/",28],["T_WHITESPACE","\n  ",33],["T_PUBLIC","public",34],["T_WHITESPACE"," ",34],["T_FUNCTION","function",34],["T_WHITESPACE"," ",34],["T_STRING","getVersion",34],"(",")",";",["T_WHITESPACE","\n\n  ",34],["T_DOC_COMMENT","\/**\n   * Sets the string version.\n   *\n   * @param string $version\n   *   Version identifier.\n   *\n   * @return $this\n   *\/",36],["T_WHITESPACE","\n  ",43],["T_PUBLIC","public",44],["T_WHITESPACE"," ",44],["T_FUNCTION","function",44],["T_WHITESPACE"," ",44],["T_STRING","setVersion",44],"(",["T_VARIABLE","$version",44],")",";",["T_WHITESPACE","\n\n  ",44],["T_DOC_COMMENT","\/**\n   * Gets plain string contained in this object.\n   *\n   * @return string\n   *   The string contained in this object.\n   *\/",46],["T_WHITESPACE","\n  ",51],["T_PUBLIC","public",52],["T_WHITESPACE"," ",52],["T_FUNCTION","function",52],["T_WHITESPACE"," ",52],["T_STRING","getString",52],"(",")",";",["T_WHITESPACE","\n\n  ",52],["T_DOC_COMMENT","\/**\n   * Sets the string contained in this object.\n   *\n   * @param string $string\n   *   String to set as value.\n   *\n   * @return $this\n   *\/",54],["T_WHITESPACE","\n  ",61],["T_PUBLIC","public",62],["T_WHITESPACE"," ",62],["T_FUNCTION","function",62],["T_WHITESPACE"," ",62],["T_STRING","setString",62],"(",["T_VARIABLE","$string",62],")",";",["T_WHITESPACE","\n\n  ",62],["T_DOC_COMMENT","\/**\n   * Splits string to work with plural values.\n   *\n   * @return array\n   *   Array of strings that are plural variants.\n   *\/",64],["T_WHITESPACE","\n  ",69],["T_PUBLIC","public",70],["T_WHITESPACE"," ",70],["T_FUNCTION","function",70],["T_WHITESPACE"," ",70],["T_STRING","getPlurals",70],"(",")",";",["T_WHITESPACE","\n\n  ",70],["T_DOC_COMMENT","\/**\n   * Sets this string using array of plural values.\n   *\n   * Serializes plural variants in one string glued by LOCALE_PLURAL_DELIMITER.\n   *\n   * @param array $plurals\n   *   Array of strings with plural variants.\n   *\n   * @return $this\n   *\/",72],["T_WHITESPACE","\n  ",81],["T_PUBLIC","public",82],["T_WHITESPACE"," ",82],["T_FUNCTION","function",82],["T_WHITESPACE"," ",82],["T_STRING","setPlurals",82],"(",["T_VARIABLE","$plurals",82],")",";",["T_WHITESPACE","\n\n  ",82],["T_DOC_COMMENT","\/**\n   * Gets the string storage.\n   *\n   * @return \\Drupal\\locale\\StringStorageInterface\n   *   The storage used for this string.\n   *\/",84],["T_WHITESPACE","\n  ",89],["T_PUBLIC","public",90],["T_WHITESPACE"," ",90],["T_FUNCTION","function",90],["T_WHITESPACE"," ",90],["T_STRING","getStorage",90],"(",")",";",["T_WHITESPACE","\n\n  ",90],["T_DOC_COMMENT","\/**\n   * Sets the string storage.\n   *\n   * @param \\Drupal\\locale\\StringStorageInterface $storage\n   *   The storage to use for this string.\n   *\n   * @return $this\n   *\/",92],["T_WHITESPACE","\n  ",99],["T_PUBLIC","public",100],["T_WHITESPACE"," ",100],["T_FUNCTION","function",100],["T_WHITESPACE"," ",100],["T_STRING","setStorage",100],"(",["T_VARIABLE","$storage",100],")",";",["T_WHITESPACE","\n\n  ",100],["T_DOC_COMMENT","\/**\n   * Checks whether the object is not saved to storage yet.\n   *\n   * @return bool\n   *   TRUE if the object exists in the storage, FALSE otherwise.\n   *\/",102],["T_WHITESPACE","\n  ",107],["T_PUBLIC","public",108],["T_WHITESPACE"," ",108],["T_FUNCTION","function",108],["T_WHITESPACE"," ",108],["T_STRING","isNew",108],"(",")",";",["T_WHITESPACE","\n\n  ",108],["T_DOC_COMMENT","\/**\n   * Checks whether the object is a source string.\n   *\n   * @return bool\n   *   TRUE if the object is a source string, FALSE otherwise.\n   *\/",110],["T_WHITESPACE","\n  ",115],["T_PUBLIC","public",116],["T_WHITESPACE"," ",116],["T_FUNCTION","function",116],["T_WHITESPACE"," ",116],["T_STRING","isSource",116],"(",")",";",["T_WHITESPACE","\n\n  ",116],["T_DOC_COMMENT","\/**\n   * Checks whether the object is a translation string.\n   *\n   * @return bool\n   *   TRUE if the object is a translation string, FALSE otherwise.\n   *\/",118],["T_WHITESPACE","\n  ",123],["T_PUBLIC","public",124],["T_WHITESPACE"," ",124],["T_FUNCTION","function",124],["T_WHITESPACE"," ",124],["T_STRING","isTranslation",124],"(",")",";",["T_WHITESPACE","\n\n  ",124],["T_DOC_COMMENT","\/**\n   * Sets an array of values as object properties.\n   *\n   * @param array $values\n   *   Array with values indexed by property name.\n   * @param bool $override\n   *   (optional) Whether to override already set fields, defaults to TRUE.\n   *\n   * @return $this\n   *\/",126],["T_WHITESPACE","\n  ",135],["T_PUBLIC","public",136],["T_WHITESPACE"," ",136],["T_FUNCTION","function",136],["T_WHITESPACE"," ",136],["T_STRING","setValues",136],"(",["T_ARRAY","array",136],["T_WHITESPACE"," ",136],["T_VARIABLE","$values",136],",",["T_WHITESPACE"," ",136],["T_VARIABLE","$override",136],["T_WHITESPACE"," ",136],"=",["T_WHITESPACE"," ",136],["T_STRING","TRUE",136],")",";",["T_WHITESPACE","\n\n  ",136],["T_DOC_COMMENT","\/**\n   * Gets field values that are set for given field names.\n   *\n   * @param array $fields\n   *   Array of field names.\n   *\n   * @return array\n   *   Array of field values indexed by field name.\n   *\/",138],["T_WHITESPACE","\n  ",146],["T_PUBLIC","public",147],["T_WHITESPACE"," ",147],["T_FUNCTION","function",147],["T_WHITESPACE"," ",147],["T_STRING","getValues",147],"(",["T_ARRAY","array",147],["T_WHITESPACE"," ",147],["T_VARIABLE","$fields",147],")",";",["T_WHITESPACE","\n\n  ",147],["T_DOC_COMMENT","\/**\n   * Gets location information for this string.\n   *\n   * Locations are arbitrary pairs of type and name strings, used to store\n   * information about the origins of the string, like the file name it\n   * was found on, the path on which it was discovered, etc.\n   *\n   * A string can have any number of locations since the same string may be\n   * found on different places of Drupal code and configuration.\n   *\n   * @param bool $check_only\n   *   (optional) Set to TRUE to get only new locations added during the\n   *   current page request and not loading all existing locations.\n   *\n   * @return array\n   *   Location ids indexed by type and name.\n   *\/",149],["T_WHITESPACE","\n  ",165],["T_PUBLIC","public",166],["T_WHITESPACE"," ",166],["T_FUNCTION","function",166],["T_WHITESPACE"," ",166],["T_STRING","getLocations",166],"(",["T_VARIABLE","$check_only",166],["T_WHITESPACE"," ",166],"=",["T_WHITESPACE"," ",166],["T_STRING","FALSE",166],")",";",["T_WHITESPACE","\n\n  ",166],["T_DOC_COMMENT","\/**\n   * Adds a location for this string.\n   *\n   * @param string $type\n   *   Location type that may be any arbitrary string. Types used in Drupal\n   *   core are: 'javascript', 'path', 'code', 'configuration'.\n   * @param string $name\n   *   Location name. Drupal path in case of online discovered translations,\n   *   file path in case of imported strings, configuration name for strings\n   *   that come from configuration, etc.\n   *\n   * @return $this\n   *\/",168],["T_WHITESPACE","\n  ",180],["T_PUBLIC","public",181],["T_WHITESPACE"," ",181],["T_FUNCTION","function",181],["T_WHITESPACE"," ",181],["T_STRING","addLocation",181],"(",["T_VARIABLE","$type",181],",",["T_WHITESPACE"," ",181],["T_VARIABLE","$name",181],")",";",["T_WHITESPACE","\n\n  ",181],["T_DOC_COMMENT","\/**\n   * Checks whether the string has a given location.\n   *\n   * @param string $type\n   *   Location type.\n   * @param string $name\n   *   Location name.\n   *\n   * @return bool\n   *   TRUE if the string has a location with this type and name.\n   *\/",183],["T_WHITESPACE","\n  ",193],["T_PUBLIC","public",194],["T_WHITESPACE"," ",194],["T_FUNCTION","function",194],["T_WHITESPACE"," ",194],["T_STRING","hasLocation",194],"(",["T_VARIABLE","$type",194],",",["T_WHITESPACE"," ",194],["T_VARIABLE","$name",194],")",";",["T_WHITESPACE","\n\n  ",194],["T_DOC_COMMENT","\/**\n   * Saves string object to storage.\n   *\n   * @return $this\n   *\n   * @throws \\Drupal\\locale\\StringStorageException\n   *   In case of failures, an exception is thrown.\n   *\/",196],["T_WHITESPACE","\n  ",203],["T_PUBLIC","public",204],["T_WHITESPACE"," ",204],["T_FUNCTION","function",204],["T_WHITESPACE"," ",204],["T_STRING","save",204],"(",")",";",["T_WHITESPACE","\n\n  ",204],["T_DOC_COMMENT","\/**\n   * Deletes string object from storage.\n   *\n   * @return $this\n   *\n   * @throws \\Drupal\\locale\\StringStorageException\n   *   In case of failures, an exception is thrown.\n   *\/",206],["T_WHITESPACE","\n  ",213],["T_PUBLIC","public",214],["T_WHITESPACE"," ",214],["T_FUNCTION","function",214],["T_WHITESPACE"," ",214],["T_STRING","delete",214],"(",")",";",["T_WHITESPACE","\n\n",214],"}",["T_WHITESPACE","\n",216]]