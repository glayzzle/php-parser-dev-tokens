[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","filter",3],";",["T_WHITESPACE","\n\n",3],["T_USE","use",5],["T_WHITESPACE"," ",5],["T_STRING","Drupal",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Core",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Config",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Entity",5],["T_NS_SEPARATOR","\\",5],["T_STRING","ConfigEntityInterface",5],";",["T_WHITESPACE","\n\n",5],["T_DOC_COMMENT","\/**\n * Provides an interface defining a filter format entity.\n *\/",7],["T_WHITESPACE","\n",9],["T_INTERFACE","interface",10],["T_WHITESPACE"," ",10],["T_STRING","FilterFormatInterface",10],["T_WHITESPACE"," ",10],["T_EXTENDS","extends",10],["T_WHITESPACE"," ",10],["T_STRING","ConfigEntityInterface",10],["T_WHITESPACE"," ",10],"{",["T_WHITESPACE","\n\n  ",10],["T_DOC_COMMENT","\/**\n   * Returns the ordered collection of filter plugin instances or an individual plugin instance.\n   *\n   * @param string $instance_id\n   *   (optional) The ID of a filter plugin instance to return.\n   *\n   * @return \\Drupal\\filter\\FilterPluginCollection|\\Drupal\\filter\\Plugin\\FilterInterface\n   *   Either the filter collection or a specific filter plugin instance.\n   *\/",12],["T_WHITESPACE","\n  ",20],["T_PUBLIC","public",21],["T_WHITESPACE"," ",21],["T_FUNCTION","function",21],["T_WHITESPACE"," ",21],["T_STRING","filters",21],"(",["T_VARIABLE","$instance_id",21],["T_WHITESPACE"," ",21],"=",["T_WHITESPACE"," ",21],["T_STRING","NULL",21],")",";",["T_WHITESPACE","\n\n  ",21],["T_DOC_COMMENT","\/**\n   * Sets the configuration for a filter plugin instance.\n   *\n   * Sets or replaces the configuration of a filter plugin in $this->filters,\n   * and if instantiated already, also ensures that the actual filter plugin on\n   * the FilterPluginCollection contains the identical configuration.\n   *\n   * @param string $instance_id\n   *   The ID of a filter plugin to set the configuration for.\n   * @param array $configuration\n   *   The filter plugin configuration to set.\n   *\/",23],["T_WHITESPACE","\n  ",34],["T_PUBLIC","public",35],["T_WHITESPACE"," ",35],["T_FUNCTION","function",35],["T_WHITESPACE"," ",35],["T_STRING","setFilterConfig",35],"(",["T_VARIABLE","$instance_id",35],",",["T_WHITESPACE"," ",35],["T_ARRAY","array",35],["T_WHITESPACE"," ",35],["T_VARIABLE","$configuration",35],")",";",["T_WHITESPACE","\n\n  ",35],["T_DOC_COMMENT","\/**\n   * Returns if this format is the fallback format.\n   *\n   * The fallback format can never be disabled. It must always be available.\n   *\n   * @return bool\n   *   TRUE if this format is the fallback format, FALSE otherwise.\n   *\/",37],["T_WHITESPACE","\n  ",44],["T_PUBLIC","public",45],["T_WHITESPACE"," ",45],["T_FUNCTION","function",45],["T_WHITESPACE"," ",45],["T_STRING","isFallbackFormat",45],"(",")",";",["T_WHITESPACE","\n\n  ",45],["T_DOC_COMMENT","\/**\n   * Returns the machine-readable permission name for the text format.\n   *\n   * @return string|bool\n   *   The machine-readable permission name, or FALSE if the text format is\n   *   malformed or is the fallback format (which is available to all users).\n   *\/",47],["T_WHITESPACE","\n  ",53],["T_PUBLIC","public",54],["T_WHITESPACE"," ",54],["T_FUNCTION","function",54],["T_WHITESPACE"," ",54],["T_STRING","getPermissionName",54],"(",")",";",["T_WHITESPACE","\n\n  ",54],["T_DOC_COMMENT","\/**\n   * Retrieves all filter types that are used in the text format.\n   *\n   * @return array\n   *   All filter types used by filters of the text format.\n   *\/",56],["T_WHITESPACE","\n  ",61],["T_PUBLIC","public",62],["T_WHITESPACE"," ",62],["T_FUNCTION","function",62],["T_WHITESPACE"," ",62],["T_STRING","getFilterTypes",62],"(",")",";",["T_WHITESPACE","\n\n  ",62],["T_DOC_COMMENT","\/**\n   * Retrieve all HTML restrictions (tags and attributes) for the text format.\n   *\n   * Note that restrictions applied to the \"*\" tag (the wildcard tag, i.e. all\n   * tags) are treated just like any other HTML tag. That means that any\n   * restrictions applied to it are not automatically applied to all other tags.\n   * It is up to the caller to handle this in whatever way it sees fit; this way\n   * no information granularity is lost.\n   *\n   * @return array|false\n   *   A structured array as returned by FilterInterface::getHTMLRestrictions(),\n   *   but with the intersection of all filters in this text format.\n   *   Will either indicate blacklisting of tags or whitelisting of tags. In\n   *   the latter case, it's possible that restrictions on attributes are also\n   *   stored. FALSE means there are no HTML restrictions.\n   *\/",64],["T_WHITESPACE","\n  ",79],["T_PUBLIC","public",80],["T_WHITESPACE"," ",80],["T_FUNCTION","function",80],["T_WHITESPACE"," ",80],["T_STRING","getHtmlRestrictions",80],"(",")",";",["T_WHITESPACE","\n\n  ",80],["T_DOC_COMMENT","\/**\n   * Removes a filter.\n   *\n   * @param string $instance_id\n   *   The ID of a filter plugin to be removed.\n   *\/",82],["T_WHITESPACE","\n  ",87],["T_PUBLIC","public",88],["T_WHITESPACE"," ",88],["T_FUNCTION","function",88],["T_WHITESPACE"," ",88],["T_STRING","removeFilter",88],"(",["T_VARIABLE","$instance_id",88],")",";",["T_WHITESPACE","\n\n",88],"}",["T_WHITESPACE","\n",90]]