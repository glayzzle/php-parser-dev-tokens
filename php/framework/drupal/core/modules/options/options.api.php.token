[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_DOC_COMMENT","\/**\n * @file\n * Hooks provided by the Options module.\n *\/",3],["T_WHITESPACE","\n\n",6],["T_USE","use",8],["T_WHITESPACE"," ",8],["T_STRING","Drupal",8],["T_NS_SEPARATOR","\\",8],["T_STRING","Core",8],["T_NS_SEPARATOR","\\",8],["T_STRING","Entity",8],["T_NS_SEPARATOR","\\",8],["T_STRING","FieldableEntityInterface",8],";",["T_WHITESPACE","\n",8],["T_USE","use",9],["T_WHITESPACE"," ",9],["T_STRING","Drupal",9],["T_NS_SEPARATOR","\\",9],["T_STRING","Core",9],["T_NS_SEPARATOR","\\",9],["T_STRING","Field",9],["T_NS_SEPARATOR","\\",9],["T_STRING","FieldStorageDefinitionInterface",9],";",["T_WHITESPACE","\n\n",9],["T_DOC_COMMENT","\/**\n * Alters the list of options to be displayed for a field.\n *\n * This hook can notably be used to change the label of the empty option.\n *\n * @param array $options\n *   The array of options for the field, as returned by\n *   \\Drupal\\Core\\TypedData\\OptionsProviderInterface::getSettableOptions(). An\n *   empty option (_none) might have been added, depending on the field\n *   properties.\n * @param array $context\n *   An associative array containing:\n *   - fieldDefinition: The field definition\n *     (\\Drupal\\Core\\Field\\FieldDefinitionInterface).\n *   - entity: The entity object the field is attached to\n *     (\\Drupal\\Core\\Entity\\EntityInterface).\n *\n * @ingroup hooks\n * @see hook_options_list()\n *\/",11],["T_WHITESPACE","\n",30],["T_FUNCTION","function",31],["T_WHITESPACE"," ",31],["T_STRING","hook_options_list_alter",31],"(",["T_ARRAY","array",31],["T_WHITESPACE"," ",31],"&",["T_VARIABLE","$options",31],",",["T_WHITESPACE"," ",31],["T_ARRAY","array",31],["T_WHITESPACE"," ",31],["T_VARIABLE","$context",31],")",["T_WHITESPACE"," ",31],"{",["T_WHITESPACE","\n  ",31],["T_COMMENT","\/\/ Check if this is the field we want to change.\n",32],["T_WHITESPACE","  ",33],["T_IF","if",33],["T_WHITESPACE"," ",33],"(",["T_VARIABLE","$context",33],"[",["T_CONSTANT_ENCAPSED_STRING","'fieldDefinition'",33],"]",["T_OBJECT_OPERATOR","->",33],["T_STRING","id",33],"(",")",["T_WHITESPACE"," ",33],["T_IS_EQUAL","==",33],["T_WHITESPACE"," ",33],["T_CONSTANT_ENCAPSED_STRING","'field_option'",33],")",["T_WHITESPACE"," ",33],"{",["T_WHITESPACE","\n    ",33],["T_COMMENT","\/\/ Change the label of the empty option.\n",34],["T_WHITESPACE","    ",35],["T_VARIABLE","$options",35],"[",["T_CONSTANT_ENCAPSED_STRING","'_none'",35],"]",["T_WHITESPACE"," ",35],"=",["T_WHITESPACE"," ",35],["T_STRING","t",35],"(",["T_CONSTANT_ENCAPSED_STRING","'== Empty =='",35],")",";",["T_WHITESPACE","\n  ",35],"}",["T_WHITESPACE","\n",36],"}",["T_WHITESPACE","\n\n",37],["T_DOC_COMMENT","\/**\n * Provide the allowed values for a 'list_*' field.\n *\n * Callback for options_allowed_values().\n *\n * 'list_*' fields can specify a callback to define the set of their allowed\n * values using the 'allowed_values_function' storage setting.\n *\n * That function will be called:\n *  - either in the context of a specific entity, which is then provided as the\n *    $entity parameter,\n *  - or for the field generally without the context of any specific entity or\n *    entity bundle (typically, Views needing a list of values for an exposed\n *    filter), in which case the $entity parameter is NULL.\n * This lets the callback restrict the set of allowed values or adjust the\n * labels depending on some conditions on the containing entity.\n *\n * For consistency, the set of values returned when an $entity is provided\n * should be a subset of the values returned when no $entity is provided.\n *\n * @param \\Drupal\\Core\\Field\\FieldStorageDefinitionInterface $definition\n *   The field storage definition.\n * @param \\Drupal\\Core\\Entity\\FieldableEntityInterface|null $entity\n *   (optional) The entity context if known, or NULL if the allowed values are\n *   being collected without the context of a specific entity.\n * @param bool &$cacheable\n *   (optional) If an $entity is provided, the $cacheable parameter should be\n *   modified by reference and set to FALSE if the set of allowed values\n *   returned was specifically adjusted for that entity and cannot not be reused\n *   for other entities. Defaults to TRUE.\n *\n * @return array\n *   The array of allowed values. Keys of the array are the raw stored values\n *   (number or text), values of the array are the display labels. If $entity\n *   is NULL, you should return the list of all the possible allowed values in\n *   any context so that other code (e.g. Views filters) can support the allowed\n *   values for all possible entities and bundles.\n *\n * @ingroup callbacks\n * @see options_allowed_values()\n * @see options_test_allowed_values_callback()\n * @see options_test_dynamic_values_callback()\n *\/",39],["T_WHITESPACE","\n",81],["T_FUNCTION","function",82],["T_WHITESPACE"," ",82],["T_STRING","callback_allowed_values_function",82],"(",["T_STRING","FieldStorageDefinitionInterface",82],["T_WHITESPACE"," ",82],["T_VARIABLE","$definition",82],",",["T_WHITESPACE"," ",82],["T_STRING","FieldableEntityInterface",82],["T_WHITESPACE"," ",82],["T_VARIABLE","$entity",82],["T_WHITESPACE"," ",82],"=",["T_WHITESPACE"," ",82],["T_STRING","NULL",82],",",["T_WHITESPACE"," ",82],"&",["T_VARIABLE","$cacheable",82],["T_WHITESPACE"," ",82],"=",["T_WHITESPACE"," ",82],["T_STRING","TRUE",82],")",["T_WHITESPACE"," ",82],"{",["T_WHITESPACE","\n  ",82],["T_IF","if",83],["T_WHITESPACE"," ",83],"(",["T_ISSET","isset",83],"(",["T_VARIABLE","$entity",83],")",["T_WHITESPACE"," ",83],["T_BOOLEAN_AND","&&",83],["T_WHITESPACE"," ",83],"(",["T_VARIABLE","$entity",83],["T_OBJECT_OPERATOR","->",83],["T_STRING","bundle",83],"(",")",["T_WHITESPACE"," ",83],["T_IS_EQUAL","==",83],["T_WHITESPACE"," ",83],["T_CONSTANT_ENCAPSED_STRING","'not_a_programmer'",83],")",")",["T_WHITESPACE"," ",83],"{",["T_WHITESPACE","\n    ",83],["T_VARIABLE","$values",84],["T_WHITESPACE"," ",84],"=",["T_WHITESPACE"," ",84],["T_ARRAY","array",84],"(",["T_WHITESPACE","\n      ",84],["T_LNUMBER","1",85],["T_WHITESPACE"," ",85],["T_DOUBLE_ARROW","=>",85],["T_WHITESPACE"," ",85],["T_CONSTANT_ENCAPSED_STRING","'One'",85],",",["T_WHITESPACE","\n      ",85],["T_LNUMBER","2",86],["T_WHITESPACE"," ",86],["T_DOUBLE_ARROW","=>",86],["T_WHITESPACE"," ",86],["T_CONSTANT_ENCAPSED_STRING","'Two'",86],",",["T_WHITESPACE","\n    ",86],")",";",["T_WHITESPACE","\n  ",87],"}",["T_WHITESPACE","\n  ",88],["T_ELSE","else",89],["T_WHITESPACE"," ",89],"{",["T_WHITESPACE","\n    ",89],["T_VARIABLE","$values",90],["T_WHITESPACE"," ",90],"=",["T_WHITESPACE"," ",90],["T_ARRAY","array",90],"(",["T_WHITESPACE","\n      ",90],["T_CONSTANT_ENCAPSED_STRING","'Group 1'",91],["T_WHITESPACE"," ",91],["T_DOUBLE_ARROW","=>",91],["T_WHITESPACE"," ",91],["T_ARRAY","array",91],"(",["T_WHITESPACE","\n        ",91],["T_LNUMBER","0",92],["T_WHITESPACE"," ",92],["T_DOUBLE_ARROW","=>",92],["T_WHITESPACE"," ",92],["T_CONSTANT_ENCAPSED_STRING","'Zero'",92],",",["T_WHITESPACE","\n        ",92],["T_LNUMBER","1",93],["T_WHITESPACE"," ",93],["T_DOUBLE_ARROW","=>",93],["T_WHITESPACE"," ",93],["T_CONSTANT_ENCAPSED_STRING","'One'",93],",",["T_WHITESPACE","\n      ",93],")",",",["T_WHITESPACE","\n      ",94],["T_CONSTANT_ENCAPSED_STRING","'Group 2'",95],["T_WHITESPACE"," ",95],["T_DOUBLE_ARROW","=>",95],["T_WHITESPACE"," ",95],["T_ARRAY","array",95],"(",["T_WHITESPACE","\n        ",95],["T_LNUMBER","2",96],["T_WHITESPACE"," ",96],["T_DOUBLE_ARROW","=>",96],["T_WHITESPACE"," ",96],["T_CONSTANT_ENCAPSED_STRING","'Two'",96],",",["T_WHITESPACE","\n      ",96],")",",",["T_WHITESPACE","\n    ",97],")",";",["T_WHITESPACE","\n  ",98],"}",["T_WHITESPACE","\n\n  ",99],["T_RETURN","return",101],["T_WHITESPACE"," ",101],["T_VARIABLE","$values",101],";",["T_WHITESPACE","\n",101],"}",["T_WHITESPACE","\n",102]]