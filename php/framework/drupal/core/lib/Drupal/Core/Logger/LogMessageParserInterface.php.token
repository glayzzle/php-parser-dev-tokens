[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Core",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Logger",3],";",["T_WHITESPACE","\n\n",3],["T_DOC_COMMENT","\/**\n * Defines an interface for parsing log messages and their placeholders.\n *\/",5],["T_WHITESPACE","\n",7],["T_INTERFACE","interface",8],["T_WHITESPACE"," ",8],["T_STRING","LogMessageParserInterface",8],["T_WHITESPACE"," ",8],"{",["T_WHITESPACE","\n\n  ",8],["T_DOC_COMMENT","\/**\n   * Parses and transforms message and its placeholders to a common format.\n   *\n   * For a value to be considered as a placeholder should be in the following\n   * formats:\n   *   - PSR3 format:\n   *     @see https:\/\/github.com\/php-fig\/fig-standards\/blob\/master\/accepted\/PSR-3-logger-interface.md#12-message\n   *   - Drupal specific string placeholder format:\n   *     @see \\Drupal\\Component\\Utility\\SafeMarkup::format()\n   *\n   * Values in PSR3 format will be transformed to SafeMarkup::format() format.\n   *\n   * @param string $message\n   *   The message that contains the placeholders.\n   *   If the message is in PSR3 style, it will be transformed to\n   *   \\Drupal\\Component\\Utility\\SafeMarkup::format() style.\n   * @param array $context\n   *   An array that may or may not contain placeholder variables.\n   *\n   * @return array\n   *   An array of the extracted message placeholders.\n   *\/",10],["T_WHITESPACE","\n  ",31],["T_PUBLIC","public",32],["T_WHITESPACE"," ",32],["T_FUNCTION","function",32],["T_WHITESPACE"," ",32],["T_STRING","parseMessagePlaceholders",32],"(","&",["T_VARIABLE","$message",32],",",["T_WHITESPACE"," ",32],["T_ARRAY","array",32],["T_WHITESPACE"," ",32],"&",["T_VARIABLE","$context",32],")",";",["T_WHITESPACE","\n\n",32],"}",["T_WHITESPACE","\n",34]]