[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Core",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Session",3],";",["T_WHITESPACE","\n\n",3],["T_DOC_COMMENT","\/**\n * Provides an interface for session handlers where writing can be disabled.\n *\/",5],["T_WHITESPACE","\n",7],["T_INTERFACE","interface",8],["T_WHITESPACE"," ",8],["T_STRING","WriteSafeSessionHandlerInterface",8],["T_WHITESPACE"," ",8],"{",["T_WHITESPACE","\n\n  ",8],["T_DOC_COMMENT","\/**\n   * Sets whether or not a session may be written to storage.\n   *\n   * It is not possible to enforce writing of the session data. This method is\n   * only capable of forcibly disabling that session data is written to storage.\n   *\n   * @param bool $flag\n   *   TRUE if the session the session is allowed to be written, FALSE\n   *   otherwise.\n   *\/",10],["T_WHITESPACE","\n  ",19],["T_PUBLIC","public",20],["T_WHITESPACE"," ",20],["T_FUNCTION","function",20],["T_WHITESPACE"," ",20],["T_STRING","setSessionWritable",20],"(",["T_VARIABLE","$flag",20],")",";",["T_WHITESPACE","\n\n  ",20],["T_DOC_COMMENT","\/**\n   * Returns whether or not a session may be written to storage.\n   *\n   * @return bool\n   *   TRUE if the session the session is allowed to be written, FALSE\n   *   otherwise.\n   *\/",22],["T_WHITESPACE","\n  ",28],["T_PUBLIC","public",29],["T_WHITESPACE"," ",29],["T_FUNCTION","function",29],["T_WHITESPACE"," ",29],["T_STRING","isSessionWritable",29],"(",")",";",["T_WHITESPACE","\n\n",29],"}",["T_WHITESPACE","\n",31]]