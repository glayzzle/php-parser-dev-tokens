[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Core",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Field",3],";",["T_WHITESPACE","\n\n",3],["T_USE","use",5],["T_WHITESPACE"," ",5],["T_STRING","Drupal",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Component",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Plugin",5],["T_NS_SEPARATOR","\\",5],["T_STRING","PluginInspectionInterface",5],";",["T_WHITESPACE","\n",5],["T_USE","use",6],["T_WHITESPACE"," ",6],["T_STRING","Drupal",6],["T_NS_SEPARATOR","\\",6],["T_STRING","Core",6],["T_NS_SEPARATOR","\\",6],["T_STRING","Config",6],["T_NS_SEPARATOR","\\",6],["T_STRING","Entity",6],["T_NS_SEPARATOR","\\",6],["T_STRING","ThirdPartySettingsInterface",6],";",["T_WHITESPACE","\n\n",6],["T_DOC_COMMENT","\/**\n * Interface definition for plugin with settings.\n *\n * @deprecated in Drupal 8.1.0 and will be removed before Drupal 9.0.0. Use\n *   \\Drupal\\Component\\Plugin\\ConfigurablePluginInterface instead.\n *\/",8],["T_WHITESPACE","\n",13],["T_INTERFACE","interface",14],["T_WHITESPACE"," ",14],["T_STRING","PluginSettingsInterface",14],["T_WHITESPACE"," ",14],["T_EXTENDS","extends",14],["T_WHITESPACE"," ",14],["T_STRING","PluginInspectionInterface",14],",",["T_WHITESPACE"," ",14],["T_STRING","ThirdPartySettingsInterface",14],["T_WHITESPACE"," ",14],"{",["T_WHITESPACE","\n\n  ",14],["T_DOC_COMMENT","\/**\n   * Defines the default settings for this plugin.\n   *\n   * @return array\n   *   A list of default settings, keyed by the setting name.\n   *\/",16],["T_WHITESPACE","\n  ",21],["T_PUBLIC","public",22],["T_WHITESPACE"," ",22],["T_STATIC","static",22],["T_WHITESPACE"," ",22],["T_FUNCTION","function",22],["T_WHITESPACE"," ",22],["T_STRING","defaultSettings",22],"(",")",";",["T_WHITESPACE","\n\n  ",22],["T_DOC_COMMENT","\/**\n   * Returns the array of settings, including defaults for missing settings.\n   *\n   * @return array\n   *   The array of settings.\n   *\/",24],["T_WHITESPACE","\n  ",29],["T_PUBLIC","public",30],["T_WHITESPACE"," ",30],["T_FUNCTION","function",30],["T_WHITESPACE"," ",30],["T_STRING","getSettings",30],"(",")",";",["T_WHITESPACE","\n\n  ",30],["T_DOC_COMMENT","\/**\n   * Returns the value of a setting, or its default value if absent.\n   *\n   * @param string $key\n   *   The setting name.\n   *\n   * @return mixed\n   *   The setting value.\n   *\/",32],["T_WHITESPACE","\n  ",40],["T_PUBLIC","public",41],["T_WHITESPACE"," ",41],["T_FUNCTION","function",41],["T_WHITESPACE"," ",41],["T_STRING","getSetting",41],"(",["T_VARIABLE","$key",41],")",";",["T_WHITESPACE","\n\n  ",41],["T_DOC_COMMENT","\/**\n   * Sets the settings for the plugin.\n   *\n   * @param array $settings\n   *   The array of settings, keyed by setting names. Missing settings will be\n   *   assigned their default values.\n   *\n   * @return $this\n   *\/",43],["T_WHITESPACE","\n  ",51],["T_PUBLIC","public",52],["T_WHITESPACE"," ",52],["T_FUNCTION","function",52],["T_WHITESPACE"," ",52],["T_STRING","setSettings",52],"(",["T_ARRAY","array",52],["T_WHITESPACE"," ",52],["T_VARIABLE","$settings",52],")",";",["T_WHITESPACE","\n\n  ",52],["T_DOC_COMMENT","\/**\n   * Sets the value of a setting for the plugin.\n   *\n   * @param string $key\n   *   The setting name.\n   * @param mixed $value\n   *   The setting value.\n   *\n   * @return $this\n   *\/",54],["T_WHITESPACE","\n  ",63],["T_PUBLIC","public",64],["T_WHITESPACE"," ",64],["T_FUNCTION","function",64],["T_WHITESPACE"," ",64],["T_STRING","setSetting",64],"(",["T_VARIABLE","$key",64],",",["T_WHITESPACE"," ",64],["T_VARIABLE","$value",64],")",";",["T_WHITESPACE","\n\n  ",64],["T_DOC_COMMENT","\/**\n   * Informs the plugin that some configuration it depends on will be deleted.\n   *\n   * This method allows plugins to keep their configuration up-to-date when a\n   * dependency calculated with ::calculateDependencies() is removed. For\n   * example, an entity view display contains a formatter having a setting\n   * pointing to an arbitrary config entity. When that config entity is deleted,\n   * this method is called by the view display to react to the dependency\n   * removal by updating its configuration.\n   *\n   * This method must return TRUE if the removal event updated the plugin\n   * configuration or FALSE otherwise.\n   *\n   * @param array $dependencies\n   *   An array of dependencies that will be deleted keyed by dependency type.\n   *   Dependency types are 'config', 'content', 'module' and 'theme'.\n   *\n   * @return bool\n   *   TRUE if the plugin configuration has changed, FALSE if not.\n   *\n   * @see \\Drupal\\Core\\Entity\\EntityDisplayBase\n   *\/",66],["T_WHITESPACE","\n  ",87],["T_PUBLIC","public",88],["T_WHITESPACE"," ",88],["T_FUNCTION","function",88],["T_WHITESPACE"," ",88],["T_STRING","onDependencyRemoval",88],"(",["T_ARRAY","array",88],["T_WHITESPACE"," ",88],["T_VARIABLE","$dependencies",88],")",";",["T_WHITESPACE","\n\n",88],"}",["T_WHITESPACE","\n",90]]