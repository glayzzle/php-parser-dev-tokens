[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Core",3],["T_NS_SEPARATOR","\\",3],["T_STRING","TypedData",3],";",["T_WHITESPACE","\n\n",3],["T_DOC_COMMENT","\/**\n * Interface for typed data objects.\n *\n * @see \\Drupal\\Core\\TypedData\\DataDefinitionInterface\n *\n * @ingroup typed_data\n *\/",5],["T_WHITESPACE","\n",11],["T_INTERFACE","interface",12],["T_WHITESPACE"," ",12],["T_STRING","TypedDataInterface",12],["T_WHITESPACE"," ",12],"{",["T_WHITESPACE","\n\n  ",12],["T_DOC_COMMENT","\/**\n   * Constructs a TypedData object given its definition and context.\n   *\n   * @param \\Drupal\\Core\\TypedData\\DataDefinitionInterface $definition\n   *   The data definition.\n   * @param string|null $name\n   *   (optional) The name of the created property, or NULL if it is the root\n   *   of a typed data tree. Defaults to NULL.\n   * @param \\Drupal\\Core\\TypedData\\TraversableTypedDataInterface $parent\n   *   (optional) The parent object of the data property, or NULL if it is the\n   *   root of a typed data tree. Defaults to NULL.\n   *\n   * @todo When \\Drupal\\Core\\Config\\TypedConfigManager has been fixed to use\n   *   class-based definitions, type-hint $definition to\n   *   DataDefinitionInterface. https:\/\/www.drupal.org\/node\/1928868\n   *\n   * @see \\Drupal\\Core\\TypedData\\TypedDataManager::create()\n   *\/",14],["T_WHITESPACE","\n  ",31],["T_PUBLIC","public",32],["T_WHITESPACE"," ",32],["T_STATIC","static",32],["T_WHITESPACE"," ",32],["T_FUNCTION","function",32],["T_WHITESPACE"," ",32],["T_STRING","createInstance",32],"(",["T_VARIABLE","$definition",32],",",["T_WHITESPACE"," ",32],["T_VARIABLE","$name",32],["T_WHITESPACE"," ",32],"=",["T_WHITESPACE"," ",32],["T_STRING","NULL",32],",",["T_WHITESPACE"," ",32],["T_STRING","TraversableTypedDataInterface",32],["T_WHITESPACE"," ",32],["T_VARIABLE","$parent",32],["T_WHITESPACE"," ",32],"=",["T_WHITESPACE"," ",32],["T_STRING","NULL",32],")",";",["T_WHITESPACE","\n\n  ",32],["T_DOC_COMMENT","\/**\n   * Gets the data definition.\n   *\n   * @return \\Drupal\\Core\\TypedData\\DataDefinitionInterface\n   *   The data definition object.\n   *\/",34],["T_WHITESPACE","\n  ",39],["T_PUBLIC","public",40],["T_WHITESPACE"," ",40],["T_FUNCTION","function",40],["T_WHITESPACE"," ",40],["T_STRING","getDataDefinition",40],"(",")",";",["T_WHITESPACE","\n\n  ",40],["T_DOC_COMMENT","\/**\n   * Gets the data value.\n   *\n   * @return mixed\n   *\/",42],["T_WHITESPACE","\n  ",46],["T_PUBLIC","public",47],["T_WHITESPACE"," ",47],["T_FUNCTION","function",47],["T_WHITESPACE"," ",47],["T_STRING","getValue",47],"(",")",";",["T_WHITESPACE","\n\n  ",47],["T_DOC_COMMENT","\/**\n   * Sets the data value.\n   *\n   * @param mixed|null $value\n   *   The value to set in the format as documented for the data type or NULL to\n   *   unset the data value.\n   * @param bool $notify\n   *   (optional) Whether to notify the parent object of the change. Defaults to\n   *   TRUE. If a property is updated from a parent object, set it to FALSE to\n   *   avoid being notified again.\n   *\n   * @throws \\InvalidArgumentException\n   *   If the value input is inappropriate.\n   * @throws \\Drupal\\Core\\TypedData\\Exception\\ReadOnlyException\n   *   If the data is read-only.\n   *\/",49],["T_WHITESPACE","\n  ",64],["T_PUBLIC","public",65],["T_WHITESPACE"," ",65],["T_FUNCTION","function",65],["T_WHITESPACE"," ",65],["T_STRING","setValue",65],"(",["T_VARIABLE","$value",65],",",["T_WHITESPACE"," ",65],["T_VARIABLE","$notify",65],["T_WHITESPACE"," ",65],"=",["T_WHITESPACE"," ",65],["T_STRING","TRUE",65],")",";",["T_WHITESPACE","\n\n  ",65],["T_DOC_COMMENT","\/**\n   * Returns a string representation of the data.\n   *\n   * @return string\n   *\/",67],["T_WHITESPACE","\n  ",71],["T_PUBLIC","public",72],["T_WHITESPACE"," ",72],["T_FUNCTION","function",72],["T_WHITESPACE"," ",72],["T_STRING","getString",72],"(",")",";",["T_WHITESPACE","\n\n  ",72],["T_DOC_COMMENT","\/**\n   * Gets a list of validation constraints.\n   *\n   * @return array\n   *   Array of constraints, each being an instance of\n   *   \\Symfony\\Component\\Validator\\Constraint.\n   *\/",74],["T_WHITESPACE","\n  ",80],["T_PUBLIC","public",81],["T_WHITESPACE"," ",81],["T_FUNCTION","function",81],["T_WHITESPACE"," ",81],["T_STRING","getConstraints",81],"(",")",";",["T_WHITESPACE","\n\n  ",81],["T_DOC_COMMENT","\/**\n   * Validates the currently set data value.\n   *\n   * @return \\Symfony\\Component\\Validator\\ConstraintViolationListInterface\n   *   A list of constraint violations. If the list is empty, validation\n   *   succeeded.\n   *\/",83],["T_WHITESPACE","\n  ",89],["T_PUBLIC","public",90],["T_WHITESPACE"," ",90],["T_FUNCTION","function",90],["T_WHITESPACE"," ",90],["T_STRING","validate",90],"(",")",";",["T_WHITESPACE","\n\n  ",90],["T_DOC_COMMENT","\/**\n   * Applies the default value.\n   *\n   * @param bool $notify\n   *   (optional) Whether to notify the parent object of the change. Defaults to\n   *   TRUE. If a property is updated from a parent object, set it to FALSE to\n   *   avoid being notified again.\n   *\n   * @return \\Drupal\\Core\\TypedData\\TypedDataInterface\n   *   Returns itself to allow for chaining.\n   *\/",92],["T_WHITESPACE","\n  ",102],["T_PUBLIC","public",103],["T_WHITESPACE"," ",103],["T_FUNCTION","function",103],["T_WHITESPACE"," ",103],["T_STRING","applyDefaultValue",103],"(",["T_VARIABLE","$notify",103],["T_WHITESPACE"," ",103],"=",["T_WHITESPACE"," ",103],["T_STRING","TRUE",103],")",";",["T_WHITESPACE","\n\n  ",103],["T_DOC_COMMENT","\/**\n   * Returns the name of a property or item.\n   *\n   * @return string\n   *   If the data is a property of some complex data, the name of the property.\n   *   If the data is an item of a list, the name is the numeric position of the\n   *   item in the list, starting with 0. Otherwise, NULL is returned.\n   *\/",105],["T_WHITESPACE","\n  ",112],["T_PUBLIC","public",113],["T_WHITESPACE"," ",113],["T_FUNCTION","function",113],["T_WHITESPACE"," ",113],["T_STRING","getName",113],"(",")",";",["T_WHITESPACE","\n\n  ",113],["T_DOC_COMMENT","\/**\n   * Returns the parent data structure; i.e. either complex data or a list.\n   *\n   * @return \\Drupal\\Core\\TypedData\\TraversableTypedDataInterface|null\n   *   The parent data structure, either complex data or a list; or NULL if this\n   *   is the root of the typed data tree.\n   *\/",115],["T_WHITESPACE","\n  ",121],["T_PUBLIC","public",122],["T_WHITESPACE"," ",122],["T_FUNCTION","function",122],["T_WHITESPACE"," ",122],["T_STRING","getParent",122],"(",")",";",["T_WHITESPACE","\n\n  ",122],["T_DOC_COMMENT","\/**\n   * Returns the root of the typed data tree.\n   *\n   * Returns the root data for a tree of typed data objects; e.g. for an entity\n   * field item the root of the tree is its parent entity object.\n   *\n   * @return \\Drupal\\Core\\TypedData\\TraversableTypedDataInterface\n   *   The root data structure, either complex data or a list.\n   *\/",124],["T_WHITESPACE","\n  ",132],["T_PUBLIC","public",133],["T_WHITESPACE"," ",133],["T_FUNCTION","function",133],["T_WHITESPACE"," ",133],["T_STRING","getRoot",133],"(",")",";",["T_WHITESPACE","\n\n  ",133],["T_DOC_COMMENT","\/**\n   * Returns the property path of the data.\n   *\n   * The trail of property names relative to the root of the typed data tree,\n   * separated by dots; e.g. 'field_text.0.format'.\n   *\n   * @return string\n   *   The property path relative to the root of the typed tree, or an empty\n   *   string if this is the root.\n   *\/",135],["T_WHITESPACE","\n  ",144],["T_PUBLIC","public",145],["T_WHITESPACE"," ",145],["T_FUNCTION","function",145],["T_WHITESPACE"," ",145],["T_STRING","getPropertyPath",145],"(",")",";",["T_WHITESPACE","\n\n  ",145],["T_DOC_COMMENT","\/**\n   * Sets the context of a property or item via a context aware parent.\n   *\n   * This method is supposed to be called by the factory only.\n   *\n   * @param string|null $name\n   *   (optional) The name of the property or the delta of the list item,\n   *   or NULL if it is the root of a typed data tree. Defaults to NULL.\n   * @param \\Drupal\\Core\\TypedData\\TraversableTypedDataInterface|null $parent\n   *   (optional) The parent object of the data property, or NULL if it is the\n   *   root of a typed data tree. Defaults to NULL.\n   *\/",147],["T_WHITESPACE","\n  ",158],["T_PUBLIC","public",159],["T_WHITESPACE"," ",159],["T_FUNCTION","function",159],["T_WHITESPACE"," ",159],["T_STRING","setContext",159],"(",["T_VARIABLE","$name",159],["T_WHITESPACE"," ",159],"=",["T_WHITESPACE"," ",159],["T_STRING","NULL",159],",",["T_WHITESPACE"," ",159],["T_STRING","TraversableTypedDataInterface",159],["T_WHITESPACE"," ",159],["T_VARIABLE","$parent",159],["T_WHITESPACE"," ",159],"=",["T_WHITESPACE"," ",159],["T_STRING","NULL",159],")",";",["T_WHITESPACE","\n\n",159],"}",["T_WHITESPACE","\n",161]]