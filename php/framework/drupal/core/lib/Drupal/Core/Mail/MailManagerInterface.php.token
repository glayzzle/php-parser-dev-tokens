[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Core",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Mail",3],";",["T_WHITESPACE","\n\n",3],["T_USE","use",5],["T_WHITESPACE"," ",5],["T_STRING","Drupal",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Component",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Plugin",5],["T_NS_SEPARATOR","\\",5],["T_STRING","PluginManagerInterface",5],";",["T_WHITESPACE","\n\n",5],["T_DOC_COMMENT","\/**\n * Provides an interface for sending mail.\n *\/",7],["T_WHITESPACE","\n",9],["T_INTERFACE","interface",10],["T_WHITESPACE"," ",10],["T_STRING","MailManagerInterface",10],["T_WHITESPACE"," ",10],["T_EXTENDS","extends",10],["T_WHITESPACE"," ",10],["T_STRING","PluginManagerInterface",10],["T_WHITESPACE"," ",10],"{",["T_WHITESPACE","\n\n  ",10],["T_DOC_COMMENT","\/**\n   * Composes and optionally sends an email message.\n   *\n   * Sending an email works with defining an email template (subject, text and\n   * possibly email headers) and the replacement values to use in the\n   * appropriate places in the template. Processed email templates are requested\n   * from hook_mail() from the module sending the email. Any module can modify\n   * the composed email message array using hook_mail_alter(). Finally\n   * \\Drupal::service('plugin.manager.mail')->mail() sends the email, which can\n   * be reused if the exact same composed email is to be sent to multiple\n   * recipients.\n   *\n   * Finding out what language to send the email with needs some consideration.\n   * If you send email to a user, her preferred language should be fine, so use\n   * \\Drupal\\Core\\Session\\AccountInterface::getPreferredAdminLangcode(). If you\n   * send email based on form values filled on the page, there are two\n   * additional choices if you are not sending the email to a user on the site.\n   * You can either use the language used to generate the page or the site\n   * default language. See\n   * Drupal\\Core\\Language\\LanguageManagerInterface::getDefaultLanguage(). The\n   * former is good if sending email to the person filling the form, the later\n   * is good if you send email to an address previously set up (like contact\n   * addresses in a contact form).\n   *\n   * Taking care of always using the proper language is even more important when\n   * sending emails in a row to multiple users. Hook_mail() abstracts whether\n   * the mail text comes from an administrator setting or is static in the\n   * source code. It should also deal with common mail tokens, only receiving\n   * $params which are unique to the actual email at hand.\n   *\n   * An example:\n   *\n   * @code\n   *   function example_notify($accounts) {\n   *     foreach ($accounts as $account) {\n   *       $params['account'] = $account;\n   *       \/\/ example_mail() will be called based on the first\n   *       \/\/ MailManagerInterface->mail() parameter.\n   *       \\Drupal::service('plugin.manager.mail')->mail('example', 'notice', $account->mail, $langcode, $params);\n   *     }\n   *   }\n   *\n   *   function example_mail($key, &$message, $params) {\n   *     $data['user'] = $params['account'];\n   *     $options['langcode'] = $message['langcode'];\n   *     user_mail_tokens($variables, $data, $options);\n   *     switch($key) {\n   *       case 'notice':\n   *         \/\/ If the recipient can receive such notices by instant-message, do\n   *         \/\/ not send by email.\n   *         if (example_im_send($key, $message, $params)) {\n   *           $message['send'] = FALSE;\n   *           break;\n   *         }\n   *         $message['subject'] = t('Notification from @site', $variables, $options);\n   *         $message['body'][] = t(\"Dear @username\\n\\nThere is new content available on the site.\", $variables, $options);\n   *         break;\n   *     }\n   *   }\n   * @endcode\n   *\n   * Another example, which uses MailManagerInterface->mail() to format a\n   * message for sending later:\n   *\n   * @code\n   *   $params = array('current_conditions' => $data);\n   *   $to = 'user@example.com';\n   *   $message = \\Drupal::service('plugin.manager.mail')->mail('example', 'notice', $to, $langcode, $params, FALSE);\n   *   \/\/ Only add to the spool if sending was not canceled.\n   *   if ($message['send']) {\n   *     example_spool_message($message);\n   *   }\n   * @endcode\n   *\n   * @param string $module\n   *   A module name to invoke hook_mail() on. The {$module}_mail() hook will be\n   *   called to complete the $message structure which will already contain\n   *   common defaults.\n   * @param string $key\n   *   A key to identify the email sent. The final message ID for email altering\n   *   will be {$module}_{$key}.\n   * @param string $to\n   *   The email address or addresses where the message will be sent to. The\n   *   formatting of this string will be validated with the\n   *   @link http:\/\/php.net\/manual\/filter.filters.validate.php PHP email validation filter. @endlink\n   *   Some examples are:\n   *   - user@example.com\n   *   - user@example.com, anotheruser@example.com\n   *   - User <user@example.com>\n   *   - User <user@example.com>, Another User <anotheruser@example.com>\n   * @param string $langcode\n   *   Language code to use to compose the email.\n   * @param array $params\n   *   (optional) Parameters to build the email.\n   * @param string|null $reply\n   *   Optional email address to be used to answer.\n   * @param bool $send\n   *   If TRUE, call an implementation of\n   *   \\Drupal\\Core\\Mail\\MailInterface->mail() to deliver the message, and\n   *   store the result in $message['result']. Modules implementing\n   *   hook_mail_alter() may cancel sending by setting $message['send'] to\n   *   FALSE.\n   *\n   * @return array\n   *   The $message array structure containing all details of the message. If\n   *   already sent ($send = TRUE), then the 'result' element will contain the\n   *   success indicator of the email, failure being already written to the\n   *   watchdog. (Success means nothing more than the message being accepted at\n   *   php-level, which still doesn't guarantee it to be delivered.)\n   *\/",12],["T_WHITESPACE","\n  ",121],["T_PUBLIC","public",122],["T_WHITESPACE"," ",122],["T_FUNCTION","function",122],["T_WHITESPACE"," ",122],["T_STRING","mail",122],"(",["T_VARIABLE","$module",122],",",["T_WHITESPACE"," ",122],["T_VARIABLE","$key",122],",",["T_WHITESPACE"," ",122],["T_VARIABLE","$to",122],",",["T_WHITESPACE"," ",122],["T_VARIABLE","$langcode",122],",",["T_WHITESPACE"," ",122],["T_VARIABLE","$params",122],["T_WHITESPACE"," ",122],"=",["T_WHITESPACE"," ",122],["T_ARRAY","array",122],"(",")",",",["T_WHITESPACE"," ",122],["T_VARIABLE","$reply",122],["T_WHITESPACE"," ",122],"=",["T_WHITESPACE"," ",122],["T_STRING","NULL",122],",",["T_WHITESPACE"," ",122],["T_VARIABLE","$send",122],["T_WHITESPACE"," ",122],"=",["T_WHITESPACE"," ",122],["T_STRING","TRUE",122],")",";",["T_WHITESPACE","\n\n",122],"}",["T_WHITESPACE","\n",124]]