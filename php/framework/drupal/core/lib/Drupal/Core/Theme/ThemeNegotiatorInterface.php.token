[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Core",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Theme",3],";",["T_WHITESPACE","\n\n",3],["T_USE","use",5],["T_WHITESPACE"," ",5],["T_STRING","Drupal",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Core",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Routing",5],["T_NS_SEPARATOR","\\",5],["T_STRING","RouteMatchInterface",5],";",["T_WHITESPACE","\n\n",5],["T_DOC_COMMENT","\/**\n * Defines an interface for classes which determine the active theme.\n *\n * To set the active theme, create a new service tagged with 'theme_negotiator'\n * (see the theme.negotiator.admin_theme service in user.services.yml for an\n * example). Your service class needs to implement this interface.\n *\n * If you are setting a theme which is closely tied to the functionality of a\n * particular page or set of pages (such that the page might not function\n * correctly if a different theme is used), make sure to set the priority on\n * the service to a high number so that it is not accidentally overridden by\n * other theme negotiators. By convention, a priority of \"1000\" is used in\n * these cases; see \\Drupal\\Core\\Theme\\AjaxBasePageNegotiator and\n * core.services.yml for an example.\n *\/",7],["T_WHITESPACE","\n",21],["T_INTERFACE","interface",22],["T_WHITESPACE"," ",22],["T_STRING","ThemeNegotiatorInterface",22],["T_WHITESPACE"," ",22],"{",["T_WHITESPACE","\n\n  ",22],["T_DOC_COMMENT","\/**\n   * Whether this theme negotiator should be used to set the theme.\n   *\n   * @param \\Drupal\\Core\\Routing\\RouteMatchInterface $route_match\n   *   The current route match object.\n   *\n   * @return bool\n   *   TRUE if this negotiator should be used or FALSE to let other negotiators\n   *   decide.\n   *\/",24],["T_WHITESPACE","\n  ",33],["T_PUBLIC","public",34],["T_WHITESPACE"," ",34],["T_FUNCTION","function",34],["T_WHITESPACE"," ",34],["T_STRING","applies",34],"(",["T_STRING","RouteMatchInterface",34],["T_WHITESPACE"," ",34],["T_VARIABLE","$route_match",34],")",";",["T_WHITESPACE","\n\n  ",34],["T_DOC_COMMENT","\/**\n   * Determine the active theme for the request.\n   *\n   * @param \\Drupal\\Core\\Routing\\RouteMatchInterface $route_match\n   *   The current route match object.\n   *\n   * @return string|null\n   *   The name of the theme, or NULL if other negotiators, like the configured\n   *   default one, should be used instead.\n   *\/",36],["T_WHITESPACE","\n  ",45],["T_PUBLIC","public",46],["T_WHITESPACE"," ",46],["T_FUNCTION","function",46],["T_WHITESPACE"," ",46],["T_STRING","determineActiveTheme",46],"(",["T_STRING","RouteMatchInterface",46],["T_WHITESPACE"," ",46],["T_VARIABLE","$route_match",46],")",";",["T_WHITESPACE","\n\n",46],"}",["T_WHITESPACE","\n",48]]