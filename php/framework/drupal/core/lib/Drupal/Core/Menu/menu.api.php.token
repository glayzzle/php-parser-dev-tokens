[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_DOC_COMMENT","\/**\n * @file\n * Hooks and documentation related to the menu system and links.\n *\/",3],["T_WHITESPACE","\n\n",6],["T_DOC_COMMENT","\/**\n * @defgroup menu Menu system\n * @{\n * Define the navigation menus, local actions and tasks, and contextual links.\n *\n * @section sec_overview Overview and terminology\n * The menu system uses routes; see the\n * @link routing Routing API topic @endlink for more information. It is used\n * for navigation menus, local tasks, local actions, and contextual links:\n * - Navigation menus are hierarchies of menu links; links point to routes or\n *   URLs.\n * - Menu links and their hierarchies can be defined by Drupal subsystems\n *   and modules, or created in the user interface using the Menu UI module.\n * - Local tasks are groups of related routes. Local tasks are usually rendered\n *   as a group of tabs.\n * - Local actions are used for operations such as adding a new item on a page\n *   that lists items of some type. Local actions are usually rendered as\n *   buttons.\n * - Contextual links are actions that are related to sections of rendered\n *   output, and are usually rendered as a pop-up list of links. The\n *   Contextual Links module handles the gathering and rendering of contextual\n *   links.\n *\n * The following sections of this topic provide an overview of the menu API.\n * For more detailed information, see\n * https:\/\/www.drupal.org\/developing\/api\/8\/menu\n *\n * @section sec_links Defining menu links for the administrative menu\n * Routes for administrative tasks can be added to the main Drupal\n * administrative menu hierarchy. To do this, add lines like the following to a\n * module_name.links.menu.yml file (in the top-level directory for your module):\n * @code\n * dblog.overview:\n *   title: 'Recent log messages'\n *   parent: system.admin_reports\n *   description: 'View events that have recently been logged.'\n *   route_name: dblog.overview\n *   weight: -1\n * @endcode\n * Some notes:\n * - The first line is the machine name for your menu link, which usually\n *   matches the machine name of the route (given in the 'route_name' line).\n * - parent: The machine name of the menu link that is the parent in the\n *   administrative hierarchy. See system.links.menu.yml to find the main\n *   skeleton of the hierarchy.\n * - weight: Lower (negative) numbers come before higher (positive) numbers,\n *   for menu items with the same parent.\n *\n * Discovered menu links from other modules can be altered using\n * hook_menu_links_discovered_alter().\n *\n * @todo Derivatives will probably be defined for these; when they are, add\n *   documentation here.\n *\n * @section sec_tasks Defining groups of local tasks (tabs)\n * Local tasks appear as tabs on a page when there are at least two defined for\n * a route, including the base route as the main tab, and additional routes as\n * other tabs. Static local tasks can be defined by adding lines like the\n * following to a module_name.links.task.yml file (in the top-level directory\n * for your module):\n * @code\n * book.admin:\n *   route_name: book.admin\n *   title: 'List'\n *   base_route: book.admin\n * book.settings:\n *   route_name: book.settings\n *   title: 'Settings'\n *   base_route: book.admin\n *   weight: 100\n * @endcode\n * Some notes:\n * - The first line is the machine name for your local task, which usually\n *   matches the machine name of the route (given in the 'route_name' line).\n * - base_route: The machine name of the main task (tab) for the set of local\n *   tasks.\n * - weight: Lower (negative) numbers come before higher (positive) numbers,\n *   for tasks on the same base route. If there is a tab whose route\n *   matches the base route, that will be the default\/first tab shown.\n *\n * Local tasks from other modules can be altered using\n * hook_menu_local_tasks_alter().\n *\n * @todo Derivatives are in flux for these; when they are more stable, add\n *   documentation here.\n *\n * @section sec_actions Defining local actions for routes\n * Local actions can be defined for operations related to a given route. For\n * instance, adding content is a common operation for the content management\n * page, so it should be a local action. Static local actions can be\n * defined by adding lines like the following to a\n * module_name.links.action.yml file (in the top-level directory for your\n * module):\n * @code\n * node.add_page:\n *   route_name: node.add_page\n *   title: 'Add content'\n *   appears_on:\n *     - system.admin_content\n * @endcode\n * Some notes:\n * - The first line is the machine name for your local action, which usually\n *   matches the machine name of the route (given in the 'route_name' line).\n * - appears_on: Machine names of one or more routes that this local task\n *   should appear on.\n *\n * Local actions from other modules can be altered using\n * hook_menu_local_actions_alter().\n *\n * @todo Derivatives are in flux for these; when they are more stable, add\n *   documentation here.\n *\n * @section sec_contextual Defining contextual links\n * Contextual links are displayed by the Contextual Links module for user\n * interface elements whose render arrays have a '#contextual_links' element\n * defined. For example, a block render array might look like this, in part:\n * @code\n * array(\n *   '#contextual_links' => array(\n *     'block' => array(\n *       'route_parameters' => array('block' => $entity->id()),\n *     ),\n *   ),\n * @endcode\n * In this array, the outer key 'block' defines a \"group\" for contextual\n * links, and the inner array provides values for the route's placeholder\n * parameters (see @ref sec_placeholders above).\n *\n * To declare that a defined route should be a contextual link for a\n * contextual links group, put lines like the following in a\n * module_name.links.contextual.yml file (in the top-level directory for your\n * module):\n * @code\n * block_configure:\n *   title: 'Configure block'\n *   route_name: 'entity.block.edit_form'\n *   group: 'block'\n * @endcode\n * Some notes:\n * - The first line is the machine name for your contextual link, which usually\n *   matches the machine name of the route (given in the 'route_name' line).\n * - group: This needs to match the link group defined in the render array.\n *\n * Contextual links from other modules can be altered using\n * hook_contextual_links_alter().\n *\n * @todo Derivatives are in flux for these; when they are more stable, add\n *   documentation here.\n *\n * @section sec_rendering Rendering menus\n * Once you have created menus (that contain menu links), you want to render\n * them. Drupal provides a block (Drupal\\system\\Plugin\\Block\\SystemMenuBlock) to\n * do so.\n *\n * However, perhaps you have more advanced needs and you're not satisfied with\n * what the menu blocks offer you. If that's the case, you'll want to:\n * - Instantiate \\Drupal\\Core\\Menu\\MenuTreeParameters, and set its values to\n *   match your needs. Alternatively, you can use\n *   MenuLinkTree::getCurrentRouteMenuTreeParameters() to get a typical\n *   default set of parameters, and then customize them to suit your needs.\n * - Call \\Drupal\\Core\\MenuLinkTree::load() with your menu link tree parameters,\n *   this will return a menu link tree.\n * - Pass the menu tree to \\Drupal\\Core\\Menu\\MenuLinkTree::transform() to apply\n *   menu link tree manipulators that transform the tree. You will almost always\n *   want to apply access checking. The manipulators that you will typically\n *   need can be found in \\Drupal\\Core\\Menu\\DefaultMenuLinkTreeManipulators.\n * - Potentially write a custom menu tree manipulator, see\n *   \\Drupal\\Core\\Menu\\DefaultMenuLinkTreeManipulators for examples. This is\n *   only necessary if you want to do things like adding extra metadata to\n *   rendered links to display icons next to them.\n * - Pass the menu tree to \\Drupal\\Core\\Menu\\MenuLinkTree::build(), this will\n *   build a renderable array.\n *\n * Combined, that would look like this:\n * @code\n * $menu_tree = \\Drupal::menuTree();\n * $menu_name = 'my_menu';\n *\n * \/\/ Build the typical default set of menu tree parameters.\n * $parameters = $menu_tree->getCurrentRouteMenuTreeParameters($menu_name);\n *\n * \/\/ Load the tree based on this set of parameters.\n * $tree = $menu_tree->load($menu_name, $parameters);\n *\n * \/\/ Transform the tree using the manipulators you want.\n * $manipulators = array(\n *   \/\/ Only show links that are accessible for the current user.\n *   array('callable' => 'menu.default_tree_manipulators:checkAccess'),\n *   \/\/ Use the default sorting of menu links.\n *   array('callable' => 'menu.default_tree_manipulators:generateIndexAndSort'),\n * );\n * $tree = $menu_tree->transform($tree, $manipulators);\n *\n * \/\/ Finally, build a renderable array from the transformed tree.\n * $menu = $menu_tree->build($tree);\n *\n * $menu_html = drupal_render($menu);\n * @endcode\n *\n * @}\n *\/",8],["T_WHITESPACE","\n\n",208],["T_DOC_COMMENT","\/**\n * @addtogroup hooks\n * @{\n *\/",210],["T_WHITESPACE","\n\n",213],["T_DOC_COMMENT","\/**\n * Alters all the menu links discovered by the menu link plugin manager.\n *\n * @param array $links\n *   The link definitions to be altered.\n *\n * @return array\n *   An array of discovered menu links. Each link has a key that is the machine\n *   name, which must be unique. By default, use the route name as the\n *   machine name. In cases where multiple links use the same route name, such\n *   as two links to the same page in different menus, or two links using the\n *   same route name but different route parameters, the suggested machine name\n *   patten is the route name followed by a dot and a unique suffix. For\n *   example, an additional logout link might have a machine name of\n *   user.logout.navigation, and default links provided to edit the article and\n *   page content types could use machine names\n *   entity.node_type.edit_form.article and entity.node_type.edit_form.page.\n *   Since the machine name may be arbitrary, you should never write code that\n *   assumes it is identical to the route name.\n *\n *   The value corresponding to each machine name key is an associative array\n *   that may contain the following key-value pairs:\n *   - title: (required) The title of the menu link. If this should be\n *     translated, create a \\Drupal\\Core\\StringTranslation\\TranslatableMarkup\n *     object.\n *   - description: The description of the link. If this should be\n *     translated, create a \\Drupal\\Core\\StringTranslation\\TranslatableMarkup\n *     object.\n *   - route_name: (optional) The route name to be used to build the path.\n *     Either the route_name or url element must be provided.\n *   - route_parameters: (optional) The route parameters to build the path.\n *   - url: (optional) If you have an external link use this element instead of\n *     providing route_name.\n *   - parent: (optional) The machine name of the link that is this link's menu\n *     parent.\n *   - weight: (optional) An integer that determines the relative position of\n *     items in the menu; higher-weighted items sink. Defaults to 0. Menu items\n *     with the same weight are ordered alphabetically.\n *   - menu_name: (optional) The machine name of a menu to put the link in, if\n *     not the default Tools menu.\n *   - expanded: (optional) If set to TRUE, and if a menu link is provided for\n *     this menu item (as a result of other properties), then the menu link is\n *     always expanded, equivalent to its 'always expanded' checkbox being set\n *     in the UI.\n *   - options: (optional) An array of options to be passed to\n *     \\Drupal\\Core\\Utility\\LinkGeneratorInterface::generate() when generating\n *     a link from this menu item.\n *\n * @ingroup menu\n *\/",215],["T_WHITESPACE","\n",264],["T_FUNCTION","function",265],["T_WHITESPACE"," ",265],["T_STRING","hook_menu_links_discovered_alter",265],"(","&",["T_VARIABLE","$links",265],")",["T_WHITESPACE"," ",265],"{",["T_WHITESPACE","\n  ",265],["T_COMMENT","\/\/ Change the weight and title of the user.logout link.\n",266],["T_WHITESPACE","  ",267],["T_VARIABLE","$links",267],"[",["T_CONSTANT_ENCAPSED_STRING","'user.logout'",267],"]","[",["T_CONSTANT_ENCAPSED_STRING","'weight'",267],"]",["T_WHITESPACE"," ",267],"=",["T_WHITESPACE"," ",267],"-",["T_LNUMBER","10",267],";",["T_WHITESPACE","\n  ",267],["T_VARIABLE","$links",268],"[",["T_CONSTANT_ENCAPSED_STRING","'user.logout'",268],"]","[",["T_CONSTANT_ENCAPSED_STRING","'title'",268],"]",["T_WHITESPACE"," ",268],"=",["T_WHITESPACE"," ",268],["T_NEW","new",268],["T_WHITESPACE"," ",268],["T_NS_SEPARATOR","\\",268],["T_STRING","Drupal",268],["T_NS_SEPARATOR","\\",268],["T_STRING","Core",268],["T_NS_SEPARATOR","\\",268],["T_STRING","StringTranslation",268],["T_NS_SEPARATOR","\\",268],["T_STRING","TranslatableMarkup",268],"(",["T_CONSTANT_ENCAPSED_STRING","'Logout'",268],")",";",["T_WHITESPACE","\n  ",268],["T_COMMENT","\/\/ Conditionally add an additional link with a title that's not translated.\n",269],["T_WHITESPACE","  ",270],["T_IF","if",270],["T_WHITESPACE"," ",270],"(",["T_NS_SEPARATOR","\\",270],["T_STRING","Drupal",270],["T_DOUBLE_COLON","::",270],["T_STRING","moduleHandler",270],"(",")",["T_OBJECT_OPERATOR","->",270],["T_STRING","moduleExists",270],"(",["T_CONSTANT_ENCAPSED_STRING","'search'",270],")",")",["T_WHITESPACE"," ",270],"{",["T_WHITESPACE","\n    ",270],["T_VARIABLE","$links",271],"[",["T_CONSTANT_ENCAPSED_STRING","'menu.api.search'",271],"]",["T_WHITESPACE"," ",271],"=",["T_WHITESPACE"," ",271],["T_ARRAY","array",271],"(",["T_WHITESPACE","\n      ",271],["T_CONSTANT_ENCAPSED_STRING","'title'",272],["T_WHITESPACE"," ",272],["T_DOUBLE_ARROW","=>",272],["T_WHITESPACE"," ",272],["T_NS_SEPARATOR","\\",272],["T_STRING","Drupal",272],["T_DOUBLE_COLON","::",272],["T_STRING","config",272],"(",["T_CONSTANT_ENCAPSED_STRING","'system.site'",272],")",["T_OBJECT_OPERATOR","->",272],["T_STRING","get",272],"(",["T_CONSTANT_ENCAPSED_STRING","'name'",272],")",",",["T_WHITESPACE","\n      ",272],["T_CONSTANT_ENCAPSED_STRING","'route_name'",273],["T_WHITESPACE"," ",273],["T_DOUBLE_ARROW","=>",273],["T_WHITESPACE"," ",273],["T_CONSTANT_ENCAPSED_STRING","'menu.api.search'",273],",",["T_WHITESPACE","\n      ",273],["T_CONSTANT_ENCAPSED_STRING","'description'",274],["T_WHITESPACE"," ",274],["T_DOUBLE_ARROW","=>",274],["T_WHITESPACE"," ",274],["T_NEW","new",274],["T_WHITESPACE"," ",274],["T_NS_SEPARATOR","\\",274],["T_STRING","Drupal",274],["T_NS_SEPARATOR","\\",274],["T_STRING","Core",274],["T_NS_SEPARATOR","\\",274],["T_STRING","StringTranslation",274],["T_NS_SEPARATOR","\\",274],["T_STRING","TranslatableMarkup",274],"(",["T_CONSTANT_ENCAPSED_STRING","'View popular search phrases for this site.'",274],")",",",["T_WHITESPACE","\n      ",274],["T_CONSTANT_ENCAPSED_STRING","'parent'",275],["T_WHITESPACE"," ",275],["T_DOUBLE_ARROW","=>",275],["T_WHITESPACE"," ",275],["T_CONSTANT_ENCAPSED_STRING","'system.admin_reports'",275],",",["T_WHITESPACE","\n    ",275],")",";",["T_WHITESPACE","\n  ",276],"}",["T_WHITESPACE","\n",277],"}",["T_WHITESPACE","\n\n",278],["T_DOC_COMMENT","\/**\n * Alter local tasks displayed on the page before they are rendered.\n *\n * This hook is invoked by menu_local_tasks(). The system-determined tabs and\n * actions are passed in by reference. Additional tabs may be added.\n *\n * The local tasks are under the 'tabs' element and keyed by plugin ID.\n *\n * Each local task is an associative array containing:\n * - #theme: The theme function to use to render.\n * - #link: An associative array containing:\n *   - title: The localized title of the link.\n *   - url: a Url object.\n *   - localized_options: An array of options to pass to\n *     \\Drupal\\Core\\Utility\\LinkGeneratorInterface::generate().\n * - #weight: The link's weight compared to other links.\n * - #active: Whether the link should be marked as 'active'.\n *\n * @param array $data\n *   An associative array containing list of (up to 2) tab levels that contain a\n *   list of tabs keyed by their href, each one being an associative array\n *   as described above.\n * @param string $route_name\n *   The route name of the page.\n *\n * @ingroup menu\n *\/",280],["T_WHITESPACE","\n",306],["T_FUNCTION","function",307],["T_WHITESPACE"," ",307],["T_STRING","hook_menu_local_tasks_alter",307],"(","&",["T_VARIABLE","$data",307],",",["T_WHITESPACE"," ",307],["T_VARIABLE","$route_name",307],")",["T_WHITESPACE"," ",307],"{",["T_WHITESPACE","\n\n  ",307],["T_COMMENT","\/\/ Add a tab linking to node\/add to all pages.\n",309],["T_WHITESPACE","  ",310],["T_VARIABLE","$data",310],"[",["T_CONSTANT_ENCAPSED_STRING","'tabs'",310],"]","[",["T_LNUMBER","0",310],"]","[",["T_CONSTANT_ENCAPSED_STRING","'node.add_page'",310],"]",["T_WHITESPACE"," ",310],"=",["T_WHITESPACE"," ",310],["T_ARRAY","array",310],"(",["T_WHITESPACE","\n      ",310],["T_CONSTANT_ENCAPSED_STRING","'#theme'",311],["T_WHITESPACE"," ",311],["T_DOUBLE_ARROW","=>",311],["T_WHITESPACE"," ",311],["T_CONSTANT_ENCAPSED_STRING","'menu_local_task'",311],",",["T_WHITESPACE","\n      ",311],["T_CONSTANT_ENCAPSED_STRING","'#link'",312],["T_WHITESPACE"," ",312],["T_DOUBLE_ARROW","=>",312],["T_WHITESPACE"," ",312],["T_ARRAY","array",312],"(",["T_WHITESPACE","\n          ",312],["T_CONSTANT_ENCAPSED_STRING","'title'",313],["T_WHITESPACE"," ",313],["T_DOUBLE_ARROW","=>",313],["T_WHITESPACE"," ",313],["T_STRING","t",313],"(",["T_CONSTANT_ENCAPSED_STRING","'Example tab'",313],")",",",["T_WHITESPACE","\n          ",313],["T_CONSTANT_ENCAPSED_STRING","'url'",314],["T_WHITESPACE"," ",314],["T_DOUBLE_ARROW","=>",314],["T_WHITESPACE"," ",314],["T_STRING","Url",314],["T_DOUBLE_COLON","::",314],["T_STRING","fromRoute",314],"(",["T_CONSTANT_ENCAPSED_STRING","'node.add_page'",314],")",",",["T_WHITESPACE","\n          ",314],["T_CONSTANT_ENCAPSED_STRING","'localized_options'",315],["T_WHITESPACE"," ",315],["T_DOUBLE_ARROW","=>",315],["T_WHITESPACE"," ",315],["T_ARRAY","array",315],"(",["T_WHITESPACE","\n              ",315],["T_CONSTANT_ENCAPSED_STRING","'attributes'",316],["T_WHITESPACE"," ",316],["T_DOUBLE_ARROW","=>",316],["T_WHITESPACE"," ",316],["T_ARRAY","array",316],"(",["T_WHITESPACE","\n                  ",316],["T_CONSTANT_ENCAPSED_STRING","'title'",317],["T_WHITESPACE"," ",317],["T_DOUBLE_ARROW","=>",317],["T_WHITESPACE"," ",317],["T_STRING","t",317],"(",["T_CONSTANT_ENCAPSED_STRING","'Add content'",317],")",",",["T_WHITESPACE","\n              ",317],")",",",["T_WHITESPACE","\n          ",318],")",",",["T_WHITESPACE","\n      ",319],")",",",["T_WHITESPACE","\n  ",320],")",";",["T_WHITESPACE","\n",321],"}",["T_WHITESPACE","\n\n",322],["T_DOC_COMMENT","\/**\n * Alter local actions plugins.\n *\n * @param array $local_actions\n *   The array of local action plugin definitions, keyed by plugin ID.\n *\n * @see \\Drupal\\Core\\Menu\\LocalActionInterface\n * @see \\Drupal\\Core\\Menu\\LocalActionManager\n *\n * @ingroup menu\n *\/",324],["T_WHITESPACE","\n",334],["T_FUNCTION","function",335],["T_WHITESPACE"," ",335],["T_STRING","hook_menu_local_actions_alter",335],"(","&",["T_VARIABLE","$local_actions",335],")",["T_WHITESPACE"," ",335],"{",["T_WHITESPACE","\n",335],"}",["T_WHITESPACE","\n\n",336],["T_DOC_COMMENT","\/**\n * Alter local tasks plugins.\n *\n * @param array $local_tasks\n *   The array of local tasks plugin definitions, keyed by plugin ID.\n *\n * @see \\Drupal\\Core\\Menu\\LocalTaskInterface\n * @see \\Drupal\\Core\\Menu\\LocalTaskManager\n *\n * @ingroup menu\n *\/",338],["T_WHITESPACE","\n",348],["T_FUNCTION","function",349],["T_WHITESPACE"," ",349],["T_STRING","hook_local_tasks_alter",349],"(","&",["T_VARIABLE","$local_tasks",349],")",["T_WHITESPACE"," ",349],"{",["T_WHITESPACE","\n  ",349],["T_COMMENT","\/\/ Remove a specified local task plugin.\n",350],["T_WHITESPACE","  ",351],["T_UNSET","unset",351],"(",["T_VARIABLE","$local_tasks",351],"[",["T_CONSTANT_ENCAPSED_STRING","'example_plugin_id'",351],"]",")",";",["T_WHITESPACE","\n",351],"}",["T_WHITESPACE","\n\n",352],["T_DOC_COMMENT","\/**\n * Alter contextual links before they are rendered.\n *\n * This hook is invoked by\n * \\Drupal\\Core\\Menu\\ContextualLinkManager::getContextualLinkPluginsByGroup().\n * The system-determined contextual links are passed in by reference. Additional\n * links may be added and existing links can be altered.\n *\n * Each contextual link contains the following entries:\n * - title: The localized title of the link.\n * - route_name: The route name of the link.\n * - route_parameters: The route parameters of the link.\n * - localized_options: An array of URL options.\n * - (optional) weight: The weight of the link, which is used to sort the links.\n *\n *\n * @param array $links\n *   An associative array containing contextual links for the given $group,\n *   as described above. The array keys are used to build CSS class names for\n *   contextual links and must therefore be unique for each set of contextual\n *   links.\n * @param string $group\n *   The group of contextual links being rendered.\n * @param array $route_parameters.\n *   The route parameters passed to each route_name of the contextual links.\n *   For example:\n *   @code\n *   array('node' => $node->id())\n *   @endcode\n *\n * @see \\Drupal\\Core\\Menu\\ContextualLinkManager\n *\n * @ingroup menu\n *\/",354],["T_WHITESPACE","\n",387],["T_FUNCTION","function",388],["T_WHITESPACE"," ",388],["T_STRING","hook_contextual_links_alter",388],"(",["T_ARRAY","array",388],["T_WHITESPACE"," ",388],"&",["T_VARIABLE","$links",388],",",["T_WHITESPACE"," ",388],["T_VARIABLE","$group",388],",",["T_WHITESPACE"," ",388],["T_ARRAY","array",388],["T_WHITESPACE"," ",388],["T_VARIABLE","$route_parameters",388],")",["T_WHITESPACE"," ",388],"{",["T_WHITESPACE","\n  ",388],["T_IF","if",389],["T_WHITESPACE"," ",389],"(",["T_VARIABLE","$group",389],["T_WHITESPACE"," ",389],["T_IS_EQUAL","==",389],["T_WHITESPACE"," ",389],["T_CONSTANT_ENCAPSED_STRING","'menu'",389],")",["T_WHITESPACE"," ",389],"{",["T_WHITESPACE","\n    ",389],["T_COMMENT","\/\/ Dynamically use the menu name for the title of the menu_edit contextual\n",390],["T_WHITESPACE","    ",391],["T_COMMENT","\/\/ link.\n",391],["T_WHITESPACE","    ",392],["T_VARIABLE","$menu",392],["T_WHITESPACE"," ",392],"=",["T_WHITESPACE"," ",392],["T_NS_SEPARATOR","\\",392],["T_STRING","Drupal",392],["T_DOUBLE_COLON","::",392],["T_STRING","entityManager",392],"(",")",["T_OBJECT_OPERATOR","->",392],["T_STRING","getStorage",392],"(",["T_CONSTANT_ENCAPSED_STRING","'menu'",392],")",["T_OBJECT_OPERATOR","->",392],["T_STRING","load",392],"(",["T_VARIABLE","$route_parameters",392],"[",["T_CONSTANT_ENCAPSED_STRING","'menu'",392],"]",")",";",["T_WHITESPACE","\n    ",392],["T_VARIABLE","$links",393],"[",["T_CONSTANT_ENCAPSED_STRING","'menu_edit'",393],"]","[",["T_CONSTANT_ENCAPSED_STRING","'title'",393],"]",["T_WHITESPACE"," ",393],"=",["T_WHITESPACE"," ",393],["T_STRING","t",393],"(",["T_CONSTANT_ENCAPSED_STRING","'Edit menu: @label'",393],",",["T_WHITESPACE"," ",393],["T_ARRAY","array",393],"(",["T_CONSTANT_ENCAPSED_STRING","'@label'",393],["T_WHITESPACE"," ",393],["T_DOUBLE_ARROW","=>",393],["T_WHITESPACE"," ",393],["T_VARIABLE","$menu",393],["T_OBJECT_OPERATOR","->",393],["T_STRING","label",393],"(",")",")",")",";",["T_WHITESPACE","\n  ",393],"}",["T_WHITESPACE","\n",394],"}",["T_WHITESPACE","\n\n",395],["T_DOC_COMMENT","\/**\n * Alter the plugin definition of contextual links.\n *\n * @param array $contextual_links\n *   An array of contextual_links plugin definitions, keyed by contextual link\n *   ID. Each entry contains the following keys:\n *     - title: The displayed title of the link\n *     - route_name: The route_name of the contextual link to be displayed\n *     - group: The group under which the contextual links should be added to.\n *       Possible values are e.g. 'node' or 'menu'.\n *\n * @see \\Drupal\\Core\\Menu\\ContextualLinkManager\n *\n * @ingroup menu\n *\/",397],["T_WHITESPACE","\n",411],["T_FUNCTION","function",412],["T_WHITESPACE"," ",412],["T_STRING","hook_contextual_links_plugins_alter",412],"(",["T_ARRAY","array",412],["T_WHITESPACE"," ",412],"&",["T_VARIABLE","$contextual_links",412],")",["T_WHITESPACE"," ",412],"{",["T_WHITESPACE","\n  ",412],["T_VARIABLE","$contextual_links",413],"[",["T_CONSTANT_ENCAPSED_STRING","'menu_edit'",413],"]","[",["T_CONSTANT_ENCAPSED_STRING","'title'",413],"]",["T_WHITESPACE"," ",413],"=",["T_WHITESPACE"," ",413],["T_CONSTANT_ENCAPSED_STRING","'Edit the menu'",413],";",["T_WHITESPACE","\n",413],"}",["T_WHITESPACE","\n\n",414],["T_DOC_COMMENT","\/**\n * Perform alterations to the breadcrumb built by the BreadcrumbManager.\n *\n * @param \\Drupal\\Core\\Breadcrumb\\Breadcrumb $breadcrumb\n *   A breadcrumb object returned by BreadcrumbBuilderInterface::build().\n * @param \\Drupal\\Core\\Routing\\RouteMatchInterface $route_match\n *   The current route match.\n * @param array $context\n *   May include the following key:\n *   - builder: the instance of\n *     \\Drupal\\Core\\Breadcrumb\\BreadcrumbBuilderInterface that constructed this\n *     breadcrumb, or NULL if no builder acted based on the current attributes.\n *\n * @ingroup menu\n *\/",416],["T_WHITESPACE","\n",430],["T_FUNCTION","function",431],["T_WHITESPACE"," ",431],["T_STRING","hook_system_breadcrumb_alter",431],"(",["T_NS_SEPARATOR","\\",431],["T_STRING","Drupal",431],["T_NS_SEPARATOR","\\",431],["T_STRING","Core",431],["T_NS_SEPARATOR","\\",431],["T_STRING","Breadcrumb",431],["T_NS_SEPARATOR","\\",431],["T_STRING","Breadcrumb",431],["T_WHITESPACE"," ",431],"&",["T_VARIABLE","$breadcrumb",431],",",["T_WHITESPACE"," ",431],["T_NS_SEPARATOR","\\",431],["T_STRING","Drupal",431],["T_NS_SEPARATOR","\\",431],["T_STRING","Core",431],["T_NS_SEPARATOR","\\",431],["T_STRING","Routing",431],["T_NS_SEPARATOR","\\",431],["T_STRING","RouteMatchInterface",431],["T_WHITESPACE"," ",431],["T_VARIABLE","$route_match",431],",",["T_WHITESPACE"," ",431],["T_ARRAY","array",431],["T_WHITESPACE"," ",431],["T_VARIABLE","$context",431],")",["T_WHITESPACE"," ",431],"{",["T_WHITESPACE","\n  ",431],["T_COMMENT","\/\/ Add an item to the end of the breadcrumb.\n",432],["T_WHITESPACE","  ",433],["T_VARIABLE","$breadcrumb",433],["T_OBJECT_OPERATOR","->",433],["T_STRING","addLink",433],"(",["T_NS_SEPARATOR","\\",433],["T_STRING","Drupal",433],["T_NS_SEPARATOR","\\",433],["T_STRING","Core",433],["T_NS_SEPARATOR","\\",433],["T_STRING","Link",433],["T_DOUBLE_COLON","::",433],["T_STRING","createFromRoute",433],"(",["T_STRING","t",433],"(",["T_CONSTANT_ENCAPSED_STRING","'Text'",433],")",",",["T_WHITESPACE"," ",433],["T_CONSTANT_ENCAPSED_STRING","'example_route_name'",433],")",")",";",["T_WHITESPACE","\n",433],"}",["T_WHITESPACE","\n\n",434],["T_DOC_COMMENT","\/**\n * Alter the parameters for links.\n *\n * @param array $variables\n *   An associative array of variables defining a link. The link may be either a\n *   \"route link\" using \\Drupal\\Core\\Utility\\LinkGenerator::link(), which is\n *   exposed as the 'link_generator' service or a link generated by\n *   \\Drupal\\Core\\Utility\\LinkGeneratorInterface::generate(). If the link is a\n *   \"route link\", 'route_name' will be set; otherwise, 'path' will be set.\n *   The following keys can be altered:\n *   - text: The link text for the anchor tag. If the hook implementation\n *     changes this text it needs to preserve the safeness of the original text.\n *     Using t() or \\Drupal\\Component\\Utility\\SafeMarkup::format() with\n *     @placeholder is recommended as this will escape the original text if\n *     necessary. If the resulting text is not marked safe it will be escaped.\n *   - url_is_active: Whether or not the link points to the currently active\n *     URL.\n *   - url: The \\Drupal\\Core\\Url object.\n *   - options: An associative array of additional options that will be passed\n *     to either \\Drupal\\Core\\Utility\\UnroutedUrlAssembler::assemble() or\n *     \\Drupal\\Core\\Routing\\UrlGenerator::generateFromRoute() to generate the\n *     href attribute for this link, and also used when generating the link.\n *     Defaults to an empty array. It may contain the following elements:\n *     - 'query': An array of query key\/value-pairs (without any URL-encoding) to\n *       append to the URL.\n *     - absolute: Whether to force the output to be an absolute link (beginning\n *       with http:). Useful for links that will be displayed outside the site,\n *       such as in an RSS feed. Defaults to FALSE.\n *     - language: An optional language object. May affect the rendering of\n *       the anchor tag, such as by adding a language prefix to the path.\n *     - attributes: An associative array of HTML attributes to apply to the\n *       anchor tag. If element 'class' is included, it must be an array; 'title'\n *       must be a string; other elements are more flexible, as they just need\n *       to work as an argument for the constructor of the class\n *       Drupal\\Core\\Template\\Attribute($options['attributes']).\n *\n * @see \\Drupal\\Core\\Utility\\UnroutedUrlAssembler::assemble()\n * @see \\Drupal\\Core\\Routing\\UrlGenerator::generateFromRoute()\n *\/",436],["T_WHITESPACE","\n",474],["T_FUNCTION","function",475],["T_WHITESPACE"," ",475],["T_STRING","hook_link_alter",475],"(","&",["T_VARIABLE","$variables",475],")",["T_WHITESPACE"," ",475],"{",["T_WHITESPACE","\n  ",475],["T_COMMENT","\/\/ Add a warning to the end of route links to the admin section.\n",476],["T_WHITESPACE","  ",477],["T_IF","if",477],["T_WHITESPACE"," ",477],"(",["T_ISSET","isset",477],"(",["T_VARIABLE","$variables",477],"[",["T_CONSTANT_ENCAPSED_STRING","'route_name'",477],"]",")",["T_WHITESPACE"," ",477],["T_BOOLEAN_AND","&&",477],["T_WHITESPACE"," ",477],["T_STRING","strpos",477],"(",["T_VARIABLE","$variables",477],"[",["T_CONSTANT_ENCAPSED_STRING","'route_name'",477],"]",",",["T_WHITESPACE"," ",477],["T_CONSTANT_ENCAPSED_STRING","'admin'",477],")",["T_WHITESPACE"," ",477],["T_IS_NOT_IDENTICAL","!==",477],["T_WHITESPACE"," ",477],["T_STRING","FALSE",477],")",["T_WHITESPACE"," ",477],"{",["T_WHITESPACE","\n    ",477],["T_VARIABLE","$variables",478],"[",["T_CONSTANT_ENCAPSED_STRING","'text'",478],"]",["T_WHITESPACE"," ",478],"=",["T_WHITESPACE"," ",478],["T_STRING","t",478],"(",["T_CONSTANT_ENCAPSED_STRING","'@text (Warning!)'",478],",",["T_WHITESPACE"," ",478],"[",["T_CONSTANT_ENCAPSED_STRING","'@text'",478],["T_WHITESPACE"," ",478],["T_DOUBLE_ARROW","=>",478],["T_WHITESPACE"," ",478],["T_VARIABLE","$variables",478],"[",["T_CONSTANT_ENCAPSED_STRING","'text'",478],"]","]",")",";",["T_WHITESPACE","\n  ",478],"}",["T_WHITESPACE","\n",479],"}",["T_WHITESPACE","\n\n",480],["T_DOC_COMMENT","\/**\n * @} End of \"addtogroup hooks\".\n *\/",482],["T_WHITESPACE","\n",484]]