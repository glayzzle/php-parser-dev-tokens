[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Core",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Datetime",3],";",["T_WHITESPACE","\n\n",3],["T_DOC_COMMENT","\/**\n * Provides an interface defining a date formatter.\n *\/",5],["T_WHITESPACE","\n",7],["T_INTERFACE","interface",8],["T_WHITESPACE"," ",8],["T_STRING","DateFormatterInterface",8],["T_WHITESPACE"," ",8],"{",["T_WHITESPACE","\n\n  ",8],["T_DOC_COMMENT","\/**\n   * Formats a date, using a date type or a custom date format string.\n   *\n   * @param int $timestamp\n   *   A UNIX timestamp to format.\n   * @param string $type\n   *   (optional) The format to use, one of:\n   *   - One of the built-in formats: 'short', 'medium',\n   *     'long', 'html_datetime', 'html_date', 'html_time',\n   *     'html_yearless_date', 'html_week', 'html_month', 'html_year'.\n   *   - The name of a date type defined by a date format config entity.\n   *   - The machine name of an administrator-defined date format.\n   *   - 'custom', to use $format.\n   *   Defaults to 'medium'.\n   * @param string $format\n   *   (optional) If $type is 'custom', a PHP date format string suitable for\n   *   input to date(). Use a backslash to escape ordinary text, so it does not\n   *   get interpreted as date format characters.\n   * @param string|null $timezone\n   *   (optional) Time zone identifier, as described at\n   *   http:\/\/php.net\/manual\/timezones.php Defaults to the time zone used to\n   *   display the page.\n   * @param string|null $langcode\n   *   (optional) Language code to translate to. NULL (default) means to use\n   *   the user interface language for the page.\n   *\n   * @return string\n   *   A translated date string in the requested format. Since the format may\n   *   contain user input, this value should be escaped when output.\n   *\/",10],["T_WHITESPACE","\n  ",39],["T_PUBLIC","public",40],["T_WHITESPACE"," ",40],["T_FUNCTION","function",40],["T_WHITESPACE"," ",40],["T_STRING","format",40],"(",["T_VARIABLE","$timestamp",40],",",["T_WHITESPACE"," ",40],["T_VARIABLE","$type",40],["T_WHITESPACE"," ",40],"=",["T_WHITESPACE"," ",40],["T_CONSTANT_ENCAPSED_STRING","'medium'",40],",",["T_WHITESPACE"," ",40],["T_VARIABLE","$format",40],["T_WHITESPACE"," ",40],"=",["T_WHITESPACE"," ",40],["T_CONSTANT_ENCAPSED_STRING","''",40],",",["T_WHITESPACE"," ",40],["T_VARIABLE","$timezone",40],["T_WHITESPACE"," ",40],"=",["T_WHITESPACE"," ",40],["T_STRING","NULL",40],",",["T_WHITESPACE"," ",40],["T_VARIABLE","$langcode",40],["T_WHITESPACE"," ",40],"=",["T_WHITESPACE"," ",40],["T_STRING","NULL",40],")",";",["T_WHITESPACE","\n\n  ",40],["T_DOC_COMMENT","\/**\n   * Formats a time interval with the requested granularity.\n   *\n   * Note that for intervals over 30 days, the output is approximate: a \"month\"\n   * is always exactly 30 days, and a \"year\" is always 365 days. It is not\n   * possible to make a more exact representation, given that there is only one\n   * input in seconds. If you are formatting an interval between two specific\n   * timestamps, use \\Drupal\\Core\\Datetime\\DateFormatter::formatDiff() instead.\n   *\n   * @param int $interval\n   *   The length of the interval in seconds.\n   * @param int $granularity\n   *   (optional) How many different units to display in the string (2 by\n   *   default).\n   * @param string|null $langcode\n   *   (optional) langcode: The language code for the language used to format\n   *   the date. Defaults to NULL, which results in the user interface language\n   *   for the page being used.\n   *\n   * @return string\n   *   A translated string representation of the interval.\n   *\n   * @see \\Drupal\\Core\\Datetime\\DateFormatterInterface::formatDiff()\n   *\/",42],["T_WHITESPACE","\n  ",65],["T_PUBLIC","public",66],["T_WHITESPACE"," ",66],["T_FUNCTION","function",66],["T_WHITESPACE"," ",66],["T_STRING","formatInterval",66],"(",["T_VARIABLE","$interval",66],",",["T_WHITESPACE"," ",66],["T_VARIABLE","$granularity",66],["T_WHITESPACE"," ",66],"=",["T_WHITESPACE"," ",66],["T_LNUMBER","2",66],",",["T_WHITESPACE"," ",66],["T_VARIABLE","$langcode",66],["T_WHITESPACE"," ",66],"=",["T_WHITESPACE"," ",66],["T_STRING","NULL",66],")",";",["T_WHITESPACE","\n\n  ",66],["T_DOC_COMMENT","\/**\n   * Provides values for all date formatting characters for a given timestamp.\n   *\n   * @param string|null $langcode\n   *   (optional) Language code of the date format, if different from the site\n   *   default language.\n   * @param int|null $timestamp\n   *   (optional) The Unix timestamp to format, defaults to current time.\n   * @param string|null $timezone\n   *   (optional) The timezone to use, if different from the site's default\n   *   timezone.\n   *\n   * @return array\n   *   An array of formatted date values, indexed by the date format character.\n   *\n   * @see date()\n   *\/",68],["T_WHITESPACE","\n  ",84],["T_PUBLIC","public",85],["T_WHITESPACE"," ",85],["T_FUNCTION","function",85],["T_WHITESPACE"," ",85],["T_STRING","getSampleDateFormats",85],"(",["T_VARIABLE","$langcode",85],["T_WHITESPACE"," ",85],"=",["T_WHITESPACE"," ",85],["T_STRING","NULL",85],",",["T_WHITESPACE"," ",85],["T_VARIABLE","$timestamp",85],["T_WHITESPACE"," ",85],"=",["T_WHITESPACE"," ",85],["T_STRING","NULL",85],",",["T_WHITESPACE"," ",85],["T_VARIABLE","$timezone",85],["T_WHITESPACE"," ",85],"=",["T_WHITESPACE"," ",85],["T_STRING","NULL",85],")",";",["T_WHITESPACE","\n\n  ",85],["T_DOC_COMMENT","\/**\n   * Formats the time difference from the current request time to a timestamp.\n   *\n   * @param $timestamp\n   *   A UNIX timestamp to compare against the current request time.\n   * @param array $options\n   *   (optional) An associative array with additional options. The following\n   *   keys can be used:\n   *   - granularity: An integer value that signals how many different units to\n   *     display in the string. Defaults to 2.\n   *   - langcode: The language code for the language used to format the date.\n   *     Defaults to NULL, which results in the user interface language for the\n   *     page being used.\n   *   - strict: A Boolean value indicating whether or not the timestamp can be\n   *     before the current request time. If TRUE (default) and $timestamp is\n   *     before the current request time, the result string will be \"0 seconds\".\n   *     If FALSE and $timestamp is before the current request time, the result\n   *     string will be the formatted time difference.\n   *   - return_as_object: A Boolean value whether to return a FormattedDateDiff\n   *     object.\n   *\n   * @return string|\\Drupal\\Core\\Datetime\\FormattedDateDiff\n   *   A translated string representation of the difference between the given\n   *   timestamp and the current request time. This interval is always positive.\n   *\n   * @see \\Drupal\\Core\\Datetime\\DateFormatterInterface::formatDiff()\n   * @see \\Drupal\\Core\\Datetime\\DateFormatterInterface::formatTimeDiffSince()\n   *\/",87],["T_WHITESPACE","\n  ",114],["T_PUBLIC","public",115],["T_WHITESPACE"," ",115],["T_FUNCTION","function",115],["T_WHITESPACE"," ",115],["T_STRING","formatTimeDiffUntil",115],"(",["T_VARIABLE","$timestamp",115],",",["T_WHITESPACE"," ",115],["T_VARIABLE","$options",115],["T_WHITESPACE"," ",115],"=",["T_WHITESPACE"," ",115],["T_ARRAY","array",115],"(",")",")",";",["T_WHITESPACE","\n\n  ",115],["T_DOC_COMMENT","\/**\n   * Formats the time difference from a timestamp to the current request time.\n   *\n   * @param $timestamp\n   *   A UNIX timestamp to compare against the current request time.\n   * @param array $options\n   *   (optional) An associative array with additional options. The following\n   *   keys can be used:\n   *   - granularity: An integer value that signals how many different units to\n   *     display in the string. Defaults to 2.\n   *   - langcode: The language code for the language used to format the date.\n   *     Defaults to NULL, which results in the user interface language for the\n   *     page being used.\n   *   - strict: A Boolean value indicating whether or not the timestamp can be\n   *     after the current request time. If TRUE (default) and $timestamp is\n   *     after the current request time, the result string will be \"0 seconds\".\n   *     If FALSE and $timestamp is after the current request time, the result\n   *     string will be the formatted time difference.\n   *   - return_as_object: A Boolean value whether to return a FormattedDateDiff\n   *     object.\n   *\n   * @return string|\\Drupal\\Core\\Datetime\\FormattedDateDiff\n   *   A translated string representation of the difference between the given\n   *   timestamp and the current request time. This interval is always positive.\n   *\n   * @see \\Drupal\\Core\\Datetime\\DateFormatterInterface::formatDiff()\n   * @see \\Drupal\\Core\\Datetime\\DateFormatterInterface::formatTimeDiffUntil()\n   *\/",117],["T_WHITESPACE","\n  ",144],["T_PUBLIC","public",145],["T_WHITESPACE"," ",145],["T_FUNCTION","function",145],["T_WHITESPACE"," ",145],["T_STRING","formatTimeDiffSince",145],"(",["T_VARIABLE","$timestamp",145],",",["T_WHITESPACE"," ",145],["T_VARIABLE","$options",145],["T_WHITESPACE"," ",145],"=",["T_WHITESPACE"," ",145],["T_ARRAY","array",145],"(",")",")",";",["T_WHITESPACE","\n\n  ",145],["T_DOC_COMMENT","\/**\n   * Formats a time interval between two timestamps.\n   *\n   * @param int $from\n   *   A UNIX timestamp, defining the from date and time.\n   * @param int $to\n   *   A UNIX timestamp, defining the to date and time.\n   * @param array $options\n   *   (optional) An associative array with additional options. The following\n   *   keys can be used:\n   *   - granularity: An integer value that signals how many different units to\n   *     display in the string. Defaults to 2.\n   *   - langcode: The language code for the language used to format the date.\n   *     Defaults to NULL, which results in the user interface language for the\n   *     page being used.\n   *   - strict: A Boolean value indicating whether or not the $from timestamp\n   *     can be after the $to timestamp. If TRUE (default) and $from is after\n   *     $to, the result string will be \"0 seconds\". If FALSE and $from is\n   *     after $to, the result string will be the formatted time difference.\n   *   - return_as_object: A Boolean value whether to return a FormattedDateDiff\n   *     object.\n   *\n   * @return string|\\Drupal\\Core\\Datetime\\FormattedDateDiff\n   *   A translated string representation of the interval. This interval is\n   *   always positive.\n   *\n   * @see \\Drupal\\Core\\Datetime\\DateFormatterInterface::formatInterval()\n   * @see \\Drupal\\Core\\Datetime\\DateFormatterInterface::formatTimeDiffSince()\n   * @see \\Drupal\\Core\\Datetime\\DateFormatterInterface::formatTimeDiffUntil()\n   *\/",147],["T_WHITESPACE","\n  ",176],["T_PUBLIC","public",177],["T_WHITESPACE"," ",177],["T_FUNCTION","function",177],["T_WHITESPACE"," ",177],["T_STRING","formatDiff",177],"(",["T_VARIABLE","$from",177],",",["T_WHITESPACE"," ",177],["T_VARIABLE","$to",177],",",["T_WHITESPACE"," ",177],["T_VARIABLE","$options",177],["T_WHITESPACE"," ",177],"=",["T_WHITESPACE"," ",177],["T_ARRAY","array",177],"(",")",")",";",["T_WHITESPACE","\n\n",177],"}",["T_WHITESPACE","\n",179]]