[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Core",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Config",3],";",["T_WHITESPACE","\n\n",3],["T_DOC_COMMENT","\/**\n * Defines the interface for a configuration object factory.\n *\n * @ingroup config_api\n *\/",5],["T_WHITESPACE","\n",9],["T_INTERFACE","interface",10],["T_WHITESPACE"," ",10],["T_STRING","ConfigFactoryInterface",10],["T_WHITESPACE"," ",10],"{",["T_WHITESPACE","\n\n  ",10],["T_DOC_COMMENT","\/**\n   * Returns an immutable configuration object for a given name.\n   *\n   * @param string $name\n   *   The name of the configuration object to construct.\n   *\n   * @return \\Drupal\\Core\\Config\\ImmutableConfig\n   *   A configuration object.\n   *\/",12],["T_WHITESPACE","\n  ",20],["T_PUBLIC","public",21],["T_WHITESPACE"," ",21],["T_FUNCTION","function",21],["T_WHITESPACE"," ",21],["T_STRING","get",21],"(",["T_VARIABLE","$name",21],")",";",["T_WHITESPACE","\n\n  ",21],["T_DOC_COMMENT","\/**\n   * Returns an mutable configuration object for a given name.\n   *\n   * Should not be used for config that will have runtime effects. Therefore it\n   * is always loaded override free.\n   *\n   * @param string $name\n   *   The name of the configuration object to construct.\n   *\n   * @return \\Drupal\\Core\\Config\\Config\n   *   A configuration object.\n   *\/",23],["T_WHITESPACE","\n  ",34],["T_PUBLIC","public",35],["T_WHITESPACE"," ",35],["T_FUNCTION","function",35],["T_WHITESPACE"," ",35],["T_STRING","getEditable",35],"(",["T_VARIABLE","$name",35],")",";",["T_WHITESPACE","\n\n  ",35],["T_DOC_COMMENT","\/**\n   * Returns a list of configuration objects for the given names.\n   *\n   * This will pre-load all requested configuration objects does not create\n   * new configuration objects. This method always return immutable objects.\n   * ConfigFactoryInterface::getEditable() should be used to retrieve mutable\n   * configuration objects, one by one.\n   *\n   * @param array $names\n   *   List of names of configuration objects.\n   *\n   * @return \\Drupal\\Core\\Config\\ImmutableConfig[]\n   *   List of successfully loaded configuration objects, keyed by name.\n   *\/",37],["T_WHITESPACE","\n  ",50],["T_PUBLIC","public",51],["T_WHITESPACE"," ",51],["T_FUNCTION","function",51],["T_WHITESPACE"," ",51],["T_STRING","loadMultiple",51],"(",["T_ARRAY","array",51],["T_WHITESPACE"," ",51],["T_VARIABLE","$names",51],")",";",["T_WHITESPACE","\n\n  ",51],["T_DOC_COMMENT","\/**\n   * Resets and re-initializes configuration objects. Internal use only.\n   *\n   * @param string|null $name\n   *   (optional) The name of the configuration object to reset. If omitted, all\n   *   configuration objects are reset.\n   *\n   * @return $this\n   *\/",53],["T_WHITESPACE","\n  ",61],["T_PUBLIC","public",62],["T_WHITESPACE"," ",62],["T_FUNCTION","function",62],["T_WHITESPACE"," ",62],["T_STRING","reset",62],"(",["T_VARIABLE","$name",62],["T_WHITESPACE"," ",62],"=",["T_WHITESPACE"," ",62],["T_STRING","NULL",62],")",";",["T_WHITESPACE","\n\n  ",62],["T_DOC_COMMENT","\/**\n   * Renames a configuration object using the storage.\n   *\n   * @param string $old_name\n   *   The old name of the configuration object.\n   * @param string $new_name\n   *   The new name of the configuration object.\n   *\n   * @return $this\n   *\/",64],["T_WHITESPACE","\n  ",73],["T_PUBLIC","public",74],["T_WHITESPACE"," ",74],["T_FUNCTION","function",74],["T_WHITESPACE"," ",74],["T_STRING","rename",74],"(",["T_VARIABLE","$old_name",74],",",["T_WHITESPACE"," ",74],["T_VARIABLE","$new_name",74],")",";",["T_WHITESPACE","\n\n  ",74],["T_DOC_COMMENT","\/**\n   * The cache keys associated with the state of the config factory.\n   *\n   * All state information that can influence the result of a get() should be\n   * included. Typically, this includes a key for each override added via\n   * addOverride(). This allows external code to maintain caches of\n   * configuration data in addition to or instead of caches maintained by the\n   * factory.\n   *\n   * @return array\n   *   An array of strings, used to generate a cache ID.\n   *\/",76],["T_WHITESPACE","\n  ",87],["T_PUBLIC","public",88],["T_WHITESPACE"," ",88],["T_FUNCTION","function",88],["T_WHITESPACE"," ",88],["T_STRING","getCacheKeys",88],"(",")",";",["T_WHITESPACE","\n\n  ",88],["T_DOC_COMMENT","\/**\n   * Clears the config factory static cache.\n   *\n   * @return $this\n   *\/",90],["T_WHITESPACE","\n  ",94],["T_PUBLIC","public",95],["T_WHITESPACE"," ",95],["T_FUNCTION","function",95],["T_WHITESPACE"," ",95],["T_STRING","clearStaticCache",95],"(",")",";",["T_WHITESPACE","\n\n  ",95],["T_DOC_COMMENT","\/**\n   * Gets configuration object names starting with a given prefix.\n   *\n   * @see \\Drupal\\Core\\Config\\StorageInterface::listAll()\n   *\n   * @param string $prefix\n   *   (optional) The prefix to search for. If omitted, all configuration object\n   *   names that exist are returned.\n   *\n   * @return array\n   *   An array containing matching configuration object names.\n   *\/",97],["T_WHITESPACE","\n  ",108],["T_PUBLIC","public",109],["T_WHITESPACE"," ",109],["T_FUNCTION","function",109],["T_WHITESPACE"," ",109],["T_STRING","listAll",109],"(",["T_VARIABLE","$prefix",109],["T_WHITESPACE"," ",109],"=",["T_WHITESPACE"," ",109],["T_CONSTANT_ENCAPSED_STRING","''",109],")",";",["T_WHITESPACE","\n\n  ",109],["T_DOC_COMMENT","\/**\n   * Adds config factory override services.\n   *\n   * @param \\Drupal\\Core\\Config\\ConfigFactoryOverrideInterface $config_factory_override\n   *   The config factory override service to add. It is added at the end of the\n   *   priority list (lower priority relative to existing ones).\n   *\/",111],["T_WHITESPACE","\n  ",117],["T_PUBLIC","public",118],["T_WHITESPACE"," ",118],["T_FUNCTION","function",118],["T_WHITESPACE"," ",118],["T_STRING","addOverride",118],"(",["T_STRING","ConfigFactoryOverrideInterface",118],["T_WHITESPACE"," ",118],["T_VARIABLE","$config_factory_override",118],")",";",["T_WHITESPACE","\n\n",118],"}",["T_WHITESPACE","\n",120]]