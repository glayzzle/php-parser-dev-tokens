[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Core",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Config",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Entity",3],";",["T_WHITESPACE","\n\n",3],["T_USE","use",5],["T_WHITESPACE"," ",5],["T_STRING","Drupal",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Component",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Graph",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Graph",5],";",["T_WHITESPACE","\n",5],["T_USE","use",6],["T_WHITESPACE"," ",6],["T_STRING","Drupal",6],["T_NS_SEPARATOR","\\",6],["T_STRING","Component",6],["T_NS_SEPARATOR","\\",6],["T_STRING","Utility",6],["T_NS_SEPARATOR","\\",6],["T_STRING","SortArray",6],";",["T_WHITESPACE","\n\n",6],["T_DOC_COMMENT","\/**\n * Provides a class to discover configuration entity dependencies.\n *\n * Configuration entities can depend on modules, themes and other configuration\n * entities. The dependency system is used during configuration installation,\n * uninstallation, and synchronization to ensure that configuration entities are\n * handled in the correct order. For example, node types are created before\n * their fields, and both are created before the view display configuration.\n *\n * The configuration dependency value is structured like this:\n * @code\n * array(\n *   'config' => array(\n *     \/\/ An array of configuration entity object names. Recalculated on save.\n *   ),\n *   'content' => array(\n *     \/\/ An array of content entity configuration dependency names. The default\n *     \/\/ format is \"ENTITY_TYPE_ID:BUNDLE:UUID\". Recalculated on save.\n *   ),\n *   'module' => array(\n *     \/\/ An array of module names. Recalculated on save.\n *   ),\n *   'theme' => array(\n *     \/\/ An array of theme names. Recalculated on save.\n *   ),\n *   'enforced' => array(\n *     \/\/ An array of configuration dependencies that the config entity is\n *     \/\/ ensured to have regardless of the details of the configuration. These\n *     \/\/ dependencies are not recalculated on save.\n *     'config' => array(),\n *     'content' => array(),\n *     'module' => array(),\n *     'theme' => array(),\n *   ),\n * );\n * @endcode\n *\n * Configuration entity dependencies are recalculated on save based on the\n * current values of the configuration. For example, a filter format will depend\n * on the modules that provide the filter plugins it configures. The filter\n * format can be reconfigured to use a different filter plugin provided by\n * another module. If this occurs, the dependencies will be recalculated on save\n * and the old module will be removed from the list of dependencies and replaced\n * with the new one.\n *\n * Configuration entity classes usually extend\n * \\Drupal\\Core\\Config\\Entity\\ConfigEntityBase. The base class provides a\n * generic implementation of the calculateDependencies() method that can\n * discover dependencies due to plugins, and third party settings. If the\n * configuration entity has dependencies that cannot be discovered by the base\n * class's implementation, then it needs to implement\n * \\Drupal\\Core\\Config\\Entity\\ConfigEntityInterface::calculateDependencies() to\n * calculate the dependencies. In this method, use\n * \\Drupal\\Core\\Config\\Entity\\ConfigEntityBase::addDependency() to add\n * dependencies. Implementations should call the base class implementation to\n * inherit the generic functionality.\n *\n * Classes for configurable plugins are a special case. They can either declare\n * their configuration dependencies using the calculateDependencies() method\n * described in the paragraph above, or if they have only static dependencies,\n * these can be declared using the 'config_dependencies' annotation key.\n *\n * If an extension author wants a configuration entity to depend on something\n * that is not calculable then they can add these dependencies to the enforced\n * dependencies key. For example, the Forum module provides the forum node type\n * and in order for it to be deleted when the forum module is uninstalled it has\n * an enforced dependency on the module. The dependency on the Forum module can\n * not be calculated since there is nothing inherent in the state of the node\n * type configuration entity that depends on functionality provided by the Forum\n * module.\n *\n * Once declared properly, dependencies are saved to the configuration entity's\n * configuration object so that they can be checked without the module that\n * provides the configuration entity class being installed. This is important\n * for configuration synchronization, which needs to be able to validate\n * configuration in the sync directory before the synchronization has occurred.\n * Also, if you have a configuration entity object and you want to get the\n * current dependencies (without recalculation), you can use\n * \\Drupal\\Core\\Config\\Entity\\ConfigEntityInterface::getDependencies().\n *\n * When uninstalling a module or a theme, configuration entities that are\n * dependent will also be removed. This default behavior can lead to undesirable\n * side effects, such as a node view mode being entirely removed when the module\n * defining a field or formatter it uses is uninstalled. To prevent this,\n * configuration entity classes can implement\n * \\Drupal\\Core\\Config\\Entity\\ConfigEntityInterface::onDependencyRemoval(),\n * which allows the entity class to remove dependencies instead of being deleted\n * themselves. Implementations should save the entity if dependencies have been\n * successfully removed, in order to register the newly cleaned-out dependency\n * list. So, for example, the node view mode configuration entity class\n * should implement this method to remove references to formatters if the plugin\n * that supplies them depends on a module that is being uninstalled.\n *\n * If a configuration entity is provided as default configuration by an\n * extension (module, theme, or profile), the extension has to depend on any\n * modules or themes that the configuration depends on. For example, if a view\n * configuration entity is provided by an installation profile and the view will\n * not work without a certain module, the profile must declare a dependency on\n * this module in its info.yml file. If you do not want your extension to always\n * depend on a particular module that one of its default configuration entities\n * depends on, you can use a sub-module: move the configuration entity to the\n * sub-module instead of including it in the main extension, and declare the\n * module dependency in the sub-module only.\n *\n * @see \\Drupal\\Core\\Config\\Entity\\ConfigEntityInterface::calculateDependencies()\n * @see \\Drupal\\Core\\Config\\Entity\\ConfigEntityInterface::getDependencies()\n * @see \\Drupal\\Core\\Config\\Entity\\ConfigEntityInterface::onDependencyRemoval()\n * @see \\Drupal\\Core\\Config\\Entity\\ConfigEntityBase::addDependency()\n * @see \\Drupal\\Core\\Config\\ConfigInstallerInterface::installDefaultConfig()\n * @see \\Drupal\\Core\\Config\\ConfigManagerInterface::uninstall()\n * @see \\Drupal\\Core\\Config\\Entity\\ConfigEntityDependency\n * @see \\Drupal\\Core\\Entity\\EntityInterface::getConfigDependencyName()\n * @see \\Drupal\\Core\\Plugin\\PluginDependencyTrait\n *\/",8],["T_WHITESPACE","\n",121],["T_CLASS","class",122],["T_WHITESPACE"," ",122],["T_STRING","ConfigDependencyManager",122],["T_WHITESPACE"," ",122],"{",["T_WHITESPACE","\n\n  ",122],["T_DOC_COMMENT","\/**\n   * The config entity data.\n   *\n   * @var \\Drupal\\Core\\Config\\Entity\\ConfigEntityDependency[]\n   *\/",124],["T_WHITESPACE","\n  ",128],["T_PROTECTED","protected",129],["T_WHITESPACE"," ",129],["T_VARIABLE","$data",129],["T_WHITESPACE"," ",129],"=",["T_WHITESPACE"," ",129],["T_ARRAY","array",129],"(",")",";",["T_WHITESPACE","\n\n  ",129],["T_DOC_COMMENT","\/**\n   * The directed acyclic graph.\n   *\n   * @var array\n   *\/",131],["T_WHITESPACE","\n  ",135],["T_PROTECTED","protected",136],["T_WHITESPACE"," ",136],["T_VARIABLE","$graph",136],";",["T_WHITESPACE","\n\n  ",136],["T_DOC_COMMENT","\/**\n   * Gets dependencies.\n   *\n   * @param string $type\n   *   The type of dependency being checked. Either 'module', 'theme', 'config'\n   *   or 'content'.\n   * @param string $name\n   *   The specific name to check. If $type equals 'module' or 'theme' then it\n   *   should be a module name or theme name. In the case of entity it should be\n   *   the full configuration object name.\n   *\n   * @return \\Drupal\\Core\\Config\\Entity\\ConfigEntityDependency[]\n   *   An array of config entity dependency objects that are dependent.\n   *\/",138],["T_WHITESPACE","\n  ",151],["T_PUBLIC","public",152],["T_WHITESPACE"," ",152],["T_FUNCTION","function",152],["T_WHITESPACE"," ",152],["T_STRING","getDependentEntities",152],"(",["T_VARIABLE","$type",152],",",["T_WHITESPACE"," ",152],["T_VARIABLE","$name",152],")",["T_WHITESPACE"," ",152],"{",["T_WHITESPACE","\n    ",152],["T_VARIABLE","$dependent_entities",153],["T_WHITESPACE"," ",153],"=",["T_WHITESPACE"," ",153],["T_ARRAY","array",153],"(",")",";",["T_WHITESPACE","\n\n    ",153],["T_VARIABLE","$entities_to_check",155],["T_WHITESPACE"," ",155],"=",["T_WHITESPACE"," ",155],["T_ARRAY","array",155],"(",")",";",["T_WHITESPACE","\n    ",155],["T_IF","if",156],["T_WHITESPACE"," ",156],"(",["T_VARIABLE","$type",156],["T_WHITESPACE"," ",156],["T_IS_EQUAL","==",156],["T_WHITESPACE"," ",156],["T_CONSTANT_ENCAPSED_STRING","'config'",156],")",["T_WHITESPACE"," ",156],"{",["T_WHITESPACE","\n      ",156],["T_VARIABLE","$entities_to_check",157],"[","]",["T_WHITESPACE"," ",157],"=",["T_WHITESPACE"," ",157],["T_VARIABLE","$name",157],";",["T_WHITESPACE","\n    ",157],"}",["T_WHITESPACE","\n    ",158],["T_ELSE","else",159],["T_WHITESPACE"," ",159],"{",["T_WHITESPACE","\n      ",159],["T_IF","if",160],["T_WHITESPACE"," ",160],"(",["T_VARIABLE","$type",160],["T_WHITESPACE"," ",160],["T_IS_EQUAL","==",160],["T_WHITESPACE"," ",160],["T_CONSTANT_ENCAPSED_STRING","'module'",160],["T_WHITESPACE"," ",160],["T_BOOLEAN_OR","||",160],["T_WHITESPACE"," ",160],["T_VARIABLE","$type",160],["T_WHITESPACE"," ",160],["T_IS_EQUAL","==",160],["T_WHITESPACE"," ",160],["T_CONSTANT_ENCAPSED_STRING","'theme'",160],["T_WHITESPACE"," ",160],["T_BOOLEAN_OR","||",160],["T_WHITESPACE"," ",160],["T_VARIABLE","$type",160],["T_WHITESPACE"," ",160],["T_IS_EQUAL","==",160],["T_WHITESPACE"," ",160],["T_CONSTANT_ENCAPSED_STRING","'content'",160],")",["T_WHITESPACE"," ",160],"{",["T_WHITESPACE","\n        ",160],["T_VARIABLE","$dependent_entities",161],["T_WHITESPACE"," ",161],"=",["T_WHITESPACE"," ",161],["T_STRING","array_filter",161],"(",["T_VARIABLE","$this",161],["T_OBJECT_OPERATOR","->",161],["T_STRING","data",161],",",["T_WHITESPACE"," ",161],["T_FUNCTION","function",161],["T_WHITESPACE"," ",161],"(",["T_STRING","ConfigEntityDependency",161],["T_WHITESPACE"," ",161],["T_VARIABLE","$entity",161],")",["T_WHITESPACE"," ",161],["T_USE","use",161],["T_WHITESPACE"," ",161],"(",["T_VARIABLE","$type",161],",",["T_WHITESPACE"," ",161],["T_VARIABLE","$name",161],")",["T_WHITESPACE"," ",161],"{",["T_WHITESPACE","\n          ",161],["T_RETURN","return",162],["T_WHITESPACE"," ",162],["T_VARIABLE","$entity",162],["T_OBJECT_OPERATOR","->",162],["T_STRING","hasDependency",162],"(",["T_VARIABLE","$type",162],",",["T_WHITESPACE"," ",162],["T_VARIABLE","$name",162],")",";",["T_WHITESPACE","\n        ",162],"}",")",";",["T_WHITESPACE","\n      ",163],"}",["T_WHITESPACE","\n      ",164],["T_COMMENT","\/\/ If checking content, module, or theme dependencies, discover which\n",165],["T_WHITESPACE","      ",166],["T_COMMENT","\/\/ entities are dependent on the entities that have a direct dependency.\n",166],["T_WHITESPACE","      ",167],["T_FOREACH","foreach",167],["T_WHITESPACE"," ",167],"(",["T_VARIABLE","$dependent_entities",167],["T_WHITESPACE"," ",167],["T_AS","as",167],["T_WHITESPACE"," ",167],["T_VARIABLE","$entity",167],")",["T_WHITESPACE"," ",167],"{",["T_WHITESPACE","\n        ",167],["T_VARIABLE","$entities_to_check",168],"[","]",["T_WHITESPACE"," ",168],"=",["T_WHITESPACE"," ",168],["T_VARIABLE","$entity",168],["T_OBJECT_OPERATOR","->",168],["T_STRING","getConfigDependencyName",168],"(",")",";",["T_WHITESPACE","\n      ",168],"}",["T_WHITESPACE","\n    ",169],"}",["T_WHITESPACE","\n    ",170],["T_VARIABLE","$dependencies",171],["T_WHITESPACE"," ",171],"=",["T_WHITESPACE"," ",171],["T_STRING","array_merge",171],"(",["T_VARIABLE","$this",171],["T_OBJECT_OPERATOR","->",171],["T_STRING","createGraphConfigEntityDependencies",171],"(",["T_VARIABLE","$entities_to_check",171],")",",",["T_WHITESPACE"," ",171],["T_VARIABLE","$dependent_entities",171],")",";",["T_WHITESPACE","\n    ",171],["T_COMMENT","\/\/ Sort dependencies in the reverse order of the graph. So the least\n",172],["T_WHITESPACE","    ",173],["T_COMMENT","\/\/ dependent is at the top. For example, this ensures that fields are\n",173],["T_WHITESPACE","    ",174],["T_COMMENT","\/\/ always after field storages. This is because field storages need to be\n",174],["T_WHITESPACE","    ",175],["T_COMMENT","\/\/ created before a field.\n",175],["T_WHITESPACE","    ",176],["T_VARIABLE","$graph",176],["T_WHITESPACE"," ",176],"=",["T_WHITESPACE"," ",176],["T_VARIABLE","$this",176],["T_OBJECT_OPERATOR","->",176],["T_STRING","getGraph",176],"(",")",";",["T_WHITESPACE","\n    ",176],["T_VARIABLE","$sorts",177],["T_WHITESPACE"," ",177],"=",["T_WHITESPACE"," ",177],["T_VARIABLE","$this",177],["T_OBJECT_OPERATOR","->",177],["T_STRING","prepareMultisort",177],"(",["T_VARIABLE","$graph",177],",",["T_WHITESPACE"," ",177],"[",["T_CONSTANT_ENCAPSED_STRING","'weight'",177],",",["T_WHITESPACE"," ",177],["T_CONSTANT_ENCAPSED_STRING","'name'",177],"]",")",";",["T_WHITESPACE","\n    ",177],["T_STRING","array_multisort",178],"(",["T_VARIABLE","$sorts",178],"[",["T_CONSTANT_ENCAPSED_STRING","'weight'",178],"]",",",["T_WHITESPACE"," ",178],["T_STRING","SORT_DESC",178],",",["T_WHITESPACE"," ",178],["T_STRING","SORT_NUMERIC",178],",",["T_WHITESPACE"," ",178],["T_VARIABLE","$sorts",178],"[",["T_CONSTANT_ENCAPSED_STRING","'name'",178],"]",",",["T_WHITESPACE"," ",178],["T_STRING","SORT_ASC",178],",",["T_WHITESPACE"," ",178],["T_STRING","SORT_NATURAL",178],["T_WHITESPACE"," ",178],"|",["T_WHITESPACE"," ",178],["T_STRING","SORT_FLAG_CASE",178],",",["T_WHITESPACE"," ",178],["T_VARIABLE","$graph",178],")",";",["T_WHITESPACE","\n    ",178],["T_RETURN","return",179],["T_WHITESPACE"," ",179],["T_STRING","array_replace",179],"(",["T_STRING","array_intersect_key",179],"(",["T_VARIABLE","$graph",179],",",["T_WHITESPACE"," ",179],["T_VARIABLE","$dependencies",179],")",",",["T_WHITESPACE"," ",179],["T_VARIABLE","$dependencies",179],")",";",["T_WHITESPACE","\n  ",179],"}",["T_WHITESPACE","\n\n  ",180],["T_DOC_COMMENT","\/**\n   * Extracts data from the graph for use in array_multisort().\n   *\n   * @param array $graph\n   *   The graph to extract data from.\n   * @param array $keys\n   *   The keys whose values to extract.\n   *\n   * @return\n   *   An array keyed by the $keys passed in. The values are arrays keyed by the\n   *   row from the graph and the value is the corresponding value for the key\n   *   from the graph.\n   *\/",182],["T_WHITESPACE","\n  ",194],["T_PROTECTED","protected",195],["T_WHITESPACE"," ",195],["T_FUNCTION","function",195],["T_WHITESPACE"," ",195],["T_STRING","prepareMultisort",195],"(",["T_VARIABLE","$graph",195],",",["T_WHITESPACE"," ",195],["T_VARIABLE","$keys",195],")",["T_WHITESPACE"," ",195],"{",["T_WHITESPACE","\n    ",195],["T_VARIABLE","$return",196],["T_WHITESPACE"," ",196],"=",["T_WHITESPACE"," ",196],["T_STRING","array_fill_keys",196],"(",["T_VARIABLE","$keys",196],",",["T_WHITESPACE"," ",196],"[","]",")",";",["T_WHITESPACE","\n    ",196],["T_FOREACH","foreach",197],["T_WHITESPACE"," ",197],"(",["T_VARIABLE","$graph",197],["T_WHITESPACE"," ",197],["T_AS","as",197],["T_WHITESPACE"," ",197],["T_VARIABLE","$graph_key",197],["T_WHITESPACE"," ",197],["T_DOUBLE_ARROW","=>",197],["T_WHITESPACE"," ",197],["T_VARIABLE","$graph_row",197],")",["T_WHITESPACE"," ",197],"{",["T_WHITESPACE","\n      ",197],["T_FOREACH","foreach",198],["T_WHITESPACE"," ",198],"(",["T_VARIABLE","$keys",198],["T_WHITESPACE"," ",198],["T_AS","as",198],["T_WHITESPACE"," ",198],["T_VARIABLE","$key",198],")",["T_WHITESPACE"," ",198],"{",["T_WHITESPACE","\n        ",198],["T_VARIABLE","$return",199],"[",["T_VARIABLE","$key",199],"]","[",["T_VARIABLE","$graph_key",199],"]",["T_WHITESPACE"," ",199],"=",["T_WHITESPACE"," ",199],["T_VARIABLE","$graph_row",199],"[",["T_VARIABLE","$key",199],"]",";",["T_WHITESPACE","\n      ",199],"}",["T_WHITESPACE","\n    ",200],"}",["T_WHITESPACE","\n    ",201],["T_RETURN","return",202],["T_WHITESPACE"," ",202],["T_VARIABLE","$return",202],";",["T_WHITESPACE","\n  ",202],"}",["T_WHITESPACE","\n\n  ",203],["T_DOC_COMMENT","\/**\n   * Sorts the dependencies in order of most dependent last.\n   *\n   * @return array\n   *   The list of entities in order of most dependent last, otherwise\n   *   alphabetical.\n   *\/",205],["T_WHITESPACE","\n  ",211],["T_PUBLIC","public",212],["T_WHITESPACE"," ",212],["T_FUNCTION","function",212],["T_WHITESPACE"," ",212],["T_STRING","sortAll",212],"(",")",["T_WHITESPACE"," ",212],"{",["T_WHITESPACE","\n    ",212],["T_VARIABLE","$graph",213],["T_WHITESPACE"," ",213],"=",["T_WHITESPACE"," ",213],["T_VARIABLE","$this",213],["T_OBJECT_OPERATOR","->",213],["T_STRING","getGraph",213],"(",")",";",["T_WHITESPACE","\n    ",213],["T_COMMENT","\/\/ Sort by weight and alphabetically. The most dependent entities\n",214],["T_WHITESPACE","    ",215],["T_COMMENT","\/\/ are last and entities with the same weight are alphabetically ordered.\n",215],["T_WHITESPACE","    ",216],["T_VARIABLE","$sorts",216],["T_WHITESPACE"," ",216],"=",["T_WHITESPACE"," ",216],["T_VARIABLE","$this",216],["T_OBJECT_OPERATOR","->",216],["T_STRING","prepareMultisort",216],"(",["T_VARIABLE","$graph",216],",",["T_WHITESPACE"," ",216],"[",["T_CONSTANT_ENCAPSED_STRING","'weight'",216],",",["T_WHITESPACE"," ",216],["T_CONSTANT_ENCAPSED_STRING","'name'",216],"]",")",";",["T_WHITESPACE","\n    ",216],["T_STRING","array_multisort",217],"(",["T_VARIABLE","$sorts",217],"[",["T_CONSTANT_ENCAPSED_STRING","'weight'",217],"]",",",["T_WHITESPACE"," ",217],["T_STRING","SORT_ASC",217],",",["T_WHITESPACE"," ",217],["T_STRING","SORT_NUMERIC",217],",",["T_WHITESPACE"," ",217],["T_VARIABLE","$sorts",217],"[",["T_CONSTANT_ENCAPSED_STRING","'name'",217],"]",",",["T_WHITESPACE"," ",217],["T_STRING","SORT_ASC",217],",",["T_WHITESPACE"," ",217],["T_STRING","SORT_NATURAL",217],["T_WHITESPACE"," ",217],"|",["T_WHITESPACE"," ",217],["T_STRING","SORT_FLAG_CASE",217],",",["T_WHITESPACE"," ",217],["T_VARIABLE","$graph",217],")",";",["T_WHITESPACE","\n    ",217],["T_COMMENT","\/\/ Use array_intersect_key() to exclude modules and themes from the list.\n",218],["T_WHITESPACE","    ",219],["T_RETURN","return",219],["T_WHITESPACE"," ",219],["T_STRING","array_keys",219],"(",["T_STRING","array_intersect_key",219],"(",["T_VARIABLE","$graph",219],",",["T_WHITESPACE"," ",219],["T_VARIABLE","$this",219],["T_OBJECT_OPERATOR","->",219],["T_STRING","data",219],")",")",";",["T_WHITESPACE","\n  ",219],"}",["T_WHITESPACE","\n\n  ",220],["T_DOC_COMMENT","\/**\n   * Sorts the dependency graph by weight and alphabetically.\n   *\n   * @deprecated in Drupal 8.2.0, will be removed before Drupal 9.0.0. Use\n   * \\Drupal\\Core\\Config\\Entity\\ConfigDependencyManager::prepareMultisort() and\n   * array_multisort() instead.\n   *\n   * @param array $a\n   *   First item for comparison. The compared items should be associative\n   *   arrays that include a 'weight' and a 'name' key.\n   * @param array $b\n   *   Second item for comparison.\n   *\n   * @return int\n   *   The comparison result for uasort().\n   *\/",222],["T_WHITESPACE","\n  ",237],["T_PROTECTED","protected",238],["T_WHITESPACE"," ",238],["T_STATIC","static",238],["T_WHITESPACE"," ",238],["T_FUNCTION","function",238],["T_WHITESPACE"," ",238],["T_STRING","sortGraphByWeight",238],"(",["T_ARRAY","array",238],["T_WHITESPACE"," ",238],["T_VARIABLE","$a",238],",",["T_WHITESPACE"," ",238],["T_ARRAY","array",238],["T_WHITESPACE"," ",238],["T_VARIABLE","$b",238],")",["T_WHITESPACE"," ",238],"{",["T_WHITESPACE","\n    ",238],["T_VARIABLE","$weight_cmp",239],["T_WHITESPACE"," ",239],"=",["T_WHITESPACE"," ",239],["T_STRING","SortArray",239],["T_DOUBLE_COLON","::",239],["T_STRING","sortByKeyInt",239],"(",["T_VARIABLE","$a",239],",",["T_WHITESPACE"," ",239],["T_VARIABLE","$b",239],",",["T_WHITESPACE"," ",239],["T_CONSTANT_ENCAPSED_STRING","'weight'",239],")",";",["T_WHITESPACE","\n\n    ",239],["T_IF","if",241],["T_WHITESPACE"," ",241],"(",["T_VARIABLE","$weight_cmp",241],["T_WHITESPACE"," ",241],["T_IS_IDENTICAL","===",241],["T_WHITESPACE"," ",241],["T_LNUMBER","0",241],")",["T_WHITESPACE"," ",241],"{",["T_WHITESPACE","\n      ",241],["T_RETURN","return",242],["T_WHITESPACE"," ",242],["T_STRING","SortArray",242],["T_DOUBLE_COLON","::",242],["T_STRING","sortByKeyString",242],"(",["T_VARIABLE","$a",242],",",["T_WHITESPACE"," ",242],["T_VARIABLE","$b",242],",",["T_WHITESPACE"," ",242],["T_CONSTANT_ENCAPSED_STRING","'name'",242],")",";",["T_WHITESPACE","\n    ",242],"}",["T_WHITESPACE","\n    ",243],["T_RETURN","return",244],["T_WHITESPACE"," ",244],["T_VARIABLE","$weight_cmp",244],";",["T_WHITESPACE","\n  ",244],"}",["T_WHITESPACE","\n\n  ",245],["T_DOC_COMMENT","\/**\n   * Sorts the dependency graph by reverse weight and alphabetically.\n   *\n   * @deprecated in Drupal 8.2.0, will be removed before Drupal 9.0.0. Use\n   * \\Drupal\\Core\\Config\\Entity\\ConfigDependencyManager::prepareMultisort() and\n   * array_multisort() instead.\n   *\n   * @param array $a\n   *   First item for comparison. The compared items should be associative\n   *   arrays that include a 'weight' and a 'name' key.\n   * @param array $b\n   *   Second item for comparison.\n   *\n   * @return int\n   *   The comparison result for uasort().\n   *\/",247],["T_WHITESPACE","\n  ",262],["T_PUBLIC","public",263],["T_WHITESPACE"," ",263],["T_STATIC","static",263],["T_WHITESPACE"," ",263],["T_FUNCTION","function",263],["T_WHITESPACE"," ",263],["T_STRING","sortGraph",263],"(",["T_ARRAY","array",263],["T_WHITESPACE"," ",263],["T_VARIABLE","$a",263],",",["T_WHITESPACE"," ",263],["T_ARRAY","array",263],["T_WHITESPACE"," ",263],["T_VARIABLE","$b",263],")",["T_WHITESPACE"," ",263],"{",["T_WHITESPACE","\n    ",263],["T_VARIABLE","$weight_cmp",264],["T_WHITESPACE"," ",264],"=",["T_WHITESPACE"," ",264],["T_STRING","SortArray",264],["T_DOUBLE_COLON","::",264],["T_STRING","sortByKeyInt",264],"(",["T_VARIABLE","$a",264],",",["T_WHITESPACE"," ",264],["T_VARIABLE","$b",264],",",["T_WHITESPACE"," ",264],["T_CONSTANT_ENCAPSED_STRING","'weight'",264],")",["T_WHITESPACE"," ",264],"*",["T_WHITESPACE"," ",264],"-",["T_LNUMBER","1",264],";",["T_WHITESPACE","\n\n    ",264],["T_IF","if",266],["T_WHITESPACE"," ",266],"(",["T_VARIABLE","$weight_cmp",266],["T_WHITESPACE"," ",266],["T_IS_IDENTICAL","===",266],["T_WHITESPACE"," ",266],["T_LNUMBER","0",266],")",["T_WHITESPACE"," ",266],"{",["T_WHITESPACE","\n      ",266],["T_RETURN","return",267],["T_WHITESPACE"," ",267],["T_STRING","SortArray",267],["T_DOUBLE_COLON","::",267],["T_STRING","sortByKeyString",267],"(",["T_VARIABLE","$a",267],",",["T_WHITESPACE"," ",267],["T_VARIABLE","$b",267],",",["T_WHITESPACE"," ",267],["T_CONSTANT_ENCAPSED_STRING","'name'",267],")",";",["T_WHITESPACE","\n    ",267],"}",["T_WHITESPACE","\n    ",268],["T_RETURN","return",269],["T_WHITESPACE"," ",269],["T_VARIABLE","$weight_cmp",269],";",["T_WHITESPACE","\n  ",269],"}",["T_WHITESPACE","\n\n  ",270],["T_DOC_COMMENT","\/**\n   * Creates a graph of config entity dependencies.\n   *\n   * @param array $entities_to_check\n   *   The configuration entity full configuration names to determine the\n   *   dependencies for.\n   *\n   * @return \\Drupal\\Core\\Config\\Entity\\ConfigEntityDependency[]\n   *   A graph of config entity dependency objects that are dependent on the\n   *   supplied entities to check.\n   *\/",272],["T_WHITESPACE","\n  ",282],["T_PROTECTED","protected",283],["T_WHITESPACE"," ",283],["T_FUNCTION","function",283],["T_WHITESPACE"," ",283],["T_STRING","createGraphConfigEntityDependencies",283],"(",["T_VARIABLE","$entities_to_check",283],")",["T_WHITESPACE"," ",283],"{",["T_WHITESPACE","\n    ",283],["T_VARIABLE","$dependent_entities",284],["T_WHITESPACE"," ",284],"=",["T_WHITESPACE"," ",284],["T_ARRAY","array",284],"(",")",";",["T_WHITESPACE","\n    ",284],["T_VARIABLE","$graph",285],["T_WHITESPACE"," ",285],"=",["T_WHITESPACE"," ",285],["T_VARIABLE","$this",285],["T_OBJECT_OPERATOR","->",285],["T_STRING","getGraph",285],"(",")",";",["T_WHITESPACE","\n\n    ",285],["T_FOREACH","foreach",287],["T_WHITESPACE"," ",287],"(",["T_VARIABLE","$entities_to_check",287],["T_WHITESPACE"," ",287],["T_AS","as",287],["T_WHITESPACE"," ",287],["T_VARIABLE","$entity",287],")",["T_WHITESPACE"," ",287],"{",["T_WHITESPACE","\n      ",287],["T_IF","if",288],["T_WHITESPACE"," ",288],"(",["T_ISSET","isset",288],"(",["T_VARIABLE","$graph",288],"[",["T_VARIABLE","$entity",288],"]",")",["T_WHITESPACE"," ",288],["T_BOOLEAN_AND","&&",288],["T_WHITESPACE"," ",288],"!",["T_EMPTY","empty",288],"(",["T_VARIABLE","$graph",288],"[",["T_VARIABLE","$entity",288],"]","[",["T_CONSTANT_ENCAPSED_STRING","'paths'",288],"]",")",")",["T_WHITESPACE"," ",288],"{",["T_WHITESPACE","\n        ",288],["T_FOREACH","foreach",289],["T_WHITESPACE"," ",289],"(",["T_VARIABLE","$graph",289],"[",["T_VARIABLE","$entity",289],"]","[",["T_CONSTANT_ENCAPSED_STRING","'paths'",289],"]",["T_WHITESPACE"," ",289],["T_AS","as",289],["T_WHITESPACE"," ",289],["T_VARIABLE","$dependency",289],["T_WHITESPACE"," ",289],["T_DOUBLE_ARROW","=>",289],["T_WHITESPACE"," ",289],["T_VARIABLE","$value",289],")",["T_WHITESPACE"," ",289],"{",["T_WHITESPACE","\n          ",289],["T_IF","if",290],["T_WHITESPACE"," ",290],"(",["T_ISSET","isset",290],"(",["T_VARIABLE","$this",290],["T_OBJECT_OPERATOR","->",290],["T_STRING","data",290],"[",["T_VARIABLE","$dependency",290],"]",")",")",["T_WHITESPACE"," ",290],"{",["T_WHITESPACE","\n            ",290],["T_VARIABLE","$dependent_entities",291],"[",["T_VARIABLE","$dependency",291],"]",["T_WHITESPACE"," ",291],"=",["T_WHITESPACE"," ",291],["T_VARIABLE","$this",291],["T_OBJECT_OPERATOR","->",291],["T_STRING","data",291],"[",["T_VARIABLE","$dependency",291],"]",";",["T_WHITESPACE","\n          ",291],"}",["T_WHITESPACE","\n        ",292],"}",["T_WHITESPACE","\n      ",293],"}",["T_WHITESPACE","\n    ",294],"}",["T_WHITESPACE","\n    ",295],["T_RETURN","return",296],["T_WHITESPACE"," ",296],["T_VARIABLE","$dependent_entities",296],";",["T_WHITESPACE","\n  ",296],"}",["T_WHITESPACE","\n\n  ",297],["T_DOC_COMMENT","\/**\n   * Gets the dependency graph of all the config entities.\n   *\n   * @return array\n   *   The dependency graph of all the config entities.\n   *\/",299],["T_WHITESPACE","\n  ",304],["T_PROTECTED","protected",305],["T_WHITESPACE"," ",305],["T_FUNCTION","function",305],["T_WHITESPACE"," ",305],["T_STRING","getGraph",305],"(",")",["T_WHITESPACE"," ",305],"{",["T_WHITESPACE","\n    ",305],["T_IF","if",306],["T_WHITESPACE"," ",306],"(","!",["T_ISSET","isset",306],"(",["T_VARIABLE","$this",306],["T_OBJECT_OPERATOR","->",306],["T_STRING","graph",306],")",")",["T_WHITESPACE"," ",306],"{",["T_WHITESPACE","\n      ",306],["T_VARIABLE","$graph",307],["T_WHITESPACE"," ",307],"=",["T_WHITESPACE"," ",307],["T_ARRAY","array",307],"(",")",";",["T_WHITESPACE","\n      ",307],["T_FOREACH","foreach",308],["T_WHITESPACE"," ",308],"(",["T_VARIABLE","$this",308],["T_OBJECT_OPERATOR","->",308],["T_STRING","data",308],["T_WHITESPACE"," ",308],["T_AS","as",308],["T_WHITESPACE"," ",308],["T_VARIABLE","$entity",308],")",["T_WHITESPACE"," ",308],"{",["T_WHITESPACE","\n        ",308],["T_VARIABLE","$graph_key",309],["T_WHITESPACE"," ",309],"=",["T_WHITESPACE"," ",309],["T_VARIABLE","$entity",309],["T_OBJECT_OPERATOR","->",309],["T_STRING","getConfigDependencyName",309],"(",")",";",["T_WHITESPACE","\n        ",309],["T_IF","if",310],["T_WHITESPACE"," ",310],"(","!",["T_ISSET","isset",310],"(",["T_VARIABLE","$graph",310],"[",["T_VARIABLE","$graph_key",310],"]",")",")",["T_WHITESPACE"," ",310],"{",["T_WHITESPACE","\n          ",310],["T_VARIABLE","$graph",311],"[",["T_VARIABLE","$graph_key",311],"]",["T_WHITESPACE"," ",311],"=",["T_WHITESPACE"," ",311],"[",["T_WHITESPACE","\n            ",311],["T_CONSTANT_ENCAPSED_STRING","'edges'",312],["T_WHITESPACE"," ",312],["T_DOUBLE_ARROW","=>",312],["T_WHITESPACE"," ",312],"[","]",",",["T_WHITESPACE","\n            ",312],["T_CONSTANT_ENCAPSED_STRING","'name'",313],["T_WHITESPACE"," ",313],["T_DOUBLE_ARROW","=>",313],["T_WHITESPACE"," ",313],["T_VARIABLE","$graph_key",313],",",["T_WHITESPACE","\n          ",313],"]",";",["T_WHITESPACE","\n        ",314],"}",["T_WHITESPACE","\n        ",315],["T_COMMENT","\/\/ Include all dependencies in the graph so that topographical sorting\n",316],["T_WHITESPACE","        ",317],["T_COMMENT","\/\/ works.\n",317],["T_WHITESPACE","        ",318],["T_FOREACH","foreach",318],["T_WHITESPACE"," ",318],"(",["T_STRING","array_merge",318],"(",["T_VARIABLE","$entity",318],["T_OBJECT_OPERATOR","->",318],["T_STRING","getDependencies",318],"(",["T_CONSTANT_ENCAPSED_STRING","'config'",318],")",",",["T_WHITESPACE"," ",318],["T_VARIABLE","$entity",318],["T_OBJECT_OPERATOR","->",318],["T_STRING","getDependencies",318],"(",["T_CONSTANT_ENCAPSED_STRING","'module'",318],")",",",["T_WHITESPACE"," ",318],["T_VARIABLE","$entity",318],["T_OBJECT_OPERATOR","->",318],["T_STRING","getDependencies",318],"(",["T_CONSTANT_ENCAPSED_STRING","'theme'",318],")",")",["T_WHITESPACE"," ",318],["T_AS","as",318],["T_WHITESPACE"," ",318],["T_VARIABLE","$dependency",318],")",["T_WHITESPACE"," ",318],"{",["T_WHITESPACE","\n          ",318],["T_VARIABLE","$graph",319],"[",["T_VARIABLE","$dependency",319],"]","[",["T_CONSTANT_ENCAPSED_STRING","'edges'",319],"]","[",["T_VARIABLE","$graph_key",319],"]",["T_WHITESPACE"," ",319],"=",["T_WHITESPACE"," ",319],["T_STRING","TRUE",319],";",["T_WHITESPACE","\n          ",319],["T_VARIABLE","$graph",320],"[",["T_VARIABLE","$dependency",320],"]","[",["T_CONSTANT_ENCAPSED_STRING","'name'",320],"]",["T_WHITESPACE"," ",320],"=",["T_WHITESPACE"," ",320],["T_VARIABLE","$dependency",320],";",["T_WHITESPACE","\n        ",320],"}",["T_WHITESPACE","\n      ",321],"}",["T_WHITESPACE","\n      ",322],["T_COMMENT","\/\/ Ensure that order of the graph is consistent.\n",323],["T_WHITESPACE","      ",324],["T_STRING","krsort",324],"(",["T_VARIABLE","$graph",324],")",";",["T_WHITESPACE","\n      ",324],["T_VARIABLE","$graph_object",325],["T_WHITESPACE"," ",325],"=",["T_WHITESPACE"," ",325],["T_NEW","new",325],["T_WHITESPACE"," ",325],["T_STRING","Graph",325],"(",["T_VARIABLE","$graph",325],")",";",["T_WHITESPACE","\n      ",325],["T_VARIABLE","$this",326],["T_OBJECT_OPERATOR","->",326],["T_STRING","graph",326],["T_WHITESPACE"," ",326],"=",["T_WHITESPACE"," ",326],["T_VARIABLE","$graph_object",326],["T_OBJECT_OPERATOR","->",326],["T_STRING","searchAndSort",326],"(",")",";",["T_WHITESPACE","\n    ",326],"}",["T_WHITESPACE","\n    ",327],["T_RETURN","return",328],["T_WHITESPACE"," ",328],["T_VARIABLE","$this",328],["T_OBJECT_OPERATOR","->",328],["T_STRING","graph",328],";",["T_WHITESPACE","\n  ",328],"}",["T_WHITESPACE","\n\n  ",329],["T_DOC_COMMENT","\/**\n   * Sets data to calculate dependencies for.\n   *\n   * The data is converted into lightweight ConfigEntityDependency objects.\n   *\n   * @param array $data\n   *   Configuration data keyed by configuration object name. Typically the\n   *   output of \\Drupal\\Core\\Config\\StorageInterface::loadMultiple().\n   *\n   * @return $this\n   *\/",331],["T_WHITESPACE","\n  ",341],["T_PUBLIC","public",342],["T_WHITESPACE"," ",342],["T_FUNCTION","function",342],["T_WHITESPACE"," ",342],["T_STRING","setData",342],"(",["T_ARRAY","array",342],["T_WHITESPACE"," ",342],["T_VARIABLE","$data",342],")",["T_WHITESPACE"," ",342],"{",["T_WHITESPACE","\n    ",342],["T_STRING","array_walk",343],"(",["T_VARIABLE","$data",343],",",["T_WHITESPACE"," ",343],["T_FUNCTION","function",343],["T_WHITESPACE"," ",343],"(","&",["T_VARIABLE","$config",343],",",["T_WHITESPACE"," ",343],["T_VARIABLE","$name",343],")",["T_WHITESPACE"," ",343],"{",["T_WHITESPACE","\n      ",343],["T_VARIABLE","$config",344],["T_WHITESPACE"," ",344],"=",["T_WHITESPACE"," ",344],["T_NEW","new",344],["T_WHITESPACE"," ",344],["T_STRING","ConfigEntityDependency",344],"(",["T_VARIABLE","$name",344],",",["T_WHITESPACE"," ",344],["T_VARIABLE","$config",344],")",";",["T_WHITESPACE","\n    ",344],"}",")",";",["T_WHITESPACE","\n    ",345],["T_VARIABLE","$this",346],["T_OBJECT_OPERATOR","->",346],["T_STRING","data",346],["T_WHITESPACE"," ",346],"=",["T_WHITESPACE"," ",346],["T_VARIABLE","$data",346],";",["T_WHITESPACE","\n    ",346],["T_VARIABLE","$this",347],["T_OBJECT_OPERATOR","->",347],["T_STRING","graph",347],["T_WHITESPACE"," ",347],"=",["T_WHITESPACE"," ",347],["T_STRING","NULL",347],";",["T_WHITESPACE","\n    ",347],["T_RETURN","return",348],["T_WHITESPACE"," ",348],["T_VARIABLE","$this",348],";",["T_WHITESPACE","\n  ",348],"}",["T_WHITESPACE","\n\n  ",349],["T_DOC_COMMENT","\/**\n   * Updates one of the lightweight ConfigEntityDependency objects.\n   *\n   * @param $name\n   *   The configuration dependency name.\n   * @param array $dependencies\n   *   The configuration dependencies. The array is structured like this:\n   *   @code\n   *   array(\n   *     'config' => array(\n   *       \/\/ An array of configuration entity object names.\n   *     ),\n   *     'content' => array(\n   *       \/\/ An array of content entity configuration dependency names. The default\n   *       \/\/ format is \"ENTITY_TYPE_ID:BUNDLE:UUID\".\n   *     ),\n   *     'module' => array(\n   *       \/\/ An array of module names.\n   *     ),\n   *     'theme' => array(\n   *       \/\/ An array of theme names.\n   *     ),\n   *   );\n   *   @endcode\n   *\n   * @return $this\n   *\/",351],["T_WHITESPACE","\n  ",377],["T_PUBLIC","public",378],["T_WHITESPACE"," ",378],["T_FUNCTION","function",378],["T_WHITESPACE"," ",378],["T_STRING","updateData",378],"(",["T_VARIABLE","$name",378],",",["T_WHITESPACE"," ",378],["T_ARRAY","array",378],["T_WHITESPACE"," ",378],["T_VARIABLE","$dependencies",378],")",["T_WHITESPACE"," ",378],"{",["T_WHITESPACE","\n    ",378],["T_VARIABLE","$this",379],["T_OBJECT_OPERATOR","->",379],["T_STRING","graph",379],["T_WHITESPACE"," ",379],"=",["T_WHITESPACE"," ",379],["T_STRING","NULL",379],";",["T_WHITESPACE","\n    ",379],["T_VARIABLE","$this",380],["T_OBJECT_OPERATOR","->",380],["T_STRING","data",380],"[",["T_VARIABLE","$name",380],"]",["T_WHITESPACE"," ",380],"=",["T_WHITESPACE"," ",380],["T_NEW","new",380],["T_WHITESPACE"," ",380],["T_STRING","ConfigEntityDependency",380],"(",["T_VARIABLE","$name",380],",",["T_WHITESPACE"," ",380],"[",["T_CONSTANT_ENCAPSED_STRING","'dependencies'",380],["T_WHITESPACE"," ",380],["T_DOUBLE_ARROW","=>",380],["T_WHITESPACE"," ",380],["T_VARIABLE","$dependencies",380],"]",")",";",["T_WHITESPACE","\n    ",380],["T_RETURN","return",381],["T_WHITESPACE"," ",381],["T_VARIABLE","$this",381],";",["T_WHITESPACE","\n  ",381],"}",["T_WHITESPACE","\n\n",382],"}",["T_WHITESPACE","\n",384]]