[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Core",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Config",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Entity",3],";",["T_WHITESPACE","\n\n",3],["T_USE","use",5],["T_WHITESPACE"," ",5],["T_STRING","Drupal",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Core",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Entity",5],["T_NS_SEPARATOR","\\",5],["T_STRING","EntityTypeInterface",5],";",["T_WHITESPACE","\n\n",5],["T_DOC_COMMENT","\/**\n * Provides an interface for a configuration entity type and its metadata.\n *\/",7],["T_WHITESPACE","\n",9],["T_INTERFACE","interface",10],["T_WHITESPACE"," ",10],["T_STRING","ConfigEntityTypeInterface",10],["T_WHITESPACE"," ",10],["T_EXTENDS","extends",10],["T_WHITESPACE"," ",10],["T_STRING","EntityTypeInterface",10],["T_WHITESPACE"," ",10],"{",["T_WHITESPACE","\n\n  ",10],["T_DOC_COMMENT","\/**\n   * Length limit of the configuration entity prefix.\n   *\n   * Configuration entity names are composed of two parts:\n   * - The config prefix, which is returned by getConfigPrefix() and is\n   *   composed of:\n   *   - The provider module name (limited to 50 characters by\n   *     DRUPAL_EXTENSION_NAME_MAX_LENGTH).\n   *   - The module-specific namespace identifier, which defaults to the\n   *     configuration entity type ID. Entity type IDs are limited to 32\n   *     characters by EntityTypeInterface::ID_MAX_LENGTH.\n   * - The configuration entity ID.\n   * So, a typical configuration entity filename will look something like:\n   * provider_module_name.namespace_identifier.config_entity_id.yml\n   *\n   * Most file systems limit a file name's length to 255 characters, so\n   * ConfigBase::MAX_NAME_LENGTH restricts the full configuration object name\n   * to 250 characters (leaving 5 for the file extension). Therefore, in\n   * order to leave sufficient characters to construct a configuration ID,\n   * the configuration entity prefix is limited to 83 characters: up to 50\n   * characters for the module name, 1 for the dot, and 32 for the namespace\n   * identifier. This also allows modules with shorter names to define longer\n   * namespace identifiers if desired.\n   *\n   * @see \\Drupal\\Core\\Config\\ConfigBase::MAX_NAME_LENGTH\n   * @see \\Drupal\\Core\\Config\\Entity\\ConfigEntityTypeInterface::getConfigPrefix()\n   * @see DRUPAL_EXTENSION_NAME_MAX_LENGTH\n   * @see \\Drupal\\Core\\Config\\Entity\\ConfigEntityStorage::MAX_ID_LENGTH\n   * @see \\Drupal\\Core\\Entity\\EntityTypeInterface::ID_MAX_LENGTH\n   *\/",12],["T_WHITESPACE","\n  ",41],["T_CONST","const",42],["T_WHITESPACE"," ",42],["T_STRING","PREFIX_LENGTH",42],["T_WHITESPACE"," ",42],"=",["T_WHITESPACE"," ",42],["T_LNUMBER","83",42],";",["T_WHITESPACE","\n\n  ",42],["T_DOC_COMMENT","\/**\n   * Gets the config prefix used by the configuration entity type.\n   *\n   * The config prefix is used to prefix configuration entity IDs when they are\n   * stored in the configuration system. The default config prefix is\n   * constructed from the name of the module that provides the entity type and\n   * the ID of the entity type. If a config_prefix annotation is present it will\n   * be used in place of the entity type ID.\n   *\n   * Prefixing with the module that provides the configuration entity type\n   * ensures that configuration entities depend on the module that provides the\n   * configuration entity type.\n   *\n   * @return string\n   *   The config prefix.\n   *\n   * @throws \\Drupal\\Core\\Config\\ConfigPrefixLengthException\n   *   Exception thrown when the length of the prefix exceeds PREFIX_LENGTH.\n   *\/",44],["T_WHITESPACE","\n  ",62],["T_PUBLIC","public",63],["T_WHITESPACE"," ",63],["T_FUNCTION","function",63],["T_WHITESPACE"," ",63],["T_STRING","getConfigPrefix",63],"(",")",";",["T_WHITESPACE","\n\n  ",63],["T_DOC_COMMENT","\/**\n   * Gets the config entity properties to export if declared on the annotation.\n   *\n   * @return array|null\n   *   The properties to export or NULL if they can not be determine from the\n   *   config entity type annotation.\n   *\/",65],["T_WHITESPACE","\n  ",71],["T_PUBLIC","public",72],["T_WHITESPACE"," ",72],["T_FUNCTION","function",72],["T_WHITESPACE"," ",72],["T_STRING","getPropertiesToExport",72],"(",")",";",["T_WHITESPACE","\n\n  ",72],["T_DOC_COMMENT","\/**\n   * Gets the keys that are available for fast lookup.\n   *\n   * @return string[]\n   *   The list of lookup keys.\n   *\/",74],["T_WHITESPACE","\n  ",79],["T_PUBLIC","public",80],["T_WHITESPACE"," ",80],["T_FUNCTION","function",80],["T_WHITESPACE"," ",80],["T_STRING","getLookupKeys",80],"(",")",";",["T_WHITESPACE","\n\n",80],"}",["T_WHITESPACE","\n",82]]