[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Core",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Config",3],";",["T_WHITESPACE","\n\n",3],["T_USE","use",5],["T_WHITESPACE"," ",5],["T_STRING","Drupal",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Core",5],["T_NS_SEPARATOR","\\",5],["T_STRING","TypedData",5],["T_NS_SEPARATOR","\\",5],["T_STRING","TypedDataManagerInterface",5],";",["T_WHITESPACE","\n\n",5],["T_DOC_COMMENT","\/**\n * Defines an interface for managing config schema type plugins.\n *\n * @see \\Drupal\\Core\\Config\\TypedConfigManager\n * @see \\Drupal\\Core\\Config\\Schema\\ConfigSchemaDiscovery\n * @see hook_config_schema_info_alter()\n * @see https:\/\/www.drupal.org\/node\/1905070\n *\/",7],["T_WHITESPACE","\n",14],["T_INTERFACE","interface",15],["T_WHITESPACE"," ",15],["T_STRING","TypedConfigManagerInterface",15],["T_WHITESPACE"," ",15],["T_EXTENDS","extends",15],["T_WHITESPACE"," ",15],["T_STRING","TypedDataManagerInterface",15],["T_WHITESPACE"," ",15],"{",["T_WHITESPACE","\n\n  ",15],["T_DOC_COMMENT","\/**\n   * Gets typed configuration data.\n   *\n   * @param string $name\n   *   Configuration object name.\n   *\n   * @return \\Drupal\\Core\\TypedData\\TraversableTypedDataInterface\n   *   Typed configuration element.\n   *\/",17],["T_WHITESPACE","\n  ",25],["T_PUBLIC","public",26],["T_WHITESPACE"," ",26],["T_FUNCTION","function",26],["T_WHITESPACE"," ",26],["T_STRING","get",26],"(",["T_VARIABLE","$name",26],")",";",["T_WHITESPACE","\n\n  ",26],["T_DOC_COMMENT","\/**\n   * Creates a new data definition object from a type definition array and\n   * actual configuration data. Since type definitions may contain variables\n   * to be replaced, we need the configuration value to create it.\n   *\n   * @param array $definition\n   *   The base type definition array, for which a data definition should be\n   *   created.\n   * @param $value\n   *   Optional value of the configuration element.\n   * @param string $name\n   *   Optional name of the configuration element.\n   * @param object $parent\n   *   Optional parent element.\n   *\n   * @return \\Drupal\\Core\\TypedData\\DataDefinitionInterface\n   *   A data definition for the given data type.\n   *\/",28],["T_WHITESPACE","\n  ",45],["T_PUBLIC","public",46],["T_WHITESPACE"," ",46],["T_FUNCTION","function",46],["T_WHITESPACE"," ",46],["T_STRING","buildDataDefinition",46],"(",["T_ARRAY","array",46],["T_WHITESPACE"," ",46],["T_VARIABLE","$definition",46],",",["T_WHITESPACE"," ",46],["T_VARIABLE","$value",46],",",["T_WHITESPACE"," ",46],["T_VARIABLE","$name",46],["T_WHITESPACE"," ",46],"=",["T_WHITESPACE"," ",46],["T_STRING","NULL",46],",",["T_WHITESPACE"," ",46],["T_VARIABLE","$parent",46],["T_WHITESPACE"," ",46],"=",["T_WHITESPACE"," ",46],["T_STRING","NULL",46],")",";",["T_WHITESPACE","\n\n  ",46],["T_DOC_COMMENT","\/**\n   * Checks if the configuration schema with the given config name exists.\n   *\n   * @param string $name\n   *   Configuration name.\n   *\n   * @return bool\n   *   TRUE if configuration schema exists, FALSE otherwise.\n   *\/",48],["T_WHITESPACE","\n  ",56],["T_PUBLIC","public",57],["T_WHITESPACE"," ",57],["T_FUNCTION","function",57],["T_WHITESPACE"," ",57],["T_STRING","hasConfigSchema",57],"(",["T_VARIABLE","$name",57],")",";",["T_WHITESPACE","\n\n  ",57],["T_DOC_COMMENT","\/**\n   * Gets a specific plugin definition.\n   *\n   * @param string $plugin_id\n   *   A plugin id.\n   * @param bool $exception_on_invalid\n   *   Ignored with TypedConfigManagerInterface. Kept for compatibility with\n   *   DiscoveryInterface.\n   *\n   * @return array\n   *   A plugin definition array. If the given plugin id does not have typed\n   *   configuration definition assigned, the definition of an undefined\n   *   element type is returned.\n   *\/",59],["T_WHITESPACE","\n  ",72],["T_PUBLIC","public",73],["T_WHITESPACE"," ",73],["T_FUNCTION","function",73],["T_WHITESPACE"," ",73],["T_STRING","getDefinition",73],"(",["T_VARIABLE","$plugin_id",73],",",["T_WHITESPACE"," ",73],["T_VARIABLE","$exception_on_invalid",73],["T_WHITESPACE"," ",73],"=",["T_WHITESPACE"," ",73],["T_STRING","TRUE",73],")",";",["T_WHITESPACE","\n\n",73],"}",["T_WHITESPACE","\n",75]]