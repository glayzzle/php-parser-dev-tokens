[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Core",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Database",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Query",3],";",["T_WHITESPACE","\n\n",3],["T_USE","use",5],["T_WHITESPACE"," ",5],["T_STRING","Drupal",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Core",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Database",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Database",5],";",["T_WHITESPACE","\n",5],["T_USE","use",6],["T_WHITESPACE"," ",6],["T_STRING","Drupal",6],["T_NS_SEPARATOR","\\",6],["T_STRING","Core",6],["T_NS_SEPARATOR","\\",6],["T_STRING","Database",6],["T_NS_SEPARATOR","\\",6],["T_STRING","Connection",6],";",["T_WHITESPACE","\n\n",6],["T_DOC_COMMENT","\/**\n * Base class for query builders.\n *\n * Note that query builders use PHP's magic __toString() method to compile the\n * query object into a prepared statement.\n *\/",8],["T_WHITESPACE","\n",13],["T_ABSTRACT","abstract",14],["T_WHITESPACE"," ",14],["T_CLASS","class",14],["T_WHITESPACE"," ",14],["T_STRING","Query",14],["T_WHITESPACE"," ",14],["T_IMPLEMENTS","implements",14],["T_WHITESPACE"," ",14],["T_STRING","PlaceholderInterface",14],["T_WHITESPACE"," ",14],"{",["T_WHITESPACE","\n\n  ",14],["T_DOC_COMMENT","\/**\n   * The connection object on which to run this query.\n   *\n   * @var \\Drupal\\Core\\Database\\Connection\n   *\/",16],["T_WHITESPACE","\n  ",20],["T_PROTECTED","protected",21],["T_WHITESPACE"," ",21],["T_VARIABLE","$connection",21],";",["T_WHITESPACE","\n\n  ",21],["T_DOC_COMMENT","\/**\n   * The target of the connection object.\n   *\n   * @var string\n   *\/",23],["T_WHITESPACE","\n  ",27],["T_PROTECTED","protected",28],["T_WHITESPACE"," ",28],["T_VARIABLE","$connectionTarget",28],";",["T_WHITESPACE","\n\n  ",28],["T_DOC_COMMENT","\/**\n   * The key of the connection object.\n   *\n   * @var string\n   *\/",30],["T_WHITESPACE","\n  ",34],["T_PROTECTED","protected",35],["T_WHITESPACE"," ",35],["T_VARIABLE","$connectionKey",35],";",["T_WHITESPACE","\n\n  ",35],["T_DOC_COMMENT","\/**\n   * The query options to pass on to the connection object.\n   *\n   * @var array\n   *\/",37],["T_WHITESPACE","\n  ",41],["T_PROTECTED","protected",42],["T_WHITESPACE"," ",42],["T_VARIABLE","$queryOptions",42],";",["T_WHITESPACE","\n\n  ",42],["T_DOC_COMMENT","\/**\n   * A unique identifier for this query object.\n   *\/",44],["T_WHITESPACE","\n  ",46],["T_PROTECTED","protected",47],["T_WHITESPACE"," ",47],["T_VARIABLE","$uniqueIdentifier",47],";",["T_WHITESPACE","\n\n  ",47],["T_DOC_COMMENT","\/**\n   * The placeholder counter.\n   *\/",49],["T_WHITESPACE","\n  ",51],["T_PROTECTED","protected",52],["T_WHITESPACE"," ",52],["T_VARIABLE","$nextPlaceholder",52],["T_WHITESPACE"," ",52],"=",["T_WHITESPACE"," ",52],["T_LNUMBER","0",52],";",["T_WHITESPACE","\n\n  ",52],["T_DOC_COMMENT","\/**\n   * An array of comments that can be prepended to a query.\n   *\n   * @var array\n   *\/",54],["T_WHITESPACE","\n  ",58],["T_PROTECTED","protected",59],["T_WHITESPACE"," ",59],["T_VARIABLE","$comments",59],["T_WHITESPACE"," ",59],"=",["T_WHITESPACE"," ",59],["T_ARRAY","array",59],"(",")",";",["T_WHITESPACE","\n\n  ",59],["T_DOC_COMMENT","\/**\n   * Constructs a Query object.\n   *\n   * @param \\Drupal\\Core\\Database\\Connection $connection\n   *   Database connection object.\n   * @param array $options\n   *   Array of query options.\n   *\/",61],["T_WHITESPACE","\n  ",68],["T_PUBLIC","public",69],["T_WHITESPACE"," ",69],["T_FUNCTION","function",69],["T_WHITESPACE"," ",69],["T_STRING","__construct",69],"(",["T_STRING","Connection",69],["T_WHITESPACE"," ",69],["T_VARIABLE","$connection",69],",",["T_WHITESPACE"," ",69],["T_VARIABLE","$options",69],")",["T_WHITESPACE"," ",69],"{",["T_WHITESPACE","\n    ",69],["T_VARIABLE","$this",70],["T_OBJECT_OPERATOR","->",70],["T_STRING","uniqueIdentifier",70],["T_WHITESPACE"," ",70],"=",["T_WHITESPACE"," ",70],["T_STRING","uniqid",70],"(",["T_CONSTANT_ENCAPSED_STRING","''",70],",",["T_WHITESPACE"," ",70],["T_STRING","TRUE",70],")",";",["T_WHITESPACE","\n\n    ",70],["T_VARIABLE","$this",72],["T_OBJECT_OPERATOR","->",72],["T_STRING","connection",72],["T_WHITESPACE"," ",72],"=",["T_WHITESPACE"," ",72],["T_VARIABLE","$connection",72],";",["T_WHITESPACE","\n    ",72],["T_VARIABLE","$this",73],["T_OBJECT_OPERATOR","->",73],["T_STRING","connectionKey",73],["T_WHITESPACE"," ",73],"=",["T_WHITESPACE"," ",73],["T_VARIABLE","$this",73],["T_OBJECT_OPERATOR","->",73],["T_STRING","connection",73],["T_OBJECT_OPERATOR","->",73],["T_STRING","getKey",73],"(",")",";",["T_WHITESPACE","\n    ",73],["T_VARIABLE","$this",74],["T_OBJECT_OPERATOR","->",74],["T_STRING","connectionTarget",74],["T_WHITESPACE"," ",74],"=",["T_WHITESPACE"," ",74],["T_VARIABLE","$this",74],["T_OBJECT_OPERATOR","->",74],["T_STRING","connection",74],["T_OBJECT_OPERATOR","->",74],["T_STRING","getTarget",74],"(",")",";",["T_WHITESPACE","\n\n    ",74],["T_VARIABLE","$this",76],["T_OBJECT_OPERATOR","->",76],["T_STRING","queryOptions",76],["T_WHITESPACE"," ",76],"=",["T_WHITESPACE"," ",76],["T_VARIABLE","$options",76],";",["T_WHITESPACE","\n  ",76],"}",["T_WHITESPACE","\n\n  ",77],["T_DOC_COMMENT","\/**\n   * Implements the magic __sleep function to disconnect from the database.\n   *\/",79],["T_WHITESPACE","\n  ",81],["T_PUBLIC","public",82],["T_WHITESPACE"," ",82],["T_FUNCTION","function",82],["T_WHITESPACE"," ",82],["T_STRING","__sleep",82],"(",")",["T_WHITESPACE"," ",82],"{",["T_WHITESPACE","\n    ",82],["T_VARIABLE","$keys",83],["T_WHITESPACE"," ",83],"=",["T_WHITESPACE"," ",83],["T_STRING","get_object_vars",83],"(",["T_VARIABLE","$this",83],")",";",["T_WHITESPACE","\n    ",83],["T_UNSET","unset",84],"(",["T_VARIABLE","$keys",84],"[",["T_CONSTANT_ENCAPSED_STRING","'connection'",84],"]",")",";",["T_WHITESPACE","\n    ",84],["T_RETURN","return",85],["T_WHITESPACE"," ",85],["T_STRING","array_keys",85],"(",["T_VARIABLE","$keys",85],")",";",["T_WHITESPACE","\n  ",85],"}",["T_WHITESPACE","\n\n  ",86],["T_DOC_COMMENT","\/**\n   * Implements the magic __wakeup function to reconnect to the database.\n   *\/",88],["T_WHITESPACE","\n  ",90],["T_PUBLIC","public",91],["T_WHITESPACE"," ",91],["T_FUNCTION","function",91],["T_WHITESPACE"," ",91],["T_STRING","__wakeup",91],"(",")",["T_WHITESPACE"," ",91],"{",["T_WHITESPACE","\n    ",91],["T_VARIABLE","$this",92],["T_OBJECT_OPERATOR","->",92],["T_STRING","connection",92],["T_WHITESPACE"," ",92],"=",["T_WHITESPACE"," ",92],["T_STRING","Database",92],["T_DOUBLE_COLON","::",92],["T_STRING","getConnection",92],"(",["T_VARIABLE","$this",92],["T_OBJECT_OPERATOR","->",92],["T_STRING","connectionTarget",92],",",["T_WHITESPACE"," ",92],["T_VARIABLE","$this",92],["T_OBJECT_OPERATOR","->",92],["T_STRING","connectionKey",92],")",";",["T_WHITESPACE","\n  ",92],"}",["T_WHITESPACE","\n\n  ",93],["T_DOC_COMMENT","\/**\n   * Implements the magic __clone function.\n   *\/",95],["T_WHITESPACE","\n  ",97],["T_PUBLIC","public",98],["T_WHITESPACE"," ",98],["T_FUNCTION","function",98],["T_WHITESPACE"," ",98],["T_STRING","__clone",98],"(",")",["T_WHITESPACE"," ",98],"{",["T_WHITESPACE","\n    ",98],["T_VARIABLE","$this",99],["T_OBJECT_OPERATOR","->",99],["T_STRING","uniqueIdentifier",99],["T_WHITESPACE"," ",99],"=",["T_WHITESPACE"," ",99],["T_STRING","uniqid",99],"(",["T_CONSTANT_ENCAPSED_STRING","''",99],",",["T_WHITESPACE"," ",99],["T_STRING","TRUE",99],")",";",["T_WHITESPACE","\n  ",99],"}",["T_WHITESPACE","\n\n  ",100],["T_DOC_COMMENT","\/**\n   * Runs the query against the database.\n   *\n   * @return \\Drupal\\Core\\Database\\StatementInterface|null\n   *   A prepared statement, or NULL if the query is not valid.\n   *\/",102],["T_WHITESPACE","\n  ",107],["T_ABSTRACT","abstract",108],["T_WHITESPACE"," ",108],["T_PROTECTED","protected",108],["T_WHITESPACE"," ",108],["T_FUNCTION","function",108],["T_WHITESPACE"," ",108],["T_STRING","execute",108],"(",")",";",["T_WHITESPACE","\n\n  ",108],["T_DOC_COMMENT","\/**\n   * Implements PHP magic __toString method to convert the query to a string.\n   *\n   * The toString operation is how we compile a query object to a prepared\n   * statement.\n   *\n   * @return string\n   *   A prepared statement query string for this object.\n   *\/",110],["T_WHITESPACE","\n  ",118],["T_ABSTRACT","abstract",119],["T_WHITESPACE"," ",119],["T_PUBLIC","public",119],["T_WHITESPACE"," ",119],["T_FUNCTION","function",119],["T_WHITESPACE"," ",119],["T_STRING","__toString",119],"(",")",";",["T_WHITESPACE","\n\n  ",119],["T_DOC_COMMENT","\/**\n   * Returns a unique identifier for this object.\n   *\/",121],["T_WHITESPACE","\n  ",123],["T_PUBLIC","public",124],["T_WHITESPACE"," ",124],["T_FUNCTION","function",124],["T_WHITESPACE"," ",124],["T_STRING","uniqueIdentifier",124],"(",")",["T_WHITESPACE"," ",124],"{",["T_WHITESPACE","\n    ",124],["T_RETURN","return",125],["T_WHITESPACE"," ",125],["T_VARIABLE","$this",125],["T_OBJECT_OPERATOR","->",125],["T_STRING","uniqueIdentifier",125],";",["T_WHITESPACE","\n  ",125],"}",["T_WHITESPACE","\n\n  ",126],["T_DOC_COMMENT","\/**\n   * Gets the next placeholder value for this query object.\n   *\n   * @return int\n   *   The next placeholder value.\n   *\/",128],["T_WHITESPACE","\n  ",133],["T_PUBLIC","public",134],["T_WHITESPACE"," ",134],["T_FUNCTION","function",134],["T_WHITESPACE"," ",134],["T_STRING","nextPlaceholder",134],"(",")",["T_WHITESPACE"," ",134],"{",["T_WHITESPACE","\n    ",134],["T_RETURN","return",135],["T_WHITESPACE"," ",135],["T_VARIABLE","$this",135],["T_OBJECT_OPERATOR","->",135],["T_STRING","nextPlaceholder",135],["T_INC","++",135],";",["T_WHITESPACE","\n  ",135],"}",["T_WHITESPACE","\n\n  ",136],["T_DOC_COMMENT","\/**\n   * Adds a comment to the query.\n   *\n   * By adding a comment to a query, you can more easily find it in your\n   * query log or the list of active queries on an SQL server. This allows\n   * for easier debugging and allows you to more easily find where a query\n   * with a performance problem is being generated.\n   *\n   * The comment string will be sanitized to remove * \/ and other characters\n   * that may terminate the string early so as to avoid SQL injection attacks.\n   *\n   * @param $comment\n   *   The comment string to be inserted into the query.\n   *\n   * @return $this\n   *\/",138],["T_WHITESPACE","\n  ",153],["T_PUBLIC","public",154],["T_WHITESPACE"," ",154],["T_FUNCTION","function",154],["T_WHITESPACE"," ",154],["T_STRING","comment",154],"(",["T_VARIABLE","$comment",154],")",["T_WHITESPACE"," ",154],"{",["T_WHITESPACE","\n    ",154],["T_VARIABLE","$this",155],["T_OBJECT_OPERATOR","->",155],["T_STRING","comments",155],"[","]",["T_WHITESPACE"," ",155],"=",["T_WHITESPACE"," ",155],["T_VARIABLE","$comment",155],";",["T_WHITESPACE","\n    ",155],["T_RETURN","return",156],["T_WHITESPACE"," ",156],["T_VARIABLE","$this",156],";",["T_WHITESPACE","\n  ",156],"}",["T_WHITESPACE","\n\n  ",157],["T_DOC_COMMENT","\/**\n   * Returns a reference to the comments array for the query.\n   *\n   * Because this method returns by reference, alter hooks may edit the comments\n   * array directly to make their changes. If just adding comments, however, the\n   * use of comment() is preferred.\n   *\n   * Note that this method must be called by reference as well:\n   * @code\n   * $comments =& $query->getComments();\n   * @endcode\n   *\n   * @return array\n   *   A reference to the comments array structure.\n   *\/",159],["T_WHITESPACE","\n  ",173],["T_PUBLIC","public",174],["T_WHITESPACE"," ",174],["T_FUNCTION","function",174],["T_WHITESPACE"," ",174],"&",["T_STRING","getComments",174],"(",")",["T_WHITESPACE"," ",174],"{",["T_WHITESPACE","\n    ",174],["T_RETURN","return",175],["T_WHITESPACE"," ",175],["T_VARIABLE","$this",175],["T_OBJECT_OPERATOR","->",175],["T_STRING","comments",175],";",["T_WHITESPACE","\n  ",175],"}",["T_WHITESPACE","\n\n",176],"}",["T_WHITESPACE","\n",178]]