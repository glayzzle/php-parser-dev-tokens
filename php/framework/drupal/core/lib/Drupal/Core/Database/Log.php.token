[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Core",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Database",3],";",["T_WHITESPACE","\n\n",3],["T_DOC_COMMENT","\/**\n * Database query logger.\n *\n * We log queries in a separate object rather than in the connection object\n * because we want to be able to see all queries sent to a given database, not\n * database target. If we logged the queries in each connection object we\n * would not be able to track what queries went to which target.\n *\n * Every connection has one and only one logging object on it for all targets\n * and logging keys.\n *\/",5],["T_WHITESPACE","\n",15],["T_CLASS","class",16],["T_WHITESPACE"," ",16],["T_STRING","Log",16],["T_WHITESPACE"," ",16],"{",["T_WHITESPACE","\n\n  ",16],["T_DOC_COMMENT","\/**\n   * Cache of logged queries. This will only be used if the query logger is enabled.\n   *\n   * The structure for the logging array is as follows:\n   *\n   * array(\n   *   $logging_key = array(\n   *     array('query' => '', 'args' => array(), 'caller' => '', 'target' => '', 'time' => 0),\n   *     array('query' => '', 'args' => array(), 'caller' => '', 'target' => '', 'time' => 0),\n   *   ),\n   * );\n   *\n   * @var array\n   *\/",18],["T_WHITESPACE","\n  ",31],["T_PROTECTED","protected",32],["T_WHITESPACE"," ",32],["T_VARIABLE","$queryLog",32],["T_WHITESPACE"," ",32],"=",["T_WHITESPACE"," ",32],["T_ARRAY","array",32],"(",")",";",["T_WHITESPACE","\n\n  ",32],["T_DOC_COMMENT","\/**\n   * The connection key for which this object is logging.\n   *\n   * @var string\n   *\/",34],["T_WHITESPACE","\n  ",38],["T_PROTECTED","protected",39],["T_WHITESPACE"," ",39],["T_VARIABLE","$connectionKey",39],["T_WHITESPACE"," ",39],"=",["T_WHITESPACE"," ",39],["T_CONSTANT_ENCAPSED_STRING","'default'",39],";",["T_WHITESPACE","\n\n  ",39],["T_DOC_COMMENT","\/**\n   * Constructor.\n   *\n   * @param $key\n   *   The database connection key for which to enable logging.\n   *\/",41],["T_WHITESPACE","\n  ",46],["T_PUBLIC","public",47],["T_WHITESPACE"," ",47],["T_FUNCTION","function",47],["T_WHITESPACE"," ",47],["T_STRING","__construct",47],"(",["T_VARIABLE","$key",47],["T_WHITESPACE"," ",47],"=",["T_WHITESPACE"," ",47],["T_CONSTANT_ENCAPSED_STRING","'default'",47],")",["T_WHITESPACE"," ",47],"{",["T_WHITESPACE","\n    ",47],["T_VARIABLE","$this",48],["T_OBJECT_OPERATOR","->",48],["T_STRING","connectionKey",48],["T_WHITESPACE"," ",48],"=",["T_WHITESPACE"," ",48],["T_VARIABLE","$key",48],";",["T_WHITESPACE","\n  ",48],"}",["T_WHITESPACE","\n\n  ",49],["T_DOC_COMMENT","\/**\n   * Begin logging queries to the specified connection and logging key.\n   *\n   * If the specified logging key is already running this method does nothing.\n   *\n   * @param $logging_key\n   *   The identification key for this log request. By specifying different\n   *   logging keys we are able to start and stop multiple logging runs\n   *   simultaneously without them colliding.\n   *\/",51],["T_WHITESPACE","\n  ",60],["T_PUBLIC","public",61],["T_WHITESPACE"," ",61],["T_FUNCTION","function",61],["T_WHITESPACE"," ",61],["T_STRING","start",61],"(",["T_VARIABLE","$logging_key",61],")",["T_WHITESPACE"," ",61],"{",["T_WHITESPACE","\n    ",61],["T_IF","if",62],["T_WHITESPACE"," ",62],"(",["T_EMPTY","empty",62],"(",["T_VARIABLE","$this",62],["T_OBJECT_OPERATOR","->",62],["T_STRING","queryLog",62],"[",["T_VARIABLE","$logging_key",62],"]",")",")",["T_WHITESPACE"," ",62],"{",["T_WHITESPACE","\n      ",62],["T_VARIABLE","$this",63],["T_OBJECT_OPERATOR","->",63],["T_STRING","clear",63],"(",["T_VARIABLE","$logging_key",63],")",";",["T_WHITESPACE","\n    ",63],"}",["T_WHITESPACE","\n  ",64],"}",["T_WHITESPACE","\n\n  ",65],["T_DOC_COMMENT","\/**\n   * Retrieve the query log for the specified logging key so far.\n   *\n   * @param $logging_key\n   *   The logging key to fetch.\n   * @return\n   *   An indexed array of all query records for this logging key.\n   *\/",67],["T_WHITESPACE","\n  ",74],["T_PUBLIC","public",75],["T_WHITESPACE"," ",75],["T_FUNCTION","function",75],["T_WHITESPACE"," ",75],["T_STRING","get",75],"(",["T_VARIABLE","$logging_key",75],")",["T_WHITESPACE"," ",75],"{",["T_WHITESPACE","\n    ",75],["T_RETURN","return",76],["T_WHITESPACE"," ",76],["T_VARIABLE","$this",76],["T_OBJECT_OPERATOR","->",76],["T_STRING","queryLog",76],"[",["T_VARIABLE","$logging_key",76],"]",";",["T_WHITESPACE","\n  ",76],"}",["T_WHITESPACE","\n\n  ",77],["T_DOC_COMMENT","\/**\n   * Empty the query log for the specified logging key.\n   *\n   * This method does not stop logging, it simply clears the log. To stop\n   * logging, use the end() method.\n   *\n   * @param $logging_key\n   *   The logging key to empty.\n   *\/",79],["T_WHITESPACE","\n  ",87],["T_PUBLIC","public",88],["T_WHITESPACE"," ",88],["T_FUNCTION","function",88],["T_WHITESPACE"," ",88],["T_STRING","clear",88],"(",["T_VARIABLE","$logging_key",88],")",["T_WHITESPACE"," ",88],"{",["T_WHITESPACE","\n    ",88],["T_VARIABLE","$this",89],["T_OBJECT_OPERATOR","->",89],["T_STRING","queryLog",89],"[",["T_VARIABLE","$logging_key",89],"]",["T_WHITESPACE"," ",89],"=",["T_WHITESPACE"," ",89],["T_ARRAY","array",89],"(",")",";",["T_WHITESPACE","\n  ",89],"}",["T_WHITESPACE","\n\n  ",90],["T_DOC_COMMENT","\/**\n   * Stop logging for the specified logging key.\n   *\n   * @param $logging_key\n   *   The logging key to stop.\n   *\/",92],["T_WHITESPACE","\n  ",97],["T_PUBLIC","public",98],["T_WHITESPACE"," ",98],["T_FUNCTION","function",98],["T_WHITESPACE"," ",98],["T_STRING","end",98],"(",["T_VARIABLE","$logging_key",98],")",["T_WHITESPACE"," ",98],"{",["T_WHITESPACE","\n    ",98],["T_UNSET","unset",99],"(",["T_VARIABLE","$this",99],["T_OBJECT_OPERATOR","->",99],["T_STRING","queryLog",99],"[",["T_VARIABLE","$logging_key",99],"]",")",";",["T_WHITESPACE","\n  ",99],"}",["T_WHITESPACE","\n\n  ",100],["T_DOC_COMMENT","\/**\n   * Log a query to all active logging keys.\n   *\n   * @param $statement\n   *   The prepared statement object to log.\n   * @param $args\n   *   The arguments passed to the statement object.\n   * @param $time\n   *   The time in milliseconds the query took to execute.\n   *\/",102],["T_WHITESPACE","\n  ",111],["T_PUBLIC","public",112],["T_WHITESPACE"," ",112],["T_FUNCTION","function",112],["T_WHITESPACE"," ",112],["T_STRING","log",112],"(",["T_STRING","StatementInterface",112],["T_WHITESPACE"," ",112],["T_VARIABLE","$statement",112],",",["T_WHITESPACE"," ",112],["T_VARIABLE","$args",112],",",["T_WHITESPACE"," ",112],["T_VARIABLE","$time",112],")",["T_WHITESPACE"," ",112],"{",["T_WHITESPACE","\n    ",112],["T_FOREACH","foreach",113],["T_WHITESPACE"," ",113],"(",["T_STRING","array_keys",113],"(",["T_VARIABLE","$this",113],["T_OBJECT_OPERATOR","->",113],["T_STRING","queryLog",113],")",["T_WHITESPACE"," ",113],["T_AS","as",113],["T_WHITESPACE"," ",113],["T_VARIABLE","$key",113],")",["T_WHITESPACE"," ",113],"{",["T_WHITESPACE","\n      ",113],["T_VARIABLE","$this",114],["T_OBJECT_OPERATOR","->",114],["T_STRING","queryLog",114],"[",["T_VARIABLE","$key",114],"]","[","]",["T_WHITESPACE"," ",114],"=",["T_WHITESPACE"," ",114],["T_ARRAY","array",114],"(",["T_WHITESPACE","\n        ",114],["T_CONSTANT_ENCAPSED_STRING","'query'",115],["T_WHITESPACE"," ",115],["T_DOUBLE_ARROW","=>",115],["T_WHITESPACE"," ",115],["T_VARIABLE","$statement",115],["T_OBJECT_OPERATOR","->",115],["T_STRING","getQueryString",115],"(",")",",",["T_WHITESPACE","\n        ",115],["T_CONSTANT_ENCAPSED_STRING","'args'",116],["T_WHITESPACE"," ",116],["T_DOUBLE_ARROW","=>",116],["T_WHITESPACE"," ",116],["T_VARIABLE","$args",116],",",["T_WHITESPACE","\n        ",116],["T_CONSTANT_ENCAPSED_STRING","'target'",117],["T_WHITESPACE"," ",117],["T_DOUBLE_ARROW","=>",117],["T_WHITESPACE"," ",117],["T_VARIABLE","$statement",117],["T_OBJECT_OPERATOR","->",117],["T_STRING","dbh",117],["T_OBJECT_OPERATOR","->",117],["T_STRING","getTarget",117],"(",")",",",["T_WHITESPACE","\n        ",117],["T_CONSTANT_ENCAPSED_STRING","'caller'",118],["T_WHITESPACE"," ",118],["T_DOUBLE_ARROW","=>",118],["T_WHITESPACE"," ",118],["T_VARIABLE","$this",118],["T_OBJECT_OPERATOR","->",118],["T_STRING","findCaller",118],"(",")",",",["T_WHITESPACE","\n        ",118],["T_CONSTANT_ENCAPSED_STRING","'time'",119],["T_WHITESPACE"," ",119],["T_DOUBLE_ARROW","=>",119],["T_WHITESPACE"," ",119],["T_VARIABLE","$time",119],",",["T_WHITESPACE","\n      ",119],")",";",["T_WHITESPACE","\n    ",120],"}",["T_WHITESPACE","\n  ",121],"}",["T_WHITESPACE","\n\n  ",122],["T_DOC_COMMENT","\/**\n   * Determine the routine that called this query.\n   *\n   * We define \"the routine that called this query\" as the first entry in\n   * the call stack that is not inside the includes\/Drupal\/Database directory,\n   * does not begin with db_ and does have a file (which excludes\n   * call_user_func_array(), anonymous functions and similar). That makes the\n   * climbing logic very simple, and handles the variable stack depth caused by\n   * the query builders.\n   *\n   * See the @link http:\/\/php.net\/debug_backtrace debug_backtrace() @endlink\n   * function.\n   *\n   * @return\n   *   This method returns a stack trace entry similar to that generated by\n   *   debug_backtrace(). However, it flattens the trace entry and the trace\n   *   entry before it so that we get the function and args of the function that\n   *   called into the database system, not the function and args of the\n   *   database call itself.\n   *\/",124],["T_WHITESPACE","\n  ",143],["T_PUBLIC","public",144],["T_WHITESPACE"," ",144],["T_FUNCTION","function",144],["T_WHITESPACE"," ",144],["T_STRING","findCaller",144],"(",")",["T_WHITESPACE"," ",144],"{",["T_WHITESPACE","\n    ",144],["T_VARIABLE","$stack",145],["T_WHITESPACE"," ",145],"=",["T_WHITESPACE"," ",145],["T_STRING","debug_backtrace",145],"(",")",";",["T_WHITESPACE","\n    ",145],["T_FOR","for",146],["T_WHITESPACE"," ",146],"(",["T_VARIABLE","$i",146],["T_WHITESPACE"," ",146],"=",["T_WHITESPACE"," ",146],["T_LNUMBER","0",146],",",["T_WHITESPACE"," ",146],["T_VARIABLE","$stack_count",146],["T_WHITESPACE"," ",146],"=",["T_WHITESPACE"," ",146],["T_STRING","count",146],"(",["T_VARIABLE","$stack",146],")",";",["T_WHITESPACE"," ",146],["T_VARIABLE","$i",146],["T_WHITESPACE"," ",146],"<",["T_WHITESPACE"," ",146],["T_VARIABLE","$stack_count",146],";",["T_WHITESPACE"," ",146],["T_INC","++",146],["T_VARIABLE","$i",146],")",["T_WHITESPACE"," ",146],"{",["T_WHITESPACE","\n      ",146],["T_COMMENT","\/\/ If the call was made from a function, 'class' will be empty. It's\n",147],["T_WHITESPACE","      ",148],["T_COMMENT","\/\/ just easier to give it a default value than to try and integrate\n",148],["T_WHITESPACE","      ",149],["T_COMMENT","\/\/ that into the if statement below.\n",149],["T_WHITESPACE","      ",150],["T_IF","if",150],["T_WHITESPACE"," ",150],"(",["T_EMPTY","empty",150],"(",["T_VARIABLE","$stack",150],"[",["T_VARIABLE","$i",150],"]","[",["T_CONSTANT_ENCAPSED_STRING","'class'",150],"]",")",")",["T_WHITESPACE"," ",150],"{",["T_WHITESPACE","\n        ",150],["T_VARIABLE","$stack",151],"[",["T_VARIABLE","$i",151],"]","[",["T_CONSTANT_ENCAPSED_STRING","'class'",151],"]",["T_WHITESPACE"," ",151],"=",["T_WHITESPACE"," ",151],["T_CONSTANT_ENCAPSED_STRING","''",151],";",["T_WHITESPACE","\n      ",151],"}",["T_WHITESPACE","\n      ",152],["T_IF","if",153],["T_WHITESPACE"," ",153],"(",["T_STRING","strpos",153],"(",["T_VARIABLE","$stack",153],"[",["T_VARIABLE","$i",153],"]","[",["T_CONSTANT_ENCAPSED_STRING","'class'",153],"]",",",["T_WHITESPACE"," ",153],["T_NS_C","__NAMESPACE__",153],")",["T_WHITESPACE"," ",153],["T_IS_IDENTICAL","===",153],["T_WHITESPACE"," ",153],["T_STRING","FALSE",153],["T_WHITESPACE"," ",153],["T_BOOLEAN_AND","&&",153],["T_WHITESPACE"," ",153],["T_STRING","strpos",153],"(",["T_VARIABLE","$stack",153],"[",["T_VARIABLE","$i",153],["T_WHITESPACE"," ",153],"+",["T_WHITESPACE"," ",153],["T_LNUMBER","1",153],"]","[",["T_CONSTANT_ENCAPSED_STRING","'function'",153],"]",",",["T_WHITESPACE"," ",153],["T_CONSTANT_ENCAPSED_STRING","'db_'",153],")",["T_WHITESPACE"," ",153],["T_IS_IDENTICAL","===",153],["T_WHITESPACE"," ",153],["T_STRING","FALSE",153],["T_WHITESPACE"," ",153],["T_BOOLEAN_AND","&&",153],["T_WHITESPACE"," ",153],"!",["T_EMPTY","empty",153],"(",["T_VARIABLE","$stack",153],"[",["T_VARIABLE","$i",153],"]","[",["T_CONSTANT_ENCAPSED_STRING","'file'",153],"]",")",")",["T_WHITESPACE"," ",153],"{",["T_WHITESPACE","\n        ",153],["T_VARIABLE","$stack",154],"[",["T_VARIABLE","$i",154],"]",["T_WHITESPACE"," ",154],["T_PLUS_EQUAL","+=",154],["T_WHITESPACE"," ",154],["T_ARRAY","array",154],"(",["T_CONSTANT_ENCAPSED_STRING","'file'",154],["T_WHITESPACE"," ",154],["T_DOUBLE_ARROW","=>",154],["T_WHITESPACE"," ",154],["T_CONSTANT_ENCAPSED_STRING","'?'",154],",",["T_WHITESPACE"," ",154],["T_CONSTANT_ENCAPSED_STRING","'line'",154],["T_WHITESPACE"," ",154],["T_DOUBLE_ARROW","=>",154],["T_WHITESPACE"," ",154],["T_CONSTANT_ENCAPSED_STRING","'?'",154],",",["T_WHITESPACE"," ",154],["T_CONSTANT_ENCAPSED_STRING","'args'",154],["T_WHITESPACE"," ",154],["T_DOUBLE_ARROW","=>",154],["T_WHITESPACE"," ",154],["T_ARRAY","array",154],"(",")",")",";",["T_WHITESPACE","\n        ",154],["T_RETURN","return",155],["T_WHITESPACE"," ",155],["T_ARRAY","array",155],"(",["T_WHITESPACE","\n          ",155],["T_CONSTANT_ENCAPSED_STRING","'file'",156],["T_WHITESPACE"," ",156],["T_DOUBLE_ARROW","=>",156],["T_WHITESPACE"," ",156],["T_VARIABLE","$stack",156],"[",["T_VARIABLE","$i",156],"]","[",["T_CONSTANT_ENCAPSED_STRING","'file'",156],"]",",",["T_WHITESPACE","\n          ",156],["T_CONSTANT_ENCAPSED_STRING","'line'",157],["T_WHITESPACE"," ",157],["T_DOUBLE_ARROW","=>",157],["T_WHITESPACE"," ",157],["T_VARIABLE","$stack",157],"[",["T_VARIABLE","$i",157],"]","[",["T_CONSTANT_ENCAPSED_STRING","'line'",157],"]",",",["T_WHITESPACE","\n          ",157],["T_CONSTANT_ENCAPSED_STRING","'function'",158],["T_WHITESPACE"," ",158],["T_DOUBLE_ARROW","=>",158],["T_WHITESPACE"," ",158],["T_VARIABLE","$stack",158],"[",["T_VARIABLE","$i",158],["T_WHITESPACE"," ",158],"+",["T_WHITESPACE"," ",158],["T_LNUMBER","1",158],"]","[",["T_CONSTANT_ENCAPSED_STRING","'function'",158],"]",",",["T_WHITESPACE","\n          ",158],["T_CONSTANT_ENCAPSED_STRING","'class'",159],["T_WHITESPACE"," ",159],["T_DOUBLE_ARROW","=>",159],["T_WHITESPACE"," ",159],["T_ISSET","isset",159],"(",["T_VARIABLE","$stack",159],"[",["T_VARIABLE","$i",159],["T_WHITESPACE"," ",159],"+",["T_WHITESPACE"," ",159],["T_LNUMBER","1",159],"]","[",["T_CONSTANT_ENCAPSED_STRING","'class'",159],"]",")",["T_WHITESPACE"," ",159],"?",["T_WHITESPACE"," ",159],["T_VARIABLE","$stack",159],"[",["T_VARIABLE","$i",159],["T_WHITESPACE"," ",159],"+",["T_WHITESPACE"," ",159],["T_LNUMBER","1",159],"]","[",["T_CONSTANT_ENCAPSED_STRING","'class'",159],"]",["T_WHITESPACE"," ",159],":",["T_WHITESPACE"," ",159],["T_STRING","NULL",159],",",["T_WHITESPACE","\n          ",159],["T_CONSTANT_ENCAPSED_STRING","'type'",160],["T_WHITESPACE"," ",160],["T_DOUBLE_ARROW","=>",160],["T_WHITESPACE"," ",160],["T_ISSET","isset",160],"(",["T_VARIABLE","$stack",160],"[",["T_VARIABLE","$i",160],["T_WHITESPACE"," ",160],"+",["T_WHITESPACE"," ",160],["T_LNUMBER","1",160],"]","[",["T_CONSTANT_ENCAPSED_STRING","'type'",160],"]",")",["T_WHITESPACE"," ",160],"?",["T_WHITESPACE"," ",160],["T_VARIABLE","$stack",160],"[",["T_VARIABLE","$i",160],["T_WHITESPACE"," ",160],"+",["T_WHITESPACE"," ",160],["T_LNUMBER","1",160],"]","[",["T_CONSTANT_ENCAPSED_STRING","'type'",160],"]",["T_WHITESPACE"," ",160],":",["T_WHITESPACE"," ",160],["T_STRING","NULL",160],",",["T_WHITESPACE","\n          ",160],["T_CONSTANT_ENCAPSED_STRING","'args'",161],["T_WHITESPACE"," ",161],["T_DOUBLE_ARROW","=>",161],["T_WHITESPACE"," ",161],["T_VARIABLE","$stack",161],"[",["T_VARIABLE","$i",161],["T_WHITESPACE"," ",161],"+",["T_WHITESPACE"," ",161],["T_LNUMBER","1",161],"]","[",["T_CONSTANT_ENCAPSED_STRING","'args'",161],"]",",",["T_WHITESPACE","\n        ",161],")",";",["T_WHITESPACE","\n      ",162],"}",["T_WHITESPACE","\n    ",163],"}",["T_WHITESPACE","\n  ",164],"}",["T_WHITESPACE","\n\n",165],"}",["T_WHITESPACE","\n",167]]