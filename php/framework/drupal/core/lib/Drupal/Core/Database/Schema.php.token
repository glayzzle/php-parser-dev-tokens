[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Core",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Database",3],";",["T_WHITESPACE","\n\n",3],["T_USE","use",5],["T_WHITESPACE"," ",5],["T_STRING","Drupal",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Core",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Database",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Query",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Condition",5],";",["T_WHITESPACE","\n",5],["T_USE","use",6],["T_WHITESPACE"," ",6],["T_STRING","Drupal",6],["T_NS_SEPARATOR","\\",6],["T_STRING","Core",6],["T_NS_SEPARATOR","\\",6],["T_STRING","Database",6],["T_NS_SEPARATOR","\\",6],["T_STRING","Query",6],["T_NS_SEPARATOR","\\",6],["T_STRING","PlaceholderInterface",6],";",["T_WHITESPACE","\n\n",6],["T_DOC_COMMENT","\/**\n * Provides a base implementation for Database Schema.\n *\/",8],["T_WHITESPACE","\n",10],["T_ABSTRACT","abstract",11],["T_WHITESPACE"," ",11],["T_CLASS","class",11],["T_WHITESPACE"," ",11],["T_STRING","Schema",11],["T_WHITESPACE"," ",11],["T_IMPLEMENTS","implements",11],["T_WHITESPACE"," ",11],["T_STRING","PlaceholderInterface",11],["T_WHITESPACE"," ",11],"{",["T_WHITESPACE","\n\n  ",11],["T_DOC_COMMENT","\/**\n   * The database connection.\n   *\n   * @var \\Drupal\\Core\\Database\\Connection\n   *\/",13],["T_WHITESPACE","\n  ",17],["T_PROTECTED","protected",18],["T_WHITESPACE"," ",18],["T_VARIABLE","$connection",18],";",["T_WHITESPACE","\n\n  ",18],["T_DOC_COMMENT","\/**\n   * The placeholder counter.\n   *\/",20],["T_WHITESPACE","\n  ",22],["T_PROTECTED","protected",23],["T_WHITESPACE"," ",23],["T_VARIABLE","$placeholder",23],["T_WHITESPACE"," ",23],"=",["T_WHITESPACE"," ",23],["T_LNUMBER","0",23],";",["T_WHITESPACE","\n\n  ",23],["T_DOC_COMMENT","\/**\n   * Definition of prefixInfo array structure.\n   *\n   * Rather than redefining DatabaseSchema::getPrefixInfo() for each driver,\n   * by defining the defaultSchema variable only MySQL has to re-write the\n   * method.\n   *\n   * @see DatabaseSchema::getPrefixInfo()\n   *\/",25],["T_WHITESPACE","\n  ",33],["T_PROTECTED","protected",34],["T_WHITESPACE"," ",34],["T_VARIABLE","$defaultSchema",34],["T_WHITESPACE"," ",34],"=",["T_WHITESPACE"," ",34],["T_CONSTANT_ENCAPSED_STRING","'public'",34],";",["T_WHITESPACE","\n\n  ",34],["T_DOC_COMMENT","\/**\n   * A unique identifier for this query object.\n   *\/",36],["T_WHITESPACE","\n  ",38],["T_PROTECTED","protected",39],["T_WHITESPACE"," ",39],["T_VARIABLE","$uniqueIdentifier",39],";",["T_WHITESPACE","\n\n  ",39],["T_PUBLIC","public",41],["T_WHITESPACE"," ",41],["T_FUNCTION","function",41],["T_WHITESPACE"," ",41],["T_STRING","__construct",41],"(",["T_VARIABLE","$connection",41],")",["T_WHITESPACE"," ",41],"{",["T_WHITESPACE","\n    ",41],["T_VARIABLE","$this",42],["T_OBJECT_OPERATOR","->",42],["T_STRING","uniqueIdentifier",42],["T_WHITESPACE"," ",42],"=",["T_WHITESPACE"," ",42],["T_STRING","uniqid",42],"(",["T_CONSTANT_ENCAPSED_STRING","''",42],",",["T_WHITESPACE"," ",42],["T_STRING","TRUE",42],")",";",["T_WHITESPACE","\n    ",42],["T_VARIABLE","$this",43],["T_OBJECT_OPERATOR","->",43],["T_STRING","connection",43],["T_WHITESPACE"," ",43],"=",["T_WHITESPACE"," ",43],["T_VARIABLE","$connection",43],";",["T_WHITESPACE","\n  ",43],"}",["T_WHITESPACE","\n\n  ",44],["T_DOC_COMMENT","\/**\n   * Implements the magic __clone function.\n   *\/",46],["T_WHITESPACE","\n  ",48],["T_PUBLIC","public",49],["T_WHITESPACE"," ",49],["T_FUNCTION","function",49],["T_WHITESPACE"," ",49],["T_STRING","__clone",49],"(",")",["T_WHITESPACE"," ",49],"{",["T_WHITESPACE","\n    ",49],["T_VARIABLE","$this",50],["T_OBJECT_OPERATOR","->",50],["T_STRING","uniqueIdentifier",50],["T_WHITESPACE"," ",50],"=",["T_WHITESPACE"," ",50],["T_STRING","uniqid",50],"(",["T_CONSTANT_ENCAPSED_STRING","''",50],",",["T_WHITESPACE"," ",50],["T_STRING","TRUE",50],")",";",["T_WHITESPACE","\n  ",50],"}",["T_WHITESPACE","\n\n  ",51],["T_DOC_COMMENT","\/**\n   * {@inheritdoc}\n   *\/",53],["T_WHITESPACE","\n  ",55],["T_PUBLIC","public",56],["T_WHITESPACE"," ",56],["T_FUNCTION","function",56],["T_WHITESPACE"," ",56],["T_STRING","uniqueIdentifier",56],"(",")",["T_WHITESPACE"," ",56],"{",["T_WHITESPACE","\n    ",56],["T_RETURN","return",57],["T_WHITESPACE"," ",57],["T_VARIABLE","$this",57],["T_OBJECT_OPERATOR","->",57],["T_STRING","uniqueIdentifier",57],";",["T_WHITESPACE","\n  ",57],"}",["T_WHITESPACE","\n\n  ",58],["T_DOC_COMMENT","\/**\n   * {@inheritdoc}\n   *\/",60],["T_WHITESPACE","\n  ",62],["T_PUBLIC","public",63],["T_WHITESPACE"," ",63],["T_FUNCTION","function",63],["T_WHITESPACE"," ",63],["T_STRING","nextPlaceholder",63],"(",")",["T_WHITESPACE"," ",63],"{",["T_WHITESPACE","\n    ",63],["T_RETURN","return",64],["T_WHITESPACE"," ",64],["T_VARIABLE","$this",64],["T_OBJECT_OPERATOR","->",64],["T_STRING","placeholder",64],["T_INC","++",64],";",["T_WHITESPACE","\n  ",64],"}",["T_WHITESPACE","\n\n  ",65],["T_DOC_COMMENT","\/**\n   * Get information about the table name and schema from the prefix.\n   *\n   * @param\n   *   Name of table to look prefix up for. Defaults to 'default' because that's\n   *   default key for prefix.\n   * @param $add_prefix\n   *   Boolean that indicates whether the given table name should be prefixed.\n   *\n   * @return\n   *   A keyed array with information about the schema, table name and prefix.\n   *\/",67],["T_WHITESPACE","\n  ",78],["T_PROTECTED","protected",79],["T_WHITESPACE"," ",79],["T_FUNCTION","function",79],["T_WHITESPACE"," ",79],["T_STRING","getPrefixInfo",79],"(",["T_VARIABLE","$table",79],["T_WHITESPACE"," ",79],"=",["T_WHITESPACE"," ",79],["T_CONSTANT_ENCAPSED_STRING","'default'",79],",",["T_WHITESPACE"," ",79],["T_VARIABLE","$add_prefix",79],["T_WHITESPACE"," ",79],"=",["T_WHITESPACE"," ",79],["T_STRING","TRUE",79],")",["T_WHITESPACE"," ",79],"{",["T_WHITESPACE","\n    ",79],["T_VARIABLE","$info",80],["T_WHITESPACE"," ",80],"=",["T_WHITESPACE"," ",80],["T_ARRAY","array",80],"(",["T_WHITESPACE","\n      ",80],["T_CONSTANT_ENCAPSED_STRING","'schema'",81],["T_WHITESPACE"," ",81],["T_DOUBLE_ARROW","=>",81],["T_WHITESPACE"," ",81],["T_VARIABLE","$this",81],["T_OBJECT_OPERATOR","->",81],["T_STRING","defaultSchema",81],",",["T_WHITESPACE","\n      ",81],["T_CONSTANT_ENCAPSED_STRING","'prefix'",82],["T_WHITESPACE"," ",82],["T_DOUBLE_ARROW","=>",82],["T_WHITESPACE"," ",82],["T_VARIABLE","$this",82],["T_OBJECT_OPERATOR","->",82],["T_STRING","connection",82],["T_OBJECT_OPERATOR","->",82],["T_STRING","tablePrefix",82],"(",["T_VARIABLE","$table",82],")",",",["T_WHITESPACE","\n    ",82],")",";",["T_WHITESPACE","\n    ",83],["T_IF","if",84],["T_WHITESPACE"," ",84],"(",["T_VARIABLE","$add_prefix",84],")",["T_WHITESPACE"," ",84],"{",["T_WHITESPACE","\n      ",84],["T_VARIABLE","$table",85],["T_WHITESPACE"," ",85],"=",["T_WHITESPACE"," ",85],["T_VARIABLE","$info",85],"[",["T_CONSTANT_ENCAPSED_STRING","'prefix'",85],"]",["T_WHITESPACE"," ",85],".",["T_WHITESPACE"," ",85],["T_VARIABLE","$table",85],";",["T_WHITESPACE","\n    ",85],"}",["T_WHITESPACE","\n    ",86],["T_COMMENT","\/\/ If the prefix contains a period in it, then that means the prefix also\n",87],["T_WHITESPACE","    ",88],["T_COMMENT","\/\/ contains a schema reference in which case we will change the schema key\n",88],["T_WHITESPACE","    ",89],["T_COMMENT","\/\/ to the value before the period in the prefix. Everything after the dot\n",89],["T_WHITESPACE","    ",90],["T_COMMENT","\/\/ will be prefixed onto the front of the table.\n",90],["T_WHITESPACE","    ",91],["T_IF","if",91],["T_WHITESPACE"," ",91],"(","(",["T_VARIABLE","$pos",91],["T_WHITESPACE"," ",91],"=",["T_WHITESPACE"," ",91],["T_STRING","strpos",91],"(",["T_VARIABLE","$table",91],",",["T_WHITESPACE"," ",91],["T_CONSTANT_ENCAPSED_STRING","'.'",91],")",")",["T_WHITESPACE"," ",91],["T_IS_NOT_IDENTICAL","!==",91],["T_WHITESPACE"," ",91],["T_STRING","FALSE",91],")",["T_WHITESPACE"," ",91],"{",["T_WHITESPACE","\n      ",91],["T_COMMENT","\/\/ Grab everything before the period.\n",92],["T_WHITESPACE","      ",93],["T_VARIABLE","$info",93],"[",["T_CONSTANT_ENCAPSED_STRING","'schema'",93],"]",["T_WHITESPACE"," ",93],"=",["T_WHITESPACE"," ",93],["T_STRING","substr",93],"(",["T_VARIABLE","$table",93],",",["T_WHITESPACE"," ",93],["T_LNUMBER","0",93],",",["T_WHITESPACE"," ",93],["T_VARIABLE","$pos",93],")",";",["T_WHITESPACE","\n      ",93],["T_COMMENT","\/\/ Grab everything after the dot.\n",94],["T_WHITESPACE","      ",95],["T_VARIABLE","$info",95],"[",["T_CONSTANT_ENCAPSED_STRING","'table'",95],"]",["T_WHITESPACE"," ",95],"=",["T_WHITESPACE"," ",95],["T_STRING","substr",95],"(",["T_VARIABLE","$table",95],",",["T_WHITESPACE"," ",95],["T_INC","++",95],["T_VARIABLE","$pos",95],")",";",["T_WHITESPACE","\n    ",95],"}",["T_WHITESPACE","\n    ",96],["T_ELSE","else",97],["T_WHITESPACE"," ",97],"{",["T_WHITESPACE","\n      ",97],["T_VARIABLE","$info",98],"[",["T_CONSTANT_ENCAPSED_STRING","'table'",98],"]",["T_WHITESPACE"," ",98],"=",["T_WHITESPACE"," ",98],["T_VARIABLE","$table",98],";",["T_WHITESPACE","\n    ",98],"}",["T_WHITESPACE","\n    ",99],["T_RETURN","return",100],["T_WHITESPACE"," ",100],["T_VARIABLE","$info",100],";",["T_WHITESPACE","\n  ",100],"}",["T_WHITESPACE","\n\n  ",101],["T_DOC_COMMENT","\/**\n   * Create names for indexes, primary keys and constraints.\n   *\n   * This prevents using {} around non-table names like indexes and keys.\n   *\/",103],["T_WHITESPACE","\n  ",107],["T_FUNCTION","function",108],["T_WHITESPACE"," ",108],["T_STRING","prefixNonTable",108],"(",["T_VARIABLE","$table",108],")",["T_WHITESPACE"," ",108],"{",["T_WHITESPACE","\n    ",108],["T_VARIABLE","$args",109],["T_WHITESPACE"," ",109],"=",["T_WHITESPACE"," ",109],["T_STRING","func_get_args",109],"(",")",";",["T_WHITESPACE","\n    ",109],["T_VARIABLE","$info",110],["T_WHITESPACE"," ",110],"=",["T_WHITESPACE"," ",110],["T_VARIABLE","$this",110],["T_OBJECT_OPERATOR","->",110],["T_STRING","getPrefixInfo",110],"(",["T_VARIABLE","$table",110],")",";",["T_WHITESPACE","\n    ",110],["T_VARIABLE","$args",111],"[",["T_LNUMBER","0",111],"]",["T_WHITESPACE"," ",111],"=",["T_WHITESPACE"," ",111],["T_VARIABLE","$info",111],"[",["T_CONSTANT_ENCAPSED_STRING","'table'",111],"]",";",["T_WHITESPACE","\n    ",111],["T_RETURN","return",112],["T_WHITESPACE"," ",112],["T_STRING","implode",112],"(",["T_CONSTANT_ENCAPSED_STRING","'_'",112],",",["T_WHITESPACE"," ",112],["T_VARIABLE","$args",112],")",";",["T_WHITESPACE","\n  ",112],"}",["T_WHITESPACE","\n\n  ",113],["T_DOC_COMMENT","\/**\n   * Build a condition to match a table name against a standard information_schema.\n   *\n   * The information_schema is a SQL standard that provides information about the\n   * database server and the databases, schemas, tables, columns and users within\n   * it. This makes information_schema a useful tool to use across the drupal\n   * database drivers and is used by a few different functions. The function below\n   * describes the conditions to be meet when querying information_schema.tables\n   * for drupal tables or information associated with drupal tables. Even though\n   * this is the standard method, not all databases follow standards and so this\n   * method should be overwritten by a database driver if the database provider\n   * uses alternate methods. Because information_schema.tables is used in a few\n   * different functions, a database driver will only need to override this function\n   * to make all the others work. For example see\n   * core\/includes\/databases\/mysql\/schema.inc.\n   *\n   * @param $table_name\n   *   The name of the table in question.\n   * @param $operator\n   *   The operator to apply on the 'table' part of the condition.\n   * @param $add_prefix\n   *   Boolean to indicate whether the table name needs to be prefixed.\n   *\n   * @return \\Drupal\\Core\\Database\\Query\\Condition\n   *   A Condition object.\n   *\/",115],["T_WHITESPACE","\n  ",140],["T_PROTECTED","protected",141],["T_WHITESPACE"," ",141],["T_FUNCTION","function",141],["T_WHITESPACE"," ",141],["T_STRING","buildTableNameCondition",141],"(",["T_VARIABLE","$table_name",141],",",["T_WHITESPACE"," ",141],["T_VARIABLE","$operator",141],["T_WHITESPACE"," ",141],"=",["T_WHITESPACE"," ",141],["T_CONSTANT_ENCAPSED_STRING","'='",141],",",["T_WHITESPACE"," ",141],["T_VARIABLE","$add_prefix",141],["T_WHITESPACE"," ",141],"=",["T_WHITESPACE"," ",141],["T_STRING","TRUE",141],")",["T_WHITESPACE"," ",141],"{",["T_WHITESPACE","\n    ",141],["T_VARIABLE","$info",142],["T_WHITESPACE"," ",142],"=",["T_WHITESPACE"," ",142],["T_VARIABLE","$this",142],["T_OBJECT_OPERATOR","->",142],["T_STRING","connection",142],["T_OBJECT_OPERATOR","->",142],["T_STRING","getConnectionOptions",142],"(",")",";",["T_WHITESPACE","\n\n    ",142],["T_COMMENT","\/\/ Retrieve the table name and schema\n",144],["T_WHITESPACE","    ",145],["T_VARIABLE","$table_info",145],["T_WHITESPACE"," ",145],"=",["T_WHITESPACE"," ",145],["T_VARIABLE","$this",145],["T_OBJECT_OPERATOR","->",145],["T_STRING","getPrefixInfo",145],"(",["T_VARIABLE","$table_name",145],",",["T_WHITESPACE"," ",145],["T_VARIABLE","$add_prefix",145],")",";",["T_WHITESPACE","\n\n    ",145],["T_VARIABLE","$condition",147],["T_WHITESPACE"," ",147],"=",["T_WHITESPACE"," ",147],["T_NEW","new",147],["T_WHITESPACE"," ",147],["T_STRING","Condition",147],"(",["T_CONSTANT_ENCAPSED_STRING","'AND'",147],")",";",["T_WHITESPACE","\n    ",147],["T_VARIABLE","$condition",148],["T_OBJECT_OPERATOR","->",148],["T_STRING","condition",148],"(",["T_CONSTANT_ENCAPSED_STRING","'table_catalog'",148],",",["T_WHITESPACE"," ",148],["T_VARIABLE","$info",148],"[",["T_CONSTANT_ENCAPSED_STRING","'database'",148],"]",")",";",["T_WHITESPACE","\n    ",148],["T_VARIABLE","$condition",149],["T_OBJECT_OPERATOR","->",149],["T_STRING","condition",149],"(",["T_CONSTANT_ENCAPSED_STRING","'table_schema'",149],",",["T_WHITESPACE"," ",149],["T_VARIABLE","$table_info",149],"[",["T_CONSTANT_ENCAPSED_STRING","'schema'",149],"]",")",";",["T_WHITESPACE","\n    ",149],["T_VARIABLE","$condition",150],["T_OBJECT_OPERATOR","->",150],["T_STRING","condition",150],"(",["T_CONSTANT_ENCAPSED_STRING","'table_name'",150],",",["T_WHITESPACE"," ",150],["T_VARIABLE","$table_info",150],"[",["T_CONSTANT_ENCAPSED_STRING","'table'",150],"]",",",["T_WHITESPACE"," ",150],["T_VARIABLE","$operator",150],")",";",["T_WHITESPACE","\n    ",150],["T_RETURN","return",151],["T_WHITESPACE"," ",151],["T_VARIABLE","$condition",151],";",["T_WHITESPACE","\n  ",151],"}",["T_WHITESPACE","\n\n  ",152],["T_DOC_COMMENT","\/**\n   * Check if a table exists.\n   *\n   * @param $table\n   *   The name of the table in drupal (no prefixing).\n   *\n   * @return\n   *   TRUE if the given table exists, otherwise FALSE.\n   *\/",154],["T_WHITESPACE","\n  ",162],["T_PUBLIC","public",163],["T_WHITESPACE"," ",163],["T_FUNCTION","function",163],["T_WHITESPACE"," ",163],["T_STRING","tableExists",163],"(",["T_VARIABLE","$table",163],")",["T_WHITESPACE"," ",163],"{",["T_WHITESPACE","\n    ",163],["T_VARIABLE","$condition",164],["T_WHITESPACE"," ",164],"=",["T_WHITESPACE"," ",164],["T_VARIABLE","$this",164],["T_OBJECT_OPERATOR","->",164],["T_STRING","buildTableNameCondition",164],"(",["T_VARIABLE","$table",164],")",";",["T_WHITESPACE","\n    ",164],["T_VARIABLE","$condition",165],["T_OBJECT_OPERATOR","->",165],["T_STRING","compile",165],"(",["T_VARIABLE","$this",165],["T_OBJECT_OPERATOR","->",165],["T_STRING","connection",165],",",["T_WHITESPACE"," ",165],["T_VARIABLE","$this",165],")",";",["T_WHITESPACE","\n    ",165],["T_COMMENT","\/\/ Normally, we would heartily discourage the use of string\n",166],["T_WHITESPACE","    ",167],["T_COMMENT","\/\/ concatenation for conditionals like this however, we\n",167],["T_WHITESPACE","    ",168],["T_COMMENT","\/\/ couldn't use db_select() here because it would prefix\n",168],["T_WHITESPACE","    ",169],["T_COMMENT","\/\/ information_schema.tables and the query would fail.\n",169],["T_WHITESPACE","    ",170],["T_COMMENT","\/\/ Don't use {} around information_schema.tables table.\n",170],["T_WHITESPACE","    ",171],["T_RETURN","return",171],["T_WHITESPACE"," ",171],["T_BOOL_CAST","(bool)",171],["T_WHITESPACE"," ",171],["T_VARIABLE","$this",171],["T_OBJECT_OPERATOR","->",171],["T_STRING","connection",171],["T_OBJECT_OPERATOR","->",171],["T_STRING","query",171],"(",["T_CONSTANT_ENCAPSED_STRING","\"SELECT 1 FROM information_schema.tables WHERE \"",171],["T_WHITESPACE"," ",171],".",["T_WHITESPACE"," ",171],["T_STRING_CAST","(string)",171],["T_WHITESPACE"," ",171],["T_VARIABLE","$condition",171],",",["T_WHITESPACE"," ",171],["T_VARIABLE","$condition",171],["T_OBJECT_OPERATOR","->",171],["T_STRING","arguments",171],"(",")",")",["T_OBJECT_OPERATOR","->",171],["T_STRING","fetchField",171],"(",")",";",["T_WHITESPACE","\n  ",171],"}",["T_WHITESPACE","\n\n  ",172],["T_DOC_COMMENT","\/**\n   * Finds all tables that are like the specified base table name.\n   *\n   * @param string $table_expression\n   *   An SQL expression, for example \"cache_%\" (without the quotes).\n   *\n   * @return array\n   *   Both the keys and the values are the matching tables.\n   *\/",174],["T_WHITESPACE","\n  ",182],["T_PUBLIC","public",183],["T_WHITESPACE"," ",183],["T_FUNCTION","function",183],["T_WHITESPACE"," ",183],["T_STRING","findTables",183],"(",["T_VARIABLE","$table_expression",183],")",["T_WHITESPACE"," ",183],"{",["T_WHITESPACE","\n    ",183],["T_COMMENT","\/\/ Load all the tables up front in order to take into account per-table\n",184],["T_WHITESPACE","    ",185],["T_COMMENT","\/\/ prefixes. The actual matching is done at the bottom of the method.\n",185],["T_WHITESPACE","    ",186],["T_VARIABLE","$condition",186],["T_WHITESPACE"," ",186],"=",["T_WHITESPACE"," ",186],["T_VARIABLE","$this",186],["T_OBJECT_OPERATOR","->",186],["T_STRING","buildTableNameCondition",186],"(",["T_CONSTANT_ENCAPSED_STRING","'%'",186],",",["T_WHITESPACE"," ",186],["T_CONSTANT_ENCAPSED_STRING","'LIKE'",186],")",";",["T_WHITESPACE","\n    ",186],["T_VARIABLE","$condition",187],["T_OBJECT_OPERATOR","->",187],["T_STRING","compile",187],"(",["T_VARIABLE","$this",187],["T_OBJECT_OPERATOR","->",187],["T_STRING","connection",187],",",["T_WHITESPACE"," ",187],["T_VARIABLE","$this",187],")",";",["T_WHITESPACE","\n\n    ",187],["T_VARIABLE","$individually_prefixed_tables",189],["T_WHITESPACE"," ",189],"=",["T_WHITESPACE"," ",189],["T_VARIABLE","$this",189],["T_OBJECT_OPERATOR","->",189],["T_STRING","connection",189],["T_OBJECT_OPERATOR","->",189],["T_STRING","getUnprefixedTablesMap",189],"(",")",";",["T_WHITESPACE","\n    ",189],["T_VARIABLE","$default_prefix",190],["T_WHITESPACE"," ",190],"=",["T_WHITESPACE"," ",190],["T_VARIABLE","$this",190],["T_OBJECT_OPERATOR","->",190],["T_STRING","connection",190],["T_OBJECT_OPERATOR","->",190],["T_STRING","tablePrefix",190],"(",")",";",["T_WHITESPACE","\n    ",190],["T_VARIABLE","$default_prefix_length",191],["T_WHITESPACE"," ",191],"=",["T_WHITESPACE"," ",191],["T_STRING","strlen",191],"(",["T_VARIABLE","$default_prefix",191],")",";",["T_WHITESPACE","\n    ",191],["T_VARIABLE","$tables",192],["T_WHITESPACE"," ",192],"=",["T_WHITESPACE"," ",192],"[","]",";",["T_WHITESPACE","\n    ",192],["T_COMMENT","\/\/ Normally, we would heartily discourage the use of string\n",193],["T_WHITESPACE","    ",194],["T_COMMENT","\/\/ concatenation for conditionals like this however, we\n",194],["T_WHITESPACE","    ",195],["T_COMMENT","\/\/ couldn't use db_select() here because it would prefix\n",195],["T_WHITESPACE","    ",196],["T_COMMENT","\/\/ information_schema.tables and the query would fail.\n",196],["T_WHITESPACE","    ",197],["T_COMMENT","\/\/ Don't use {} around information_schema.tables table.\n",197],["T_WHITESPACE","    ",198],["T_VARIABLE","$results",198],["T_WHITESPACE"," ",198],"=",["T_WHITESPACE"," ",198],["T_VARIABLE","$this",198],["T_OBJECT_OPERATOR","->",198],["T_STRING","connection",198],["T_OBJECT_OPERATOR","->",198],["T_STRING","query",198],"(",["T_CONSTANT_ENCAPSED_STRING","\"SELECT table_name FROM information_schema.tables WHERE \"",198],["T_WHITESPACE"," ",198],".",["T_WHITESPACE"," ",198],["T_STRING_CAST","(string)",198],["T_WHITESPACE"," ",198],["T_VARIABLE","$condition",198],",",["T_WHITESPACE"," ",198],["T_VARIABLE","$condition",198],["T_OBJECT_OPERATOR","->",198],["T_STRING","arguments",198],"(",")",")",";",["T_WHITESPACE","\n    ",198],["T_FOREACH","foreach",199],["T_WHITESPACE"," ",199],"(",["T_VARIABLE","$results",199],["T_WHITESPACE"," ",199],["T_AS","as",199],["T_WHITESPACE"," ",199],["T_VARIABLE","$table",199],")",["T_WHITESPACE"," ",199],"{",["T_WHITESPACE","\n      ",199],["T_COMMENT","\/\/ Take into account tables that have an individual prefix.\n",200],["T_WHITESPACE","      ",201],["T_IF","if",201],["T_WHITESPACE"," ",201],"(",["T_ISSET","isset",201],"(",["T_VARIABLE","$individually_prefixed_tables",201],"[",["T_VARIABLE","$table",201],["T_OBJECT_OPERATOR","->",201],["T_STRING","table_name",201],"]",")",")",["T_WHITESPACE"," ",201],"{",["T_WHITESPACE","\n        ",201],["T_VARIABLE","$prefix_length",202],["T_WHITESPACE"," ",202],"=",["T_WHITESPACE"," ",202],["T_STRING","strlen",202],"(",["T_VARIABLE","$this",202],["T_OBJECT_OPERATOR","->",202],["T_STRING","connection",202],["T_OBJECT_OPERATOR","->",202],["T_STRING","tablePrefix",202],"(",["T_VARIABLE","$individually_prefixed_tables",202],"[",["T_VARIABLE","$table",202],["T_OBJECT_OPERATOR","->",202],["T_STRING","table_name",202],"]",")",")",";",["T_WHITESPACE","\n      ",202],"}",["T_WHITESPACE","\n      ",203],["T_ELSEIF","elseif",204],["T_WHITESPACE"," ",204],"(",["T_VARIABLE","$default_prefix",204],["T_WHITESPACE"," ",204],["T_BOOLEAN_AND","&&",204],["T_WHITESPACE"," ",204],["T_STRING","substr",204],"(",["T_VARIABLE","$table",204],["T_OBJECT_OPERATOR","->",204],["T_STRING","table_name",204],",",["T_WHITESPACE"," ",204],["T_LNUMBER","0",204],",",["T_WHITESPACE"," ",204],["T_VARIABLE","$default_prefix_length",204],")",["T_WHITESPACE"," ",204],["T_IS_NOT_IDENTICAL","!==",204],["T_WHITESPACE"," ",204],["T_VARIABLE","$default_prefix",204],")",["T_WHITESPACE"," ",204],"{",["T_WHITESPACE","\n        ",204],["T_COMMENT","\/\/ This table name does not start the default prefix, which means that\n",205],["T_WHITESPACE","        ",206],["T_COMMENT","\/\/ it is not managed by Drupal so it should be excluded from the result.\n",206],["T_WHITESPACE","        ",207],["T_CONTINUE","continue",207],";",["T_WHITESPACE","\n      ",207],"}",["T_WHITESPACE","\n      ",208],["T_ELSE","else",209],["T_WHITESPACE"," ",209],"{",["T_WHITESPACE","\n        ",209],["T_VARIABLE","$prefix_length",210],["T_WHITESPACE"," ",210],"=",["T_WHITESPACE"," ",210],["T_VARIABLE","$default_prefix_length",210],";",["T_WHITESPACE","\n      ",210],"}",["T_WHITESPACE","\n\n      ",211],["T_COMMENT","\/\/ Remove the prefix from the returned tables.\n",213],["T_WHITESPACE","      ",214],["T_VARIABLE","$unprefixed_table_name",214],["T_WHITESPACE"," ",214],"=",["T_WHITESPACE"," ",214],["T_STRING","substr",214],"(",["T_VARIABLE","$table",214],["T_OBJECT_OPERATOR","->",214],["T_STRING","table_name",214],",",["T_WHITESPACE"," ",214],["T_VARIABLE","$prefix_length",214],")",";",["T_WHITESPACE","\n\n      ",214],["T_COMMENT","\/\/ The pattern can match a table which is the same as the prefix. That\n",216],["T_WHITESPACE","      ",217],["T_COMMENT","\/\/ will become an empty string when we remove the prefix, which will\n",217],["T_WHITESPACE","      ",218],["T_COMMENT","\/\/ probably surprise the caller, besides not being a prefixed table. So\n",218],["T_WHITESPACE","      ",219],["T_COMMENT","\/\/ remove it.\n",219],["T_WHITESPACE","      ",220],["T_IF","if",220],["T_WHITESPACE"," ",220],"(","!",["T_EMPTY","empty",220],"(",["T_VARIABLE","$unprefixed_table_name",220],")",")",["T_WHITESPACE"," ",220],"{",["T_WHITESPACE","\n        ",220],["T_VARIABLE","$tables",221],"[",["T_VARIABLE","$unprefixed_table_name",221],"]",["T_WHITESPACE"," ",221],"=",["T_WHITESPACE"," ",221],["T_VARIABLE","$unprefixed_table_name",221],";",["T_WHITESPACE","\n      ",221],"}",["T_WHITESPACE","\n    ",222],"}",["T_WHITESPACE","\n\n    ",223],["T_COMMENT","\/\/ Convert the table expression from its SQL LIKE syntax to a regular\n",225],["T_WHITESPACE","    ",226],["T_COMMENT","\/\/ expression and escape the delimiter that will be used for matching.\n",226],["T_WHITESPACE","    ",227],["T_VARIABLE","$table_expression",227],["T_WHITESPACE"," ",227],"=",["T_WHITESPACE"," ",227],["T_STRING","str_replace",227],"(",["T_ARRAY","array",227],"(",["T_CONSTANT_ENCAPSED_STRING","'%'",227],",",["T_WHITESPACE"," ",227],["T_CONSTANT_ENCAPSED_STRING","'_'",227],")",",",["T_WHITESPACE"," ",227],["T_ARRAY","array",227],"(",["T_CONSTANT_ENCAPSED_STRING","'.*?'",227],",",["T_WHITESPACE"," ",227],["T_CONSTANT_ENCAPSED_STRING","'.'",227],")",",",["T_WHITESPACE"," ",227],["T_STRING","preg_quote",227],"(",["T_VARIABLE","$table_expression",227],",",["T_WHITESPACE"," ",227],["T_CONSTANT_ENCAPSED_STRING","'\/'",227],")",")",";",["T_WHITESPACE","\n    ",227],["T_VARIABLE","$tables",228],["T_WHITESPACE"," ",228],"=",["T_WHITESPACE"," ",228],["T_STRING","preg_grep",228],"(",["T_CONSTANT_ENCAPSED_STRING","'\/^'",228],["T_WHITESPACE"," ",228],".",["T_WHITESPACE"," ",228],["T_VARIABLE","$table_expression",228],["T_WHITESPACE"," ",228],".",["T_WHITESPACE"," ",228],["T_CONSTANT_ENCAPSED_STRING","'$\/i'",228],",",["T_WHITESPACE"," ",228],["T_VARIABLE","$tables",228],")",";",["T_WHITESPACE","\n\n    ",228],["T_RETURN","return",230],["T_WHITESPACE"," ",230],["T_VARIABLE","$tables",230],";",["T_WHITESPACE","\n  ",230],"}",["T_WHITESPACE","\n\n  ",231],["T_DOC_COMMENT","\/**\n   * Check if a column exists in the given table.\n   *\n   * @param $table\n   *   The name of the table in drupal (no prefixing).\n   * @param $name\n   *   The name of the column.\n   *\n   * @return\n   *   TRUE if the given column exists, otherwise FALSE.\n   *\/",233],["T_WHITESPACE","\n  ",243],["T_PUBLIC","public",244],["T_WHITESPACE"," ",244],["T_FUNCTION","function",244],["T_WHITESPACE"," ",244],["T_STRING","fieldExists",244],"(",["T_VARIABLE","$table",244],",",["T_WHITESPACE"," ",244],["T_VARIABLE","$column",244],")",["T_WHITESPACE"," ",244],"{",["T_WHITESPACE","\n    ",244],["T_VARIABLE","$condition",245],["T_WHITESPACE"," ",245],"=",["T_WHITESPACE"," ",245],["T_VARIABLE","$this",245],["T_OBJECT_OPERATOR","->",245],["T_STRING","buildTableNameCondition",245],"(",["T_VARIABLE","$table",245],")",";",["T_WHITESPACE","\n    ",245],["T_VARIABLE","$condition",246],["T_OBJECT_OPERATOR","->",246],["T_STRING","condition",246],"(",["T_CONSTANT_ENCAPSED_STRING","'column_name'",246],",",["T_WHITESPACE"," ",246],["T_VARIABLE","$column",246],")",";",["T_WHITESPACE","\n    ",246],["T_VARIABLE","$condition",247],["T_OBJECT_OPERATOR","->",247],["T_STRING","compile",247],"(",["T_VARIABLE","$this",247],["T_OBJECT_OPERATOR","->",247],["T_STRING","connection",247],",",["T_WHITESPACE"," ",247],["T_VARIABLE","$this",247],")",";",["T_WHITESPACE","\n    ",247],["T_COMMENT","\/\/ Normally, we would heartily discourage the use of string\n",248],["T_WHITESPACE","    ",249],["T_COMMENT","\/\/ concatenation for conditionals like this however, we\n",249],["T_WHITESPACE","    ",250],["T_COMMENT","\/\/ couldn't use db_select() here because it would prefix\n",250],["T_WHITESPACE","    ",251],["T_COMMENT","\/\/ information_schema.tables and the query would fail.\n",251],["T_WHITESPACE","    ",252],["T_COMMENT","\/\/ Don't use {} around information_schema.columns table.\n",252],["T_WHITESPACE","    ",253],["T_RETURN","return",253],["T_WHITESPACE"," ",253],["T_BOOL_CAST","(bool)",253],["T_WHITESPACE"," ",253],["T_VARIABLE","$this",253],["T_OBJECT_OPERATOR","->",253],["T_STRING","connection",253],["T_OBJECT_OPERATOR","->",253],["T_STRING","query",253],"(",["T_CONSTANT_ENCAPSED_STRING","\"SELECT 1 FROM information_schema.columns WHERE \"",253],["T_WHITESPACE"," ",253],".",["T_WHITESPACE"," ",253],["T_STRING_CAST","(string)",253],["T_WHITESPACE"," ",253],["T_VARIABLE","$condition",253],",",["T_WHITESPACE"," ",253],["T_VARIABLE","$condition",253],["T_OBJECT_OPERATOR","->",253],["T_STRING","arguments",253],"(",")",")",["T_OBJECT_OPERATOR","->",253],["T_STRING","fetchField",253],"(",")",";",["T_WHITESPACE","\n  ",253],"}",["T_WHITESPACE","\n\n  ",254],["T_DOC_COMMENT","\/**\n   * Returns a mapping of Drupal schema field names to DB-native field types.\n   *\n   * Because different field types do not map 1:1 between databases, Drupal has\n   * its own normalized field type names. This function returns a driver-specific\n   * mapping table from Drupal names to the native names for each database.\n   *\n   * @return array\n   *   An array of Schema API field types to driver-specific field types.\n   *\/",256],["T_WHITESPACE","\n  ",265],["T_ABSTRACT","abstract",266],["T_WHITESPACE"," ",266],["T_PUBLIC","public",266],["T_WHITESPACE"," ",266],["T_FUNCTION","function",266],["T_WHITESPACE"," ",266],["T_STRING","getFieldTypeMap",266],"(",")",";",["T_WHITESPACE","\n\n  ",266],["T_DOC_COMMENT","\/**\n   * Rename a table.\n   *\n   * @param $table\n   *   The table to be renamed.\n   * @param $new_name\n   *   The new name for the table.\n   *\n   * @throws \\Drupal\\Core\\Database\\SchemaObjectDoesNotExistException\n   *   If the specified table doesn't exist.\n   * @throws \\Drupal\\Core\\Database\\SchemaObjectExistsException\n   *   If a table with the specified new name already exists.\n   *\/",268],["T_WHITESPACE","\n  ",280],["T_ABSTRACT","abstract",281],["T_WHITESPACE"," ",281],["T_PUBLIC","public",281],["T_WHITESPACE"," ",281],["T_FUNCTION","function",281],["T_WHITESPACE"," ",281],["T_STRING","renameTable",281],"(",["T_VARIABLE","$table",281],",",["T_WHITESPACE"," ",281],["T_VARIABLE","$new_name",281],")",";",["T_WHITESPACE","\n\n  ",281],["T_DOC_COMMENT","\/**\n   * Drop a table.\n   *\n   * @param $table\n   *   The table to be dropped.\n   *\n   * @return\n   *   TRUE if the table was successfully dropped, FALSE if there was no table\n   *   by that name to begin with.\n   *\/",283],["T_WHITESPACE","\n  ",292],["T_ABSTRACT","abstract",293],["T_WHITESPACE"," ",293],["T_PUBLIC","public",293],["T_WHITESPACE"," ",293],["T_FUNCTION","function",293],["T_WHITESPACE"," ",293],["T_STRING","dropTable",293],"(",["T_VARIABLE","$table",293],")",";",["T_WHITESPACE","\n\n  ",293],["T_DOC_COMMENT","\/**\n   * Add a new field to a table.\n   *\n   * @param $table\n   *   Name of the table to be altered.\n   * @param $field\n   *   Name of the field to be added.\n   * @param $spec\n   *   The field specification array, as taken from a schema definition.\n   *   The specification may also contain the key 'initial', the newly\n   *   created field will be set to the value of the key in all rows.\n   *   This is most useful for creating NOT NULL columns with no default\n   *   value in existing tables.\n   *   Alternatively, the 'initial_form_field' key may be used, which will\n   *   auto-populate the new field with values from the specified field.\n   * @param $keys_new\n   *   (optional) Keys and indexes specification to be created on the\n   *   table along with adding the field. The format is the same as a\n   *   table specification but without the 'fields' element. If you are\n   *   adding a type 'serial' field, you MUST specify at least one key\n   *   or index including it in this array. See db_change_field() for more\n   *   explanation why.\n   *\n   * @throws \\Drupal\\Core\\Database\\SchemaObjectDoesNotExistException\n   *   If the specified table doesn't exist.\n   * @throws \\Drupal\\Core\\Database\\SchemaObjectExistsException\n   *   If the specified table already has a field by that name.\n   *\/",295],["T_WHITESPACE","\n  ",322],["T_ABSTRACT","abstract",323],["T_WHITESPACE"," ",323],["T_PUBLIC","public",323],["T_WHITESPACE"," ",323],["T_FUNCTION","function",323],["T_WHITESPACE"," ",323],["T_STRING","addField",323],"(",["T_VARIABLE","$table",323],",",["T_WHITESPACE"," ",323],["T_VARIABLE","$field",323],",",["T_WHITESPACE"," ",323],["T_VARIABLE","$spec",323],",",["T_WHITESPACE"," ",323],["T_VARIABLE","$keys_new",323],["T_WHITESPACE"," ",323],"=",["T_WHITESPACE"," ",323],["T_ARRAY","array",323],"(",")",")",";",["T_WHITESPACE","\n\n  ",323],["T_DOC_COMMENT","\/**\n   * Drop a field.\n   *\n   * @param $table\n   *   The table to be altered.\n   * @param $field\n   *   The field to be dropped.\n   *\n   * @return\n   *   TRUE if the field was successfully dropped, FALSE if there was no field\n   *   by that name to begin with.\n   *\/",325],["T_WHITESPACE","\n  ",336],["T_ABSTRACT","abstract",337],["T_WHITESPACE"," ",337],["T_PUBLIC","public",337],["T_WHITESPACE"," ",337],["T_FUNCTION","function",337],["T_WHITESPACE"," ",337],["T_STRING","dropField",337],"(",["T_VARIABLE","$table",337],",",["T_WHITESPACE"," ",337],["T_VARIABLE","$field",337],")",";",["T_WHITESPACE","\n\n  ",337],["T_DOC_COMMENT","\/**\n   * Set the default value for a field.\n   *\n   * @param $table\n   *   The table to be altered.\n   * @param $field\n   *   The field to be altered.\n   * @param $default\n   *   Default value to be set. NULL for 'default NULL'.\n   *\n   * @throws \\Drupal\\Core\\Database\\SchemaObjectDoesNotExistException\n   *   If the specified table or field doesn't exist.\n   *\/",339],["T_WHITESPACE","\n  ",351],["T_ABSTRACT","abstract",352],["T_WHITESPACE"," ",352],["T_PUBLIC","public",352],["T_WHITESPACE"," ",352],["T_FUNCTION","function",352],["T_WHITESPACE"," ",352],["T_STRING","fieldSetDefault",352],"(",["T_VARIABLE","$table",352],",",["T_WHITESPACE"," ",352],["T_VARIABLE","$field",352],",",["T_WHITESPACE"," ",352],["T_VARIABLE","$default",352],")",";",["T_WHITESPACE","\n\n  ",352],["T_DOC_COMMENT","\/**\n   * Set a field to have no default value.\n   *\n   * @param $table\n   *   The table to be altered.\n   * @param $field\n   *   The field to be altered.\n   *\n   * @throws \\Drupal\\Core\\Database\\SchemaObjectDoesNotExistException\n   *   If the specified table or field doesn't exist.\n   *\/",354],["T_WHITESPACE","\n  ",364],["T_ABSTRACT","abstract",365],["T_WHITESPACE"," ",365],["T_PUBLIC","public",365],["T_WHITESPACE"," ",365],["T_FUNCTION","function",365],["T_WHITESPACE"," ",365],["T_STRING","fieldSetNoDefault",365],"(",["T_VARIABLE","$table",365],",",["T_WHITESPACE"," ",365],["T_VARIABLE","$field",365],")",";",["T_WHITESPACE","\n\n  ",365],["T_DOC_COMMENT","\/**\n   * Checks if an index exists in the given table.\n   *\n   * @param $table\n   *   The name of the table in drupal (no prefixing).\n   * @param $name\n   *   The name of the index in drupal (no prefixing).\n   *\n   * @return\n   *   TRUE if the given index exists, otherwise FALSE.\n   *\/",367],["T_WHITESPACE","\n  ",377],["T_ABSTRACT","abstract",378],["T_WHITESPACE"," ",378],["T_PUBLIC","public",378],["T_WHITESPACE"," ",378],["T_FUNCTION","function",378],["T_WHITESPACE"," ",378],["T_STRING","indexExists",378],"(",["T_VARIABLE","$table",378],",",["T_WHITESPACE"," ",378],["T_VARIABLE","$name",378],")",";",["T_WHITESPACE","\n\n  ",378],["T_DOC_COMMENT","\/**\n   * Add a primary key.\n   *\n   * @param $table\n   *   The table to be altered.\n   * @param $fields\n   *   Fields for the primary key.\n   *\n   * @throws \\Drupal\\Core\\Database\\SchemaObjectDoesNotExistException\n   *   If the specified table doesn't exist.\n   * @throws \\Drupal\\Core\\Database\\SchemaObjectExistsException\n   *   If the specified table already has a primary key.\n   *\/",380],["T_WHITESPACE","\n  ",392],["T_ABSTRACT","abstract",393],["T_WHITESPACE"," ",393],["T_PUBLIC","public",393],["T_WHITESPACE"," ",393],["T_FUNCTION","function",393],["T_WHITESPACE"," ",393],["T_STRING","addPrimaryKey",393],"(",["T_VARIABLE","$table",393],",",["T_WHITESPACE"," ",393],["T_VARIABLE","$fields",393],")",";",["T_WHITESPACE","\n\n  ",393],["T_DOC_COMMENT","\/**\n   * Drop the primary key.\n   *\n   * @param $table\n   *   The table to be altered.\n   *\n   * @return\n   *   TRUE if the primary key was successfully dropped, FALSE if there was no\n   *   primary key on this table to begin with.\n   *\/",395],["T_WHITESPACE","\n  ",404],["T_ABSTRACT","abstract",405],["T_WHITESPACE"," ",405],["T_PUBLIC","public",405],["T_WHITESPACE"," ",405],["T_FUNCTION","function",405],["T_WHITESPACE"," ",405],["T_STRING","dropPrimaryKey",405],"(",["T_VARIABLE","$table",405],")",";",["T_WHITESPACE","\n\n  ",405],["T_DOC_COMMENT","\/**\n   * Add a unique key.\n   *\n   * @param $table\n   *   The table to be altered.\n   * @param $name\n   *   The name of the key.\n   * @param $fields\n   *   An array of field names.\n   *\n   * @throws \\Drupal\\Core\\Database\\SchemaObjectDoesNotExistException\n   *   If the specified table doesn't exist.\n   * @throws \\Drupal\\Core\\Database\\SchemaObjectExistsException\n   *   If the specified table already has a key by that name.\n   *\/",407],["T_WHITESPACE","\n  ",421],["T_ABSTRACT","abstract",422],["T_WHITESPACE"," ",422],["T_PUBLIC","public",422],["T_WHITESPACE"," ",422],["T_FUNCTION","function",422],["T_WHITESPACE"," ",422],["T_STRING","addUniqueKey",422],"(",["T_VARIABLE","$table",422],",",["T_WHITESPACE"," ",422],["T_VARIABLE","$name",422],",",["T_WHITESPACE"," ",422],["T_VARIABLE","$fields",422],")",";",["T_WHITESPACE","\n\n  ",422],["T_DOC_COMMENT","\/**\n   * Drop a unique key.\n   *\n   * @param $table\n   *   The table to be altered.\n   * @param $name\n   *   The name of the key.\n   *\n   * @return\n   *   TRUE if the key was successfully dropped, FALSE if there was no key by\n   *   that name to begin with.\n   *\/",424],["T_WHITESPACE","\n  ",435],["T_ABSTRACT","abstract",436],["T_WHITESPACE"," ",436],["T_PUBLIC","public",436],["T_WHITESPACE"," ",436],["T_FUNCTION","function",436],["T_WHITESPACE"," ",436],["T_STRING","dropUniqueKey",436],"(",["T_VARIABLE","$table",436],",",["T_WHITESPACE"," ",436],["T_VARIABLE","$name",436],")",";",["T_WHITESPACE","\n\n  ",436],["T_DOC_COMMENT","\/**\n   * Add an index.\n   *\n   * @param $table\n   *   The table to be altered.\n   * @param $name\n   *   The name of the index.\n   * @param $fields\n   *   An array of field names or field information; if field information is\n   *   passed, it's an array whose first element is the field name and whose\n   *   second is the maximum length in the index. For example, the following\n   *   will use the full length of the `foo` field, but limit the `bar` field to\n   *   4 characters:\n   *   @code\n   *     $fields = ['foo', ['bar', 4]];\n   *   @endcode\n   * @param array $spec\n   *   The table specification for the table to be altered. This is used in\n   *   order to be able to ensure that the index length is not too long.\n   *   This schema definition can usually be obtained through hook_schema(), or\n   *   in case the table was created by the Entity API, through the schema\n   *   handler listed in the entity class definition. For reference, see\n   *   SqlContentEntityStorageSchema::getDedicatedTableSchema() and\n   *   SqlContentEntityStorageSchema::getSharedTableFieldSchema().\n   *\n   *   In order to prevent human error, it is recommended to pass in the\n   *   complete table specification. However, in the edge case of the complete\n   *   table specification not being available, we can pass in a partial table\n   *   definition containing only the fields that apply to the index:\n   *   @code\n   *   $spec = [\n   *     \/\/ Example partial specification for a table:\n   *     'fields' => [\n   *       'example_field' => [\n   *         'description' => 'An example field',\n   *         'type' => 'varchar',\n   *         'length' => 32,\n   *         'not null' => TRUE,\n   *         'default' => '',\n   *       ],\n   *     ],\n   *     'indexes' => [\n   *       'table_example_field' => ['example_field'],\n   *     ],\n   *   ];\n   *   @endcode\n   *   Note that the above is a partial table definition and that we would\n   *   usually pass a complete table definition as obtained through\n   *   hook_schema() instead.\n   *\n   * @see schemaapi\n   * @see hook_schema()\n   *\n   * @throws \\Drupal\\Core\\Database\\SchemaObjectDoesNotExistException\n   *   If the specified table doesn't exist.\n   * @throws \\Drupal\\Core\\Database\\SchemaObjectExistsException\n   *   If the specified table already has an index by that name.\n   *\n   * @todo remove the $spec argument whenever schema introspection is added.\n   *\/",438],["T_WHITESPACE","\n  ",497],["T_ABSTRACT","abstract",498],["T_WHITESPACE"," ",498],["T_PUBLIC","public",498],["T_WHITESPACE"," ",498],["T_FUNCTION","function",498],["T_WHITESPACE"," ",498],["T_STRING","addIndex",498],"(",["T_VARIABLE","$table",498],",",["T_WHITESPACE"," ",498],["T_VARIABLE","$name",498],",",["T_WHITESPACE"," ",498],["T_VARIABLE","$fields",498],",",["T_WHITESPACE"," ",498],["T_ARRAY","array",498],["T_WHITESPACE"," ",498],["T_VARIABLE","$spec",498],")",";",["T_WHITESPACE","\n\n  ",498],["T_DOC_COMMENT","\/**\n   * Drop an index.\n   *\n   * @param $table\n   *   The table to be altered.\n   * @param $name\n   *   The name of the index.\n   *\n   * @return\n   *   TRUE if the index was successfully dropped, FALSE if there was no index\n   *   by that name to begin with.\n   *\/",500],["T_WHITESPACE","\n  ",511],["T_ABSTRACT","abstract",512],["T_WHITESPACE"," ",512],["T_PUBLIC","public",512],["T_WHITESPACE"," ",512],["T_FUNCTION","function",512],["T_WHITESPACE"," ",512],["T_STRING","dropIndex",512],"(",["T_VARIABLE","$table",512],",",["T_WHITESPACE"," ",512],["T_VARIABLE","$name",512],")",";",["T_WHITESPACE","\n\n  ",512],["T_DOC_COMMENT","\/**\n   * Change a field definition.\n   *\n   * IMPORTANT NOTE: To maintain database portability, you have to explicitly\n   * recreate all indices and primary keys that are using the changed field.\n   *\n   * That means that you have to drop all affected keys and indexes with\n   * db_drop_{primary_key,unique_key,index}() before calling db_change_field().\n   * To recreate the keys and indices, pass the key definitions as the\n   * optional $keys_new argument directly to db_change_field().\n   *\n   * For example, suppose you have:\n   * @code\n   * $schema['foo'] = array(\n   *   'fields' => array(\n   *     'bar' => array('type' => 'int', 'not null' => TRUE)\n   *   ),\n   *   'primary key' => array('bar')\n   * );\n   * @endcode\n   * and you want to change foo.bar to be type serial, leaving it as the\n   * primary key. The correct sequence is:\n   * @code\n   * db_drop_primary_key('foo');\n   * db_change_field('foo', 'bar', 'bar',\n   *   array('type' => 'serial', 'not null' => TRUE),\n   *   array('primary key' => array('bar')));\n   * @endcode\n   *\n   * The reasons for this are due to the different database engines:\n   *\n   * On PostgreSQL, changing a field definition involves adding a new field\n   * and dropping an old one which* causes any indices, primary keys and\n   * sequences (from serial-type fields) that use the changed field to be dropped.\n   *\n   * On MySQL, all type 'serial' fields must be part of at least one key\n   * or index as soon as they are created. You cannot use\n   * db_add_{primary_key,unique_key,index}() for this purpose because\n   * the ALTER TABLE command will fail to add the column without a key\n   * or index specification. The solution is to use the optional\n   * $keys_new argument to create the key or index at the same time as\n   * field.\n   *\n   * You could use db_add_{primary_key,unique_key,index}() in all cases\n   * unless you are converting a field to be type serial. You can use\n   * the $keys_new argument in all cases.\n   *\n   * @param $table\n   *   Name of the table.\n   * @param $field\n   *   Name of the field to change.\n   * @param $field_new\n   *   New name for the field (set to the same as $field if you don't want to change the name).\n   * @param $spec\n   *   The field specification for the new field.\n   * @param $keys_new\n   *   (optional) Keys and indexes specification to be created on the\n   *   table along with changing the field. The format is the same as a\n   *   table specification but without the 'fields' element.\n   *\n   * @throws \\Drupal\\Core\\Database\\SchemaObjectDoesNotExistException\n   *   If the specified table or source field doesn't exist.\n   * @throws \\Drupal\\Core\\Database\\SchemaObjectExistsException\n   *   If the specified destination field already exists.\n   *\/",514],["T_WHITESPACE","\n  ",578],["T_ABSTRACT","abstract",579],["T_WHITESPACE"," ",579],["T_PUBLIC","public",579],["T_WHITESPACE"," ",579],["T_FUNCTION","function",579],["T_WHITESPACE"," ",579],["T_STRING","changeField",579],"(",["T_VARIABLE","$table",579],",",["T_WHITESPACE"," ",579],["T_VARIABLE","$field",579],",",["T_WHITESPACE"," ",579],["T_VARIABLE","$field_new",579],",",["T_WHITESPACE"," ",579],["T_VARIABLE","$spec",579],",",["T_WHITESPACE"," ",579],["T_VARIABLE","$keys_new",579],["T_WHITESPACE"," ",579],"=",["T_WHITESPACE"," ",579],["T_ARRAY","array",579],"(",")",")",";",["T_WHITESPACE","\n\n  ",579],["T_DOC_COMMENT","\/**\n   * Create a new table from a Drupal table definition.\n   *\n   * @param $name\n   *   The name of the table to create.\n   * @param $table\n   *   A Schema API table definition array.\n   *\n   * @throws \\Drupal\\Core\\Database\\SchemaObjectExistsException\n   *   If the specified table already exists.\n   *\/",581],["T_WHITESPACE","\n  ",591],["T_PUBLIC","public",592],["T_WHITESPACE"," ",592],["T_FUNCTION","function",592],["T_WHITESPACE"," ",592],["T_STRING","createTable",592],"(",["T_VARIABLE","$name",592],",",["T_WHITESPACE"," ",592],["T_VARIABLE","$table",592],")",["T_WHITESPACE"," ",592],"{",["T_WHITESPACE","\n    ",592],["T_IF","if",593],["T_WHITESPACE"," ",593],"(",["T_VARIABLE","$this",593],["T_OBJECT_OPERATOR","->",593],["T_STRING","tableExists",593],"(",["T_VARIABLE","$name",593],")",")",["T_WHITESPACE"," ",593],"{",["T_WHITESPACE","\n      ",593],["T_THROW","throw",594],["T_WHITESPACE"," ",594],["T_NEW","new",594],["T_WHITESPACE"," ",594],["T_STRING","SchemaObjectExistsException",594],"(",["T_STRING","t",594],"(",["T_CONSTANT_ENCAPSED_STRING","'Table @name already exists.'",594],",",["T_WHITESPACE"," ",594],["T_ARRAY","array",594],"(",["T_CONSTANT_ENCAPSED_STRING","'@name'",594],["T_WHITESPACE"," ",594],["T_DOUBLE_ARROW","=>",594],["T_WHITESPACE"," ",594],["T_VARIABLE","$name",594],")",")",")",";",["T_WHITESPACE","\n    ",594],"}",["T_WHITESPACE","\n    ",595],["T_VARIABLE","$statements",596],["T_WHITESPACE"," ",596],"=",["T_WHITESPACE"," ",596],["T_VARIABLE","$this",596],["T_OBJECT_OPERATOR","->",596],["T_STRING","createTableSql",596],"(",["T_VARIABLE","$name",596],",",["T_WHITESPACE"," ",596],["T_VARIABLE","$table",596],")",";",["T_WHITESPACE","\n    ",596],["T_FOREACH","foreach",597],["T_WHITESPACE"," ",597],"(",["T_VARIABLE","$statements",597],["T_WHITESPACE"," ",597],["T_AS","as",597],["T_WHITESPACE"," ",597],["T_VARIABLE","$statement",597],")",["T_WHITESPACE"," ",597],"{",["T_WHITESPACE","\n      ",597],["T_VARIABLE","$this",598],["T_OBJECT_OPERATOR","->",598],["T_STRING","connection",598],["T_OBJECT_OPERATOR","->",598],["T_STRING","query",598],"(",["T_VARIABLE","$statement",598],")",";",["T_WHITESPACE","\n    ",598],"}",["T_WHITESPACE","\n  ",599],"}",["T_WHITESPACE","\n\n  ",600],["T_DOC_COMMENT","\/**\n   * Return an array of field names from an array of key\/index column specifiers.\n   *\n   * This is usually an identity function but if a key\/index uses a column prefix\n   * specification, this function extracts just the name.\n   *\n   * @param $fields\n   *   An array of key\/index column specifiers.\n   *\n   * @return\n   *   An array of field names.\n   *\/",602],["T_WHITESPACE","\n  ",613],["T_PUBLIC","public",614],["T_WHITESPACE"," ",614],["T_FUNCTION","function",614],["T_WHITESPACE"," ",614],["T_STRING","fieldNames",614],"(",["T_VARIABLE","$fields",614],")",["T_WHITESPACE"," ",614],"{",["T_WHITESPACE","\n    ",614],["T_VARIABLE","$return",615],["T_WHITESPACE"," ",615],"=",["T_WHITESPACE"," ",615],["T_ARRAY","array",615],"(",")",";",["T_WHITESPACE","\n    ",615],["T_FOREACH","foreach",616],["T_WHITESPACE"," ",616],"(",["T_VARIABLE","$fields",616],["T_WHITESPACE"," ",616],["T_AS","as",616],["T_WHITESPACE"," ",616],["T_VARIABLE","$field",616],")",["T_WHITESPACE"," ",616],"{",["T_WHITESPACE","\n      ",616],["T_IF","if",617],["T_WHITESPACE"," ",617],"(",["T_STRING","is_array",617],"(",["T_VARIABLE","$field",617],")",")",["T_WHITESPACE"," ",617],"{",["T_WHITESPACE","\n        ",617],["T_VARIABLE","$return",618],"[","]",["T_WHITESPACE"," ",618],"=",["T_WHITESPACE"," ",618],["T_VARIABLE","$field",618],"[",["T_LNUMBER","0",618],"]",";",["T_WHITESPACE","\n      ",618],"}",["T_WHITESPACE","\n      ",619],["T_ELSE","else",620],["T_WHITESPACE"," ",620],"{",["T_WHITESPACE","\n        ",620],["T_VARIABLE","$return",621],"[","]",["T_WHITESPACE"," ",621],"=",["T_WHITESPACE"," ",621],["T_VARIABLE","$field",621],";",["T_WHITESPACE","\n      ",621],"}",["T_WHITESPACE","\n    ",622],"}",["T_WHITESPACE","\n    ",623],["T_RETURN","return",624],["T_WHITESPACE"," ",624],["T_VARIABLE","$return",624],";",["T_WHITESPACE","\n  ",624],"}",["T_WHITESPACE","\n\n  ",625],["T_DOC_COMMENT","\/**\n   * Prepare a table or column comment for database query.\n   *\n   * @param $comment\n   *   The comment string to prepare.\n   * @param $length\n   *   Optional upper limit on the returned string length.\n   *\n   * @return\n   *   The prepared comment.\n   *\/",627],["T_WHITESPACE","\n  ",637],["T_PUBLIC","public",638],["T_WHITESPACE"," ",638],["T_FUNCTION","function",638],["T_WHITESPACE"," ",638],["T_STRING","prepareComment",638],"(",["T_VARIABLE","$comment",638],",",["T_WHITESPACE"," ",638],["T_VARIABLE","$length",638],["T_WHITESPACE"," ",638],"=",["T_WHITESPACE"," ",638],["T_STRING","NULL",638],")",["T_WHITESPACE"," ",638],"{",["T_WHITESPACE","\n    ",638],["T_COMMENT","\/\/ Remove semicolons to avoid triggering multi-statement check.\n",639],["T_WHITESPACE","    ",640],["T_VARIABLE","$comment",640],["T_WHITESPACE"," ",640],"=",["T_WHITESPACE"," ",640],["T_STRING","strtr",640],"(",["T_VARIABLE","$comment",640],",",["T_WHITESPACE"," ",640],"[",["T_CONSTANT_ENCAPSED_STRING","';'",640],["T_WHITESPACE"," ",640],["T_DOUBLE_ARROW","=>",640],["T_WHITESPACE"," ",640],["T_CONSTANT_ENCAPSED_STRING","'.'",640],"]",")",";",["T_WHITESPACE","\n    ",640],["T_RETURN","return",641],["T_WHITESPACE"," ",641],["T_VARIABLE","$this",641],["T_OBJECT_OPERATOR","->",641],["T_STRING","connection",641],["T_OBJECT_OPERATOR","->",641],["T_STRING","quote",641],"(",["T_VARIABLE","$comment",641],")",";",["T_WHITESPACE","\n  ",641],"}",["T_WHITESPACE","\n\n  ",642],["T_DOC_COMMENT","\/**\n   * Return an escaped version of its parameter to be used as a default value\n   * on a column.\n   *\n   * @param mixed $value\n   *   The value to be escaped (int, float, null or string).\n   *\n   * @return string|int|float\n   *   The escaped value.\n   *\/",644],["T_WHITESPACE","\n  ",653],["T_PROTECTED","protected",654],["T_WHITESPACE"," ",654],["T_FUNCTION","function",654],["T_WHITESPACE"," ",654],["T_STRING","escapeDefaultValue",654],"(",["T_VARIABLE","$value",654],")",["T_WHITESPACE"," ",654],"{",["T_WHITESPACE","\n    ",654],["T_IF","if",655],["T_WHITESPACE"," ",655],"(",["T_STRING","is_null",655],"(",["T_VARIABLE","$value",655],")",")",["T_WHITESPACE"," ",655],"{",["T_WHITESPACE","\n      ",655],["T_RETURN","return",656],["T_WHITESPACE"," ",656],["T_CONSTANT_ENCAPSED_STRING","'NULL'",656],";",["T_WHITESPACE","\n    ",656],"}",["T_WHITESPACE","\n    ",657],["T_RETURN","return",658],["T_WHITESPACE"," ",658],["T_STRING","is_string",658],"(",["T_VARIABLE","$value",658],")",["T_WHITESPACE"," ",658],"?",["T_WHITESPACE"," ",658],["T_VARIABLE","$this",658],["T_OBJECT_OPERATOR","->",658],["T_STRING","connection",658],["T_OBJECT_OPERATOR","->",658],["T_STRING","quote",658],"(",["T_VARIABLE","$value",658],")",["T_WHITESPACE"," ",658],":",["T_WHITESPACE"," ",658],["T_VARIABLE","$value",658],";",["T_WHITESPACE","\n  ",658],"}",["T_WHITESPACE","\n\n",659],"}",["T_WHITESPACE","\n",661]]