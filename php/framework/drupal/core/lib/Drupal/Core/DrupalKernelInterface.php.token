[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Core",3],";",["T_WHITESPACE","\n\n",3],["T_USE","use",5],["T_WHITESPACE"," ",5],["T_STRING","Symfony",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Component",5],["T_NS_SEPARATOR","\\",5],["T_STRING","DependencyInjection",5],["T_NS_SEPARATOR","\\",5],["T_STRING","ContainerAwareInterface",5],";",["T_WHITESPACE","\n",5],["T_USE","use",6],["T_WHITESPACE"," ",6],["T_STRING","Symfony",6],["T_NS_SEPARATOR","\\",6],["T_STRING","Component",6],["T_NS_SEPARATOR","\\",6],["T_STRING","HttpKernel",6],["T_NS_SEPARATOR","\\",6],["T_STRING","HttpKernelInterface",6],";",["T_WHITESPACE","\n",6],["T_USE","use",7],["T_WHITESPACE"," ",7],["T_STRING","Symfony",7],["T_NS_SEPARATOR","\\",7],["T_STRING","Component",7],["T_NS_SEPARATOR","\\",7],["T_STRING","HttpFoundation",7],["T_NS_SEPARATOR","\\",7],["T_STRING","Request",7],";",["T_WHITESPACE","\n\n",7],["T_DOC_COMMENT","\/**\n * The interface for DrupalKernel, the core of Drupal.\n *\n * This interface extends Symfony's KernelInterface and adds methods for\n * responding to modules being enabled or disabled during its lifetime.\n *\/",9],["T_WHITESPACE","\n",14],["T_INTERFACE","interface",15],["T_WHITESPACE"," ",15],["T_STRING","DrupalKernelInterface",15],["T_WHITESPACE"," ",15],["T_EXTENDS","extends",15],["T_WHITESPACE"," ",15],["T_STRING","HttpKernelInterface",15],",",["T_WHITESPACE"," ",15],["T_STRING","ContainerAwareInterface",15],["T_WHITESPACE"," ",15],"{",["T_WHITESPACE","\n\n  ",15],["T_DOC_COMMENT","\/**\n   * Boots the current kernel.\n   *\n   * @return $this\n   *\/",17],["T_WHITESPACE","\n  ",21],["T_PUBLIC","public",22],["T_WHITESPACE"," ",22],["T_FUNCTION","function",22],["T_WHITESPACE"," ",22],["T_STRING","boot",22],"(",")",";",["T_WHITESPACE","\n\n  ",22],["T_DOC_COMMENT","\/**\n   * Shuts down the kernel.\n   *\/",24],["T_WHITESPACE","\n  ",26],["T_PUBLIC","public",27],["T_WHITESPACE"," ",27],["T_FUNCTION","function",27],["T_WHITESPACE"," ",27],["T_STRING","shutdown",27],"(",")",";",["T_WHITESPACE","\n\n  ",27],["T_DOC_COMMENT","\/**\n   * Discovers available serviceProviders.\n   *\n   * @return array\n   *   The available serviceProviders.\n   *\/",29],["T_WHITESPACE","\n  ",34],["T_PUBLIC","public",35],["T_WHITESPACE"," ",35],["T_FUNCTION","function",35],["T_WHITESPACE"," ",35],["T_STRING","discoverServiceProviders",35],"(",")",";",["T_WHITESPACE","\n\n  ",35],["T_DOC_COMMENT","\/**\n   * Returns all registered service providers.\n   *\n   * @param string $origin\n   *   The origin for which to return service providers; one of 'app' or 'site'.\n   *\n   * @return array\n   *   An associative array of ServiceProvider objects, keyed by name.\n   *\/",37],["T_WHITESPACE","\n  ",45],["T_PUBLIC","public",46],["T_WHITESPACE"," ",46],["T_FUNCTION","function",46],["T_WHITESPACE"," ",46],["T_STRING","getServiceProviders",46],"(",["T_VARIABLE","$origin",46],")",";",["T_WHITESPACE","\n\n  ",46],["T_DOC_COMMENT","\/**\n   * Gets the current container.\n   *\n   * @return \\Symfony\\Component\\DependencyInjection\\ContainerInterface\n   *   A ContainerInterface instance.\n   *\/",48],["T_WHITESPACE","\n  ",53],["T_PUBLIC","public",54],["T_WHITESPACE"," ",54],["T_FUNCTION","function",54],["T_WHITESPACE"," ",54],["T_STRING","getContainer",54],"(",")",";",["T_WHITESPACE","\n\n  ",54],["T_DOC_COMMENT","\/**\n   * Returns the cached container definition - if any.\n   *\n   * This also allows inspecting a built container for debugging purposes.\n   *\n   * @return array|null\n   *   The cached container definition or NULL if not found in cache.\n   *\/",56],["T_WHITESPACE","\n  ",63],["T_PUBLIC","public",64],["T_WHITESPACE"," ",64],["T_FUNCTION","function",64],["T_WHITESPACE"," ",64],["T_STRING","getCachedContainerDefinition",64],"(",")",";",["T_WHITESPACE","\n\n  ",64],["T_DOC_COMMENT","\/**\n   * Set the current site path.\n   *\n   * @param string $path\n   *   The current site path.\n   *\n   * @throws \\LogicException\n   *   In case the kernel is already booted.\n   *\/",66],["T_WHITESPACE","\n  ",74],["T_PUBLIC","public",75],["T_WHITESPACE"," ",75],["T_FUNCTION","function",75],["T_WHITESPACE"," ",75],["T_STRING","setSitePath",75],"(",["T_VARIABLE","$path",75],")",";",["T_WHITESPACE","\n\n  ",75],["T_DOC_COMMENT","\/**\n   * Get the site path.\n   *\n   * @return string\n   *   The current site path.\n   *\/",77],["T_WHITESPACE","\n  ",82],["T_PUBLIC","public",83],["T_WHITESPACE"," ",83],["T_FUNCTION","function",83],["T_WHITESPACE"," ",83],["T_STRING","getSitePath",83],"(",")",";",["T_WHITESPACE","\n\n  ",83],["T_DOC_COMMENT","\/**\n   * Gets the app root.\n   *\n   * @return string\n   *\/",85],["T_WHITESPACE","\n  ",89],["T_PUBLIC","public",90],["T_WHITESPACE"," ",90],["T_FUNCTION","function",90],["T_WHITESPACE"," ",90],["T_STRING","getAppRoot",90],"(",")",";",["T_WHITESPACE","\n\n  ",90],["T_DOC_COMMENT","\/**\n   * Updates the kernel's list of modules to the new list.\n   *\n   * The kernel needs to update its bundle list and container to match the new\n   * list.\n   *\n   * @param array $module_list\n   *   The new list of modules.\n   * @param array $module_filenames\n   *   List of module filenames, keyed by module name.\n   *\/",92],["T_WHITESPACE","\n  ",102],["T_PUBLIC","public",103],["T_WHITESPACE"," ",103],["T_FUNCTION","function",103],["T_WHITESPACE"," ",103],["T_STRING","updateModules",103],"(",["T_ARRAY","array",103],["T_WHITESPACE"," ",103],["T_VARIABLE","$module_list",103],",",["T_WHITESPACE"," ",103],["T_ARRAY","array",103],["T_WHITESPACE"," ",103],["T_VARIABLE","$module_filenames",103],["T_WHITESPACE"," ",103],"=",["T_WHITESPACE"," ",103],["T_ARRAY","array",103],"(",")",")",";",["T_WHITESPACE","\n\n  ",103],["T_DOC_COMMENT","\/**\n   * Force a container rebuild.\n   *\n   * @return \\Symfony\\Component\\DependencyInjection\\ContainerInterface\n   *\/",105],["T_WHITESPACE","\n  ",109],["T_PUBLIC","public",110],["T_WHITESPACE"," ",110],["T_FUNCTION","function",110],["T_WHITESPACE"," ",110],["T_STRING","rebuildContainer",110],"(",")",";",["T_WHITESPACE","\n\n  ",110],["T_DOC_COMMENT","\/**\n   * Invalidate the service container for the next request.\n   *\/",112],["T_WHITESPACE","\n  ",114],["T_PUBLIC","public",115],["T_WHITESPACE"," ",115],["T_FUNCTION","function",115],["T_WHITESPACE"," ",115],["T_STRING","invalidateContainer",115],"(",")",";",["T_WHITESPACE","\n\n  ",115],["T_DOC_COMMENT","\/**\n   * Prepare the kernel for handling a request without handling the request.\n   *\n   * @param \\Symfony\\Component\\HttpFoundation\\Request $request\n   *   The current request.\n   *\n   * @return $this\n   *\n   * @deprecated in Drupal 8.0.x and will be removed before 9.0.0. Only used by\n   *   legacy front-controller scripts.\n   *\/",117],["T_WHITESPACE","\n  ",127],["T_PUBLIC","public",128],["T_WHITESPACE"," ",128],["T_FUNCTION","function",128],["T_WHITESPACE"," ",128],["T_STRING","prepareLegacyRequest",128],"(",["T_STRING","Request",128],["T_WHITESPACE"," ",128],["T_VARIABLE","$request",128],")",";",["T_WHITESPACE","\n\n  ",128],["T_DOC_COMMENT","\/**\n   * Helper method that does request related initialization.\n   *\n   * @param \\Symfony\\Component\\HttpFoundation\\Request $request\n   *   The current request.\n   *\/",130],["T_WHITESPACE","\n  ",135],["T_PUBLIC","public",136],["T_WHITESPACE"," ",136],["T_FUNCTION","function",136],["T_WHITESPACE"," ",136],["T_STRING","preHandle",136],"(",["T_STRING","Request",136],["T_WHITESPACE"," ",136],["T_VARIABLE","$request",136],")",";",["T_WHITESPACE","\n\n  ",136],["T_DOC_COMMENT","\/**\n   * Helper method that loads legacy Drupal include files.\n   *\/",138],["T_WHITESPACE","\n  ",140],["T_PUBLIC","public",141],["T_WHITESPACE"," ",141],["T_FUNCTION","function",141],["T_WHITESPACE"," ",141],["T_STRING","loadLegacyIncludes",141],"(",")",";",["T_WHITESPACE","\n\n",141],"}",["T_WHITESPACE","\n",143]]