[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Core",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Test",3],";",["T_WHITESPACE","\n\n",3],["T_USE","use",5],["T_WHITESPACE"," ",5],["T_STRING","Drupal",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Component",5],["T_NS_SEPARATOR","\\",5],["T_STRING","FileSystem",5],["T_NS_SEPARATOR","\\",5],["T_STRING","FileSystem",5],";",["T_WHITESPACE","\n",5],["T_USE","use",6],["T_WHITESPACE"," ",6],["T_STRING","Drupal",6],["T_NS_SEPARATOR","\\",6],["T_STRING","Core",6],["T_NS_SEPARATOR","\\",6],["T_STRING","Database",6],["T_NS_SEPARATOR","\\",6],["T_STRING","ConnectionNotDefinedException",6],";",["T_WHITESPACE","\n",6],["T_USE","use",7],["T_WHITESPACE"," ",7],["T_STRING","Drupal",7],["T_NS_SEPARATOR","\\",7],["T_STRING","Core",7],["T_NS_SEPARATOR","\\",7],["T_STRING","Database",7],["T_NS_SEPARATOR","\\",7],["T_STRING","Database",7],";",["T_WHITESPACE","\n\n",7],["T_DOC_COMMENT","\/**\n * Provides helper methods for interacting with the Simpletest database.\n *\/",9],["T_WHITESPACE","\n",11],["T_CLASS","class",12],["T_WHITESPACE"," ",12],["T_STRING","TestDatabase",12],["T_WHITESPACE"," ",12],"{",["T_WHITESPACE","\n\n  ",12],["T_DOC_COMMENT","\/**\n   * A random number used to ensure that test fixtures are unique to each test\n   * method.\n   *\n   * @var int\n   *\/",14],["T_WHITESPACE","\n  ",19],["T_PROTECTED","protected",20],["T_WHITESPACE"," ",20],["T_VARIABLE","$lockId",20],";",["T_WHITESPACE","\n\n  ",20],["T_DOC_COMMENT","\/**\n   * The test database prefix.\n   *\n   * @var string\n   *\/",22],["T_WHITESPACE","\n  ",26],["T_PROTECTED","protected",27],["T_WHITESPACE"," ",27],["T_VARIABLE","$databasePrefix",27],";",["T_WHITESPACE","\n\n  ",27],["T_DOC_COMMENT","\/**\n   * Returns the database connection to the site running Simpletest.\n   *\n   * @return \\Drupal\\Core\\Database\\Connection\n   *   The database connection to use for inserting assertions.\n   *\n   * @see \\Drupal\\simpletest\\TestBase::prepareEnvironment()\n   *\/",29],["T_WHITESPACE","\n  ",36],["T_PUBLIC","public",37],["T_WHITESPACE"," ",37],["T_STATIC","static",37],["T_WHITESPACE"," ",37],["T_FUNCTION","function",37],["T_WHITESPACE"," ",37],["T_STRING","getConnection",37],"(",")",["T_WHITESPACE"," ",37],"{",["T_WHITESPACE","\n    ",37],["T_COMMENT","\/\/ Check whether there is a test runner connection.\n",38],["T_WHITESPACE","    ",39],["T_COMMENT","\/\/ @see run-tests.sh\n",39],["T_WHITESPACE","    ",40],["T_COMMENT","\/\/ @todo Convert Simpletest UI runner to create + use this connection, too.\n",40],["T_WHITESPACE","    ",41],["T_TRY","try",41],["T_WHITESPACE"," ",41],"{",["T_WHITESPACE","\n      ",41],["T_VARIABLE","$connection",42],["T_WHITESPACE"," ",42],"=",["T_WHITESPACE"," ",42],["T_STRING","Database",42],["T_DOUBLE_COLON","::",42],["T_STRING","getConnection",42],"(",["T_CONSTANT_ENCAPSED_STRING","'default'",42],",",["T_WHITESPACE"," ",42],["T_CONSTANT_ENCAPSED_STRING","'test-runner'",42],")",";",["T_WHITESPACE","\n    ",42],"}",["T_WHITESPACE","\n    ",43],["T_CATCH","catch",44],["T_WHITESPACE"," ",44],"(",["T_STRING","ConnectionNotDefinedException",44],["T_WHITESPACE"," ",44],["T_VARIABLE","$e",44],")",["T_WHITESPACE"," ",44],"{",["T_WHITESPACE","\n      ",44],["T_COMMENT","\/\/ Check whether there is a backup of the original default connection.\n",45],["T_WHITESPACE","      ",46],["T_COMMENT","\/\/ @see TestBase::prepareEnvironment()\n",46],["T_WHITESPACE","      ",47],["T_TRY","try",47],["T_WHITESPACE"," ",47],"{",["T_WHITESPACE","\n        ",47],["T_VARIABLE","$connection",48],["T_WHITESPACE"," ",48],"=",["T_WHITESPACE"," ",48],["T_STRING","Database",48],["T_DOUBLE_COLON","::",48],["T_STRING","getConnection",48],"(",["T_CONSTANT_ENCAPSED_STRING","'default'",48],",",["T_WHITESPACE"," ",48],["T_CONSTANT_ENCAPSED_STRING","'simpletest_original_default'",48],")",";",["T_WHITESPACE","\n      ",48],"}",["T_WHITESPACE","\n      ",49],["T_CATCH","catch",50],["T_WHITESPACE"," ",50],"(",["T_STRING","ConnectionNotDefinedException",50],["T_WHITESPACE"," ",50],["T_VARIABLE","$e",50],")",["T_WHITESPACE"," ",50],"{",["T_WHITESPACE","\n        ",50],["T_COMMENT","\/\/ If TestBase::prepareEnvironment() or TestBase::restoreEnvironment()\n",51],["T_WHITESPACE","        ",52],["T_COMMENT","\/\/ failed, the test-specific database connection does not exist\n",52],["T_WHITESPACE","        ",53],["T_COMMENT","\/\/ yet\/anymore, so fall back to the default of the (UI) test runner.\n",53],["T_WHITESPACE","        ",54],["T_VARIABLE","$connection",54],["T_WHITESPACE"," ",54],"=",["T_WHITESPACE"," ",54],["T_STRING","Database",54],["T_DOUBLE_COLON","::",54],["T_STRING","getConnection",54],"(",["T_CONSTANT_ENCAPSED_STRING","'default'",54],",",["T_WHITESPACE"," ",54],["T_CONSTANT_ENCAPSED_STRING","'default'",54],")",";",["T_WHITESPACE","\n      ",54],"}",["T_WHITESPACE","\n    ",55],"}",["T_WHITESPACE","\n    ",56],["T_RETURN","return",57],["T_WHITESPACE"," ",57],["T_VARIABLE","$connection",57],";",["T_WHITESPACE","\n  ",57],"}",["T_WHITESPACE","\n\n  ",58],["T_DOC_COMMENT","\/**\n   * TestDatabase constructor.\n   *\n   * @param string|null $db_prefix\n   *   If not provided a new test lock is generated.\n   *\n   * @throws \\InvalidArgumentException\n   *   Thrown when $db_prefix does not match the regular expression.\n   *\/",60],["T_WHITESPACE","\n  ",68],["T_PUBLIC","public",69],["T_WHITESPACE"," ",69],["T_FUNCTION","function",69],["T_WHITESPACE"," ",69],["T_STRING","__construct",69],"(",["T_VARIABLE","$db_prefix",69],["T_WHITESPACE"," ",69],"=",["T_WHITESPACE"," ",69],["T_STRING","NULL",69],")",["T_WHITESPACE"," ",69],"{",["T_WHITESPACE","\n    ",69],["T_IF","if",70],["T_WHITESPACE"," ",70],"(",["T_VARIABLE","$db_prefix",70],["T_WHITESPACE"," ",70],["T_IS_IDENTICAL","===",70],["T_WHITESPACE"," ",70],["T_STRING","NULL",70],")",["T_WHITESPACE"," ",70],"{",["T_WHITESPACE","\n      ",70],["T_VARIABLE","$this",71],["T_OBJECT_OPERATOR","->",71],["T_STRING","lockId",71],["T_WHITESPACE"," ",71],"=",["T_WHITESPACE"," ",71],["T_VARIABLE","$this",71],["T_OBJECT_OPERATOR","->",71],["T_STRING","getTestLock",71],"(",")",";",["T_WHITESPACE","\n      ",71],["T_VARIABLE","$this",72],["T_OBJECT_OPERATOR","->",72],["T_STRING","databasePrefix",72],["T_WHITESPACE"," ",72],"=",["T_WHITESPACE"," ",72],["T_CONSTANT_ENCAPSED_STRING","'test'",72],["T_WHITESPACE"," ",72],".",["T_WHITESPACE"," ",72],["T_VARIABLE","$this",72],["T_OBJECT_OPERATOR","->",72],["T_STRING","lockId",72],";",["T_WHITESPACE","\n    ",72],"}",["T_WHITESPACE","\n    ",73],["T_ELSE","else",74],["T_WHITESPACE"," ",74],"{",["T_WHITESPACE","\n      ",74],["T_VARIABLE","$this",75],["T_OBJECT_OPERATOR","->",75],["T_STRING","databasePrefix",75],["T_WHITESPACE"," ",75],"=",["T_WHITESPACE"," ",75],["T_VARIABLE","$db_prefix",75],";",["T_WHITESPACE","\n      ",75],["T_COMMENT","\/\/ It is possible that we're running a test inside a test. In which case\n",76],["T_WHITESPACE","      ",77],["T_COMMENT","\/\/ $db_prefix will be something like test12345678test90123456 and the\n",77],["T_WHITESPACE","      ",78],["T_COMMENT","\/\/ generated lock ID for the running test method would be 90123456.\n",78],["T_WHITESPACE","      ",79],["T_STRING","preg_match",79],"(",["T_CONSTANT_ENCAPSED_STRING","'\/test(\\d+)$\/'",79],",",["T_WHITESPACE"," ",79],["T_VARIABLE","$db_prefix",79],",",["T_WHITESPACE"," ",79],["T_VARIABLE","$matches",79],")",";",["T_WHITESPACE","\n      ",79],["T_IF","if",80],["T_WHITESPACE"," ",80],"(","!",["T_ISSET","isset",80],"(",["T_VARIABLE","$matches",80],"[",["T_LNUMBER","1",80],"]",")",")",["T_WHITESPACE"," ",80],"{",["T_WHITESPACE","\n        ",80],["T_THROW","throw",81],["T_WHITESPACE"," ",81],["T_NEW","new",81],["T_WHITESPACE"," ",81],["T_NS_SEPARATOR","\\",81],["T_STRING","InvalidArgumentException",81],"(","\"",["T_ENCAPSED_AND_WHITESPACE","Invalid database prefix: ",81],["T_VARIABLE","$db_prefix",81],"\"",")",";",["T_WHITESPACE","\n      ",81],"}",["T_WHITESPACE","\n      ",82],["T_VARIABLE","$this",83],["T_OBJECT_OPERATOR","->",83],["T_STRING","lockId",83],["T_WHITESPACE"," ",83],"=",["T_WHITESPACE"," ",83],["T_VARIABLE","$matches",83],"[",["T_LNUMBER","1",83],"]",";",["T_WHITESPACE","\n    ",83],"}",["T_WHITESPACE","\n  ",84],"}",["T_WHITESPACE","\n\n  ",85],["T_DOC_COMMENT","\/**\n   * Gets the relative path to the test site directory.\n   *\n   * @return string\n   *   The relative path to the test site directory.\n   *\/",87],["T_WHITESPACE","\n  ",92],["T_PUBLIC","public",93],["T_WHITESPACE"," ",93],["T_FUNCTION","function",93],["T_WHITESPACE"," ",93],["T_STRING","getTestSitePath",93],"(",")",["T_WHITESPACE"," ",93],"{",["T_WHITESPACE","\n    ",93],["T_RETURN","return",94],["T_WHITESPACE"," ",94],["T_CONSTANT_ENCAPSED_STRING","'sites\/simpletest\/'",94],["T_WHITESPACE"," ",94],".",["T_WHITESPACE"," ",94],["T_VARIABLE","$this",94],["T_OBJECT_OPERATOR","->",94],["T_STRING","lockId",94],";",["T_WHITESPACE","\n  ",94],"}",["T_WHITESPACE","\n\n  ",95],["T_DOC_COMMENT","\/**\n   * Gets the test database prefix.\n   *\n   * @return string\n   *   The test database prefix.\n   *\/",97],["T_WHITESPACE","\n  ",102],["T_PUBLIC","public",103],["T_WHITESPACE"," ",103],["T_FUNCTION","function",103],["T_WHITESPACE"," ",103],["T_STRING","getDatabasePrefix",103],"(",")",["T_WHITESPACE"," ",103],"{",["T_WHITESPACE","\n    ",103],["T_RETURN","return",104],["T_WHITESPACE"," ",104],["T_VARIABLE","$this",104],["T_OBJECT_OPERATOR","->",104],["T_STRING","databasePrefix",104],";",["T_WHITESPACE","\n  ",104],"}",["T_WHITESPACE","\n\n  ",105],["T_DOC_COMMENT","\/**\n   * Generates a unique lock ID for the test method.\n   *\n   * @return int\n   *   The unique lock ID for the test method.\n   *\/",107],["T_WHITESPACE","\n  ",112],["T_PROTECTED","protected",113],["T_WHITESPACE"," ",113],["T_FUNCTION","function",113],["T_WHITESPACE"," ",113],["T_STRING","getTestLock",113],"(",")",["T_WHITESPACE"," ",113],"{",["T_WHITESPACE","\n    ",113],["T_COMMENT","\/\/ Ensure that the generated lock ID is not in use, which may happen when\n",114],["T_WHITESPACE","    ",115],["T_COMMENT","\/\/ tests are run concurrently.\n",115],["T_WHITESPACE","    ",116],["T_DO","do",116],["T_WHITESPACE"," ",116],"{",["T_WHITESPACE","\n      ",116],["T_VARIABLE","$lock_id",117],["T_WHITESPACE"," ",117],"=",["T_WHITESPACE"," ",117],["T_STRING","mt_rand",117],"(",["T_LNUMBER","10000000",117],",",["T_WHITESPACE"," ",117],["T_LNUMBER","99999999",117],")",";",["T_WHITESPACE","\n      ",117],["T_COMMENT","\/\/ If we're only running with a concurrency of 1 there's no need to create\n",118],["T_WHITESPACE","      ",119],["T_COMMENT","\/\/ a test lock file as there is no chance of the random number generated\n",119],["T_WHITESPACE","      ",120],["T_COMMENT","\/\/ clashing.\n",120],["T_WHITESPACE","      ",121],["T_IF","if",121],["T_WHITESPACE"," ",121],"(",["T_STRING","getenv",121],"(",["T_CONSTANT_ENCAPSED_STRING","'RUN_TESTS_CONCURRENCY'",121],")",["T_WHITESPACE"," ",121],">",["T_WHITESPACE"," ",121],["T_LNUMBER","1",121],["T_WHITESPACE"," ",121],["T_BOOLEAN_AND","&&",121],["T_WHITESPACE"," ",121],"@",["T_STRING","symlink",121],"(",["T_FILE","__FILE__",121],",",["T_WHITESPACE"," ",121],["T_VARIABLE","$this",121],["T_OBJECT_OPERATOR","->",121],["T_STRING","getLockFile",121],"(",["T_VARIABLE","$lock_id",121],")",")",["T_WHITESPACE"," ",121],["T_IS_IDENTICAL","===",121],["T_WHITESPACE"," ",121],["T_STRING","FALSE",121],")",["T_WHITESPACE"," ",121],"{",["T_WHITESPACE","\n        ",121],["T_VARIABLE","$lock_id",122],["T_WHITESPACE"," ",122],"=",["T_WHITESPACE"," ",122],["T_STRING","NULL",122],";",["T_WHITESPACE","\n      ",122],"}",["T_WHITESPACE","\n    ",123],"}",["T_WHITESPACE"," ",124],["T_WHILE","while",124],["T_WHITESPACE"," ",124],"(",["T_VARIABLE","$lock_id",124],["T_WHITESPACE"," ",124],["T_IS_IDENTICAL","===",124],["T_WHITESPACE"," ",124],["T_STRING","NULL",124],")",";",["T_WHITESPACE","\n    ",124],["T_RETURN","return",125],["T_WHITESPACE"," ",125],["T_VARIABLE","$lock_id",125],";",["T_WHITESPACE","\n  ",125],"}",["T_WHITESPACE","\n\n  ",126],["T_DOC_COMMENT","\/**\n   * Releases all test locks.\n   *\n   * This should only be called once all the test fixtures have been cleaned up.\n   *\/",128],["T_WHITESPACE","\n  ",132],["T_PUBLIC","public",133],["T_WHITESPACE"," ",133],["T_STATIC","static",133],["T_WHITESPACE"," ",133],["T_FUNCTION","function",133],["T_WHITESPACE"," ",133],["T_STRING","releaseAllTestLocks",133],"(",")",["T_WHITESPACE"," ",133],"{",["T_WHITESPACE","\n    ",133],["T_VARIABLE","$tmp",134],["T_WHITESPACE"," ",134],"=",["T_WHITESPACE"," ",134],["T_STRING","file_directory_os_temp",134],"(",")",";",["T_WHITESPACE","\n    ",134],["T_VARIABLE","$dir",135],["T_WHITESPACE"," ",135],"=",["T_WHITESPACE"," ",135],["T_STRING","dir",135],"(",["T_VARIABLE","$tmp",135],")",";",["T_WHITESPACE","\n    ",135],["T_WHILE","while",136],["T_WHITESPACE"," ",136],"(","(",["T_VARIABLE","$entry",136],["T_WHITESPACE"," ",136],"=",["T_WHITESPACE"," ",136],["T_VARIABLE","$dir",136],["T_OBJECT_OPERATOR","->",136],["T_STRING","read",136],"(",")",")",["T_WHITESPACE"," ",136],["T_IS_NOT_IDENTICAL","!==",136],["T_WHITESPACE"," ",136],["T_STRING","FALSE",136],")",["T_WHITESPACE"," ",136],"{",["T_WHITESPACE","\n      ",136],["T_IF","if",137],["T_WHITESPACE"," ",137],"(",["T_VARIABLE","$entry",137],["T_WHITESPACE"," ",137],["T_IS_IDENTICAL","===",137],["T_WHITESPACE"," ",137],["T_CONSTANT_ENCAPSED_STRING","'.'",137],["T_WHITESPACE"," ",137],["T_BOOLEAN_OR","||",137],["T_WHITESPACE"," ",137],["T_VARIABLE","$entry",137],["T_WHITESPACE"," ",137],["T_IS_IDENTICAL","===",137],["T_WHITESPACE"," ",137],["T_CONSTANT_ENCAPSED_STRING","'..'",137],")",["T_WHITESPACE"," ",137],"{",["T_WHITESPACE","\n        ",137],["T_CONTINUE","continue",138],";",["T_WHITESPACE","\n      ",138],"}",["T_WHITESPACE","\n      ",139],["T_VARIABLE","$entry_path",140],["T_WHITESPACE"," ",140],"=",["T_WHITESPACE"," ",140],["T_VARIABLE","$tmp",140],["T_WHITESPACE"," ",140],".",["T_WHITESPACE"," ",140],["T_CONSTANT_ENCAPSED_STRING","'\/'",140],["T_WHITESPACE"," ",140],".",["T_WHITESPACE"," ",140],["T_VARIABLE","$entry",140],";",["T_WHITESPACE","\n      ",140],["T_IF","if",141],["T_WHITESPACE"," ",141],"(",["T_STRING","preg_match",141],"(",["T_CONSTANT_ENCAPSED_STRING","'\/^test_\\d+\/'",141],",",["T_WHITESPACE"," ",141],["T_VARIABLE","$entry",141],")",["T_WHITESPACE"," ",141],["T_BOOLEAN_AND","&&",141],["T_WHITESPACE"," ",141],["T_STRING","is_link",141],"(",["T_VARIABLE","$entry_path",141],")",")",["T_WHITESPACE"," ",141],"{",["T_WHITESPACE","\n        ",141],["T_STRING","unlink",142],"(",["T_VARIABLE","$entry_path",142],")",";",["T_WHITESPACE","\n      ",142],"}",["T_WHITESPACE","\n    ",143],"}",["T_WHITESPACE","\n  ",144],"}",["T_WHITESPACE","\n\n  ",145],["T_DOC_COMMENT","\/**\n   * Gets the lock file path.\n   *\n   * @param int $lock_id\n   *   The test method lock ID.\n   *\n   * @return string\n   *   A file path to the symbolic link that prevents the lock ID being re-used.\n   *\/",147],["T_WHITESPACE","\n  ",155],["T_PROTECTED","protected",156],["T_WHITESPACE"," ",156],["T_FUNCTION","function",156],["T_WHITESPACE"," ",156],["T_STRING","getLockFile",156],"(",["T_VARIABLE","$lock_id",156],")",["T_WHITESPACE"," ",156],"{",["T_WHITESPACE","\n    ",156],["T_RETURN","return",157],["T_WHITESPACE"," ",157],["T_STRING","FileSystem",157],["T_DOUBLE_COLON","::",157],["T_STRING","getOsTemporaryDirectory",157],"(",")",["T_WHITESPACE"," ",157],".",["T_WHITESPACE"," ",157],["T_CONSTANT_ENCAPSED_STRING","'\/test_'",157],["T_WHITESPACE"," ",157],".",["T_WHITESPACE"," ",157],["T_VARIABLE","$lock_id",157],";",["T_WHITESPACE","\n  ",157],"}",["T_WHITESPACE","\n\n",158],"}",["T_WHITESPACE","\n",160]]