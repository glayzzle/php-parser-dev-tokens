[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Core",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Form",3],";",["T_WHITESPACE","\n\n",3],["T_USE","use",5],["T_WHITESPACE"," ",5],["T_STRING","Symfony",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Component",5],["T_NS_SEPARATOR","\\",5],["T_STRING","HttpFoundation",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Response",5],";",["T_WHITESPACE","\n\n",5],["T_DOC_COMMENT","\/**\n * A wrapper containing a response which is to be enforced upon delivery.\n *\n * The FormBuilder throws an EnforcedResponseException whenever a form\n * desires to explicitly set a response object. Exception handlers capable of\n * setting the response should extract the response object of such an exception\n * using EnforcedResponse::createFromException(). Then wrap it into an\n * EnforcedResponse object and replace the original response with the wrapped\n * response.\n *\n * @see Drupal\\Core\\EventSubscriber\\EnforcedFormResponseSubscriber::onKernelException()\n * @see Drupal\\Core\\EventSubscriber\\DefaultExceptionSubscriber::createHtmlResponse()\n * @see Drupal\\Core\\EventSubscriber\\DefaultExceptionHtmlSubscriber::createResponse()\n *\/",7],["T_WHITESPACE","\n",20],["T_CLASS","class",21],["T_WHITESPACE"," ",21],["T_STRING","EnforcedResponse",21],["T_WHITESPACE"," ",21],["T_EXTENDS","extends",21],["T_WHITESPACE"," ",21],["T_STRING","Response",21],["T_WHITESPACE"," ",21],"{",["T_WHITESPACE","\n\n  ",21],["T_DOC_COMMENT","\/**\n   * The wrapped response object.\n   *\n   * @var \\Symfony\\Component\\HttpFoundation\\Response;\n   *\/",23],["T_WHITESPACE","\n  ",27],["T_PROTECTED","protected",28],["T_WHITESPACE"," ",28],["T_VARIABLE","$response",28],";",["T_WHITESPACE","\n\n  ",28],["T_DOC_COMMENT","\/**\n   * Constructs a new enforced response from the given exception.\n   *\n   * Note that it is necessary to traverse the exception chain when searching\n   * for an enforced response. Otherwise it would be impossible to find an\n   * exception thrown from within a twig template.\n   *\n   * @param \\Exception $e\n   *   The exception where the enforced response is to be extracted from.\n   *\n   * @return \\Drupal\\Core\\Form\\EnforcedResponse|null\n   *   The enforced response or NULL if the exception chain does not contain a\n   *   \\Drupal\\Core\\Form\\EnforcedResponseException exception.\n   *\/",30],["T_WHITESPACE","\n  ",43],["T_PUBLIC","public",44],["T_WHITESPACE"," ",44],["T_STATIC","static",44],["T_WHITESPACE"," ",44],["T_FUNCTION","function",44],["T_WHITESPACE"," ",44],["T_STRING","createFromException",44],"(",["T_NS_SEPARATOR","\\",44],["T_STRING","Exception",44],["T_WHITESPACE"," ",44],["T_VARIABLE","$e",44],")",["T_WHITESPACE"," ",44],"{",["T_WHITESPACE","\n    ",44],["T_WHILE","while",45],["T_WHITESPACE"," ",45],"(",["T_VARIABLE","$e",45],")",["T_WHITESPACE"," ",45],"{",["T_WHITESPACE","\n      ",45],["T_IF","if",46],["T_WHITESPACE"," ",46],"(",["T_VARIABLE","$e",46],["T_WHITESPACE"," ",46],["T_INSTANCEOF","instanceof",46],["T_WHITESPACE"," ",46],["T_STRING","EnforcedResponseException",46],")",["T_WHITESPACE"," ",46],"{",["T_WHITESPACE","\n        ",46],["T_RETURN","return",47],["T_WHITESPACE"," ",47],["T_NEW","new",47],["T_WHITESPACE"," ",47],["T_STATIC","static",47],"(",["T_VARIABLE","$e",47],["T_OBJECT_OPERATOR","->",47],["T_STRING","getResponse",47],"(",")",")",";",["T_WHITESPACE","\n      ",47],"}",["T_WHITESPACE","\n\n      ",48],["T_VARIABLE","$e",50],["T_WHITESPACE"," ",50],"=",["T_WHITESPACE"," ",50],["T_VARIABLE","$e",50],["T_OBJECT_OPERATOR","->",50],["T_STRING","getPrevious",50],"(",")",";",["T_WHITESPACE","\n    ",50],"}",["T_WHITESPACE","\n  ",51],"}",["T_WHITESPACE","\n\n  ",52],["T_DOC_COMMENT","\/**\n   * Constructs an enforced response.\n   *\n   * Use EnforcedResponse::createFromException() instead.\n   *\n   * @param \\Symfony\\Component\\HttpFoundation\\Response $response\n   *   The response to wrap.\n   *\/",54],["T_WHITESPACE","\n  ",61],["T_PUBLIC","public",62],["T_WHITESPACE"," ",62],["T_FUNCTION","function",62],["T_WHITESPACE"," ",62],["T_STRING","__construct",62],"(",["T_STRING","Response",62],["T_WHITESPACE"," ",62],["T_VARIABLE","$response",62],")",["T_WHITESPACE"," ",62],"{",["T_WHITESPACE","\n    ",62],["T_STRING","parent",63],["T_DOUBLE_COLON","::",63],["T_STRING","__construct",63],"(",["T_CONSTANT_ENCAPSED_STRING","''",63],",",["T_WHITESPACE"," ",63],["T_LNUMBER","500",63],")",";",["T_WHITESPACE","\n    ",63],["T_VARIABLE","$this",64],["T_OBJECT_OPERATOR","->",64],["T_STRING","response",64],["T_WHITESPACE"," ",64],"=",["T_WHITESPACE"," ",64],["T_VARIABLE","$response",64],";",["T_WHITESPACE","\n  ",64],"}",["T_WHITESPACE","\n\n  ",65],["T_DOC_COMMENT","\/**\n   * Returns the wrapped response.\n   *\n   * @return \\Symfony\\Component\\HttpFoundation\\Response\n   *   The wrapped response.\n   *\/",67],["T_WHITESPACE","\n  ",72],["T_PUBLIC","public",73],["T_WHITESPACE"," ",73],["T_FUNCTION","function",73],["T_WHITESPACE"," ",73],["T_STRING","getResponse",73],"(",")",["T_WHITESPACE"," ",73],"{",["T_WHITESPACE","\n    ",73],["T_RETURN","return",74],["T_WHITESPACE"," ",74],["T_VARIABLE","$this",74],["T_OBJECT_OPERATOR","->",74],["T_STRING","response",74],";",["T_WHITESPACE","\n  ",74],"}",["T_WHITESPACE","\n\n",75],"}",["T_WHITESPACE","\n",77]]