[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Core",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Form",3],";",["T_WHITESPACE","\n\n",3],["T_USE","use",5],["T_WHITESPACE"," ",5],["T_STRING","Drupal",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Core",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Config",5],["T_NS_SEPARATOR","\\",5],["T_STRING","ConfigFactoryInterface",5],";",["T_WHITESPACE","\n",5],["T_USE","use",6],["T_WHITESPACE"," ",6],["T_STRING","Drupal",6],["T_NS_SEPARATOR","\\",6],["T_STRING","Core",6],["T_NS_SEPARATOR","\\",6],["T_STRING","DependencyInjection",6],["T_NS_SEPARATOR","\\",6],["T_STRING","ContainerInjectionInterface",6],";",["T_WHITESPACE","\n",6],["T_USE","use",7],["T_WHITESPACE"," ",7],["T_STRING","Drupal",7],["T_NS_SEPARATOR","\\",7],["T_STRING","Core",7],["T_NS_SEPARATOR","\\",7],["T_STRING","DependencyInjection",7],["T_NS_SEPARATOR","\\",7],["T_STRING","DependencySerializationTrait",7],";",["T_WHITESPACE","\n",7],["T_USE","use",8],["T_WHITESPACE"," ",8],["T_STRING","Drupal",8],["T_NS_SEPARATOR","\\",8],["T_STRING","Core",8],["T_NS_SEPARATOR","\\",8],["T_STRING","Logger",8],["T_NS_SEPARATOR","\\",8],["T_STRING","LoggerChannelTrait",8],";",["T_WHITESPACE","\n",8],["T_USE","use",9],["T_WHITESPACE"," ",9],["T_STRING","Drupal",9],["T_NS_SEPARATOR","\\",9],["T_STRING","Core",9],["T_NS_SEPARATOR","\\",9],["T_STRING","Routing",9],["T_NS_SEPARATOR","\\",9],["T_STRING","LinkGeneratorTrait",9],";",["T_WHITESPACE","\n",9],["T_USE","use",10],["T_WHITESPACE"," ",10],["T_STRING","Drupal",10],["T_NS_SEPARATOR","\\",10],["T_STRING","Core",10],["T_NS_SEPARATOR","\\",10],["T_STRING","Routing",10],["T_NS_SEPARATOR","\\",10],["T_STRING","RedirectDestinationTrait",10],";",["T_WHITESPACE","\n",10],["T_USE","use",11],["T_WHITESPACE"," ",11],["T_STRING","Drupal",11],["T_NS_SEPARATOR","\\",11],["T_STRING","Core",11],["T_NS_SEPARATOR","\\",11],["T_STRING","Routing",11],["T_NS_SEPARATOR","\\",11],["T_STRING","UrlGeneratorTrait",11],";",["T_WHITESPACE","\n",11],["T_USE","use",12],["T_WHITESPACE"," ",12],["T_STRING","Drupal",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Core",12],["T_NS_SEPARATOR","\\",12],["T_STRING","StringTranslation",12],["T_NS_SEPARATOR","\\",12],["T_STRING","StringTranslationTrait",12],";",["T_WHITESPACE","\n",12],["T_USE","use",13],["T_WHITESPACE"," ",13],["T_STRING","Symfony",13],["T_NS_SEPARATOR","\\",13],["T_STRING","Component",13],["T_NS_SEPARATOR","\\",13],["T_STRING","DependencyInjection",13],["T_NS_SEPARATOR","\\",13],["T_STRING","ContainerInterface",13],";",["T_WHITESPACE","\n",13],["T_USE","use",14],["T_WHITESPACE"," ",14],["T_STRING","Symfony",14],["T_NS_SEPARATOR","\\",14],["T_STRING","Component",14],["T_NS_SEPARATOR","\\",14],["T_STRING","HttpFoundation",14],["T_NS_SEPARATOR","\\",14],["T_STRING","RequestStack",14],";",["T_WHITESPACE","\n\n",14],["T_DOC_COMMENT","\/**\n * Provides a base class for forms.\n *\n * This class exists as a mid-point between dependency injection through\n * ContainerInjectionInterface, and a less-structured use of traits which\n * default to using the \\Drupal accessor for service discovery.\n *\n * To properly inject services, override create() and use the setters provided\n * by the traits to inject the needed services.\n *\n * @code\n * public static function create($container) {\n *   $form = new static();\n *   \/\/ In this example we only need string translation so we use the\n *   \/\/ setStringTranslation() method provided by StringTranslationTrait.\n *   $form->setStringTranslation($container->get('string_translation'));\n *   return $form;\n * }\n * @endcode\n *\n * Alternately, do not use FormBase. A class can implement FormInterface, use\n * the traits it needs, and inject services from the container as required.\n *\n * @ingroup form_api\n *\n * @see \\Drupal\\Core\\DependencyInjection\\ContainerInjectionInterface\n *\/",16],["T_WHITESPACE","\n",42],["T_ABSTRACT","abstract",43],["T_WHITESPACE"," ",43],["T_CLASS","class",43],["T_WHITESPACE"," ",43],["T_STRING","FormBase",43],["T_WHITESPACE"," ",43],["T_IMPLEMENTS","implements",43],["T_WHITESPACE"," ",43],["T_STRING","FormInterface",43],",",["T_WHITESPACE"," ",43],["T_STRING","ContainerInjectionInterface",43],["T_WHITESPACE"," ",43],"{",["T_WHITESPACE","\n\n  ",43],["T_USE","use",45],["T_WHITESPACE"," ",45],["T_STRING","DependencySerializationTrait",45],";",["T_WHITESPACE","\n  ",45],["T_USE","use",46],["T_WHITESPACE"," ",46],["T_STRING","LinkGeneratorTrait",46],";",["T_WHITESPACE","\n  ",46],["T_USE","use",47],["T_WHITESPACE"," ",47],["T_STRING","LoggerChannelTrait",47],";",["T_WHITESPACE","\n  ",47],["T_USE","use",48],["T_WHITESPACE"," ",48],["T_STRING","RedirectDestinationTrait",48],";",["T_WHITESPACE","\n  ",48],["T_USE","use",49],["T_WHITESPACE"," ",49],["T_STRING","StringTranslationTrait",49],";",["T_WHITESPACE","\n  ",49],["T_USE","use",50],["T_WHITESPACE"," ",50],["T_STRING","UrlGeneratorTrait",50],";",["T_WHITESPACE","\n\n  ",50],["T_DOC_COMMENT","\/**\n   * The request stack.\n   *\n   * @var \\Symfony\\Component\\HttpFoundation\\RequestStack\n   *\/",52],["T_WHITESPACE","\n  ",56],["T_PROTECTED","protected",57],["T_WHITESPACE"," ",57],["T_VARIABLE","$requestStack",57],";",["T_WHITESPACE","\n\n  ",57],["T_DOC_COMMENT","\/**\n   * The config factory.\n   *\n   * Subclasses should use the self::config() method, which may be overridden to\n   * address specific needs when loading config, rather than this property\n   * directly. See \\Drupal\\Core\\Form\\ConfigFormBase::config() for an example of\n   * this.\n   *\n   * @var \\Drupal\\Core\\Config\\ConfigFactoryInterface\n   *\/",59],["T_WHITESPACE","\n  ",68],["T_PROTECTED","protected",69],["T_WHITESPACE"," ",69],["T_VARIABLE","$configFactory",69],";",["T_WHITESPACE","\n\n  ",69],["T_DOC_COMMENT","\/**\n   * The route match.\n   *\n   * @var \\Drupal\\Core\\Routing\\RouteMatchInterface\n   *\/",71],["T_WHITESPACE","\n  ",75],["T_PROTECTED","protected",76],["T_WHITESPACE"," ",76],["T_VARIABLE","$routeMatch",76],";",["T_WHITESPACE","\n\n  ",76],["T_DOC_COMMENT","\/**\n   * {@inheritdoc}\n   *\/",78],["T_WHITESPACE","\n  ",80],["T_PUBLIC","public",81],["T_WHITESPACE"," ",81],["T_STATIC","static",81],["T_WHITESPACE"," ",81],["T_FUNCTION","function",81],["T_WHITESPACE"," ",81],["T_STRING","create",81],"(",["T_STRING","ContainerInterface",81],["T_WHITESPACE"," ",81],["T_VARIABLE","$container",81],")",["T_WHITESPACE"," ",81],"{",["T_WHITESPACE","\n    ",81],["T_RETURN","return",82],["T_WHITESPACE"," ",82],["T_NEW","new",82],["T_WHITESPACE"," ",82],["T_STATIC","static",82],"(",")",";",["T_WHITESPACE","\n  ",82],"}",["T_WHITESPACE","\n\n  ",83],["T_DOC_COMMENT","\/**\n   * {@inheritdoc}\n   *\/",85],["T_WHITESPACE","\n  ",87],["T_PUBLIC","public",88],["T_WHITESPACE"," ",88],["T_FUNCTION","function",88],["T_WHITESPACE"," ",88],["T_STRING","validateForm",88],"(",["T_ARRAY","array",88],["T_WHITESPACE"," ",88],"&",["T_VARIABLE","$form",88],",",["T_WHITESPACE"," ",88],["T_STRING","FormStateInterface",88],["T_WHITESPACE"," ",88],["T_VARIABLE","$form_state",88],")",["T_WHITESPACE"," ",88],"{",["T_WHITESPACE","\n    ",88],["T_COMMENT","\/\/ Validation is optional.\n",89],["T_WHITESPACE","  ",90],"}",["T_WHITESPACE","\n\n  ",90],["T_DOC_COMMENT","\/**\n   * Retrieves a configuration object.\n   *\n   * This is the main entry point to the configuration API. Calling\n   * @code $this->config('book.admin') @endcode will return a configuration\n   * object in which the book module can store its administrative settings.\n   *\n   * @param string $name\n   *   The name of the configuration object to retrieve. The name corresponds to\n   *   a configuration file. For @code \\Drupal::config('book.admin') @endcode,\n   *   the config object returned will contain the contents of book.admin\n   *   configuration file.\n   *\n   * @return \\Drupal\\Core\\Config\\ImmutableConfig\n   *   A configuration object.\n   *\/",92],["T_WHITESPACE","\n  ",107],["T_PROTECTED","protected",108],["T_WHITESPACE"," ",108],["T_FUNCTION","function",108],["T_WHITESPACE"," ",108],["T_STRING","config",108],"(",["T_VARIABLE","$name",108],")",["T_WHITESPACE"," ",108],"{",["T_WHITESPACE","\n    ",108],["T_RETURN","return",109],["T_WHITESPACE"," ",109],["T_VARIABLE","$this",109],["T_OBJECT_OPERATOR","->",109],["T_STRING","configFactory",109],"(",")",["T_OBJECT_OPERATOR","->",109],["T_STRING","get",109],"(",["T_VARIABLE","$name",109],")",";",["T_WHITESPACE","\n  ",109],"}",["T_WHITESPACE","\n\n  ",110],["T_DOC_COMMENT","\/**\n   * Gets the config factory for this form.\n   *\n   * When accessing configuration values, use $this->config(). Only use this\n   * when the config factory needs to be manipulated directly.\n   *\n   * @return \\Drupal\\Core\\Config\\ConfigFactoryInterface\n   *\/",112],["T_WHITESPACE","\n  ",119],["T_PROTECTED","protected",120],["T_WHITESPACE"," ",120],["T_FUNCTION","function",120],["T_WHITESPACE"," ",120],["T_STRING","configFactory",120],"(",")",["T_WHITESPACE"," ",120],"{",["T_WHITESPACE","\n    ",120],["T_IF","if",121],["T_WHITESPACE"," ",121],"(","!",["T_VARIABLE","$this",121],["T_OBJECT_OPERATOR","->",121],["T_STRING","configFactory",121],")",["T_WHITESPACE"," ",121],"{",["T_WHITESPACE","\n      ",121],["T_VARIABLE","$this",122],["T_OBJECT_OPERATOR","->",122],["T_STRING","configFactory",122],["T_WHITESPACE"," ",122],"=",["T_WHITESPACE"," ",122],["T_VARIABLE","$this",122],["T_OBJECT_OPERATOR","->",122],["T_STRING","container",122],"(",")",["T_OBJECT_OPERATOR","->",122],["T_STRING","get",122],"(",["T_CONSTANT_ENCAPSED_STRING","'config.factory'",122],")",";",["T_WHITESPACE","\n    ",122],"}",["T_WHITESPACE","\n    ",123],["T_RETURN","return",124],["T_WHITESPACE"," ",124],["T_VARIABLE","$this",124],["T_OBJECT_OPERATOR","->",124],["T_STRING","configFactory",124],";",["T_WHITESPACE","\n  ",124],"}",["T_WHITESPACE","\n\n  ",125],["T_DOC_COMMENT","\/**\n   * Sets the config factory for this form.\n   *\n   * @param \\Drupal\\Core\\Config\\ConfigFactoryInterface $config_factory\n   *   The config factory.\n   *\n   * @return $this\n   *\/",127],["T_WHITESPACE","\n  ",134],["T_PUBLIC","public",135],["T_WHITESPACE"," ",135],["T_FUNCTION","function",135],["T_WHITESPACE"," ",135],["T_STRING","setConfigFactory",135],"(",["T_STRING","ConfigFactoryInterface",135],["T_WHITESPACE"," ",135],["T_VARIABLE","$config_factory",135],")",["T_WHITESPACE"," ",135],"{",["T_WHITESPACE","\n    ",135],["T_VARIABLE","$this",136],["T_OBJECT_OPERATOR","->",136],["T_STRING","configFactory",136],["T_WHITESPACE"," ",136],"=",["T_WHITESPACE"," ",136],["T_VARIABLE","$config_factory",136],";",["T_WHITESPACE","\n    ",136],["T_RETURN","return",137],["T_WHITESPACE"," ",137],["T_VARIABLE","$this",137],";",["T_WHITESPACE","\n  ",137],"}",["T_WHITESPACE","\n\n  ",138],["T_DOC_COMMENT","\/**\n   * Resets the configuration factory.\n   *\/",140],["T_WHITESPACE","\n  ",142],["T_PUBLIC","public",143],["T_WHITESPACE"," ",143],["T_FUNCTION","function",143],["T_WHITESPACE"," ",143],["T_STRING","resetConfigFactory",143],"(",")",["T_WHITESPACE"," ",143],"{",["T_WHITESPACE","\n    ",143],["T_VARIABLE","$this",144],["T_OBJECT_OPERATOR","->",144],["T_STRING","configFactory",144],["T_WHITESPACE"," ",144],"=",["T_WHITESPACE"," ",144],["T_STRING","NULL",144],";",["T_WHITESPACE","\n  ",144],"}",["T_WHITESPACE","\n\n  ",145],["T_DOC_COMMENT","\/**\n   * Gets the request object.\n   *\n   * @return \\Symfony\\Component\\HttpFoundation\\Request $request\n   *   The request object.\n   *\/",147],["T_WHITESPACE","\n  ",152],["T_PROTECTED","protected",153],["T_WHITESPACE"," ",153],["T_FUNCTION","function",153],["T_WHITESPACE"," ",153],["T_STRING","getRequest",153],"(",")",["T_WHITESPACE"," ",153],"{",["T_WHITESPACE","\n    ",153],["T_IF","if",154],["T_WHITESPACE"," ",154],"(","!",["T_VARIABLE","$this",154],["T_OBJECT_OPERATOR","->",154],["T_STRING","requestStack",154],")",["T_WHITESPACE"," ",154],"{",["T_WHITESPACE","\n      ",154],["T_VARIABLE","$this",155],["T_OBJECT_OPERATOR","->",155],["T_STRING","requestStack",155],["T_WHITESPACE"," ",155],"=",["T_WHITESPACE"," ",155],["T_NS_SEPARATOR","\\",155],["T_STRING","Drupal",155],["T_DOUBLE_COLON","::",155],["T_STRING","service",155],"(",["T_CONSTANT_ENCAPSED_STRING","'request_stack'",155],")",";",["T_WHITESPACE","\n    ",155],"}",["T_WHITESPACE","\n    ",156],["T_RETURN","return",157],["T_WHITESPACE"," ",157],["T_VARIABLE","$this",157],["T_OBJECT_OPERATOR","->",157],["T_STRING","requestStack",157],["T_OBJECT_OPERATOR","->",157],["T_STRING","getCurrentRequest",157],"(",")",";",["T_WHITESPACE","\n  ",157],"}",["T_WHITESPACE","\n\n  ",158],["T_DOC_COMMENT","\/**\n   * Gets the route match.\n   *\n   * @return \\Drupal\\Core\\Routing\\RouteMatchInterface\n   *\/",160],["T_WHITESPACE","\n  ",164],["T_PROTECTED","protected",165],["T_WHITESPACE"," ",165],["T_FUNCTION","function",165],["T_WHITESPACE"," ",165],["T_STRING","getRouteMatch",165],"(",")",["T_WHITESPACE"," ",165],"{",["T_WHITESPACE","\n    ",165],["T_IF","if",166],["T_WHITESPACE"," ",166],"(","!",["T_VARIABLE","$this",166],["T_OBJECT_OPERATOR","->",166],["T_STRING","routeMatch",166],")",["T_WHITESPACE"," ",166],"{",["T_WHITESPACE","\n      ",166],["T_VARIABLE","$this",167],["T_OBJECT_OPERATOR","->",167],["T_STRING","routeMatch",167],["T_WHITESPACE"," ",167],"=",["T_WHITESPACE"," ",167],["T_NS_SEPARATOR","\\",167],["T_STRING","Drupal",167],["T_DOUBLE_COLON","::",167],["T_STRING","routeMatch",167],"(",")",";",["T_WHITESPACE","\n    ",167],"}",["T_WHITESPACE","\n    ",168],["T_RETURN","return",169],["T_WHITESPACE"," ",169],["T_VARIABLE","$this",169],["T_OBJECT_OPERATOR","->",169],["T_STRING","routeMatch",169],";",["T_WHITESPACE","\n  ",169],"}",["T_WHITESPACE","\n\n  ",170],["T_DOC_COMMENT","\/**\n   * Sets the request stack object to use.\n   *\n   * @param \\Symfony\\Component\\HttpFoundation\\RequestStack $request_stack\n   *   The request stack object.\n   *\n   * @return $this\n   *\/",172],["T_WHITESPACE","\n  ",179],["T_PUBLIC","public",180],["T_WHITESPACE"," ",180],["T_FUNCTION","function",180],["T_WHITESPACE"," ",180],["T_STRING","setRequestStack",180],"(",["T_STRING","RequestStack",180],["T_WHITESPACE"," ",180],["T_VARIABLE","$request_stack",180],")",["T_WHITESPACE"," ",180],"{",["T_WHITESPACE","\n    ",180],["T_VARIABLE","$this",181],["T_OBJECT_OPERATOR","->",181],["T_STRING","requestStack",181],["T_WHITESPACE"," ",181],"=",["T_WHITESPACE"," ",181],["T_VARIABLE","$request_stack",181],";",["T_WHITESPACE","\n    ",181],["T_RETURN","return",182],["T_WHITESPACE"," ",182],["T_VARIABLE","$this",182],";",["T_WHITESPACE","\n  ",182],"}",["T_WHITESPACE","\n\n  ",183],["T_DOC_COMMENT","\/**\n   * Gets the current user.\n   *\n   * @return \\Drupal\\Core\\Session\\AccountInterface\n   *   The current user.\n   *\/",185],["T_WHITESPACE","\n  ",190],["T_PROTECTED","protected",191],["T_WHITESPACE"," ",191],["T_FUNCTION","function",191],["T_WHITESPACE"," ",191],["T_STRING","currentUser",191],"(",")",["T_WHITESPACE"," ",191],"{",["T_WHITESPACE","\n    ",191],["T_RETURN","return",192],["T_WHITESPACE"," ",192],["T_NS_SEPARATOR","\\",192],["T_STRING","Drupal",192],["T_DOUBLE_COLON","::",192],["T_STRING","currentUser",192],"(",")",";",["T_WHITESPACE","\n  ",192],"}",["T_WHITESPACE","\n\n  ",193],["T_DOC_COMMENT","\/**\n   * Returns the service container.\n   *\n   * This method is marked private to prevent sub-classes from retrieving\n   * services from the container through it. Instead,\n   * \\Drupal\\Core\\DependencyInjection\\ContainerInjectionInterface should be used\n   * for injecting services.\n   *\n   * @return \\Symfony\\Component\\DependencyInjection\\ContainerInterface $container\n   *   The service container.\n   *\/",195],["T_WHITESPACE","\n  ",205],["T_PRIVATE","private",206],["T_WHITESPACE"," ",206],["T_FUNCTION","function",206],["T_WHITESPACE"," ",206],["T_STRING","container",206],"(",")",["T_WHITESPACE"," ",206],"{",["T_WHITESPACE","\n    ",206],["T_RETURN","return",207],["T_WHITESPACE"," ",207],["T_NS_SEPARATOR","\\",207],["T_STRING","Drupal",207],["T_DOUBLE_COLON","::",207],["T_STRING","getContainer",207],"(",")",";",["T_WHITESPACE","\n  ",207],"}",["T_WHITESPACE","\n\n  ",208],["T_DOC_COMMENT","\/**\n   * Gets the logger for a specific channel.\n   *\n   * This method exists for backward-compatibility between FormBase and\n   * LoggerChannelTrait. Use LoggerChannelTrait::getLogger() instead.\n   *\n   * @param string $channel\n   *   The name of the channel. Can be any string, but the general practice is\n   *   to use the name of the subsystem calling this.\n   *\n   * @return \\Psr\\Log\\LoggerInterface\n   *   The logger for the given channel.\n   *\/",210],["T_WHITESPACE","\n  ",222],["T_PROTECTED","protected",223],["T_WHITESPACE"," ",223],["T_FUNCTION","function",223],["T_WHITESPACE"," ",223],["T_STRING","logger",223],"(",["T_VARIABLE","$channel",223],")",["T_WHITESPACE"," ",223],"{",["T_WHITESPACE","\n    ",223],["T_RETURN","return",224],["T_WHITESPACE"," ",224],["T_VARIABLE","$this",224],["T_OBJECT_OPERATOR","->",224],["T_STRING","getLogger",224],"(",["T_VARIABLE","$channel",224],")",";",["T_WHITESPACE","\n  ",224],"}",["T_WHITESPACE","\n\n",225],"}",["T_WHITESPACE","\n",227]]