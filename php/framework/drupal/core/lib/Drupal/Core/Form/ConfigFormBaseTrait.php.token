[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Core",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Form",3],";",["T_WHITESPACE","\n\n",3],["T_USE","use",5],["T_WHITESPACE"," ",5],["T_STRING","Drupal",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Core",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Config",5],["T_NS_SEPARATOR","\\",5],["T_STRING","ConfigFactoryInterface",5],";",["T_WHITESPACE","\n\n",5],["T_DOC_COMMENT","\/**\n * Provides access to configuration for forms.\n *\n * This trait provides a config() method that returns override free and mutable\n * config objects if the configuration name is in the array returned by the\n * getEditableConfigNames() implementation.\n *\n * Forms that present configuration to the user have to take care not to save\n * configuration overrides to the stored configuration since overrides are often\n * environment specific. Default values of form elements should be obtained from\n * override free configuration objects. However, if a form reacts to\n * configuration in any way, for example sends an email to the system.site:mail\n * address, then it is important that the value comes from a configuration\n * object with overrides. Therefore, override free and editable configuration\n * objects are limited to those listed by the getEditableConfigNames() method.\n *\/",7],["T_WHITESPACE","\n",22],["T_TRAIT","trait",23],["T_WHITESPACE"," ",23],["T_STRING","ConfigFormBaseTrait",23],["T_WHITESPACE"," ",23],"{",["T_WHITESPACE","\n\n  ",23],["T_DOC_COMMENT","\/**\n   * Retrieves a configuration object.\n   *\n   * @param string $name\n   *   The name of the configuration object to retrieve. The name corresponds to\n   *   a configuration file. For @code \\Drupal::config('book.admin') @endcode,\n   *   the config object returned will contain the contents of book.admin\n   *   configuration file.\n   *\n   * @return \\Drupal\\Core\\Config\\Config|\\Drupal\\Core\\Config\\ImmutableConfig\n   *   An editable configuration object if the given name is listed in the\n   *   getEditableConfigNames() method or an immutable configuration object if\n   *   not.\n   *\/",25],["T_WHITESPACE","\n  ",38],["T_PROTECTED","protected",39],["T_WHITESPACE"," ",39],["T_FUNCTION","function",39],["T_WHITESPACE"," ",39],["T_STRING","config",39],"(",["T_VARIABLE","$name",39],")",["T_WHITESPACE"," ",39],"{",["T_WHITESPACE","\n    ",39],["T_DOC_COMMENT","\/** @var \\Drupal\\Core\\Config\\ConfigFactoryInterface $config_factory *\/",40],["T_WHITESPACE","\n    ",40],["T_IF","if",41],["T_WHITESPACE"," ",41],"(",["T_STRING","method_exists",41],"(",["T_VARIABLE","$this",41],",",["T_WHITESPACE"," ",41],["T_CONSTANT_ENCAPSED_STRING","'configFactory'",41],")",")",["T_WHITESPACE"," ",41],"{",["T_WHITESPACE","\n      ",41],["T_VARIABLE","$config_factory",42],["T_WHITESPACE"," ",42],"=",["T_WHITESPACE"," ",42],["T_VARIABLE","$this",42],["T_OBJECT_OPERATOR","->",42],["T_STRING","configFactory",42],"(",")",";",["T_WHITESPACE","\n    ",42],"}",["T_WHITESPACE","\n    ",43],["T_ELSEIF","elseif",44],["T_WHITESPACE"," ",44],"(",["T_STRING","property_exists",44],"(",["T_VARIABLE","$this",44],",",["T_WHITESPACE"," ",44],["T_CONSTANT_ENCAPSED_STRING","'configFactory'",44],")",")",["T_WHITESPACE"," ",44],"{",["T_WHITESPACE","\n      ",44],["T_VARIABLE","$config_factory",45],["T_WHITESPACE"," ",45],"=",["T_WHITESPACE"," ",45],["T_VARIABLE","$this",45],["T_OBJECT_OPERATOR","->",45],["T_STRING","configFactory",45],";",["T_WHITESPACE","\n    ",45],"}",["T_WHITESPACE","\n    ",46],["T_IF","if",47],["T_WHITESPACE"," ",47],"(","!",["T_ISSET","isset",47],"(",["T_VARIABLE","$config_factory",47],")",["T_WHITESPACE"," ",47],["T_BOOLEAN_OR","||",47],["T_WHITESPACE"," ",47],"!","(",["T_VARIABLE","$config_factory",47],["T_WHITESPACE"," ",47],["T_INSTANCEOF","instanceof",47],["T_WHITESPACE"," ",47],["T_STRING","ConfigFactoryInterface",47],")",")",["T_WHITESPACE"," ",47],"{",["T_WHITESPACE","\n      ",47],["T_THROW","throw",48],["T_WHITESPACE"," ",48],["T_NEW","new",48],["T_WHITESPACE"," ",48],["T_NS_SEPARATOR","\\",48],["T_STRING","LogicException",48],"(",["T_CONSTANT_ENCAPSED_STRING","'No config factory available for ConfigFormBaseTrait'",48],")",";",["T_WHITESPACE","\n    ",48],"}",["T_WHITESPACE","\n    ",49],["T_IF","if",50],["T_WHITESPACE"," ",50],"(",["T_STRING","in_array",50],"(",["T_VARIABLE","$name",50],",",["T_WHITESPACE"," ",50],["T_VARIABLE","$this",50],["T_OBJECT_OPERATOR","->",50],["T_STRING","getEditableConfigNames",50],"(",")",")",")",["T_WHITESPACE"," ",50],"{",["T_WHITESPACE","\n      ",50],["T_COMMENT","\/\/ Get a mutable object from the factory.\n",51],["T_WHITESPACE","      ",52],["T_VARIABLE","$config",52],["T_WHITESPACE"," ",52],"=",["T_WHITESPACE"," ",52],["T_VARIABLE","$config_factory",52],["T_OBJECT_OPERATOR","->",52],["T_STRING","getEditable",52],"(",["T_VARIABLE","$name",52],")",";",["T_WHITESPACE","\n    ",52],"}",["T_WHITESPACE","\n    ",53],["T_ELSE","else",54],["T_WHITESPACE"," ",54],"{",["T_WHITESPACE","\n      ",54],["T_VARIABLE","$config",55],["T_WHITESPACE"," ",55],"=",["T_WHITESPACE"," ",55],["T_VARIABLE","$config_factory",55],["T_OBJECT_OPERATOR","->",55],["T_STRING","get",55],"(",["T_VARIABLE","$name",55],")",";",["T_WHITESPACE","\n    ",55],"}",["T_WHITESPACE","\n    ",56],["T_RETURN","return",57],["T_WHITESPACE"," ",57],["T_VARIABLE","$config",57],";",["T_WHITESPACE","\n  ",57],"}",["T_WHITESPACE","\n\n  ",58],["T_DOC_COMMENT","\/**\n   * Gets the configuration names that will be editable.\n   *\n   * @return array\n   *   An array of configuration object names that are editable if called in\n   *   conjunction with the trait's config() method.\n   *\/",60],["T_WHITESPACE","\n  ",66],["T_ABSTRACT","abstract",67],["T_WHITESPACE"," ",67],["T_PROTECTED","protected",67],["T_WHITESPACE"," ",67],["T_FUNCTION","function",67],["T_WHITESPACE"," ",67],["T_STRING","getEditableConfigNames",67],"(",")",";",["T_WHITESPACE","\n\n",67],"}",["T_WHITESPACE","\n",69]]