[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Core",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Entity",3],";",["T_WHITESPACE","\n\n",3],["T_USE","use",5],["T_WHITESPACE"," ",5],["T_STRING","Drupal",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Core",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Access",5],["T_NS_SEPARATOR","\\",5],["T_STRING","AccessibleInterface",5],";",["T_WHITESPACE","\n",5],["T_USE","use",6],["T_WHITESPACE"," ",6],["T_STRING","Drupal",6],["T_NS_SEPARATOR","\\",6],["T_STRING","Core",6],["T_NS_SEPARATOR","\\",6],["T_STRING","Cache",6],["T_NS_SEPARATOR","\\",6],["T_STRING","CacheableDependencyInterface",6],";",["T_WHITESPACE","\n",6],["T_USE","use",7],["T_WHITESPACE"," ",7],["T_STRING","Drupal",7],["T_NS_SEPARATOR","\\",7],["T_STRING","Core",7],["T_NS_SEPARATOR","\\",7],["T_STRING","Cache",7],["T_NS_SEPARATOR","\\",7],["T_STRING","RefinableCacheableDependencyInterface",7],";",["T_WHITESPACE","\n\n",7],["T_DOC_COMMENT","\/**\n * Defines a common interface for all entity objects.\n *\n * @ingroup entity_api\n *\/",9],["T_WHITESPACE","\n",13],["T_INTERFACE","interface",14],["T_WHITESPACE"," ",14],["T_STRING","EntityInterface",14],["T_WHITESPACE"," ",14],["T_EXTENDS","extends",14],["T_WHITESPACE"," ",14],["T_STRING","AccessibleInterface",14],",",["T_WHITESPACE"," ",14],["T_STRING","CacheableDependencyInterface",14],",",["T_WHITESPACE"," ",14],["T_STRING","RefinableCacheableDependencyInterface",14],["T_WHITESPACE"," ",14],"{",["T_WHITESPACE","\n\n  ",14],["T_DOC_COMMENT","\/**\n   * Gets the entity UUID (Universally Unique Identifier).\n   *\n   * The UUID is guaranteed to be unique and can be used to identify an entity\n   * across multiple systems.\n   *\n   * @return string|null\n   *   The UUID of the entity, or NULL if the entity does not have one.\n   *\/",16],["T_WHITESPACE","\n  ",24],["T_PUBLIC","public",25],["T_WHITESPACE"," ",25],["T_FUNCTION","function",25],["T_WHITESPACE"," ",25],["T_STRING","uuid",25],"(",")",";",["T_WHITESPACE","\n\n  ",25],["T_DOC_COMMENT","\/**\n   * Gets the identifier.\n   *\n   * @return string|int|null\n   *   The entity identifier, or NULL if the object does not yet have an\n   *   identifier.\n   *\/",27],["T_WHITESPACE","\n  ",33],["T_PUBLIC","public",34],["T_WHITESPACE"," ",34],["T_FUNCTION","function",34],["T_WHITESPACE"," ",34],["T_STRING","id",34],"(",")",";",["T_WHITESPACE","\n\n  ",34],["T_DOC_COMMENT","\/**\n   * Gets the language of the entity.\n   *\n   * @return \\Drupal\\Core\\Language\\LanguageInterface\n   *   The language object.\n   *\/",36],["T_WHITESPACE","\n  ",41],["T_PUBLIC","public",42],["T_WHITESPACE"," ",42],["T_FUNCTION","function",42],["T_WHITESPACE"," ",42],["T_STRING","language",42],"(",")",";",["T_WHITESPACE","\n\n  ",42],["T_DOC_COMMENT","\/**\n   * Determines whether the entity is new.\n   *\n   * Usually an entity is new if no ID exists for it yet. However, entities may\n   * be enforced to be new with existing IDs too.\n   *\n   * @return bool\n   *   TRUE if the entity is new, or FALSE if the entity has already been saved.\n   *\n   * @see \\Drupal\\Core\\Entity\\EntityInterface::enforceIsNew()\n   *\/",44],["T_WHITESPACE","\n  ",54],["T_PUBLIC","public",55],["T_WHITESPACE"," ",55],["T_FUNCTION","function",55],["T_WHITESPACE"," ",55],["T_STRING","isNew",55],"(",")",";",["T_WHITESPACE","\n\n  ",55],["T_DOC_COMMENT","\/**\n   * Enforces an entity to be new.\n   *\n   * Allows migrations to create entities with pre-defined IDs by forcing the\n   * entity to be new before saving.\n   *\n   * @param bool $value\n   *   (optional) Whether the entity should be forced to be new. Defaults to\n   *   TRUE.\n   *\n   * @return $this\n   *\n   * @see \\Drupal\\Core\\Entity\\EntityInterface::isNew()\n   *\/",57],["T_WHITESPACE","\n  ",70],["T_PUBLIC","public",71],["T_WHITESPACE"," ",71],["T_FUNCTION","function",71],["T_WHITESPACE"," ",71],["T_STRING","enforceIsNew",71],"(",["T_VARIABLE","$value",71],["T_WHITESPACE"," ",71],"=",["T_WHITESPACE"," ",71],["T_STRING","TRUE",71],")",";",["T_WHITESPACE","\n\n  ",71],["T_DOC_COMMENT","\/**\n   * Gets the ID of the type of the entity.\n   *\n   * @return string\n   *   The entity type ID.\n   *\/",73],["T_WHITESPACE","\n  ",78],["T_PUBLIC","public",79],["T_WHITESPACE"," ",79],["T_FUNCTION","function",79],["T_WHITESPACE"," ",79],["T_STRING","getEntityTypeId",79],"(",")",";",["T_WHITESPACE","\n\n  ",79],["T_DOC_COMMENT","\/**\n   * Gets the bundle of the entity.\n   *\n   * @return string\n   *   The bundle of the entity. Defaults to the entity type ID if the entity\n   *   type does not make use of different bundles.\n   *\/",81],["T_WHITESPACE","\n  ",87],["T_PUBLIC","public",88],["T_WHITESPACE"," ",88],["T_FUNCTION","function",88],["T_WHITESPACE"," ",88],["T_STRING","bundle",88],"(",")",";",["T_WHITESPACE","\n\n  ",88],["T_DOC_COMMENT","\/**\n   * Gets the label of the entity.\n   *\n   * @return string|null\n   *   The label of the entity, or NULL if there is no label defined.\n   *\/",90],["T_WHITESPACE","\n  ",95],["T_PUBLIC","public",96],["T_WHITESPACE"," ",96],["T_FUNCTION","function",96],["T_WHITESPACE"," ",96],["T_STRING","label",96],"(",")",";",["T_WHITESPACE","\n\n  ",96],["T_DOC_COMMENT","\/**\n   * Gets the URL object for the entity.\n   *\n   * @param string $rel\n   *   The link relationship type, for example: canonical or edit-form.\n   * @param array $options\n   *   See \\Drupal\\Core\\Routing\\UrlGeneratorInterface::generateFromRoute() for\n   *   the available options.\n   *\n   * @return \\Drupal\\Core\\Url\n   *   The URL object.\n   *\n   * @deprecated in Drupal 8.0.0, intended to be removed in Drupal 9.0.0\n   *   Use \\Drupal\\Core\\Entity\\EntityInterface::toUrl() instead.\n   *\n   * @see \\Drupal\\Core\\Entity\\EntityInterface::toUrl\n   *\/",98],["T_WHITESPACE","\n  ",114],["T_PUBLIC","public",115],["T_WHITESPACE"," ",115],["T_FUNCTION","function",115],["T_WHITESPACE"," ",115],["T_STRING","urlInfo",115],"(",["T_VARIABLE","$rel",115],["T_WHITESPACE"," ",115],"=",["T_WHITESPACE"," ",115],["T_CONSTANT_ENCAPSED_STRING","'canonical'",115],",",["T_WHITESPACE"," ",115],["T_ARRAY","array",115],["T_WHITESPACE"," ",115],["T_VARIABLE","$options",115],["T_WHITESPACE"," ",115],"=",["T_WHITESPACE"," ",115],["T_ARRAY","array",115],"(",")",")",";",["T_WHITESPACE","\n\n  ",115],["T_DOC_COMMENT","\/**\n   * Gets the URL object for the entity.\n   *\n   * The entity must have an id already. Content entities usually get their IDs\n   * by saving them.\n   *\n   * URI templates might be set in the links array in an annotation, for\n   * example:\n   * @code\n   * links = {\n   *   \"canonical\" = \"\/node\/{node}\",\n   *   \"edit-form\" = \"\/node\/{node}\/edit\",\n   *   \"version-history\" = \"\/node\/{node}\/revisions\"\n   * }\n   * @endcode\n   * or specified in a callback function set like:\n   * @code\n   * uri_callback = \"comment_uri\",\n   * @endcode\n   * If the path is not set in the links array, the uri_callback function is\n   * used for setting the path. If this does not exist and the link relationship\n   * type is canonical, the path is set using the default template:\n   * entity\/entityType\/id.\n   *\n   * @param string $rel\n   *   The link relationship type, for example: canonical or edit-form.\n   * @param array $options\n   *   See \\Drupal\\Core\\Routing\\UrlGeneratorInterface::generateFromRoute() for\n   *   the available options.\n   *\n   * @return \\Drupal\\Core\\Url\n   *   The URL object.\n   *\n   * @throws \\Drupal\\Core\\Entity\\EntityMalformedException\n   * @throws \\Drupal\\Core\\Entity\\Exception\\UndefinedLinkTemplateException\n   *\/",117],["T_WHITESPACE","\n  ",152],["T_PUBLIC","public",153],["T_WHITESPACE"," ",153],["T_FUNCTION","function",153],["T_WHITESPACE"," ",153],["T_STRING","toUrl",153],"(",["T_VARIABLE","$rel",153],["T_WHITESPACE"," ",153],"=",["T_WHITESPACE"," ",153],["T_CONSTANT_ENCAPSED_STRING","'canonical'",153],",",["T_WHITESPACE"," ",153],["T_ARRAY","array",153],["T_WHITESPACE"," ",153],["T_VARIABLE","$options",153],["T_WHITESPACE"," ",153],"=",["T_WHITESPACE"," ",153],["T_ARRAY","array",153],"(",")",")",";",["T_WHITESPACE","\n\n  ",153],["T_DOC_COMMENT","\/**\n   * Gets the public URL for this entity.\n   *\n   * @param string $rel\n   *   The link relationship type, for example: canonical or edit-form.\n   * @param array $options\n   *   See \\Drupal\\Core\\Routing\\UrlGeneratorInterface::generateFromRoute() for\n   *   the available options.\n   *\n   * @return string\n   *   The URL for this entity.\n   *\n   * @deprecated in Drupal 8.0.0, intended to be removed in Drupal 9.0.0\n   *   Please use toUrl() instead.\n   *\n   * @see \\Drupal\\Core\\Entity\\EntityInterface::toUrl\n   *\/",155],["T_WHITESPACE","\n  ",171],["T_PUBLIC","public",172],["T_WHITESPACE"," ",172],["T_FUNCTION","function",172],["T_WHITESPACE"," ",172],["T_STRING","url",172],"(",["T_VARIABLE","$rel",172],["T_WHITESPACE"," ",172],"=",["T_WHITESPACE"," ",172],["T_CONSTANT_ENCAPSED_STRING","'canonical'",172],",",["T_WHITESPACE"," ",172],["T_VARIABLE","$options",172],["T_WHITESPACE"," ",172],"=",["T_WHITESPACE"," ",172],["T_ARRAY","array",172],"(",")",")",";",["T_WHITESPACE","\n\n  ",172],["T_DOC_COMMENT","\/**\n   * Deprecated way of generating a link to the entity. See toLink().\n   *\n   * @param string|null $text\n   *   (optional) The link text for the anchor tag as a translated string.\n   *   If NULL, it will use the entity's label. Defaults to NULL.\n   * @param string $rel\n   *   (optional) The link relationship type. Defaults to 'canonical'.\n   * @param array $options\n   *   See \\Drupal\\Core\\Routing\\UrlGeneratorInterface::generateFromRoute() for\n   *   the available options.\n   *\n   * @return string\n   *   An HTML string containing a link to the entity.\n   *\n   * @deprecated in Drupal 8.0.0, intended to be removed in Drupal 9.0.0\n   *   Please use toLink() instead.\n   *\n   * @see \\Drupal\\Core\\Entity\\EntityInterface::toLink\n   *\/",174],["T_WHITESPACE","\n  ",193],["T_PUBLIC","public",194],["T_WHITESPACE"," ",194],["T_FUNCTION","function",194],["T_WHITESPACE"," ",194],["T_STRING","link",194],"(",["T_VARIABLE","$text",194],["T_WHITESPACE"," ",194],"=",["T_WHITESPACE"," ",194],["T_STRING","NULL",194],",",["T_WHITESPACE"," ",194],["T_VARIABLE","$rel",194],["T_WHITESPACE"," ",194],"=",["T_WHITESPACE"," ",194],["T_CONSTANT_ENCAPSED_STRING","'canonical'",194],",",["T_WHITESPACE"," ",194],["T_ARRAY","array",194],["T_WHITESPACE"," ",194],["T_VARIABLE","$options",194],["T_WHITESPACE"," ",194],"=",["T_WHITESPACE"," ",194],"[","]",")",";",["T_WHITESPACE","\n\n  ",194],["T_DOC_COMMENT","\/**\n   * Generates the HTML for a link to this entity.\n   *\n   * @param string|null $text\n   *   (optional) The link text for the anchor tag as a translated string.\n   *   If NULL, it will use the entity's label. Defaults to NULL.\n   * @param string $rel\n   *   (optional) The link relationship type. Defaults to 'canonical'.\n   * @param array $options\n   *   See \\Drupal\\Core\\Routing\\UrlGeneratorInterface::generateFromRoute() for\n   *   the available options.\n   *\n   * @return \\Drupal\\Core\\Link\n   *   A Link to the entity.\n   *\n   * @throws \\Drupal\\Core\\Entity\\EntityMalformedException\n   * @throws \\Drupal\\Core\\Entity\\Exception\\UndefinedLinkTemplateException\n   *\/",196],["T_WHITESPACE","\n  ",213],["T_PUBLIC","public",214],["T_WHITESPACE"," ",214],["T_FUNCTION","function",214],["T_WHITESPACE"," ",214],["T_STRING","toLink",214],"(",["T_VARIABLE","$text",214],["T_WHITESPACE"," ",214],"=",["T_WHITESPACE"," ",214],["T_STRING","NULL",214],",",["T_WHITESPACE"," ",214],["T_VARIABLE","$rel",214],["T_WHITESPACE"," ",214],"=",["T_WHITESPACE"," ",214],["T_CONSTANT_ENCAPSED_STRING","'canonical'",214],",",["T_WHITESPACE"," ",214],["T_ARRAY","array",214],["T_WHITESPACE"," ",214],["T_VARIABLE","$options",214],["T_WHITESPACE"," ",214],"=",["T_WHITESPACE"," ",214],"[","]",")",";",["T_WHITESPACE","\n\n  ",214],["T_DOC_COMMENT","\/**\n   * Indicates if a link template exists for a given key.\n   *\n   * @param string $key\n   *   The link type.\n   *\n   * @return bool\n   *   TRUE if the link template exists, FALSE otherwise.\n   *\/",216],["T_WHITESPACE","\n  ",224],["T_PUBLIC","public",225],["T_WHITESPACE"," ",225],["T_FUNCTION","function",225],["T_WHITESPACE"," ",225],["T_STRING","hasLinkTemplate",225],"(",["T_VARIABLE","$key",225],")",";",["T_WHITESPACE","\n\n  ",225],["T_DOC_COMMENT","\/**\n   * Gets a list of URI relationships supported by this entity.\n   *\n   * @return string[]\n   *   An array of link relationships supported by this entity.\n   *\/",227],["T_WHITESPACE","\n  ",232],["T_PUBLIC","public",233],["T_WHITESPACE"," ",233],["T_FUNCTION","function",233],["T_WHITESPACE"," ",233],["T_STRING","uriRelationships",233],"(",")",";",["T_WHITESPACE","\n\n  ",233],["T_DOC_COMMENT","\/**\n   * Loads an entity.\n   *\n   * @param mixed $id\n   *   The id of the entity to load.\n   *\n   * @return static\n   *   The entity object or NULL if there is no entity with the given ID.\n   *\/",235],["T_WHITESPACE","\n  ",243],["T_PUBLIC","public",244],["T_WHITESPACE"," ",244],["T_STATIC","static",244],["T_WHITESPACE"," ",244],["T_FUNCTION","function",244],["T_WHITESPACE"," ",244],["T_STRING","load",244],"(",["T_VARIABLE","$id",244],")",";",["T_WHITESPACE","\n\n  ",244],["T_DOC_COMMENT","\/**\n   * Loads one or more entities.\n   *\n   * @param array $ids\n   *   An array of entity IDs, or NULL to load all entities.\n   *\n   * @return static[]\n   *   An array of entity objects indexed by their IDs.\n   *\/",246],["T_WHITESPACE","\n  ",254],["T_PUBLIC","public",255],["T_WHITESPACE"," ",255],["T_STATIC","static",255],["T_WHITESPACE"," ",255],["T_FUNCTION","function",255],["T_WHITESPACE"," ",255],["T_STRING","loadMultiple",255],"(",["T_ARRAY","array",255],["T_WHITESPACE"," ",255],["T_VARIABLE","$ids",255],["T_WHITESPACE"," ",255],"=",["T_WHITESPACE"," ",255],["T_STRING","NULL",255],")",";",["T_WHITESPACE","\n\n  ",255],["T_DOC_COMMENT","\/**\n   * Constructs a new entity object, without permanently saving it.\n   *\n   * @param array $values\n   *   (optional) An array of values to set, keyed by property name. If the\n   *   entity type has bundles, the bundle key has to be specified.\n   *\n   * @return static\n   *   The entity object.\n   *\/",257],["T_WHITESPACE","\n  ",266],["T_PUBLIC","public",267],["T_WHITESPACE"," ",267],["T_STATIC","static",267],["T_WHITESPACE"," ",267],["T_FUNCTION","function",267],["T_WHITESPACE"," ",267],["T_STRING","create",267],"(",["T_ARRAY","array",267],["T_WHITESPACE"," ",267],["T_VARIABLE","$values",267],["T_WHITESPACE"," ",267],"=",["T_WHITESPACE"," ",267],["T_ARRAY","array",267],"(",")",")",";",["T_WHITESPACE","\n\n  ",267],["T_DOC_COMMENT","\/**\n   * Saves an entity permanently.\n   *\n   * When saving existing entities, the entity is assumed to be complete,\n   * partial updates of entities are not supported.\n   *\n   * @return int\n   *   Either SAVED_NEW or SAVED_UPDATED, depending on the operation performed.\n   *\n   * @throws \\Drupal\\Core\\Entity\\EntityStorageException\n   *   In case of failures an exception is thrown.\n   *\/",269],["T_WHITESPACE","\n  ",280],["T_PUBLIC","public",281],["T_WHITESPACE"," ",281],["T_FUNCTION","function",281],["T_WHITESPACE"," ",281],["T_STRING","save",281],"(",")",";",["T_WHITESPACE","\n\n  ",281],["T_DOC_COMMENT","\/**\n   * Deletes an entity permanently.\n   *\n   * @throws \\Drupal\\Core\\Entity\\EntityStorageException\n   *   In case of failures an exception is thrown.\n   *\/",283],["T_WHITESPACE","\n  ",288],["T_PUBLIC","public",289],["T_WHITESPACE"," ",289],["T_FUNCTION","function",289],["T_WHITESPACE"," ",289],["T_STRING","delete",289],"(",")",";",["T_WHITESPACE","\n\n  ",289],["T_DOC_COMMENT","\/**\n   * Acts on an entity before the presave hook is invoked.\n   *\n   * Used before the entity is saved and before invoking the presave hook. Note\n   * that in case of translatable content entities this callback is only fired\n   * on their current translation. It is up to the developer to iterate\n   * over all translations if needed. This is different from its counterpart in\n   * the Field API, FieldItemListInterface::preSave(), which is fired on all\n   * field translations automatically.\n   * @todo Adjust existing implementations and the documentation according to\n   *   https:\/\/www.drupal.org\/node\/2577609 to have a consistent API.\n   *\n   * @param \\Drupal\\Core\\Entity\\EntityStorageInterface $storage\n   *   The entity storage object.\n   *\n   * @see \\Drupal\\Core\\Field\\FieldItemListInterface::preSave()\n   *\n   * @throws \\Exception\n   *   When there is a problem that should prevent saving the entity.\n   *\/",291],["T_WHITESPACE","\n  ",310],["T_PUBLIC","public",311],["T_WHITESPACE"," ",311],["T_FUNCTION","function",311],["T_WHITESPACE"," ",311],["T_STRING","preSave",311],"(",["T_STRING","EntityStorageInterface",311],["T_WHITESPACE"," ",311],["T_VARIABLE","$storage",311],")",";",["T_WHITESPACE","\n\n  ",311],["T_DOC_COMMENT","\/**\n   * Acts on a saved entity before the insert or update hook is invoked.\n   *\n   * Used after the entity is saved, but before invoking the insert or update\n   * hook. Note that in case of translatable content entities this callback is\n   * only fired on their current translation. It is up to the developer to\n   * iterate over all translations if needed.\n   *\n   * @param \\Drupal\\Core\\Entity\\EntityStorageInterface $storage\n   *   The entity storage object.\n   * @param bool $update\n   *   TRUE if the entity has been updated, or FALSE if it has been inserted.\n   *\/",313],["T_WHITESPACE","\n  ",325],["T_PUBLIC","public",326],["T_WHITESPACE"," ",326],["T_FUNCTION","function",326],["T_WHITESPACE"," ",326],["T_STRING","postSave",326],"(",["T_STRING","EntityStorageInterface",326],["T_WHITESPACE"," ",326],["T_VARIABLE","$storage",326],",",["T_WHITESPACE"," ",326],["T_VARIABLE","$update",326],["T_WHITESPACE"," ",326],"=",["T_WHITESPACE"," ",326],["T_STRING","TRUE",326],")",";",["T_WHITESPACE","\n\n  ",326],["T_DOC_COMMENT","\/**\n   * Changes the values of an entity before it is created.\n   *\n   * Load defaults for example.\n   *\n   * @param \\Drupal\\Core\\Entity\\EntityStorageInterface $storage\n   *   The entity storage object.\n   * @param mixed[] $values\n   *   An array of values to set, keyed by property name. If the entity type has\n   *   bundles the bundle key has to be specified.\n   *\/",328],["T_WHITESPACE","\n  ",338],["T_PUBLIC","public",339],["T_WHITESPACE"," ",339],["T_STATIC","static",339],["T_WHITESPACE"," ",339],["T_FUNCTION","function",339],["T_WHITESPACE"," ",339],["T_STRING","preCreate",339],"(",["T_STRING","EntityStorageInterface",339],["T_WHITESPACE"," ",339],["T_VARIABLE","$storage",339],",",["T_WHITESPACE"," ",339],["T_ARRAY","array",339],["T_WHITESPACE"," ",339],"&",["T_VARIABLE","$values",339],")",";",["T_WHITESPACE","\n\n  ",339],["T_DOC_COMMENT","\/**\n   * Acts on a created entity before hooks are invoked.\n   *\n   * Used after the entity is created, but before saving the entity and before\n   * any of the presave hooks are invoked.\n   *\n   * See the @link entity_crud Entity CRUD topic @endlink for more information.\n   *\n   * @param \\Drupal\\Core\\Entity\\EntityStorageInterface $storage\n   *   The entity storage object.\n   *\n   * @see \\Drupal\\Core\\Entity\\EntityInterface::create()\n   *\/",341],["T_WHITESPACE","\n  ",353],["T_PUBLIC","public",354],["T_WHITESPACE"," ",354],["T_FUNCTION","function",354],["T_WHITESPACE"," ",354],["T_STRING","postCreate",354],"(",["T_STRING","EntityStorageInterface",354],["T_WHITESPACE"," ",354],["T_VARIABLE","$storage",354],")",";",["T_WHITESPACE","\n\n  ",354],["T_DOC_COMMENT","\/**\n   * Acts on entities before they are deleted and before hooks are invoked.\n   *\n   * Used before the entities are deleted and before invoking the delete hook.\n   *\n   * @param \\Drupal\\Core\\Entity\\EntityStorageInterface $storage\n   *   The entity storage object.\n   * @param \\Drupal\\Core\\Entity\\EntityInterface[] $entities\n   *   An array of entities.\n   *\/",356],["T_WHITESPACE","\n  ",365],["T_PUBLIC","public",366],["T_WHITESPACE"," ",366],["T_STATIC","static",366],["T_WHITESPACE"," ",366],["T_FUNCTION","function",366],["T_WHITESPACE"," ",366],["T_STRING","preDelete",366],"(",["T_STRING","EntityStorageInterface",366],["T_WHITESPACE"," ",366],["T_VARIABLE","$storage",366],",",["T_WHITESPACE"," ",366],["T_ARRAY","array",366],["T_WHITESPACE"," ",366],["T_VARIABLE","$entities",366],")",";",["T_WHITESPACE","\n\n  ",366],["T_DOC_COMMENT","\/**\n   * Acts on deleted entities before the delete hook is invoked.\n   *\n   * Used after the entities are deleted but before invoking the delete hook.\n   *\n   * @param \\Drupal\\Core\\Entity\\EntityStorageInterface $storage\n   *   The entity storage object.\n   * @param \\Drupal\\Core\\Entity\\EntityInterface[] $entities\n   *   An array of entities.\n   *\/",368],["T_WHITESPACE","\n  ",377],["T_PUBLIC","public",378],["T_WHITESPACE"," ",378],["T_STATIC","static",378],["T_WHITESPACE"," ",378],["T_FUNCTION","function",378],["T_WHITESPACE"," ",378],["T_STRING","postDelete",378],"(",["T_STRING","EntityStorageInterface",378],["T_WHITESPACE"," ",378],["T_VARIABLE","$storage",378],",",["T_WHITESPACE"," ",378],["T_ARRAY","array",378],["T_WHITESPACE"," ",378],["T_VARIABLE","$entities",378],")",";",["T_WHITESPACE","\n\n  ",378],["T_DOC_COMMENT","\/**\n   * Acts on loaded entities.\n   *\n   * @param \\Drupal\\Core\\Entity\\EntityStorageInterface $storage\n   *   The entity storage object.\n   * @param \\Drupal\\Core\\Entity\\EntityInterface[] $entities\n   *   An array of entities.\n   *\/",380],["T_WHITESPACE","\n  ",387],["T_PUBLIC","public",388],["T_WHITESPACE"," ",388],["T_STATIC","static",388],["T_WHITESPACE"," ",388],["T_FUNCTION","function",388],["T_WHITESPACE"," ",388],["T_STRING","postLoad",388],"(",["T_STRING","EntityStorageInterface",388],["T_WHITESPACE"," ",388],["T_VARIABLE","$storage",388],",",["T_WHITESPACE"," ",388],["T_ARRAY","array",388],["T_WHITESPACE"," ",388],"&",["T_VARIABLE","$entities",388],")",";",["T_WHITESPACE","\n\n  ",388],["T_DOC_COMMENT","\/**\n   * Creates a duplicate of the entity.\n   *\n   * @return static\n   *   A clone of $this with all identifiers unset, so saving it inserts a new\n   *   entity into the storage system.\n   *\/",390],["T_WHITESPACE","\n  ",396],["T_PUBLIC","public",397],["T_WHITESPACE"," ",397],["T_FUNCTION","function",397],["T_WHITESPACE"," ",397],["T_STRING","createDuplicate",397],"(",")",";",["T_WHITESPACE","\n\n  ",397],["T_DOC_COMMENT","\/**\n   * Gets the entity type definition.\n   *\n   * @return \\Drupal\\Core\\Entity\\EntityTypeInterface\n   *   The entity type definition.\n   *\/",399],["T_WHITESPACE","\n  ",404],["T_PUBLIC","public",405],["T_WHITESPACE"," ",405],["T_FUNCTION","function",405],["T_WHITESPACE"," ",405],["T_STRING","getEntityType",405],"(",")",";",["T_WHITESPACE","\n\n  ",405],["T_DOC_COMMENT","\/**\n   * Gets a list of entities referenced by this entity.\n   *\n   * @return \\Drupal\\Core\\Entity\\EntityInterface[]\n   *   An array of entities.\n   *\/",407],["T_WHITESPACE","\n  ",412],["T_PUBLIC","public",413],["T_WHITESPACE"," ",413],["T_FUNCTION","function",413],["T_WHITESPACE"," ",413],["T_STRING","referencedEntities",413],"(",")",";",["T_WHITESPACE","\n\n  ",413],["T_DOC_COMMENT","\/**\n   * Gets the original ID.\n   *\n   * @return int|string|null\n   *   The original ID, or NULL if no ID was set or for entity types that do not\n   *   support renames.\n   *\/",415],["T_WHITESPACE","\n  ",421],["T_PUBLIC","public",422],["T_WHITESPACE"," ",422],["T_FUNCTION","function",422],["T_WHITESPACE"," ",422],["T_STRING","getOriginalId",422],"(",")",";",["T_WHITESPACE","\n\n  ",422],["T_DOC_COMMENT","\/**\n   * Returns the cache tags that should be used to invalidate caches.\n   *\n   * This will not return additional cache tags added through addCacheTags().\n   *\n   * @return string[]\n   *   Set of cache tags.\n   *\n   * @see \\Drupal\\Core\\Cache\\RefinableCacheableDependencyInterface::addCacheTags()\n   * @see \\Drupal\\Core\\Cache\\CacheableDependencyInterface::getCacheTags()\n   *\/",424],["T_WHITESPACE","\n  ",434],["T_PUBLIC","public",435],["T_WHITESPACE"," ",435],["T_FUNCTION","function",435],["T_WHITESPACE"," ",435],["T_STRING","getCacheTagsToInvalidate",435],"(",")",";",["T_WHITESPACE","\n\n  ",435],["T_DOC_COMMENT","\/**\n   * Sets the original ID.\n   *\n   * @param int|string|null $id\n   *   The new ID to set as original ID. If the entity supports renames, setting\n   *   NULL will prevent an update from being considered a rename.\n   *\n   * @return $this\n   *\/",437],["T_WHITESPACE","\n  ",445],["T_PUBLIC","public",446],["T_WHITESPACE"," ",446],["T_FUNCTION","function",446],["T_WHITESPACE"," ",446],["T_STRING","setOriginalId",446],"(",["T_VARIABLE","$id",446],")",";",["T_WHITESPACE","\n\n  ",446],["T_DOC_COMMENT","\/**\n   * Gets an array of all property values.\n   *\n   * @return mixed[]\n   *   An array of property values, keyed by property name.\n   *\/",448],["T_WHITESPACE","\n  ",453],["T_PUBLIC","public",454],["T_WHITESPACE"," ",454],["T_FUNCTION","function",454],["T_WHITESPACE"," ",454],["T_STRING","toArray",454],"(",")",";",["T_WHITESPACE","\n\n  ",454],["T_DOC_COMMENT","\/**\n   * Gets a typed data object for this entity object.\n   *\n   * The returned typed data object wraps this entity and allows dealing with\n   * entities based on the generic typed data API.\n   *\n   * @return \\Drupal\\Core\\TypedData\\ComplexDataInterface\n   *   The typed data object for this entity.\n   *\n   * @see \\Drupal\\Core\\TypedData\\TypedDataInterface\n   *\/",456],["T_WHITESPACE","\n  ",466],["T_PUBLIC","public",467],["T_WHITESPACE"," ",467],["T_FUNCTION","function",467],["T_WHITESPACE"," ",467],["T_STRING","getTypedData",467],"(",")",";",["T_WHITESPACE","\n\n  ",467],["T_DOC_COMMENT","\/**\n   * Gets the key that is used to store configuration dependencies.\n   *\n   * @return string\n   *   The key to be used in configuration dependencies when storing\n   *   dependencies on entities of this type.\n   *\n   * @see \\Drupal\\Core\\Entity\\EntityTypeInterface::getConfigDependencyKey()\n   *\/",469],["T_WHITESPACE","\n  ",477],["T_PUBLIC","public",478],["T_WHITESPACE"," ",478],["T_FUNCTION","function",478],["T_WHITESPACE"," ",478],["T_STRING","getConfigDependencyKey",478],"(",")",";",["T_WHITESPACE","\n\n  ",478],["T_DOC_COMMENT","\/**\n   * Gets the configuration dependency name.\n   *\n   * Configuration entities can depend on content and configuration entities.\n   * They store an array of content and config dependency names in their\n   * \"dependencies\" key.\n   *\n   * @return string\n   *   The configuration dependency name.\n   *\n   * @see \\Drupal\\Core\\Config\\Entity\\ConfigDependencyManager\n   *\/",480],["T_WHITESPACE","\n  ",491],["T_PUBLIC","public",492],["T_WHITESPACE"," ",492],["T_FUNCTION","function",492],["T_WHITESPACE"," ",492],["T_STRING","getConfigDependencyName",492],"(",")",";",["T_WHITESPACE","\n\n  ",492],["T_DOC_COMMENT","\/**\n   * Gets the configuration target identifier for the entity.\n   *\n   * Used to supply the correct format for storing a reference targeting this\n   * entity in configuration.\n   *\n   * @return string\n   *   The configuration target identifier.\n   *\/",494],["T_WHITESPACE","\n  ",502],["T_PUBLIC","public",503],["T_WHITESPACE"," ",503],["T_FUNCTION","function",503],["T_WHITESPACE"," ",503],["T_STRING","getConfigTarget",503],"(",")",";",["T_WHITESPACE","\n\n",503],"}",["T_WHITESPACE","\n",505]]