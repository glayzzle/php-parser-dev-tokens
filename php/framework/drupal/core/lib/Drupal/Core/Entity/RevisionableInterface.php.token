[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Core",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Entity",3],";",["T_WHITESPACE","\n\n",3],["T_DOC_COMMENT","\/**\n * Provides methods for an entity to support revisions.\n *\/",5],["T_WHITESPACE","\n",7],["T_INTERFACE","interface",8],["T_WHITESPACE"," ",8],["T_STRING","RevisionableInterface",8],["T_WHITESPACE"," ",8],"{",["T_WHITESPACE","\n\n  ",8],["T_DOC_COMMENT","\/**\n   * Determines whether a new revision should be created on save.\n   *\n   * @return bool\n   *   TRUE if a new revision should be created.\n   *\n   * @see \\Drupal\\Core\\Entity\\EntityInterface::setNewRevision()\n   *\/",10],["T_WHITESPACE","\n  ",17],["T_PUBLIC","public",18],["T_WHITESPACE"," ",18],["T_FUNCTION","function",18],["T_WHITESPACE"," ",18],["T_STRING","isNewRevision",18],"(",")",";",["T_WHITESPACE","\n\n  ",18],["T_DOC_COMMENT","\/**\n   * Enforces an entity to be saved as a new revision.\n   *\n   * @param bool $value\n   *   (optional) Whether a new revision should be saved.\n   *\n   * @throws \\LogicException\n   *   Thrown if the entity does not support revisions.\n   *\n   * @see \\Drupal\\Core\\Entity\\EntityInterface::isNewRevision()\n   *\/",20],["T_WHITESPACE","\n  ",30],["T_PUBLIC","public",31],["T_WHITESPACE"," ",31],["T_FUNCTION","function",31],["T_WHITESPACE"," ",31],["T_STRING","setNewRevision",31],"(",["T_VARIABLE","$value",31],["T_WHITESPACE"," ",31],"=",["T_WHITESPACE"," ",31],["T_STRING","TRUE",31],")",";",["T_WHITESPACE","\n\n  ",31],["T_DOC_COMMENT","\/**\n   * Gets the revision identifier of the entity.\n   *\n   * @return\n   *   The revision identifier of the entity, or NULL if the entity does not\n   *   have a revision identifier.\n   *\/",33],["T_WHITESPACE","\n  ",39],["T_PUBLIC","public",40],["T_WHITESPACE"," ",40],["T_FUNCTION","function",40],["T_WHITESPACE"," ",40],["T_STRING","getRevisionId",40],"(",")",";",["T_WHITESPACE","\n\n  ",40],["T_DOC_COMMENT","\/**\n   * Checks if this entity is the default revision.\n   *\n   * @param bool $new_value\n   *   (optional) A Boolean to (re)set the isDefaultRevision flag.\n   *\n   * @return bool\n   *   TRUE if the entity is the default revision, FALSE otherwise. If\n   *   $new_value was passed, the previous value is returned.\n   *\/",42],["T_WHITESPACE","\n  ",51],["T_PUBLIC","public",52],["T_WHITESPACE"," ",52],["T_FUNCTION","function",52],["T_WHITESPACE"," ",52],["T_STRING","isDefaultRevision",52],"(",["T_VARIABLE","$new_value",52],["T_WHITESPACE"," ",52],"=",["T_WHITESPACE"," ",52],["T_STRING","NULL",52],")",";",["T_WHITESPACE","\n\n  ",52],["T_DOC_COMMENT","\/**\n   * Acts on a revision before it gets saved.\n   *\n   * @param EntityStorageInterface $storage\n   *   The entity storage object.\n   * @param \\stdClass $record\n   *   The revision object.\n   *\/",54],["T_WHITESPACE","\n  ",61],["T_PUBLIC","public",62],["T_WHITESPACE"," ",62],["T_FUNCTION","function",62],["T_WHITESPACE"," ",62],["T_STRING","preSaveRevision",62],"(",["T_STRING","EntityStorageInterface",62],["T_WHITESPACE"," ",62],["T_VARIABLE","$storage",62],",",["T_WHITESPACE"," ",62],["T_NS_SEPARATOR","\\",62],["T_STRING","stdClass",62],["T_WHITESPACE"," ",62],["T_VARIABLE","$record",62],")",";",["T_WHITESPACE","\n\n",62],"}",["T_WHITESPACE","\n",64]]