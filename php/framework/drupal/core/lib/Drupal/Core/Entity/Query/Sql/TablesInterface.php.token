[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Core",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Entity",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Query",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Sql",3],";",["T_WHITESPACE","\n\n",3],["T_DOC_COMMENT","\/**\n * Adds tables and fields to the SQL entity query.\n *\/",5],["T_WHITESPACE","\n",7],["T_INTERFACE","interface",8],["T_WHITESPACE"," ",8],["T_STRING","TablesInterface",8],["T_WHITESPACE"," ",8],"{",["T_WHITESPACE","\n\n  ",8],["T_DOC_COMMENT","\/**\n   * Adds a field to a database query.\n   *\n   * @param string $field\n   *   If it doesn't contain a dot, then an entity base field name. If it\n   *   contains a dot, then either field name dot field column or field name dot\n   *   delta dot field column. Delta can be a numeric value or a \"%delta\" for\n   *   any value.\n   * @param string $type\n   *   Join type, can either be INNER or LEFT.\n   * @param string $langcode\n   *   The language code the field values are to be queried in.\n   *\n   * @return string\n   *   The return value is a string containing the alias of the table, a dot\n   *   and the appropriate SQL column as passed in. This allows the direct use\n   *   of this in a query for a condition or sort.\n   *\n   * @throws \\Drupal\\Core\\Entity\\Query\\QueryException\n   *   If $field specifies an invalid relationship.\n   *\/",10],["T_WHITESPACE","\n  ",30],["T_PUBLIC","public",31],["T_WHITESPACE"," ",31],["T_FUNCTION","function",31],["T_WHITESPACE"," ",31],["T_STRING","addField",31],"(",["T_VARIABLE","$field",31],",",["T_WHITESPACE"," ",31],["T_VARIABLE","$type",31],",",["T_WHITESPACE"," ",31],["T_VARIABLE","$langcode",31],")",";",["T_WHITESPACE","\n\n  ",31],["T_DOC_COMMENT","\/**\n   * Determines whether the given field is case sensitive.\n   *\n   * This information can only be provided after it was added with addField().\n   *\n   * @param string $field_name\n   *   The name of the field.\n   *\n   * @return bool|null\n   *   TRUE if the field is case sensitive, FALSE if not. Returns NULL when the\n   *   field did not define if it is case sensitive or not.\n   *\/",33],["T_WHITESPACE","\n  ",44],["T_PUBLIC","public",45],["T_WHITESPACE"," ",45],["T_FUNCTION","function",45],["T_WHITESPACE"," ",45],["T_STRING","isFieldCaseSensitive",45],"(",["T_VARIABLE","$field_name",45],")",";",["T_WHITESPACE","\n\n",45],"}",["T_WHITESPACE","\n",47]]