[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Core",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Entity",3],";",["T_WHITESPACE","\n\n",3],["T_DOC_COMMENT","\/**\n * Defines the interface for entity storage classes.\n *\n * For common default implementations, see\n * \\Drupal\\Core\\Entity\\Sql\\SqlContentEntityStorage for content entities and\n * \\Drupal\\Core\\Config\\Entity\\ConfigEntityStorage for config entities. Those\n * implementations are used by default when the @ContentEntityType or\n * @ConfigEntityType annotations are used.\n *\n * @ingroup entity_api\n *\/",5],["T_WHITESPACE","\n",15],["T_INTERFACE","interface",16],["T_WHITESPACE"," ",16],["T_STRING","EntityStorageInterface",16],["T_WHITESPACE"," ",16],"{",["T_WHITESPACE","\n\n  ",16],["T_DOC_COMMENT","\/**\n   * Load the most recent version of an entity's field data.\n   *\/",18],["T_WHITESPACE","\n  ",20],["T_CONST","const",21],["T_WHITESPACE"," ",21],["T_STRING","FIELD_LOAD_CURRENT",21],["T_WHITESPACE"," ",21],"=",["T_WHITESPACE"," ",21],["T_CONSTANT_ENCAPSED_STRING","'FIELD_LOAD_CURRENT'",21],";",["T_WHITESPACE","\n\n  ",21],["T_DOC_COMMENT","\/**\n   * Load the version of an entity's field data specified in the entity.\n   *\/",23],["T_WHITESPACE","\n  ",25],["T_CONST","const",26],["T_WHITESPACE"," ",26],["T_STRING","FIELD_LOAD_REVISION",26],["T_WHITESPACE"," ",26],"=",["T_WHITESPACE"," ",26],["T_CONSTANT_ENCAPSED_STRING","'FIELD_LOAD_REVISION'",26],";",["T_WHITESPACE","\n\n  ",26],["T_DOC_COMMENT","\/**\n   * Resets the internal, static entity cache.\n   *\n   * @param $ids\n   *   (optional) If specified, the cache is reset for the entities with the\n   *   given ids only.\n   *\/",28],["T_WHITESPACE","\n  ",34],["T_PUBLIC","public",35],["T_WHITESPACE"," ",35],["T_FUNCTION","function",35],["T_WHITESPACE"," ",35],["T_STRING","resetCache",35],"(",["T_ARRAY","array",35],["T_WHITESPACE"," ",35],["T_VARIABLE","$ids",35],["T_WHITESPACE"," ",35],"=",["T_WHITESPACE"," ",35],["T_STRING","NULL",35],")",";",["T_WHITESPACE","\n\n  ",35],["T_DOC_COMMENT","\/**\n   * Loads one or more entities.\n   *\n   * @param $ids\n   *   An array of entity IDs, or NULL to load all entities.\n   *\n   * @return \\Drupal\\Core\\Entity\\EntityInterface[]\n   *   An array of entity objects indexed by their IDs. Returns an empty array\n   *   if no matching entities are found.\n   *\/",37],["T_WHITESPACE","\n  ",46],["T_PUBLIC","public",47],["T_WHITESPACE"," ",47],["T_FUNCTION","function",47],["T_WHITESPACE"," ",47],["T_STRING","loadMultiple",47],"(",["T_ARRAY","array",47],["T_WHITESPACE"," ",47],["T_VARIABLE","$ids",47],["T_WHITESPACE"," ",47],"=",["T_WHITESPACE"," ",47],["T_STRING","NULL",47],")",";",["T_WHITESPACE","\n\n  ",47],["T_DOC_COMMENT","\/**\n   * Loads one entity.\n   *\n   * @param mixed $id\n   *   The ID of the entity to load.\n   *\n   * @return \\Drupal\\Core\\Entity\\EntityInterface|null\n   *   An entity object. NULL if no matching entity is found.\n   *\/",49],["T_WHITESPACE","\n  ",57],["T_PUBLIC","public",58],["T_WHITESPACE"," ",58],["T_FUNCTION","function",58],["T_WHITESPACE"," ",58],["T_STRING","load",58],"(",["T_VARIABLE","$id",58],")",";",["T_WHITESPACE","\n\n  ",58],["T_DOC_COMMENT","\/**\n   * Loads an unchanged entity from the database.\n   *\n   * @param mixed $id\n   *   The ID of the entity to load.\n   *\n   * @return \\Drupal\\Core\\Entity\\EntityInterface|null\n   *   The unchanged entity, or NULL if the entity cannot be loaded.\n   *\n   * @todo Remove this method once we have a reliable way to retrieve the\n   *   unchanged entity from the entity object.\n   *\/",60],["T_WHITESPACE","\n  ",71],["T_PUBLIC","public",72],["T_WHITESPACE"," ",72],["T_FUNCTION","function",72],["T_WHITESPACE"," ",72],["T_STRING","loadUnchanged",72],"(",["T_VARIABLE","$id",72],")",";",["T_WHITESPACE","\n\n  ",72],["T_DOC_COMMENT","\/**\n   * Load a specific entity revision.\n   *\n   * @param int|string $revision_id\n   *   The revision id.\n   *\n   * @return \\Drupal\\Core\\Entity\\EntityInterface|null\n   *   The specified entity revision or NULL if not found.\n   *\/",74],["T_WHITESPACE","\n  ",82],["T_PUBLIC","public",83],["T_WHITESPACE"," ",83],["T_FUNCTION","function",83],["T_WHITESPACE"," ",83],["T_STRING","loadRevision",83],"(",["T_VARIABLE","$revision_id",83],")",";",["T_WHITESPACE","\n\n  ",83],["T_DOC_COMMENT","\/**\n   * Delete a specific entity revision.\n   *\n   * A revision can only be deleted if it's not the currently active one.\n   *\n   * @param int $revision_id\n   *   The revision id.\n   *\/",85],["T_WHITESPACE","\n  ",92],["T_PUBLIC","public",93],["T_WHITESPACE"," ",93],["T_FUNCTION","function",93],["T_WHITESPACE"," ",93],["T_STRING","deleteRevision",93],"(",["T_VARIABLE","$revision_id",93],")",";",["T_WHITESPACE","\n\n  ",93],["T_DOC_COMMENT","\/**\n   * Load entities by their property values.\n   *\n   * @param array $values\n   *   An associative array where the keys are the property names and the\n   *   values are the values those properties must have.\n   *\n   * @return \\Drupal\\Core\\Entity\\EntityInterface[]\n   *   An array of entity objects indexed by their ids.\n   *\/",95],["T_WHITESPACE","\n  ",104],["T_PUBLIC","public",105],["T_WHITESPACE"," ",105],["T_FUNCTION","function",105],["T_WHITESPACE"," ",105],["T_STRING","loadByProperties",105],"(",["T_ARRAY","array",105],["T_WHITESPACE"," ",105],["T_VARIABLE","$values",105],["T_WHITESPACE"," ",105],"=",["T_WHITESPACE"," ",105],["T_ARRAY","array",105],"(",")",")",";",["T_WHITESPACE","\n\n  ",105],["T_DOC_COMMENT","\/**\n   * Constructs a new entity object, without permanently saving it.\n   *\n   * @param array $values\n   *   (optional) An array of values to set, keyed by property name. If the\n   *   entity type has bundles, the bundle key has to be specified.\n   *\n   * @return \\Drupal\\Core\\Entity\\EntityInterface\n   *   A new entity object.\n   *\/",107],["T_WHITESPACE","\n  ",116],["T_PUBLIC","public",117],["T_WHITESPACE"," ",117],["T_FUNCTION","function",117],["T_WHITESPACE"," ",117],["T_STRING","create",117],"(",["T_ARRAY","array",117],["T_WHITESPACE"," ",117],["T_VARIABLE","$values",117],["T_WHITESPACE"," ",117],"=",["T_WHITESPACE"," ",117],["T_ARRAY","array",117],"(",")",")",";",["T_WHITESPACE","\n\n  ",117],["T_DOC_COMMENT","\/**\n   * Deletes permanently saved entities.\n   *\n   * @param array $entities\n   *   An array of entity objects to delete.\n   *\n   * @throws \\Drupal\\Core\\Entity\\EntityStorageException\n   *   In case of failures, an exception is thrown.\n   *\/",119],["T_WHITESPACE","\n  ",127],["T_PUBLIC","public",128],["T_WHITESPACE"," ",128],["T_FUNCTION","function",128],["T_WHITESPACE"," ",128],["T_STRING","delete",128],"(",["T_ARRAY","array",128],["T_WHITESPACE"," ",128],["T_VARIABLE","$entities",128],")",";",["T_WHITESPACE","\n\n  ",128],["T_DOC_COMMENT","\/**\n   * Saves the entity permanently.\n   *\n   * @param \\Drupal\\Core\\Entity\\EntityInterface $entity\n   *   The entity to save.\n   *\n   * @return\n   *   SAVED_NEW or SAVED_UPDATED is returned depending on the operation\n   *   performed.\n   *\n   * @throws \\Drupal\\Core\\Entity\\EntityStorageException\n   *   In case of failures, an exception is thrown.\n   *\/",130],["T_WHITESPACE","\n  ",142],["T_PUBLIC","public",143],["T_WHITESPACE"," ",143],["T_FUNCTION","function",143],["T_WHITESPACE"," ",143],["T_STRING","save",143],"(",["T_STRING","EntityInterface",143],["T_WHITESPACE"," ",143],["T_VARIABLE","$entity",143],")",";",["T_WHITESPACE","\n\n  ",143],["T_DOC_COMMENT","\/**\n   * Gets an entity query instance.\n   *\n   * @param string $conjunction\n   *   (optional) The logical operator for the query, either:\n   *   - AND: all of the conditions on the query need to match.\n   *   - OR: at least one of the conditions on the query need to match.\n   *\n   * @return \\Drupal\\Core\\Entity\\Query\\QueryInterface\n   *   The query instance.\n   *\n   * @see \\Drupal\\Core\\Entity\\EntityStorageBase::getQueryServiceName()\n   *\/",145],["T_WHITESPACE","\n  ",157],["T_PUBLIC","public",158],["T_WHITESPACE"," ",158],["T_FUNCTION","function",158],["T_WHITESPACE"," ",158],["T_STRING","getQuery",158],"(",["T_VARIABLE","$conjunction",158],["T_WHITESPACE"," ",158],"=",["T_WHITESPACE"," ",158],["T_CONSTANT_ENCAPSED_STRING","'AND'",158],")",";",["T_WHITESPACE","\n\n  ",158],["T_DOC_COMMENT","\/**\n   * Gets an aggregated query instance.\n   *\n   * @param string $conjunction\n   *   (optional) The logical operator for the query, either:\n   *   - AND: all of the conditions on the query need to match.\n   *   - OR: at least one of the conditions on the query need to match.\n   *\n   * @return \\Drupal\\Core\\Entity\\Query\\QueryAggregateInterface\n   *   The aggregated query object that can query the given entity type.\n   *\n   * @see \\Drupal\\Core\\Entity\\EntityStorageBase::getQueryServiceName()\n   *\/",160],["T_WHITESPACE","\n  ",172],["T_PUBLIC","public",173],["T_WHITESPACE"," ",173],["T_FUNCTION","function",173],["T_WHITESPACE"," ",173],["T_STRING","getAggregateQuery",173],"(",["T_VARIABLE","$conjunction",173],["T_WHITESPACE"," ",173],"=",["T_WHITESPACE"," ",173],["T_CONSTANT_ENCAPSED_STRING","'AND'",173],")",";",["T_WHITESPACE","\n\n  ",173],["T_DOC_COMMENT","\/**\n   * Gets the entity type ID.\n   *\n   * @return string\n   *   The entity type ID.\n   *\/",175],["T_WHITESPACE","\n  ",180],["T_PUBLIC","public",181],["T_WHITESPACE"," ",181],["T_FUNCTION","function",181],["T_WHITESPACE"," ",181],["T_STRING","getEntityTypeId",181],"(",")",";",["T_WHITESPACE","\n\n  ",181],["T_DOC_COMMENT","\/**\n   * Gets the entity type definition.\n   *\n   * @return \\Drupal\\Core\\Entity\\EntityTypeInterface\n   *   Entity type definition.\n   *\/",183],["T_WHITESPACE","\n  ",188],["T_PUBLIC","public",189],["T_WHITESPACE"," ",189],["T_FUNCTION","function",189],["T_WHITESPACE"," ",189],["T_STRING","getEntityType",189],"(",")",";",["T_WHITESPACE","\n\n",189],"}",["T_WHITESPACE","\n",191]]