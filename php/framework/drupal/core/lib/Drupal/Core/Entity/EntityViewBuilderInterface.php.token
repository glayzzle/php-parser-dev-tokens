[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Core",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Entity",3],";",["T_WHITESPACE","\n\n",3],["T_USE","use",5],["T_WHITESPACE"," ",5],["T_STRING","Drupal",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Core",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Field",5],["T_NS_SEPARATOR","\\",5],["T_STRING","FieldItemInterface",5],";",["T_WHITESPACE","\n",5],["T_USE","use",6],["T_WHITESPACE"," ",6],["T_STRING","Drupal",6],["T_NS_SEPARATOR","\\",6],["T_STRING","Core",6],["T_NS_SEPARATOR","\\",6],["T_STRING","Field",6],["T_NS_SEPARATOR","\\",6],["T_STRING","FieldItemListInterface",6],";",["T_WHITESPACE","\n\n",6],["T_DOC_COMMENT","\/**\n * Defines an interface for entity view builders.\n *\n * @ingroup entity_api\n *\/",8],["T_WHITESPACE","\n",12],["T_INTERFACE","interface",13],["T_WHITESPACE"," ",13],["T_STRING","EntityViewBuilderInterface",13],["T_WHITESPACE"," ",13],"{",["T_WHITESPACE","\n\n  ",13],["T_DOC_COMMENT","\/**\n   * Builds the component fields and properties of a set of entities.\n   *\n   * @param &$build\n   *   The renderable array representing the entity content.\n   * @param \\Drupal\\Core\\Entity\\EntityInterface[] $entities\n   *   The entities whose content is being built.\n   * @param \\Drupal\\Core\\Entity\\Display\\EntityViewDisplayInterface[] $displays\n   *   The array of entity view displays holding the display options\n   *   configured for the entity components, keyed by bundle name.\n   * @param string $view_mode\n   *   The view mode in which the entity is being viewed.\n   *\/",15],["T_WHITESPACE","\n  ",27],["T_PUBLIC","public",28],["T_WHITESPACE"," ",28],["T_FUNCTION","function",28],["T_WHITESPACE"," ",28],["T_STRING","buildComponents",28],"(",["T_ARRAY","array",28],["T_WHITESPACE"," ",28],"&",["T_VARIABLE","$build",28],",",["T_WHITESPACE"," ",28],["T_ARRAY","array",28],["T_WHITESPACE"," ",28],["T_VARIABLE","$entities",28],",",["T_WHITESPACE"," ",28],["T_ARRAY","array",28],["T_WHITESPACE"," ",28],["T_VARIABLE","$displays",28],",",["T_WHITESPACE"," ",28],["T_VARIABLE","$view_mode",28],")",";",["T_WHITESPACE","\n\n  ",28],["T_DOC_COMMENT","\/**\n   * Builds the render array for the provided entity.\n   *\n   * @param \\Drupal\\Core\\Entity\\EntityInterface $entity\n   *   The entity to render.\n   * @param string $view_mode\n   *   (optional) The view mode that should be used to render the entity.\n   * @param string $langcode\n   *   (optional) For which language the entity should be rendered, defaults to\n   *   the current content language.\n   *\n   * @return array\n   *   A render array for the entity.\n   *\n   * @throws \\InvalidArgumentException\n   *   Can be thrown when the set of parameters is inconsistent, like when\n   *   trying to view a Comment and passing a Node which is not the one the\n   *   comment belongs to, or not passing one, and having the comment node not\n   *   be available for loading.\n   *\/",30],["T_WHITESPACE","\n  ",49],["T_PUBLIC","public",50],["T_WHITESPACE"," ",50],["T_FUNCTION","function",50],["T_WHITESPACE"," ",50],["T_STRING","view",50],"(",["T_STRING","EntityInterface",50],["T_WHITESPACE"," ",50],["T_VARIABLE","$entity",50],",",["T_WHITESPACE"," ",50],["T_VARIABLE","$view_mode",50],["T_WHITESPACE"," ",50],"=",["T_WHITESPACE"," ",50],["T_CONSTANT_ENCAPSED_STRING","'full'",50],",",["T_WHITESPACE"," ",50],["T_VARIABLE","$langcode",50],["T_WHITESPACE"," ",50],"=",["T_WHITESPACE"," ",50],["T_STRING","NULL",50],")",";",["T_WHITESPACE","\n\n  ",50],["T_DOC_COMMENT","\/**\n   * Builds the render array for the provided entities.\n   *\n   * @param array $entities\n   *   An array of entities implementing EntityInterface to view.\n   * @param string $view_mode\n   *   (optional) The view mode that should be used to render the entity.\n   * @param string $langcode\n   *   (optional) For which language the entity should be rendered, defaults to\n   *   the current content language.\n   *\n   * @return\n   *   A render array for the entities, indexed by the same keys as the\n   *   entities array passed in $entities.\n   *\n   * @throws \\InvalidArgumentException\n   *   Can be thrown when the set of parameters is inconsistent, like when\n   *   trying to view Comments and passing a Node which is not the one the\n   *   comments belongs to, or not passing one, and having the comments node not\n   *   be available for loading.\n   *\/",52],["T_WHITESPACE","\n  ",72],["T_PUBLIC","public",73],["T_WHITESPACE"," ",73],["T_FUNCTION","function",73],["T_WHITESPACE"," ",73],["T_STRING","viewMultiple",73],"(",["T_ARRAY","array",73],["T_WHITESPACE"," ",73],["T_VARIABLE","$entities",73],["T_WHITESPACE"," ",73],"=",["T_WHITESPACE"," ",73],["T_ARRAY","array",73],"(",")",",",["T_WHITESPACE"," ",73],["T_VARIABLE","$view_mode",73],["T_WHITESPACE"," ",73],"=",["T_WHITESPACE"," ",73],["T_CONSTANT_ENCAPSED_STRING","'full'",73],",",["T_WHITESPACE"," ",73],["T_VARIABLE","$langcode",73],["T_WHITESPACE"," ",73],"=",["T_WHITESPACE"," ",73],["T_STRING","NULL",73],")",";",["T_WHITESPACE","\n\n  ",73],["T_DOC_COMMENT","\/**\n   * Resets the entity render cache.\n   *\n   * @param \\Drupal\\Core\\Entity\\EntityInterface[] $entities\n   *   (optional) If specified, the cache is reset for the given entities only.\n   *\/",75],["T_WHITESPACE","\n  ",80],["T_PUBLIC","public",81],["T_WHITESPACE"," ",81],["T_FUNCTION","function",81],["T_WHITESPACE"," ",81],["T_STRING","resetCache",81],"(",["T_ARRAY","array",81],["T_WHITESPACE"," ",81],["T_VARIABLE","$entities",81],["T_WHITESPACE"," ",81],"=",["T_WHITESPACE"," ",81],["T_STRING","NULL",81],")",";",["T_WHITESPACE","\n\n  ",81],["T_DOC_COMMENT","\/**\n   * Builds a renderable array for the value of a single field in an entity.\n   *\n   * The resulting output is a fully themed field with label and multiple\n   * values.\n   *\n   * This function can be used by third-party modules that need to output an\n   * isolated field.\n   * - Do not use inside node (or any other entity) templates; use\n   *   render($content[FIELD_NAME]) instead.\n   * - The FieldItemInterface::view() method can be used to output a single\n   *   formatted field value, without label or wrapping field markup.\n   *\n   * The function takes care of invoking the prepare_view steps. It also\n   * respects field access permissions.\n   *\n   * @param \\Drupal\\Core\\Field\\FieldItemListInterface $items\n   *   FieldItemList containing the values to be displayed.\n   * @param string|array $display_options\n   *   Can be either:\n   *   - The name of a view mode. The field will be displayed according to the\n   *     display settings specified for this view mode in the $field\n   *     definition for the field in the entity's bundle. If no display settings\n   *     are found for the view mode, the settings for the 'default' view mode\n   *     will be used.\n   *   - An array of display options. The following key\/value pairs are allowed:\n   *     - label: (string) Position of the label. The default 'field' theme\n   *       implementation supports the values 'inline', 'above' and 'hidden'.\n   *       Defaults to 'above'.\n   *     - type: (string) The formatter to use. Defaults to the\n   *       'default_formatter' for the field type. The default formatter will\n   *       also be used if the requested formatter is not available.\n   *     - settings: (array) Settings specific to the formatter. Defaults to the\n   *       formatter's default settings.\n   *     - weight: (float) The weight to assign to the renderable element.\n   *       Defaults to 0.\n   *\n   * @return array\n   *   A renderable array for the field values.\n   *\n   * @see \\Drupal\\Core\\Entity\\EntityViewBuilderInterface::viewFieldItem()\n   *\/",83],["T_WHITESPACE","\n  ",124],["T_PUBLIC","public",125],["T_WHITESPACE"," ",125],["T_FUNCTION","function",125],["T_WHITESPACE"," ",125],["T_STRING","viewField",125],"(",["T_STRING","FieldItemListInterface",125],["T_WHITESPACE"," ",125],["T_VARIABLE","$items",125],",",["T_WHITESPACE"," ",125],["T_VARIABLE","$display_options",125],["T_WHITESPACE"," ",125],"=",["T_WHITESPACE"," ",125],["T_ARRAY","array",125],"(",")",")",";",["T_WHITESPACE","\n\n  ",125],["T_DOC_COMMENT","\/**\n   * Builds a renderable array for a single field item.\n   *\n   * @param \\Drupal\\Core\\Field\\FieldItemInterface $item\n   *   FieldItem to be displayed.\n   * @param string|array $display_options\n   *   Can be either the name of a view mode, or an array of display settings.\n   *   See EntityViewBuilderInterface::viewField() for more information.\n   *\n   * @return array\n   *   A renderable array for the field item.\n   *\n   * @see \\Drupal\\Core\\Entity\\EntityViewBuilderInterface::viewField()\n   *\/",127],["T_WHITESPACE","\n  ",140],["T_PUBLIC","public",141],["T_WHITESPACE"," ",141],["T_FUNCTION","function",141],["T_WHITESPACE"," ",141],["T_STRING","viewFieldItem",141],"(",["T_STRING","FieldItemInterface",141],["T_WHITESPACE"," ",141],["T_VARIABLE","$item",141],",",["T_WHITESPACE"," ",141],["T_VARIABLE","$display_options",141],["T_WHITESPACE"," ",141],"=",["T_WHITESPACE"," ",141],["T_ARRAY","array",141],"(",")",")",";",["T_WHITESPACE","\n\n  ",141],["T_DOC_COMMENT","\/**\n   * The cache tag associated with this entity view builder.\n   *\n   * An entity view builder is instantiated on a per-entity type basis, so the\n   * cache tags are also per-entity type.\n   *\n   * @return array\n   *   An array of cache tags.\n   *\/",143],["T_WHITESPACE","\n  ",151],["T_PUBLIC","public",152],["T_WHITESPACE"," ",152],["T_FUNCTION","function",152],["T_WHITESPACE"," ",152],["T_STRING","getCacheTags",152],"(",")",";",["T_WHITESPACE","\n\n",152],"}",["T_WHITESPACE","\n",154]]