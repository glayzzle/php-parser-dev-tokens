[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Core",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Entity",3],";",["T_WHITESPACE","\n\n",3],["T_USE","use",5],["T_WHITESPACE"," ",5],["T_STRING","Drupal",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Core",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Entity",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Display",5],["T_NS_SEPARATOR","\\",5],["T_STRING","EntityFormDisplayInterface",5],";",["T_WHITESPACE","\n",5],["T_USE","use",6],["T_WHITESPACE"," ",6],["T_STRING","Drupal",6],["T_NS_SEPARATOR","\\",6],["T_STRING","Core",6],["T_NS_SEPARATOR","\\",6],["T_STRING","Form",6],["T_NS_SEPARATOR","\\",6],["T_STRING","FormStateInterface",6],";",["T_WHITESPACE","\n\n",6],["T_DOC_COMMENT","\/**\n * Defines a common interface for content entity form classes.\n *\/",8],["T_WHITESPACE","\n",10],["T_INTERFACE","interface",11],["T_WHITESPACE"," ",11],["T_STRING","ContentEntityFormInterface",11],["T_WHITESPACE"," ",11],["T_EXTENDS","extends",11],["T_WHITESPACE"," ",11],["T_STRING","EntityFormInterface",11],["T_WHITESPACE"," ",11],"{",["T_WHITESPACE","\n\n  ",11],["T_DOC_COMMENT","\/**\n   * Gets the form display.\n   *\n   * @param \\Drupal\\Core\\Form\\FormStateInterface $form_state\n   *   The current state of the form.\n   *\n   * @return \\Drupal\\Core\\Entity\\Display\\EntityFormDisplayInterface.\n   *   The current form display.\n   *\/",13],["T_WHITESPACE","\n  ",21],["T_PUBLIC","public",22],["T_WHITESPACE"," ",22],["T_FUNCTION","function",22],["T_WHITESPACE"," ",22],["T_STRING","getFormDisplay",22],"(",["T_STRING","FormStateInterface",22],["T_WHITESPACE"," ",22],["T_VARIABLE","$form_state",22],")",";",["T_WHITESPACE","\n\n  ",22],["T_DOC_COMMENT","\/**\n   * Sets the form display.\n   *\n   * Sets the form display which will be used for populating form element\n   * defaults.\n   *\n   * @param \\Drupal\\Core\\Entity\\Display\\EntityFormDisplayInterface $form_display\n   *   The form display that the current form operates with.\n   * @param \\Drupal\\Core\\Form\\FormStateInterface $form_state\n   *   The current state of the form.\n   *\n   * @return $this\n   *\/",24],["T_WHITESPACE","\n  ",36],["T_PUBLIC","public",37],["T_WHITESPACE"," ",37],["T_FUNCTION","function",37],["T_WHITESPACE"," ",37],["T_STRING","setFormDisplay",37],"(",["T_STRING","EntityFormDisplayInterface",37],["T_WHITESPACE"," ",37],["T_VARIABLE","$form_display",37],",",["T_WHITESPACE"," ",37],["T_STRING","FormStateInterface",37],["T_WHITESPACE"," ",37],["T_VARIABLE","$form_state",37],")",";",["T_WHITESPACE","\n\n  ",37],["T_DOC_COMMENT","\/**\n   * Gets the code identifying the active form language.\n   *\n   * @param \\Drupal\\Core\\Form\\FormStateInterface $form_state\n   *   The current state of the form.\n   *\n   * @return string\n   *   The form language code.\n   *\/",39],["T_WHITESPACE","\n  ",47],["T_PUBLIC","public",48],["T_WHITESPACE"," ",48],["T_FUNCTION","function",48],["T_WHITESPACE"," ",48],["T_STRING","getFormLangcode",48],"(",["T_STRING","FormStateInterface",48],["T_WHITESPACE"," ",48],["T_VARIABLE","$form_state",48],")",";",["T_WHITESPACE","\n\n  ",48],["T_DOC_COMMENT","\/**\n   * Checks whether the current form language matches the entity one.\n   *\n   * @param \\Drupal\\Core\\Form\\FormStateInterface $form_state\n   *   The current state of the form.\n   *\n   * @return bool\n   *   Returns TRUE if the entity form language matches the entity one.\n   *\/",50],["T_WHITESPACE","\n  ",58],["T_PUBLIC","public",59],["T_WHITESPACE"," ",59],["T_FUNCTION","function",59],["T_WHITESPACE"," ",59],["T_STRING","isDefaultFormLangcode",59],"(",["T_STRING","FormStateInterface",59],["T_WHITESPACE"," ",59],["T_VARIABLE","$form_state",59],")",";",["T_WHITESPACE","\n\n  ",59],["T_DOC_COMMENT","\/**\n   * {@inheritdoc}\n   *\n   * Note that extending classes should not override this method to add entity\n   * validation logic, but define further validation constraints using the\n   * entity validation API and\/or provide a new validation constraint if\n   * necessary. This is the only way to ensure that the validation logic\n   * is correctly applied independently of form submissions; e.g., for REST\n   * requests.\n   * For more information about entity validation, see\n   * https:\/\/www.drupal.org\/node\/2015613.\n   *\n   * @return \\Drupal\\Core\\Entity\\ContentEntityTypeInterface\n   *   The built entity.\n   *\/",61],["T_WHITESPACE","\n  ",75],["T_PUBLIC","public",76],["T_WHITESPACE"," ",76],["T_FUNCTION","function",76],["T_WHITESPACE"," ",76],["T_STRING","validateForm",76],"(",["T_ARRAY","array",76],["T_WHITESPACE"," ",76],"&",["T_VARIABLE","$form",76],",",["T_WHITESPACE"," ",76],["T_STRING","FormStateInterface",76],["T_WHITESPACE"," ",76],["T_VARIABLE","$form_state",76],")",";",["T_WHITESPACE","\n\n",76],"}",["T_WHITESPACE","\n",78]]