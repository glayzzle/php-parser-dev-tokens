[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_DOC_COMMENT","\/**\n * @file\n * Hooks and documentation related to entities.\n *\/",3],["T_WHITESPACE","\n\n",6],["T_USE","use",8],["T_WHITESPACE"," ",8],["T_STRING","Drupal",8],["T_NS_SEPARATOR","\\",8],["T_STRING","Core",8],["T_NS_SEPARATOR","\\",8],["T_STRING","Access",8],["T_NS_SEPARATOR","\\",8],["T_STRING","AccessResult",8],";",["T_WHITESPACE","\n",8],["T_USE","use",9],["T_WHITESPACE"," ",9],["T_STRING","Drupal",9],["T_NS_SEPARATOR","\\",9],["T_STRING","Core",9],["T_NS_SEPARATOR","\\",9],["T_STRING","Entity",9],["T_NS_SEPARATOR","\\",9],["T_STRING","ContentEntityInterface",9],";",["T_WHITESPACE","\n",9],["T_USE","use",10],["T_WHITESPACE"," ",10],["T_STRING","Drupal",10],["T_NS_SEPARATOR","\\",10],["T_STRING","Core",10],["T_NS_SEPARATOR","\\",10],["T_STRING","Entity",10],["T_NS_SEPARATOR","\\",10],["T_STRING","DynamicallyFieldableEntityStorageInterface",10],";",["T_WHITESPACE","\n",10],["T_USE","use",11],["T_WHITESPACE"," ",11],["T_STRING","Drupal",11],["T_NS_SEPARATOR","\\",11],["T_STRING","Core",11],["T_NS_SEPARATOR","\\",11],["T_STRING","Field",11],["T_NS_SEPARATOR","\\",11],["T_STRING","BaseFieldDefinition",11],";",["T_WHITESPACE","\n",11],["T_USE","use",12],["T_WHITESPACE"," ",12],["T_STRING","Drupal",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Core",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Render",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Element",12],";",["T_WHITESPACE","\n",12],["T_USE","use",13],["T_WHITESPACE"," ",13],["T_STRING","Drupal",13],["T_NS_SEPARATOR","\\",13],["T_STRING","language",13],["T_NS_SEPARATOR","\\",13],["T_STRING","Entity",13],["T_NS_SEPARATOR","\\",13],["T_STRING","ContentLanguageSettings",13],";",["T_WHITESPACE","\n",13],["T_USE","use",14],["T_WHITESPACE"," ",14],["T_STRING","Drupal",14],["T_NS_SEPARATOR","\\",14],["T_STRING","node",14],["T_NS_SEPARATOR","\\",14],["T_STRING","Entity",14],["T_NS_SEPARATOR","\\",14],["T_STRING","NodeType",14],";",["T_WHITESPACE","\n\n",14],["T_DOC_COMMENT","\/**\n * @defgroup entity_crud Entity CRUD, editing, and view hooks\n * @{\n * Hooks used in various entity operations.\n *\n * Entity create, read, update, and delete (CRUD) operations are performed by\n * entity storage classes; see the\n * @link entity_api Entity API topic @endlink for more information. Most\n * entities use or extend the default classes:\n * \\Drupal\\Core\\Entity\\Sql\\SqlContentEntityStorage for content entities, and\n * \\Drupal\\Core\\Config\\Entity\\ConfigEntityStorage for configuration entities.\n * For these entities, there is a set of hooks that is invoked for each\n * CRUD operation, which module developers can implement to affect these\n * operations; these hooks are actually invoked from methods on\n * \\Drupal\\Core\\Entity\\EntityStorageBase.\n *\n * For content entities, viewing and rendering are handled by a view builder\n * class; see the @link entity_api Entity API topic @endlink for more\n * information. Most view builders extend or use the default class\n * \\Drupal\\Core\\Entity\\EntityViewBuilder.\n *\n * Entity editing (including adding new entities) is handled by entity form\n * classes; see the @link entity_api Entity API topic @endlink for more\n * information. Most entity editing forms extend base classes\n * \\Drupal\\Core\\Entity\\EntityForm or \\Drupal\\Core\\Entity\\ContentEntityForm.\n * Note that many other operations, such as confirming deletion of entities,\n * also use entity form classes.\n *\n * This topic lists all of the entity CRUD and view operations, and the hooks\n * and other operations that are invoked (in order) for each operation. Some\n * notes:\n * - Whenever an entity hook is invoked, there is both a type-specific entity\n *   hook, and a generic entity hook. For instance, during a create operation on\n *   a node, first hook_node_create() and then hook_entity_create() would be\n *   invoked.\n * - The entity-type-specific hooks are represented in the list below as\n *   hook_ENTITY_TYPE_... (hook_ENTITY_TYPE_create() in this example). To\n *   implement one of these hooks for an entity whose machine name is \"foo\",\n *   define a function called mymodule_foo_create(), for instance. Also note\n *   that the entity or array of entities that are passed into a specific-type\n *   hook are of the specific entity class, not the generic Entity class, so in\n *   your implementation, you can make the $entity argument something like $node\n *   and give it a specific type hint (which should normally be to the specific\n *   interface, such as \\Drupal\\Node\\NodeInterface for nodes).\n * - $storage in the code examples is assumed to be an entity storage\n *   class. See the @link entity_api Entity API topic @endlink for\n *   information on how to instantiate the correct storage class for an\n *   entity type.\n * - $view_builder in the code examples is assumed to be an entity view builder\n *   class. See the @link entity_api Entity API topic @endlink for\n *   information on how to instantiate the correct view builder class for\n *   an entity type.\n * - During many operations, static methods are called on the entity class,\n *   which implements \\Drupal\\Entity\\EntityInterface.\n *\n * @section create Create operations\n * To create an entity:\n * @code\n * $entity = $storage->create();\n *\n * \/\/ Add code here to set properties on the entity.\n *\n * \/\/ Until you call save(), the entity is just in memory.\n * $entity->save();\n * @endcode\n * There is also a shortcut method on entity classes, which creates an entity\n * with an array of provided property values: \\Drupal\\Core\\Entity::create().\n *\n * Hooks invoked during the create operation:\n * - hook_ENTITY_TYPE_create()\n * - hook_entity_create()\n *\n * See @ref save below for the save portion of the operation.\n *\n * @section load Read\/Load operations\n * To load (read) a single entity:\n * @code\n * $entity = $storage->load($id);\n * @endcode\n * To load multiple entities:\n * @code\n * $entities = $storage->loadMultiple($ids);\n * @endcode\n * Since load() calls loadMultiple(), these are really the same operation.\n * Here is the order of hooks and other operations that take place during\n * entity loading:\n * - Entity is loaded from storage.\n * - postLoad() is called on the entity class, passing in all of the loaded\n *   entities.\n * - hook_entity_load()\n * - hook_ENTITY_TYPE_load()\n *\n * When an entity is loaded, normally the default entity revision is loaded.\n * It is also possible to load a different revision, for entities that support\n * revisions, with this code:\n * @code\n * $entity = $storage->loadRevision($revision_id);\n * @endcode\n * This involves the same hooks and operations as regular entity loading.\n *\n * @section save Save operations\n * To update an existing entity, you will need to load it, change properties,\n * and then save; as described above, when creating a new entity, you will also\n * need to save it. Here is the order of hooks and other events that happen\n * during an entity save:\n * - preSave() is called on the entity object, and field objects.\n * - hook_ENTITY_TYPE_presave()\n * - hook_entity_presave()\n * - Entity is saved to storage.\n * - For updates on content entities, if there is a translation added that\n *   was not previously present:\n *   - hook_ENTITY_TYPE_translation_insert()\n *   - hook_entity_translation_insert()\n * - For updates on content entities, if there was a translation removed:\n *   - hook_ENTITY_TYPE_translation_delete()\n *   - hook_entity_translation_delete()\n * - postSave() is called on the entity object.\n * - hook_ENTITY_TYPE_insert() (new) or hook_ENTITY_TYPE_update() (update)\n * - hook_entity_insert() (new) or hook_entity_update() (update)\n *\n * Some specific entity types invoke hooks during preSave() or postSave()\n * operations. Examples:\n * - Field configuration preSave(): hook_field_storage_config_update_forbid()\n * - Node postSave(): hook_node_access_records() and\n *   hook_node_access_records_alter()\n * - Config entities that are acting as entity bundles in postSave():\n *   hook_entity_bundle_create()\n * - Comment: hook_comment_publish() and hook_comment_unpublish() as\n *   appropriate.\n *\n * @section edit Editing operations\n * When an entity's add\/edit form is used to add or edit an entity, there\n * are several hooks that are invoked:\n * - hook_entity_prepare_form()\n * - hook_ENTITY_TYPE_prepare_form()\n * - hook_entity_form_display_alter() (for content entities only)\n *\n * @section delete Delete operations\n * To delete one or more entities, load them and then delete them:\n * @code\n * $entities = $storage->loadMultiple($ids);\n * $storage->delete($entities);\n * @endcode\n *\n * During the delete operation, the following hooks and other events happen:\n * - preDelete() is called on the entity class.\n * - hook_ENTITY_TYPE_predelete()\n * - hook_entity_predelete()\n * - Entity and field information is removed from storage.\n * - postDelete() is called on the entity class.\n * - hook_ENTITY_TYPE_delete()\n * - hook_entity_delete()\n *\n * Some specific entity types invoke hooks during the delete process. Examples:\n * - Entity bundle postDelete(): hook_entity_bundle_delete()\n *\n * Individual revisions of an entity can also be deleted:\n * @code\n * $storage->deleteRevision($revision_id);\n * @endcode\n * This operation invokes the following operations and hooks:\n * - Revision is loaded (see @ref load above).\n * - Revision and field information is removed from the database.\n * - hook_ENTITY_TYPE_revision_delete()\n * - hook_entity_revision_delete()\n *\n * @section view View\/render operations\n * To make a render array for a loaded entity:\n * @code\n * \/\/ You can omit the language ID if the default language is being used.\n * $build = $view_builder->view($entity, 'view_mode_name', $language->getId());\n * @endcode\n * You can also use the viewMultiple() method to view multiple entities.\n *\n * Hooks invoked during the operation of building a render array:\n * - hook_entity_view_mode_alter()\n * - hook_ENTITY_TYPE_build_defaults_alter()\n * - hook_entity_build_defaults_alter()\n *\n * View builders for some types override these hooks, notably:\n * - The Tour view builder does not invoke any hooks.\n * - The Block view builder invokes hook_block_view_alter() and\n *   hook_block_view_BASE_BLOCK_ID_alter(). Note that in other view builders,\n *   the view alter hooks are run later in the process.\n *\n * During the rendering operation, the default entity viewer runs the following\n * hooks and operations in the pre-render step:\n * - hook_entity_view_display_alter()\n * - hook_entity_prepare_view()\n * - Entity fields are loaded, and render arrays are built for them using\n *   their formatters.\n * - hook_entity_display_build_alter()\n * - hook_ENTITY_TYPE_view()\n * - hook_entity_view()\n * - hook_ENTITY_TYPE_view_alter()\n * - hook_entity_view_alter()\n *\n * Some specific builders have specific hooks:\n * - The Node view builder invokes hook_node_links_alter().\n * - The Comment view builder invokes hook_comment_links_alter().\n *\n * After this point in rendering, the theme system takes over. See the\n * @link theme_render Theme system and render API topic @endlink for more\n * information.\n *\n * @section misc Other entity hooks\n * Some types of entities invoke hooks for specific operations:\n * - Searching nodes:\n *   - hook_ranking()\n *   - Query is executed to find matching nodes\n *   - Resulting node is loaded\n *   - Node render array is built\n *   - comment_node_update_index() is called (this adds \"N comments\" text)\n *   - hook_node_search_result()\n * - Search indexing nodes:\n *   - Node is loaded\n *   - Node render array is built\n *   - hook_node_update_index()\n * @}\n *\/",16],["T_WHITESPACE","\n\n",235],["T_DOC_COMMENT","\/**\n * @defgroup entity_api Entity API\n * @{\n * Describes how to define and manipulate content and configuration entities.\n *\n * Entities, in Drupal, are objects that are used for persistent storage of\n * content and configuration information. See the\n * @link info_types Information types topic @endlink for an overview of the\n * different types of information, and the\n * @link config_api Configuration API topic @endlink for more about the\n * configuration API.\n *\n * Each entity is an instance of a particular \"entity type\". Some content entity\n * types have sub-types, which are known as \"bundles\", while for other entity\n * types, there is only a single bundle. For example, the Node content entity\n * type, which is used for the main content pages in Drupal, has bundles that\n * are known as \"content types\", while the User content type, which is used for\n * user accounts, has only one bundle.\n *\n * The sections below have more information about entities and the Entity API;\n * for more detailed information, see\n * https:\/\/www.drupal.org\/developing\/api\/entity.\n *\n * @section define Defining an entity type\n * Entity types are defined by modules, using Drupal's Plugin API (see the\n * @link plugin_api Plugin API topic @endlink for more information about plugins\n * in general). Here are the steps to follow to define a new entity type:\n * - Choose a unique machine name, or ID, for your entity type. This normally\n *   starts with (or is the same as) your module's machine name. It should be\n *   as short as possible, and may not exceed 32 characters.\n * - Define an interface for your entity's get\/set methods, usually extending\n *   either \\Drupal\\Core\\Config\\Entity\\ConfigEntityInterface or\n *   \\Drupal\\Core\\Entity\\ContentEntityInterface.\n * - Define a class for your entity, implementing your interface and extending\n *   either \\Drupal\\Core\\Config\\Entity\\ConfigEntityBase or\n *   \\Drupal\\Core\\Entity\\ContentEntityBase, with annotation for\n *   \\@ConfigEntityType or \\@ContentEntityType in its documentation block.\n * - The 'id' annotation gives the entity type ID, and the 'label' annotation\n *   gives the human-readable name of the entity type. If you are defining a\n *   content entity type that uses bundles, the 'bundle_label' annotation gives\n *   the human-readable name to use for a bundle of this entity type (for\n *   example, \"Content type\" for the Node entity).\n * - The annotation will refer to several handler classes, which you will also\n *   need to define:\n *   - list_builder: Define a class that extends\n *     \\Drupal\\Core\\Config\\Entity\\ConfigEntityListBuilder (for configuration\n *     entities) or \\Drupal\\Core\\Entity\\EntityListBuilder (for content\n *     entities), to provide an administrative overview for your entities.\n *   - add and edit forms, or default form: Define a class (or two) that\n *     extend(s) \\Drupal\\Core\\Entity\\EntityForm to provide add and edit forms\n *     for your entities. For content entities, base class\n *     \\Drupal\\Core\\Entity\\ContentEntityForm is a better starting point.\n *   - delete form: Define a class that extends\n *     \\Drupal\\Core\\Entity\\EntityConfirmFormBase to provide a delete\n *     confirmation form for your entities.\n *   - view_builder: For content entities and config entities that need to be\n *     viewed, define a class that implements\n *     \\Drupal\\Core\\Entity\\EntityViewBuilderInterface (usually extending\n *     \\Drupal\\Core\\Entity\\EntityViewBuilder), to display a single entity.\n *   - translation: For translatable content entities (if the 'translatable'\n *     annotation has value TRUE), define a class that extends\n *     \\Drupal\\content_translation\\ContentTranslationHandler, to translate\n *     the content. Configuration translation is handled automatically by the\n *     Configuration Translation module, without the need of a handler class.\n *   - access: If your configuration entity has complex permissions, you might\n *     need an access control handling, implementing\n *     \\Drupal\\Core\\Entity\\EntityAccessControlHandlerInterface, but most entities\n *     can just use the 'admin_permission' annotation instead. Note that if you\n *     are creating your own access control handler, you should override the\n *     checkAccess() and checkCreateAccess() methods, not access().\n *   - storage: A class implementing\n *     \\Drupal\\Core\\Entity\\EntityStorageInterface. If not specified, content\n *     entities will use \\Drupal\\Core\\Entity\\Sql\\SqlContentEntityStorage, and\n *     config entities will use \\Drupal\\Core\\Config\\Entity\\ConfigEntityStorage.\n *     You can extend one of these classes to provide custom behavior.\n *   - views_data: A class implementing \\Drupal\\views\\EntityViewsDataInterface\n *     to provide views data for the entity type. You can autogenerate most of\n *     the views data by extending \\Drupal\\views\\EntityViewsData.\n * - For content entities, the annotation will refer to a number of database\n *   tables and their fields. These annotation properties, such as 'base_table',\n *   'data_table', 'entity_keys', etc., are documented on\n *   \\Drupal\\Core\\Entity\\EntityType.\n * - For content entities that are displayed on their own pages, the annotation\n *   will refer to a 'uri_callback' function, which takes an object of the\n *   entity interface you have defined as its parameter, and returns routing\n *   information for the entity page; see node_uri() for an example. You will\n *   also need to add a corresponding route to your module's routing.yml file;\n *   see the entity.node.canonical route in node.routing.yml for an example, and see\n *   @ref sec_routes below for some notes.\n * - Optionally, instead of defining routes, routes can be auto generated by\n *   providing a route handler. See @ref sec_routes. Otherwise, define routes\n *   and links for the various URLs associated with the entity.\n *   These go into the 'links' annotation, with the link type as the key, and\n *   the path of this link template as the value. The corresponding route\n *   requires the following route name:\n *   \"entity.$entity_type_id.$link_template_type\". See @ref sec_routes below for\n *   some routing notes. Typical link types are:\n *   - canonical: Default link, either to view (if entities are viewed on their\n *     own pages) or edit the entity.\n *   - delete-form: Confirmation form to delete the entity.\n *   - edit-form: Editing form.\n *   - Other link types specific to your entity type can also be defined.\n * - If your content entity is fieldable, provide 'field_ui_base_route'\n *   annotation, giving the name of the route that the Manage Fields, Manage\n *   Display, and Manage Form Display pages from the Field UI module will be\n *   attached to. This is usually the bundle settings edit page, or an entity\n *   type settings page if there are no bundles.\n * - If your content entity has bundles, you will also need to define a second\n *   plugin to handle the bundles. This plugin is itself a configuration entity\n *   type, so follow the steps here to define it. The machine name ('id'\n *   annotation) of this configuration entity class goes into the\n *   'bundle_entity_type' annotation on the entity type class. For example, for\n *   the Node entity, the bundle class is \\Drupal\\node\\Entity\\NodeType, whose\n *   machine name is 'node_type'. This is the annotation value for\n *   'bundle_entity_type' on the \\Drupal\\node\\Entity\\Node class. Also, the\n *   bundle config entity type annotation must have a 'bundle_of' entry,\n *   giving the machine name of the entity type it is acting as a bundle for.\n *   These machine names are considered permanent, they may not be renamed.\n * - Additional annotations can be seen on entity class examples such as\n *   \\Drupal\\node\\Entity\\Node (content) and \\Drupal\\user\\Entity\\Role\n *   (configuration). These annotations are documented on\n *   \\Drupal\\Core\\Entity\\EntityType.\n *\n * @section sec_routes Entity routes\n * Entity routes can be defined in *.routing.yml files, like any other route:\n * see the @link routing Routing API @endlink topic for more information.\n * Another option for entity routes is to use a route provider class, and\n * reference it in the annotations on the entity class: see the end of this\n * section for an example.\n *\n * It's possible to use both a YAML file and a provider class for entity\n * routes, at the same time. Avoid duplicating route names between the two:\n * if a duplicate route name is found in both locations, the one in the YAML\n * file takes precedence; regardless, such duplication can be confusing.\n *\n * Here's an example YAML route specification, for the block configure form:\n * @code\n * entity.block.edit_form:\n *   path: '\/admin\/structure\/block\/manage\/{block}'\n *   defaults:\n *     _entity_form: 'block.default'\n *     _title: 'Configure block'\n *   requirements:\n *     _entity_access: 'block.update'\n * @endcode\n * Some notes on this example:\n * - path: The {block} in the path is a placeholder, which (for an entity) must\n *   always take the form of {machine_name_of_entity_type}. In the URL, the\n *   placeholder value will be the ID of an entity item. When the route is used,\n *   the entity system will load the corresponding entity item and pass it in as\n *   an object to the controller for the route.\n * - defaults: For entity form routes, use _entity_form rather than the generic\n *   _controller or _form. The value is composed of the entity type machine name\n *   and a form handler type from the entity annotation (see @ref define above\n *   more more on handlers and annotation). So, in this example, block.default\n *   refers to the 'default' form handler on the block entity type, whose\n *   annotation contains:\n *   @code\n *   handlers = {\n *     \"form\" = {\n *       \"default\" = \"Drupal\\block\\BlockForm\",\n *   @endcode\n * If instead of YAML you want to use a route provider class:\n * - \\Drupal\\Core\\Entity\\Routing\\DefaultHtmlRouteProvider provides canonical,\n *   edit-form, and delete-form routes.\n * - \\Drupal\\Core\\Entity\\Routing\\AdminHtmlRouteProvider provides the same\n *   routes, set up to use the administrative theme for edit and delete pages.\n * - You can also create your own class, extending one of these two classes if\n *   you only want to modify their behaviour slightly.\n *\n * To register any route provider class, add lines like the following to your\n * entity class annotation:\n * @code\n * handlers = {\n *   \"route_provider\" = {\n *     \"html\" = \"Drupal\\Core\\Entity\\Routing\\DefaultHtmlRouteProvider\",\n * @endcode\n *\n * @section bundle Defining a content entity bundle\n * For entity types that use bundles, such as Node (bundles are content types)\n * and Taxonomy (bundles are vocabularies), modules and install profiles can\n * define bundles by supplying default configuration in their config\/install\n * directories. (See the @link config_api Configuration API topic @endlink for\n * general information about configuration.)\n *\n * There are several good examples of this in Drupal Core:\n * - The Forum module defines a content type in node.type.forum.yml and a\n *   vocabulary in taxonomy.vocabulary.forums.yml\n * - The Book module defines a content type in node.type.book.yml\n * - The Standard install profile defines Page and Article content types in\n *   node.type.page.yml and node.type.article.yml, a Tags vocabulary in\n *   taxonomy.vocabulary.tags.yml, and a Node comment type in\n *   comment.type.comment.yml. This profile's configuration is especially\n *   instructive, because it also adds several fields to the Article type, and\n *   it sets up view and form display modes for the node types.\n *\n * @section load_query Loading, querying, and rendering entities\n * To load entities, use the entity storage manager, which is an object\n * implementing \\Drupal\\Core\\Entity\\EntityStorageInterface that you can\n * retrieve with:\n * @code\n * $storage = \\Drupal::entityManager()->getStorage('your_entity_type');\n * \/\/ Or if you have a $container variable:\n * $storage = $container->get('entity.manager')->getStorage('your_entity_type');\n * @endcode\n * Here, 'your_entity_type' is the machine name of your entity type ('id'\n * annotation on the entity class), and note that you should use dependency\n * injection to retrieve this object if possible. See the\n * @link container Services and Dependency Injection topic @endlink for more\n * about how to properly retrieve services.\n *\n * To query to find entities to load, use an entity query, which is a object\n * implementing \\Drupal\\Core\\Entity\\Query\\QueryInterface that you can retrieve\n * with:\n * @code\n * \/\/ Simple query:\n * $query = \\Drupal::entityQuery('your_entity_type');\n * \/\/ Or, if you have a $container variable:\n * $query_service = $container->get('entity.query');\n * $query = $query_service->get('your_entity_type');\n * @endcode\n * If you need aggregation, there is an aggregate query available, which\n * implements \\Drupal\\Core\\Entity\\Query\\QueryAggregateInterface:\n * @code\n * $query \\Drupal::entityQueryAggregate('your_entity_type');\n * \/\/ Or:\n * $query = $query_service->getAggregate('your_entity_type');\n * @endcode\n * Also, you should use dependency injection to get this object if\n * possible; the service you need is entity.query, and its methods getQuery()\n * or getAggregateQuery() will get the query object.\n *\n * In either case, you can then add conditions to your query, using methods\n * like condition(), exists(), etc. on $query; add sorting, pager, and range\n * if needed, and execute the query to return a list of entity IDs that match\n * the query.\n *\n * Here is an example, using the core File entity:\n * @code\n * $fids = Drupal::entityQuery('file')\n *   ->condition('status', FILE_STATUS_PERMANENT, '<>')\n *   ->condition('changed', REQUEST_TIME - $age, '<')\n *   ->range(0, 100)\n *   ->execute();\n * $files = $storage->loadMultiple($fids);\n * @endcode\n *\n * The normal way of viewing entities is by using a route, as described in the\n * sections above. If for some reason you need to render an entity in code in a\n * particular view mode, you can use an entity view builder, which is an object\n * implementing \\Drupal\\Core\\Entity\\EntityViewBuilderInterface that you can\n * retrieve with:\n * @code\n * $view_builder = \\Drupal::entityManager()->getViewBuilder('your_entity_type');\n * \/\/ Or if you have a $container variable:\n * $view_builder = $container->get('entity.manager')->getViewBuilder('your_entity_type');\n * @endcode\n * Then, to build and render the entity:\n * @code\n * \/\/ You can omit the language ID, by default the current content language will\n * \/\/ be used. If no translation is available for the current language, fallback\n * \/\/ rules will be used.\n * $build = $view_builder->view($entity, 'view_mode_name', $language->getId());\n * \/\/ $build is a render array.\n * $rendered = drupal_render($build);\n * @endcode\n *\n * @section sec_access Access checking on entities\n * Entity types define their access permission scheme in their annotation.\n * Access permissions can be quite complex, so you should not assume any\n * particular permission scheme. Instead, once you have an entity object\n * loaded, you can check for permission for a particular operation (such as\n * 'view') at the entity or field level by calling:\n * @code\n * $entity->access($operation);\n * $entity->nameOfField->access($operation);\n * @endcode\n * The interface related to access checking in entities and fields is\n * \\Drupal\\Core\\Access\\AccessibleInterface.\n *\n * The default entity access control handler invokes two hooks while checking\n * access on a single entity: hook_entity_access() is invoked first, and\n * then hook_ENTITY_TYPE_access() (where ENTITY_TYPE is the machine name\n * of the entity type). If no module returns a TRUE or FALSE value from\n * either of these hooks, then the entity's default access checking takes\n * place. For create operations (creating a new entity), the hooks that\n * are invoked are hook_entity_create_access() and\n * hook_ENTITY_TYPE_create_access() instead.\n *\n * The Node entity type has a complex system for determining access, which\n * developers can interact with. This is described in the\n * @link node_access Node access topic. @endlink\n *\n * @see i18n\n * @see entity_crud\n * @see \\Drupal\\Core\\Entity\\EntityManagerInterface::getTranslationFromContext()\n * @}\n *\/",237],["T_WHITESPACE","\n\n",534],["T_DOC_COMMENT","\/**\n * @addtogroup hooks\n * @{\n *\/",536],["T_WHITESPACE","\n\n",539],["T_DOC_COMMENT","\/**\n * Control entity operation access.\n *\n * @param \\Drupal\\Core\\Entity\\EntityInterface $entity\n *   The entity to check access to.\n * @param string $operation\n *   The operation that is to be performed on $entity.\n * @param \\Drupal\\Core\\Session\\AccountInterface $account\n *   The account trying to access the entity.\n *\n * @return \\Drupal\\Core\\Access\\AccessResultInterface\n *   The access result. The final result is calculated by using\n *   \\Drupal\\Core\\Access\\AccessResultInterface::orIf() on the result of every\n *   hook_entity_access() and hook_ENTITY_TYPE_access() implementation, and the\n *   result of the entity-specific checkAccess() method in the entity access\n *   control handler. Be careful when writing generalized access checks shared\n *   between routing and entity checks: routing uses the andIf() operator. So\n *   returning an isNeutral() does not determine entity access at all but it\n *   always ends up denying access while routing.\n *\n * @see \\Drupal\\Core\\Entity\\EntityAccessControlHandler\n * @see hook_entity_create_access()\n * @see hook_ENTITY_TYPE_access()\n *\n * @ingroup entity_api\n *\/",541],["T_WHITESPACE","\n",566],["T_FUNCTION","function",567],["T_WHITESPACE"," ",567],["T_STRING","hook_entity_access",567],"(",["T_NS_SEPARATOR","\\",567],["T_STRING","Drupal",567],["T_NS_SEPARATOR","\\",567],["T_STRING","Core",567],["T_NS_SEPARATOR","\\",567],["T_STRING","Entity",567],["T_NS_SEPARATOR","\\",567],["T_STRING","EntityInterface",567],["T_WHITESPACE"," ",567],["T_VARIABLE","$entity",567],",",["T_WHITESPACE"," ",567],["T_VARIABLE","$operation",567],",",["T_WHITESPACE"," ",567],["T_NS_SEPARATOR","\\",567],["T_STRING","Drupal",567],["T_NS_SEPARATOR","\\",567],["T_STRING","Core",567],["T_NS_SEPARATOR","\\",567],["T_STRING","Session",567],["T_NS_SEPARATOR","\\",567],["T_STRING","AccountInterface",567],["T_WHITESPACE"," ",567],["T_VARIABLE","$account",567],")",["T_WHITESPACE"," ",567],"{",["T_WHITESPACE","\n  ",567],["T_COMMENT","\/\/ No opinion.\n",568],["T_WHITESPACE","  ",569],["T_RETURN","return",569],["T_WHITESPACE"," ",569],["T_STRING","AccessResult",569],["T_DOUBLE_COLON","::",569],["T_STRING","neutral",569],"(",")",";",["T_WHITESPACE","\n",569],"}",["T_WHITESPACE","\n\n",570],["T_DOC_COMMENT","\/**\n * Control entity operation access for a specific entity type.\n *\n * @param \\Drupal\\Core\\Entity\\EntityInterface $entity\n *   The entity to check access to.\n * @param string $operation\n *   The operation that is to be performed on $entity.\n * @param \\Drupal\\Core\\Session\\AccountInterface $account\n *   The account trying to access the entity.\n *\n * @return \\Drupal\\Core\\Access\\AccessResultInterface\n *   The access result. hook_entity_access() has detailed documentation.\n *\n * @see \\Drupal\\Core\\Entity\\EntityAccessControlHandler\n * @see hook_ENTITY_TYPE_create_access()\n * @see hook_entity_access()\n *\n * @ingroup entity_api\n *\/",572],["T_WHITESPACE","\n",590],["T_FUNCTION","function",591],["T_WHITESPACE"," ",591],["T_STRING","hook_ENTITY_TYPE_access",591],"(",["T_NS_SEPARATOR","\\",591],["T_STRING","Drupal",591],["T_NS_SEPARATOR","\\",591],["T_STRING","Core",591],["T_NS_SEPARATOR","\\",591],["T_STRING","Entity",591],["T_NS_SEPARATOR","\\",591],["T_STRING","EntityInterface",591],["T_WHITESPACE"," ",591],["T_VARIABLE","$entity",591],",",["T_WHITESPACE"," ",591],["T_VARIABLE","$operation",591],",",["T_WHITESPACE"," ",591],["T_NS_SEPARATOR","\\",591],["T_STRING","Drupal",591],["T_NS_SEPARATOR","\\",591],["T_STRING","Core",591],["T_NS_SEPARATOR","\\",591],["T_STRING","Session",591],["T_NS_SEPARATOR","\\",591],["T_STRING","AccountInterface",591],["T_WHITESPACE"," ",591],["T_VARIABLE","$account",591],")",["T_WHITESPACE"," ",591],"{",["T_WHITESPACE","\n  ",591],["T_COMMENT","\/\/ No opinion.\n",592],["T_WHITESPACE","  ",593],["T_RETURN","return",593],["T_WHITESPACE"," ",593],["T_STRING","AccessResult",593],["T_DOUBLE_COLON","::",593],["T_STRING","neutral",593],"(",")",";",["T_WHITESPACE","\n",593],"}",["T_WHITESPACE","\n\n",594],["T_DOC_COMMENT","\/**\n * Control entity create access.\n *\n * @param \\Drupal\\Core\\Session\\AccountInterface $account\n *   The account trying to access the entity.\n * @param array $context\n *   An associative array of additional context values. By default it contains\n *   language and the entity type ID:\n *   - entity_type_id - the entity type ID.\n *   - langcode - the current language code.\n * @param string $entity_bundle\n *   The entity bundle name.\n *\n * @return \\Drupal\\Core\\Access\\AccessResultInterface\n *   The access result.\n *\n * @see \\Drupal\\Core\\Entity\\EntityAccessControlHandler\n * @see hook_entity_access()\n * @see hook_ENTITY_TYPE_create_access()\n *\n * @ingroup entity_api\n *\/",596],["T_WHITESPACE","\n",617],["T_FUNCTION","function",618],["T_WHITESPACE"," ",618],["T_STRING","hook_entity_create_access",618],"(",["T_NS_SEPARATOR","\\",618],["T_STRING","Drupal",618],["T_NS_SEPARATOR","\\",618],["T_STRING","Core",618],["T_NS_SEPARATOR","\\",618],["T_STRING","Session",618],["T_NS_SEPARATOR","\\",618],["T_STRING","AccountInterface",618],["T_WHITESPACE"," ",618],["T_VARIABLE","$account",618],",",["T_WHITESPACE"," ",618],["T_ARRAY","array",618],["T_WHITESPACE"," ",618],["T_VARIABLE","$context",618],",",["T_WHITESPACE"," ",618],["T_VARIABLE","$entity_bundle",618],")",["T_WHITESPACE"," ",618],"{",["T_WHITESPACE","\n  ",618],["T_COMMENT","\/\/ No opinion.\n",619],["T_WHITESPACE","  ",620],["T_RETURN","return",620],["T_WHITESPACE"," ",620],["T_STRING","AccessResult",620],["T_DOUBLE_COLON","::",620],["T_STRING","neutral",620],"(",")",";",["T_WHITESPACE","\n",620],"}",["T_WHITESPACE","\n\n",621],["T_DOC_COMMENT","\/**\n * Control entity create access for a specific entity type.\n *\n * @param \\Drupal\\Core\\Session\\AccountInterface $account\n *   The account trying to access the entity.\n * @param array $context\n *   An associative array of additional context values. By default it contains\n *   language:\n *   - langcode - the current language code.\n * @param string $entity_bundle\n *   The entity bundle name.\n *\n * @return \\Drupal\\Core\\Access\\AccessResultInterface\n *   The access result.\n *\n * @see \\Drupal\\Core\\Entity\\EntityAccessControlHandler\n * @see hook_ENTITY_TYPE_access()\n * @see hook_entity_create_access()\n *\n * @ingroup entity_api\n *\/",623],["T_WHITESPACE","\n",643],["T_FUNCTION","function",644],["T_WHITESPACE"," ",644],["T_STRING","hook_ENTITY_TYPE_create_access",644],"(",["T_NS_SEPARATOR","\\",644],["T_STRING","Drupal",644],["T_NS_SEPARATOR","\\",644],["T_STRING","Core",644],["T_NS_SEPARATOR","\\",644],["T_STRING","Session",644],["T_NS_SEPARATOR","\\",644],["T_STRING","AccountInterface",644],["T_WHITESPACE"," ",644],["T_VARIABLE","$account",644],",",["T_WHITESPACE"," ",644],["T_ARRAY","array",644],["T_WHITESPACE"," ",644],["T_VARIABLE","$context",644],",",["T_WHITESPACE"," ",644],["T_VARIABLE","$entity_bundle",644],")",["T_WHITESPACE"," ",644],"{",["T_WHITESPACE","\n  ",644],["T_COMMENT","\/\/ No opinion.\n",645],["T_WHITESPACE","  ",646],["T_RETURN","return",646],["T_WHITESPACE"," ",646],["T_STRING","AccessResult",646],["T_DOUBLE_COLON","::",646],["T_STRING","neutral",646],"(",")",";",["T_WHITESPACE","\n",646],"}",["T_WHITESPACE","\n\n",647],["T_DOC_COMMENT","\/**\n * Add to entity type definitions.\n *\n * Modules may implement this hook to add information to defined entity types,\n * as defined in \\Drupal\\Core\\Entity\\EntityTypeInterface.\n *\n * To alter existing information or to add information dynamically, use\n * hook_entity_type_alter().\n *\n * @param \\Drupal\\Core\\Entity\\EntityTypeInterface[] $entity_types\n *   An associative array of all entity type definitions, keyed by the entity\n *   type name. Passed by reference.\n *\n * @see \\Drupal\\Core\\Entity\\Entity\n * @see \\Drupal\\Core\\Entity\\EntityTypeInterface\n * @see hook_entity_type_alter()\n *\/",649],["T_WHITESPACE","\n",665],["T_FUNCTION","function",666],["T_WHITESPACE"," ",666],["T_STRING","hook_entity_type_build",666],"(",["T_ARRAY","array",666],["T_WHITESPACE"," ",666],"&",["T_VARIABLE","$entity_types",666],")",["T_WHITESPACE"," ",666],"{",["T_WHITESPACE","\n  ",666],["T_DOC_COMMENT","\/** @var $entity_types \\Drupal\\Core\\Entity\\EntityTypeInterface[] *\/",667],["T_WHITESPACE","\n  ",667],["T_COMMENT","\/\/ Add a form for a custom node form without overriding the default\n",668],["T_WHITESPACE","  ",669],["T_COMMENT","\/\/ node form. To override the default node form, use hook_entity_type_alter().\n",669],["T_WHITESPACE","  ",670],["T_VARIABLE","$entity_types",670],"[",["T_CONSTANT_ENCAPSED_STRING","'node'",670],"]",["T_OBJECT_OPERATOR","->",670],["T_STRING","setFormClass",670],"(",["T_CONSTANT_ENCAPSED_STRING","'mymodule_foo'",670],",",["T_WHITESPACE"," ",670],["T_CONSTANT_ENCAPSED_STRING","'Drupal\\mymodule\\NodeFooForm'",670],")",";",["T_WHITESPACE","\n",670],"}",["T_WHITESPACE","\n\n",671],["T_DOC_COMMENT","\/**\n * Alter the entity type definitions.\n *\n * Modules may implement this hook to alter the information that defines an\n * entity type. All properties that are available in\n * \\Drupal\\Core\\Entity\\Annotation\\EntityType and all the ones additionally\n * provided by modules can be altered here.\n *\n * Do not use this hook to add information to entity types, unless one of the\n * following is true:\n * - You are filling in default values.\n * - You need to dynamically add information only in certain circumstances.\n * - Your hook needs to run after hook_entity_type_build() implementations.\n * Use hook_entity_type_build() instead in all other cases.\n *\n * @param \\Drupal\\Core\\Entity\\EntityTypeInterface[] $entity_types\n *   An associative array of all entity type definitions, keyed by the entity\n *   type name. Passed by reference.\n *\n * @see \\Drupal\\Core\\Entity\\Entity\n * @see \\Drupal\\Core\\Entity\\EntityTypeInterface\n *\/",673],["T_WHITESPACE","\n",694],["T_FUNCTION","function",695],["T_WHITESPACE"," ",695],["T_STRING","hook_entity_type_alter",695],"(",["T_ARRAY","array",695],["T_WHITESPACE"," ",695],"&",["T_VARIABLE","$entity_types",695],")",["T_WHITESPACE"," ",695],"{",["T_WHITESPACE","\n  ",695],["T_DOC_COMMENT","\/** @var $entity_types \\Drupal\\Core\\Entity\\EntityTypeInterface[] *\/",696],["T_WHITESPACE","\n  ",696],["T_COMMENT","\/\/ Set the controller class for nodes to an alternate implementation of the\n",697],["T_WHITESPACE","  ",698],["T_COMMENT","\/\/ Drupal\\Core\\Entity\\EntityStorageInterface interface.\n",698],["T_WHITESPACE","  ",699],["T_VARIABLE","$entity_types",699],"[",["T_CONSTANT_ENCAPSED_STRING","'node'",699],"]",["T_OBJECT_OPERATOR","->",699],["T_STRING","setStorageClass",699],"(",["T_CONSTANT_ENCAPSED_STRING","'Drupal\\mymodule\\MyCustomNodeStorage'",699],")",";",["T_WHITESPACE","\n",699],"}",["T_WHITESPACE","\n\n",700],["T_DOC_COMMENT","\/**\n * Alter the view modes for entity types.\n *\n * @param array $view_modes\n *   An array of view modes, keyed first by entity type, then by view mode name.\n *\n * @see \\Drupal\\Core\\Entity\\EntityManagerInterface::getAllViewModes()\n * @see \\Drupal\\Core\\Entity\\EntityManagerInterface::getViewModes()\n *\/",702],["T_WHITESPACE","\n",710],["T_FUNCTION","function",711],["T_WHITESPACE"," ",711],["T_STRING","hook_entity_view_mode_info_alter",711],"(","&",["T_VARIABLE","$view_modes",711],")",["T_WHITESPACE"," ",711],"{",["T_WHITESPACE","\n  ",711],["T_VARIABLE","$view_modes",712],"[",["T_CONSTANT_ENCAPSED_STRING","'user'",712],"]","[",["T_CONSTANT_ENCAPSED_STRING","'full'",712],"]","[",["T_CONSTANT_ENCAPSED_STRING","'status'",712],"]",["T_WHITESPACE"," ",712],"=",["T_WHITESPACE"," ",712],["T_STRING","TRUE",712],";",["T_WHITESPACE","\n",712],"}",["T_WHITESPACE","\n\n",713],["T_DOC_COMMENT","\/**\n * Describe the bundles for entity types.\n *\n * @return array\n *   An associative array of all entity bundles, keyed by the entity\n *   type name, and then the bundle name, with the following keys:\n *   - label: The human-readable name of the bundle.\n *   - uri_callback: The same as the 'uri_callback' key defined for the entity\n *     type in the EntityManager, but for the bundle only. When determining\n *     the URI of an entity, if a 'uri_callback' is defined for both the\n *     entity type and the bundle, the one for the bundle is used.\n *   - translatable: (optional) A boolean value specifying whether this bundle\n *     has translation support enabled. Defaults to FALSE.\n *\n * @see \\Drupal\\Core\\Entity\\EntityTypeBundleInfo::getBundleInfo()\n * @see hook_entity_bundle_info_alter()\n *\/",715],["T_WHITESPACE","\n",731],["T_FUNCTION","function",732],["T_WHITESPACE"," ",732],["T_STRING","hook_entity_bundle_info",732],"(",")",["T_WHITESPACE"," ",732],"{",["T_WHITESPACE","\n  ",732],["T_VARIABLE","$bundles",733],"[",["T_CONSTANT_ENCAPSED_STRING","'user'",733],"]","[",["T_CONSTANT_ENCAPSED_STRING","'user'",733],"]","[",["T_CONSTANT_ENCAPSED_STRING","'label'",733],"]",["T_WHITESPACE"," ",733],"=",["T_WHITESPACE"," ",733],["T_STRING","t",733],"(",["T_CONSTANT_ENCAPSED_STRING","'User'",733],")",";",["T_WHITESPACE","\n  ",733],["T_RETURN","return",734],["T_WHITESPACE"," ",734],["T_VARIABLE","$bundles",734],";",["T_WHITESPACE","\n",734],"}",["T_WHITESPACE","\n\n",735],["T_DOC_COMMENT","\/**\n * Alter the bundles for entity types.\n *\n * @param array $bundles\n *   An array of bundles, keyed first by entity type, then by bundle name.\n *\n * @see Drupal\\Core\\Entity\\EntityTypeBundleInfo::getBundleInfo()\n * @see hook_entity_bundle_info()\n *\/",737],["T_WHITESPACE","\n",745],["T_FUNCTION","function",746],["T_WHITESPACE"," ",746],["T_STRING","hook_entity_bundle_info_alter",746],"(","&",["T_VARIABLE","$bundles",746],")",["T_WHITESPACE"," ",746],"{",["T_WHITESPACE","\n  ",746],["T_VARIABLE","$bundles",747],"[",["T_CONSTANT_ENCAPSED_STRING","'user'",747],"]","[",["T_CONSTANT_ENCAPSED_STRING","'user'",747],"]","[",["T_CONSTANT_ENCAPSED_STRING","'label'",747],"]",["T_WHITESPACE"," ",747],"=",["T_WHITESPACE"," ",747],["T_STRING","t",747],"(",["T_CONSTANT_ENCAPSED_STRING","'Full account'",747],")",";",["T_WHITESPACE","\n",747],"}",["T_WHITESPACE","\n\n",748],["T_DOC_COMMENT","\/**\n * Act on entity_bundle_create().\n *\n * This hook is invoked after the operation has been performed.\n *\n * @param string $entity_type_id\n *   The type of $entity; e.g. 'node' or 'user'.\n * @param string $bundle\n *   The name of the bundle.\n *\n * @see entity_crud\n *\/",750],["T_WHITESPACE","\n",761],["T_FUNCTION","function",762],["T_WHITESPACE"," ",762],["T_STRING","hook_entity_bundle_create",762],"(",["T_VARIABLE","$entity_type_id",762],",",["T_WHITESPACE"," ",762],["T_VARIABLE","$bundle",762],")",["T_WHITESPACE"," ",762],"{",["T_WHITESPACE","\n  ",762],["T_COMMENT","\/\/ When a new bundle is created, the menu needs to be rebuilt to add the\n",763],["T_WHITESPACE","  ",764],["T_COMMENT","\/\/ Field UI menu item tabs.\n",764],["T_WHITESPACE","  ",765],["T_NS_SEPARATOR","\\",765],["T_STRING","Drupal",765],["T_DOUBLE_COLON","::",765],["T_STRING","service",765],"(",["T_CONSTANT_ENCAPSED_STRING","'router.builder'",765],")",["T_OBJECT_OPERATOR","->",765],["T_STRING","setRebuildNeeded",765],"(",")",";",["T_WHITESPACE","\n",765],"}",["T_WHITESPACE","\n\n",766],["T_DOC_COMMENT","\/**\n * Act on entity_bundle_delete().\n *\n * This hook is invoked after the operation has been performed.\n *\n * @param string $entity_type_id\n *   The type of entity; for example, 'node' or 'user'.\n * @param string $bundle\n *   The bundle that was just deleted.\n *\n * @ingroup entity_crud\n *\/",768],["T_WHITESPACE","\n",779],["T_FUNCTION","function",780],["T_WHITESPACE"," ",780],["T_STRING","hook_entity_bundle_delete",780],"(",["T_VARIABLE","$entity_type_id",780],",",["T_WHITESPACE"," ",780],["T_VARIABLE","$bundle",780],")",["T_WHITESPACE"," ",780],"{",["T_WHITESPACE","\n  ",780],["T_COMMENT","\/\/ Remove the settings associated with the bundle in my_module.settings.\n",781],["T_WHITESPACE","  ",782],["T_VARIABLE","$config",782],["T_WHITESPACE"," ",782],"=",["T_WHITESPACE"," ",782],["T_NS_SEPARATOR","\\",782],["T_STRING","Drupal",782],["T_DOUBLE_COLON","::",782],["T_STRING","config",782],"(",["T_CONSTANT_ENCAPSED_STRING","'my_module.settings'",782],")",";",["T_WHITESPACE","\n  ",782],["T_VARIABLE","$bundle_settings",783],["T_WHITESPACE"," ",783],"=",["T_WHITESPACE"," ",783],["T_VARIABLE","$config",783],["T_OBJECT_OPERATOR","->",783],["T_STRING","get",783],"(",["T_CONSTANT_ENCAPSED_STRING","'bundle_settings'",783],")",";",["T_WHITESPACE","\n  ",783],["T_IF","if",784],["T_WHITESPACE"," ",784],"(",["T_ISSET","isset",784],"(",["T_VARIABLE","$bundle_settings",784],"[",["T_VARIABLE","$entity_type_id",784],"]","[",["T_VARIABLE","$bundle",784],"]",")",")",["T_WHITESPACE"," ",784],"{",["T_WHITESPACE","\n    ",784],["T_UNSET","unset",785],"(",["T_VARIABLE","$bundle_settings",785],"[",["T_VARIABLE","$entity_type_id",785],"]","[",["T_VARIABLE","$bundle",785],"]",")",";",["T_WHITESPACE","\n    ",785],["T_VARIABLE","$config",786],["T_OBJECT_OPERATOR","->",786],["T_STRING","set",786],"(",["T_CONSTANT_ENCAPSED_STRING","'bundle_settings'",786],",",["T_WHITESPACE"," ",786],["T_VARIABLE","$bundle_settings",786],")",";",["T_WHITESPACE","\n  ",786],"}",["T_WHITESPACE","\n",787],"}",["T_WHITESPACE","\n\n",788],["T_DOC_COMMENT","\/**\n * Acts when creating a new entity.\n *\n * This hook runs after a new entity object has just been instantiated.\n *\n * @param \\Drupal\\Core\\Entity\\EntityInterface $entity\n *   The entity object.\n *\n * @ingroup entity_crud\n * @see hook_ENTITY_TYPE_create()\n *\/",790],["T_WHITESPACE","\n",800],["T_FUNCTION","function",801],["T_WHITESPACE"," ",801],["T_STRING","hook_entity_create",801],"(",["T_NS_SEPARATOR","\\",801],["T_STRING","Drupal",801],["T_NS_SEPARATOR","\\",801],["T_STRING","Core",801],["T_NS_SEPARATOR","\\",801],["T_STRING","Entity",801],["T_NS_SEPARATOR","\\",801],["T_STRING","EntityInterface",801],["T_WHITESPACE"," ",801],["T_VARIABLE","$entity",801],")",["T_WHITESPACE"," ",801],"{",["T_WHITESPACE","\n  ",801],["T_NS_SEPARATOR","\\",802],["T_STRING","Drupal",802],["T_DOUBLE_COLON","::",802],["T_STRING","logger",802],"(",["T_CONSTANT_ENCAPSED_STRING","'example'",802],")",["T_OBJECT_OPERATOR","->",802],["T_STRING","info",802],"(",["T_CONSTANT_ENCAPSED_STRING","'Entity created: @label'",802],",",["T_WHITESPACE"," ",802],"[",["T_CONSTANT_ENCAPSED_STRING","'@label'",802],["T_WHITESPACE"," ",802],["T_DOUBLE_ARROW","=>",802],["T_WHITESPACE"," ",802],["T_VARIABLE","$entity",802],["T_OBJECT_OPERATOR","->",802],["T_STRING","label",802],"(",")","]",")",";",["T_WHITESPACE","\n",802],"}",["T_WHITESPACE","\n\n",803],["T_DOC_COMMENT","\/**\n * Acts when creating a new entity of a specific type.\n *\n * This hook runs after a new entity object has just been instantiated.\n *\n * @param \\Drupal\\Core\\Entity\\EntityInterface $entity\n *   The entity object.\n *\n * @ingroup entity_crud\n * @see hook_entity_create()\n *\/",805],["T_WHITESPACE","\n",815],["T_FUNCTION","function",816],["T_WHITESPACE"," ",816],["T_STRING","hook_ENTITY_TYPE_create",816],"(",["T_NS_SEPARATOR","\\",816],["T_STRING","Drupal",816],["T_NS_SEPARATOR","\\",816],["T_STRING","Core",816],["T_NS_SEPARATOR","\\",816],["T_STRING","Entity",816],["T_NS_SEPARATOR","\\",816],["T_STRING","EntityInterface",816],["T_WHITESPACE"," ",816],["T_VARIABLE","$entity",816],")",["T_WHITESPACE"," ",816],"{",["T_WHITESPACE","\n  ",816],["T_NS_SEPARATOR","\\",817],["T_STRING","Drupal",817],["T_DOUBLE_COLON","::",817],["T_STRING","logger",817],"(",["T_CONSTANT_ENCAPSED_STRING","'example'",817],")",["T_OBJECT_OPERATOR","->",817],["T_STRING","info",817],"(",["T_CONSTANT_ENCAPSED_STRING","'ENTITY_TYPE created: @label'",817],",",["T_WHITESPACE"," ",817],"[",["T_CONSTANT_ENCAPSED_STRING","'@label'",817],["T_WHITESPACE"," ",817],["T_DOUBLE_ARROW","=>",817],["T_WHITESPACE"," ",817],["T_VARIABLE","$entity",817],["T_OBJECT_OPERATOR","->",817],["T_STRING","label",817],"(",")","]",")",";",["T_WHITESPACE","\n",817],"}",["T_WHITESPACE","\n\n",818],["T_DOC_COMMENT","\/**\n * Act on entities when loaded.\n *\n * This is a generic load hook called for all entity types loaded via the\n * entity API.\n *\n * hook_entity_storage_load() should be used to load additional data for\n * content entities.\n *\n * @param \\Drupal\\Core\\Entity\\EntityInterface[] $entities\n *   The entities keyed by entity ID.\n * @param string $entity_type_id\n *   The type of entities being loaded (i.e. node, user, comment).\n *\n * @ingroup entity_crud\n * @see hook_ENTITY_TYPE_load()\n *\/",820],["T_WHITESPACE","\n",836],["T_FUNCTION","function",837],["T_WHITESPACE"," ",837],["T_STRING","hook_entity_load",837],"(",["T_ARRAY","array",837],["T_WHITESPACE"," ",837],["T_VARIABLE","$entities",837],",",["T_WHITESPACE"," ",837],["T_VARIABLE","$entity_type_id",837],")",["T_WHITESPACE"," ",837],"{",["T_WHITESPACE","\n  ",837],["T_FOREACH","foreach",838],["T_WHITESPACE"," ",838],"(",["T_VARIABLE","$entities",838],["T_WHITESPACE"," ",838],["T_AS","as",838],["T_WHITESPACE"," ",838],["T_VARIABLE","$entity",838],")",["T_WHITESPACE"," ",838],"{",["T_WHITESPACE","\n    ",838],["T_VARIABLE","$entity",839],["T_OBJECT_OPERATOR","->",839],["T_STRING","foo",839],["T_WHITESPACE"," ",839],"=",["T_WHITESPACE"," ",839],["T_STRING","mymodule_add_something",839],"(",["T_VARIABLE","$entity",839],")",";",["T_WHITESPACE","\n  ",839],"}",["T_WHITESPACE","\n",840],"}",["T_WHITESPACE","\n\n",841],["T_DOC_COMMENT","\/**\n * Act on entities of a specific type when loaded.\n *\n * @param array $entities\n *   The entities keyed by entity ID.\n *\n * @ingroup entity_crud\n * @see hook_entity_load()\n *\/",843],["T_WHITESPACE","\n",851],["T_FUNCTION","function",852],["T_WHITESPACE"," ",852],["T_STRING","hook_ENTITY_TYPE_load",852],"(",["T_VARIABLE","$entities",852],")",["T_WHITESPACE"," ",852],"{",["T_WHITESPACE","\n  ",852],["T_FOREACH","foreach",853],["T_WHITESPACE"," ",853],"(",["T_VARIABLE","$entities",853],["T_WHITESPACE"," ",853],["T_AS","as",853],["T_WHITESPACE"," ",853],["T_VARIABLE","$entity",853],")",["T_WHITESPACE"," ",853],"{",["T_WHITESPACE","\n    ",853],["T_VARIABLE","$entity",854],["T_OBJECT_OPERATOR","->",854],["T_STRING","foo",854],["T_WHITESPACE"," ",854],"=",["T_WHITESPACE"," ",854],["T_STRING","mymodule_add_something",854],"(",["T_VARIABLE","$entity",854],")",";",["T_WHITESPACE","\n  ",854],"}",["T_WHITESPACE","\n",855],"}",["T_WHITESPACE","\n\n",856],["T_DOC_COMMENT","\/**\n * Act on content entities when loaded from the storage.\n *\n * The results of this hook will be cached.\n *\n * @param \\Drupal\\Core\\Entity\\EntityInterface[] $entities\n *   The entities keyed by entity ID.\n * @param string $entity_type\n *   The type of entities being loaded (i.e. node, user, comment).\n *\n * @see hook_entity_load()\n *\/",858],["T_WHITESPACE","\n",869],["T_FUNCTION","function",870],["T_WHITESPACE"," ",870],["T_STRING","hook_entity_storage_load",870],"(",["T_ARRAY","array",870],["T_WHITESPACE"," ",870],["T_VARIABLE","$entities",870],",",["T_WHITESPACE"," ",870],["T_VARIABLE","$entity_type",870],")",["T_WHITESPACE"," ",870],"{",["T_WHITESPACE","\n  ",870],["T_FOREACH","foreach",871],["T_WHITESPACE"," ",871],"(",["T_VARIABLE","$entities",871],["T_WHITESPACE"," ",871],["T_AS","as",871],["T_WHITESPACE"," ",871],["T_VARIABLE","$entity",871],")",["T_WHITESPACE"," ",871],"{",["T_WHITESPACE","\n    ",871],["T_VARIABLE","$entity",872],["T_OBJECT_OPERATOR","->",872],["T_STRING","foo",872],["T_WHITESPACE"," ",872],"=",["T_WHITESPACE"," ",872],["T_STRING","mymodule_add_something_uncached",872],"(",["T_VARIABLE","$entity",872],")",";",["T_WHITESPACE","\n  ",872],"}",["T_WHITESPACE","\n",873],"}",["T_WHITESPACE","\n\n",874],["T_DOC_COMMENT","\/**\n * Act on content entities of a given type when loaded from the storage.\n *\n * The results of this hook will be cached if the entity type supports it.\n *\n * @param \\Drupal\\Core\\Entity\\EntityInterface[] $entities\n *   The entities keyed by entity ID.\n *\n * @see hook_entity_storage_load()\n *\/",876],["T_WHITESPACE","\n",885],["T_FUNCTION","function",886],["T_WHITESPACE"," ",886],["T_STRING","hook_ENTITY_TYPE_storage_load",886],"(",["T_ARRAY","array",886],["T_WHITESPACE"," ",886],["T_VARIABLE","$entities",886],")",["T_WHITESPACE"," ",886],"{",["T_WHITESPACE","\n  ",886],["T_FOREACH","foreach",887],["T_WHITESPACE"," ",887],"(",["T_VARIABLE","$entities",887],["T_WHITESPACE"," ",887],["T_AS","as",887],["T_WHITESPACE"," ",887],["T_VARIABLE","$entity",887],")",["T_WHITESPACE"," ",887],"{",["T_WHITESPACE","\n    ",887],["T_VARIABLE","$entity",888],["T_OBJECT_OPERATOR","->",888],["T_STRING","foo",888],["T_WHITESPACE"," ",888],"=",["T_WHITESPACE"," ",888],["T_STRING","mymodule_add_something_uncached",888],"(",["T_VARIABLE","$entity",888],")",";",["T_WHITESPACE","\n  ",888],"}",["T_WHITESPACE","\n",889],"}",["T_WHITESPACE","\n\n",890],["T_DOC_COMMENT","\/**\n * Act on an entity before it is created or updated.\n *\n * You can get the original entity object from $entity->original when it is an\n * update of the entity.\n *\n * @param \\Drupal\\Core\\Entity\\EntityInterface $entity\n *   The entity object.\n *\n * @ingroup entity_crud\n * @see hook_ENTITY_TYPE_presave()\n *\/",892],["T_WHITESPACE","\n",903],["T_FUNCTION","function",904],["T_WHITESPACE"," ",904],["T_STRING","hook_entity_presave",904],"(",["T_STRING","Drupal",904],["T_NS_SEPARATOR","\\",904],["T_STRING","Core",904],["T_NS_SEPARATOR","\\",904],["T_STRING","Entity",904],["T_NS_SEPARATOR","\\",904],["T_STRING","EntityInterface",904],["T_WHITESPACE"," ",904],["T_VARIABLE","$entity",904],")",["T_WHITESPACE"," ",904],"{",["T_WHITESPACE","\n  ",904],["T_IF","if",905],["T_WHITESPACE"," ",905],"(",["T_VARIABLE","$entity",905],["T_WHITESPACE"," ",905],["T_INSTANCEOF","instanceof",905],["T_WHITESPACE"," ",905],["T_STRING","ContentEntityInterface",905],["T_WHITESPACE"," ",905],["T_BOOLEAN_AND","&&",905],["T_WHITESPACE"," ",905],["T_VARIABLE","$entity",905],["T_OBJECT_OPERATOR","->",905],["T_STRING","isTranslatable",905],"(",")",")",["T_WHITESPACE"," ",905],"{",["T_WHITESPACE","\n    ",905],["T_VARIABLE","$route_match",906],["T_WHITESPACE"," ",906],"=",["T_WHITESPACE"," ",906],["T_NS_SEPARATOR","\\",906],["T_STRING","Drupal",906],["T_DOUBLE_COLON","::",906],["T_STRING","routeMatch",906],"(",")",";",["T_WHITESPACE","\n    ",906],["T_NS_SEPARATOR","\\",907],["T_STRING","Drupal",907],["T_DOUBLE_COLON","::",907],["T_STRING","service",907],"(",["T_CONSTANT_ENCAPSED_STRING","'content_translation.synchronizer'",907],")",["T_OBJECT_OPERATOR","->",907],["T_STRING","synchronizeFields",907],"(",["T_VARIABLE","$entity",907],",",["T_WHITESPACE"," ",907],["T_VARIABLE","$entity",907],["T_OBJECT_OPERATOR","->",907],["T_STRING","language",907],"(",")",["T_OBJECT_OPERATOR","->",907],["T_STRING","getId",907],"(",")",",",["T_WHITESPACE"," ",907],["T_VARIABLE","$route_match",907],["T_OBJECT_OPERATOR","->",907],["T_STRING","getParameter",907],"(",["T_CONSTANT_ENCAPSED_STRING","'source_langcode'",907],")",")",";",["T_WHITESPACE","\n  ",907],"}",["T_WHITESPACE","\n",908],"}",["T_WHITESPACE","\n\n",909],["T_DOC_COMMENT","\/**\n * Act on a specific type of entity before it is created or updated.\n *\n * You can get the original entity object from $entity->original when it is an\n * update of the entity.\n *\n * @param \\Drupal\\Core\\Entity\\EntityInterface $entity\n *   The entity object.\n *\n * @ingroup entity_crud\n * @see hook_entity_presave()\n *\/",911],["T_WHITESPACE","\n",922],["T_FUNCTION","function",923],["T_WHITESPACE"," ",923],["T_STRING","hook_ENTITY_TYPE_presave",923],"(",["T_STRING","Drupal",923],["T_NS_SEPARATOR","\\",923],["T_STRING","Core",923],["T_NS_SEPARATOR","\\",923],["T_STRING","Entity",923],["T_NS_SEPARATOR","\\",923],["T_STRING","EntityInterface",923],["T_WHITESPACE"," ",923],["T_VARIABLE","$entity",923],")",["T_WHITESPACE"," ",923],"{",["T_WHITESPACE","\n  ",923],["T_IF","if",924],["T_WHITESPACE"," ",924],"(",["T_VARIABLE","$entity",924],["T_OBJECT_OPERATOR","->",924],["T_STRING","isTranslatable",924],"(",")",")",["T_WHITESPACE"," ",924],"{",["T_WHITESPACE","\n    ",924],["T_VARIABLE","$route_match",925],["T_WHITESPACE"," ",925],"=",["T_WHITESPACE"," ",925],["T_NS_SEPARATOR","\\",925],["T_STRING","Drupal",925],["T_DOUBLE_COLON","::",925],["T_STRING","routeMatch",925],"(",")",";",["T_WHITESPACE","\n    ",925],["T_NS_SEPARATOR","\\",926],["T_STRING","Drupal",926],["T_DOUBLE_COLON","::",926],["T_STRING","service",926],"(",["T_CONSTANT_ENCAPSED_STRING","'content_translation.synchronizer'",926],")",["T_OBJECT_OPERATOR","->",926],["T_STRING","synchronizeFields",926],"(",["T_VARIABLE","$entity",926],",",["T_WHITESPACE"," ",926],["T_VARIABLE","$entity",926],["T_OBJECT_OPERATOR","->",926],["T_STRING","language",926],"(",")",["T_OBJECT_OPERATOR","->",926],["T_STRING","getId",926],"(",")",",",["T_WHITESPACE"," ",926],["T_VARIABLE","$route_match",926],["T_OBJECT_OPERATOR","->",926],["T_STRING","getParameter",926],"(",["T_CONSTANT_ENCAPSED_STRING","'source_langcode'",926],")",")",";",["T_WHITESPACE","\n  ",926],"}",["T_WHITESPACE","\n",927],"}",["T_WHITESPACE","\n\n",928],["T_DOC_COMMENT","\/**\n * Respond to creation of a new entity.\n *\n * This hook runs once the entity has been stored. Note that hook\n * implementations may not alter the stored entity data.\n *\n * @param \\Drupal\\Core\\Entity\\EntityInterface $entity\n *   The entity object.\n *\n * @ingroup entity_crud\n * @see hook_ENTITY_TYPE_insert()\n *\/",930],["T_WHITESPACE","\n",941],["T_FUNCTION","function",942],["T_WHITESPACE"," ",942],["T_STRING","hook_entity_insert",942],"(",["T_STRING","Drupal",942],["T_NS_SEPARATOR","\\",942],["T_STRING","Core",942],["T_NS_SEPARATOR","\\",942],["T_STRING","Entity",942],["T_NS_SEPARATOR","\\",942],["T_STRING","EntityInterface",942],["T_WHITESPACE"," ",942],["T_VARIABLE","$entity",942],")",["T_WHITESPACE"," ",942],"{",["T_WHITESPACE","\n  ",942],["T_COMMENT","\/\/ Insert the new entity into a fictional table of all entities.\n",943],["T_WHITESPACE","  ",944],["T_STRING","db_insert",944],"(",["T_CONSTANT_ENCAPSED_STRING","'example_entity'",944],")",["T_WHITESPACE","\n    ",944],["T_OBJECT_OPERATOR","->",945],["T_STRING","fields",945],"(",["T_ARRAY","array",945],"(",["T_WHITESPACE","\n      ",945],["T_CONSTANT_ENCAPSED_STRING","'type'",946],["T_WHITESPACE"," ",946],["T_DOUBLE_ARROW","=>",946],["T_WHITESPACE"," ",946],["T_VARIABLE","$entity",946],["T_OBJECT_OPERATOR","->",946],["T_STRING","getEntityTypeId",946],"(",")",",",["T_WHITESPACE","\n      ",946],["T_CONSTANT_ENCAPSED_STRING","'id'",947],["T_WHITESPACE"," ",947],["T_DOUBLE_ARROW","=>",947],["T_WHITESPACE"," ",947],["T_VARIABLE","$entity",947],["T_OBJECT_OPERATOR","->",947],["T_STRING","id",947],"(",")",",",["T_WHITESPACE","\n      ",947],["T_CONSTANT_ENCAPSED_STRING","'created'",948],["T_WHITESPACE"," ",948],["T_DOUBLE_ARROW","=>",948],["T_WHITESPACE"," ",948],["T_STRING","REQUEST_TIME",948],",",["T_WHITESPACE","\n      ",948],["T_CONSTANT_ENCAPSED_STRING","'updated'",949],["T_WHITESPACE"," ",949],["T_DOUBLE_ARROW","=>",949],["T_WHITESPACE"," ",949],["T_STRING","REQUEST_TIME",949],",",["T_WHITESPACE","\n    ",949],")",")",["T_WHITESPACE","\n    ",950],["T_OBJECT_OPERATOR","->",951],["T_STRING","execute",951],"(",")",";",["T_WHITESPACE","\n",951],"}",["T_WHITESPACE","\n\n",952],["T_DOC_COMMENT","\/**\n * Respond to creation of a new entity of a particular type.\n *\n * This hook runs once the entity has been stored. Note that hook\n * implementations may not alter the stored entity data.\n *\n * @param \\Drupal\\Core\\Entity\\EntityInterface $entity\n *   The entity object.\n *\n * @ingroup entity_crud\n * @see hook_entity_insert()\n *\/",954],["T_WHITESPACE","\n",965],["T_FUNCTION","function",966],["T_WHITESPACE"," ",966],["T_STRING","hook_ENTITY_TYPE_insert",966],"(",["T_STRING","Drupal",966],["T_NS_SEPARATOR","\\",966],["T_STRING","Core",966],["T_NS_SEPARATOR","\\",966],["T_STRING","Entity",966],["T_NS_SEPARATOR","\\",966],["T_STRING","EntityInterface",966],["T_WHITESPACE"," ",966],["T_VARIABLE","$entity",966],")",["T_WHITESPACE"," ",966],"{",["T_WHITESPACE","\n  ",966],["T_COMMENT","\/\/ Insert the new entity into a fictional table of this type of entity.\n",967],["T_WHITESPACE","  ",968],["T_STRING","db_insert",968],"(",["T_CONSTANT_ENCAPSED_STRING","'example_entity'",968],")",["T_WHITESPACE","\n    ",968],["T_OBJECT_OPERATOR","->",969],["T_STRING","fields",969],"(",["T_ARRAY","array",969],"(",["T_WHITESPACE","\n      ",969],["T_CONSTANT_ENCAPSED_STRING","'id'",970],["T_WHITESPACE"," ",970],["T_DOUBLE_ARROW","=>",970],["T_WHITESPACE"," ",970],["T_VARIABLE","$entity",970],["T_OBJECT_OPERATOR","->",970],["T_STRING","id",970],"(",")",",",["T_WHITESPACE","\n      ",970],["T_CONSTANT_ENCAPSED_STRING","'created'",971],["T_WHITESPACE"," ",971],["T_DOUBLE_ARROW","=>",971],["T_WHITESPACE"," ",971],["T_STRING","REQUEST_TIME",971],",",["T_WHITESPACE","\n      ",971],["T_CONSTANT_ENCAPSED_STRING","'updated'",972],["T_WHITESPACE"," ",972],["T_DOUBLE_ARROW","=>",972],["T_WHITESPACE"," ",972],["T_STRING","REQUEST_TIME",972],",",["T_WHITESPACE","\n    ",972],")",")",["T_WHITESPACE","\n    ",973],["T_OBJECT_OPERATOR","->",974],["T_STRING","execute",974],"(",")",";",["T_WHITESPACE","\n",974],"}",["T_WHITESPACE","\n\n",975],["T_DOC_COMMENT","\/**\n * Respond to updates to an entity.\n *\n * This hook runs once the entity storage has been updated. Note that hook\n * implementations may not alter the stored entity data. Get the original entity\n * object from $entity->original.\n *\n * @param \\Drupal\\Core\\Entity\\EntityInterface $entity\n *   The entity object.\n *\n * @ingroup entity_crud\n * @see hook_ENTITY_TYPE_update()\n *\/",977],["T_WHITESPACE","\n",989],["T_FUNCTION","function",990],["T_WHITESPACE"," ",990],["T_STRING","hook_entity_update",990],"(",["T_STRING","Drupal",990],["T_NS_SEPARATOR","\\",990],["T_STRING","Core",990],["T_NS_SEPARATOR","\\",990],["T_STRING","Entity",990],["T_NS_SEPARATOR","\\",990],["T_STRING","EntityInterface",990],["T_WHITESPACE"," ",990],["T_VARIABLE","$entity",990],")",["T_WHITESPACE"," ",990],"{",["T_WHITESPACE","\n  ",990],["T_COMMENT","\/\/ Update the entity's entry in a fictional table of all entities.\n",991],["T_WHITESPACE","  ",992],["T_STRING","db_update",992],"(",["T_CONSTANT_ENCAPSED_STRING","'example_entity'",992],")",["T_WHITESPACE","\n    ",992],["T_OBJECT_OPERATOR","->",993],["T_STRING","fields",993],"(",["T_ARRAY","array",993],"(",["T_WHITESPACE","\n      ",993],["T_CONSTANT_ENCAPSED_STRING","'updated'",994],["T_WHITESPACE"," ",994],["T_DOUBLE_ARROW","=>",994],["T_WHITESPACE"," ",994],["T_STRING","REQUEST_TIME",994],",",["T_WHITESPACE","\n    ",994],")",")",["T_WHITESPACE","\n    ",995],["T_OBJECT_OPERATOR","->",996],["T_STRING","condition",996],"(",["T_CONSTANT_ENCAPSED_STRING","'type'",996],",",["T_WHITESPACE"," ",996],["T_VARIABLE","$entity",996],["T_OBJECT_OPERATOR","->",996],["T_STRING","getEntityTypeId",996],"(",")",")",["T_WHITESPACE","\n    ",996],["T_OBJECT_OPERATOR","->",997],["T_STRING","condition",997],"(",["T_CONSTANT_ENCAPSED_STRING","'id'",997],",",["T_WHITESPACE"," ",997],["T_VARIABLE","$entity",997],["T_OBJECT_OPERATOR","->",997],["T_STRING","id",997],"(",")",")",["T_WHITESPACE","\n    ",997],["T_OBJECT_OPERATOR","->",998],["T_STRING","execute",998],"(",")",";",["T_WHITESPACE","\n",998],"}",["T_WHITESPACE","\n\n",999],["T_DOC_COMMENT","\/**\n * Respond to updates to an entity of a particular type.\n *\n * This hook runs once the entity storage has been updated. Note that hook\n * implementations may not alter the stored entity data. Get the original entity\n * object from $entity->original.\n *\n * @param \\Drupal\\Core\\Entity\\EntityInterface $entity\n *   The entity object.\n *\n * @ingroup entity_crud\n * @see hook_entity_update()\n *\/",1001],["T_WHITESPACE","\n",1013],["T_FUNCTION","function",1014],["T_WHITESPACE"," ",1014],["T_STRING","hook_ENTITY_TYPE_update",1014],"(",["T_STRING","Drupal",1014],["T_NS_SEPARATOR","\\",1014],["T_STRING","Core",1014],["T_NS_SEPARATOR","\\",1014],["T_STRING","Entity",1014],["T_NS_SEPARATOR","\\",1014],["T_STRING","EntityInterface",1014],["T_WHITESPACE"," ",1014],["T_VARIABLE","$entity",1014],")",["T_WHITESPACE"," ",1014],"{",["T_WHITESPACE","\n  ",1014],["T_COMMENT","\/\/ Update the entity's entry in a fictional table of this type of entity.\n",1015],["T_WHITESPACE","  ",1016],["T_STRING","db_update",1016],"(",["T_CONSTANT_ENCAPSED_STRING","'example_entity'",1016],")",["T_WHITESPACE","\n    ",1016],["T_OBJECT_OPERATOR","->",1017],["T_STRING","fields",1017],"(",["T_ARRAY","array",1017],"(",["T_WHITESPACE","\n      ",1017],["T_CONSTANT_ENCAPSED_STRING","'updated'",1018],["T_WHITESPACE"," ",1018],["T_DOUBLE_ARROW","=>",1018],["T_WHITESPACE"," ",1018],["T_STRING","REQUEST_TIME",1018],",",["T_WHITESPACE","\n    ",1018],")",")",["T_WHITESPACE","\n    ",1019],["T_OBJECT_OPERATOR","->",1020],["T_STRING","condition",1020],"(",["T_CONSTANT_ENCAPSED_STRING","'id'",1020],",",["T_WHITESPACE"," ",1020],["T_VARIABLE","$entity",1020],["T_OBJECT_OPERATOR","->",1020],["T_STRING","id",1020],"(",")",")",["T_WHITESPACE","\n    ",1020],["T_OBJECT_OPERATOR","->",1021],["T_STRING","execute",1021],"(",")",";",["T_WHITESPACE","\n",1021],"}",["T_WHITESPACE","\n\n",1022],["T_DOC_COMMENT","\/**\n * Acts when creating a new entity translation.\n *\n * This hook runs after a new entity translation object has just been\n * instantiated.\n *\n * @param \\Drupal\\Core\\Entity\\EntityInterface $translation\n *   The entity object.\n *\n * @ingroup entity_crud\n * @see hook_ENTITY_TYPE_translation_create()\n *\/",1024],["T_WHITESPACE","\n",1035],["T_FUNCTION","function",1036],["T_WHITESPACE"," ",1036],["T_STRING","hook_entity_translation_create",1036],"(",["T_NS_SEPARATOR","\\",1036],["T_STRING","Drupal",1036],["T_NS_SEPARATOR","\\",1036],["T_STRING","Core",1036],["T_NS_SEPARATOR","\\",1036],["T_STRING","Entity",1036],["T_NS_SEPARATOR","\\",1036],["T_STRING","EntityInterface",1036],["T_WHITESPACE"," ",1036],["T_VARIABLE","$translation",1036],")",["T_WHITESPACE"," ",1036],"{",["T_WHITESPACE","\n  ",1036],["T_NS_SEPARATOR","\\",1037],["T_STRING","Drupal",1037],["T_DOUBLE_COLON","::",1037],["T_STRING","logger",1037],"(",["T_CONSTANT_ENCAPSED_STRING","'example'",1037],")",["T_OBJECT_OPERATOR","->",1037],["T_STRING","info",1037],"(",["T_CONSTANT_ENCAPSED_STRING","'Entity translation created: @label'",1037],",",["T_WHITESPACE"," ",1037],"[",["T_CONSTANT_ENCAPSED_STRING","'@label'",1037],["T_WHITESPACE"," ",1037],["T_DOUBLE_ARROW","=>",1037],["T_WHITESPACE"," ",1037],["T_VARIABLE","$translation",1037],["T_OBJECT_OPERATOR","->",1037],["T_STRING","label",1037],"(",")","]",")",";",["T_WHITESPACE","\n",1037],"}",["T_WHITESPACE","\n\n",1038],["T_DOC_COMMENT","\/**\n * Acts when creating a new entity translation of a specific type.\n *\n * This hook runs after a new entity translation object has just been\n * instantiated.\n *\n * @param \\Drupal\\Core\\Entity\\EntityInterface $translation\n *   The entity object.\n *\n * @ingroup entity_crud\n * @see hook_entity_translation_create()\n *\/",1040],["T_WHITESPACE","\n",1051],["T_FUNCTION","function",1052],["T_WHITESPACE"," ",1052],["T_STRING","hook_ENTITY_TYPE_translation_create",1052],"(",["T_NS_SEPARATOR","\\",1052],["T_STRING","Drupal",1052],["T_NS_SEPARATOR","\\",1052],["T_STRING","Core",1052],["T_NS_SEPARATOR","\\",1052],["T_STRING","Entity",1052],["T_NS_SEPARATOR","\\",1052],["T_STRING","EntityInterface",1052],["T_WHITESPACE"," ",1052],["T_VARIABLE","$translation",1052],")",["T_WHITESPACE"," ",1052],"{",["T_WHITESPACE","\n  ",1052],["T_NS_SEPARATOR","\\",1053],["T_STRING","Drupal",1053],["T_DOUBLE_COLON","::",1053],["T_STRING","logger",1053],"(",["T_CONSTANT_ENCAPSED_STRING","'example'",1053],")",["T_OBJECT_OPERATOR","->",1053],["T_STRING","info",1053],"(",["T_CONSTANT_ENCAPSED_STRING","'ENTITY_TYPE translation created: @label'",1053],",",["T_WHITESPACE"," ",1053],"[",["T_CONSTANT_ENCAPSED_STRING","'@label'",1053],["T_WHITESPACE"," ",1053],["T_DOUBLE_ARROW","=>",1053],["T_WHITESPACE"," ",1053],["T_VARIABLE","$translation",1053],["T_OBJECT_OPERATOR","->",1053],["T_STRING","label",1053],"(",")","]",")",";",["T_WHITESPACE","\n",1053],"}",["T_WHITESPACE","\n\n",1054],["T_DOC_COMMENT","\/**\n * Respond to creation of a new entity translation.\n *\n * This hook runs once the entity translation has been stored. Note that hook\n * implementations may not alter the stored entity translation data.\n *\n * @param \\Drupal\\Core\\Entity\\EntityInterface $translation\n *   The entity object of the translation just stored.\n *\n * @ingroup entity_crud\n * @see hook_ENTITY_TYPE_translation_insert()\n *\/",1056],["T_WHITESPACE","\n",1067],["T_FUNCTION","function",1068],["T_WHITESPACE"," ",1068],["T_STRING","hook_entity_translation_insert",1068],"(",["T_NS_SEPARATOR","\\",1068],["T_STRING","Drupal",1068],["T_NS_SEPARATOR","\\",1068],["T_STRING","Core",1068],["T_NS_SEPARATOR","\\",1068],["T_STRING","Entity",1068],["T_NS_SEPARATOR","\\",1068],["T_STRING","EntityInterface",1068],["T_WHITESPACE"," ",1068],["T_VARIABLE","$translation",1068],")",["T_WHITESPACE"," ",1068],"{",["T_WHITESPACE","\n  ",1068],["T_VARIABLE","$variables",1069],["T_WHITESPACE"," ",1069],"=",["T_WHITESPACE"," ",1069],["T_ARRAY","array",1069],"(",["T_WHITESPACE","\n    ",1069],["T_CONSTANT_ENCAPSED_STRING","'@language'",1070],["T_WHITESPACE"," ",1070],["T_DOUBLE_ARROW","=>",1070],["T_WHITESPACE"," ",1070],["T_VARIABLE","$translation",1070],["T_OBJECT_OPERATOR","->",1070],["T_STRING","language",1070],"(",")",["T_OBJECT_OPERATOR","->",1070],["T_STRING","getName",1070],"(",")",",",["T_WHITESPACE","\n    ",1070],["T_CONSTANT_ENCAPSED_STRING","'@label'",1071],["T_WHITESPACE"," ",1071],["T_DOUBLE_ARROW","=>",1071],["T_WHITESPACE"," ",1071],["T_VARIABLE","$translation",1071],["T_OBJECT_OPERATOR","->",1071],["T_STRING","getUntranslated",1071],"(",")",["T_OBJECT_OPERATOR","->",1071],["T_STRING","label",1071],"(",")",",",["T_WHITESPACE","\n  ",1071],")",";",["T_WHITESPACE","\n  ",1072],["T_NS_SEPARATOR","\\",1073],["T_STRING","Drupal",1073],["T_DOUBLE_COLON","::",1073],["T_STRING","logger",1073],"(",["T_CONSTANT_ENCAPSED_STRING","'example'",1073],")",["T_OBJECT_OPERATOR","->",1073],["T_STRING","notice",1073],"(",["T_CONSTANT_ENCAPSED_STRING","'The @language translation of @label has just been stored.'",1073],",",["T_WHITESPACE"," ",1073],["T_VARIABLE","$variables",1073],")",";",["T_WHITESPACE","\n",1073],"}",["T_WHITESPACE","\n\n",1074],["T_DOC_COMMENT","\/**\n * Respond to creation of a new entity translation of a particular type.\n *\n * This hook runs once the entity translation has been stored. Note that hook\n * implementations may not alter the stored entity translation data.\n *\n * @param \\Drupal\\Core\\Entity\\EntityInterface $translation\n *   The entity object of the translation just stored.\n *\n * @ingroup entity_crud\n * @see hook_entity_translation_insert()\n *\/",1076],["T_WHITESPACE","\n",1087],["T_FUNCTION","function",1088],["T_WHITESPACE"," ",1088],["T_STRING","hook_ENTITY_TYPE_translation_insert",1088],"(",["T_NS_SEPARATOR","\\",1088],["T_STRING","Drupal",1088],["T_NS_SEPARATOR","\\",1088],["T_STRING","Core",1088],["T_NS_SEPARATOR","\\",1088],["T_STRING","Entity",1088],["T_NS_SEPARATOR","\\",1088],["T_STRING","EntityInterface",1088],["T_WHITESPACE"," ",1088],["T_VARIABLE","$translation",1088],")",["T_WHITESPACE"," ",1088],"{",["T_WHITESPACE","\n  ",1088],["T_VARIABLE","$variables",1089],["T_WHITESPACE"," ",1089],"=",["T_WHITESPACE"," ",1089],["T_ARRAY","array",1089],"(",["T_WHITESPACE","\n    ",1089],["T_CONSTANT_ENCAPSED_STRING","'@language'",1090],["T_WHITESPACE"," ",1090],["T_DOUBLE_ARROW","=>",1090],["T_WHITESPACE"," ",1090],["T_VARIABLE","$translation",1090],["T_OBJECT_OPERATOR","->",1090],["T_STRING","language",1090],"(",")",["T_OBJECT_OPERATOR","->",1090],["T_STRING","getName",1090],"(",")",",",["T_WHITESPACE","\n    ",1090],["T_CONSTANT_ENCAPSED_STRING","'@label'",1091],["T_WHITESPACE"," ",1091],["T_DOUBLE_ARROW","=>",1091],["T_WHITESPACE"," ",1091],["T_VARIABLE","$translation",1091],["T_OBJECT_OPERATOR","->",1091],["T_STRING","getUntranslated",1091],"(",")",["T_OBJECT_OPERATOR","->",1091],["T_STRING","label",1091],"(",")",",",["T_WHITESPACE","\n  ",1091],")",";",["T_WHITESPACE","\n  ",1092],["T_NS_SEPARATOR","\\",1093],["T_STRING","Drupal",1093],["T_DOUBLE_COLON","::",1093],["T_STRING","logger",1093],"(",["T_CONSTANT_ENCAPSED_STRING","'example'",1093],")",["T_OBJECT_OPERATOR","->",1093],["T_STRING","notice",1093],"(",["T_CONSTANT_ENCAPSED_STRING","'The @language translation of @label has just been stored.'",1093],",",["T_WHITESPACE"," ",1093],["T_VARIABLE","$variables",1093],")",";",["T_WHITESPACE","\n",1093],"}",["T_WHITESPACE","\n\n",1094],["T_DOC_COMMENT","\/**\n * Respond to entity translation deletion.\n *\n * This hook runs once the entity translation has been deleted from storage.\n *\n * @param \\Drupal\\Core\\Entity\\EntityInterface $translation\n *   The original entity object.\n *\n * @ingroup entity_crud\n * @see hook_ENTITY_TYPE_translation_delete()\n *\/",1096],["T_WHITESPACE","\n",1106],["T_FUNCTION","function",1107],["T_WHITESPACE"," ",1107],["T_STRING","hook_entity_translation_delete",1107],"(",["T_NS_SEPARATOR","\\",1107],["T_STRING","Drupal",1107],["T_NS_SEPARATOR","\\",1107],["T_STRING","Core",1107],["T_NS_SEPARATOR","\\",1107],["T_STRING","Entity",1107],["T_NS_SEPARATOR","\\",1107],["T_STRING","EntityInterface",1107],["T_WHITESPACE"," ",1107],["T_VARIABLE","$translation",1107],")",["T_WHITESPACE"," ",1107],"{",["T_WHITESPACE","\n  ",1107],["T_VARIABLE","$variables",1108],["T_WHITESPACE"," ",1108],"=",["T_WHITESPACE"," ",1108],["T_ARRAY","array",1108],"(",["T_WHITESPACE","\n    ",1108],["T_CONSTANT_ENCAPSED_STRING","'@language'",1109],["T_WHITESPACE"," ",1109],["T_DOUBLE_ARROW","=>",1109],["T_WHITESPACE"," ",1109],["T_VARIABLE","$translation",1109],["T_OBJECT_OPERATOR","->",1109],["T_STRING","language",1109],"(",")",["T_OBJECT_OPERATOR","->",1109],["T_STRING","getName",1109],"(",")",",",["T_WHITESPACE","\n    ",1109],["T_CONSTANT_ENCAPSED_STRING","'@label'",1110],["T_WHITESPACE"," ",1110],["T_DOUBLE_ARROW","=>",1110],["T_WHITESPACE"," ",1110],["T_VARIABLE","$translation",1110],["T_OBJECT_OPERATOR","->",1110],["T_STRING","label",1110],"(",")",",",["T_WHITESPACE","\n  ",1110],")",";",["T_WHITESPACE","\n  ",1111],["T_NS_SEPARATOR","\\",1112],["T_STRING","Drupal",1112],["T_DOUBLE_COLON","::",1112],["T_STRING","logger",1112],"(",["T_CONSTANT_ENCAPSED_STRING","'example'",1112],")",["T_OBJECT_OPERATOR","->",1112],["T_STRING","notice",1112],"(",["T_CONSTANT_ENCAPSED_STRING","'The @language translation of @label has just been deleted.'",1112],",",["T_WHITESPACE"," ",1112],["T_VARIABLE","$variables",1112],")",";",["T_WHITESPACE","\n",1112],"}",["T_WHITESPACE","\n\n",1113],["T_DOC_COMMENT","\/**\n * Respond to entity translation deletion of a particular type.\n *\n * This hook runs once the entity translation has been deleted from storage.\n *\n * @param \\Drupal\\Core\\Entity\\EntityInterface $translation\n *   The original entity object.\n *\n * @ingroup entity_crud\n * @see hook_entity_translation_delete()\n *\/",1115],["T_WHITESPACE","\n",1125],["T_FUNCTION","function",1126],["T_WHITESPACE"," ",1126],["T_STRING","hook_ENTITY_TYPE_translation_delete",1126],"(",["T_NS_SEPARATOR","\\",1126],["T_STRING","Drupal",1126],["T_NS_SEPARATOR","\\",1126],["T_STRING","Core",1126],["T_NS_SEPARATOR","\\",1126],["T_STRING","Entity",1126],["T_NS_SEPARATOR","\\",1126],["T_STRING","EntityInterface",1126],["T_WHITESPACE"," ",1126],["T_VARIABLE","$translation",1126],")",["T_WHITESPACE"," ",1126],"{",["T_WHITESPACE","\n  ",1126],["T_VARIABLE","$variables",1127],["T_WHITESPACE"," ",1127],"=",["T_WHITESPACE"," ",1127],["T_ARRAY","array",1127],"(",["T_WHITESPACE","\n    ",1127],["T_CONSTANT_ENCAPSED_STRING","'@language'",1128],["T_WHITESPACE"," ",1128],["T_DOUBLE_ARROW","=>",1128],["T_WHITESPACE"," ",1128],["T_VARIABLE","$translation",1128],["T_OBJECT_OPERATOR","->",1128],["T_STRING","language",1128],"(",")",["T_OBJECT_OPERATOR","->",1128],["T_STRING","getName",1128],"(",")",",",["T_WHITESPACE","\n    ",1128],["T_CONSTANT_ENCAPSED_STRING","'@label'",1129],["T_WHITESPACE"," ",1129],["T_DOUBLE_ARROW","=>",1129],["T_WHITESPACE"," ",1129],["T_VARIABLE","$translation",1129],["T_OBJECT_OPERATOR","->",1129],["T_STRING","label",1129],"(",")",",",["T_WHITESPACE","\n  ",1129],")",";",["T_WHITESPACE","\n  ",1130],["T_NS_SEPARATOR","\\",1131],["T_STRING","Drupal",1131],["T_DOUBLE_COLON","::",1131],["T_STRING","logger",1131],"(",["T_CONSTANT_ENCAPSED_STRING","'example'",1131],")",["T_OBJECT_OPERATOR","->",1131],["T_STRING","notice",1131],"(",["T_CONSTANT_ENCAPSED_STRING","'The @language translation of @label has just been deleted.'",1131],",",["T_WHITESPACE"," ",1131],["T_VARIABLE","$variables",1131],")",";",["T_WHITESPACE","\n",1131],"}",["T_WHITESPACE","\n\n",1132],["T_DOC_COMMENT","\/**\n * Act before entity deletion.\n *\n * @param \\Drupal\\Core\\Entity\\EntityInterface $entity\n *   The entity object for the entity that is about to be deleted.\n *\n * @ingroup entity_crud\n * @see hook_ENTITY_TYPE_predelete()\n *\/",1134],["T_WHITESPACE","\n",1142],["T_FUNCTION","function",1143],["T_WHITESPACE"," ",1143],["T_STRING","hook_entity_predelete",1143],"(",["T_STRING","Drupal",1143],["T_NS_SEPARATOR","\\",1143],["T_STRING","Core",1143],["T_NS_SEPARATOR","\\",1143],["T_STRING","Entity",1143],["T_NS_SEPARATOR","\\",1143],["T_STRING","EntityInterface",1143],["T_WHITESPACE"," ",1143],["T_VARIABLE","$entity",1143],")",["T_WHITESPACE"," ",1143],"{",["T_WHITESPACE","\n  ",1143],["T_COMMENT","\/\/ Count references to this entity in a custom table before they are removed\n",1144],["T_WHITESPACE","  ",1145],["T_COMMENT","\/\/ upon entity deletion.\n",1145],["T_WHITESPACE","  ",1146],["T_VARIABLE","$id",1146],["T_WHITESPACE"," ",1146],"=",["T_WHITESPACE"," ",1146],["T_VARIABLE","$entity",1146],["T_OBJECT_OPERATOR","->",1146],["T_STRING","id",1146],"(",")",";",["T_WHITESPACE","\n  ",1146],["T_VARIABLE","$type",1147],["T_WHITESPACE"," ",1147],"=",["T_WHITESPACE"," ",1147],["T_VARIABLE","$entity",1147],["T_OBJECT_OPERATOR","->",1147],["T_STRING","getEntityTypeId",1147],"(",")",";",["T_WHITESPACE","\n  ",1147],["T_VARIABLE","$count",1148],["T_WHITESPACE"," ",1148],"=",["T_WHITESPACE"," ",1148],["T_STRING","db_select",1148],"(",["T_CONSTANT_ENCAPSED_STRING","'example_entity_data'",1148],")",["T_WHITESPACE","\n    ",1148],["T_OBJECT_OPERATOR","->",1149],["T_STRING","condition",1149],"(",["T_CONSTANT_ENCAPSED_STRING","'type'",1149],",",["T_WHITESPACE"," ",1149],["T_VARIABLE","$type",1149],")",["T_WHITESPACE","\n    ",1149],["T_OBJECT_OPERATOR","->",1150],["T_STRING","condition",1150],"(",["T_CONSTANT_ENCAPSED_STRING","'id'",1150],",",["T_WHITESPACE"," ",1150],["T_VARIABLE","$id",1150],")",["T_WHITESPACE","\n    ",1150],["T_OBJECT_OPERATOR","->",1151],["T_STRING","countQuery",1151],"(",")",["T_WHITESPACE","\n    ",1151],["T_OBJECT_OPERATOR","->",1152],["T_STRING","execute",1152],"(",")",["T_WHITESPACE","\n    ",1152],["T_OBJECT_OPERATOR","->",1153],["T_STRING","fetchField",1153],"(",")",";",["T_WHITESPACE","\n\n  ",1153],["T_COMMENT","\/\/ Log the count in a table that records this statistic for deleted entities.\n",1155],["T_WHITESPACE","  ",1156],["T_STRING","db_merge",1156],"(",["T_CONSTANT_ENCAPSED_STRING","'example_deleted_entity_statistics'",1156],")",["T_WHITESPACE","\n    ",1156],["T_OBJECT_OPERATOR","->",1157],["T_STRING","key",1157],"(",["T_ARRAY","array",1157],"(",["T_CONSTANT_ENCAPSED_STRING","'type'",1157],["T_WHITESPACE"," ",1157],["T_DOUBLE_ARROW","=>",1157],["T_WHITESPACE"," ",1157],["T_VARIABLE","$type",1157],",",["T_WHITESPACE"," ",1157],["T_CONSTANT_ENCAPSED_STRING","'id'",1157],["T_WHITESPACE"," ",1157],["T_DOUBLE_ARROW","=>",1157],["T_WHITESPACE"," ",1157],["T_VARIABLE","$id",1157],")",")",["T_WHITESPACE","\n    ",1157],["T_OBJECT_OPERATOR","->",1158],["T_STRING","fields",1158],"(",["T_ARRAY","array",1158],"(",["T_CONSTANT_ENCAPSED_STRING","'count'",1158],["T_WHITESPACE"," ",1158],["T_DOUBLE_ARROW","=>",1158],["T_WHITESPACE"," ",1158],["T_VARIABLE","$count",1158],")",")",["T_WHITESPACE","\n    ",1158],["T_OBJECT_OPERATOR","->",1159],["T_STRING","execute",1159],"(",")",";",["T_WHITESPACE","\n",1159],"}",["T_WHITESPACE","\n\n",1160],["T_DOC_COMMENT","\/**\n * Act before entity deletion of a particular entity type.\n *\n * @param \\Drupal\\Core\\Entity\\EntityInterface $entity\n *   The entity object for the entity that is about to be deleted.\n *\n * @ingroup entity_crud\n * @see hook_entity_predelete()\n *\/",1162],["T_WHITESPACE","\n",1170],["T_FUNCTION","function",1171],["T_WHITESPACE"," ",1171],["T_STRING","hook_ENTITY_TYPE_predelete",1171],"(",["T_STRING","Drupal",1171],["T_NS_SEPARATOR","\\",1171],["T_STRING","Core",1171],["T_NS_SEPARATOR","\\",1171],["T_STRING","Entity",1171],["T_NS_SEPARATOR","\\",1171],["T_STRING","EntityInterface",1171],["T_WHITESPACE"," ",1171],["T_VARIABLE","$entity",1171],")",["T_WHITESPACE"," ",1171],"{",["T_WHITESPACE","\n  ",1171],["T_COMMENT","\/\/ Count references to this entity in a custom table before they are removed\n",1172],["T_WHITESPACE","  ",1173],["T_COMMENT","\/\/ upon entity deletion.\n",1173],["T_WHITESPACE","  ",1174],["T_VARIABLE","$id",1174],["T_WHITESPACE"," ",1174],"=",["T_WHITESPACE"," ",1174],["T_VARIABLE","$entity",1174],["T_OBJECT_OPERATOR","->",1174],["T_STRING","id",1174],"(",")",";",["T_WHITESPACE","\n  ",1174],["T_VARIABLE","$type",1175],["T_WHITESPACE"," ",1175],"=",["T_WHITESPACE"," ",1175],["T_VARIABLE","$entity",1175],["T_OBJECT_OPERATOR","->",1175],["T_STRING","getEntityTypeId",1175],"(",")",";",["T_WHITESPACE","\n  ",1175],["T_VARIABLE","$count",1176],["T_WHITESPACE"," ",1176],"=",["T_WHITESPACE"," ",1176],["T_STRING","db_select",1176],"(",["T_CONSTANT_ENCAPSED_STRING","'example_entity_data'",1176],")",["T_WHITESPACE","\n    ",1176],["T_OBJECT_OPERATOR","->",1177],["T_STRING","condition",1177],"(",["T_CONSTANT_ENCAPSED_STRING","'type'",1177],",",["T_WHITESPACE"," ",1177],["T_VARIABLE","$type",1177],")",["T_WHITESPACE","\n    ",1177],["T_OBJECT_OPERATOR","->",1178],["T_STRING","condition",1178],"(",["T_CONSTANT_ENCAPSED_STRING","'id'",1178],",",["T_WHITESPACE"," ",1178],["T_VARIABLE","$id",1178],")",["T_WHITESPACE","\n    ",1178],["T_OBJECT_OPERATOR","->",1179],["T_STRING","countQuery",1179],"(",")",["T_WHITESPACE","\n    ",1179],["T_OBJECT_OPERATOR","->",1180],["T_STRING","execute",1180],"(",")",["T_WHITESPACE","\n    ",1180],["T_OBJECT_OPERATOR","->",1181],["T_STRING","fetchField",1181],"(",")",";",["T_WHITESPACE","\n\n  ",1181],["T_COMMENT","\/\/ Log the count in a table that records this statistic for deleted entities.\n",1183],["T_WHITESPACE","  ",1184],["T_STRING","db_merge",1184],"(",["T_CONSTANT_ENCAPSED_STRING","'example_deleted_entity_statistics'",1184],")",["T_WHITESPACE","\n    ",1184],["T_OBJECT_OPERATOR","->",1185],["T_STRING","key",1185],"(",["T_ARRAY","array",1185],"(",["T_CONSTANT_ENCAPSED_STRING","'type'",1185],["T_WHITESPACE"," ",1185],["T_DOUBLE_ARROW","=>",1185],["T_WHITESPACE"," ",1185],["T_VARIABLE","$type",1185],",",["T_WHITESPACE"," ",1185],["T_CONSTANT_ENCAPSED_STRING","'id'",1185],["T_WHITESPACE"," ",1185],["T_DOUBLE_ARROW","=>",1185],["T_WHITESPACE"," ",1185],["T_VARIABLE","$id",1185],")",")",["T_WHITESPACE","\n    ",1185],["T_OBJECT_OPERATOR","->",1186],["T_STRING","fields",1186],"(",["T_ARRAY","array",1186],"(",["T_CONSTANT_ENCAPSED_STRING","'count'",1186],["T_WHITESPACE"," ",1186],["T_DOUBLE_ARROW","=>",1186],["T_WHITESPACE"," ",1186],["T_VARIABLE","$count",1186],")",")",["T_WHITESPACE","\n    ",1186],["T_OBJECT_OPERATOR","->",1187],["T_STRING","execute",1187],"(",")",";",["T_WHITESPACE","\n",1187],"}",["T_WHITESPACE","\n\n",1188],["T_DOC_COMMENT","\/**\n * Respond to entity deletion.\n *\n * This hook runs once the entity has been deleted from the storage.\n *\n * @param \\Drupal\\Core\\Entity\\EntityInterface $entity\n *   The entity object for the entity that has been deleted.\n *\n * @ingroup entity_crud\n * @see hook_ENTITY_TYPE_delete()\n *\/",1190],["T_WHITESPACE","\n",1200],["T_FUNCTION","function",1201],["T_WHITESPACE"," ",1201],["T_STRING","hook_entity_delete",1201],"(",["T_STRING","Drupal",1201],["T_NS_SEPARATOR","\\",1201],["T_STRING","Core",1201],["T_NS_SEPARATOR","\\",1201],["T_STRING","Entity",1201],["T_NS_SEPARATOR","\\",1201],["T_STRING","EntityInterface",1201],["T_WHITESPACE"," ",1201],["T_VARIABLE","$entity",1201],")",["T_WHITESPACE"," ",1201],"{",["T_WHITESPACE","\n  ",1201],["T_COMMENT","\/\/ Delete the entity's entry from a fictional table of all entities.\n",1202],["T_WHITESPACE","  ",1203],["T_STRING","db_delete",1203],"(",["T_CONSTANT_ENCAPSED_STRING","'example_entity'",1203],")",["T_WHITESPACE","\n    ",1203],["T_OBJECT_OPERATOR","->",1204],["T_STRING","condition",1204],"(",["T_CONSTANT_ENCAPSED_STRING","'type'",1204],",",["T_WHITESPACE"," ",1204],["T_VARIABLE","$entity",1204],["T_OBJECT_OPERATOR","->",1204],["T_STRING","getEntityTypeId",1204],"(",")",")",["T_WHITESPACE","\n    ",1204],["T_OBJECT_OPERATOR","->",1205],["T_STRING","condition",1205],"(",["T_CONSTANT_ENCAPSED_STRING","'id'",1205],",",["T_WHITESPACE"," ",1205],["T_VARIABLE","$entity",1205],["T_OBJECT_OPERATOR","->",1205],["T_STRING","id",1205],"(",")",")",["T_WHITESPACE","\n    ",1205],["T_OBJECT_OPERATOR","->",1206],["T_STRING","execute",1206],"(",")",";",["T_WHITESPACE","\n",1206],"}",["T_WHITESPACE","\n\n",1207],["T_DOC_COMMENT","\/**\n * Respond to entity deletion of a particular type.\n *\n * This hook runs once the entity has been deleted from the storage.\n *\n * @param \\Drupal\\Core\\Entity\\EntityInterface $entity\n *   The entity object for the entity that has been deleted.\n *\n * @ingroup entity_crud\n * @see hook_entity_delete()\n *\/",1209],["T_WHITESPACE","\n",1219],["T_FUNCTION","function",1220],["T_WHITESPACE"," ",1220],["T_STRING","hook_ENTITY_TYPE_delete",1220],"(",["T_STRING","Drupal",1220],["T_NS_SEPARATOR","\\",1220],["T_STRING","Core",1220],["T_NS_SEPARATOR","\\",1220],["T_STRING","Entity",1220],["T_NS_SEPARATOR","\\",1220],["T_STRING","EntityInterface",1220],["T_WHITESPACE"," ",1220],["T_VARIABLE","$entity",1220],")",["T_WHITESPACE"," ",1220],"{",["T_WHITESPACE","\n  ",1220],["T_COMMENT","\/\/ Delete the entity's entry from a fictional table of all entities.\n",1221],["T_WHITESPACE","  ",1222],["T_STRING","db_delete",1222],"(",["T_CONSTANT_ENCAPSED_STRING","'example_entity'",1222],")",["T_WHITESPACE","\n    ",1222],["T_OBJECT_OPERATOR","->",1223],["T_STRING","condition",1223],"(",["T_CONSTANT_ENCAPSED_STRING","'type'",1223],",",["T_WHITESPACE"," ",1223],["T_VARIABLE","$entity",1223],["T_OBJECT_OPERATOR","->",1223],["T_STRING","getEntityTypeId",1223],"(",")",")",["T_WHITESPACE","\n    ",1223],["T_OBJECT_OPERATOR","->",1224],["T_STRING","condition",1224],"(",["T_CONSTANT_ENCAPSED_STRING","'id'",1224],",",["T_WHITESPACE"," ",1224],["T_VARIABLE","$entity",1224],["T_OBJECT_OPERATOR","->",1224],["T_STRING","id",1224],"(",")",")",["T_WHITESPACE","\n    ",1224],["T_OBJECT_OPERATOR","->",1225],["T_STRING","execute",1225],"(",")",";",["T_WHITESPACE","\n",1225],"}",["T_WHITESPACE","\n\n",1226],["T_DOC_COMMENT","\/**\n * Respond to entity revision deletion.\n *\n * This hook runs once the entity revision has been deleted from the storage.\n *\n * @param \\Drupal\\Core\\Entity\\EntityInterface $entity\n *   The entity object for the entity revision that has been deleted.\n *\n * @ingroup entity_crud\n * @see hook_ENTITY_TYPE_revision_delete()\n *\/",1228],["T_WHITESPACE","\n",1238],["T_FUNCTION","function",1239],["T_WHITESPACE"," ",1239],["T_STRING","hook_entity_revision_delete",1239],"(",["T_STRING","Drupal",1239],["T_NS_SEPARATOR","\\",1239],["T_STRING","Core",1239],["T_NS_SEPARATOR","\\",1239],["T_STRING","Entity",1239],["T_NS_SEPARATOR","\\",1239],["T_STRING","EntityInterface",1239],["T_WHITESPACE"," ",1239],["T_VARIABLE","$entity",1239],")",["T_WHITESPACE"," ",1239],"{",["T_WHITESPACE","\n  ",1239],["T_VARIABLE","$referenced_files_by_field",1240],["T_WHITESPACE"," ",1240],"=",["T_WHITESPACE"," ",1240],["T_STRING","_editor_get_file_uuids_by_field",1240],"(",["T_VARIABLE","$entity",1240],")",";",["T_WHITESPACE","\n  ",1240],["T_FOREACH","foreach",1241],["T_WHITESPACE"," ",1241],"(",["T_VARIABLE","$referenced_files_by_field",1241],["T_WHITESPACE"," ",1241],["T_AS","as",1241],["T_WHITESPACE"," ",1241],["T_VARIABLE","$field",1241],["T_WHITESPACE"," ",1241],["T_DOUBLE_ARROW","=>",1241],["T_WHITESPACE"," ",1241],["T_VARIABLE","$uuids",1241],")",["T_WHITESPACE"," ",1241],"{",["T_WHITESPACE","\n    ",1241],["T_STRING","_editor_delete_file_usage",1242],"(",["T_VARIABLE","$uuids",1242],",",["T_WHITESPACE"," ",1242],["T_VARIABLE","$entity",1242],",",["T_WHITESPACE"," ",1242],["T_LNUMBER","1",1242],")",";",["T_WHITESPACE","\n  ",1242],"}",["T_WHITESPACE","\n",1243],"}",["T_WHITESPACE","\n\n",1244],["T_DOC_COMMENT","\/**\n * Respond to entity revision deletion of a particular type.\n *\n * This hook runs once the entity revision has been deleted from the storage.\n *\n * @param \\Drupal\\Core\\Entity\\EntityInterface $entity\n *   The entity object for the entity revision that has been deleted.\n *\n * @ingroup entity_crud\n * @see hook_entity_revision_delete()\n *\/",1246],["T_WHITESPACE","\n",1256],["T_FUNCTION","function",1257],["T_WHITESPACE"," ",1257],["T_STRING","hook_ENTITY_TYPE_revision_delete",1257],"(",["T_STRING","Drupal",1257],["T_NS_SEPARATOR","\\",1257],["T_STRING","Core",1257],["T_NS_SEPARATOR","\\",1257],["T_STRING","Entity",1257],["T_NS_SEPARATOR","\\",1257],["T_STRING","EntityInterface",1257],["T_WHITESPACE"," ",1257],["T_VARIABLE","$entity",1257],")",["T_WHITESPACE"," ",1257],"{",["T_WHITESPACE","\n  ",1257],["T_VARIABLE","$referenced_files_by_field",1258],["T_WHITESPACE"," ",1258],"=",["T_WHITESPACE"," ",1258],["T_STRING","_editor_get_file_uuids_by_field",1258],"(",["T_VARIABLE","$entity",1258],")",";",["T_WHITESPACE","\n  ",1258],["T_FOREACH","foreach",1259],["T_WHITESPACE"," ",1259],"(",["T_VARIABLE","$referenced_files_by_field",1259],["T_WHITESPACE"," ",1259],["T_AS","as",1259],["T_WHITESPACE"," ",1259],["T_VARIABLE","$field",1259],["T_WHITESPACE"," ",1259],["T_DOUBLE_ARROW","=>",1259],["T_WHITESPACE"," ",1259],["T_VARIABLE","$uuids",1259],")",["T_WHITESPACE"," ",1259],"{",["T_WHITESPACE","\n    ",1259],["T_STRING","_editor_delete_file_usage",1260],"(",["T_VARIABLE","$uuids",1260],",",["T_WHITESPACE"," ",1260],["T_VARIABLE","$entity",1260],",",["T_WHITESPACE"," ",1260],["T_LNUMBER","1",1260],")",";",["T_WHITESPACE","\n  ",1260],"}",["T_WHITESPACE","\n",1261],"}",["T_WHITESPACE","\n\n",1262],["T_DOC_COMMENT","\/**\n * Act on entities being assembled before rendering.\n *\n * @param &$build\n *   A renderable array representing the entity content. The module may add\n *   elements to $build prior to rendering. The structure of $build is a\n *   renderable array as expected by drupal_render().\n * @param \\Drupal\\Core\\Entity\\EntityInterface $entity\n *   The entity object.\n * @param \\Drupal\\Core\\Entity\\Display\\EntityViewDisplayInterface $display\n *   The entity view display holding the display options configured for the\n *   entity components.\n * @param $view_mode\n *   The view mode the entity is rendered in.\n *\n * @see hook_entity_view_alter()\n * @see hook_ENTITY_TYPE_view()\n *\n * @ingroup entity_crud\n *\/",1264],["T_WHITESPACE","\n",1283],["T_FUNCTION","function",1284],["T_WHITESPACE"," ",1284],["T_STRING","hook_entity_view",1284],"(",["T_ARRAY","array",1284],["T_WHITESPACE"," ",1284],"&",["T_VARIABLE","$build",1284],",",["T_WHITESPACE"," ",1284],["T_NS_SEPARATOR","\\",1284],["T_STRING","Drupal",1284],["T_NS_SEPARATOR","\\",1284],["T_STRING","Core",1284],["T_NS_SEPARATOR","\\",1284],["T_STRING","Entity",1284],["T_NS_SEPARATOR","\\",1284],["T_STRING","EntityInterface",1284],["T_WHITESPACE"," ",1284],["T_VARIABLE","$entity",1284],",",["T_WHITESPACE"," ",1284],["T_NS_SEPARATOR","\\",1284],["T_STRING","Drupal",1284],["T_NS_SEPARATOR","\\",1284],["T_STRING","Core",1284],["T_NS_SEPARATOR","\\",1284],["T_STRING","Entity",1284],["T_NS_SEPARATOR","\\",1284],["T_STRING","Display",1284],["T_NS_SEPARATOR","\\",1284],["T_STRING","EntityViewDisplayInterface",1284],["T_WHITESPACE"," ",1284],["T_VARIABLE","$display",1284],",",["T_WHITESPACE"," ",1284],["T_VARIABLE","$view_mode",1284],")",["T_WHITESPACE"," ",1284],"{",["T_WHITESPACE","\n  ",1284],["T_COMMENT","\/\/ Only do the extra work if the component is configured to be displayed.\n",1285],["T_WHITESPACE","  ",1286],["T_COMMENT","\/\/ This assumes a 'mymodule_addition' extra field has been defined for the\n",1286],["T_WHITESPACE","  ",1287],["T_COMMENT","\/\/ entity bundle in hook_entity_extra_field_info().\n",1287],["T_WHITESPACE","  ",1288],["T_IF","if",1288],["T_WHITESPACE"," ",1288],"(",["T_VARIABLE","$display",1288],["T_OBJECT_OPERATOR","->",1288],["T_STRING","getComponent",1288],"(",["T_CONSTANT_ENCAPSED_STRING","'mymodule_addition'",1288],")",")",["T_WHITESPACE"," ",1288],"{",["T_WHITESPACE","\n    ",1288],["T_VARIABLE","$build",1289],"[",["T_CONSTANT_ENCAPSED_STRING","'mymodule_addition'",1289],"]",["T_WHITESPACE"," ",1289],"=",["T_WHITESPACE"," ",1289],["T_ARRAY","array",1289],"(",["T_WHITESPACE","\n      ",1289],["T_CONSTANT_ENCAPSED_STRING","'#markup'",1290],["T_WHITESPACE"," ",1290],["T_DOUBLE_ARROW","=>",1290],["T_WHITESPACE"," ",1290],["T_STRING","mymodule_addition",1290],"(",["T_VARIABLE","$entity",1290],")",",",["T_WHITESPACE","\n      ",1290],["T_CONSTANT_ENCAPSED_STRING","'#theme'",1291],["T_WHITESPACE"," ",1291],["T_DOUBLE_ARROW","=>",1291],["T_WHITESPACE"," ",1291],["T_CONSTANT_ENCAPSED_STRING","'mymodule_my_additional_field'",1291],",",["T_WHITESPACE","\n    ",1291],")",";",["T_WHITESPACE","\n  ",1292],"}",["T_WHITESPACE","\n",1293],"}",["T_WHITESPACE","\n\n",1294],["T_DOC_COMMENT","\/**\n * Act on entities of a particular type being assembled before rendering.\n *\n * @param &$build\n *   A renderable array representing the entity content. The module may add\n *   elements to $build prior to rendering. The structure of $build is a\n *   renderable array as expected by drupal_render().\n * @param \\Drupal\\Core\\Entity\\EntityInterface $entity\n *   The entity object.\n * @param \\Drupal\\Core\\Entity\\Display\\EntityViewDisplayInterface $display\n *   The entity view display holding the display options configured for the\n *   entity components.\n * @param $view_mode\n *   The view mode the entity is rendered in.\n *\n * @see hook_ENTITY_TYPE_view_alter()\n * @see hook_entity_view()\n *\n * @ingroup entity_crud\n *\/",1296],["T_WHITESPACE","\n",1315],["T_FUNCTION","function",1316],["T_WHITESPACE"," ",1316],["T_STRING","hook_ENTITY_TYPE_view",1316],"(",["T_ARRAY","array",1316],["T_WHITESPACE"," ",1316],"&",["T_VARIABLE","$build",1316],",",["T_WHITESPACE"," ",1316],["T_NS_SEPARATOR","\\",1316],["T_STRING","Drupal",1316],["T_NS_SEPARATOR","\\",1316],["T_STRING","Core",1316],["T_NS_SEPARATOR","\\",1316],["T_STRING","Entity",1316],["T_NS_SEPARATOR","\\",1316],["T_STRING","EntityInterface",1316],["T_WHITESPACE"," ",1316],["T_VARIABLE","$entity",1316],",",["T_WHITESPACE"," ",1316],["T_NS_SEPARATOR","\\",1316],["T_STRING","Drupal",1316],["T_NS_SEPARATOR","\\",1316],["T_STRING","Core",1316],["T_NS_SEPARATOR","\\",1316],["T_STRING","Entity",1316],["T_NS_SEPARATOR","\\",1316],["T_STRING","Display",1316],["T_NS_SEPARATOR","\\",1316],["T_STRING","EntityViewDisplayInterface",1316],["T_WHITESPACE"," ",1316],["T_VARIABLE","$display",1316],",",["T_WHITESPACE"," ",1316],["T_VARIABLE","$view_mode",1316],")",["T_WHITESPACE"," ",1316],"{",["T_WHITESPACE","\n  ",1316],["T_COMMENT","\/\/ Only do the extra work if the component is configured to be displayed.\n",1317],["T_WHITESPACE","  ",1318],["T_COMMENT","\/\/ This assumes a 'mymodule_addition' extra field has been defined for the\n",1318],["T_WHITESPACE","  ",1319],["T_COMMENT","\/\/ entity bundle in hook_entity_extra_field_info().\n",1319],["T_WHITESPACE","  ",1320],["T_IF","if",1320],["T_WHITESPACE"," ",1320],"(",["T_VARIABLE","$display",1320],["T_OBJECT_OPERATOR","->",1320],["T_STRING","getComponent",1320],"(",["T_CONSTANT_ENCAPSED_STRING","'mymodule_addition'",1320],")",")",["T_WHITESPACE"," ",1320],"{",["T_WHITESPACE","\n    ",1320],["T_VARIABLE","$build",1321],"[",["T_CONSTANT_ENCAPSED_STRING","'mymodule_addition'",1321],"]",["T_WHITESPACE"," ",1321],"=",["T_WHITESPACE"," ",1321],["T_ARRAY","array",1321],"(",["T_WHITESPACE","\n      ",1321],["T_CONSTANT_ENCAPSED_STRING","'#markup'",1322],["T_WHITESPACE"," ",1322],["T_DOUBLE_ARROW","=>",1322],["T_WHITESPACE"," ",1322],["T_STRING","mymodule_addition",1322],"(",["T_VARIABLE","$entity",1322],")",",",["T_WHITESPACE","\n      ",1322],["T_CONSTANT_ENCAPSED_STRING","'#theme'",1323],["T_WHITESPACE"," ",1323],["T_DOUBLE_ARROW","=>",1323],["T_WHITESPACE"," ",1323],["T_CONSTANT_ENCAPSED_STRING","'mymodule_my_additional_field'",1323],",",["T_WHITESPACE","\n    ",1323],")",";",["T_WHITESPACE","\n  ",1324],"}",["T_WHITESPACE","\n",1325],"}",["T_WHITESPACE","\n\n",1326],["T_DOC_COMMENT","\/**\n * Alter the results of the entity build array.\n *\n * This hook is called after the content has been assembled in a structured\n * array and may be used for doing processing which requires that the complete\n * entity content structure has been built.\n *\n * If a module wishes to act on the rendered HTML of the entity rather than the\n * structured content array, it may use this hook to add a #post_render\n * callback. Alternatively, it could also implement hook_preprocess_HOOK() for\n * the particular entity type template, if there is one (e.g., node.html.twig).\n *\n * See the @link themeable Default theme implementations topic @endlink and\n * drupal_render() for details.\n *\n * @param array &$build\n *   A renderable array representing the entity content.\n * @param \\Drupal\\Core\\Entity\\EntityInterface $entity\n *   The entity object being rendered.\n * @param \\Drupal\\Core\\Entity\\Display\\EntityViewDisplayInterface $display\n *   The entity view display holding the display options configured for the\n *   entity components.\n *\n * @ingroup entity_crud\n *\n * @see hook_entity_view()\n * @see hook_ENTITY_TYPE_view_alter()\n *\/",1328],["T_WHITESPACE","\n",1355],["T_FUNCTION","function",1356],["T_WHITESPACE"," ",1356],["T_STRING","hook_entity_view_alter",1356],"(",["T_ARRAY","array",1356],["T_WHITESPACE"," ",1356],"&",["T_VARIABLE","$build",1356],",",["T_WHITESPACE"," ",1356],["T_STRING","Drupal",1356],["T_NS_SEPARATOR","\\",1356],["T_STRING","Core",1356],["T_NS_SEPARATOR","\\",1356],["T_STRING","Entity",1356],["T_NS_SEPARATOR","\\",1356],["T_STRING","EntityInterface",1356],["T_WHITESPACE"," ",1356],["T_VARIABLE","$entity",1356],",",["T_WHITESPACE"," ",1356],["T_NS_SEPARATOR","\\",1356],["T_STRING","Drupal",1356],["T_NS_SEPARATOR","\\",1356],["T_STRING","Core",1356],["T_NS_SEPARATOR","\\",1356],["T_STRING","Entity",1356],["T_NS_SEPARATOR","\\",1356],["T_STRING","Display",1356],["T_NS_SEPARATOR","\\",1356],["T_STRING","EntityViewDisplayInterface",1356],["T_WHITESPACE"," ",1356],["T_VARIABLE","$display",1356],")",["T_WHITESPACE"," ",1356],"{",["T_WHITESPACE","\n  ",1356],["T_IF","if",1357],["T_WHITESPACE"," ",1357],"(",["T_VARIABLE","$build",1357],"[",["T_CONSTANT_ENCAPSED_STRING","'#view_mode'",1357],"]",["T_WHITESPACE"," ",1357],["T_IS_EQUAL","==",1357],["T_WHITESPACE"," ",1357],["T_CONSTANT_ENCAPSED_STRING","'full'",1357],["T_WHITESPACE"," ",1357],["T_BOOLEAN_AND","&&",1357],["T_WHITESPACE"," ",1357],["T_ISSET","isset",1357],"(",["T_VARIABLE","$build",1357],"[",["T_CONSTANT_ENCAPSED_STRING","'an_additional_field'",1357],"]",")",")",["T_WHITESPACE"," ",1357],"{",["T_WHITESPACE","\n    ",1357],["T_COMMENT","\/\/ Change its weight.\n",1358],["T_WHITESPACE","    ",1359],["T_VARIABLE","$build",1359],"[",["T_CONSTANT_ENCAPSED_STRING","'an_additional_field'",1359],"]","[",["T_CONSTANT_ENCAPSED_STRING","'#weight'",1359],"]",["T_WHITESPACE"," ",1359],"=",["T_WHITESPACE"," ",1359],"-",["T_LNUMBER","10",1359],";",["T_WHITESPACE","\n\n    ",1359],["T_COMMENT","\/\/ Add a #post_render callback to act on the rendered HTML of the entity.\n",1361],["T_WHITESPACE","    ",1362],["T_VARIABLE","$build",1362],"[",["T_CONSTANT_ENCAPSED_STRING","'#post_render'",1362],"]","[","]",["T_WHITESPACE"," ",1362],"=",["T_WHITESPACE"," ",1362],["T_CONSTANT_ENCAPSED_STRING","'my_module_node_post_render'",1362],";",["T_WHITESPACE","\n  ",1362],"}",["T_WHITESPACE","\n",1363],"}",["T_WHITESPACE","\n\n",1364],["T_DOC_COMMENT","\/**\n * Alter the results of the entity build array for a particular entity type.\n *\n * This hook is called after the content has been assembled in a structured\n * array and may be used for doing processing which requires that the complete\n * entity content structure has been built.\n *\n * If a module wishes to act on the rendered HTML of the entity rather than the\n * structured content array, it may use this hook to add a #post_render\n * callback. Alternatively, it could also implement hook_preprocess_HOOK() for\n * the particular entity type template, if there is one (e.g., node.html.twig).\n *\n * See the @link themeable Default theme implementations topic @endlink and\n * drupal_render() for details.\n *\n * @param array &$build\n *   A renderable array representing the entity content.\n * @param \\Drupal\\Core\\Entity\\EntityInterface $entity\n *   The entity object being rendered.\n * @param \\Drupal\\Core\\Entity\\Display\\EntityViewDisplayInterface $display\n *   The entity view display holding the display options configured for the\n *   entity components.\n *\n * @ingroup entity_crud\n *\n * @see hook_ENTITY_TYPE_view()\n * @see hook_entity_view_alter()\n *\/",1366],["T_WHITESPACE","\n",1393],["T_FUNCTION","function",1394],["T_WHITESPACE"," ",1394],["T_STRING","hook_ENTITY_TYPE_view_alter",1394],"(",["T_ARRAY","array",1394],["T_WHITESPACE"," ",1394],"&",["T_VARIABLE","$build",1394],",",["T_WHITESPACE"," ",1394],["T_STRING","Drupal",1394],["T_NS_SEPARATOR","\\",1394],["T_STRING","Core",1394],["T_NS_SEPARATOR","\\",1394],["T_STRING","Entity",1394],["T_NS_SEPARATOR","\\",1394],["T_STRING","EntityInterface",1394],["T_WHITESPACE"," ",1394],["T_VARIABLE","$entity",1394],",",["T_WHITESPACE"," ",1394],["T_NS_SEPARATOR","\\",1394],["T_STRING","Drupal",1394],["T_NS_SEPARATOR","\\",1394],["T_STRING","Core",1394],["T_NS_SEPARATOR","\\",1394],["T_STRING","Entity",1394],["T_NS_SEPARATOR","\\",1394],["T_STRING","Display",1394],["T_NS_SEPARATOR","\\",1394],["T_STRING","EntityViewDisplayInterface",1394],["T_WHITESPACE"," ",1394],["T_VARIABLE","$display",1394],")",["T_WHITESPACE"," ",1394],"{",["T_WHITESPACE","\n  ",1394],["T_IF","if",1395],["T_WHITESPACE"," ",1395],"(",["T_VARIABLE","$build",1395],"[",["T_CONSTANT_ENCAPSED_STRING","'#view_mode'",1395],"]",["T_WHITESPACE"," ",1395],["T_IS_EQUAL","==",1395],["T_WHITESPACE"," ",1395],["T_CONSTANT_ENCAPSED_STRING","'full'",1395],["T_WHITESPACE"," ",1395],["T_BOOLEAN_AND","&&",1395],["T_WHITESPACE"," ",1395],["T_ISSET","isset",1395],"(",["T_VARIABLE","$build",1395],"[",["T_CONSTANT_ENCAPSED_STRING","'an_additional_field'",1395],"]",")",")",["T_WHITESPACE"," ",1395],"{",["T_WHITESPACE","\n    ",1395],["T_COMMENT","\/\/ Change its weight.\n",1396],["T_WHITESPACE","    ",1397],["T_VARIABLE","$build",1397],"[",["T_CONSTANT_ENCAPSED_STRING","'an_additional_field'",1397],"]","[",["T_CONSTANT_ENCAPSED_STRING","'#weight'",1397],"]",["T_WHITESPACE"," ",1397],"=",["T_WHITESPACE"," ",1397],"-",["T_LNUMBER","10",1397],";",["T_WHITESPACE","\n\n    ",1397],["T_COMMENT","\/\/ Add a #post_render callback to act on the rendered HTML of the entity.\n",1399],["T_WHITESPACE","    ",1400],["T_VARIABLE","$build",1400],"[",["T_CONSTANT_ENCAPSED_STRING","'#post_render'",1400],"]","[","]",["T_WHITESPACE"," ",1400],"=",["T_WHITESPACE"," ",1400],["T_CONSTANT_ENCAPSED_STRING","'my_module_node_post_render'",1400],";",["T_WHITESPACE","\n  ",1400],"}",["T_WHITESPACE","\n",1401],"}",["T_WHITESPACE","\n\n",1402],["T_DOC_COMMENT","\/**\n * Act on entities as they are being prepared for view.\n *\n * Allows you to operate on multiple entities as they are being prepared for\n * view. Only use this if attaching the data during the entity loading phase\n * is not appropriate, for example when attaching other 'entity' style objects.\n *\n * @param string $entity_type_id\n *   The type of entities being viewed (i.e. node, user, comment).\n * @param array $entities\n *   The entities keyed by entity ID.\n * @param \\Drupal\\Core\\Entity\\Display\\EntityViewDisplayInterface[] $displays\n *   The array of entity view displays holding the display options configured\n *   for the entity components, keyed by bundle name.\n * @param string $view_mode\n *   The view mode.\n *\n * @ingroup entity_crud\n *\/",1404],["T_WHITESPACE","\n",1422],["T_FUNCTION","function",1423],["T_WHITESPACE"," ",1423],["T_STRING","hook_entity_prepare_view",1423],"(",["T_VARIABLE","$entity_type_id",1423],",",["T_WHITESPACE"," ",1423],["T_ARRAY","array",1423],["T_WHITESPACE"," ",1423],["T_VARIABLE","$entities",1423],",",["T_WHITESPACE"," ",1423],["T_ARRAY","array",1423],["T_WHITESPACE"," ",1423],["T_VARIABLE","$displays",1423],",",["T_WHITESPACE"," ",1423],["T_VARIABLE","$view_mode",1423],")",["T_WHITESPACE"," ",1423],"{",["T_WHITESPACE","\n  ",1423],["T_COMMENT","\/\/ Load a specific node into the user object for later theming.\n",1424],["T_WHITESPACE","  ",1425],["T_IF","if",1425],["T_WHITESPACE"," ",1425],"(","!",["T_EMPTY","empty",1425],"(",["T_VARIABLE","$entities",1425],")",["T_WHITESPACE"," ",1425],["T_BOOLEAN_AND","&&",1425],["T_WHITESPACE"," ",1425],["T_VARIABLE","$entity_type_id",1425],["T_WHITESPACE"," ",1425],["T_IS_EQUAL","==",1425],["T_WHITESPACE"," ",1425],["T_CONSTANT_ENCAPSED_STRING","'user'",1425],")",["T_WHITESPACE"," ",1425],"{",["T_WHITESPACE","\n    ",1425],["T_COMMENT","\/\/ Only do the extra work if the component is configured to be\n",1426],["T_WHITESPACE","    ",1427],["T_COMMENT","\/\/ displayed. This assumes a 'mymodule_addition' extra field has been\n",1427],["T_WHITESPACE","    ",1428],["T_COMMENT","\/\/ defined for the entity bundle in hook_entity_extra_field_info().\n",1428],["T_WHITESPACE","    ",1429],["T_VARIABLE","$ids",1429],["T_WHITESPACE"," ",1429],"=",["T_WHITESPACE"," ",1429],["T_ARRAY","array",1429],"(",")",";",["T_WHITESPACE","\n    ",1429],["T_FOREACH","foreach",1430],["T_WHITESPACE"," ",1430],"(",["T_VARIABLE","$entities",1430],["T_WHITESPACE"," ",1430],["T_AS","as",1430],["T_WHITESPACE"," ",1430],["T_VARIABLE","$id",1430],["T_WHITESPACE"," ",1430],["T_DOUBLE_ARROW","=>",1430],["T_WHITESPACE"," ",1430],["T_VARIABLE","$entity",1430],")",["T_WHITESPACE"," ",1430],"{",["T_WHITESPACE","\n      ",1430],["T_IF","if",1431],["T_WHITESPACE"," ",1431],"(",["T_VARIABLE","$displays",1431],"[",["T_VARIABLE","$entity",1431],["T_OBJECT_OPERATOR","->",1431],["T_STRING","bundle",1431],"(",")","]",["T_OBJECT_OPERATOR","->",1431],["T_STRING","getComponent",1431],"(",["T_CONSTANT_ENCAPSED_STRING","'mymodule_addition'",1431],")",")",["T_WHITESPACE"," ",1431],"{",["T_WHITESPACE","\n        ",1431],["T_VARIABLE","$ids",1432],"[","]",["T_WHITESPACE"," ",1432],"=",["T_WHITESPACE"," ",1432],["T_VARIABLE","$id",1432],";",["T_WHITESPACE","\n      ",1432],"}",["T_WHITESPACE","\n    ",1433],"}",["T_WHITESPACE","\n    ",1434],["T_IF","if",1435],["T_WHITESPACE"," ",1435],"(",["T_VARIABLE","$ids",1435],")",["T_WHITESPACE"," ",1435],"{",["T_WHITESPACE","\n      ",1435],["T_VARIABLE","$nodes",1436],["T_WHITESPACE"," ",1436],"=",["T_WHITESPACE"," ",1436],["T_STRING","mymodule_get_user_nodes",1436],"(",["T_VARIABLE","$ids",1436],")",";",["T_WHITESPACE","\n      ",1436],["T_FOREACH","foreach",1437],["T_WHITESPACE"," ",1437],"(",["T_VARIABLE","$ids",1437],["T_WHITESPACE"," ",1437],["T_AS","as",1437],["T_WHITESPACE"," ",1437],["T_VARIABLE","$id",1437],")",["T_WHITESPACE"," ",1437],"{",["T_WHITESPACE","\n        ",1437],["T_VARIABLE","$entities",1438],"[",["T_VARIABLE","$id",1438],"]",["T_OBJECT_OPERATOR","->",1438],["T_STRING","user_node",1438],["T_WHITESPACE"," ",1438],"=",["T_WHITESPACE"," ",1438],["T_VARIABLE","$nodes",1438],"[",["T_VARIABLE","$id",1438],"]",";",["T_WHITESPACE","\n      ",1438],"}",["T_WHITESPACE","\n    ",1439],"}",["T_WHITESPACE","\n  ",1440],"}",["T_WHITESPACE","\n",1441],"}",["T_WHITESPACE","\n\n",1442],["T_DOC_COMMENT","\/**\n * Change the view mode of an entity that is being displayed.\n *\n * @param string $view_mode\n *   The view_mode that is to be used to display the entity.\n * @param \\Drupal\\Core\\Entity\\EntityInterface $entity\n *   The entity that is being viewed.\n * @param array $context\n *   Array with additional context information, currently only contains the\n *   langcode the entity is viewed in.\n *\n * @ingroup entity_crud\n *\/",1444],["T_WHITESPACE","\n",1456],["T_FUNCTION","function",1457],["T_WHITESPACE"," ",1457],["T_STRING","hook_entity_view_mode_alter",1457],"(","&",["T_VARIABLE","$view_mode",1457],",",["T_WHITESPACE"," ",1457],["T_STRING","Drupal",1457],["T_NS_SEPARATOR","\\",1457],["T_STRING","Core",1457],["T_NS_SEPARATOR","\\",1457],["T_STRING","Entity",1457],["T_NS_SEPARATOR","\\",1457],["T_STRING","EntityInterface",1457],["T_WHITESPACE"," ",1457],["T_VARIABLE","$entity",1457],",",["T_WHITESPACE"," ",1457],["T_VARIABLE","$context",1457],")",["T_WHITESPACE"," ",1457],"{",["T_WHITESPACE","\n  ",1457],["T_COMMENT","\/\/ For nodes, change the view mode when it is teaser.\n",1458],["T_WHITESPACE","  ",1459],["T_IF","if",1459],["T_WHITESPACE"," ",1459],"(",["T_VARIABLE","$entity",1459],["T_OBJECT_OPERATOR","->",1459],["T_STRING","getEntityTypeId",1459],"(",")",["T_WHITESPACE"," ",1459],["T_IS_EQUAL","==",1459],["T_WHITESPACE"," ",1459],["T_CONSTANT_ENCAPSED_STRING","'node'",1459],["T_WHITESPACE"," ",1459],["T_BOOLEAN_AND","&&",1459],["T_WHITESPACE"," ",1459],["T_VARIABLE","$view_mode",1459],["T_WHITESPACE"," ",1459],["T_IS_EQUAL","==",1459],["T_WHITESPACE"," ",1459],["T_CONSTANT_ENCAPSED_STRING","'teaser'",1459],")",["T_WHITESPACE"," ",1459],"{",["T_WHITESPACE","\n    ",1459],["T_VARIABLE","$view_mode",1460],["T_WHITESPACE"," ",1460],"=",["T_WHITESPACE"," ",1460],["T_CONSTANT_ENCAPSED_STRING","'my_custom_view_mode'",1460],";",["T_WHITESPACE","\n  ",1460],"}",["T_WHITESPACE","\n",1461],"}",["T_WHITESPACE","\n\n",1462],["T_DOC_COMMENT","\/**\n * Alter entity renderable values before cache checking in drupal_render().\n *\n * Invoked for a specific entity type.\n *\n * The values in the #cache key of the renderable array are used to determine if\n * a cache entry exists for the entity's rendered output. Ideally only values\n * that pertain to caching should be altered in this hook.\n *\n * @param array &$build\n *   A renderable array containing the entity's caching and view mode values.\n * @param \\Drupal\\Core\\Entity\\EntityInterface $entity\n *   The entity that is being viewed.\n * @param string $view_mode\n *   The view_mode that is to be used to display the entity.\n *\n * @see drupal_render()\n * @see \\Drupal\\Core\\Entity\\EntityViewBuilder\n * @see hook_entity_build_defaults_alter()\n *\n * @ingroup entity_crud\n *\/",1464],["T_WHITESPACE","\n",1485],["T_FUNCTION","function",1486],["T_WHITESPACE"," ",1486],["T_STRING","hook_ENTITY_TYPE_build_defaults_alter",1486],"(",["T_ARRAY","array",1486],["T_WHITESPACE"," ",1486],"&",["T_VARIABLE","$build",1486],",",["T_WHITESPACE"," ",1486],["T_NS_SEPARATOR","\\",1486],["T_STRING","Drupal",1486],["T_NS_SEPARATOR","\\",1486],["T_STRING","Core",1486],["T_NS_SEPARATOR","\\",1486],["T_STRING","Entity",1486],["T_NS_SEPARATOR","\\",1486],["T_STRING","EntityInterface",1486],["T_WHITESPACE"," ",1486],["T_VARIABLE","$entity",1486],",",["T_WHITESPACE"," ",1486],["T_VARIABLE","$view_mode",1486],")",["T_WHITESPACE"," ",1486],"{",["T_WHITESPACE","\n\n",1486],"}",["T_WHITESPACE","\n\n",1488],["T_DOC_COMMENT","\/**\n * Alter entity renderable values before cache checking in drupal_render().\n *\n * The values in the #cache key of the renderable array are used to determine if\n * a cache entry exists for the entity's rendered output. Ideally only values\n * that pertain to caching should be altered in this hook.\n *\n * @param array &$build\n *   A renderable array containing the entity's caching and view mode values.\n * @param \\Drupal\\Core\\Entity\\EntityInterface $entity\n *   The entity that is being viewed.\n * @param string $view_mode\n *   The view_mode that is to be used to display the entity.\n *\n * @see drupal_render()\n * @see \\Drupal\\Core\\Entity\\EntityViewBuilder\n * @see hook_ENTITY_TYPE_build_defaults_alter()\n *\n * @ingroup entity_crud\n *\/",1490],["T_WHITESPACE","\n",1509],["T_FUNCTION","function",1510],["T_WHITESPACE"," ",1510],["T_STRING","hook_entity_build_defaults_alter",1510],"(",["T_ARRAY","array",1510],["T_WHITESPACE"," ",1510],"&",["T_VARIABLE","$build",1510],",",["T_WHITESPACE"," ",1510],["T_NS_SEPARATOR","\\",1510],["T_STRING","Drupal",1510],["T_NS_SEPARATOR","\\",1510],["T_STRING","Core",1510],["T_NS_SEPARATOR","\\",1510],["T_STRING","Entity",1510],["T_NS_SEPARATOR","\\",1510],["T_STRING","EntityInterface",1510],["T_WHITESPACE"," ",1510],["T_VARIABLE","$entity",1510],",",["T_WHITESPACE"," ",1510],["T_VARIABLE","$view_mode",1510],")",["T_WHITESPACE"," ",1510],"{",["T_WHITESPACE","\n\n",1510],"}",["T_WHITESPACE","\n\n",1512],["T_DOC_COMMENT","\/**\n * Alter the settings used for displaying an entity.\n *\n * @param \\Drupal\\Core\\Entity\\Display\\EntityViewDisplayInterface $display\n *   The entity view display that will be used to display the entity\n *   components.\n * @param array $context\n *   An associative array containing:\n *   - entity_type: The entity type, e.g., 'node' or 'user'.\n *   - bundle: The bundle, e.g., 'page' or 'article'.\n *   - view_mode: The view mode, e.g., 'full', 'teaser', etc.\n *\n * @ingroup entity_crud\n *\/",1514],["T_WHITESPACE","\n",1527],["T_FUNCTION","function",1528],["T_WHITESPACE"," ",1528],["T_STRING","hook_entity_view_display_alter",1528],"(",["T_NS_SEPARATOR","\\",1528],["T_STRING","Drupal",1528],["T_NS_SEPARATOR","\\",1528],["T_STRING","Core",1528],["T_NS_SEPARATOR","\\",1528],["T_STRING","Entity",1528],["T_NS_SEPARATOR","\\",1528],["T_STRING","Display",1528],["T_NS_SEPARATOR","\\",1528],["T_STRING","EntityViewDisplayInterface",1528],["T_WHITESPACE"," ",1528],["T_VARIABLE","$display",1528],",",["T_WHITESPACE"," ",1528],["T_ARRAY","array",1528],["T_WHITESPACE"," ",1528],["T_VARIABLE","$context",1528],")",["T_WHITESPACE"," ",1528],"{",["T_WHITESPACE","\n  ",1528],["T_COMMENT","\/\/ Leave field labels out of the search index.\n",1529],["T_WHITESPACE","  ",1530],["T_IF","if",1530],["T_WHITESPACE"," ",1530],"(",["T_VARIABLE","$context",1530],"[",["T_CONSTANT_ENCAPSED_STRING","'entity_type'",1530],"]",["T_WHITESPACE"," ",1530],["T_IS_EQUAL","==",1530],["T_WHITESPACE"," ",1530],["T_CONSTANT_ENCAPSED_STRING","'node'",1530],["T_WHITESPACE"," ",1530],["T_BOOLEAN_AND","&&",1530],["T_WHITESPACE"," ",1530],["T_VARIABLE","$context",1530],"[",["T_CONSTANT_ENCAPSED_STRING","'view_mode'",1530],"]",["T_WHITESPACE"," ",1530],["T_IS_EQUAL","==",1530],["T_WHITESPACE"," ",1530],["T_CONSTANT_ENCAPSED_STRING","'search_index'",1530],")",["T_WHITESPACE"," ",1530],"{",["T_WHITESPACE","\n    ",1530],["T_FOREACH","foreach",1531],["T_WHITESPACE"," ",1531],"(",["T_VARIABLE","$display",1531],["T_OBJECT_OPERATOR","->",1531],["T_STRING","getComponents",1531],"(",")",["T_WHITESPACE"," ",1531],["T_AS","as",1531],["T_WHITESPACE"," ",1531],["T_VARIABLE","$name",1531],["T_WHITESPACE"," ",1531],["T_DOUBLE_ARROW","=>",1531],["T_WHITESPACE"," ",1531],["T_VARIABLE","$options",1531],")",["T_WHITESPACE"," ",1531],"{",["T_WHITESPACE","\n      ",1531],["T_IF","if",1532],["T_WHITESPACE"," ",1532],"(",["T_ISSET","isset",1532],"(",["T_VARIABLE","$options",1532],"[",["T_CONSTANT_ENCAPSED_STRING","'label'",1532],"]",")",")",["T_WHITESPACE"," ",1532],"{",["T_WHITESPACE","\n        ",1532],["T_VARIABLE","$options",1533],"[",["T_CONSTANT_ENCAPSED_STRING","'label'",1533],"]",["T_WHITESPACE"," ",1533],"=",["T_WHITESPACE"," ",1533],["T_CONSTANT_ENCAPSED_STRING","'hidden'",1533],";",["T_WHITESPACE","\n        ",1533],["T_VARIABLE","$display",1534],["T_OBJECT_OPERATOR","->",1534],["T_STRING","setComponent",1534],"(",["T_VARIABLE","$name",1534],",",["T_WHITESPACE"," ",1534],["T_VARIABLE","$options",1534],")",";",["T_WHITESPACE","\n      ",1534],"}",["T_WHITESPACE","\n    ",1535],"}",["T_WHITESPACE","\n  ",1536],"}",["T_WHITESPACE","\n",1537],"}",["T_WHITESPACE","\n\n",1538],["T_DOC_COMMENT","\/**\n * Alter the render array generated by an EntityDisplay for an entity.\n *\n * @param array $build\n *   The renderable array generated by the EntityDisplay.\n * @param array $context\n *   An associative array containing:\n *   - entity: The entity being rendered.\n *   - view_mode: The view mode; for example, 'full' or 'teaser'.\n *   - display: The EntityDisplay holding the display options.\n *\n * @ingroup entity_crud\n *\/",1540],["T_WHITESPACE","\n",1552],["T_FUNCTION","function",1553],["T_WHITESPACE"," ",1553],["T_STRING","hook_entity_display_build_alter",1553],"(","&",["T_VARIABLE","$build",1553],",",["T_WHITESPACE"," ",1553],["T_VARIABLE","$context",1553],")",["T_WHITESPACE"," ",1553],"{",["T_WHITESPACE","\n  ",1553],["T_COMMENT","\/\/ Append RDF term mappings on displayed taxonomy links.\n",1554],["T_WHITESPACE","  ",1555],["T_FOREACH","foreach",1555],["T_WHITESPACE"," ",1555],"(",["T_STRING","Element",1555],["T_DOUBLE_COLON","::",1555],["T_STRING","children",1555],"(",["T_VARIABLE","$build",1555],")",["T_WHITESPACE"," ",1555],["T_AS","as",1555],["T_WHITESPACE"," ",1555],["T_VARIABLE","$field_name",1555],")",["T_WHITESPACE"," ",1555],"{",["T_WHITESPACE","\n    ",1555],["T_VARIABLE","$element",1556],["T_WHITESPACE"," ",1556],"=",["T_WHITESPACE"," ",1556],"&",["T_VARIABLE","$build",1556],"[",["T_VARIABLE","$field_name",1556],"]",";",["T_WHITESPACE","\n    ",1556],["T_IF","if",1557],["T_WHITESPACE"," ",1557],"(",["T_VARIABLE","$element",1557],"[",["T_CONSTANT_ENCAPSED_STRING","'#field_type'",1557],"]",["T_WHITESPACE"," ",1557],["T_IS_EQUAL","==",1557],["T_WHITESPACE"," ",1557],["T_CONSTANT_ENCAPSED_STRING","'entity_reference'",1557],["T_WHITESPACE"," ",1557],["T_BOOLEAN_AND","&&",1557],["T_WHITESPACE"," ",1557],["T_VARIABLE","$element",1557],"[",["T_CONSTANT_ENCAPSED_STRING","'#formatter'",1557],"]",["T_WHITESPACE"," ",1557],["T_IS_EQUAL","==",1557],["T_WHITESPACE"," ",1557],["T_CONSTANT_ENCAPSED_STRING","'entity_reference_label'",1557],")",["T_WHITESPACE"," ",1557],"{",["T_WHITESPACE","\n      ",1557],["T_FOREACH","foreach",1558],["T_WHITESPACE"," ",1558],"(",["T_VARIABLE","$element",1558],"[",["T_CONSTANT_ENCAPSED_STRING","'#items'",1558],"]",["T_WHITESPACE"," ",1558],["T_AS","as",1558],["T_WHITESPACE"," ",1558],["T_VARIABLE","$delta",1558],["T_WHITESPACE"," ",1558],["T_DOUBLE_ARROW","=>",1558],["T_WHITESPACE"," ",1558],["T_VARIABLE","$item",1558],")",["T_WHITESPACE"," ",1558],"{",["T_WHITESPACE","\n        ",1558],["T_VARIABLE","$term",1559],["T_WHITESPACE"," ",1559],"=",["T_WHITESPACE"," ",1559],["T_VARIABLE","$item",1559],["T_OBJECT_OPERATOR","->",1559],["T_STRING","entity",1559],";",["T_WHITESPACE","\n        ",1559],["T_IF","if",1560],["T_WHITESPACE"," ",1560],"(","!",["T_EMPTY","empty",1560],"(",["T_VARIABLE","$term",1560],["T_OBJECT_OPERATOR","->",1560],["T_STRING","rdf_mapping",1560],"[",["T_CONSTANT_ENCAPSED_STRING","'rdftype'",1560],"]",")",")",["T_WHITESPACE"," ",1560],"{",["T_WHITESPACE","\n          ",1560],["T_VARIABLE","$element",1561],"[",["T_VARIABLE","$delta",1561],"]","[",["T_CONSTANT_ENCAPSED_STRING","'#options'",1561],"]","[",["T_CONSTANT_ENCAPSED_STRING","'attributes'",1561],"]","[",["T_CONSTANT_ENCAPSED_STRING","'typeof'",1561],"]",["T_WHITESPACE"," ",1561],"=",["T_WHITESPACE"," ",1561],["T_VARIABLE","$term",1561],["T_OBJECT_OPERATOR","->",1561],["T_STRING","rdf_mapping",1561],"[",["T_CONSTANT_ENCAPSED_STRING","'rdftype'",1561],"]",";",["T_WHITESPACE","\n        ",1561],"}",["T_WHITESPACE","\n        ",1562],["T_IF","if",1563],["T_WHITESPACE"," ",1563],"(","!",["T_EMPTY","empty",1563],"(",["T_VARIABLE","$term",1563],["T_OBJECT_OPERATOR","->",1563],["T_STRING","rdf_mapping",1563],"[",["T_CONSTANT_ENCAPSED_STRING","'name'",1563],"]","[",["T_CONSTANT_ENCAPSED_STRING","'predicates'",1563],"]",")",")",["T_WHITESPACE"," ",1563],"{",["T_WHITESPACE","\n          ",1563],["T_VARIABLE","$element",1564],"[",["T_VARIABLE","$delta",1564],"]","[",["T_CONSTANT_ENCAPSED_STRING","'#options'",1564],"]","[",["T_CONSTANT_ENCAPSED_STRING","'attributes'",1564],"]","[",["T_CONSTANT_ENCAPSED_STRING","'property'",1564],"]",["T_WHITESPACE"," ",1564],"=",["T_WHITESPACE"," ",1564],["T_VARIABLE","$term",1564],["T_OBJECT_OPERATOR","->",1564],["T_STRING","rdf_mapping",1564],"[",["T_CONSTANT_ENCAPSED_STRING","'name'",1564],"]","[",["T_CONSTANT_ENCAPSED_STRING","'predicates'",1564],"]",";",["T_WHITESPACE","\n        ",1564],"}",["T_WHITESPACE","\n      ",1565],"}",["T_WHITESPACE","\n    ",1566],"}",["T_WHITESPACE","\n  ",1567],"}",["T_WHITESPACE","\n",1568],"}",["T_WHITESPACE","\n\n",1569],["T_DOC_COMMENT","\/**\n * Acts on an entity object about to be shown on an entity form.\n *\n * This can be typically used to pre-fill entity values or change the form state\n * before the entity form is built. It is invoked just once when first building\n * the entity form. Rebuilds will not trigger a new invocation.\n *\n * @param \\Drupal\\Core\\Entity\\EntityInterface $entity\n *   The entity that is about to be shown on the form.\n * @param $operation\n *   The current operation.\n * @param \\Drupal\\Core\\Form\\FormStateInterface $form_state\n *   The current state of the form.\n *\n * @see \\Drupal\\Core\\Entity\\EntityForm::prepareEntity()\n * @see hook_ENTITY_TYPE_prepare_form()\n *\n * @ingroup entity_crud\n *\/",1571],["T_WHITESPACE","\n",1589],["T_FUNCTION","function",1590],["T_WHITESPACE"," ",1590],["T_STRING","hook_entity_prepare_form",1590],"(",["T_NS_SEPARATOR","\\",1590],["T_STRING","Drupal",1590],["T_NS_SEPARATOR","\\",1590],["T_STRING","Core",1590],["T_NS_SEPARATOR","\\",1590],["T_STRING","Entity",1590],["T_NS_SEPARATOR","\\",1590],["T_STRING","EntityInterface",1590],["T_WHITESPACE"," ",1590],["T_VARIABLE","$entity",1590],",",["T_WHITESPACE"," ",1590],["T_VARIABLE","$operation",1590],",",["T_WHITESPACE"," ",1590],["T_NS_SEPARATOR","\\",1590],["T_STRING","Drupal",1590],["T_NS_SEPARATOR","\\",1590],["T_STRING","Core",1590],["T_NS_SEPARATOR","\\",1590],["T_STRING","Form",1590],["T_NS_SEPARATOR","\\",1590],["T_STRING","FormStateInterface",1590],["T_WHITESPACE"," ",1590],["T_VARIABLE","$form_state",1590],")",["T_WHITESPACE"," ",1590],"{",["T_WHITESPACE","\n  ",1590],["T_IF","if",1591],["T_WHITESPACE"," ",1591],"(",["T_VARIABLE","$operation",1591],["T_WHITESPACE"," ",1591],["T_IS_EQUAL","==",1591],["T_WHITESPACE"," ",1591],["T_CONSTANT_ENCAPSED_STRING","'edit'",1591],")",["T_WHITESPACE"," ",1591],"{",["T_WHITESPACE","\n    ",1591],["T_VARIABLE","$entity",1592],["T_OBJECT_OPERATOR","->",1592],["T_STRING","label",1592],["T_OBJECT_OPERATOR","->",1592],["T_STRING","value",1592],["T_WHITESPACE"," ",1592],"=",["T_WHITESPACE"," ",1592],["T_CONSTANT_ENCAPSED_STRING","'Altered label'",1592],";",["T_WHITESPACE","\n    ",1592],["T_VARIABLE","$form_state",1593],["T_OBJECT_OPERATOR","->",1593],["T_STRING","set",1593],"(",["T_CONSTANT_ENCAPSED_STRING","'label_altered'",1593],",",["T_WHITESPACE"," ",1593],["T_STRING","TRUE",1593],")",";",["T_WHITESPACE","\n  ",1593],"}",["T_WHITESPACE","\n",1594],"}",["T_WHITESPACE","\n\n",1595],["T_DOC_COMMENT","\/**\n * Acts on a particular type of entity object about to be in an entity form.\n *\n * This can be typically used to pre-fill entity values or change the form state\n * before the entity form is built. It is invoked just once when first building\n * the entity form. Rebuilds will not trigger a new invocation.\n *\n * @param \\Drupal\\Core\\Entity\\EntityInterface $entity\n *   The entity that is about to be shown on the form.\n * @param $operation\n *   The current operation.\n * @param \\Drupal\\Core\\Form\\FormStateInterface $form_state\n *   The current state of the form.\n *\n * @see \\Drupal\\Core\\Entity\\EntityForm::prepareEntity()\n * @see hook_entity_prepare_form()\n *\n * @ingroup entity_crud\n *\/",1597],["T_WHITESPACE","\n",1615],["T_FUNCTION","function",1616],["T_WHITESPACE"," ",1616],["T_STRING","hook_ENTITY_TYPE_prepare_form",1616],"(",["T_NS_SEPARATOR","\\",1616],["T_STRING","Drupal",1616],["T_NS_SEPARATOR","\\",1616],["T_STRING","Core",1616],["T_NS_SEPARATOR","\\",1616],["T_STRING","Entity",1616],["T_NS_SEPARATOR","\\",1616],["T_STRING","EntityInterface",1616],["T_WHITESPACE"," ",1616],["T_VARIABLE","$entity",1616],",",["T_WHITESPACE"," ",1616],["T_VARIABLE","$operation",1616],",",["T_WHITESPACE"," ",1616],["T_NS_SEPARATOR","\\",1616],["T_STRING","Drupal",1616],["T_NS_SEPARATOR","\\",1616],["T_STRING","Core",1616],["T_NS_SEPARATOR","\\",1616],["T_STRING","Form",1616],["T_NS_SEPARATOR","\\",1616],["T_STRING","FormStateInterface",1616],["T_WHITESPACE"," ",1616],["T_VARIABLE","$form_state",1616],")",["T_WHITESPACE"," ",1616],"{",["T_WHITESPACE","\n  ",1616],["T_IF","if",1617],["T_WHITESPACE"," ",1617],"(",["T_VARIABLE","$operation",1617],["T_WHITESPACE"," ",1617],["T_IS_EQUAL","==",1617],["T_WHITESPACE"," ",1617],["T_CONSTANT_ENCAPSED_STRING","'edit'",1617],")",["T_WHITESPACE"," ",1617],"{",["T_WHITESPACE","\n    ",1617],["T_VARIABLE","$entity",1618],["T_OBJECT_OPERATOR","->",1618],["T_STRING","label",1618],["T_OBJECT_OPERATOR","->",1618],["T_STRING","value",1618],["T_WHITESPACE"," ",1618],"=",["T_WHITESPACE"," ",1618],["T_CONSTANT_ENCAPSED_STRING","'Altered label'",1618],";",["T_WHITESPACE","\n    ",1618],["T_VARIABLE","$form_state",1619],["T_OBJECT_OPERATOR","->",1619],["T_STRING","set",1619],"(",["T_CONSTANT_ENCAPSED_STRING","'label_altered'",1619],",",["T_WHITESPACE"," ",1619],["T_STRING","TRUE",1619],")",";",["T_WHITESPACE","\n  ",1619],"}",["T_WHITESPACE","\n",1620],"}",["T_WHITESPACE","\n\n",1621],["T_DOC_COMMENT","\/**\n * Alter the settings used for displaying an entity form.\n *\n * @param \\Drupal\\Core\\Entity\\Display\\EntityFormDisplayInterface $form_display\n *   The entity_form_display object that will be used to display the entity form\n *   components.\n * @param array $context\n *   An associative array containing:\n *   - entity_type: The entity type, e.g., 'node' or 'user'.\n *   - bundle: The bundle, e.g., 'page' or 'article'.\n *   - form_mode: The form mode; e.g., 'default', 'profile', 'register', etc.\n *\n * @ingroup entity_crud\n *\/",1623],["T_WHITESPACE","\n",1636],["T_FUNCTION","function",1637],["T_WHITESPACE"," ",1637],["T_STRING","hook_entity_form_display_alter",1637],"(",["T_NS_SEPARATOR","\\",1637],["T_STRING","Drupal",1637],["T_NS_SEPARATOR","\\",1637],["T_STRING","Core",1637],["T_NS_SEPARATOR","\\",1637],["T_STRING","Entity",1637],["T_NS_SEPARATOR","\\",1637],["T_STRING","Display",1637],["T_NS_SEPARATOR","\\",1637],["T_STRING","EntityFormDisplayInterface",1637],["T_WHITESPACE"," ",1637],["T_VARIABLE","$form_display",1637],",",["T_WHITESPACE"," ",1637],["T_ARRAY","array",1637],["T_WHITESPACE"," ",1637],["T_VARIABLE","$context",1637],")",["T_WHITESPACE"," ",1637],"{",["T_WHITESPACE","\n  ",1637],["T_COMMENT","\/\/ Hide the 'user_picture' field from the register form.\n",1638],["T_WHITESPACE","  ",1639],["T_IF","if",1639],["T_WHITESPACE"," ",1639],"(",["T_VARIABLE","$context",1639],"[",["T_CONSTANT_ENCAPSED_STRING","'entity_type'",1639],"]",["T_WHITESPACE"," ",1639],["T_IS_EQUAL","==",1639],["T_WHITESPACE"," ",1639],["T_CONSTANT_ENCAPSED_STRING","'user'",1639],["T_WHITESPACE"," ",1639],["T_BOOLEAN_AND","&&",1639],["T_WHITESPACE"," ",1639],["T_VARIABLE","$context",1639],"[",["T_CONSTANT_ENCAPSED_STRING","'form_mode'",1639],"]",["T_WHITESPACE"," ",1639],["T_IS_EQUAL","==",1639],["T_WHITESPACE"," ",1639],["T_CONSTANT_ENCAPSED_STRING","'register'",1639],")",["T_WHITESPACE"," ",1639],"{",["T_WHITESPACE","\n    ",1639],["T_VARIABLE","$form_display",1640],["T_OBJECT_OPERATOR","->",1640],["T_STRING","setComponent",1640],"(",["T_CONSTANT_ENCAPSED_STRING","'user_picture'",1640],",",["T_WHITESPACE"," ",1640],["T_ARRAY","array",1640],"(",["T_WHITESPACE","\n      ",1640],["T_CONSTANT_ENCAPSED_STRING","'type'",1641],["T_WHITESPACE"," ",1641],["T_DOUBLE_ARROW","=>",1641],["T_WHITESPACE"," ",1641],["T_CONSTANT_ENCAPSED_STRING","'hidden'",1641],",",["T_WHITESPACE","\n    ",1641],")",")",";",["T_WHITESPACE","\n  ",1642],"}",["T_WHITESPACE","\n",1643],"}",["T_WHITESPACE","\n\n",1644],["T_DOC_COMMENT","\/**\n * Provides custom base field definitions for a content entity type.\n *\n * @param \\Drupal\\Core\\Entity\\EntityTypeInterface $entity_type\n *   The entity type definition.\n *\n * @return \\Drupal\\Core\\Field\\FieldDefinitionInterface[]\n *   An array of field definitions, keyed by field name.\n *\n * @see hook_entity_base_field_info_alter()\n * @see hook_entity_bundle_field_info()\n * @see hook_entity_bundle_field_info_alter()\n * @see \\Drupal\\Core\\Field\\FieldDefinitionInterface\n * @see \\Drupal\\Core\\Entity\\EntityManagerInterface::getFieldDefinitions()\n *\/",1646],["T_WHITESPACE","\n",1660],["T_FUNCTION","function",1661],["T_WHITESPACE"," ",1661],["T_STRING","hook_entity_base_field_info",1661],"(",["T_NS_SEPARATOR","\\",1661],["T_STRING","Drupal",1661],["T_NS_SEPARATOR","\\",1661],["T_STRING","Core",1661],["T_NS_SEPARATOR","\\",1661],["T_STRING","Entity",1661],["T_NS_SEPARATOR","\\",1661],["T_STRING","EntityTypeInterface",1661],["T_WHITESPACE"," ",1661],["T_VARIABLE","$entity_type",1661],")",["T_WHITESPACE"," ",1661],"{",["T_WHITESPACE","\n  ",1661],["T_IF","if",1662],["T_WHITESPACE"," ",1662],"(",["T_VARIABLE","$entity_type",1662],["T_OBJECT_OPERATOR","->",1662],["T_STRING","id",1662],"(",")",["T_WHITESPACE"," ",1662],["T_IS_EQUAL","==",1662],["T_WHITESPACE"," ",1662],["T_CONSTANT_ENCAPSED_STRING","'node'",1662],")",["T_WHITESPACE"," ",1662],"{",["T_WHITESPACE","\n    ",1662],["T_VARIABLE","$fields",1663],["T_WHITESPACE"," ",1663],"=",["T_WHITESPACE"," ",1663],["T_ARRAY","array",1663],"(",")",";",["T_WHITESPACE","\n    ",1663],["T_VARIABLE","$fields",1664],"[",["T_CONSTANT_ENCAPSED_STRING","'mymodule_text'",1664],"]",["T_WHITESPACE"," ",1664],"=",["T_WHITESPACE"," ",1664],["T_STRING","BaseFieldDefinition",1664],["T_DOUBLE_COLON","::",1664],["T_STRING","create",1664],"(",["T_CONSTANT_ENCAPSED_STRING","'string'",1664],")",["T_WHITESPACE","\n      ",1664],["T_OBJECT_OPERATOR","->",1665],["T_STRING","setLabel",1665],"(",["T_STRING","t",1665],"(",["T_CONSTANT_ENCAPSED_STRING","'The text'",1665],")",")",["T_WHITESPACE","\n      ",1665],["T_OBJECT_OPERATOR","->",1666],["T_STRING","setDescription",1666],"(",["T_STRING","t",1666],"(",["T_CONSTANT_ENCAPSED_STRING","'A text property added by mymodule.'",1666],")",")",["T_WHITESPACE","\n      ",1666],["T_OBJECT_OPERATOR","->",1667],["T_STRING","setComputed",1667],"(",["T_STRING","TRUE",1667],")",["T_WHITESPACE","\n      ",1667],["T_OBJECT_OPERATOR","->",1668],["T_STRING","setClass",1668],"(",["T_CONSTANT_ENCAPSED_STRING","'\\Drupal\\mymodule\\EntityComputedText'",1668],")",";",["T_WHITESPACE","\n\n    ",1668],["T_RETURN","return",1670],["T_WHITESPACE"," ",1670],["T_VARIABLE","$fields",1670],";",["T_WHITESPACE","\n  ",1670],"}",["T_WHITESPACE","\n",1671],"}",["T_WHITESPACE","\n\n",1672],["T_DOC_COMMENT","\/**\n * Alter base field definitions for a content entity type.\n *\n * @param \\Drupal\\Core\\Field\\FieldDefinitionInterface[] $fields\n *   The array of base field definitions for the entity type.\n * @param \\Drupal\\Core\\Entity\\EntityTypeInterface $entity_type\n *   The entity type definition.\n *\n * @see hook_entity_base_field_info()\n * @see hook_entity_bundle_field_info()\n * @see hook_entity_bundle_field_info_alter()\n *\n * @todo WARNING: This hook will be changed in\n * https:\/\/www.drupal.org\/node\/2346329.\n *\/",1674],["T_WHITESPACE","\n",1688],["T_FUNCTION","function",1689],["T_WHITESPACE"," ",1689],["T_STRING","hook_entity_base_field_info_alter",1689],"(","&",["T_VARIABLE","$fields",1689],",",["T_WHITESPACE"," ",1689],["T_NS_SEPARATOR","\\",1689],["T_STRING","Drupal",1689],["T_NS_SEPARATOR","\\",1689],["T_STRING","Core",1689],["T_NS_SEPARATOR","\\",1689],["T_STRING","Entity",1689],["T_NS_SEPARATOR","\\",1689],["T_STRING","EntityTypeInterface",1689],["T_WHITESPACE"," ",1689],["T_VARIABLE","$entity_type",1689],")",["T_WHITESPACE"," ",1689],"{",["T_WHITESPACE","\n  ",1689],["T_COMMENT","\/\/ Alter the mymodule_text field to use a custom class.\n",1690],["T_WHITESPACE","  ",1691],["T_IF","if",1691],["T_WHITESPACE"," ",1691],"(",["T_VARIABLE","$entity_type",1691],["T_OBJECT_OPERATOR","->",1691],["T_STRING","id",1691],"(",")",["T_WHITESPACE"," ",1691],["T_IS_EQUAL","==",1691],["T_WHITESPACE"," ",1691],["T_CONSTANT_ENCAPSED_STRING","'node'",1691],["T_WHITESPACE"," ",1691],["T_BOOLEAN_AND","&&",1691],["T_WHITESPACE"," ",1691],"!",["T_EMPTY","empty",1691],"(",["T_VARIABLE","$fields",1691],"[",["T_CONSTANT_ENCAPSED_STRING","'mymodule_text'",1691],"]",")",")",["T_WHITESPACE"," ",1691],"{",["T_WHITESPACE","\n    ",1691],["T_VARIABLE","$fields",1692],"[",["T_CONSTANT_ENCAPSED_STRING","'mymodule_text'",1692],"]",["T_OBJECT_OPERATOR","->",1692],["T_STRING","setClass",1692],"(",["T_CONSTANT_ENCAPSED_STRING","'\\Drupal\\anothermodule\\EntityComputedText'",1692],")",";",["T_WHITESPACE","\n  ",1692],"}",["T_WHITESPACE","\n",1693],"}",["T_WHITESPACE","\n\n",1694],["T_DOC_COMMENT","\/**\n * Provides field definitions for a specific bundle within an entity type.\n *\n * Bundle fields either have to override an existing base field, or need to\n * provide a field storage definition via hook_entity_field_storage_info()\n * unless they are computed.\n *\n * @param \\Drupal\\Core\\Entity\\EntityTypeInterface $entity_type\n *   The entity type definition.\n * @param string $bundle\n *   The bundle.\n * @param \\Drupal\\Core\\Field\\FieldDefinitionInterface[] $base_field_definitions\n *   The list of base field definitions for the entity type.\n *\n * @return \\Drupal\\Core\\Field\\FieldDefinitionInterface[]\n *   An array of bundle field definitions, keyed by field name.\n *\n * @see hook_entity_base_field_info()\n * @see hook_entity_base_field_info_alter()\n * @see hook_entity_field_storage_info()\n * @see hook_entity_field_storage_info_alter()\n * @see hook_entity_bundle_field_info_alter()\n * @see \\Drupal\\Core\\Field\\FieldDefinitionInterface\n * @see \\Drupal\\Core\\Entity\\EntityManagerInterface::getFieldDefinitions()\n *\n * @todo WARNING: This hook will be changed in\n * https:\/\/www.drupal.org\/node\/2346347.\n *\/",1696],["T_WHITESPACE","\n",1723],["T_FUNCTION","function",1724],["T_WHITESPACE"," ",1724],["T_STRING","hook_entity_bundle_field_info",1724],"(",["T_NS_SEPARATOR","\\",1724],["T_STRING","Drupal",1724],["T_NS_SEPARATOR","\\",1724],["T_STRING","Core",1724],["T_NS_SEPARATOR","\\",1724],["T_STRING","Entity",1724],["T_NS_SEPARATOR","\\",1724],["T_STRING","EntityTypeInterface",1724],["T_WHITESPACE"," ",1724],["T_VARIABLE","$entity_type",1724],",",["T_WHITESPACE"," ",1724],["T_VARIABLE","$bundle",1724],",",["T_WHITESPACE"," ",1724],["T_ARRAY","array",1724],["T_WHITESPACE"," ",1724],["T_VARIABLE","$base_field_definitions",1724],")",["T_WHITESPACE"," ",1724],"{",["T_WHITESPACE","\n  ",1724],["T_COMMENT","\/\/ Add a property only to nodes of the 'article' bundle.\n",1725],["T_WHITESPACE","  ",1726],["T_IF","if",1726],["T_WHITESPACE"," ",1726],"(",["T_VARIABLE","$entity_type",1726],["T_OBJECT_OPERATOR","->",1726],["T_STRING","id",1726],"(",")",["T_WHITESPACE"," ",1726],["T_IS_EQUAL","==",1726],["T_WHITESPACE"," ",1726],["T_CONSTANT_ENCAPSED_STRING","'node'",1726],["T_WHITESPACE"," ",1726],["T_BOOLEAN_AND","&&",1726],["T_WHITESPACE"," ",1726],["T_VARIABLE","$bundle",1726],["T_WHITESPACE"," ",1726],["T_IS_EQUAL","==",1726],["T_WHITESPACE"," ",1726],["T_CONSTANT_ENCAPSED_STRING","'article'",1726],")",["T_WHITESPACE"," ",1726],"{",["T_WHITESPACE","\n    ",1726],["T_VARIABLE","$fields",1727],["T_WHITESPACE"," ",1727],"=",["T_WHITESPACE"," ",1727],["T_ARRAY","array",1727],"(",")",";",["T_WHITESPACE","\n    ",1727],["T_VARIABLE","$fields",1728],"[",["T_CONSTANT_ENCAPSED_STRING","'mymodule_text_more'",1728],"]",["T_WHITESPACE"," ",1728],"=",["T_WHITESPACE"," ",1728],["T_STRING","BaseFieldDefinition",1728],["T_DOUBLE_COLON","::",1728],["T_STRING","create",1728],"(",["T_CONSTANT_ENCAPSED_STRING","'string'",1728],")",["T_WHITESPACE","\n        ",1728],["T_OBJECT_OPERATOR","->",1729],["T_STRING","setLabel",1729],"(",["T_STRING","t",1729],"(",["T_CONSTANT_ENCAPSED_STRING","'More text'",1729],")",")",["T_WHITESPACE","\n        ",1729],["T_OBJECT_OPERATOR","->",1730],["T_STRING","setComputed",1730],"(",["T_STRING","TRUE",1730],")",["T_WHITESPACE","\n        ",1730],["T_OBJECT_OPERATOR","->",1731],["T_STRING","setClass",1731],"(",["T_CONSTANT_ENCAPSED_STRING","'\\Drupal\\mymodule\\EntityComputedMoreText'",1731],")",";",["T_WHITESPACE","\n    ",1731],["T_RETURN","return",1732],["T_WHITESPACE"," ",1732],["T_VARIABLE","$fields",1732],";",["T_WHITESPACE","\n  ",1732],"}",["T_WHITESPACE","\n",1733],"}",["T_WHITESPACE","\n\n",1734],["T_DOC_COMMENT","\/**\n * Alter bundle field definitions.\n *\n * @param \\Drupal\\Core\\Field\\FieldDefinitionInterface[] $fields\n *   The array of bundle field definitions.\n * @param \\Drupal\\Core\\Entity\\EntityTypeInterface $entity_type\n *   The entity type definition.\n * @param string $bundle\n *   The bundle.\n *\n * @see hook_entity_base_field_info()\n * @see hook_entity_base_field_info_alter()\n * @see hook_entity_bundle_field_info()\n *\n * @todo WARNING: This hook will be changed in\n * https:\/\/www.drupal.org\/node\/2346347.\n *\/",1736],["T_WHITESPACE","\n",1752],["T_FUNCTION","function",1753],["T_WHITESPACE"," ",1753],["T_STRING","hook_entity_bundle_field_info_alter",1753],"(","&",["T_VARIABLE","$fields",1753],",",["T_WHITESPACE"," ",1753],["T_NS_SEPARATOR","\\",1753],["T_STRING","Drupal",1753],["T_NS_SEPARATOR","\\",1753],["T_STRING","Core",1753],["T_NS_SEPARATOR","\\",1753],["T_STRING","Entity",1753],["T_NS_SEPARATOR","\\",1753],["T_STRING","EntityTypeInterface",1753],["T_WHITESPACE"," ",1753],["T_VARIABLE","$entity_type",1753],",",["T_WHITESPACE"," ",1753],["T_VARIABLE","$bundle",1753],")",["T_WHITESPACE"," ",1753],"{",["T_WHITESPACE","\n  ",1753],["T_IF","if",1754],["T_WHITESPACE"," ",1754],"(",["T_VARIABLE","$entity_type",1754],["T_OBJECT_OPERATOR","->",1754],["T_STRING","id",1754],"(",")",["T_WHITESPACE"," ",1754],["T_IS_EQUAL","==",1754],["T_WHITESPACE"," ",1754],["T_CONSTANT_ENCAPSED_STRING","'node'",1754],["T_WHITESPACE"," ",1754],["T_BOOLEAN_AND","&&",1754],["T_WHITESPACE"," ",1754],["T_VARIABLE","$bundle",1754],["T_WHITESPACE"," ",1754],["T_IS_EQUAL","==",1754],["T_WHITESPACE"," ",1754],["T_CONSTANT_ENCAPSED_STRING","'article'",1754],["T_WHITESPACE"," ",1754],["T_BOOLEAN_AND","&&",1754],["T_WHITESPACE"," ",1754],"!",["T_EMPTY","empty",1754],"(",["T_VARIABLE","$fields",1754],"[",["T_CONSTANT_ENCAPSED_STRING","'mymodule_text'",1754],"]",")",")",["T_WHITESPACE"," ",1754],"{",["T_WHITESPACE","\n    ",1754],["T_COMMENT","\/\/ Alter the mymodule_text field to use a custom class.\n",1755],["T_WHITESPACE","    ",1756],["T_VARIABLE","$fields",1756],"[",["T_CONSTANT_ENCAPSED_STRING","'mymodule_text'",1756],"]",["T_OBJECT_OPERATOR","->",1756],["T_STRING","setClass",1756],"(",["T_CONSTANT_ENCAPSED_STRING","'\\Drupal\\anothermodule\\EntityComputedText'",1756],")",";",["T_WHITESPACE","\n  ",1756],"}",["T_WHITESPACE","\n",1757],"}",["T_WHITESPACE","\n\n",1758],["T_DOC_COMMENT","\/**\n * Provides field storage definitions for a content entity type.\n *\n * @param \\Drupal\\Core\\Entity\\EntityTypeInterface $entity_type\n *   The entity type definition.\n *\n * @return \\Drupal\\Core\\Field\\FieldStorageDefinitionInterface[]\n *   An array of field storage definitions, keyed by field name.\n *\n * @see hook_entity_field_storage_info_alter()\n * @see \\Drupal\\Core\\Field\\FieldStorageDefinitionInterface\n * @see \\Drupal\\Core\\Entity\\EntityManagerInterface::getFieldStorageDefinitions()\n *\/",1760],["T_WHITESPACE","\n",1772],["T_FUNCTION","function",1773],["T_WHITESPACE"," ",1773],["T_STRING","hook_entity_field_storage_info",1773],"(",["T_NS_SEPARATOR","\\",1773],["T_STRING","Drupal",1773],["T_NS_SEPARATOR","\\",1773],["T_STRING","Core",1773],["T_NS_SEPARATOR","\\",1773],["T_STRING","Entity",1773],["T_NS_SEPARATOR","\\",1773],["T_STRING","EntityTypeInterface",1773],["T_WHITESPACE"," ",1773],["T_VARIABLE","$entity_type",1773],")",["T_WHITESPACE"," ",1773],"{",["T_WHITESPACE","\n  ",1773],["T_IF","if",1774],["T_WHITESPACE"," ",1774],"(",["T_NS_SEPARATOR","\\",1774],["T_STRING","Drupal",1774],["T_DOUBLE_COLON","::",1774],["T_STRING","entityManager",1774],"(",")",["T_OBJECT_OPERATOR","->",1774],["T_STRING","getStorage",1774],"(",["T_VARIABLE","$entity_type",1774],["T_OBJECT_OPERATOR","->",1774],["T_STRING","id",1774],"(",")",")",["T_WHITESPACE"," ",1774],["T_INSTANCEOF","instanceof",1774],["T_WHITESPACE"," ",1774],["T_STRING","DynamicallyFieldableEntityStorageInterface",1774],")",["T_WHITESPACE"," ",1774],"{",["T_WHITESPACE","\n    ",1774],["T_COMMENT","\/\/ Query by filtering on the ID as this is more efficient than filtering\n",1775],["T_WHITESPACE","    ",1776],["T_COMMENT","\/\/ on the entity_type property directly.\n",1776],["T_WHITESPACE","    ",1777],["T_VARIABLE","$ids",1777],["T_WHITESPACE"," ",1777],"=",["T_WHITESPACE"," ",1777],["T_NS_SEPARATOR","\\",1777],["T_STRING","Drupal",1777],["T_DOUBLE_COLON","::",1777],["T_STRING","entityQuery",1777],"(",["T_CONSTANT_ENCAPSED_STRING","'field_storage_config'",1777],")",["T_WHITESPACE","\n      ",1777],["T_OBJECT_OPERATOR","->",1778],["T_STRING","condition",1778],"(",["T_CONSTANT_ENCAPSED_STRING","'id'",1778],",",["T_WHITESPACE"," ",1778],["T_VARIABLE","$entity_type",1778],["T_OBJECT_OPERATOR","->",1778],["T_STRING","id",1778],"(",")",["T_WHITESPACE"," ",1778],".",["T_WHITESPACE"," ",1778],["T_CONSTANT_ENCAPSED_STRING","'.'",1778],",",["T_WHITESPACE"," ",1778],["T_CONSTANT_ENCAPSED_STRING","'STARTS_WITH'",1778],")",["T_WHITESPACE","\n      ",1778],["T_OBJECT_OPERATOR","->",1779],["T_STRING","execute",1779],"(",")",";",["T_WHITESPACE","\n    ",1779],["T_COMMENT","\/\/ Fetch all fields and key them by field name.\n",1780],["T_WHITESPACE","    ",1781],["T_VARIABLE","$field_storages",1781],["T_WHITESPACE"," ",1781],"=",["T_WHITESPACE"," ",1781],["T_STRING","FieldStorageConfig",1781],["T_DOUBLE_COLON","::",1781],["T_STRING","loadMultiple",1781],"(",["T_VARIABLE","$ids",1781],")",";",["T_WHITESPACE","\n    ",1781],["T_VARIABLE","$result",1782],["T_WHITESPACE"," ",1782],"=",["T_WHITESPACE"," ",1782],["T_ARRAY","array",1782],"(",")",";",["T_WHITESPACE","\n    ",1782],["T_FOREACH","foreach",1783],["T_WHITESPACE"," ",1783],"(",["T_VARIABLE","$field_storages",1783],["T_WHITESPACE"," ",1783],["T_AS","as",1783],["T_WHITESPACE"," ",1783],["T_VARIABLE","$field_storage",1783],")",["T_WHITESPACE"," ",1783],"{",["T_WHITESPACE","\n      ",1783],["T_VARIABLE","$result",1784],"[",["T_VARIABLE","$field_storage",1784],["T_OBJECT_OPERATOR","->",1784],["T_STRING","getName",1784],"(",")","]",["T_WHITESPACE"," ",1784],"=",["T_WHITESPACE"," ",1784],["T_VARIABLE","$field_storage",1784],";",["T_WHITESPACE","\n    ",1784],"}",["T_WHITESPACE","\n\n    ",1785],["T_RETURN","return",1787],["T_WHITESPACE"," ",1787],["T_VARIABLE","$result",1787],";",["T_WHITESPACE","\n  ",1787],"}",["T_WHITESPACE","\n",1788],"}",["T_WHITESPACE","\n\n",1789],["T_DOC_COMMENT","\/**\n * Alter field storage definitions for a content entity type.\n *\n * @param \\Drupal\\Core\\Field\\FieldStorageDefinitionInterface[] $fields\n *   The array of field storage definitions for the entity type.\n * @param \\Drupal\\Core\\Entity\\EntityTypeInterface $entity_type\n *   The entity type definition.\n *\n * @see hook_entity_field_storage_info()\n *\/",1791],["T_WHITESPACE","\n",1800],["T_FUNCTION","function",1801],["T_WHITESPACE"," ",1801],["T_STRING","hook_entity_field_storage_info_alter",1801],"(","&",["T_VARIABLE","$fields",1801],",",["T_WHITESPACE"," ",1801],["T_NS_SEPARATOR","\\",1801],["T_STRING","Drupal",1801],["T_NS_SEPARATOR","\\",1801],["T_STRING","Core",1801],["T_NS_SEPARATOR","\\",1801],["T_STRING","Entity",1801],["T_NS_SEPARATOR","\\",1801],["T_STRING","EntityTypeInterface",1801],["T_WHITESPACE"," ",1801],["T_VARIABLE","$entity_type",1801],")",["T_WHITESPACE"," ",1801],"{",["T_WHITESPACE","\n  ",1801],["T_COMMENT","\/\/ Alter the max_length setting.\n",1802],["T_WHITESPACE","  ",1803],["T_IF","if",1803],["T_WHITESPACE"," ",1803],"(",["T_VARIABLE","$entity_type",1803],["T_OBJECT_OPERATOR","->",1803],["T_STRING","id",1803],"(",")",["T_WHITESPACE"," ",1803],["T_IS_EQUAL","==",1803],["T_WHITESPACE"," ",1803],["T_CONSTANT_ENCAPSED_STRING","'node'",1803],["T_WHITESPACE"," ",1803],["T_BOOLEAN_AND","&&",1803],["T_WHITESPACE"," ",1803],"!",["T_EMPTY","empty",1803],"(",["T_VARIABLE","$fields",1803],"[",["T_CONSTANT_ENCAPSED_STRING","'mymodule_text'",1803],"]",")",")",["T_WHITESPACE"," ",1803],"{",["T_WHITESPACE","\n    ",1803],["T_VARIABLE","$fields",1804],"[",["T_CONSTANT_ENCAPSED_STRING","'mymodule_text'",1804],"]",["T_OBJECT_OPERATOR","->",1804],["T_STRING","setSetting",1804],"(",["T_CONSTANT_ENCAPSED_STRING","'max_length'",1804],",",["T_WHITESPACE"," ",1804],["T_LNUMBER","128",1804],")",";",["T_WHITESPACE","\n  ",1804],"}",["T_WHITESPACE","\n",1805],"}",["T_WHITESPACE","\n\n",1806],["T_DOC_COMMENT","\/**\n * Declares entity operations.\n *\n * @param \\Drupal\\Core\\Entity\\EntityInterface $entity\n *   The entity on which the linked operations will be performed.\n *\n * @return array\n *   An operations array as returned by\n *   EntityListBuilderInterface::getOperations().\n *\n * @see \\Drupal\\Core\\Entity\\EntityListBuilderInterface::getOperations()\n *\/",1808],["T_WHITESPACE","\n",1819],["T_FUNCTION","function",1820],["T_WHITESPACE"," ",1820],["T_STRING","hook_entity_operation",1820],"(",["T_NS_SEPARATOR","\\",1820],["T_STRING","Drupal",1820],["T_NS_SEPARATOR","\\",1820],["T_STRING","Core",1820],["T_NS_SEPARATOR","\\",1820],["T_STRING","Entity",1820],["T_NS_SEPARATOR","\\",1820],["T_STRING","EntityInterface",1820],["T_WHITESPACE"," ",1820],["T_VARIABLE","$entity",1820],")",["T_WHITESPACE"," ",1820],"{",["T_WHITESPACE","\n  ",1820],["T_VARIABLE","$operations",1821],["T_WHITESPACE"," ",1821],"=",["T_WHITESPACE"," ",1821],["T_ARRAY","array",1821],"(",")",";",["T_WHITESPACE","\n  ",1821],["T_VARIABLE","$operations",1822],"[",["T_CONSTANT_ENCAPSED_STRING","'translate'",1822],"]",["T_WHITESPACE"," ",1822],"=",["T_WHITESPACE"," ",1822],["T_ARRAY","array",1822],"(",["T_WHITESPACE","\n    ",1822],["T_CONSTANT_ENCAPSED_STRING","'title'",1823],["T_WHITESPACE"," ",1823],["T_DOUBLE_ARROW","=>",1823],["T_WHITESPACE"," ",1823],["T_STRING","t",1823],"(",["T_CONSTANT_ENCAPSED_STRING","'Translate'",1823],")",",",["T_WHITESPACE","\n    ",1823],["T_CONSTANT_ENCAPSED_STRING","'url'",1824],["T_WHITESPACE"," ",1824],["T_DOUBLE_ARROW","=>",1824],["T_WHITESPACE"," ",1824],["T_NS_SEPARATOR","\\",1824],["T_STRING","Drupal",1824],["T_NS_SEPARATOR","\\",1824],["T_STRING","Core",1824],["T_NS_SEPARATOR","\\",1824],["T_STRING","Url",1824],["T_DOUBLE_COLON","::",1824],["T_STRING","fromRoute",1824],"(",["T_CONSTANT_ENCAPSED_STRING","'foo_module.entity.translate'",1824],")",",",["T_WHITESPACE","\n    ",1824],["T_CONSTANT_ENCAPSED_STRING","'weight'",1825],["T_WHITESPACE"," ",1825],["T_DOUBLE_ARROW","=>",1825],["T_WHITESPACE"," ",1825],["T_LNUMBER","50",1825],",",["T_WHITESPACE","\n  ",1825],")",";",["T_WHITESPACE","\n\n  ",1826],["T_RETURN","return",1828],["T_WHITESPACE"," ",1828],["T_VARIABLE","$operations",1828],";",["T_WHITESPACE","\n",1828],"}",["T_WHITESPACE","\n\n",1829],["T_DOC_COMMENT","\/**\n * Alter entity operations.\n *\n * @param array $operations\n *   Operations array as returned by\n *   \\Drupal\\Core\\Entity\\EntityListBuilderInterface::getOperations().\n * @param \\Drupal\\Core\\Entity\\EntityInterface $entity\n *   The entity on which the linked operations will be performed.\n *\/",1831],["T_WHITESPACE","\n",1839],["T_FUNCTION","function",1840],["T_WHITESPACE"," ",1840],["T_STRING","hook_entity_operation_alter",1840],"(",["T_ARRAY","array",1840],["T_WHITESPACE"," ",1840],"&",["T_VARIABLE","$operations",1840],",",["T_WHITESPACE"," ",1840],["T_NS_SEPARATOR","\\",1840],["T_STRING","Drupal",1840],["T_NS_SEPARATOR","\\",1840],["T_STRING","Core",1840],["T_NS_SEPARATOR","\\",1840],["T_STRING","Entity",1840],["T_NS_SEPARATOR","\\",1840],["T_STRING","EntityInterface",1840],["T_WHITESPACE"," ",1840],["T_VARIABLE","$entity",1840],")",["T_WHITESPACE"," ",1840],"{",["T_WHITESPACE","\n  ",1840],["T_COMMENT","\/\/ Alter the title and weight.\n",1841],["T_WHITESPACE","  ",1842],["T_VARIABLE","$operations",1842],"[",["T_CONSTANT_ENCAPSED_STRING","'translate'",1842],"]","[",["T_CONSTANT_ENCAPSED_STRING","'title'",1842],"]",["T_WHITESPACE"," ",1842],"=",["T_WHITESPACE"," ",1842],["T_STRING","t",1842],"(",["T_CONSTANT_ENCAPSED_STRING","'Translate @entity_type'",1842],",",["T_WHITESPACE"," ",1842],["T_ARRAY","array",1842],"(",["T_WHITESPACE","\n    ",1842],["T_CONSTANT_ENCAPSED_STRING","'@entity_type'",1843],["T_WHITESPACE"," ",1843],["T_DOUBLE_ARROW","=>",1843],["T_WHITESPACE"," ",1843],["T_VARIABLE","$entity",1843],["T_OBJECT_OPERATOR","->",1843],["T_STRING","getEntityTypeId",1843],"(",")",",",["T_WHITESPACE","\n  ",1843],")",")",";",["T_WHITESPACE","\n  ",1844],["T_VARIABLE","$operations",1845],"[",["T_CONSTANT_ENCAPSED_STRING","'translate'",1845],"]","[",["T_CONSTANT_ENCAPSED_STRING","'weight'",1845],"]",["T_WHITESPACE"," ",1845],"=",["T_WHITESPACE"," ",1845],["T_LNUMBER","99",1845],";",["T_WHITESPACE","\n",1845],"}",["T_WHITESPACE","\n\n",1846],["T_DOC_COMMENT","\/**\n * Control access to fields.\n *\n * This hook is invoked from\n * \\Drupal\\Core\\Entity\\EntityAccessControlHandler::fieldAccess() to let modules\n * grant or deny operations on fields.\n *\n * @param string $operation\n *   The operation to be performed. See\n *   \\Drupal\\Core\\Entity\\EntityAccessControlHandlerInterface::fieldAccess()\n *   for possible values.\n * @param \\Drupal\\Core\\Field\\FieldDefinitionInterface $field_definition\n *   The field definition.\n * @param \\Drupal\\Core\\Session\\AccountInterface $account\n *   The user account to check.\n * @param \\Drupal\\Core\\Field\\FieldItemListInterface $items\n *   (optional) The entity field object on which the operation is to be\n *   performed.\n *\n * @return \\Drupal\\Core\\Access\\AccessResultInterface\n *   The access result.\n *\n * @see \\Drupal\\Core\\Entity\\EntityAccessControlHandlerInterface::fieldAccess()\n *\/",1848],["T_WHITESPACE","\n",1871],["T_FUNCTION","function",1872],["T_WHITESPACE"," ",1872],["T_STRING","hook_entity_field_access",1872],"(",["T_VARIABLE","$operation",1872],",",["T_WHITESPACE"," ",1872],["T_NS_SEPARATOR","\\",1872],["T_STRING","Drupal",1872],["T_NS_SEPARATOR","\\",1872],["T_STRING","Core",1872],["T_NS_SEPARATOR","\\",1872],["T_STRING","Field",1872],["T_NS_SEPARATOR","\\",1872],["T_STRING","FieldDefinitionInterface",1872],["T_WHITESPACE"," ",1872],["T_VARIABLE","$field_definition",1872],",",["T_WHITESPACE"," ",1872],["T_NS_SEPARATOR","\\",1872],["T_STRING","Drupal",1872],["T_NS_SEPARATOR","\\",1872],["T_STRING","Core",1872],["T_NS_SEPARATOR","\\",1872],["T_STRING","Session",1872],["T_NS_SEPARATOR","\\",1872],["T_STRING","AccountInterface",1872],["T_WHITESPACE"," ",1872],["T_VARIABLE","$account",1872],",",["T_WHITESPACE"," ",1872],["T_NS_SEPARATOR","\\",1872],["T_STRING","Drupal",1872],["T_NS_SEPARATOR","\\",1872],["T_STRING","Core",1872],["T_NS_SEPARATOR","\\",1872],["T_STRING","Field",1872],["T_NS_SEPARATOR","\\",1872],["T_STRING","FieldItemListInterface",1872],["T_WHITESPACE"," ",1872],["T_VARIABLE","$items",1872],["T_WHITESPACE"," ",1872],"=",["T_WHITESPACE"," ",1872],["T_STRING","NULL",1872],")",["T_WHITESPACE"," ",1872],"{",["T_WHITESPACE","\n  ",1872],["T_IF","if",1873],["T_WHITESPACE"," ",1873],"(",["T_VARIABLE","$field_definition",1873],["T_OBJECT_OPERATOR","->",1873],["T_STRING","getName",1873],"(",")",["T_WHITESPACE"," ",1873],["T_IS_EQUAL","==",1873],["T_WHITESPACE"," ",1873],["T_CONSTANT_ENCAPSED_STRING","'field_of_interest'",1873],["T_WHITESPACE"," ",1873],["T_BOOLEAN_AND","&&",1873],["T_WHITESPACE"," ",1873],["T_VARIABLE","$operation",1873],["T_WHITESPACE"," ",1873],["T_IS_EQUAL","==",1873],["T_WHITESPACE"," ",1873],["T_CONSTANT_ENCAPSED_STRING","'edit'",1873],")",["T_WHITESPACE"," ",1873],"{",["T_WHITESPACE","\n    ",1873],["T_RETURN","return",1874],["T_WHITESPACE"," ",1874],["T_STRING","AccessResult",1874],["T_DOUBLE_COLON","::",1874],["T_STRING","allowedIfHasPermission",1874],"(",["T_VARIABLE","$account",1874],",",["T_WHITESPACE"," ",1874],["T_CONSTANT_ENCAPSED_STRING","'update field of interest'",1874],")",";",["T_WHITESPACE","\n  ",1874],"}",["T_WHITESPACE","\n  ",1875],["T_RETURN","return",1876],["T_WHITESPACE"," ",1876],["T_STRING","AccessResult",1876],["T_DOUBLE_COLON","::",1876],["T_STRING","neutral",1876],"(",")",";",["T_WHITESPACE","\n",1876],"}",["T_WHITESPACE","\n\n",1877],["T_DOC_COMMENT","\/**\n * Alter the default access behavior for a given field.\n *\n * Use this hook to override access grants from another module. Note that the\n * original default access flag is masked under the ':default' key.\n *\n * @param \\Drupal\\Core\\Access\\AccessResultInterface[] $grants\n *   An array of grants gathered by hook_entity_field_access(). The array is\n *   keyed by the module that defines the field's access control; the values are\n *   grant responses for each module (\\Drupal\\Core\\Access\\AccessResult).\n * @param array $context\n *   Context array on the performed operation with the following keys:\n *   - operation: The operation to be performed (string).\n *   - field_definition: The field definition object\n *     (\\Drupal\\Core\\Field\\FieldDefinitionInterface)\n *   - account: The user account to check access for\n *     (Drupal\\user\\Entity\\User).\n *   - items: (optional) The entity field items\n *     (\\Drupal\\Core\\Field\\FieldItemListInterface).\n *\/",1879],["T_WHITESPACE","\n",1898],["T_FUNCTION","function",1899],["T_WHITESPACE"," ",1899],["T_STRING","hook_entity_field_access_alter",1899],"(",["T_ARRAY","array",1899],["T_WHITESPACE"," ",1899],"&",["T_VARIABLE","$grants",1899],",",["T_WHITESPACE"," ",1899],["T_ARRAY","array",1899],["T_WHITESPACE"," ",1899],["T_VARIABLE","$context",1899],")",["T_WHITESPACE"," ",1899],"{",["T_WHITESPACE","\n  ",1899],["T_DOC_COMMENT","\/** @var \\Drupal\\Core\\Field\\FieldDefinitionInterface $field_definition *\/",1900],["T_WHITESPACE","\n  ",1900],["T_VARIABLE","$field_definition",1901],["T_WHITESPACE"," ",1901],"=",["T_WHITESPACE"," ",1901],["T_VARIABLE","$context",1901],"[",["T_CONSTANT_ENCAPSED_STRING","'field_definition'",1901],"]",";",["T_WHITESPACE","\n  ",1901],["T_IF","if",1902],["T_WHITESPACE"," ",1902],"(",["T_VARIABLE","$field_definition",1902],["T_OBJECT_OPERATOR","->",1902],["T_STRING","getName",1902],"(",")",["T_WHITESPACE"," ",1902],["T_IS_EQUAL","==",1902],["T_WHITESPACE"," ",1902],["T_CONSTANT_ENCAPSED_STRING","'field_of_interest'",1902],["T_WHITESPACE"," ",1902],["T_BOOLEAN_AND","&&",1902],["T_WHITESPACE"," ",1902],["T_VARIABLE","$grants",1902],"[",["T_CONSTANT_ENCAPSED_STRING","'node'",1902],"]",["T_OBJECT_OPERATOR","->",1902],["T_STRING","isForbidden",1902],"(",")",")",["T_WHITESPACE"," ",1902],"{",["T_WHITESPACE","\n    ",1902],["T_COMMENT","\/\/ Override node module's restriction to no opinion (neither allowed nor\n",1903],["T_WHITESPACE","    ",1904],["T_COMMENT","\/\/ forbidden). We don't want to provide our own access hook, we only want to\n",1904],["T_WHITESPACE","    ",1905],["T_COMMENT","\/\/ take out node module's part in the access handling of this field. We also\n",1905],["T_WHITESPACE","    ",1906],["T_COMMENT","\/\/ don't want to switch node module's grant to\n",1906],["T_WHITESPACE","    ",1907],["T_COMMENT","\/\/ AccessResultInterface::isAllowed() , because the grants of other modules\n",1907],["T_WHITESPACE","    ",1908],["T_COMMENT","\/\/ should still decide on their own if this field is accessible or not\n",1908],["T_WHITESPACE","    ",1909],["T_VARIABLE","$grants",1909],"[",["T_CONSTANT_ENCAPSED_STRING","'node'",1909],"]",["T_WHITESPACE"," ",1909],"=",["T_WHITESPACE"," ",1909],["T_STRING","AccessResult",1909],["T_DOUBLE_COLON","::",1909],["T_STRING","neutral",1909],"(",")",["T_OBJECT_OPERATOR","->",1909],["T_STRING","inheritCacheability",1909],"(",["T_VARIABLE","$grants",1909],"[",["T_CONSTANT_ENCAPSED_STRING","'node'",1909],"]",")",";",["T_WHITESPACE","\n  ",1909],"}",["T_WHITESPACE","\n",1910],"}",["T_WHITESPACE","\n\n",1911],["T_DOC_COMMENT","\/**\n * Acts when initializing a fieldable entity object.\n *\n * This hook runs after a new entity object or a new entity translation object\n * has just been instantiated. It can be used to set initial values, e.g. to\n * provide defaults.\n *\n * @param \\Drupal\\Core\\Entity\\FieldableEntityInterface $entity\n *   The entity object.\n *\n * @ingroup entity_crud\n * @see hook_ENTITY_TYPE_field_values_init()\n *\/",1913],["T_WHITESPACE","\n",1925],["T_FUNCTION","function",1926],["T_WHITESPACE"," ",1926],["T_STRING","hook_entity_field_values_init",1926],"(",["T_NS_SEPARATOR","\\",1926],["T_STRING","Drupal",1926],["T_NS_SEPARATOR","\\",1926],["T_STRING","Core",1926],["T_NS_SEPARATOR","\\",1926],["T_STRING","Entity",1926],["T_NS_SEPARATOR","\\",1926],["T_STRING","FieldableEntityInterface",1926],["T_WHITESPACE"," ",1926],["T_VARIABLE","$entity",1926],")",["T_WHITESPACE"," ",1926],"{",["T_WHITESPACE","\n  ",1926],["T_IF","if",1927],["T_WHITESPACE"," ",1927],"(",["T_VARIABLE","$entity",1927],["T_WHITESPACE"," ",1927],["T_INSTANCEOF","instanceof",1927],["T_WHITESPACE"," ",1927],["T_NS_SEPARATOR","\\",1927],["T_STRING","Drupal",1927],["T_NS_SEPARATOR","\\",1927],["T_STRING","Core",1927],["T_NS_SEPARATOR","\\",1927],["T_STRING","Entity",1927],["T_NS_SEPARATOR","\\",1927],["T_STRING","ContentEntityInterface",1927],["T_WHITESPACE"," ",1927],["T_BOOLEAN_AND","&&",1927],["T_WHITESPACE"," ",1927],"!",["T_VARIABLE","$entity",1927],["T_OBJECT_OPERATOR","->",1927],["T_STRING","foo",1927],["T_OBJECT_OPERATOR","->",1927],["T_STRING","value",1927],")",["T_WHITESPACE"," ",1927],"{",["T_WHITESPACE","\n    ",1927],["T_VARIABLE","$entity",1928],["T_OBJECT_OPERATOR","->",1928],["T_STRING","foo",1928],["T_OBJECT_OPERATOR","->",1928],["T_STRING","value",1928],["T_WHITESPACE"," ",1928],"=",["T_WHITESPACE"," ",1928],["T_CONSTANT_ENCAPSED_STRING","'some_initial_value'",1928],";",["T_WHITESPACE","\n  ",1928],"}",["T_WHITESPACE","\n",1929],"}",["T_WHITESPACE","\n\n",1930],["T_DOC_COMMENT","\/**\n * Acts when initializing a fieldable entity object.\n *\n * This hook runs after a new entity object or a new entity translation object\n * has just been instantiated. It can be used to set initial values, e.g. to\n * provide defaults.\n *\n * @param \\Drupal\\Core\\Entity\\FieldableEntityInterface $entity\n *   The entity object.\n *\n * @ingroup entity_crud\n * @see hook_entity_field_values_init()\n *\/",1932],["T_WHITESPACE","\n",1944],["T_FUNCTION","function",1945],["T_WHITESPACE"," ",1945],["T_STRING","hook_ENTITY_TYPE_field_values_init",1945],"(",["T_NS_SEPARATOR","\\",1945],["T_STRING","Drupal",1945],["T_NS_SEPARATOR","\\",1945],["T_STRING","Core",1945],["T_NS_SEPARATOR","\\",1945],["T_STRING","Entity",1945],["T_NS_SEPARATOR","\\",1945],["T_STRING","FieldableEntityInterface",1945],["T_WHITESPACE"," ",1945],["T_VARIABLE","$entity",1945],")",["T_WHITESPACE"," ",1945],"{",["T_WHITESPACE","\n  ",1945],["T_IF","if",1946],["T_WHITESPACE"," ",1946],"(","!",["T_VARIABLE","$entity",1946],["T_OBJECT_OPERATOR","->",1946],["T_STRING","foo",1946],["T_OBJECT_OPERATOR","->",1946],["T_STRING","value",1946],")",["T_WHITESPACE"," ",1946],"{",["T_WHITESPACE","\n    ",1946],["T_VARIABLE","$entity",1947],["T_OBJECT_OPERATOR","->",1947],["T_STRING","foo",1947],["T_OBJECT_OPERATOR","->",1947],["T_STRING","value",1947],["T_WHITESPACE"," ",1947],"=",["T_WHITESPACE"," ",1947],["T_CONSTANT_ENCAPSED_STRING","'some_initial_value'",1947],";",["T_WHITESPACE","\n  ",1947],"}",["T_WHITESPACE","\n",1948],"}",["T_WHITESPACE","\n\n",1949],["T_DOC_COMMENT","\/**\n * Exposes \"pseudo-field\" components on content entities.\n *\n * Field UI's \"Manage fields\" and \"Manage display\" pages let users re-order\n * fields, but also non-field components. For nodes, these include elements\n * exposed by modules through hook_form_alter(), for instance.\n *\n * Content entities or modules that want to have their components supported\n * should expose them using this hook. The user-defined settings (weight,\n * visible) are automatically applied when entities or entity forms are\n * rendered.\n *\n * @see hook_entity_extra_field_info_alter()\n *\n * @return array\n *   The array structure is identical to that of the return value of\n *   \\Drupal\\Core\\Entity\\EntityFieldManagerInterface::getExtraFields().\n *\/",1951],["T_WHITESPACE","\n",1968],["T_FUNCTION","function",1969],["T_WHITESPACE"," ",1969],["T_STRING","hook_entity_extra_field_info",1969],"(",")",["T_WHITESPACE"," ",1969],"{",["T_WHITESPACE","\n  ",1969],["T_VARIABLE","$extra",1970],["T_WHITESPACE"," ",1970],"=",["T_WHITESPACE"," ",1970],["T_ARRAY","array",1970],"(",")",";",["T_WHITESPACE","\n  ",1970],["T_VARIABLE","$module_language_enabled",1971],["T_WHITESPACE"," ",1971],"=",["T_WHITESPACE"," ",1971],["T_NS_SEPARATOR","\\",1971],["T_STRING","Drupal",1971],["T_DOUBLE_COLON","::",1971],["T_STRING","moduleHandler",1971],"(",")",["T_OBJECT_OPERATOR","->",1971],["T_STRING","moduleExists",1971],"(",["T_CONSTANT_ENCAPSED_STRING","'language'",1971],")",";",["T_WHITESPACE","\n  ",1971],["T_VARIABLE","$description",1972],["T_WHITESPACE"," ",1972],"=",["T_WHITESPACE"," ",1972],["T_STRING","t",1972],"(",["T_CONSTANT_ENCAPSED_STRING","'Node module element'",1972],")",";",["T_WHITESPACE","\n\n  ",1972],["T_FOREACH","foreach",1974],["T_WHITESPACE"," ",1974],"(",["T_STRING","NodeType",1974],["T_DOUBLE_COLON","::",1974],["T_STRING","loadMultiple",1974],"(",")",["T_WHITESPACE"," ",1974],["T_AS","as",1974],["T_WHITESPACE"," ",1974],["T_VARIABLE","$bundle",1974],")",["T_WHITESPACE"," ",1974],"{",["T_WHITESPACE","\n\n    ",1974],["T_COMMENT","\/\/ Add also the 'language' select if Language module is enabled and the\n",1976],["T_WHITESPACE","    ",1977],["T_COMMENT","\/\/ bundle has multilingual support.\n",1977],["T_WHITESPACE","    ",1978],["T_COMMENT","\/\/ Visibility of the ordering of the language selector is the same as on the\n",1978],["T_WHITESPACE","    ",1979],["T_COMMENT","\/\/ node\/add form.\n",1979],["T_WHITESPACE","    ",1980],["T_IF","if",1980],["T_WHITESPACE"," ",1980],"(",["T_VARIABLE","$module_language_enabled",1980],")",["T_WHITESPACE"," ",1980],"{",["T_WHITESPACE","\n      ",1980],["T_VARIABLE","$configuration",1981],["T_WHITESPACE"," ",1981],"=",["T_WHITESPACE"," ",1981],["T_STRING","ContentLanguageSettings",1981],["T_DOUBLE_COLON","::",1981],["T_STRING","loadByEntityTypeBundle",1981],"(",["T_CONSTANT_ENCAPSED_STRING","'node'",1981],",",["T_WHITESPACE"," ",1981],["T_VARIABLE","$bundle",1981],["T_OBJECT_OPERATOR","->",1981],["T_STRING","id",1981],"(",")",")",";",["T_WHITESPACE","\n      ",1981],["T_IF","if",1982],["T_WHITESPACE"," ",1982],"(",["T_VARIABLE","$configuration",1982],["T_OBJECT_OPERATOR","->",1982],["T_STRING","isLanguageAlterable",1982],"(",")",")",["T_WHITESPACE"," ",1982],"{",["T_WHITESPACE","\n        ",1982],["T_VARIABLE","$extra",1983],"[",["T_CONSTANT_ENCAPSED_STRING","'node'",1983],"]","[",["T_VARIABLE","$bundle",1983],["T_OBJECT_OPERATOR","->",1983],["T_STRING","id",1983],"(",")","]","[",["T_CONSTANT_ENCAPSED_STRING","'form'",1983],"]","[",["T_CONSTANT_ENCAPSED_STRING","'language'",1983],"]",["T_WHITESPACE"," ",1983],"=",["T_WHITESPACE"," ",1983],["T_ARRAY","array",1983],"(",["T_WHITESPACE","\n          ",1983],["T_CONSTANT_ENCAPSED_STRING","'label'",1984],["T_WHITESPACE"," ",1984],["T_DOUBLE_ARROW","=>",1984],["T_WHITESPACE"," ",1984],["T_STRING","t",1984],"(",["T_CONSTANT_ENCAPSED_STRING","'Language'",1984],")",",",["T_WHITESPACE","\n          ",1984],["T_CONSTANT_ENCAPSED_STRING","'description'",1985],["T_WHITESPACE"," ",1985],["T_DOUBLE_ARROW","=>",1985],["T_WHITESPACE"," ",1985],["T_VARIABLE","$description",1985],",",["T_WHITESPACE","\n          ",1985],["T_CONSTANT_ENCAPSED_STRING","'weight'",1986],["T_WHITESPACE"," ",1986],["T_DOUBLE_ARROW","=>",1986],["T_WHITESPACE"," ",1986],["T_LNUMBER","0",1986],",",["T_WHITESPACE","\n        ",1986],")",";",["T_WHITESPACE","\n      ",1987],"}",["T_WHITESPACE","\n    ",1988],"}",["T_WHITESPACE","\n    ",1989],["T_VARIABLE","$extra",1990],"[",["T_CONSTANT_ENCAPSED_STRING","'node'",1990],"]","[",["T_VARIABLE","$bundle",1990],["T_OBJECT_OPERATOR","->",1990],["T_STRING","id",1990],"(",")","]","[",["T_CONSTANT_ENCAPSED_STRING","'display'",1990],"]","[",["T_CONSTANT_ENCAPSED_STRING","'language'",1990],"]",["T_WHITESPACE"," ",1990],"=",["T_WHITESPACE"," ",1990],["T_ARRAY","array",1990],"(",["T_WHITESPACE","\n      ",1990],["T_CONSTANT_ENCAPSED_STRING","'label'",1991],["T_WHITESPACE"," ",1991],["T_DOUBLE_ARROW","=>",1991],["T_WHITESPACE"," ",1991],["T_STRING","t",1991],"(",["T_CONSTANT_ENCAPSED_STRING","'Language'",1991],")",",",["T_WHITESPACE","\n      ",1991],["T_CONSTANT_ENCAPSED_STRING","'description'",1992],["T_WHITESPACE"," ",1992],["T_DOUBLE_ARROW","=>",1992],["T_WHITESPACE"," ",1992],["T_VARIABLE","$description",1992],",",["T_WHITESPACE","\n      ",1992],["T_CONSTANT_ENCAPSED_STRING","'weight'",1993],["T_WHITESPACE"," ",1993],["T_DOUBLE_ARROW","=>",1993],["T_WHITESPACE"," ",1993],["T_LNUMBER","0",1993],",",["T_WHITESPACE","\n      ",1993],["T_CONSTANT_ENCAPSED_STRING","'visible'",1994],["T_WHITESPACE"," ",1994],["T_DOUBLE_ARROW","=>",1994],["T_WHITESPACE"," ",1994],["T_STRING","FALSE",1994],",",["T_WHITESPACE","\n    ",1994],")",";",["T_WHITESPACE","\n  ",1995],"}",["T_WHITESPACE","\n\n  ",1996],["T_RETURN","return",1998],["T_WHITESPACE"," ",1998],["T_VARIABLE","$extra",1998],";",["T_WHITESPACE","\n",1998],"}",["T_WHITESPACE","\n\n",1999],["T_DOC_COMMENT","\/**\n * Alter \"pseudo-field\" components on content entities.\n *\n * @param array $info\n *   The array structure is identical to that of the return value of\n *   \\Drupal\\Core\\Entity\\EntityManagerInterface::getExtraFields().\n *\n * @see hook_entity_extra_field_info()\n *\/",2001],["T_WHITESPACE","\n",2009],["T_FUNCTION","function",2010],["T_WHITESPACE"," ",2010],["T_STRING","hook_entity_extra_field_info_alter",2010],"(","&",["T_VARIABLE","$info",2010],")",["T_WHITESPACE"," ",2010],"{",["T_WHITESPACE","\n  ",2010],["T_COMMENT","\/\/ Force node title to always be at the top of the list by default.\n",2011],["T_WHITESPACE","  ",2012],["T_FOREACH","foreach",2012],["T_WHITESPACE"," ",2012],"(",["T_STRING","NodeType",2012],["T_DOUBLE_COLON","::",2012],["T_STRING","loadMultiple",2012],"(",")",["T_WHITESPACE"," ",2012],["T_AS","as",2012],["T_WHITESPACE"," ",2012],["T_VARIABLE","$bundle",2012],")",["T_WHITESPACE"," ",2012],"{",["T_WHITESPACE","\n    ",2012],["T_IF","if",2013],["T_WHITESPACE"," ",2013],"(",["T_ISSET","isset",2013],"(",["T_VARIABLE","$info",2013],"[",["T_CONSTANT_ENCAPSED_STRING","'node'",2013],"]","[",["T_VARIABLE","$bundle",2013],["T_OBJECT_OPERATOR","->",2013],["T_STRING","id",2013],"(",")","]","[",["T_CONSTANT_ENCAPSED_STRING","'form'",2013],"]","[",["T_CONSTANT_ENCAPSED_STRING","'title'",2013],"]",")",")",["T_WHITESPACE"," ",2013],"{",["T_WHITESPACE","\n      ",2013],["T_VARIABLE","$info",2014],"[",["T_CONSTANT_ENCAPSED_STRING","'node'",2014],"]","[",["T_VARIABLE","$bundle",2014],["T_OBJECT_OPERATOR","->",2014],["T_STRING","id",2014],"(",")","]","[",["T_CONSTANT_ENCAPSED_STRING","'form'",2014],"]","[",["T_CONSTANT_ENCAPSED_STRING","'title'",2014],"]","[",["T_CONSTANT_ENCAPSED_STRING","'weight'",2014],"]",["T_WHITESPACE"," ",2014],"=",["T_WHITESPACE"," ",2014],"-",["T_LNUMBER","20",2014],";",["T_WHITESPACE","\n    ",2014],"}",["T_WHITESPACE","\n  ",2015],"}",["T_WHITESPACE","\n",2016],"}",["T_WHITESPACE","\n\n",2017],["T_DOC_COMMENT","\/**\n * @} End of \"addtogroup hooks\".\n *\/",2019],["T_WHITESPACE","\n",2021]]