[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Core",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Entity",3],";",["T_WHITESPACE","\n\n",3],["T_USE","use",5],["T_WHITESPACE"," ",5],["T_STRING","Drupal",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Core",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Field",5],["T_NS_SEPARATOR","\\",5],["T_STRING","FieldStorageDefinitionInterface",5],";",["T_WHITESPACE","\n\n",5],["T_DOC_COMMENT","\/**\n * Defines an interface for managing entity definition updates.\n *\n * During the application lifetime, the definitions of various entity types and\n * their data components (e.g., fields for fieldable entity types) can change.\n * For example, updated code can be deployed. Some entity handlers may need to\n * perform complex or long-running logic in response to the change. For\n * example, a SQL-based storage handler may need to update the database schema.\n *\n * To support this, \\Drupal\\Core\\Entity\\EntityManagerInterface has methods to\n * retrieve the last installed definitions as well as the definitions specified\n * by the current codebase. It also has create\/update\/delete methods to bring\n * the former up to date with the latter.\n *\n * However, it is not the responsibility of the entity manager to decide how to\n * report the differences or when to apply each update. This interface is for\n * managing that.\n *\n * This interface also provides methods to retrieve instances of the definitions\n * to be updated ready to be manipulated. In fact when definitions change in\n * code the system needs to be notified about that and the definitions stored in\n * state need to be reconciled with the ones living in code. This typically\n * happens in Update API functions, which need to take the system from a known\n * state to another known state. Relying on the definitions living in code might\n * prevent this, as the system might transition directly to the last available\n * state, and thus skipping the intermediate steps. Manipulating the definitions\n * in state allows to avoid this and ensures that the various steps of the\n * update process are predictable and repeatable.\n *\n * @see \\Drupal\\Core\\Entity\\EntityManagerInterface::getDefinition()\n * @see \\Drupal\\Core\\Entity\\EntityManagerInterface::getLastInstalledDefinition()\n * @see \\Drupal\\Core\\Entity\\EntityManagerInterface::getFieldStorageDefinitions()\n * @see \\Drupal\\Core\\Entity\\EntityManagerInterface::getLastInstalledFieldStorageDefinitions()\n * @see hook_update_N()\n *\/",7],["T_WHITESPACE","\n",41],["T_INTERFACE","interface",42],["T_WHITESPACE"," ",42],["T_STRING","EntityDefinitionUpdateManagerInterface",42],["T_WHITESPACE"," ",42],"{",["T_WHITESPACE","\n\n  ",42],["T_DOC_COMMENT","\/**\n   * Indicates that a definition has just been created.\n   *\n   * @var int\n   *\/",44],["T_WHITESPACE","\n  ",48],["T_CONST","const",49],["T_WHITESPACE"," ",49],["T_STRING","DEFINITION_CREATED",49],["T_WHITESPACE"," ",49],"=",["T_WHITESPACE"," ",49],["T_LNUMBER","1",49],";",["T_WHITESPACE","\n\n  ",49],["T_DOC_COMMENT","\/**\n   * Indicates that a definition has changes.\n   *\n   * @var int\n   *\/",51],["T_WHITESPACE","\n  ",55],["T_CONST","const",56],["T_WHITESPACE"," ",56],["T_STRING","DEFINITION_UPDATED",56],["T_WHITESPACE"," ",56],"=",["T_WHITESPACE"," ",56],["T_LNUMBER","2",56],";",["T_WHITESPACE","\n\n  ",56],["T_DOC_COMMENT","\/**\n   * Indicates that a definition has just been deleted.\n   *\n   * @var int\n   *\/",58],["T_WHITESPACE","\n  ",62],["T_CONST","const",63],["T_WHITESPACE"," ",63],["T_STRING","DEFINITION_DELETED",63],["T_WHITESPACE"," ",63],"=",["T_WHITESPACE"," ",63],["T_LNUMBER","3",63],";",["T_WHITESPACE","\n\n  ",63],["T_DOC_COMMENT","\/**\n   * Checks if there are any definition updates that need to be applied.\n   *\n   * @return bool\n   *   TRUE if updates are needed.\n   *\/",65],["T_WHITESPACE","\n  ",70],["T_PUBLIC","public",71],["T_WHITESPACE"," ",71],["T_FUNCTION","function",71],["T_WHITESPACE"," ",71],["T_STRING","needsUpdates",71],"(",")",";",["T_WHITESPACE","\n\n  ",71],["T_DOC_COMMENT","\/**\n   * Gets a human readable summary of the detected changes.\n   *\n   * @return array\n   *   An associative array keyed by entity type id. Each entry is an array of\n   *   human-readable strings, each describing a change.\n   *\/",73],["T_WHITESPACE","\n  ",79],["T_PUBLIC","public",80],["T_WHITESPACE"," ",80],["T_FUNCTION","function",80],["T_WHITESPACE"," ",80],["T_STRING","getChangeSummary",80],"(",")",";",["T_WHITESPACE","\n\n  ",80],["T_DOC_COMMENT","\/**\n   * Applies all the detected valid changes.\n   *\n   * Use this with care, as it will apply updates for any module, which will\n   * lead to unpredictable results.\n   *\n   * @throws \\Drupal\\Core\\Entity\\EntityStorageException\n   *   This exception is thrown if a change cannot be applied without\n   *   unacceptable data loss. In such a case, the site administrator needs to\n   *   apply some other process, such as a custom update function or a\n   *   migration via the Migrate module.\n   *\/",82],["T_WHITESPACE","\n  ",93],["T_PUBLIC","public",94],["T_WHITESPACE"," ",94],["T_FUNCTION","function",94],["T_WHITESPACE"," ",94],["T_STRING","applyUpdates",94],"(",")",";",["T_WHITESPACE","\n\n  ",94],["T_DOC_COMMENT","\/**\n   * Returns an entity type definition ready to be manipulated.\n   *\n   * When needing to apply updates to existing entity type definitions, this\n   * method should always be used to retrieve a definition ready to be\n   * manipulated.\n   *\n   * @param string $entity_type_id\n   *   The entity type identifier.\n   *\n   * @return \\Drupal\\Core\\Entity\\EntityTypeInterface\n   *   The entity type definition.\n   *\/",96],["T_WHITESPACE","\n  ",108],["T_PUBLIC","public",109],["T_WHITESPACE"," ",109],["T_FUNCTION","function",109],["T_WHITESPACE"," ",109],["T_STRING","getEntityType",109],"(",["T_VARIABLE","$entity_type_id",109],")",";",["T_WHITESPACE","\n\n  ",109],["T_DOC_COMMENT","\/**\n   * Installs a new entity type definition.\n   *\n   * @param \\Drupal\\Core\\Entity\\EntityTypeInterface $entity_type\n   *   The entity type definition.\n   *\/",111],["T_WHITESPACE","\n  ",116],["T_PUBLIC","public",117],["T_WHITESPACE"," ",117],["T_FUNCTION","function",117],["T_WHITESPACE"," ",117],["T_STRING","installEntityType",117],"(",["T_STRING","EntityTypeInterface",117],["T_WHITESPACE"," ",117],["T_VARIABLE","$entity_type",117],")",";",["T_WHITESPACE","\n\n  ",117],["T_DOC_COMMENT","\/**\n   * Applies any change performed to the passed entity type definition.\n   *\n   * @param \\Drupal\\Core\\Entity\\EntityTypeInterface $entity_type\n   *   The entity type definition.\n   *\/",119],["T_WHITESPACE","\n  ",124],["T_PUBLIC","public",125],["T_WHITESPACE"," ",125],["T_FUNCTION","function",125],["T_WHITESPACE"," ",125],["T_STRING","updateEntityType",125],"(",["T_STRING","EntityTypeInterface",125],["T_WHITESPACE"," ",125],["T_VARIABLE","$entity_type",125],")",";",["T_WHITESPACE","\n\n  ",125],["T_DOC_COMMENT","\/**\n   * Uninstalls an entity type definition.\n   *\n   * @param \\Drupal\\Core\\Entity\\EntityTypeInterface $entity_type\n   *   The entity type definition.\n   *\/",127],["T_WHITESPACE","\n  ",132],["T_PUBLIC","public",133],["T_WHITESPACE"," ",133],["T_FUNCTION","function",133],["T_WHITESPACE"," ",133],["T_STRING","uninstallEntityType",133],"(",["T_STRING","EntityTypeInterface",133],["T_WHITESPACE"," ",133],["T_VARIABLE","$entity_type",133],")",";",["T_WHITESPACE","\n\n  ",133],["T_DOC_COMMENT","\/**\n   * Returns a field storage definition ready to be manipulated.\n   *\n   * When needing to apply updates to existing field storage definitions, this\n   * method should always be used to retrieve a storage definition ready to be\n   * manipulated.\n   *\n   * @param string $name\n   *   The field name.\n   * @param string $entity_type_id\n   *   The entity type identifier.\n   *\n   * @return \\Drupal\\Core\\Field\\FieldStorageDefinitionInterface\n   *   The field storage definition.\n   *\n   * @todo Make this return a mutable storage definition interface when we have\n   *   one. See https:\/\/www.drupal.org\/node\/2346329.\n   *\/",135],["T_WHITESPACE","\n  ",152],["T_PUBLIC","public",153],["T_WHITESPACE"," ",153],["T_FUNCTION","function",153],["T_WHITESPACE"," ",153],["T_STRING","getFieldStorageDefinition",153],"(",["T_VARIABLE","$name",153],",",["T_WHITESPACE"," ",153],["T_VARIABLE","$entity_type_id",153],")",";",["T_WHITESPACE","\n\n  ",153],["T_DOC_COMMENT","\/**\n   * Installs a new field storage definition.\n   *\n   * @param string $name\n   *   The field storage definition name.\n   * @param string $entity_type_id\n   *   The target entity type identifier.\n   * @param string $provider\n   *   The name of the definition provider.\n   * @param \\Drupal\\Core\\Field\\FieldStorageDefinitionInterface $storage_definition\n   *   The field storage definition.\n   *\/",155],["T_WHITESPACE","\n  ",166],["T_PUBLIC","public",167],["T_WHITESPACE"," ",167],["T_FUNCTION","function",167],["T_WHITESPACE"," ",167],["T_STRING","installFieldStorageDefinition",167],"(",["T_VARIABLE","$name",167],",",["T_WHITESPACE"," ",167],["T_VARIABLE","$entity_type_id",167],",",["T_WHITESPACE"," ",167],["T_VARIABLE","$provider",167],",",["T_WHITESPACE"," ",167],["T_STRING","FieldStorageDefinitionInterface",167],["T_WHITESPACE"," ",167],["T_VARIABLE","$storage_definition",167],")",";",["T_WHITESPACE","\n\n  ",167],["T_DOC_COMMENT","\/**\n   * Applies any change performed to the passed field storage definition.\n   *\n   * @param \\Drupal\\Core\\Field\\FieldStorageDefinitionInterface $storage_definition\n   *   The field storage definition.\n   *\/",169],["T_WHITESPACE","\n  ",174],["T_PUBLIC","public",175],["T_WHITESPACE"," ",175],["T_FUNCTION","function",175],["T_WHITESPACE"," ",175],["T_STRING","updateFieldStorageDefinition",175],"(",["T_STRING","FieldStorageDefinitionInterface",175],["T_WHITESPACE"," ",175],["T_VARIABLE","$storage_definition",175],")",";",["T_WHITESPACE","\n\n  ",175],["T_DOC_COMMENT","\/**\n   * Uninstalls a field storage definition.\n   *\n   * @param \\Drupal\\Core\\Field\\FieldStorageDefinitionInterface $storage_definition\n   *   The field storage definition.\n   *\/",177],["T_WHITESPACE","\n  ",182],["T_PUBLIC","public",183],["T_WHITESPACE"," ",183],["T_FUNCTION","function",183],["T_WHITESPACE"," ",183],["T_STRING","uninstallFieldStorageDefinition",183],"(",["T_STRING","FieldStorageDefinitionInterface",183],["T_WHITESPACE"," ",183],["T_VARIABLE","$storage_definition",183],")",";",["T_WHITESPACE","\n\n",183],"}",["T_WHITESPACE","\n",185]]