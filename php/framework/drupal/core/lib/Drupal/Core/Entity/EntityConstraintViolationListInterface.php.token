[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Core",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Entity",3],";",["T_WHITESPACE","\n\n",3],["T_USE","use",5],["T_WHITESPACE"," ",5],["T_STRING","Drupal",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Core",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Session",5],["T_NS_SEPARATOR","\\",5],["T_STRING","AccountInterface",5],";",["T_WHITESPACE","\n",5],["T_USE","use",6],["T_WHITESPACE"," ",6],["T_STRING","Symfony",6],["T_NS_SEPARATOR","\\",6],["T_STRING","Component",6],["T_NS_SEPARATOR","\\",6],["T_STRING","Validator",6],["T_NS_SEPARATOR","\\",6],["T_STRING","ConstraintViolationListInterface",6],";",["T_WHITESPACE","\n\n",6],["T_DOC_COMMENT","\/**\n * Interface for the result of entity validation.\n *\n * The Symfony violation list is extended with methods that allow filtering\n * violations by fields and field access. Forms leverage that to skip possibly\n * pre-existing violations that cannot be caused or fixed by the form.\n *\/",8],["T_WHITESPACE","\n",14],["T_INTERFACE","interface",15],["T_WHITESPACE"," ",15],["T_STRING","EntityConstraintViolationListInterface",15],["T_WHITESPACE"," ",15],["T_EXTENDS","extends",15],["T_WHITESPACE"," ",15],["T_STRING","ConstraintViolationListInterface",15],["T_WHITESPACE"," ",15],"{",["T_WHITESPACE","\n\n  ",15],["T_DOC_COMMENT","\/**\n   * Gets violations flagged on entity level, not associated with any field.\n   *\n   * @return \\Drupal\\Core\\Entity\\EntityConstraintViolationListInterface\n   *   A list of violations on the entity level.\n   *\/",17],["T_WHITESPACE","\n  ",22],["T_PUBLIC","public",23],["T_WHITESPACE"," ",23],["T_FUNCTION","function",23],["T_WHITESPACE"," ",23],["T_STRING","getEntityViolations",23],"(",")",";",["T_WHITESPACE","\n\n  ",23],["T_DOC_COMMENT","\/**\n   * Gets the violations of the given field.\n   *\n   * @param string $field_name\n   *   The name of the field to get violations for.\n   *\n   * @return \\Symfony\\Component\\Validator\\ConstraintViolationListInterface\n   *   The violations of the given field.\n   *\/",25],["T_WHITESPACE","\n  ",33],["T_PUBLIC","public",34],["T_WHITESPACE"," ",34],["T_FUNCTION","function",34],["T_WHITESPACE"," ",34],["T_STRING","getByField",34],"(",["T_VARIABLE","$field_name",34],")",";",["T_WHITESPACE","\n\n  ",34],["T_DOC_COMMENT","\/**\n   * Gets the violations of the given fields.\n   *\n   * When violations should be displayed for a sub-set of visible fields only,\n   * this method may be used to filter the set of visible violations first.\n   *\n   * @param string[] $field_names\n   *   The names of the fields to get violations for.\n   *\n   * @return \\Drupal\\Core\\Entity\\EntityConstraintViolationListInterface\n   *   A list of violations of the given fields.\n   *\/",36],["T_WHITESPACE","\n  ",47],["T_PUBLIC","public",48],["T_WHITESPACE"," ",48],["T_FUNCTION","function",48],["T_WHITESPACE"," ",48],["T_STRING","getByFields",48],"(",["T_ARRAY","array",48],["T_WHITESPACE"," ",48],["T_VARIABLE","$field_names",48],")",";",["T_WHITESPACE","\n\n  ",48],["T_DOC_COMMENT","\/**\n   * Filters this violation list by the given fields.\n   *\n   * The returned object just has violations attached to the provided fields.\n   *\n   * When violations should be displayed for a sub-set of visible fields only,\n   * this method may be used to filter the set of visible violations first.\n   *\n   * @param string[] $field_names\n   *   The names of the fields to filter violations for.\n   *\n   * @return $this\n   *\/",50],["T_WHITESPACE","\n  ",62],["T_PUBLIC","public",63],["T_WHITESPACE"," ",63],["T_FUNCTION","function",63],["T_WHITESPACE"," ",63],["T_STRING","filterByFields",63],"(",["T_ARRAY","array",63],["T_WHITESPACE"," ",63],["T_VARIABLE","$field_names",63],")",";",["T_WHITESPACE","\n\n  ",63],["T_DOC_COMMENT","\/**\n   * Filters this violation list to apply for accessible fields only.\n   *\n   * Violations for inaccessible fields are removed so the returned object just\n   * has the remaining violations.\n   *\n   * @param \\Drupal\\Core\\Session\\AccountInterface $account\n   *   (optional) The user for which to check access, or NULL to check access\n   *   for the current user. Defaults to NULL.\n   *\n   * @return $this\n   *\/",65],["T_WHITESPACE","\n  ",76],["T_PUBLIC","public",77],["T_WHITESPACE"," ",77],["T_FUNCTION","function",77],["T_WHITESPACE"," ",77],["T_STRING","filterByFieldAccess",77],"(",["T_STRING","AccountInterface",77],["T_WHITESPACE"," ",77],["T_VARIABLE","$account",77],["T_WHITESPACE"," ",77],"=",["T_WHITESPACE"," ",77],["T_STRING","NULL",77],")",";",["T_WHITESPACE","\n\n  ",77],["T_DOC_COMMENT","\/**\n   * Returns the names of all violated fields.\n   *\n   * @return string[]\n   *   An array of field names.\n   *\/",79],["T_WHITESPACE","\n  ",84],["T_PUBLIC","public",85],["T_WHITESPACE"," ",85],["T_FUNCTION","function",85],["T_WHITESPACE"," ",85],["T_STRING","getFieldNames",85],"(",")",";",["T_WHITESPACE","\n\n  ",85],["T_DOC_COMMENT","\/**\n   * The entity which has been validated.\n   *\n   * @return \\Drupal\\Core\\Entity\\FieldableEntityInterface\n   *   The entity object.\n   *\/",87],["T_WHITESPACE","\n  ",92],["T_PUBLIC","public",93],["T_WHITESPACE"," ",93],["T_FUNCTION","function",93],["T_WHITESPACE"," ",93],["T_STRING","getEntity",93],"(",")",";",["T_WHITESPACE","\n\n",93],"}",["T_WHITESPACE","\n",95]]