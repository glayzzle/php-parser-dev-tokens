[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Core",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Routing",3],";",["T_WHITESPACE","\n\n",3],["T_USE","use",5],["T_WHITESPACE"," ",5],["T_STRING","Symfony",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Component",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Routing",5],["T_NS_SEPARATOR","\\",5],["T_STRING","RouteCompilerInterface",5],";",["T_WHITESPACE","\n",5],["T_USE","use",6],["T_WHITESPACE"," ",6],["T_STRING","Symfony",6],["T_NS_SEPARATOR","\\",6],["T_STRING","Component",6],["T_NS_SEPARATOR","\\",6],["T_STRING","Routing",6],["T_NS_SEPARATOR","\\",6],["T_STRING","Route",6],";",["T_WHITESPACE","\n",6],["T_USE","use",7],["T_WHITESPACE"," ",7],["T_STRING","Symfony",7],["T_NS_SEPARATOR","\\",7],["T_STRING","Component",7],["T_NS_SEPARATOR","\\",7],["T_STRING","Routing",7],["T_NS_SEPARATOR","\\",7],["T_STRING","RouteCompiler",7],["T_WHITESPACE"," ",7],["T_AS","as",7],["T_WHITESPACE"," ",7],["T_STRING","SymfonyRouteCompiler",7],";",["T_WHITESPACE","\n\n",7],["T_DOC_COMMENT","\/**\n * Compiler to generate derived information from a Route necessary for matching.\n *\/",9],["T_WHITESPACE","\n",11],["T_CLASS","class",12],["T_WHITESPACE"," ",12],["T_STRING","RouteCompiler",12],["T_WHITESPACE"," ",12],["T_EXTENDS","extends",12],["T_WHITESPACE"," ",12],["T_STRING","SymfonyRouteCompiler",12],["T_WHITESPACE"," ",12],["T_IMPLEMENTS","implements",12],["T_WHITESPACE"," ",12],["T_STRING","RouteCompilerInterface",12],["T_WHITESPACE"," ",12],"{",["T_WHITESPACE","\n\n  ",12],["T_DOC_COMMENT","\/**\n   * Utility constant to use for regular expressions against the path.\n   *\/",14],["T_WHITESPACE","\n  ",16],["T_CONST","const",17],["T_WHITESPACE"," ",17],["T_STRING","REGEX_DELIMITER",17],["T_WHITESPACE"," ",17],"=",["T_WHITESPACE"," ",17],["T_CONSTANT_ENCAPSED_STRING","'#'",17],";",["T_WHITESPACE","\n\n  ",17],["T_DOC_COMMENT","\/**\n   * Compiles the current route instance.\n   *\n   * Because so much of the parent class is private, we need to call the parent\n   * class's compile() method and then dissect its return value to build our\n   * new compiled object.  If upstream gets refactored so we can subclass more\n   * easily then this may not be necessary.\n   *\n   * @param \\Symfony\\Component\\Routing\\Route $route\n   *   A Route instance.\n   *\n   * @return \\Drupal\\Core\\Routing\\CompiledRoute\n   *   A CompiledRoute instance.\n   *\/",19],["T_WHITESPACE","\n  ",32],["T_PUBLIC","public",33],["T_WHITESPACE"," ",33],["T_STATIC","static",33],["T_WHITESPACE"," ",33],["T_FUNCTION","function",33],["T_WHITESPACE"," ",33],["T_STRING","compile",33],"(",["T_STRING","Route",33],["T_WHITESPACE"," ",33],["T_VARIABLE","$route",33],")",["T_WHITESPACE"," ",33],"{",["T_WHITESPACE","\n\n    ",33],["T_VARIABLE","$symfony_compiled",35],["T_WHITESPACE"," ",35],"=",["T_WHITESPACE"," ",35],["T_STRING","parent",35],["T_DOUBLE_COLON","::",35],["T_STRING","compile",35],"(",["T_VARIABLE","$route",35],")",";",["T_WHITESPACE","\n\n    ",35],["T_COMMENT","\/\/ The Drupal-specific compiled information.\n",37],["T_WHITESPACE","    ",38],["T_VARIABLE","$stripped_path",38],["T_WHITESPACE"," ",38],"=",["T_WHITESPACE"," ",38],["T_STATIC","static",38],["T_DOUBLE_COLON","::",38],["T_STRING","getPathWithoutDefaults",38],"(",["T_VARIABLE","$route",38],")",";",["T_WHITESPACE","\n    ",38],["T_VARIABLE","$fit",39],["T_WHITESPACE"," ",39],"=",["T_WHITESPACE"," ",39],["T_STATIC","static",39],["T_DOUBLE_COLON","::",39],["T_STRING","getFit",39],"(",["T_VARIABLE","$stripped_path",39],")",";",["T_WHITESPACE","\n    ",39],["T_VARIABLE","$pattern_outline",40],["T_WHITESPACE"," ",40],"=",["T_WHITESPACE"," ",40],["T_STATIC","static",40],["T_DOUBLE_COLON","::",40],["T_STRING","getPatternOutline",40],"(",["T_VARIABLE","$stripped_path",40],")",";",["T_WHITESPACE","\n    ",40],["T_COMMENT","\/\/ We count the number of parts including any optional trailing parts. This\n",41],["T_WHITESPACE","    ",42],["T_COMMENT","\/\/ allows the RouteProvider to filter candidate routes more efficiently.\n",42],["T_WHITESPACE","    ",43],["T_VARIABLE","$num_parts",43],["T_WHITESPACE"," ",43],"=",["T_WHITESPACE"," ",43],["T_STRING","count",43],"(",["T_STRING","explode",43],"(",["T_CONSTANT_ENCAPSED_STRING","'\/'",43],",",["T_WHITESPACE"," ",43],["T_STRING","trim",43],"(",["T_VARIABLE","$route",43],["T_OBJECT_OPERATOR","->",43],["T_STRING","getPath",43],"(",")",",",["T_WHITESPACE"," ",43],["T_CONSTANT_ENCAPSED_STRING","'\/'",43],")",")",")",";",["T_WHITESPACE","\n\n    ",43],["T_RETURN","return",45],["T_WHITESPACE"," ",45],["T_NEW","new",45],["T_WHITESPACE"," ",45],["T_STRING","CompiledRoute",45],"(",["T_WHITESPACE","\n      ",45],["T_VARIABLE","$fit",46],",",["T_WHITESPACE","\n      ",46],["T_VARIABLE","$pattern_outline",47],",",["T_WHITESPACE","\n      ",47],["T_VARIABLE","$num_parts",48],",",["T_WHITESPACE","\n      ",48],["T_COMMENT","\/\/ These are the Symfony compiled parts.\n",49],["T_WHITESPACE","      ",50],["T_VARIABLE","$symfony_compiled",50],["T_OBJECT_OPERATOR","->",50],["T_STRING","getStaticPrefix",50],"(",")",",",["T_WHITESPACE","\n      ",50],["T_VARIABLE","$symfony_compiled",51],["T_OBJECT_OPERATOR","->",51],["T_STRING","getRegex",51],"(",")",",",["T_WHITESPACE","\n      ",51],["T_VARIABLE","$symfony_compiled",52],["T_OBJECT_OPERATOR","->",52],["T_STRING","getTokens",52],"(",")",",",["T_WHITESPACE","\n      ",52],["T_VARIABLE","$symfony_compiled",53],["T_OBJECT_OPERATOR","->",53],["T_STRING","getPathVariables",53],"(",")",",",["T_WHITESPACE","\n      ",53],["T_VARIABLE","$symfony_compiled",54],["T_OBJECT_OPERATOR","->",54],["T_STRING","getHostRegex",54],"(",")",",",["T_WHITESPACE","\n      ",54],["T_VARIABLE","$symfony_compiled",55],["T_OBJECT_OPERATOR","->",55],["T_STRING","getHostTokens",55],"(",")",",",["T_WHITESPACE","\n      ",55],["T_VARIABLE","$symfony_compiled",56],["T_OBJECT_OPERATOR","->",56],["T_STRING","getHostVariables",56],"(",")",",",["T_WHITESPACE","\n      ",56],["T_VARIABLE","$symfony_compiled",57],["T_OBJECT_OPERATOR","->",57],["T_STRING","getVariables",57],"(",")",["T_WHITESPACE","\n      ",57],")",";",["T_WHITESPACE","\n  ",58],"}",["T_WHITESPACE","\n\n  ",59],["T_DOC_COMMENT","\/**\n   * Returns the pattern outline.\n   *\n   * The pattern outline is the path pattern but normalized so that all\n   * placeholders are equal strings and default values are removed.\n   *\n   * @param string $path\n   *   The path for which we want the normalized outline.\n   *\n   * @return string\n   *   The path pattern outline.\n   *\/",61],["T_WHITESPACE","\n  ",72],["T_PUBLIC","public",73],["T_WHITESPACE"," ",73],["T_STATIC","static",73],["T_WHITESPACE"," ",73],["T_FUNCTION","function",73],["T_WHITESPACE"," ",73],["T_STRING","getPatternOutline",73],"(",["T_VARIABLE","$path",73],")",["T_WHITESPACE"," ",73],"{",["T_WHITESPACE","\n    ",73],["T_RETURN","return",74],["T_WHITESPACE"," ",74],["T_STRING","preg_replace",74],"(",["T_CONSTANT_ENCAPSED_STRING","'#\\{\\w+\\}#'",74],",",["T_WHITESPACE"," ",74],["T_CONSTANT_ENCAPSED_STRING","'%'",74],",",["T_WHITESPACE"," ",74],["T_VARIABLE","$path",74],")",";",["T_WHITESPACE","\n  ",74],"}",["T_WHITESPACE","\n\n  ",75],["T_DOC_COMMENT","\/**\n   * Determines the fitness of the provided path.\n   *\n   * @param string $path\n   *   The path whose fitness we want.\n   *\n   * @return int\n   *   The fitness of the path, as an integer.\n   *\/",77],["T_WHITESPACE","\n  ",85],["T_PUBLIC","public",86],["T_WHITESPACE"," ",86],["T_STATIC","static",86],["T_WHITESPACE"," ",86],["T_FUNCTION","function",86],["T_WHITESPACE"," ",86],["T_STRING","getFit",86],"(",["T_VARIABLE","$path",86],")",["T_WHITESPACE"," ",86],"{",["T_WHITESPACE","\n    ",86],["T_VARIABLE","$parts",87],["T_WHITESPACE"," ",87],"=",["T_WHITESPACE"," ",87],["T_STRING","explode",87],"(",["T_CONSTANT_ENCAPSED_STRING","'\/'",87],",",["T_WHITESPACE"," ",87],["T_STRING","trim",87],"(",["T_VARIABLE","$path",87],",",["T_WHITESPACE"," ",87],["T_CONSTANT_ENCAPSED_STRING","'\/'",87],")",")",";",["T_WHITESPACE","\n    ",87],["T_VARIABLE","$number_parts",88],["T_WHITESPACE"," ",88],"=",["T_WHITESPACE"," ",88],["T_STRING","count",88],"(",["T_VARIABLE","$parts",88],")",";",["T_WHITESPACE","\n    ",88],["T_COMMENT","\/\/ We store the highest index of parts here to save some work in the fit\n",89],["T_WHITESPACE","    ",90],["T_COMMENT","\/\/ calculation loop.\n",90],["T_WHITESPACE","    ",91],["T_VARIABLE","$slashes",91],["T_WHITESPACE"," ",91],"=",["T_WHITESPACE"," ",91],["T_VARIABLE","$number_parts",91],["T_WHITESPACE"," ",91],"-",["T_WHITESPACE"," ",91],["T_LNUMBER","1",91],";",["T_WHITESPACE","\n    ",91],["T_COMMENT","\/\/ The fit value is a binary number which has 1 at every fixed path\n",92],["T_WHITESPACE","    ",93],["T_COMMENT","\/\/ position and 0 where there is a wildcard. We keep track of all such\n",93],["T_WHITESPACE","    ",94],["T_COMMENT","\/\/ patterns that exist so that we can minimize the number of path\n",94],["T_WHITESPACE","    ",95],["T_COMMENT","\/\/ patterns we need to check in the RouteProvider.\n",95],["T_WHITESPACE","    ",96],["T_VARIABLE","$fit",96],["T_WHITESPACE"," ",96],"=",["T_WHITESPACE"," ",96],["T_LNUMBER","0",96],";",["T_WHITESPACE","\n    ",96],["T_FOREACH","foreach",97],["T_WHITESPACE"," ",97],"(",["T_VARIABLE","$parts",97],["T_WHITESPACE"," ",97],["T_AS","as",97],["T_WHITESPACE"," ",97],["T_VARIABLE","$k",97],["T_WHITESPACE"," ",97],["T_DOUBLE_ARROW","=>",97],["T_WHITESPACE"," ",97],["T_VARIABLE","$part",97],")",["T_WHITESPACE"," ",97],"{",["T_WHITESPACE","\n      ",97],["T_IF","if",98],["T_WHITESPACE"," ",98],"(",["T_STRING","strpos",98],"(",["T_VARIABLE","$part",98],",",["T_WHITESPACE"," ",98],["T_CONSTANT_ENCAPSED_STRING","'{'",98],")",["T_WHITESPACE"," ",98],["T_IS_IDENTICAL","===",98],["T_WHITESPACE"," ",98],["T_STRING","FALSE",98],")",["T_WHITESPACE"," ",98],"{",["T_WHITESPACE","\n        ",98],["T_VARIABLE","$fit",99],["T_WHITESPACE"," ",99],["T_OR_EQUAL","|=",99],["T_WHITESPACE"," ",99],["T_LNUMBER","1",99],["T_WHITESPACE"," ",99],["T_SL","<<",99],["T_WHITESPACE"," ",99],"(",["T_VARIABLE","$slashes",99],["T_WHITESPACE"," ",99],"-",["T_WHITESPACE"," ",99],["T_VARIABLE","$k",99],")",";",["T_WHITESPACE","\n      ",99],"}",["T_WHITESPACE","\n    ",100],"}",["T_WHITESPACE","\n\n    ",101],["T_RETURN","return",103],["T_WHITESPACE"," ",103],["T_VARIABLE","$fit",103],";",["T_WHITESPACE","\n  ",103],"}",["T_WHITESPACE","\n\n  ",104],["T_DOC_COMMENT","\/**\n   * Returns the path of the route, without placeholders with a default value.\n   *\n   * When computing the path outline and fit, we want to skip default-value\n   * placeholders.  If we didn't, the path would never match.  Note that this\n   * only works for placeholders at the end of the path. Infix placeholders\n   * with default values don't make sense anyway, so that should not be a\n   * problem.\n   *\n   * @param \\Symfony\\Component\\Routing\\Route $route\n   *   The route to have the placeholders removed from.\n   *\n   * @return string\n   *   The path string, stripped of placeholders that have default values.\n   *\/",106],["T_WHITESPACE","\n  ",120],["T_PUBLIC","public",121],["T_WHITESPACE"," ",121],["T_STATIC","static",121],["T_WHITESPACE"," ",121],["T_FUNCTION","function",121],["T_WHITESPACE"," ",121],["T_STRING","getPathWithoutDefaults",121],"(",["T_STRING","Route",121],["T_WHITESPACE"," ",121],["T_VARIABLE","$route",121],")",["T_WHITESPACE"," ",121],"{",["T_WHITESPACE","\n    ",121],["T_VARIABLE","$path",122],["T_WHITESPACE"," ",122],"=",["T_WHITESPACE"," ",122],["T_VARIABLE","$route",122],["T_OBJECT_OPERATOR","->",122],["T_STRING","getPath",122],"(",")",";",["T_WHITESPACE","\n    ",122],["T_VARIABLE","$defaults",123],["T_WHITESPACE"," ",123],"=",["T_WHITESPACE"," ",123],["T_VARIABLE","$route",123],["T_OBJECT_OPERATOR","->",123],["T_STRING","getDefaults",123],"(",")",";",["T_WHITESPACE","\n\n    ",123],["T_COMMENT","\/\/ Remove placeholders with default values from the outline, so that they\n",125],["T_WHITESPACE","    ",126],["T_COMMENT","\/\/ will still match.\n",126],["T_WHITESPACE","    ",127],["T_VARIABLE","$remove",127],["T_WHITESPACE"," ",127],"=",["T_WHITESPACE"," ",127],["T_STRING","array_map",127],"(",["T_FUNCTION","function",127],"(",["T_VARIABLE","$a",127],")",["T_WHITESPACE"," ",127],"{",["T_WHITESPACE","\n      ",127],["T_RETURN","return",128],["T_WHITESPACE"," ",128],["T_CONSTANT_ENCAPSED_STRING","'\/{'",128],["T_WHITESPACE"," ",128],".",["T_WHITESPACE"," ",128],["T_VARIABLE","$a",128],["T_WHITESPACE"," ",128],".",["T_WHITESPACE"," ",128],["T_CONSTANT_ENCAPSED_STRING","'}'",128],";",["T_WHITESPACE","\n    ",128],"}",",",["T_WHITESPACE"," ",129],["T_STRING","array_keys",129],"(",["T_VARIABLE","$defaults",129],")",")",";",["T_WHITESPACE","\n    ",129],["T_VARIABLE","$path",130],["T_WHITESPACE"," ",130],"=",["T_WHITESPACE"," ",130],["T_STRING","str_replace",130],"(",["T_VARIABLE","$remove",130],",",["T_WHITESPACE"," ",130],["T_CONSTANT_ENCAPSED_STRING","''",130],",",["T_WHITESPACE"," ",130],["T_VARIABLE","$path",130],")",";",["T_WHITESPACE","\n\n    ",130],["T_RETURN","return",132],["T_WHITESPACE"," ",132],["T_VARIABLE","$path",132],";",["T_WHITESPACE","\n  ",132],"}",["T_WHITESPACE","\n\n",133],"}",["T_WHITESPACE","\n",135]]