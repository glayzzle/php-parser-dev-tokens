[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Core",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Routing",3],";",["T_WHITESPACE","\n\n",3],["T_USE","use",5],["T_WHITESPACE"," ",5],["T_STRING","Symfony",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Cmf",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Component",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Routing",5],["T_NS_SEPARATOR","\\",5],["T_STRING","VersatileGeneratorInterface",5],";",["T_WHITESPACE","\n\n",5],["T_DOC_COMMENT","\/**\n * Defines an interface for generating a url from a route or system path.\n *\n * Provides additional methods and options not present in the base interface.\n *\/",7],["T_WHITESPACE","\n",11],["T_INTERFACE","interface",12],["T_WHITESPACE"," ",12],["T_STRING","UrlGeneratorInterface",12],["T_WHITESPACE"," ",12],["T_EXTENDS","extends",12],["T_WHITESPACE"," ",12],["T_STRING","VersatileGeneratorInterface",12],["T_WHITESPACE"," ",12],"{",["T_WHITESPACE","\n\n  ",12],["T_DOC_COMMENT","\/**\n   * Gets the internal path (system path) for a route.\n   *\n   * @param string|\\Symfony\\Component\\Routing\\Route $name\n   *   The route name or a route object.\n   * @param array $parameters\n   *   An array of parameters as passed to\n   *   \\Symfony\\Component\\Routing\\Generator\\UrlGeneratorInterface::generate().\n   *\n   * @return string\n   *   The internal Drupal path corresponding to the route.\n   *\/",14],["T_WHITESPACE","\n  ",25],["T_PUBLIC","public",26],["T_WHITESPACE"," ",26],["T_FUNCTION","function",26],["T_WHITESPACE"," ",26],["T_STRING","getPathFromRoute",26],"(",["T_VARIABLE","$name",26],",",["T_WHITESPACE"," ",26],["T_VARIABLE","$parameters",26],["T_WHITESPACE"," ",26],"=",["T_WHITESPACE"," ",26],["T_ARRAY","array",26],"(",")",")",";",["T_WHITESPACE","\n\n  ",26],["T_DOC_COMMENT","\/**\n   * Generates a URL or path for a specific route based on the given parameters.\n   *\n   * Parameters that reference placeholders in the route pattern will be\n   * substituted for them in the pattern. Extra params are added as query\n   * strings to the URL.\n   *\n   * @param string|\\Symfony\\Component\\Routing\\Route $name\n   *   The route name or a route object.\n   * @param array $parameters\n   *   An associative array of parameter names and values.\n   * @param array $options\n   *   (optional) An associative array of additional options, with the following\n   *   elements:\n   *   - 'query': An array of query key\/value-pairs (without any URL-encoding)\n   *     to append to the URL.\n   *   - 'fragment': A fragment identifier (named anchor) to append to the URL.\n   *     Do not include the leading '#' character.\n   *   - 'absolute': Defaults to FALSE. Whether to force the output to be an\n   *     absolute link (beginning with http:). Useful for links that will be\n   *     displayed outside the site, such as in an RSS feed.\n   *   - 'language': An optional language object used to look up the alias\n   *     for the URL. If $options['language'] is omitted, it defaults to the\n   *     current language for the language type LanguageInterface::TYPE_URL.\n   *   - 'https': Whether this URL should point to a secure location. If not\n   *     defined, the current scheme is used, so the user stays on HTTP or HTTPS\n   *     respectively. TRUE enforces HTTPS and FALSE enforces HTTP.\n   *   - 'base_url': Only used internally by a path processor, for example, to\n   *     modify the base URL when a language dependent URL requires so.\n   *   - 'prefix': Only used internally, to modify the path when a language\n   *     dependent URL requires so.\n   * @param bool $collect_bubbleable_metadata\n   *   (optional) Defaults to FALSE. When TRUE, both the generated URL and its\n   *   associated bubbleable metadata are returned.\n   *\n   * @return string|\\Drupal\\Core\\GeneratedUrl\n   *   The generated URL for the given route.\n   *   When $collect_bubbleable_metadata is TRUE, a GeneratedUrl object is\n   *   returned, containing the generated URL plus bubbleable metadata.\n   *\n   * @throws \\Symfony\\Component\\Routing\\Exception\\RouteNotFoundException\n   *   Thrown when the named route does not exist.\n   * @throws \\Symfony\\Component\\Routing\\Exception\\MissingMandatoryParametersException\n   *   Thrown when some parameters are missing that are mandatory for the route.\n   * @throws \\Symfony\\Component\\Routing\\Exception\\InvalidParameterException\n   *   Thrown when a parameter value for a placeholder is not correct because it\n   *   does not match the requirement.\n   *\n   * @internal\n   *   Should not be used in user code.\n   *   Use \\Drupal\\Core\\Url instead.\n   *\/",28],["T_WHITESPACE","\n  ",79],["T_PUBLIC","public",80],["T_WHITESPACE"," ",80],["T_FUNCTION","function",80],["T_WHITESPACE"," ",80],["T_STRING","generateFromRoute",80],"(",["T_VARIABLE","$name",80],",",["T_WHITESPACE"," ",80],["T_VARIABLE","$parameters",80],["T_WHITESPACE"," ",80],"=",["T_WHITESPACE"," ",80],["T_ARRAY","array",80],"(",")",",",["T_WHITESPACE"," ",80],["T_VARIABLE","$options",80],["T_WHITESPACE"," ",80],"=",["T_WHITESPACE"," ",80],["T_ARRAY","array",80],"(",")",",",["T_WHITESPACE"," ",80],["T_VARIABLE","$collect_bubbleable_metadata",80],["T_WHITESPACE"," ",80],"=",["T_WHITESPACE"," ",80],["T_STRING","FALSE",80],")",";",["T_WHITESPACE","\n\n",80],"}",["T_WHITESPACE","\n",82]]