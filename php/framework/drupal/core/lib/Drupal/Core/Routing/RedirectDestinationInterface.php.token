[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Core",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Routing",3],";",["T_WHITESPACE","\n\n",3],["T_DOC_COMMENT","\/**\n * Provides an interface for redirect destinations.\n *\/",5],["T_WHITESPACE","\n",7],["T_INTERFACE","interface",8],["T_WHITESPACE"," ",8],["T_STRING","RedirectDestinationInterface",8],["T_WHITESPACE"," ",8],"{",["T_WHITESPACE","\n\n  ",8],["T_DOC_COMMENT","\/**\n   * Prepares a 'destination' URL query parameter for use with \\Drupal\\Core\\Url.\n   *\n   * Used to direct the user back to the referring page after completing a form.\n   * By default the current URL is returned. If a destination exists in the\n   * current request, that destination is returned. As such, a destination can\n   * persist across multiple pages.\n   *\n   * @return array\n   *   An associative array containing the key:\n   *   - destination: The value of the current request's 'destination' query\n   *     parameter, if present. This can be either a relative or absolute URL.\n   *     However, for security, redirection to external URLs is not performed.\n   *     If the query parameter isn't present, then the URL of the current\n   *     request is returned.\n   *\n   * @see \\Drupal\\Core\\EventSubscriber\\RedirectResponseSubscriber::checkRedirectUrl()\n   * @ingroup form_api\n   *\/",10],["T_WHITESPACE","\n  ",28],["T_PUBLIC","public",29],["T_WHITESPACE"," ",29],["T_FUNCTION","function",29],["T_WHITESPACE"," ",29],["T_STRING","getAsArray",29],"(",")",";",["T_WHITESPACE","\n\n  ",29],["T_DOC_COMMENT","\/**\n   * Gets the destination as a path.\n   *\n   * To convert to a URL suitable for\n   * \\Symfony\\Component\\HttpFoundation\\RedirectResponse::__construct() use\n   * @code\n   * \\Drupal\\Core\\Url::fromUserInput(\\Drupal::destination()->get())->setAbsolute()->toString()\n   * @endcode\n   *\n   * @return string\n   *\/",31],["T_WHITESPACE","\n  ",41],["T_PUBLIC","public",42],["T_WHITESPACE"," ",42],["T_FUNCTION","function",42],["T_WHITESPACE"," ",42],["T_STRING","get",42],"(",")",";",["T_WHITESPACE","\n\n  ",42],["T_DOC_COMMENT","\/**\n   * Sets the destination as URL.\n   *\n   * This method should be used really rarely, for example views uses it, in\n   * order to override all destination calls in all of its rendering.\n   *\n   * @param string $new_destination\n   *   The new destination.\n   *\n   * @return $this\n   *\/",44],["T_WHITESPACE","\n  ",54],["T_PUBLIC","public",55],["T_WHITESPACE"," ",55],["T_FUNCTION","function",55],["T_WHITESPACE"," ",55],["T_STRING","set",55],"(",["T_VARIABLE","$new_destination",55],")",";",["T_WHITESPACE","\n\n",55],"}",["T_WHITESPACE","\n",57]]