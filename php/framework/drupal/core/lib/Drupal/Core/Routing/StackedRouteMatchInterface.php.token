[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Core",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Routing",3],";",["T_WHITESPACE","\n\n",3],["T_USE","use",5],["T_WHITESPACE"," ",5],["T_STRING","Symfony",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Component",5],["T_NS_SEPARATOR","\\",5],["T_STRING","HttpFoundation",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Request",5],";",["T_WHITESPACE","\n\n",5],["T_DOC_COMMENT","\/**\n * Defines an interface for a stack of route matches.\n *\n * This could be for example used on exception pages.\n *\/",7],["T_WHITESPACE","\n",11],["T_INTERFACE","interface",12],["T_WHITESPACE"," ",12],["T_STRING","StackedRouteMatchInterface",12],["T_WHITESPACE"," ",12],["T_EXTENDS","extends",12],["T_WHITESPACE"," ",12],["T_STRING","RouteMatchInterface",12],["T_WHITESPACE"," ",12],"{",["T_WHITESPACE","\n\n  ",12],["T_DOC_COMMENT","\/**\n   * Gets the current route match.\n   *\n   * @return \\Drupal\\Core\\Routing\\RouteMatchInterface\n   *\/",14],["T_WHITESPACE","\n  ",18],["T_PUBLIC","public",19],["T_WHITESPACE"," ",19],["T_FUNCTION","function",19],["T_WHITESPACE"," ",19],["T_STRING","getCurrentRouteMatch",19],"(",")",";",["T_WHITESPACE","\n\n  ",19],["T_DOC_COMMENT","\/**\n   * Gets the master route match..\n   *\n   * @return \\Drupal\\Core\\Routing\\RouteMatchInterface\n   *\/",21],["T_WHITESPACE","\n  ",25],["T_PUBLIC","public",26],["T_WHITESPACE"," ",26],["T_FUNCTION","function",26],["T_WHITESPACE"," ",26],["T_STRING","getMasterRouteMatch",26],"(",")",";",["T_WHITESPACE","\n\n  ",26],["T_DOC_COMMENT","\/**\n   * Returns the parent route match of the current.\n   *\n   * @return \\Drupal\\Core\\Routing\\RouteMatchInterface|null\n   *   The parent route match or NULL, if it the master route match.\n   *\/",28],["T_WHITESPACE","\n  ",33],["T_PUBLIC","public",34],["T_WHITESPACE"," ",34],["T_FUNCTION","function",34],["T_WHITESPACE"," ",34],["T_STRING","getParentRouteMatch",34],"(",")",";",["T_WHITESPACE","\n\n  ",34],["T_DOC_COMMENT","\/**\n   * Returns a route match from a given request, if possible.\n   *\n   * @param \\Symfony\\Component\\HttpFoundation\\Request $request\n   *   The request.\n   *\n   * @return \\Drupal\\Core\\Routing\\RouteMatchInterface|null\n   *   THe matching route match, or NULL if there is no matching one.\n   *\/",36],["T_WHITESPACE","\n  ",44],["T_PUBLIC","public",45],["T_WHITESPACE"," ",45],["T_FUNCTION","function",45],["T_WHITESPACE"," ",45],["T_STRING","getRouteMatchFromRequest",45],"(",["T_STRING","Request",45],["T_WHITESPACE"," ",45],["T_VARIABLE","$request",45],")",";",["T_WHITESPACE","\n\n",45],"}",["T_WHITESPACE","\n",47]]