[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Core",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Password",3],";",["T_WHITESPACE","\n\n",3],["T_DOC_COMMENT","\/**\n * Secure password hashing functions for user authentication.\n *\/",5],["T_WHITESPACE","\n",7],["T_INTERFACE","interface",8],["T_WHITESPACE"," ",8],["T_STRING","PasswordInterface",8],["T_WHITESPACE"," ",8],"{",["T_WHITESPACE","\n\n  ",8],["T_DOC_COMMENT","\/**\n   * Maximum password length.\n   *\/",10],["T_WHITESPACE","\n  ",12],["T_CONST","const",13],["T_WHITESPACE"," ",13],["T_STRING","PASSWORD_MAX_LENGTH",13],["T_WHITESPACE"," ",13],"=",["T_WHITESPACE"," ",13],["T_LNUMBER","512",13],";",["T_WHITESPACE","\n\n  ",13],["T_DOC_COMMENT","\/**\n   * Hash a password using a secure hash.\n   *\n   * @param string $password\n   *   A plain-text password.\n   *\n   * @return string\n   *   A string containing the hashed password, or FALSE on failure.\n   *\/",15],["T_WHITESPACE","\n  ",23],["T_PUBLIC","public",24],["T_WHITESPACE"," ",24],["T_FUNCTION","function",24],["T_WHITESPACE"," ",24],["T_STRING","hash",24],"(",["T_VARIABLE","$password",24],")",";",["T_WHITESPACE","\n\n  ",24],["T_DOC_COMMENT","\/**\n   * Check whether a plain text password matches a hashed password.\n   *\n   * @param string $password\n   *   A plain-text password\n   * @param string $hash\n   *   A hashed password.\n   *\n   * @return bool\n   *   TRUE if the password is valid, FALSE if not.\n   *\/",26],["T_WHITESPACE","\n  ",36],["T_PUBLIC","public",37],["T_WHITESPACE"," ",37],["T_FUNCTION","function",37],["T_WHITESPACE"," ",37],["T_STRING","check",37],"(",["T_VARIABLE","$password",37],",",["T_WHITESPACE"," ",37],["T_VARIABLE","$hash",37],")",";",["T_WHITESPACE","\n\n  ",37],["T_DOC_COMMENT","\/**\n   * Check whether a hashed password needs to be replaced with a new hash.\n   *\n   * This is typically called during the login process when the plain text\n   * password is available. A new hash is needed when the desired iteration\n   * count has changed by a modification of the password-service in the\n   * dependency injection container or if the user's password hash was\n   * generated in an update like user_update_7000() (see the Drupal 7\n   * documentation).\n   *\n   * @param string $hash\n   *   The existing hash to be checked.\n   *\n   * @return bool\n   *   TRUE if the hash is outdated and needs rehash.\n   *\/",39],["T_WHITESPACE","\n  ",54],["T_PUBLIC","public",55],["T_WHITESPACE"," ",55],["T_FUNCTION","function",55],["T_WHITESPACE"," ",55],["T_STRING","needsRehash",55],"(",["T_VARIABLE","$hash",55],")",";",["T_WHITESPACE","\n\n",55],"}",["T_WHITESPACE","\n",57]]