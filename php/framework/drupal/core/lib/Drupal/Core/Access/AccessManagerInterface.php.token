[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Core",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Access",3],";",["T_WHITESPACE","\n\n",3],["T_USE","use",5],["T_WHITESPACE"," ",5],["T_STRING","Symfony",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Component",5],["T_NS_SEPARATOR","\\",5],["T_STRING","HttpFoundation",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Request",5],";",["T_WHITESPACE","\n",5],["T_USE","use",6],["T_WHITESPACE"," ",6],["T_STRING","Drupal",6],["T_NS_SEPARATOR","\\",6],["T_STRING","Core",6],["T_NS_SEPARATOR","\\",6],["T_STRING","Session",6],["T_NS_SEPARATOR","\\",6],["T_STRING","AccountInterface",6],";",["T_WHITESPACE","\n",6],["T_USE","use",7],["T_WHITESPACE"," ",7],["T_STRING","Drupal",7],["T_NS_SEPARATOR","\\",7],["T_STRING","Core",7],["T_NS_SEPARATOR","\\",7],["T_STRING","Routing",7],["T_NS_SEPARATOR","\\",7],["T_STRING","RouteMatchInterface",7],";",["T_WHITESPACE","\n\n",7],["T_DOC_COMMENT","\/**\n * Provides an interface for attaching and running access check services.\n *\/",9],["T_WHITESPACE","\n",11],["T_INTERFACE","interface",12],["T_WHITESPACE"," ",12],["T_STRING","AccessManagerInterface",12],["T_WHITESPACE"," ",12],"{",["T_WHITESPACE","\n\n  ",12],["T_DOC_COMMENT","\/**\n   * Checks a named route with parameters against applicable access check services.\n   *\n   * Determines whether the route is accessible or not.\n   *\n   * @param string $route_name\n   *   The route to check access to.\n   * @param array $parameters\n   *   Optional array of values to substitute into the route path pattern.\n   * @param \\Drupal\\Core\\Session\\AccountInterface $account\n   *   (optional) Run access checks for this account. Defaults to the current\n   *   user.\n   * @param bool $return_as_object\n   *   (optional) Defaults to FALSE.\n   *\n   * @return bool|\\Drupal\\Core\\Access\\AccessResultInterface\n   *   The access result. Returns a boolean if $return_as_object is FALSE (this\n   *   is the default) and otherwise an AccessResultInterface object.\n   *   When a boolean is returned, the result of AccessInterface::isAllowed() is\n   *   returned, i.e. TRUE means access is explicitly allowed, FALSE means\n   *   access is either explicitly forbidden or \"no opinion\".\n   *\/",14],["T_WHITESPACE","\n  ",35],["T_PUBLIC","public",36],["T_WHITESPACE"," ",36],["T_FUNCTION","function",36],["T_WHITESPACE"," ",36],["T_STRING","checkNamedRoute",36],"(",["T_VARIABLE","$route_name",36],",",["T_WHITESPACE"," ",36],["T_ARRAY","array",36],["T_WHITESPACE"," ",36],["T_VARIABLE","$parameters",36],["T_WHITESPACE"," ",36],"=",["T_WHITESPACE"," ",36],["T_ARRAY","array",36],"(",")",",",["T_WHITESPACE"," ",36],["T_STRING","AccountInterface",36],["T_WHITESPACE"," ",36],["T_VARIABLE","$account",36],["T_WHITESPACE"," ",36],"=",["T_WHITESPACE"," ",36],["T_STRING","NULL",36],",",["T_WHITESPACE"," ",36],["T_VARIABLE","$return_as_object",36],["T_WHITESPACE"," ",36],"=",["T_WHITESPACE"," ",36],["T_STRING","FALSE",36],")",";",["T_WHITESPACE","\n\n  ",36],["T_DOC_COMMENT","\/**\n   * Execute access checks against the incoming request.\n   *\n   * @param Request $request\n   *   The incoming request.\n   * @param \\Drupal\\Core\\Session\\AccountInterface $account\n   *   (optional) Run access checks for this account. Defaults to the current\n   *   user.\n   * @param bool $return_as_object\n   *   (optional) Defaults to FALSE.\n   *\n   * @return bool|\\Drupal\\Core\\Access\\AccessResultInterface\n   *   The access result. Returns a boolean if $return_as_object is FALSE (this\n   *   is the default) and otherwise an AccessResultInterface object.\n   *   When a boolean is returned, the result of AccessInterface::isAllowed() is\n   *   returned, i.e. TRUE means access is explicitly allowed, FALSE means\n   *   access is either explicitly forbidden or \"no opinion\".\n   *\/",38],["T_WHITESPACE","\n  ",55],["T_PUBLIC","public",56],["T_WHITESPACE"," ",56],["T_FUNCTION","function",56],["T_WHITESPACE"," ",56],["T_STRING","checkRequest",56],"(",["T_STRING","Request",56],["T_WHITESPACE"," ",56],["T_VARIABLE","$request",56],",",["T_WHITESPACE"," ",56],["T_STRING","AccountInterface",56],["T_WHITESPACE"," ",56],["T_VARIABLE","$account",56],["T_WHITESPACE"," ",56],"=",["T_WHITESPACE"," ",56],["T_STRING","NULL",56],",",["T_WHITESPACE"," ",56],["T_VARIABLE","$return_as_object",56],["T_WHITESPACE"," ",56],"=",["T_WHITESPACE"," ",56],["T_STRING","FALSE",56],")",";",["T_WHITESPACE","\n\n  ",56],["T_DOC_COMMENT","\/**\n   * Checks a route against applicable access check services.\n   *\n   * Determines whether the route is accessible or not.\n   *\n   * @param \\Drupal\\Core\\Routing\\RouteMatchInterface $route_match\n   *   The route match.\n   * @param \\Drupal\\Core\\Session\\AccountInterface $account\n   *   (optional) Run access checks for this account. Defaults to the current\n   *   user.\n   * @param \\Symfony\\Component\\HttpFoundation\\Request $request\n   *   Optional, a request. Only supply this parameter when checking the\n   *   incoming request, do not specify when checking routes on output.\n   * @param bool $return_as_object\n   *   (optional) Defaults to FALSE.\n   *\n   * @return bool|\\Drupal\\Core\\Access\\AccessResultInterface\n   *   The access result. Returns a boolean if $return_as_object is FALSE (this\n   *   is the default) and otherwise an AccessResultInterface object.\n   *   When a boolean is returned, the result of AccessInterface::isAllowed() is\n   *   returned, i.e. TRUE means access is explicitly allowed, FALSE means\n   *   access is either explicitly forbidden or \"no opinion\".\n   *\/",58],["T_WHITESPACE","\n  ",80],["T_PUBLIC","public",81],["T_WHITESPACE"," ",81],["T_FUNCTION","function",81],["T_WHITESPACE"," ",81],["T_STRING","check",81],"(",["T_STRING","RouteMatchInterface",81],["T_WHITESPACE"," ",81],["T_VARIABLE","$route_match",81],",",["T_WHITESPACE"," ",81],["T_STRING","AccountInterface",81],["T_WHITESPACE"," ",81],["T_VARIABLE","$account",81],["T_WHITESPACE"," ",81],"=",["T_WHITESPACE"," ",81],["T_STRING","NULL",81],",",["T_WHITESPACE"," ",81],["T_STRING","Request",81],["T_WHITESPACE"," ",81],["T_VARIABLE","$request",81],["T_WHITESPACE"," ",81],"=",["T_WHITESPACE"," ",81],["T_STRING","NULL",81],",",["T_WHITESPACE"," ",81],["T_VARIABLE","$return_as_object",81],["T_WHITESPACE"," ",81],"=",["T_WHITESPACE"," ",81],["T_STRING","FALSE",81],")",";",["T_WHITESPACE","\n\n",81],"}",["T_WHITESPACE","\n",83]]