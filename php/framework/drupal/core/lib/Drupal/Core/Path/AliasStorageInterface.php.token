[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Core",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Path",3],";",["T_WHITESPACE","\n\n",3],["T_USE","use",5],["T_WHITESPACE"," ",5],["T_STRING","Drupal",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Core",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Language",5],["T_NS_SEPARATOR","\\",5],["T_STRING","LanguageInterface",5],";",["T_WHITESPACE","\n\n",5],["T_DOC_COMMENT","\/**\n * Provides a class for CRUD operations on path aliases.\n *\/",7],["T_WHITESPACE","\n",9],["T_INTERFACE","interface",10],["T_WHITESPACE"," ",10],["T_STRING","AliasStorageInterface",10],["T_WHITESPACE"," ",10],"{",["T_WHITESPACE","\n\n  ",10],["T_DOC_COMMENT","\/**\n   * Saves a path alias to the database.\n   *\n   * @param string $source\n   *   The internal system path.\n   * @param string $alias\n   *   The URL alias.\n   * @param string $langcode\n   *   (optional) The language code of the alias.\n   * @param int|null $pid\n   *   (optional) Unique path alias identifier.\n   *\n   * @return array|false\n   *   FALSE if the path could not be saved or an associative array containing\n   *   the following keys:\n   *   - source (string): The internal system path with a starting slash.\n   *   - alias (string): The URL alias with a starting slash.\n   *   - pid (int): Unique path alias identifier.\n   *   - langcode (string): The language code of the alias.\n   *   - original: For updates, an array with source, alias and langcode with\n   *     the previous values.\n   *\n   * @thrown \\InvalidArgumentException\n   *   Thrown when either the source or alias has not a starting slash.\n   *\/",12],["T_WHITESPACE","\n  ",36],["T_PUBLIC","public",37],["T_WHITESPACE"," ",37],["T_FUNCTION","function",37],["T_WHITESPACE"," ",37],["T_STRING","save",37],"(",["T_VARIABLE","$source",37],",",["T_WHITESPACE"," ",37],["T_VARIABLE","$alias",37],",",["T_WHITESPACE"," ",37],["T_VARIABLE","$langcode",37],["T_WHITESPACE"," ",37],"=",["T_WHITESPACE"," ",37],["T_STRING","LanguageInterface",37],["T_DOUBLE_COLON","::",37],["T_STRING","LANGCODE_NOT_SPECIFIED",37],",",["T_WHITESPACE"," ",37],["T_VARIABLE","$pid",37],["T_WHITESPACE"," ",37],"=",["T_WHITESPACE"," ",37],["T_STRING","NULL",37],")",";",["T_WHITESPACE","\n\n  ",37],["T_DOC_COMMENT","\/**\n   * Fetches a specific URL alias from the database.\n   *\n   * The default implementation performs case-insensitive matching on the\n   * 'source' and 'alias' strings.\n   *\n   * @param array $conditions\n   *   An array of query conditions.\n   *\n   * @return array|false\n   *   FALSE if no alias was found or an associative array containing the\n   *   following keys:\n   *   - source (string): The internal system path with a starting slash.\n   *   - alias (string): The URL alias with a starting slash.\n   *   - pid (int): Unique path alias identifier.\n   *   - langcode (string): The language code of the alias.\n   *\/",39],["T_WHITESPACE","\n  ",55],["T_PUBLIC","public",56],["T_WHITESPACE"," ",56],["T_FUNCTION","function",56],["T_WHITESPACE"," ",56],["T_STRING","load",56],"(",["T_VARIABLE","$conditions",56],")",";",["T_WHITESPACE","\n\n  ",56],["T_DOC_COMMENT","\/**\n   * Deletes a URL alias.\n   *\n   * The default implementation performs case-insensitive matching on the\n   * 'source' and 'alias' strings.\n   *\n   * @param array $conditions\n   *   An array of criteria.\n   *\/",58],["T_WHITESPACE","\n  ",66],["T_PUBLIC","public",67],["T_WHITESPACE"," ",67],["T_FUNCTION","function",67],["T_WHITESPACE"," ",67],["T_STRING","delete",67],"(",["T_VARIABLE","$conditions",67],")",";",["T_WHITESPACE","\n\n  ",67],["T_DOC_COMMENT","\/**\n   * Pre-loads path alias information for a given list of source paths.\n   *\n   * @param array $preloaded\n   *   Paths that need preloading of aliases.\n   * @param string $langcode\n   *   Language code to search the path with. If there's no path defined for\n   *   that language it will search paths without language.\n   *\n   * @return string[]\n   *   Source (keys) to alias (values) mapping.\n   *\/",69],["T_WHITESPACE","\n  ",80],["T_PUBLIC","public",81],["T_WHITESPACE"," ",81],["T_FUNCTION","function",81],["T_WHITESPACE"," ",81],["T_STRING","preloadPathAlias",81],"(",["T_VARIABLE","$preloaded",81],",",["T_WHITESPACE"," ",81],["T_VARIABLE","$langcode",81],")",";",["T_WHITESPACE","\n\n  ",81],["T_DOC_COMMENT","\/**\n   * Returns an alias of Drupal system URL.\n   *\n   * The default implementation performs case-insensitive matching on the\n   * 'source' and 'alias' strings.\n   *\n   * @param string $path\n   *   The path to investigate for corresponding path aliases.\n   * @param string $langcode\n   *   Language code to search the path with. If there's no path defined for\n   *   that language it will search paths without language.\n   *\n   * @return string|false\n   *   A path alias, or FALSE if no path was found.\n   *\/",83],["T_WHITESPACE","\n  ",97],["T_PUBLIC","public",98],["T_WHITESPACE"," ",98],["T_FUNCTION","function",98],["T_WHITESPACE"," ",98],["T_STRING","lookupPathAlias",98],"(",["T_VARIABLE","$path",98],",",["T_WHITESPACE"," ",98],["T_VARIABLE","$langcode",98],")",";",["T_WHITESPACE","\n\n  ",98],["T_DOC_COMMENT","\/**\n   * Returns Drupal system URL of an alias.\n   *\n   * The default implementation performs case-insensitive matching on the\n   * 'source' and 'alias' strings.\n   *\n   * @param string $path\n   *   The path to investigate for corresponding system URLs.\n   * @param string $langcode\n   *   Language code to search the path with. If there's no path defined for\n   *   that language it will search paths without language.\n   *\n   * @return string|false\n   *   A Drupal system path, or FALSE if no path was found.\n   *\/",100],["T_WHITESPACE","\n  ",114],["T_PUBLIC","public",115],["T_WHITESPACE"," ",115],["T_FUNCTION","function",115],["T_WHITESPACE"," ",115],["T_STRING","lookupPathSource",115],"(",["T_VARIABLE","$path",115],",",["T_WHITESPACE"," ",115],["T_VARIABLE","$langcode",115],")",";",["T_WHITESPACE","\n\n  ",115],["T_DOC_COMMENT","\/**\n   * Checks if alias already exists.\n   *\n   * The default implementation performs case-insensitive matching on the\n   * 'source' and 'alias' strings.\n   *\n   * @param string $alias\n   *   Alias to check against.\n   * @param string $langcode\n   *   Language of the alias.\n   * @param string|null $source\n   *   (optional) Path that alias is to be assigned to.\n   *\n   * @return bool\n   *   TRUE if alias already exists and FALSE otherwise.\n   *\/",117],["T_WHITESPACE","\n  ",132],["T_PUBLIC","public",133],["T_WHITESPACE"," ",133],["T_FUNCTION","function",133],["T_WHITESPACE"," ",133],["T_STRING","aliasExists",133],"(",["T_VARIABLE","$alias",133],",",["T_WHITESPACE"," ",133],["T_VARIABLE","$langcode",133],",",["T_WHITESPACE"," ",133],["T_VARIABLE","$source",133],["T_WHITESPACE"," ",133],"=",["T_WHITESPACE"," ",133],["T_STRING","NULL",133],")",";",["T_WHITESPACE","\n\n  ",133],["T_DOC_COMMENT","\/**\n   * Checks if there are any aliases with language defined.\n   *\n   * @return bool\n   *   TRUE if aliases with language exist.\n   *\/",135],["T_WHITESPACE","\n  ",140],["T_PUBLIC","public",141],["T_WHITESPACE"," ",141],["T_FUNCTION","function",141],["T_WHITESPACE"," ",141],["T_STRING","languageAliasExists",141],"(",")",";",["T_WHITESPACE","\n\n  ",141],["T_DOC_COMMENT","\/**\n   * Loads aliases for admin listing.\n   *\n   * @param array $header\n   *   Table header.\n   * @param string|null $keys\n   *   (optional) Search keyword that may include one or more '*' as wildcard\n   *   values.\n   *\n   * @return array\n   *   Array of items to be displayed on the current page.\n   *\/",143],["T_WHITESPACE","\n  ",154],["T_PUBLIC","public",155],["T_WHITESPACE"," ",155],["T_FUNCTION","function",155],["T_WHITESPACE"," ",155],["T_STRING","getAliasesForAdminListing",155],"(",["T_VARIABLE","$header",155],",",["T_WHITESPACE"," ",155],["T_VARIABLE","$keys",155],["T_WHITESPACE"," ",155],"=",["T_WHITESPACE"," ",155],["T_STRING","NULL",155],")",";",["T_WHITESPACE","\n\n  ",155],["T_DOC_COMMENT","\/**\n   * Check if any alias exists starting with $initial_substring.\n   *\n   * @param string $initial_substring\n   *   Initial path substring to test against.\n   *\n   * @return bool\n   *   TRUE if any alias exists, FALSE otherwise.\n   *\/",157],["T_WHITESPACE","\n  ",165],["T_PUBLIC","public",166],["T_WHITESPACE"," ",166],["T_FUNCTION","function",166],["T_WHITESPACE"," ",166],["T_STRING","pathHasMatchingAlias",166],"(",["T_VARIABLE","$initial_substring",166],")",";",["T_WHITESPACE","\n\n",166],"}",["T_WHITESPACE","\n",168]]