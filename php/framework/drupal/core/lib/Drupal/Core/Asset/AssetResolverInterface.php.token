[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Core",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Asset",3],";",["T_WHITESPACE","\n\n",3],["T_DOC_COMMENT","\/**\n * Resolves asset libraries into concrete CSS and JavaScript assets.\n *\n * Given an attached assets collection (to be loaded for the current response),\n * the asset resolver can resolve those asset libraries into a list of concrete\n * CSS and JavaScript assets.\n *\n * In other words: this allows developers to translate Drupal's asset\n * abstraction (asset libraries) into concrete assets.\n *\n * @see \\Drupal\\Core\\Asset\\AttachedAssetsInterface\n * @see \\Drupal\\Core\\Asset\\LibraryDependencyResolverInterface\n *\/",5],["T_WHITESPACE","\n",17],["T_INTERFACE","interface",18],["T_WHITESPACE"," ",18],["T_STRING","AssetResolverInterface",18],["T_WHITESPACE"," ",18],"{",["T_WHITESPACE","\n\n  ",18],["T_DOC_COMMENT","\/**\n   * Returns the CSS assets for the current response's libraries.\n   *\n   * It returns the CSS assets in order, according to the SMACSS categories\n   * specified in the assets' weights:\n   * - CSS_BASE\n   * - CSS_LAYOUT\n   * - CSS_COMPONENT\n   * - CSS_STATE\n   * - CSS_THEME\n   * @see https:\/\/www.drupal.org\/node\/1887918#separate-concerns\n   * This ensures proper cascading of styles so themes can easily override\n   * module styles through CSS selectors.\n   *\n   * Themes may replace module-defined CSS files by adding a stylesheet with the\n   * same filename. For example, themes\/bartik\/system-menus.css would replace\n   * modules\/system\/system-menus.css. This allows themes to override complete\n   * CSS files, rather than specific selectors, when necessary.\n   *\n   * Also invokes hook_css_alter(), to allow CSS assets to be altered.\n   *\n   * @param \\Drupal\\Core\\Asset\\AttachedAssetsInterface $assets\n   *   The assets attached to the current response.\n   * @param bool $optimize\n   *   Whether to apply the CSS asset collection optimizer, to return an\n   *   optimized CSS asset collection rather than an unoptimized one.\n   *\n   * @return array\n   *   A (possibly optimized) collection of CSS assets.\n   *\/",20],["T_WHITESPACE","\n  ",49],["T_PUBLIC","public",50],["T_WHITESPACE"," ",50],["T_FUNCTION","function",50],["T_WHITESPACE"," ",50],["T_STRING","getCssAssets",50],"(",["T_STRING","AttachedAssetsInterface",50],["T_WHITESPACE"," ",50],["T_VARIABLE","$assets",50],",",["T_WHITESPACE"," ",50],["T_VARIABLE","$optimize",50],")",";",["T_WHITESPACE","\n\n  ",50],["T_DOC_COMMENT","\/**\n   * Returns the JavaScript assets for the current response's libraries.\n   *\n   * References to JavaScript files are placed in a certain order: first, all\n   * 'core' files, then all 'module' and finally all 'theme' JavaScript files\n   * are added to the page. Then, all settings are output, followed by 'inline'\n   * JavaScript code. If running update.php, all preprocessing is disabled.\n   *\n   * Note that hook_js_alter(&$javascript) is called during this function call\n   * to allow alterations of the JavaScript during its presentation. The correct\n   * way to add JavaScript during hook_js_alter() is to add another element to\n   * the $javascript array, deriving from drupal_js_defaults(). See\n   * locale_js_alter() for an example of this.\n   *\n   * @param \\Drupal\\Core\\Asset\\AttachedAssetsInterface $assets\n   *   The assets attached to the current response.\n   *   Note that this object is modified to reflect the final JavaScript\n   *   settings assets.\n   * @param bool $optimize\n   *   Whether to apply the JavaScript asset collection optimizer, to return\n   *   optimized JavaScript asset collections rather than an unoptimized ones.\n   *\n   * @return array\n   *   A nested array containing 2 values:\n   *   - at index zero: the (possibly optimized) collection of JavaScript assets\n   *     for the top of the page\n   *   - at index one: the (possibly optimized) collection of JavaScript assets\n   *     for the bottom of the page\n   *\/",52],["T_WHITESPACE","\n  ",80],["T_PUBLIC","public",81],["T_WHITESPACE"," ",81],["T_FUNCTION","function",81],["T_WHITESPACE"," ",81],["T_STRING","getJsAssets",81],"(",["T_STRING","AttachedAssetsInterface",81],["T_WHITESPACE"," ",81],["T_VARIABLE","$assets",81],",",["T_WHITESPACE"," ",81],["T_VARIABLE","$optimize",81],")",";",["T_WHITESPACE","\n\n",81],"}",["T_WHITESPACE","\n",83]]