[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Core",3],["T_NS_SEPARATOR","\\",3],["T_STRING","KeyValueStore",3],";",["T_WHITESPACE","\n\n",3],["T_DOC_COMMENT","\/**\n * Defines the interface for key\/value store implementations.\n *\/",5],["T_WHITESPACE","\n",7],["T_INTERFACE","interface",8],["T_WHITESPACE"," ",8],["T_STRING","KeyValueStoreInterface",8],["T_WHITESPACE"," ",8],"{",["T_WHITESPACE","\n\n  ",8],["T_DOC_COMMENT","\/**\n   * Returns the name of this collection.\n   *\n   * @return string\n   *   The name of this collection.\n   *\/",10],["T_WHITESPACE","\n  ",15],["T_PUBLIC","public",16],["T_WHITESPACE"," ",16],["T_FUNCTION","function",16],["T_WHITESPACE"," ",16],["T_STRING","getCollectionName",16],"(",")",";",["T_WHITESPACE","\n\n  ",16],["T_DOC_COMMENT","\/**\n   * Returns whether a given key exists in the store.\n   *\n   * @param string $key\n   *   The key to check.\n   *\n   * @return bool\n   *   TRUE if the key exists, FALSE otherwise.\n   *\/",18],["T_WHITESPACE","\n  ",26],["T_PUBLIC","public",27],["T_WHITESPACE"," ",27],["T_FUNCTION","function",27],["T_WHITESPACE"," ",27],["T_STRING","has",27],"(",["T_VARIABLE","$key",27],")",";",["T_WHITESPACE","\n\n  ",27],["T_DOC_COMMENT","\/**\n   * Returns the stored value for a given key.\n   *\n   * @param string $key\n   *   The key of the data to retrieve.\n   * @param mixed $default\n   *   The default value to use if the key is not found.\n   *\n   * @return mixed\n   *   The stored value, or the default value if no value exists.\n   *\/",29],["T_WHITESPACE","\n  ",39],["T_PUBLIC","public",40],["T_WHITESPACE"," ",40],["T_FUNCTION","function",40],["T_WHITESPACE"," ",40],["T_STRING","get",40],"(",["T_VARIABLE","$key",40],",",["T_WHITESPACE"," ",40],["T_VARIABLE","$default",40],["T_WHITESPACE"," ",40],"=",["T_WHITESPACE"," ",40],["T_STRING","NULL",40],")",";",["T_WHITESPACE","\n\n  ",40],["T_DOC_COMMENT","\/**\n   * Returns the stored key\/value pairs for a given set of keys.\n   *\n   * @param array $keys\n   *   A list of keys to retrieve.\n   *\n   * @return array\n   *   An associative array of items successfully returned, indexed by key.\n   *\n   * @todo What's returned for non-existing keys?\n   *\/",42],["T_WHITESPACE","\n  ",52],["T_PUBLIC","public",53],["T_WHITESPACE"," ",53],["T_FUNCTION","function",53],["T_WHITESPACE"," ",53],["T_STRING","getMultiple",53],"(",["T_ARRAY","array",53],["T_WHITESPACE"," ",53],["T_VARIABLE","$keys",53],")",";",["T_WHITESPACE","\n\n  ",53],["T_DOC_COMMENT","\/**\n   * Returns all stored key\/value pairs in the collection.\n   *\n   * @return array\n   *   An associative array containing all stored items in the collection.\n   *\/",55],["T_WHITESPACE","\n  ",60],["T_PUBLIC","public",61],["T_WHITESPACE"," ",61],["T_FUNCTION","function",61],["T_WHITESPACE"," ",61],["T_STRING","getAll",61],"(",")",";",["T_WHITESPACE","\n\n  ",61],["T_DOC_COMMENT","\/**\n   * Saves a value for a given key.\n   *\n   * @param string $key\n   *   The key of the data to store.\n   * @param mixed $value\n   *   The data to store.\n   *\/",63],["T_WHITESPACE","\n  ",70],["T_PUBLIC","public",71],["T_WHITESPACE"," ",71],["T_FUNCTION","function",71],["T_WHITESPACE"," ",71],["T_STRING","set",71],"(",["T_VARIABLE","$key",71],",",["T_WHITESPACE"," ",71],["T_VARIABLE","$value",71],")",";",["T_WHITESPACE","\n\n  ",71],["T_DOC_COMMENT","\/**\n   * Saves a value for a given key if it does not exist yet.\n   *\n   * @param string $key\n   *   The key of the data to store.\n   * @param mixed $value\n   *   The data to store.\n   *\n   * @return bool\n   *   TRUE if the data was set, FALSE if it already existed.\n   *\/",73],["T_WHITESPACE","\n  ",83],["T_PUBLIC","public",84],["T_WHITESPACE"," ",84],["T_FUNCTION","function",84],["T_WHITESPACE"," ",84],["T_STRING","setIfNotExists",84],"(",["T_VARIABLE","$key",84],",",["T_WHITESPACE"," ",84],["T_VARIABLE","$value",84],")",";",["T_WHITESPACE","\n\n  ",84],["T_DOC_COMMENT","\/**\n   * Saves key\/value pairs.\n   *\n   * @param array $data\n   *   An associative array of key\/value pairs.\n   *\/",86],["T_WHITESPACE","\n  ",91],["T_PUBLIC","public",92],["T_WHITESPACE"," ",92],["T_FUNCTION","function",92],["T_WHITESPACE"," ",92],["T_STRING","setMultiple",92],"(",["T_ARRAY","array",92],["T_WHITESPACE"," ",92],["T_VARIABLE","$data",92],")",";",["T_WHITESPACE","\n\n  ",92],["T_DOC_COMMENT","\/**\n   * Renames a key.\n   *\n   * @param string $key\n   *   The key to rename.\n   * @param string $new_key\n   *   The new key name.\n   *\/",94],["T_WHITESPACE","\n  ",101],["T_PUBLIC","public",102],["T_WHITESPACE"," ",102],["T_FUNCTION","function",102],["T_WHITESPACE"," ",102],["T_STRING","rename",102],"(",["T_VARIABLE","$key",102],",",["T_WHITESPACE"," ",102],["T_VARIABLE","$new_key",102],")",";",["T_WHITESPACE","\n\n  ",102],["T_DOC_COMMENT","\/**\n   * Deletes an item from the key\/value store.\n   *\n   * @param string $key\n   *   The item name to delete.\n   *\/",104],["T_WHITESPACE","\n  ",109],["T_PUBLIC","public",110],["T_WHITESPACE"," ",110],["T_FUNCTION","function",110],["T_WHITESPACE"," ",110],["T_STRING","delete",110],"(",["T_VARIABLE","$key",110],")",";",["T_WHITESPACE","\n\n  ",110],["T_DOC_COMMENT","\/**\n   * Deletes multiple items from the key\/value store.\n   *\n   * @param array $keys\n   *   A list of item names to delete.\n   *\/",112],["T_WHITESPACE","\n  ",117],["T_PUBLIC","public",118],["T_WHITESPACE"," ",118],["T_FUNCTION","function",118],["T_WHITESPACE"," ",118],["T_STRING","deleteMultiple",118],"(",["T_ARRAY","array",118],["T_WHITESPACE"," ",118],["T_VARIABLE","$keys",118],")",";",["T_WHITESPACE","\n\n  ",118],["T_DOC_COMMENT","\/**\n   * Deletes all items from the key\/value store.\n   *\/",120],["T_WHITESPACE","\n  ",122],["T_PUBLIC","public",123],["T_WHITESPACE"," ",123],["T_FUNCTION","function",123],["T_WHITESPACE"," ",123],["T_STRING","deleteAll",123],"(",")",";",["T_WHITESPACE","\n\n",123],"}",["T_WHITESPACE","\n",125]]