[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Core",3],["T_NS_SEPARATOR","\\",3],["T_STRING","KeyValueStore",3],";",["T_WHITESPACE","\n\n",3],["T_DOC_COMMENT","\/**\n * Defines the key\/value store factory interface.\n *\/",5],["T_WHITESPACE","\n",7],["T_INTERFACE","interface",8],["T_WHITESPACE"," ",8],["T_STRING","KeyValueFactoryInterface",8],["T_WHITESPACE"," ",8],"{",["T_WHITESPACE","\n\n  ",8],["T_DOC_COMMENT","\/**\n   * Constructs a new key\/value store for a given collection name.\n   *\n   * @param string $collection\n   *   The name of the collection holding key and value pairs.\n   *\n   * @return \\Drupal\\Core\\KeyValueStore\\KeyValueStoreInterface\n   *   A key\/value store implementation for the given $collection.\n   *\/",10],["T_WHITESPACE","\n  ",18],["T_PUBLIC","public",19],["T_WHITESPACE"," ",19],["T_FUNCTION","function",19],["T_WHITESPACE"," ",19],["T_STRING","get",19],"(",["T_VARIABLE","$collection",19],")",";",["T_WHITESPACE","\n\n",19],"}",["T_WHITESPACE","\n",21]]