[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Core",3],["T_NS_SEPARATOR","\\",3],["T_STRING","DependencyInjection",3],";",["T_WHITESPACE","\n\n",3],["T_DOC_COMMENT","\/**\n * Provides an interface to get a instance of a class with dependency injection.\n *\/",5],["T_WHITESPACE","\n",7],["T_INTERFACE","interface",8],["T_WHITESPACE"," ",8],["T_STRING","ClassResolverInterface",8],["T_WHITESPACE"," ",8],"{",["T_WHITESPACE","\n\n  ",8],["T_DOC_COMMENT","\/**\n   * Returns a class instance with a given class definition.\n   *\n   * In contrast to controllers you don't specify a method.\n   *\n   * @param string $definition\n   *   A class name or service name.\n   *\n   * @return object\n   *   The instance of the class.\n   *\n   * @throws \\InvalidArgumentException\n   *   If $class is not a valid service identifier and the class does not exist.\n   *\/",10],["T_WHITESPACE","\n  ",23],["T_PUBLIC","public",24],["T_WHITESPACE"," ",24],["T_FUNCTION","function",24],["T_WHITESPACE"," ",24],["T_STRING","getInstanceFromDefinition",24],"(",["T_VARIABLE","$definition",24],")",";",["T_WHITESPACE","\n\n",24],"}",["T_WHITESPACE","\n",26]]