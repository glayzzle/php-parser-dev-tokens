[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Core",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Validation",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Annotation",3],";",["T_WHITESPACE","\n\n",3],["T_USE","use",5],["T_WHITESPACE"," ",5],["T_STRING","Drupal",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Component",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Annotation",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Plugin",5],";",["T_WHITESPACE","\n\n",5],["T_DOC_COMMENT","\/**\n * Defines a validation constraint annotation object.\n *\n * Plugin Namespace: Plugin\\Validation\\Constraint\n *\n * For a working example, see\n * \\Drupal\\Core\\Validation\\Plugin\\Validation\\Constraint\\LengthConstraint\n *\n * @see \\Drupal\\Core\\Validation\\ConstraintManager\n * @see \\Symfony\\Component\\Validator\\Constraint\n * @see hook_validation_constraint_alter()\n * @see plugin_api\n *\n * @Annotation\n *\/",7],["T_WHITESPACE","\n",21],["T_CLASS","class",22],["T_WHITESPACE"," ",22],["T_STRING","Constraint",22],["T_WHITESPACE"," ",22],["T_EXTENDS","extends",22],["T_WHITESPACE"," ",22],["T_STRING","Plugin",22],["T_WHITESPACE"," ",22],"{",["T_WHITESPACE","\n\n  ",22],["T_DOC_COMMENT","\/**\n   * The constraint plugin ID.\n   *\n   * @var string\n   *\/",24],["T_WHITESPACE","\n  ",28],["T_PUBLIC","public",29],["T_WHITESPACE"," ",29],["T_VARIABLE","$id",29],";",["T_WHITESPACE","\n\n  ",29],["T_DOC_COMMENT","\/**\n   * The human-readable name of the constraint plugin.\n   *\n   * @ingroup plugin_translatable\n   *\n   * @var string|\\Drupal\\Core\\Annotation\\Translation\n   *\/",31],["T_WHITESPACE","\n  ",37],["T_PUBLIC","public",38],["T_WHITESPACE"," ",38],["T_VARIABLE","$label",38],";",["T_WHITESPACE","\n\n  ",38],["T_DOC_COMMENT","\/**\n   * An array of DataType plugin IDs for which this constraint applies. Valid\n   * values are any types registered by the typed data API, or an array of\n   * multiple type names. For supporting all types, FALSE may be specified. The\n   * key defaults to an empty array, which indicates no types are supported.\n   *\n   * @var string|string[]|false\n   *\n   * @see \\Drupal\\Core\\TypedData\\Annotation\\DataType\n   *\/",40],["T_WHITESPACE","\n  ",49],["T_PUBLIC","public",50],["T_WHITESPACE"," ",50],["T_VARIABLE","$type",50],["T_WHITESPACE"," ",50],"=",["T_WHITESPACE"," ",50],"[","]",";",["T_WHITESPACE","\n\n",50],"}",["T_WHITESPACE","\n",52]]