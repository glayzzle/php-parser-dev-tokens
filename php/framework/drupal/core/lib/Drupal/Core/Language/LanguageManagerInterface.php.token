[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Core",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Language",3],";",["T_WHITESPACE","\n\n",3],["T_USE","use",5],["T_WHITESPACE"," ",5],["T_STRING","Drupal",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Core",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Url",5],";",["T_WHITESPACE","\n\n",5],["T_DOC_COMMENT","\/**\n * Common interface for the language manager service.\n *\/",7],["T_WHITESPACE","\n",9],["T_INTERFACE","interface",10],["T_WHITESPACE"," ",10],["T_STRING","LanguageManagerInterface",10],["T_WHITESPACE"," ",10],"{",["T_WHITESPACE","\n\n  ",10],["T_DOC_COMMENT","\/**\n   * Returns whether or not the site has more than one language added.\n   *\n   * @return bool\n   *   TRUE if more than one language is added, FALSE otherwise.\n   *\/",12],["T_WHITESPACE","\n  ",17],["T_PUBLIC","public",18],["T_WHITESPACE"," ",18],["T_FUNCTION","function",18],["T_WHITESPACE"," ",18],["T_STRING","isMultilingual",18],"(",")",";",["T_WHITESPACE","\n\n  ",18],["T_DOC_COMMENT","\/**\n   * Returns an array of the available language types.\n   *\n   * @return array\n   *   An array of language type machine names.\n   *\/",20],["T_WHITESPACE","\n  ",25],["T_PUBLIC","public",26],["T_WHITESPACE"," ",26],["T_FUNCTION","function",26],["T_WHITESPACE"," ",26],["T_STRING","getLanguageTypes",26],"(",")",";",["T_WHITESPACE","\n\n  ",26],["T_DOC_COMMENT","\/**\n   * Returns information about all defined language types.\n   *\n   * @return array\n   *   An associative array of language type information arrays keyed by\n   *   language type machine name, in the format of\n   *   hook_language_types_info(). In some implementing classes, this is based\n   *   on information from hook_language_types_info() and\n   *   hook_language_types_info_alter().\n   *\/",28],["T_WHITESPACE","\n  ",37],["T_PUBLIC","public",38],["T_WHITESPACE"," ",38],["T_FUNCTION","function",38],["T_WHITESPACE"," ",38],["T_STRING","getDefinedLanguageTypesInfo",38],"(",")",";",["T_WHITESPACE","\n\n  ",38],["T_DOC_COMMENT","\/**\n   * Returns the current language for the given type.\n   *\n   * @param string $type\n   *   (optional) The language type; e.g., the interface or the content\n   *   language. Defaults to\n   *   \\Drupal\\Core\\Language\\LanguageInterface::TYPE_INTERFACE.\n   *\n   * @return \\Drupal\\Core\\Language\\LanguageInterface\n   *   The current language object for the given type of language.\n   *\/",40],["T_WHITESPACE","\n  ",50],["T_PUBLIC","public",51],["T_WHITESPACE"," ",51],["T_FUNCTION","function",51],["T_WHITESPACE"," ",51],["T_STRING","getCurrentLanguage",51],"(",["T_VARIABLE","$type",51],["T_WHITESPACE"," ",51],"=",["T_WHITESPACE"," ",51],["T_STRING","LanguageInterface",51],["T_DOUBLE_COLON","::",51],["T_STRING","TYPE_INTERFACE",51],")",";",["T_WHITESPACE","\n\n  ",51],["T_DOC_COMMENT","\/**\n   * Resets the given language type or all types if none specified.\n   *\n   * @param string|null $type\n   *   (optional) The language type to reset as a string, e.g.,\n   *   LanguageInterface::TYPE_INTERFACE, or NULL to reset all language types.\n   *   Defaults to NULL.\n   *\n   * @return \\Drupal\\Core\\Language\\LanguageManagerInterface\n   *   The language manager that has been reset.\n   *\/",53],["T_WHITESPACE","\n  ",63],["T_PUBLIC","public",64],["T_WHITESPACE"," ",64],["T_FUNCTION","function",64],["T_WHITESPACE"," ",64],["T_STRING","reset",64],"(",["T_VARIABLE","$type",64],["T_WHITESPACE"," ",64],"=",["T_WHITESPACE"," ",64],["T_STRING","NULL",64],")",";",["T_WHITESPACE","\n\n  ",64],["T_DOC_COMMENT","\/**\n   * Returns a language object representing the site's default language.\n   *\n   * @return \\Drupal\\Core\\Language\\LanguageInterface\n   *   A language object.\n   *\/",66],["T_WHITESPACE","\n  ",71],["T_PUBLIC","public",72],["T_WHITESPACE"," ",72],["T_FUNCTION","function",72],["T_WHITESPACE"," ",72],["T_STRING","getDefaultLanguage",72],"(",")",";",["T_WHITESPACE","\n\n  ",72],["T_DOC_COMMENT","\/**\n   * Returns a list of languages set up on the site.\n   *\n   * @param int $flags\n   *   (optional) Specifies the state of the languages that have to be returned.\n   *   It can be: LanguageInterface::STATE_CONFIGURABLE,\n   *   LanguageInterface::STATE_LOCKED, or LanguageInterface::STATE_ALL.\n   *\n   * @return \\Drupal\\Core\\Language\\LanguageInterface[]\n   *   An associative array of languages, keyed by the language code.\n   *\/",74],["T_WHITESPACE","\n  ",84],["T_PUBLIC","public",85],["T_WHITESPACE"," ",85],["T_FUNCTION","function",85],["T_WHITESPACE"," ",85],["T_STRING","getLanguages",85],"(",["T_VARIABLE","$flags",85],["T_WHITESPACE"," ",85],"=",["T_WHITESPACE"," ",85],["T_STRING","LanguageInterface",85],["T_DOUBLE_COLON","::",85],["T_STRING","STATE_CONFIGURABLE",85],")",";",["T_WHITESPACE","\n\n  ",85],["T_DOC_COMMENT","\/**\n   * Returns a list of languages set up on the site in their native form.\n   *\n   * @return \\Drupal\\Core\\Language\\LanguageInterface[]\n   *   An associative array of languages, keyed by the language code, ordered\n   *   by weight ascending and name ascending.\n   *\/",87],["T_WHITESPACE","\n  ",93],["T_PUBLIC","public",94],["T_WHITESPACE"," ",94],["T_FUNCTION","function",94],["T_WHITESPACE"," ",94],["T_STRING","getNativeLanguages",94],"(",")",";",["T_WHITESPACE","\n\n  ",94],["T_DOC_COMMENT","\/**\n   * Returns a language object from the given language code.\n   *\n   * @param string $langcode\n   *   The language code.\n   *\n   * @return \\Drupal\\core\\Language\\LanguageInterface|null\n   *   A fully-populated language object or NULL.\n   *\/",96],["T_WHITESPACE","\n  ",104],["T_PUBLIC","public",105],["T_WHITESPACE"," ",105],["T_FUNCTION","function",105],["T_WHITESPACE"," ",105],["T_STRING","getLanguage",105],"(",["T_VARIABLE","$langcode",105],")",";",["T_WHITESPACE","\n\n  ",105],["T_DOC_COMMENT","\/**\n   * Produced the printed name for a language for display.\n   *\n   * @param string $langcode\n   *   The language code.\n   *\n   * @return string\n   *   The printed name of the language.\n   *\/",107],["T_WHITESPACE","\n  ",115],["T_PUBLIC","public",116],["T_WHITESPACE"," ",116],["T_FUNCTION","function",116],["T_WHITESPACE"," ",116],["T_STRING","getLanguageName",116],"(",["T_VARIABLE","$langcode",116],")",";",["T_WHITESPACE","\n\n  ",116],["T_DOC_COMMENT","\/**\n   * Returns a list of the default locked languages.\n   *\n   * @param int $weight\n   *   (optional) An integer value that is used as the start value for the\n   *   weights of the locked languages.\n   *\n   * @return \\Drupal\\Core\\Language\\LanguageInterface[]\n   *   An array of language objects.\n   *\/",118],["T_WHITESPACE","\n  ",127],["T_PUBLIC","public",128],["T_WHITESPACE"," ",128],["T_FUNCTION","function",128],["T_WHITESPACE"," ",128],["T_STRING","getDefaultLockedLanguages",128],"(",["T_VARIABLE","$weight",128],["T_WHITESPACE"," ",128],"=",["T_WHITESPACE"," ",128],["T_LNUMBER","0",128],")",";",["T_WHITESPACE","\n\n  ",128],["T_DOC_COMMENT","\/**\n   * Checks whether a language is locked.\n   *\n   * @param string $langcode\n   *   The language code.\n   *\n   * @return bool\n   *   Returns whether the language is locked.\n   *\/",130],["T_WHITESPACE","\n  ",138],["T_PUBLIC","public",139],["T_WHITESPACE"," ",139],["T_FUNCTION","function",139],["T_WHITESPACE"," ",139],["T_STRING","isLanguageLocked",139],"(",["T_VARIABLE","$langcode",139],")",";",["T_WHITESPACE","\n\n  ",139],["T_DOC_COMMENT","\/**\n   * Returns the language fallback candidates for a given context.\n   *\n   * @param array $context\n   *   (optional) An associative array of data that can be useful to determine\n   *   the fallback sequence. The following keys are used in core:\n   *   - langcode: Language code of the desired language.\n   *   - operation: The name of the operation indicating the context where\n   *     language fallback is being applied. The following operations are\n   *     defined in core, but more may be defined in contributed modules:\n   *       - entity_view: Invoked when an entity is about to be displayed.\n   *         The data key contains the loaded entity.\n   *       - views_query: Invoked when a field based views query is performed.\n   *         The data key contains a reference to the field object.\n   *       - locale_lookup: Invoked when a string translation was not found.\n   *         The data key contains the source string.\n   *   - data: A data structure that makes sense in the provided\n   *     context, see above.\n   *\n   * @return array\n   *   An array of language codes sorted by priority: first values should be\n   *   tried first.\n   *\/",141],["T_WHITESPACE","\n  ",163],["T_PUBLIC","public",164],["T_WHITESPACE"," ",164],["T_FUNCTION","function",164],["T_WHITESPACE"," ",164],["T_STRING","getFallbackCandidates",164],"(",["T_ARRAY","array",164],["T_WHITESPACE"," ",164],["T_VARIABLE","$context",164],["T_WHITESPACE"," ",164],"=",["T_WHITESPACE"," ",164],["T_ARRAY","array",164],"(",")",")",";",["T_WHITESPACE","\n\n  ",164],["T_DOC_COMMENT","\/**\n   * Returns the language switch links for the given language type.\n   *\n   * @param string $type\n   *   The language type.\n   * @param \\Drupal\\Core\\Url $url\n   *   The URL the switch links will be relative to.\n   *\n   * @return array\n   *   A keyed array of links ready to be themed.\n   *\/",166],["T_WHITESPACE","\n  ",176],["T_PUBLIC","public",177],["T_WHITESPACE"," ",177],["T_FUNCTION","function",177],["T_WHITESPACE"," ",177],["T_STRING","getLanguageSwitchLinks",177],"(",["T_VARIABLE","$type",177],",",["T_WHITESPACE"," ",177],["T_STRING","Url",177],["T_WHITESPACE"," ",177],["T_VARIABLE","$url",177],")",";",["T_WHITESPACE","\n\n  ",177],["T_DOC_COMMENT","\/**\n   * Sets the configuration override language.\n   *\n   * @param \\Drupal\\Core\\Language\\LanguageInterface $language\n   *   The language to override configuration with.\n   *\n   * @return $this\n   *\/",179],["T_WHITESPACE","\n  ",186],["T_PUBLIC","public",187],["T_WHITESPACE"," ",187],["T_FUNCTION","function",187],["T_WHITESPACE"," ",187],["T_STRING","setConfigOverrideLanguage",187],"(",["T_STRING","LanguageInterface",187],["T_WHITESPACE"," ",187],["T_VARIABLE","$language",187],["T_WHITESPACE"," ",187],"=",["T_WHITESPACE"," ",187],["T_STRING","NULL",187],")",";",["T_WHITESPACE","\n\n  ",187],["T_DOC_COMMENT","\/**\n   * Gets the current configuration override language.\n   *\n   * @return \\Drupal\\Core\\Language\\LanguageInterface\n   *   The current configuration override language.\n   *\/",189],["T_WHITESPACE","\n  ",194],["T_PUBLIC","public",195],["T_WHITESPACE"," ",195],["T_FUNCTION","function",195],["T_WHITESPACE"," ",195],["T_STRING","getConfigOverrideLanguage",195],"(",")",";",["T_WHITESPACE","\n\n  ",195],["T_DOC_COMMENT","\/**\n   * Some common languages with their English and native names.\n   *\n   * Language codes are defined by the W3C language tags document for\n   * interoperability. Language codes typically have a language and, optionally,\n   * a script or regional variant name. See:\n   * http:\/\/www.w3.org\/International\/articles\/language-tags\/ for more\n   * information.\n   *\n   * @return array\n   *   An array of language code to language name information. Language name\n   *   information itself is an array of English and native names.\n   *\/",197],["T_WHITESPACE","\n  ",209],["T_PUBLIC","public",210],["T_WHITESPACE"," ",210],["T_STATIC","static",210],["T_WHITESPACE"," ",210],["T_FUNCTION","function",210],["T_WHITESPACE"," ",210],["T_STRING","getStandardLanguageList",210],"(",")",";",["T_WHITESPACE","\n\n",210],"}",["T_WHITESPACE","\n",212]]