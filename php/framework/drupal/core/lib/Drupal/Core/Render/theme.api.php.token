[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_DOC_COMMENT","\/**\n * @file\n * Hooks and documentation related to the theme and render system.\n *\/",3],["T_WHITESPACE","\n\n",6],["T_DOC_COMMENT","\/**\n * @defgroup themeable Theme system overview\n * @{\n * Functions and templates for the user interface that themes can override.\n *\n * Drupal's theme system allows a theme to have nearly complete control over\n * the appearance of the site, which includes both the markup and the CSS used\n * to style the markup. For this system to work, modules, instead of writing\n * HTML markup directly, need to return \"render arrays\", which are structured\n * hierarchical arrays that include the data to be rendered into HTML (or XML or\n * another output format), and options that affect the markup. Render arrays\n * are ultimately rendered into HTML or other output formats by recursive calls\n * to drupal_render(), traversing the depth of the render array hierarchy. At\n * each level, the theme system is invoked to do the actual rendering. See the\n * documentation of drupal_render() and the\n * @link theme_render Theme system and Render API topic @endlink for more\n * information about render arrays and rendering.\n *\n * @section sec_twig_theme Twig Templating Engine\n * Drupal 8 uses the templating engine Twig. Twig offers developers a fast,\n * secure, and flexible method for building templates for Drupal 8 sites. Twig\n * also offers substantial usability improvements over PHPTemplate, and does\n * not require front-end developers to know PHP to build and manipulate Drupal\n * 8 themes.\n *\n * For further information on theming in Drupal 8 see\n * https:\/\/www.drupal.org\/theme-guide\/8\n *\n * For further Twig documentation see\n * http:\/\/twig.sensiolabs.org\/doc\/templates.html\n *\n * @section sec_theme_hooks Theme Hooks\n * The theme system is invoked in \\Drupal\\Core\\Render\\Renderer::doRender() by\n * calling the \\Drupal\\Core\\Theme\\ThemeManagerInterface::render() function,\n * which operates on the concept of \"theme hooks\". Theme hooks define how a\n * particular type of data should be rendered. They are registered by modules by\n * implementing hook_theme(), which specifies the name of the hook, the input\n * \"variables\" used to provide data and options, and other information. Modules\n * implementing hook_theme() also need to provide a default implementation for\n * each of their theme hooks, normally in a Twig file, and they may also provide\n * preprocessing functions. For example, the core Search module defines a theme\n * hook for a search result item in search_theme():\n * @code\n * return array(\n *   'search_result' => array(\n *     'variables' => array(\n *       'result' => NULL,\n *       'plugin_id' => NULL,\n *     ),\n *    'file' => 'search.pages.inc',\n *   ),\n * );\n * @endcode\n * Given this definition, the template file with the default implementation is\n * search-result.html.twig, which can be found in the\n * core\/modules\/search\/templates directory, and the variables for rendering are\n * the search result and the plugin ID. In addition, there is a function\n * template_preprocess_search_result(), located in file search.pages.inc, which\n * preprocesses the information from the input variables so that it can be\n * rendered by the Twig template; the processed variables that the Twig template\n * receives are documented in the header of the default Twig template file.\n *\n * hook_theme() implementations can also specify that a theme hook\n * implementation is a theme function, but that is uncommon and not recommended.\n * Note that while Twig templates will auto-escape variables, theme functions\n * must explicitly escape any variables by using theme_render_and_autoescape().\n * Failure to do so is likely to result in security vulnerabilities. Theme\n * functions are deprecated in Drupal 8.0.x and will be removed before\n * Drupal 9.0.x. Use Twig templates instead.\n *\n * @section sec_overriding_theme_hooks Overriding Theme Hooks\n * Themes may register new theme hooks within a hook_theme() implementation, but\n * it is more common for themes to override default implementations provided by\n * modules than to register entirely new theme hooks. Themes can override a\n * default implementation by creating a template file with the same name as the\n * default implementation; for example, to override the display of search\n * results, a theme would add a file called search-result.html.twig to its\n * templates directory. A good starting point for doing this is normally to\n * copy the default implementation template, and then modifying it as desired.\n *\n * In the uncommon case that a theme hook uses a theme function instead of a\n * template file, a module would provide a default implementation function\n * called theme_HOOK, where HOOK is the name of the theme hook (for example,\n * theme_search_result() would be the name of the function for search result\n * theming). In this case, a theme can override the default implementation by\n * defining a function called THEME_HOOK() in its THEME.theme file, where THEME\n * is the machine name of the theme (for example, 'bartik' is the machine name\n * of the core Bartik theme, and it would define a function called\n * bartik_search_result() in the bartik.theme file, if the search_result hook\n * implementation was a function instead of a template). Normally, copying the\n * default function is again a good starting point for overriding its behavior.\n * Again, note that theme functions (unlike templates) must explicitly escape\n * variables using theme_render_and_autoescape() or risk security\n * vulnerabilities. Theme functions are deprecated in Drupal 8.0.x and will be\n * removed before Drupal 9.0.x. Use Twig templates instead.\n *\n * @section sec_preprocess_templates Preprocessing for Template Files\n * If the theme implementation is a template file, several functions are called\n * before the template file is invoked to modify the variables that are passed\n * to the template. These make up the \"preprocessing\" phase, and are executed\n * (if they exist), in the following order (note that in the following list,\n * HOOK indicates the hook being called or a less specific hook. For example, if\n * '#theme' => 'node__article' is called, hook is node__article and node. MODULE\n * indicates a module name, THEME indicates a theme name, and ENGINE indicates a\n * theme engine name). Modules, themes, and theme engines can provide these\n * functions to modify how the data is preprocessed, before it is passed to the\n * theme template:\n * - template_preprocess(&$variables, $hook): Creates a default set of variables\n *   for all theme hooks with template implementations. Provided by Drupal Core.\n * - template_preprocess_HOOK(&$variables): Should be implemented by the module\n *   that registers the theme hook, to set up default variables.\n * - MODULE_preprocess(&$variables, $hook): hook_preprocess() is invoked on all\n *   implementing modules.\n * - MODULE_preprocess_HOOK(&$variables): hook_preprocess_HOOK() is invoked on\n *   all implementing modules, so that modules that didn't define the theme hook\n *   can alter the variables.\n * - ENGINE_engine_preprocess(&$variables, $hook): Allows the theme engine to\n *   set necessary variables for all theme hooks with template implementations.\n * - ENGINE_engine_preprocess_HOOK(&$variables): Allows the theme engine to set\n *   necessary variables for the particular theme hook.\n * - THEME_preprocess(&$variables, $hook): Allows the theme to set necessary\n *   variables for all theme hooks with template implementations.\n * - THEME_preprocess_HOOK(&$variables): Allows the theme to set necessary\n *   variables specific to the particular theme hook.\n *\n * @section sec_preprocess_functions Preprocessing for Theme Functions\n * If the theming implementation is a function, only the theme-hook-specific\n * preprocess functions (the ones ending in _HOOK) are called from the list\n * above. This is because theme hooks with function implementations need to be\n * fast, and calling the non-theme-hook-specific preprocess functions for them\n * would incur a noticeable performance penalty.\n *\n * @section sec_suggestions Theme hook suggestions\n * In some cases, instead of calling the base theme hook implementation (either\n * the default provided by the module that defined the hook, or the override\n * provided by the theme), the theme system will instead look for \"suggestions\"\n * of other hook names to look for. Suggestions can be specified in several\n * ways:\n * - In a render array, the '#theme' property (which gives the name of the hook\n *   to use) can be an array of theme hook names instead of a single hook name.\n *   In this case, the render system will look first for the highest-priority\n *   hook name, and if no implementation is found, look for the second, and so\n *   on. Note that the highest-priority suggestion is at the end of the array.\n * - In a render array, the '#theme' property can be set to the name of a hook\n *   with a '__SUGGESTION' suffix. For example, in search results theming, the\n *   hook 'item_list__search_results' is given. In this case, the render system\n *   will look for theme templates called item-list--search-results.html.twig,\n *   which would only be used for rendering item lists containing search\n *   results, and if this template is not found, it will fall back to using the\n *   base item-list.html.twig template. This type of suggestion can also be\n *   combined with providing an array of theme hook names as described above.\n * - A module can implement hook_theme_suggestions_HOOK(). This allows the\n *   module that defines the theme template to dynamically return an array\n *   containing specific theme hook names (presumably with '__' suffixes as\n *   defined above) to use as suggestions. For example, the Search module\n *   does this in search_theme_suggestions_search_result() to suggest\n *   search_result__PLUGIN as the theme hook for search result items, where\n *   PLUGIN is the machine name of the particular search plugin type that was\n *   used for the search (such as node_search or user_search).\n *\n * For further information on overriding theme hooks see\n * https:\/\/www.drupal.org\/node\/2186401\n *\n * @section sec_alternate_suggestions Altering theme hook suggestions\n * Modules can also alter the theme suggestions provided using the mechanisms\n * of the previous section. There are two hooks for this: the\n * theme-hook-specific hook_theme_suggestions_HOOK_alter() and the generic\n * hook_theme_suggestions_alter(). These hooks get the current list of\n * suggestions as input, and can change this array (adding suggestions and\n * removing them).\n *\n * @section assets Assets\n * We can distinguish between three types of assets:\n * - Unconditional page-level assets (loaded on all pages where the theme is in\n *   use): these are defined in the theme's *.info.yml file.\n * - Conditional page-level assets (loaded on all pages where the theme is in\n *   use and a certain condition is met): these are attached in\n *   hook_page_attachments_alter(), e.g.:\n *   @code\n *   function THEME_page_attachments_alter(array &$page) {\n *     if ($some_condition) {\n *       $page['#attached']['library'][] = 'mytheme\/something';\n *     }\n *   }\n *   @endcode\n * - Template-specific assets (loaded on all pages where a specific template is\n *   in use): these can be added by in preprocessing functions, using @code\n *   $variables['#attached'] @endcode, e.g.:\n *   @code\n *   function THEME_preprocess_menu_local_action(array &$variables) {\n *     \/\/ We require Modernizr's touch test for button styling.\n *     $variables['#attached']['library'][] = 'core\/modernizr';\n *   }\n *   @endcode\n *\n * @see hooks\n * @see callbacks\n * @see theme_render\n *\n * @}\n *\/",8],["T_WHITESPACE","\n\n",208],["T_DOC_COMMENT","\/**\n * @defgroup theme_render Render API overview\n * @{\n * Overview of the Theme system and Render API.\n *\n * The main purpose of Drupal's Theme system is to give themes complete control\n * over the appearance of the site, which includes the markup returned from HTTP\n * requests and the CSS files used to style that markup. In order to ensure that\n * a theme can completely customize the markup, module developers should avoid\n * directly writing HTML markup for pages, blocks, and other user-visible output\n * in their modules, and instead return structured \"render arrays\" (see\n * @ref arrays below). Doing this also increases usability, by ensuring that the\n * markup used for similar functionality on different areas of the site is the\n * same, which gives users fewer user interface patterns to learn.\n *\n * For further information on the Theme and Render APIs, see:\n * - https:\/\/www.drupal.org\/documentation\/theme\n * - https:\/\/www.drupal.org\/developing\/api\/8\/render\n * - https:\/\/www.drupal.org\/node\/722174\n * - https:\/\/www.drupal.org\/node\/933976\n * - https:\/\/www.drupal.org\/node\/930760\n *\n * @todo Check these links. Some are for Drupal 7, and might need updates for\n *   Drupal 8.\n *\n * @section arrays Render arrays\n * The core structure of the Render API is the render array, which is a\n * hierarchical associative array containing data to be rendered and properties\n * describing how the data should be rendered. A render array that is returned\n * by a function to specify markup to be sent to the web browser or other\n * services will eventually be rendered by a call to drupal_render(), which will\n * recurse through the render array hierarchy if appropriate, making calls into\n * the theme system to do the actual rendering. If a function or method actually\n * needs to return rendered output rather than a render array, the best practice\n * would be to create a render array, render it by calling drupal_render(), and\n * return that result, rather than writing the markup directly. See the\n * documentation of drupal_render() for more details of the rendering process.\n *\n * Each level in the hierarchy of a render array (including the outermost array)\n * has one or more array elements. Array elements whose names start with '#' are\n * known as \"properties\", and the array elements with other names are \"children\"\n * (constituting the next level of the hierarchy); the names of children are\n * flexible, while property names are specific to the Render API and the\n * particular type of data being rendered. A special case of render arrays is a\n * form array, which specifies the form elements for an HTML form; see the\n * @link form_api Form generation topic @endlink for more information on forms.\n *\n * Render arrays (at any level of the hierarchy) will usually have one of the\n * following properties defined:\n * - #type: Specifies that the array contains data and options for a particular\n *   type of \"render element\" (for example, 'form', for an HTML form;\n *   'textfield', 'submit', for HTML form element types; 'table', for a table\n *   with rows, columns, and headers). See @ref elements below for more on\n *   render element types.\n * - #theme: Specifies that the array contains data to be themed by a particular\n *   theme hook. Modules define theme hooks by implementing hook_theme(), which\n *   specifies the input \"variables\" used to provide data and options; if a\n *   hook_theme() implementation specifies variable 'foo', then in a render\n *   array, you would provide this data using property '#foo'. Modules\n *   implementing hook_theme() also need to provide a default implementation for\n *   each of their theme hooks, normally in a Twig file. For more information\n *   and to discover available theme hooks, see the documentation of\n *   hook_theme() and the\n *   @link themeable Default theme implementations topic. @endlink\n * - #markup: Specifies that the array provides HTML markup directly. Unless\n *   the markup is very simple, such as an explanation in a paragraph tag, it\n *   is normally preferable to use #theme or #type instead, so that the theme\n *   can customize the markup. Note that the value is passed through\n *   \\Drupal\\Component\\Utility\\Xss::filterAdmin(), which strips known XSS\n *   vectors while allowing a permissive list of HTML tags that are not XSS\n *   vectors. (For example, <script> and <style> are not allowed.) See\n *   \\Drupal\\Component\\Utility\\Xss::$adminTags for the list of allowed tags. If\n *   your markup needs any of the tags not in this whitelist, then you can\n *   implement a theme hook and\/or an asset library. Alternatively, you can use\n *   the key #allowed_tags to alter which tags are filtered.\n * - #plain_text: Specifies that the array provides text that needs to be\n *   escaped. This value takes precedence over #markup.\n * - #allowed_tags: If #markup is supplied, this can be used to change which\n *   tags are allowed in the markup. The value is an array of tags that\n *   Xss::filter() would accept. If #plain_text is set, this value is ignored.\n *\n *   Usage example:\n *   @code\n *   $output['admin_filtered_string'] = [\n *     '#markup' => '<em>This is filtered using the admin tag list<\/em>',\n *   ];\n *   $output['filtered_string'] = [\n *     '#markup' => '<video><source src=\"v.webm\" type=\"video\/webm\"><\/video>',\n *     '#allowed_tags' => ['video', 'source'],\n *   ];\n *   $output['escaped_string'] = [\n *     '#plain_text' => '<em>This is escaped<\/em>',\n *   ];\n *   @endcode\n *\n *   @see core.libraries.yml\n *   @see hook_theme()\n *\n * JavaScript and CSS assets are specified in the render array using the\n * #attached property (see @ref sec_attached).\n *\n * @section elements Render elements\n * Render elements are defined by Drupal core and modules. The primary way to\n * define a render element is to create a render element plugin. There are\n * two types of render element plugins:\n * - Generic elements: Generic render element plugins implement\n *   \\Drupal\\Core\\Render\\Element\\ElementInterface, are annotated with\n *   \\Drupal\\Core\\Render\\Annotation\\RenderElement annotation, go in plugin\n *   namespace Element, and generally extend the\n *   \\Drupal\\Core\\Render\\Element\\RenderElement base class.\n * - Form input elements: Render elements representing form input elements\n *   implement \\Drupal\\Core\\Render\\Element\\FormElementInterface, are annotated\n *   with \\Drupal\\Core\\Render\\Annotation\\FormElement annotation, go in plugin\n *   namespace Element, and generally extend the\n *   \\Drupal\\Core\\Render\\Element\\FormElement base class.\n * See the @link plugin_api Plugin API topic @endlink for general information\n * on plugins. You can search for classes with the RenderElement or FormElement\n * annotation to discover what render elements are available. API reference\n * sites (such as https:\/\/api.drupal.org) generate lists of all existing\n * elements from these classes. Look for the Elements link in the API Navigation\n * block.\n *\n * Modules can define render elements by defining an element plugin.\n *\n * @section sec_caching Caching\n * The Drupal rendering process has the ability to cache rendered output at any\n * level in a render array hierarchy. This allows expensive calculations to be\n * done infrequently, and speeds up page loading. See the\n * @link cache Cache API topic @endlink for general information about the cache\n * system.\n *\n * In order to make caching possible, the following information needs to be\n * present:\n * - Cache keys: Identifiers for cacheable portions of render arrays. These\n *   should be created and added for portions of a render array that\n *   involve expensive calculations in the rendering process.\n * - Cache contexts: Contexts that may affect rendering, such as user role and\n *   language. When no context is specified, it means that the render array\n *   does not vary by any context.\n * - Cache tags: Tags for data that rendering depends on, such as for\n *   individual nodes or user accounts, so that when these change the cache\n *   can be automatically invalidated. If the data consists of entities, you\n *   can use \\Drupal\\Core\\Entity\\EntityInterface::getCacheTags() to generate\n *   appropriate tags; configuration objects have a similar method.\n * - Cache max-age: The maximum duration for which a render array may be cached.\n *   Defaults to \\Drupal\\Core\\Cache\\Cache::PERMANENT (permanently cacheable).\n *\n * Cache information is provided in the #cache property in a render array. In\n * this property, always supply the cache contexts, tags, and max-age if a\n * render array varies by context, depends on some modifiable data, or depends\n * on information that's only valid for a limited time, respectively. Cache keys\n * should only be set on the portions of a render array that should be cached.\n * Contexts are automatically replaced with the value for the current request\n * (e.g. the current language) and combined with the keys to form a cache ID.\n * The cache contexts, tags, and max-age will be propagated up the render array\n * hierarchy to determine cacheability for containing render array sections.\n *\n * Here's an example of what a #cache property might contain:\n * @code\n *   '#cache' => [\n *     'keys' => ['entity_view', 'node', $node->id()],\n *     'contexts' => ['languages'],\n *     'tags' => ['node:' . $node->id()],\n *     'max-age' => Cache::PERMANENT,\n *   ],\n * @endcode\n *\n * At the response level, you'll see X-Drupal-Cache-Contexts and\n * X-Drupal-Cache-Tags headers.\n *\n * See https:\/\/www.drupal.org\/developing\/api\/8\/render\/arrays\/cacheability for\n * details.\n *\n * @section sec_attached Attaching libraries in render arrays\n * Libraries, JavaScript settings, feeds, HTML <head> tags and HTML <head> links\n * are attached to elements using the #attached property. The #attached property\n * is an associative array, where the keys are the attachment types and the\n * values are the attached data.\n *\n * The #attached property can also be used to specify HTTP headers and the\n * response status code.\n *\n * The #attached property allows loading of asset libraries (which may contain\n * CSS assets, JavaScript assets, and JavaScript setting assets), JavaScript\n * settings, feeds, HTML <head> tags and HTML <head> links. Specify an array of\n * type => value pairs, where the type (most often 'library' \u00e2\u0080\u0094\u00c2\u00a0for libraries, or\n * 'drupalSettings' \u00e2\u0080\u0094 for JavaScript settings) to attach these response-level\n * values. Example:\n * @code\n * $build['#attached']['library'][] = 'core\/jquery';\n * $build['#attached']['drupalSettings']['foo'] = 'bar';\n * $build['#attached']['feed'][] = [$url, $this->t('Feed title')];\n * @endcode\n *\n * See \\Drupal\\Core\\Render\\AttachmentsResponseProcessorInterface for additional\n * information.\n *\n * See \\Drupal\\Core\\Asset\\LibraryDiscoveryParser::parseLibraryInfo() for more\n * information on how to define libraries.\n *\n * @section sec_placeholders Placeholders in render arrays\n * Render arrays have a placeholder mechanism, which can be used to add data\n * into the render array late in the rendering process. This works in a similar\n * manner to \\Drupal\\Component\\Render\\FormattableMarkup::placeholderFormat(),\n * with the text that ends up in the #markup property of the element at the\n * end of the rendering process getting substitutions from placeholders that\n * are stored in the 'placeholders' element of the #attached property.\n *\n * For example, after the rest of the rendering process was done, if your\n * render array contained:\n * @code\n * $build['my_element'] = [\n *   '#attached' => ['placeholders' => ['@foo' => 'replacement']],\n *   '#markup' => ['Something about @foo'],\n * ];\n * @endcode\n * then #markup would end up containing 'Something about replacement'.\n *\n * Note that each placeholder value can itself be a render array, which will be\n * rendered, and any cache tags generated during rendering will be added to the\n * cache tags for the markup.\n *\n * @section render_pipeline The render pipeline\n * The term \"render pipeline\" refers to the process Drupal uses to take\n * information provided by modules and render it into a response. See\n * https:\/\/www.drupal.org\/developing\/api\/8\/render for more details on this\n * process. For background on routing concepts, see\n * @link routing Routing API. @endlink\n *\n * There are in fact multiple render pipelines:\n * - Drupal always uses the Symfony render pipeline. See\n *   http:\/\/symfony.com\/doc\/2.7\/components\/http_kernel\/introduction.html\n * - Within the Symfony render pipeline, there is a Drupal render pipeline,\n *   which handles controllers that return render arrays. (Symfony's render\n *   pipeline only knows how to deal with Response objects; this pipeline\n *   converts render arrays into Response objects.) These render arrays are\n *   considered the main content, and can be rendered into multiple formats:\n *   HTML, Ajax, dialog, and modal. Modules can add support for more formats, by\n *   implementing a main content renderer, which is a service tagged with\n *   'render.main_content_renderer'.\n * - Finally, within the HTML main content renderer, there is another pipeline,\n *   to allow for rendering the page containing the main content in multiple\n *   ways: no decoration at all (just a page showing the main content) or blocks\n *   (a page with regions, with blocks positioned in regions around the main\n *   content). Modules can provide additional options, by implementing a page\n *   variant, which is a plugin annotated with\n *   \\Drupal\\Core\\Display\\Annotation\\PageDisplayVariant.\n *\n * Routes whose controllers return a \\Symfony\\Component\\HttpFoundation\\Response\n * object are fully handled by the Symfony render pipeline.\n *\n * Routes whose controllers return the \"main content\" as a render array can be\n * requested in multiple formats (HTML, JSON, etc.) and\/or in a \"decorated\"\n * manner, as described above.\n *\n * @see themeable\n * @see \\Symfony\\Component\\HttpKernel\\KernelEvents::VIEW\n * @see \\Drupal\\Core\\EventSubscriber\\MainContentViewSubscriber\n * @see \\Drupal\\Core\\Render\\MainContent\\MainContentRendererInterface\n * @see \\Drupal\\Core\\Render\\MainContent\\HtmlRenderer\n * @see \\Drupal\\Core\\Render\\RenderEvents::SELECT_PAGE_DISPLAY_VARIANT\n * @see \\Drupal\\Core\\Render\\Plugin\\DisplayVariant\\SimplePageVariant\n * @see \\Drupal\\block\\Plugin\\DisplayVariant\\BlockPageVariant\n * @see \\Drupal\\Core\\Render\\BareHtmlPageRenderer\n *\n * @}\n *\/",210],["T_WHITESPACE","\n\n",476],["T_DOC_COMMENT","\/**\n * @defgroup listing_page_element Page header for Elements page\n * @{\n * Introduction to form and render elements\n *\n * Render elements are referenced in render arrays. Render arrays contain data\n * to be rendered, along with meta-data and attributes that specify how to\n * render the data into markup; see the\n * @link theme_render Render API topic @endlink for an overview of render\n * arrays and render elements. Form arrays are a subset of render arrays,\n * representing HTML forms; form elements are a subset of render elements,\n * representing HTML elements for forms. See the\n * @link form_api Form API topic @endlink for an overview of forms, form\n * processing, and form arrays.\n *\n * Each form and render element type corresponds to an element plugin class;\n * each of them either extends \\Drupal\\Core\\Render\\Element\\RenderElement\n * (render elements) or \\Drupal\\Core\\Render\\Element\\FormElement (form\n * elements). Usage and properties are documented on the individual classes,\n * and the two base classes list common properties shared by all render\n * elements and the form element subset, respectively.\n *\n * @see theme_render\n * @see form_api\n * @see \\Drupal\\Core\\Render\\Element\\RenderElement\n * @see \\Drupal\\Core\\Render\\Element\\FormElement\n *\n * @}\n *\/",478],["T_WHITESPACE","\n\n",506],["T_DOC_COMMENT","\/**\n * @addtogroup hooks\n * @{\n *\/",508],["T_WHITESPACE","\n\n",511],["T_DOC_COMMENT","\/**\n * Allow themes to alter the theme-specific settings form.\n *\n * With this hook, themes can alter the theme-specific settings form in any way\n * allowable by Drupal's Form API, such as adding form elements, changing\n * default values and removing form elements. See the Form API documentation on\n * api.drupal.org for detailed information.\n *\n * Note that the base theme's form alterations will be run before any sub-theme\n * alterations.\n *\n * @param $form\n *   Nested array of form elements that comprise the form.\n * @param $form_state\n *   The current state of the form.\n *\/",513],["T_WHITESPACE","\n",528],["T_FUNCTION","function",529],["T_WHITESPACE"," ",529],["T_STRING","hook_form_system_theme_settings_alter",529],"(","&",["T_VARIABLE","$form",529],",",["T_WHITESPACE"," ",529],["T_NS_SEPARATOR","\\",529],["T_STRING","Drupal",529],["T_NS_SEPARATOR","\\",529],["T_STRING","Core",529],["T_NS_SEPARATOR","\\",529],["T_STRING","Form",529],["T_NS_SEPARATOR","\\",529],["T_STRING","FormStateInterface",529],["T_WHITESPACE"," ",529],["T_VARIABLE","$form_state",529],")",["T_WHITESPACE"," ",529],"{",["T_WHITESPACE","\n  ",529],["T_COMMENT","\/\/ Add a checkbox to toggle the breadcrumb trail.\n",530],["T_WHITESPACE","  ",531],["T_VARIABLE","$form",531],"[",["T_CONSTANT_ENCAPSED_STRING","'toggle_breadcrumb'",531],"]",["T_WHITESPACE"," ",531],"=",["T_WHITESPACE"," ",531],["T_ARRAY","array",531],"(",["T_WHITESPACE","\n    ",531],["T_CONSTANT_ENCAPSED_STRING","'#type'",532],["T_WHITESPACE"," ",532],["T_DOUBLE_ARROW","=>",532],["T_WHITESPACE"," ",532],["T_CONSTANT_ENCAPSED_STRING","'checkbox'",532],",",["T_WHITESPACE","\n    ",532],["T_CONSTANT_ENCAPSED_STRING","'#title'",533],["T_WHITESPACE"," ",533],["T_DOUBLE_ARROW","=>",533],["T_WHITESPACE"," ",533],["T_STRING","t",533],"(",["T_CONSTANT_ENCAPSED_STRING","'Display the breadcrumb'",533],")",",",["T_WHITESPACE","\n    ",533],["T_CONSTANT_ENCAPSED_STRING","'#default_value'",534],["T_WHITESPACE"," ",534],["T_DOUBLE_ARROW","=>",534],["T_WHITESPACE"," ",534],["T_STRING","theme_get_setting",534],"(",["T_CONSTANT_ENCAPSED_STRING","'features.breadcrumb'",534],")",",",["T_WHITESPACE","\n    ",534],["T_CONSTANT_ENCAPSED_STRING","'#description'",535],["T_WHITESPACE","   ",535],["T_DOUBLE_ARROW","=>",535],["T_WHITESPACE"," ",535],["T_STRING","t",535],"(",["T_CONSTANT_ENCAPSED_STRING","'Show a trail of links from the homepage to the current page.'",535],")",",",["T_WHITESPACE","\n  ",535],")",";",["T_WHITESPACE","\n",536],"}",["T_WHITESPACE","\n\n",537],["T_DOC_COMMENT","\/**\n * Preprocess theme variables for templates.\n *\n * This hook allows modules to preprocess theme variables for theme templates.\n * It is called for all theme hooks implemented as templates, but not for theme\n * hooks implemented as functions. hook_preprocess_HOOK() can be used to\n * preprocess variables for a specific theme hook, whether implemented as a\n * template or function.\n *\n * For more detailed information, see the\n * @link themeable Theme system overview topic @endlink.\n *\n * @param $variables\n *   The variables array (modify in place).\n * @param $hook\n *   The name of the theme hook.\n *\/",539],["T_WHITESPACE","\n",555],["T_FUNCTION","function",556],["T_WHITESPACE"," ",556],["T_STRING","hook_preprocess",556],"(","&",["T_VARIABLE","$variables",556],",",["T_WHITESPACE"," ",556],["T_VARIABLE","$hook",556],")",["T_WHITESPACE"," ",556],"{",["T_WHITESPACE","\n  ",556],["T_STATIC","static",557],["T_WHITESPACE"," ",557],["T_VARIABLE","$hooks",557],";",["T_WHITESPACE","\n\n  ",557],["T_COMMENT","\/\/ Add contextual links to the variables, if the user has permission.\n",559],["T_WHITESPACE","\n  ",560],["T_IF","if",561],["T_WHITESPACE"," ",561],"(","!",["T_NS_SEPARATOR","\\",561],["T_STRING","Drupal",561],["T_DOUBLE_COLON","::",561],["T_STRING","currentUser",561],"(",")",["T_OBJECT_OPERATOR","->",561],["T_STRING","hasPermission",561],"(",["T_CONSTANT_ENCAPSED_STRING","'access contextual links'",561],")",")",["T_WHITESPACE"," ",561],"{",["T_WHITESPACE","\n    ",561],["T_RETURN","return",562],";",["T_WHITESPACE","\n  ",562],"}",["T_WHITESPACE","\n\n  ",563],["T_IF","if",565],["T_WHITESPACE"," ",565],"(","!",["T_ISSET","isset",565],"(",["T_VARIABLE","$hooks",565],")",")",["T_WHITESPACE"," ",565],"{",["T_WHITESPACE","\n    ",565],["T_VARIABLE","$hooks",566],["T_WHITESPACE"," ",566],"=",["T_WHITESPACE"," ",566],["T_STRING","theme_get_registry",566],"(",")",";",["T_WHITESPACE","\n  ",566],"}",["T_WHITESPACE","\n\n  ",567],["T_COMMENT","\/\/ Determine the primary theme function argument.\n",569],["T_WHITESPACE","  ",570],["T_IF","if",570],["T_WHITESPACE"," ",570],"(",["T_ISSET","isset",570],"(",["T_VARIABLE","$hooks",570],"[",["T_VARIABLE","$hook",570],"]","[",["T_CONSTANT_ENCAPSED_STRING","'variables'",570],"]",")",")",["T_WHITESPACE"," ",570],"{",["T_WHITESPACE","\n    ",570],["T_VARIABLE","$keys",571],["T_WHITESPACE"," ",571],"=",["T_WHITESPACE"," ",571],["T_STRING","array_keys",571],"(",["T_VARIABLE","$hooks",571],"[",["T_VARIABLE","$hook",571],"]","[",["T_CONSTANT_ENCAPSED_STRING","'variables'",571],"]",")",";",["T_WHITESPACE","\n    ",571],["T_VARIABLE","$key",572],["T_WHITESPACE"," ",572],"=",["T_WHITESPACE"," ",572],["T_VARIABLE","$keys",572],"[",["T_LNUMBER","0",572],"]",";",["T_WHITESPACE","\n  ",572],"}",["T_WHITESPACE","\n  ",573],["T_ELSE","else",574],["T_WHITESPACE"," ",574],"{",["T_WHITESPACE","\n    ",574],["T_VARIABLE","$key",575],["T_WHITESPACE"," ",575],"=",["T_WHITESPACE"," ",575],["T_VARIABLE","$hooks",575],"[",["T_VARIABLE","$hook",575],"]","[",["T_CONSTANT_ENCAPSED_STRING","'render element'",575],"]",";",["T_WHITESPACE","\n  ",575],"}",["T_WHITESPACE","\n\n  ",576],["T_IF","if",578],["T_WHITESPACE"," ",578],"(",["T_ISSET","isset",578],"(",["T_VARIABLE","$variables",578],"[",["T_VARIABLE","$key",578],"]",")",")",["T_WHITESPACE"," ",578],"{",["T_WHITESPACE","\n    ",578],["T_VARIABLE","$element",579],["T_WHITESPACE"," ",579],"=",["T_WHITESPACE"," ",579],["T_VARIABLE","$variables",579],"[",["T_VARIABLE","$key",579],"]",";",["T_WHITESPACE","\n  ",579],"}",["T_WHITESPACE","\n\n  ",580],["T_IF","if",582],["T_WHITESPACE"," ",582],"(",["T_ISSET","isset",582],"(",["T_VARIABLE","$element",582],")",["T_WHITESPACE"," ",582],["T_BOOLEAN_AND","&&",582],["T_WHITESPACE"," ",582],["T_STRING","is_array",582],"(",["T_VARIABLE","$element",582],")",["T_WHITESPACE"," ",582],["T_BOOLEAN_AND","&&",582],["T_WHITESPACE"," ",582],"!",["T_EMPTY","empty",582],"(",["T_VARIABLE","$element",582],"[",["T_CONSTANT_ENCAPSED_STRING","'#contextual_links'",582],"]",")",")",["T_WHITESPACE"," ",582],"{",["T_WHITESPACE","\n    ",582],["T_VARIABLE","$variables",583],"[",["T_CONSTANT_ENCAPSED_STRING","'title_suffix'",583],"]","[",["T_CONSTANT_ENCAPSED_STRING","'contextual_links'",583],"]",["T_WHITESPACE"," ",583],"=",["T_WHITESPACE"," ",583],["T_STRING","contextual_links_view",583],"(",["T_VARIABLE","$element",583],")",";",["T_WHITESPACE","\n    ",583],["T_IF","if",584],["T_WHITESPACE"," ",584],"(","!",["T_EMPTY","empty",584],"(",["T_VARIABLE","$variables",584],"[",["T_CONSTANT_ENCAPSED_STRING","'title_suffix'",584],"]","[",["T_CONSTANT_ENCAPSED_STRING","'contextual_links'",584],"]",")",")",["T_WHITESPACE"," ",584],"{",["T_WHITESPACE","\n      ",584],["T_VARIABLE","$variables",585],"[",["T_CONSTANT_ENCAPSED_STRING","'attributes'",585],"]","[",["T_CONSTANT_ENCAPSED_STRING","'class'",585],"]","[","]",["T_WHITESPACE"," ",585],"=",["T_WHITESPACE"," ",585],["T_CONSTANT_ENCAPSED_STRING","'contextual-links-region'",585],";",["T_WHITESPACE","\n    ",585],"}",["T_WHITESPACE","\n  ",586],"}",["T_WHITESPACE","\n",587],"}",["T_WHITESPACE","\n\n",588],["T_DOC_COMMENT","\/**\n * Preprocess theme variables for a specific theme hook.\n *\n * This hook allows modules to preprocess theme variables for a specific theme\n * hook. It should only be used if a module needs to override or add to the\n * theme preprocessing for a theme hook it didn't define.\n *\n * For more detailed information, see the\n * @link themeable Theme system overview topic @endlink.\n *\n * @param $variables\n *   The variables array (modify in place).\n *\/",590],["T_WHITESPACE","\n",602],["T_FUNCTION","function",603],["T_WHITESPACE"," ",603],["T_STRING","hook_preprocess_HOOK",603],"(","&",["T_VARIABLE","$variables",603],")",["T_WHITESPACE"," ",603],"{",["T_WHITESPACE","\n  ",603],["T_COMMENT","\/\/ This example is from rdf_preprocess_image(). It adds an RDF attribute\n",604],["T_WHITESPACE","  ",605],["T_COMMENT","\/\/ to the image hook's variables.\n",605],["T_WHITESPACE","  ",606],["T_VARIABLE","$variables",606],"[",["T_CONSTANT_ENCAPSED_STRING","'attributes'",606],"]","[",["T_CONSTANT_ENCAPSED_STRING","'typeof'",606],"]",["T_WHITESPACE"," ",606],"=",["T_WHITESPACE"," ",606],["T_ARRAY","array",606],"(",["T_CONSTANT_ENCAPSED_STRING","'foaf:Image'",606],")",";",["T_WHITESPACE","\n",606],"}",["T_WHITESPACE","\n\n",607],["T_DOC_COMMENT","\/**\n * Provides alternate named suggestions for a specific theme hook.\n *\n * This hook allows modules to provide alternative theme function or template\n * name suggestions.\n *\n * HOOK is the least-specific version of the hook being called. For example, if\n * '#theme' => 'node__article' is called, then hook_theme_suggestions_node()\n * will be invoked, not hook_theme_suggestions_node__article(). The specific\n * hook called (in this case 'node__article') is available in\n * $variables['theme_hook_original'].\n *\n * @todo Add @code sample.\n *\n * @param array $variables\n *   An array of variables passed to the theme hook. Note that this hook is\n *   invoked before any preprocessing.\n *\n * @return array\n *   An array of theme suggestions.\n *\n * @see hook_theme_suggestions_HOOK_alter()\n *\/",609],["T_WHITESPACE","\n",631],["T_FUNCTION","function",632],["T_WHITESPACE"," ",632],["T_STRING","hook_theme_suggestions_HOOK",632],"(",["T_ARRAY","array",632],["T_WHITESPACE"," ",632],["T_VARIABLE","$variables",632],")",["T_WHITESPACE"," ",632],"{",["T_WHITESPACE","\n  ",632],["T_VARIABLE","$suggestions",633],["T_WHITESPACE"," ",633],"=",["T_WHITESPACE"," ",633],["T_ARRAY","array",633],"(",")",";",["T_WHITESPACE","\n\n  ",633],["T_VARIABLE","$suggestions",635],"[","]",["T_WHITESPACE"," ",635],"=",["T_WHITESPACE"," ",635],["T_CONSTANT_ENCAPSED_STRING","'node__'",635],["T_WHITESPACE"," ",635],".",["T_WHITESPACE"," ",635],["T_VARIABLE","$variables",635],"[",["T_CONSTANT_ENCAPSED_STRING","'elements'",635],"]","[",["T_CONSTANT_ENCAPSED_STRING","'#langcode'",635],"]",";",["T_WHITESPACE","\n\n  ",635],["T_RETURN","return",637],["T_WHITESPACE"," ",637],["T_VARIABLE","$suggestions",637],";",["T_WHITESPACE","\n",637],"}",["T_WHITESPACE","\n\n",638],["T_DOC_COMMENT","\/**\n * Alters named suggestions for all theme hooks.\n *\n * This hook is invoked for all theme hooks, if you are targeting a specific\n * theme hook it's best to use hook_theme_suggestions_HOOK_alter().\n *\n * The call order is as follows: all existing suggestion alter functions are\n * called for module A, then all for module B, etc., followed by all for any\n * base theme(s), and finally for the active theme. The order is\n * determined by system weight, then by extension (module or theme) name.\n *\n * Within each module or theme, suggestion alter hooks are called in the\n * following order: first, hook_theme_suggestions_alter(); second,\n * hook_theme_suggestions_HOOK_alter(). So, for each module or theme, the more\n * general hooks are called first followed by the more specific.\n *\n * In the following example, we provide an alternative template suggestion to\n * node and taxonomy term templates based on the user being logged in.\n * @code\n * function MYMODULE_theme_suggestions_alter(array &$suggestions, array $variables, $hook) {\n *   if (\\Drupal::currentUser()->isAuthenticated() && in_array($hook, array('node', 'taxonomy_term'))) {\n *     $suggestions[] = $hook . '__' . 'logged_in';\n *   }\n * }\n *\n * @endcode\n *\n * @param array $suggestions\n *   An array of alternate, more specific names for template files or theme\n *   functions.\n * @param array $variables\n *   An array of variables passed to the theme hook. Note that this hook is\n *   invoked before any variable preprocessing.\n * @param string $hook\n *   The base hook name. For example, if '#theme' => 'node__article' is called,\n *   then $hook will be 'node', not 'node__article'. The specific hook called\n *   (in this case 'node__article') is available in\n *   $variables['theme_hook_original'].\n *\n * @return array\n *   An array of theme suggestions.\n *\n * @see hook_theme_suggestions_HOOK_alter()\n *\/",640],["T_WHITESPACE","\n",683],["T_FUNCTION","function",684],["T_WHITESPACE"," ",684],["T_STRING","hook_theme_suggestions_alter",684],"(",["T_ARRAY","array",684],["T_WHITESPACE"," ",684],"&",["T_VARIABLE","$suggestions",684],",",["T_WHITESPACE"," ",684],["T_ARRAY","array",684],["T_WHITESPACE"," ",684],["T_VARIABLE","$variables",684],",",["T_WHITESPACE"," ",684],["T_VARIABLE","$hook",684],")",["T_WHITESPACE"," ",684],"{",["T_WHITESPACE","\n  ",684],["T_COMMENT","\/\/ Add an interface-language specific suggestion to all theme hooks.\n",685],["T_WHITESPACE","  ",686],["T_VARIABLE","$suggestions",686],"[","]",["T_WHITESPACE"," ",686],"=",["T_WHITESPACE"," ",686],["T_VARIABLE","$hook",686],["T_WHITESPACE"," ",686],".",["T_WHITESPACE"," ",686],["T_CONSTANT_ENCAPSED_STRING","'__'",686],["T_WHITESPACE"," ",686],".",["T_WHITESPACE"," ",686],["T_NS_SEPARATOR","\\",686],["T_STRING","Drupal",686],["T_DOUBLE_COLON","::",686],["T_STRING","languageManager",686],"(",")",["T_OBJECT_OPERATOR","->",686],["T_STRING","getCurrentLanguage",686],"(",")",["T_OBJECT_OPERATOR","->",686],["T_STRING","getId",686],"(",")",";",["T_WHITESPACE","\n",686],"}",["T_WHITESPACE","\n\n",687],["T_DOC_COMMENT","\/**\n * Alters named suggestions for a specific theme hook.\n *\n * This hook allows any module or theme to provide alternative theme function or\n * template name suggestions and reorder or remove suggestions provided by\n * hook_theme_suggestions_HOOK() or by earlier invocations of this hook.\n *\n * HOOK is the least-specific version of the hook being called. For example, if\n * '#theme' => 'node__article' is called, then node_theme_suggestions_node()\n * will be invoked, not node_theme_suggestions_node__article(). The specific\n * hook called (in this case 'node__article') is available in\n * $variables['theme_hook_original'].\n *\n * @todo Add @code sample.\n *\n * @param array $suggestions\n *   An array of theme suggestions.\n * @param array $variables\n *   An array of variables passed to the theme hook. Note that this hook is\n *   invoked before any preprocessing.\n *\n * @see hook_theme_suggestions_alter()\n * @see hook_theme_suggestions_HOOK()\n *\/",689],["T_WHITESPACE","\n",712],["T_FUNCTION","function",713],["T_WHITESPACE"," ",713],["T_STRING","hook_theme_suggestions_HOOK_alter",713],"(",["T_ARRAY","array",713],["T_WHITESPACE"," ",713],"&",["T_VARIABLE","$suggestions",713],",",["T_WHITESPACE"," ",713],["T_ARRAY","array",713],["T_WHITESPACE"," ",713],["T_VARIABLE","$variables",713],")",["T_WHITESPACE"," ",713],"{",["T_WHITESPACE","\n  ",713],["T_IF","if",714],["T_WHITESPACE"," ",714],"(",["T_EMPTY","empty",714],"(",["T_VARIABLE","$variables",714],"[",["T_CONSTANT_ENCAPSED_STRING","'header'",714],"]",")",")",["T_WHITESPACE"," ",714],"{",["T_WHITESPACE","\n    ",714],["T_VARIABLE","$suggestions",715],"[","]",["T_WHITESPACE"," ",715],"=",["T_WHITESPACE"," ",715],["T_CONSTANT_ENCAPSED_STRING","'hookname__'",715],["T_WHITESPACE"," ",715],".",["T_WHITESPACE"," ",715],["T_CONSTANT_ENCAPSED_STRING","'no_header'",715],";",["T_WHITESPACE","\n  ",715],"}",["T_WHITESPACE","\n",716],"}",["T_WHITESPACE","\n\n",717],["T_DOC_COMMENT","\/**\n * Respond to themes being installed.\n *\n * @param array $theme_list\n *   Array containing the names of the themes being installed.\n *\n * @see \\Drupal\\Core\\Extension\\ThemeHandler::install()\n *\/",719],["T_WHITESPACE","\n",726],["T_FUNCTION","function",727],["T_WHITESPACE"," ",727],["T_STRING","hook_themes_installed",727],"(",["T_VARIABLE","$theme_list",727],")",["T_WHITESPACE"," ",727],"{",["T_WHITESPACE","\n  ",727],["T_FOREACH","foreach",728],["T_WHITESPACE"," ",728],"(",["T_VARIABLE","$theme_list",728],["T_WHITESPACE"," ",728],["T_AS","as",728],["T_WHITESPACE"," ",728],["T_VARIABLE","$theme",728],")",["T_WHITESPACE"," ",728],"{",["T_WHITESPACE","\n    ",728],["T_STRING","block_theme_initialize",729],"(",["T_VARIABLE","$theme",729],")",";",["T_WHITESPACE","\n  ",729],"}",["T_WHITESPACE","\n",730],"}",["T_WHITESPACE","\n\n",731],["T_DOC_COMMENT","\/**\n * Respond to themes being uninstalled.\n *\n * @param array $theme_list\n *   Array containing the names of the themes being uninstalled.\n *\n * @see \\Drupal\\Core\\Extension\\ThemeHandler::uninstall()\n *\/",733],["T_WHITESPACE","\n",740],["T_FUNCTION","function",741],["T_WHITESPACE"," ",741],["T_STRING","hook_themes_uninstalled",741],"(",["T_ARRAY","array",741],["T_WHITESPACE"," ",741],["T_VARIABLE","$themes",741],")",["T_WHITESPACE"," ",741],"{",["T_WHITESPACE","\n  ",741],["T_COMMENT","\/\/ Remove some state entries depending on the theme.\n",742],["T_WHITESPACE","  ",743],["T_FOREACH","foreach",743],["T_WHITESPACE"," ",743],"(",["T_VARIABLE","$themes",743],["T_WHITESPACE"," ",743],["T_AS","as",743],["T_WHITESPACE"," ",743],["T_VARIABLE","$theme",743],")",["T_WHITESPACE"," ",743],"{",["T_WHITESPACE","\n    ",743],["T_NS_SEPARATOR","\\",744],["T_STRING","Drupal",744],["T_DOUBLE_COLON","::",744],["T_STRING","state",744],"(",")",["T_OBJECT_OPERATOR","->",744],["T_STRING","delete",744],"(",["T_CONSTANT_ENCAPSED_STRING","'example.'",744],["T_WHITESPACE"," ",744],".",["T_WHITESPACE"," ",744],["T_VARIABLE","$theme",744],")",";",["T_WHITESPACE","\n  ",744],"}",["T_WHITESPACE","\n",745],"}",["T_WHITESPACE","\n\n",746],["T_DOC_COMMENT","\/**\n * Declare a template file extension to be used with a theme engine.\n *\n * This hook is used in a theme engine implementation in the format of\n * ENGINE_extension().\n *\n * @return string\n *   The file extension the theme engine will recognize.\n *\/",748],["T_WHITESPACE","\n",756],["T_FUNCTION","function",757],["T_WHITESPACE"," ",757],["T_STRING","hook_extension",757],"(",")",["T_WHITESPACE"," ",757],"{",["T_WHITESPACE","\n  ",757],["T_COMMENT","\/\/ Extension for template base names in Twig.\n",758],["T_WHITESPACE","  ",759],["T_RETURN","return",759],["T_WHITESPACE"," ",759],["T_CONSTANT_ENCAPSED_STRING","'.html.twig'",759],";",["T_WHITESPACE","\n",759],"}",["T_WHITESPACE","\n\n",760],["T_DOC_COMMENT","\/**\n * Render a template using the theme engine.\n *\n * @param string $template_file\n *   The path (relative to the Drupal root directory) to the template to be\n *   rendered including its extension in the format 'path\/to\/TEMPLATE_NAME.EXT'.\n * @param array $variables\n *   A keyed array of variables that are available for composing the output. The\n *   theme engine is responsible for passing all the variables to the template.\n *   Depending on the code in the template, all or just a subset of the\n *   variables might be used in the template.\n *\n * @return string\n *   The output generated from the template. In most cases this will be a string\n *   containing HTML markup.\n *\/",762],["T_WHITESPACE","\n",777],["T_FUNCTION","function",778],["T_WHITESPACE"," ",778],["T_STRING","hook_render_template",778],"(",["T_VARIABLE","$template_file",778],",",["T_WHITESPACE"," ",778],["T_VARIABLE","$variables",778],")",["T_WHITESPACE"," ",778],"{",["T_WHITESPACE","\n  ",778],["T_VARIABLE","$twig_service",779],["T_WHITESPACE"," ",779],"=",["T_WHITESPACE"," ",779],["T_NS_SEPARATOR","\\",779],["T_STRING","Drupal",779],["T_DOUBLE_COLON","::",779],["T_STRING","service",779],"(",["T_CONSTANT_ENCAPSED_STRING","'twig'",779],")",";",["T_WHITESPACE","\n\n  ",779],["T_RETURN","return",781],["T_WHITESPACE"," ",781],["T_VARIABLE","$twig_service",781],["T_OBJECT_OPERATOR","->",781],["T_STRING","loadTemplate",781],"(",["T_VARIABLE","$template_file",781],")",["T_OBJECT_OPERATOR","->",781],["T_STRING","render",781],"(",["T_VARIABLE","$variables",781],")",";",["T_WHITESPACE","\n",781],"}",["T_WHITESPACE","\n\n",782],["T_DOC_COMMENT","\/**\n * Alter the element type information returned from modules.\n *\n * A module may implement this hook in order to alter the element type defaults\n * defined by a module.\n *\n * @param array $info\n *   An associative array with structure identical to that of the return value\n *   of \\Drupal\\Core\\Render\\ElementInfoManagerInterface::getInfo().\n *\n * @see \\Drupal\\Core\\Render\\ElementInfoManager\n * @see \\Drupal\\Core\\Render\\Element\\ElementInterface\n *\/",784],["T_WHITESPACE","\n",796],["T_FUNCTION","function",797],["T_WHITESPACE"," ",797],["T_STRING","hook_element_info_alter",797],"(",["T_ARRAY","array",797],["T_WHITESPACE"," ",797],"&",["T_VARIABLE","$info",797],")",["T_WHITESPACE"," ",797],"{",["T_WHITESPACE","\n  ",797],["T_COMMENT","\/\/ Decrease the default size of textfields.\n",798],["T_WHITESPACE","  ",799],["T_IF","if",799],["T_WHITESPACE"," ",799],"(",["T_ISSET","isset",799],"(",["T_VARIABLE","$info",799],"[",["T_CONSTANT_ENCAPSED_STRING","'textfield'",799],"]","[",["T_CONSTANT_ENCAPSED_STRING","'#size'",799],"]",")",")",["T_WHITESPACE"," ",799],"{",["T_WHITESPACE","\n    ",799],["T_VARIABLE","$info",800],"[",["T_CONSTANT_ENCAPSED_STRING","'textfield'",800],"]","[",["T_CONSTANT_ENCAPSED_STRING","'#size'",800],"]",["T_WHITESPACE"," ",800],"=",["T_WHITESPACE"," ",800],["T_LNUMBER","40",800],";",["T_WHITESPACE","\n  ",800],"}",["T_WHITESPACE","\n",801],"}",["T_WHITESPACE","\n\n",802],["T_DOC_COMMENT","\/**\n * Perform necessary alterations to the JavaScript before it is presented on\n * the page.\n *\n * @param $javascript\n *   An array of all JavaScript being presented on the page.\n * @param \\Drupal\\Core\\Asset\\AttachedAssetsInterface $assets\n *   The assets attached to the current response.\n *\n * @see drupal_js_defaults()\n * @see \\Drupal\\Core\\Asset\\AssetResolver\n *\/",804],["T_WHITESPACE","\n",815],["T_FUNCTION","function",816],["T_WHITESPACE"," ",816],["T_STRING","hook_js_alter",816],"(","&",["T_VARIABLE","$javascript",816],",",["T_WHITESPACE"," ",816],["T_NS_SEPARATOR","\\",816],["T_STRING","Drupal",816],["T_NS_SEPARATOR","\\",816],["T_STRING","Core",816],["T_NS_SEPARATOR","\\",816],["T_STRING","Asset",816],["T_NS_SEPARATOR","\\",816],["T_STRING","AttachedAssetsInterface",816],["T_WHITESPACE"," ",816],["T_VARIABLE","$assets",816],")",["T_WHITESPACE"," ",816],"{",["T_WHITESPACE","\n  ",816],["T_COMMENT","\/\/ Swap out jQuery to use an updated version of the library.\n",817],["T_WHITESPACE","  ",818],["T_VARIABLE","$javascript",818],"[",["T_CONSTANT_ENCAPSED_STRING","'core\/assets\/vendor\/jquery\/jquery.min.js'",818],"]","[",["T_CONSTANT_ENCAPSED_STRING","'data'",818],"]",["T_WHITESPACE"," ",818],"=",["T_WHITESPACE"," ",818],["T_STRING","drupal_get_path",818],"(",["T_CONSTANT_ENCAPSED_STRING","'module'",818],",",["T_WHITESPACE"," ",818],["T_CONSTANT_ENCAPSED_STRING","'jquery_update'",818],")",["T_WHITESPACE"," ",818],".",["T_WHITESPACE"," ",818],["T_CONSTANT_ENCAPSED_STRING","'\/jquery.js'",818],";",["T_WHITESPACE","\n",818],"}",["T_WHITESPACE","\n\n",819],["T_DOC_COMMENT","\/**\n * Add dynamic library definitions.\n *\n * Modules may implement this hook to add dynamic library definitions. Static\n * libraries, which do not depend on any runtime information, should be declared\n * in a modulename.libraries.yml file instead.\n *\n * @return array[]\n *   An array of library definitions to register, keyed by library ID. The\n *   library ID will be prefixed with the module name automatically.\n *\n * @see core.libraries.yml\n * @see hook_library_info_alter()\n *\/",821],["T_WHITESPACE","\n",834],["T_FUNCTION","function",835],["T_WHITESPACE"," ",835],["T_STRING","hook_library_info_build",835],"(",")",["T_WHITESPACE"," ",835],"{",["T_WHITESPACE","\n  ",835],["T_VARIABLE","$libraries",836],["T_WHITESPACE"," ",836],"=",["T_WHITESPACE"," ",836],"[","]",";",["T_WHITESPACE","\n  ",836],["T_COMMENT","\/\/ Add a library whose information changes depending on certain conditions.\n",837],["T_WHITESPACE","  ",838],["T_VARIABLE","$libraries",838],"[",["T_CONSTANT_ENCAPSED_STRING","'mymodule.zombie'",838],"]",["T_WHITESPACE"," ",838],"=",["T_WHITESPACE"," ",838],"[",["T_WHITESPACE","\n    ",838],["T_CONSTANT_ENCAPSED_STRING","'dependencies'",839],["T_WHITESPACE"," ",839],["T_DOUBLE_ARROW","=>",839],["T_WHITESPACE"," ",839],"[",["T_WHITESPACE","\n      ",839],["T_CONSTANT_ENCAPSED_STRING","'core\/backbone'",840],",",["T_WHITESPACE","\n    ",840],"]",",",["T_WHITESPACE","\n  ",841],"]",";",["T_WHITESPACE","\n  ",842],["T_IF","if",843],["T_WHITESPACE"," ",843],"(",["T_STRING","Drupal",843],["T_DOUBLE_COLON","::",843],["T_STRING","moduleHandler",843],"(",")",["T_OBJECT_OPERATOR","->",843],["T_STRING","moduleExists",843],"(",["T_CONSTANT_ENCAPSED_STRING","'minifyzombies'",843],")",")",["T_WHITESPACE"," ",843],"{",["T_WHITESPACE","\n    ",843],["T_VARIABLE","$libraries",844],"[",["T_CONSTANT_ENCAPSED_STRING","'mymodule.zombie'",844],"]",["T_WHITESPACE"," ",844],["T_PLUS_EQUAL","+=",844],["T_WHITESPACE"," ",844],"[",["T_WHITESPACE","\n      ",844],["T_CONSTANT_ENCAPSED_STRING","'js'",845],["T_WHITESPACE"," ",845],["T_DOUBLE_ARROW","=>",845],["T_WHITESPACE"," ",845],"[",["T_WHITESPACE","\n        ",845],["T_CONSTANT_ENCAPSED_STRING","'mymodule.zombie.min.js'",846],["T_WHITESPACE"," ",846],["T_DOUBLE_ARROW","=>",846],["T_WHITESPACE"," ",846],"[","]",",",["T_WHITESPACE","\n      ",846],"]",",",["T_WHITESPACE","\n      ",847],["T_CONSTANT_ENCAPSED_STRING","'css'",848],["T_WHITESPACE"," ",848],["T_DOUBLE_ARROW","=>",848],["T_WHITESPACE"," ",848],"[",["T_WHITESPACE","\n        ",848],["T_CONSTANT_ENCAPSED_STRING","'base'",849],["T_WHITESPACE"," ",849],["T_DOUBLE_ARROW","=>",849],["T_WHITESPACE"," ",849],"[",["T_WHITESPACE","\n          ",849],["T_CONSTANT_ENCAPSED_STRING","'mymodule.zombie.min.css'",850],["T_WHITESPACE"," ",850],["T_DOUBLE_ARROW","=>",850],["T_WHITESPACE"," ",850],"[","]",",",["T_WHITESPACE","\n        ",850],"]",",",["T_WHITESPACE","\n      ",851],"]",",",["T_WHITESPACE","\n    ",852],"]",";",["T_WHITESPACE","\n  ",853],"}",["T_WHITESPACE","\n  ",854],["T_ELSE","else",855],["T_WHITESPACE"," ",855],"{",["T_WHITESPACE","\n    ",855],["T_VARIABLE","$libraries",856],"[",["T_CONSTANT_ENCAPSED_STRING","'mymodule.zombie'",856],"]",["T_WHITESPACE"," ",856],["T_PLUS_EQUAL","+=",856],["T_WHITESPACE"," ",856],"[",["T_WHITESPACE","\n      ",856],["T_CONSTANT_ENCAPSED_STRING","'js'",857],["T_WHITESPACE"," ",857],["T_DOUBLE_ARROW","=>",857],["T_WHITESPACE"," ",857],"[",["T_WHITESPACE","\n        ",857],["T_CONSTANT_ENCAPSED_STRING","'mymodule.zombie.js'",858],["T_WHITESPACE"," ",858],["T_DOUBLE_ARROW","=>",858],["T_WHITESPACE"," ",858],"[","]",",",["T_WHITESPACE","\n      ",858],"]",",",["T_WHITESPACE","\n      ",859],["T_CONSTANT_ENCAPSED_STRING","'css'",860],["T_WHITESPACE"," ",860],["T_DOUBLE_ARROW","=>",860],["T_WHITESPACE"," ",860],"[",["T_WHITESPACE","\n        ",860],["T_CONSTANT_ENCAPSED_STRING","'base'",861],["T_WHITESPACE"," ",861],["T_DOUBLE_ARROW","=>",861],["T_WHITESPACE"," ",861],"[",["T_WHITESPACE","\n          ",861],["T_CONSTANT_ENCAPSED_STRING","'mymodule.zombie.css'",862],["T_WHITESPACE"," ",862],["T_DOUBLE_ARROW","=>",862],["T_WHITESPACE"," ",862],"[","]",",",["T_WHITESPACE","\n        ",862],"]",",",["T_WHITESPACE","\n      ",863],"]",",",["T_WHITESPACE","\n    ",864],"]",";",["T_WHITESPACE","\n  ",865],"}",["T_WHITESPACE","\n\n  ",866],["T_COMMENT","\/\/ Add a library only if a certain condition is met. If code wants to\n",868],["T_WHITESPACE","  ",869],["T_COMMENT","\/\/ integrate with this library it is safe to (try to) load it unconditionally\n",869],["T_WHITESPACE","  ",870],["T_COMMENT","\/\/ without reproducing this check. If the library definition does not exist\n",870],["T_WHITESPACE","  ",871],["T_COMMENT","\/\/ the library (of course) not be loaded but no notices or errors will be\n",871],["T_WHITESPACE","  ",872],["T_COMMENT","\/\/ triggered.\n",872],["T_WHITESPACE","  ",873],["T_IF","if",873],["T_WHITESPACE"," ",873],"(",["T_STRING","Drupal",873],["T_DOUBLE_COLON","::",873],["T_STRING","moduleHandler",873],"(",")",["T_OBJECT_OPERATOR","->",873],["T_STRING","moduleExists",873],"(",["T_CONSTANT_ENCAPSED_STRING","'vampirize'",873],")",")",["T_WHITESPACE"," ",873],"{",["T_WHITESPACE","\n    ",873],["T_VARIABLE","$libraries",874],"[",["T_CONSTANT_ENCAPSED_STRING","'mymodule.vampire'",874],"]",["T_WHITESPACE"," ",874],"=",["T_WHITESPACE"," ",874],"[",["T_WHITESPACE","\n      ",874],["T_CONSTANT_ENCAPSED_STRING","'js'",875],["T_WHITESPACE"," ",875],["T_DOUBLE_ARROW","=>",875],["T_WHITESPACE"," ",875],"[",["T_WHITESPACE","\n        ",875],["T_CONSTANT_ENCAPSED_STRING","'js\/vampire.js'",876],["T_WHITESPACE"," ",876],["T_DOUBLE_ARROW","=>",876],["T_WHITESPACE"," ",876],"[","]",",",["T_WHITESPACE","\n      ",876],"]",",",["T_WHITESPACE","\n      ",877],["T_CONSTANT_ENCAPSED_STRING","'css'",878],["T_WHITESPACE"," ",878],["T_DOUBLE_ARROW","=>",878],["T_WHITESPACE"," ",878],"[",["T_WHITESPACE","\n        ",878],["T_CONSTANT_ENCAPSED_STRING","'base'",879],["T_WHITESPACE"," ",879],["T_DOUBLE_ARROW","=>",879],["T_WHITESPACE"," ",879],"[",["T_WHITESPACE","\n          ",879],["T_CONSTANT_ENCAPSED_STRING","'css\/vampire.css'",880],",",["T_WHITESPACE","\n        ",880],"]",",",["T_WHITESPACE","\n      ",881],"]",",",["T_WHITESPACE","\n      ",882],["T_CONSTANT_ENCAPSED_STRING","'dependencies'",883],["T_WHITESPACE"," ",883],["T_DOUBLE_ARROW","=>",883],["T_WHITESPACE"," ",883],"[",["T_WHITESPACE","\n        ",883],["T_CONSTANT_ENCAPSED_STRING","'core\/jquery'",884],",",["T_WHITESPACE","\n      ",884],"]",",",["T_WHITESPACE","\n    ",885],"]",";",["T_WHITESPACE","\n  ",886],"}",["T_WHITESPACE","\n  ",887],["T_RETURN","return",888],["T_WHITESPACE"," ",888],["T_VARIABLE","$libraries",888],";",["T_WHITESPACE","\n",888],"}",["T_WHITESPACE","\n\n",889],["T_DOC_COMMENT","\/**\n * Modify the JavaScript settings (drupalSettings).\n *\n * @param array &$settings\n *   An array of all JavaScript settings (drupalSettings) being presented on the\n *   page.\n * @param \\Drupal\\Core\\Asset\\AttachedAssetsInterface $assets\n *   The assets attached to the current response.\n *\n * @see \\Drupal\\Core\\Asset\\AssetResolver\n *\n * The results of this hook are cached, however modules may use\n * hook_js_settings_alter() to dynamically alter settings.\n *\/",891],["T_WHITESPACE","\n",904],["T_FUNCTION","function",905],["T_WHITESPACE"," ",905],["T_STRING","hook_js_settings_build",905],"(",["T_ARRAY","array",905],["T_WHITESPACE"," ",905],"&",["T_VARIABLE","$settings",905],",",["T_WHITESPACE"," ",905],["T_NS_SEPARATOR","\\",905],["T_STRING","Drupal",905],["T_NS_SEPARATOR","\\",905],["T_STRING","Core",905],["T_NS_SEPARATOR","\\",905],["T_STRING","Asset",905],["T_NS_SEPARATOR","\\",905],["T_STRING","AttachedAssetsInterface",905],["T_WHITESPACE"," ",905],["T_VARIABLE","$assets",905],")",["T_WHITESPACE"," ",905],"{",["T_WHITESPACE","\n  ",905],["T_COMMENT","\/\/ Manipulate settings.\n",906],["T_WHITESPACE","  ",907],["T_IF","if",907],["T_WHITESPACE"," ",907],"(",["T_ISSET","isset",907],"(",["T_VARIABLE","$settings",907],"[",["T_CONSTANT_ENCAPSED_STRING","'dialog'",907],"]",")",")",["T_WHITESPACE"," ",907],"{",["T_WHITESPACE","\n    ",907],["T_VARIABLE","$settings",908],"[",["T_CONSTANT_ENCAPSED_STRING","'dialog'",908],"]","[",["T_CONSTANT_ENCAPSED_STRING","'autoResize'",908],"]",["T_WHITESPACE"," ",908],"=",["T_WHITESPACE"," ",908],["T_STRING","FALSE",908],";",["T_WHITESPACE","\n  ",908],"}",["T_WHITESPACE","\n",909],"}",["T_WHITESPACE","\n\n",910],["T_DOC_COMMENT","\/**\n * Perform necessary alterations to the JavaScript settings (drupalSettings).\n *\n * @param array &$settings\n *   An array of all JavaScript settings (drupalSettings) being presented on the\n *   page.\n * @param \\Drupal\\Core\\Asset\\AttachedAssetsInterface $assets\n *   The assets attached to the current response.\n *\n * @see \\Drupal\\Core\\Asset\\AssetResolver\n *\/",912],["T_WHITESPACE","\n",922],["T_FUNCTION","function",923],["T_WHITESPACE"," ",923],["T_STRING","hook_js_settings_alter",923],"(",["T_ARRAY","array",923],["T_WHITESPACE"," ",923],"&",["T_VARIABLE","$settings",923],",",["T_WHITESPACE"," ",923],["T_NS_SEPARATOR","\\",923],["T_STRING","Drupal",923],["T_NS_SEPARATOR","\\",923],["T_STRING","Core",923],["T_NS_SEPARATOR","\\",923],["T_STRING","Asset",923],["T_NS_SEPARATOR","\\",923],["T_STRING","AttachedAssetsInterface",923],["T_WHITESPACE"," ",923],["T_VARIABLE","$assets",923],")",["T_WHITESPACE"," ",923],"{",["T_WHITESPACE","\n  ",923],["T_COMMENT","\/\/ Add settings.\n",924],["T_WHITESPACE","  ",925],["T_VARIABLE","$settings",925],"[",["T_CONSTANT_ENCAPSED_STRING","'user'",925],"]","[",["T_CONSTANT_ENCAPSED_STRING","'uid'",925],"]",["T_WHITESPACE"," ",925],"=",["T_WHITESPACE"," ",925],["T_NS_SEPARATOR","\\",925],["T_STRING","Drupal",925],["T_DOUBLE_COLON","::",925],["T_STRING","currentUser",925],"(",")",";",["T_WHITESPACE","\n\n  ",925],["T_COMMENT","\/\/ Manipulate settings.\n",927],["T_WHITESPACE","  ",928],["T_IF","if",928],["T_WHITESPACE"," ",928],"(",["T_ISSET","isset",928],"(",["T_VARIABLE","$settings",928],"[",["T_CONSTANT_ENCAPSED_STRING","'dialog'",928],"]",")",")",["T_WHITESPACE"," ",928],"{",["T_WHITESPACE","\n    ",928],["T_VARIABLE","$settings",929],"[",["T_CONSTANT_ENCAPSED_STRING","'dialog'",929],"]","[",["T_CONSTANT_ENCAPSED_STRING","'autoResize'",929],"]",["T_WHITESPACE"," ",929],"=",["T_WHITESPACE"," ",929],["T_STRING","FALSE",929],";",["T_WHITESPACE","\n  ",929],"}",["T_WHITESPACE","\n",930],"}",["T_WHITESPACE","\n\n",931],["T_DOC_COMMENT","\/**\n * Alter libraries provided by an extension.\n *\n * Allows modules and themes to change libraries' definitions; mostly used to\n * update a library to a newer version, while ensuring backward compatibility.\n * In general, such manipulations should only be done to extend the library's\n * functionality in a backward-compatible way, to avoid breaking other modules\n * and themes that may be using the library.\n *\n * @param array $libraries\n *   An associative array of libraries registered by $extension. Keyed by\n *   internal library name and passed by reference.\n * @param string $extension\n *   Can either be 'core' or the machine name of the extension that registered\n *   the libraries.\n *\n * @see \\Drupal\\Core\\Asset\\LibraryDiscoveryParser::parseLibraryInfo()\n *\/",933],["T_WHITESPACE","\n",950],["T_FUNCTION","function",951],["T_WHITESPACE"," ",951],["T_STRING","hook_library_info_alter",951],"(","&",["T_VARIABLE","$libraries",951],",",["T_WHITESPACE"," ",951],["T_VARIABLE","$extension",951],")",["T_WHITESPACE"," ",951],"{",["T_WHITESPACE","\n  ",951],["T_COMMENT","\/\/ Update Farbtastic to version 2.0.\n",952],["T_WHITESPACE","  ",953],["T_IF","if",953],["T_WHITESPACE"," ",953],"(",["T_VARIABLE","$extension",953],["T_WHITESPACE"," ",953],["T_IS_EQUAL","==",953],["T_WHITESPACE"," ",953],["T_CONSTANT_ENCAPSED_STRING","'core'",953],["T_WHITESPACE"," ",953],["T_BOOLEAN_AND","&&",953],["T_WHITESPACE"," ",953],["T_ISSET","isset",953],"(",["T_VARIABLE","$libraries",953],"[",["T_CONSTANT_ENCAPSED_STRING","'jquery.farbtastic'",953],"]",")",")",["T_WHITESPACE"," ",953],"{",["T_WHITESPACE","\n    ",953],["T_COMMENT","\/\/ Verify existing version is older than the one we are updating to.\n",954],["T_WHITESPACE","    ",955],["T_IF","if",955],["T_WHITESPACE"," ",955],"(",["T_STRING","version_compare",955],"(",["T_VARIABLE","$libraries",955],"[",["T_CONSTANT_ENCAPSED_STRING","'jquery.farbtastic'",955],"]","[",["T_CONSTANT_ENCAPSED_STRING","'version'",955],"]",",",["T_WHITESPACE"," ",955],["T_CONSTANT_ENCAPSED_STRING","'2.0'",955],",",["T_WHITESPACE"," ",955],["T_CONSTANT_ENCAPSED_STRING","'<'",955],")",")",["T_WHITESPACE"," ",955],"{",["T_WHITESPACE","\n      ",955],["T_COMMENT","\/\/ Update the existing Farbtastic to version 2.0.\n",956],["T_WHITESPACE","      ",957],["T_VARIABLE","$libraries",957],"[",["T_CONSTANT_ENCAPSED_STRING","'jquery.farbtastic'",957],"]","[",["T_CONSTANT_ENCAPSED_STRING","'version'",957],"]",["T_WHITESPACE"," ",957],"=",["T_WHITESPACE"," ",957],["T_CONSTANT_ENCAPSED_STRING","'2.0'",957],";",["T_WHITESPACE","\n      ",957],["T_COMMENT","\/\/ To accurately replace library files, the order of files and the options\n",958],["T_WHITESPACE","      ",959],["T_COMMENT","\/\/ of each file have to be retained; e.g., like this:\n",959],["T_WHITESPACE","      ",960],["T_VARIABLE","$old_path",960],["T_WHITESPACE"," ",960],"=",["T_WHITESPACE"," ",960],["T_CONSTANT_ENCAPSED_STRING","'assets\/vendor\/farbtastic'",960],";",["T_WHITESPACE","\n      ",960],["T_COMMENT","\/\/ Since the replaced library files are no longer located in a directory\n",961],["T_WHITESPACE","      ",962],["T_COMMENT","\/\/ relative to the original extension, specify an absolute path (relative\n",962],["T_WHITESPACE","      ",963],["T_COMMENT","\/\/ to DRUPAL_ROOT \/ base_path()) to the new location.\n",963],["T_WHITESPACE","      ",964],["T_VARIABLE","$new_path",964],["T_WHITESPACE"," ",964],"=",["T_WHITESPACE"," ",964],["T_CONSTANT_ENCAPSED_STRING","'\/'",964],["T_WHITESPACE"," ",964],".",["T_WHITESPACE"," ",964],["T_STRING","drupal_get_path",964],"(",["T_CONSTANT_ENCAPSED_STRING","'module'",964],",",["T_WHITESPACE"," ",964],["T_CONSTANT_ENCAPSED_STRING","'farbtastic_update'",964],")",["T_WHITESPACE"," ",964],".",["T_WHITESPACE"," ",964],["T_CONSTANT_ENCAPSED_STRING","'\/js'",964],";",["T_WHITESPACE","\n      ",964],["T_VARIABLE","$new_js",965],["T_WHITESPACE"," ",965],"=",["T_WHITESPACE"," ",965],["T_ARRAY","array",965],"(",")",";",["T_WHITESPACE","\n      ",965],["T_VARIABLE","$replacements",966],["T_WHITESPACE"," ",966],"=",["T_WHITESPACE"," ",966],["T_ARRAY","array",966],"(",["T_WHITESPACE","\n        ",966],["T_VARIABLE","$old_path",967],["T_WHITESPACE"," ",967],".",["T_WHITESPACE"," ",967],["T_CONSTANT_ENCAPSED_STRING","'\/farbtastic.js'",967],["T_WHITESPACE"," ",967],["T_DOUBLE_ARROW","=>",967],["T_WHITESPACE"," ",967],["T_VARIABLE","$new_path",967],["T_WHITESPACE"," ",967],".",["T_WHITESPACE"," ",967],["T_CONSTANT_ENCAPSED_STRING","'\/farbtastic-2.0.js'",967],",",["T_WHITESPACE","\n      ",967],")",";",["T_WHITESPACE","\n      ",968],["T_FOREACH","foreach",969],["T_WHITESPACE"," ",969],"(",["T_VARIABLE","$libraries",969],"[",["T_CONSTANT_ENCAPSED_STRING","'jquery.farbtastic'",969],"]","[",["T_CONSTANT_ENCAPSED_STRING","'js'",969],"]",["T_WHITESPACE"," ",969],["T_AS","as",969],["T_WHITESPACE"," ",969],["T_VARIABLE","$source",969],["T_WHITESPACE"," ",969],["T_DOUBLE_ARROW","=>",969],["T_WHITESPACE"," ",969],["T_VARIABLE","$options",969],")",["T_WHITESPACE"," ",969],"{",["T_WHITESPACE","\n        ",969],["T_IF","if",970],["T_WHITESPACE"," ",970],"(",["T_ISSET","isset",970],"(",["T_VARIABLE","$replacements",970],"[",["T_VARIABLE","$source",970],"]",")",")",["T_WHITESPACE"," ",970],"{",["T_WHITESPACE","\n          ",970],["T_VARIABLE","$new_js",971],"[",["T_VARIABLE","$replacements",971],"[",["T_VARIABLE","$source",971],"]","]",["T_WHITESPACE"," ",971],"=",["T_WHITESPACE"," ",971],["T_VARIABLE","$options",971],";",["T_WHITESPACE","\n        ",971],"}",["T_WHITESPACE","\n        ",972],["T_ELSE","else",973],["T_WHITESPACE"," ",973],"{",["T_WHITESPACE","\n          ",973],["T_VARIABLE","$new_js",974],"[",["T_VARIABLE","$source",974],"]",["T_WHITESPACE"," ",974],"=",["T_WHITESPACE"," ",974],["T_VARIABLE","$options",974],";",["T_WHITESPACE","\n        ",974],"}",["T_WHITESPACE","\n      ",975],"}",["T_WHITESPACE","\n      ",976],["T_VARIABLE","$libraries",977],"[",["T_CONSTANT_ENCAPSED_STRING","'jquery.farbtastic'",977],"]","[",["T_CONSTANT_ENCAPSED_STRING","'js'",977],"]",["T_WHITESPACE"," ",977],"=",["T_WHITESPACE"," ",977],["T_VARIABLE","$new_js",977],";",["T_WHITESPACE","\n    ",977],"}",["T_WHITESPACE","\n  ",978],"}",["T_WHITESPACE","\n",979],"}",["T_WHITESPACE","\n\n",980],["T_DOC_COMMENT","\/**\n * Alter CSS files before they are output on the page.\n *\n * @param $css\n *   An array of all CSS items (files and inline CSS) being requested on the page.\n * @param \\Drupal\\Core\\Asset\\AttachedAssetsInterface $assets\n *   The assets attached to the current response.\n *\n * @see Drupal\\Core\\Asset\\LibraryResolverInterface::getCssAssets()\n *\/",982],["T_WHITESPACE","\n",991],["T_FUNCTION","function",992],["T_WHITESPACE"," ",992],["T_STRING","hook_css_alter",992],"(","&",["T_VARIABLE","$css",992],",",["T_WHITESPACE"," ",992],["T_NS_SEPARATOR","\\",992],["T_STRING","Drupal",992],["T_NS_SEPARATOR","\\",992],["T_STRING","Core",992],["T_NS_SEPARATOR","\\",992],["T_STRING","Asset",992],["T_NS_SEPARATOR","\\",992],["T_STRING","AttachedAssetsInterface",992],["T_WHITESPACE"," ",992],["T_VARIABLE","$assets",992],")",["T_WHITESPACE"," ",992],"{",["T_WHITESPACE","\n  ",992],["T_COMMENT","\/\/ Remove defaults.css file.\n",993],["T_WHITESPACE","  ",994],["T_UNSET","unset",994],"(",["T_VARIABLE","$css",994],"[",["T_STRING","drupal_get_path",994],"(",["T_CONSTANT_ENCAPSED_STRING","'module'",994],",",["T_WHITESPACE"," ",994],["T_CONSTANT_ENCAPSED_STRING","'system'",994],")",["T_WHITESPACE"," ",994],".",["T_WHITESPACE"," ",994],["T_CONSTANT_ENCAPSED_STRING","'\/defaults.css'",994],"]",")",";",["T_WHITESPACE","\n",994],"}",["T_WHITESPACE","\n\n",995],["T_DOC_COMMENT","\/**\n * Add attachments (typically assets) to a page before it is rendered.\n *\n * Use this hook when you want to conditionally add attachments to a page.\n *\n * If you want to alter the attachments added by other modules or if your module\n * depends on the elements of other modules, use hook_page_attachments_alter()\n * instead, which runs after this hook.\n *\n * If you try to add anything but #attached and #cache to the array, an\n * exception is thrown.\n *\n * @param array &$attachments\n *   An array that you can add attachments to.\n *\n * @see hook_page_attachments_alter()\n *\/",997],["T_WHITESPACE","\n",1013],["T_FUNCTION","function",1014],["T_WHITESPACE"," ",1014],["T_STRING","hook_page_attachments",1014],"(",["T_ARRAY","array",1014],["T_WHITESPACE"," ",1014],"&",["T_VARIABLE","$attachments",1014],")",["T_WHITESPACE"," ",1014],"{",["T_WHITESPACE","\n  ",1014],["T_COMMENT","\/\/ Unconditionally attach an asset to the page.\n",1015],["T_WHITESPACE","  ",1016],["T_VARIABLE","$attachments",1016],"[",["T_CONSTANT_ENCAPSED_STRING","'#attached'",1016],"]","[",["T_CONSTANT_ENCAPSED_STRING","'library'",1016],"]","[","]",["T_WHITESPACE"," ",1016],"=",["T_WHITESPACE"," ",1016],["T_CONSTANT_ENCAPSED_STRING","'core\/domready'",1016],";",["T_WHITESPACE","\n\n  ",1016],["T_COMMENT","\/\/ Conditionally attach an asset to the page.\n",1018],["T_WHITESPACE","  ",1019],["T_IF","if",1019],["T_WHITESPACE"," ",1019],"(","!",["T_NS_SEPARATOR","\\",1019],["T_STRING","Drupal",1019],["T_DOUBLE_COLON","::",1019],["T_STRING","currentUser",1019],"(",")",["T_OBJECT_OPERATOR","->",1019],["T_STRING","hasPermission",1019],"(",["T_CONSTANT_ENCAPSED_STRING","'may pet kittens'",1019],")",")",["T_WHITESPACE"," ",1019],"{",["T_WHITESPACE","\n    ",1019],["T_VARIABLE","$attachments",1020],"[",["T_CONSTANT_ENCAPSED_STRING","'#attached'",1020],"]","[",["T_CONSTANT_ENCAPSED_STRING","'library'",1020],"]","[","]",["T_WHITESPACE"," ",1020],"=",["T_WHITESPACE"," ",1020],["T_CONSTANT_ENCAPSED_STRING","'core\/jquery'",1020],";",["T_WHITESPACE","\n  ",1020],"}",["T_WHITESPACE","\n",1021],"}",["T_WHITESPACE","\n\n",1022],["T_DOC_COMMENT","\/**\n * Alter attachments (typically assets) to a page before it is rendered.\n *\n * Use this hook when you want to remove or alter attachments on the page, or\n * add attachments to the page that depend on another module's attachments (this\n * hook runs after hook_page_attachments().\n *\n * If you try to add anything but #attached and #cache to the array, an\n * exception is thrown.\n *\n * @param array &$attachments\n *   Array of all attachments provided by hook_page_attachments() implementations.\n *\n * @see hook_page_attachments()\n *\/",1024],["T_WHITESPACE","\n",1038],["T_FUNCTION","function",1039],["T_WHITESPACE"," ",1039],["T_STRING","hook_page_attachments_alter",1039],"(",["T_ARRAY","array",1039],["T_WHITESPACE"," ",1039],"&",["T_VARIABLE","$attachments",1039],")",["T_WHITESPACE"," ",1039],"{",["T_WHITESPACE","\n  ",1039],["T_COMMENT","\/\/ Conditionally remove an asset.\n",1040],["T_WHITESPACE","  ",1041],["T_IF","if",1041],["T_WHITESPACE"," ",1041],"(",["T_STRING","in_array",1041],"(",["T_CONSTANT_ENCAPSED_STRING","'core\/jquery'",1041],",",["T_WHITESPACE"," ",1041],["T_VARIABLE","$attachments",1041],"[",["T_CONSTANT_ENCAPSED_STRING","'#attached'",1041],"]","[",["T_CONSTANT_ENCAPSED_STRING","'library'",1041],"]",")",")",["T_WHITESPACE"," ",1041],"{",["T_WHITESPACE","\n    ",1041],["T_VARIABLE","$index",1042],["T_WHITESPACE"," ",1042],"=",["T_WHITESPACE"," ",1042],["T_STRING","array_search",1042],"(",["T_CONSTANT_ENCAPSED_STRING","'core\/jquery'",1042],",",["T_WHITESPACE"," ",1042],["T_VARIABLE","$attachments",1042],"[",["T_CONSTANT_ENCAPSED_STRING","'#attached'",1042],"]","[",["T_CONSTANT_ENCAPSED_STRING","'library'",1042],"]",")",";",["T_WHITESPACE","\n    ",1042],["T_UNSET","unset",1043],"(",["T_VARIABLE","$attachments",1043],"[",["T_CONSTANT_ENCAPSED_STRING","'#attached'",1043],"]","[",["T_CONSTANT_ENCAPSED_STRING","'library'",1043],"]","[",["T_VARIABLE","$index",1043],"]",")",";",["T_WHITESPACE","\n  ",1043],"}",["T_WHITESPACE","\n",1044],"}",["T_WHITESPACE","\n\n",1045],["T_DOC_COMMENT","\/**\n * Add a renderable array to the top of the page.\n *\n * @param array $page_top\n *   A renderable array representing the top of the page.\n *\/",1047],["T_WHITESPACE","\n",1052],["T_FUNCTION","function",1053],["T_WHITESPACE"," ",1053],["T_STRING","hook_page_top",1053],"(",["T_ARRAY","array",1053],["T_WHITESPACE"," ",1053],"&",["T_VARIABLE","$page_top",1053],")",["T_WHITESPACE"," ",1053],"{",["T_WHITESPACE","\n  ",1053],["T_VARIABLE","$page_top",1054],"[",["T_CONSTANT_ENCAPSED_STRING","'mymodule'",1054],"]",["T_WHITESPACE"," ",1054],"=",["T_WHITESPACE"," ",1054],"[",["T_CONSTANT_ENCAPSED_STRING","'#markup'",1054],["T_WHITESPACE"," ",1054],["T_DOUBLE_ARROW","=>",1054],["T_WHITESPACE"," ",1054],["T_CONSTANT_ENCAPSED_STRING","'This is the top.'",1054],"]",";",["T_WHITESPACE","\n",1054],"}",["T_WHITESPACE","\n\n",1055],["T_DOC_COMMENT","\/**\n * Add a renderable array to the bottom of the page.\n *\n * @param array $page_bottom\n *   A renderable array representing the bottom of the page.\n *\/",1057],["T_WHITESPACE","\n",1062],["T_FUNCTION","function",1063],["T_WHITESPACE"," ",1063],["T_STRING","hook_page_bottom",1063],"(",["T_ARRAY","array",1063],["T_WHITESPACE"," ",1063],"&",["T_VARIABLE","$page_bottom",1063],")",["T_WHITESPACE"," ",1063],"{",["T_WHITESPACE","\n  ",1063],["T_VARIABLE","$page_bottom",1064],"[",["T_CONSTANT_ENCAPSED_STRING","'mymodule'",1064],"]",["T_WHITESPACE"," ",1064],"=",["T_WHITESPACE"," ",1064],"[",["T_CONSTANT_ENCAPSED_STRING","'#markup'",1064],["T_WHITESPACE"," ",1064],["T_DOUBLE_ARROW","=>",1064],["T_WHITESPACE"," ",1064],["T_CONSTANT_ENCAPSED_STRING","'This is the bottom.'",1064],"]",";",["T_WHITESPACE","\n",1064],"}",["T_WHITESPACE","\n\n",1065],["T_DOC_COMMENT","\/**\n * Register a module or theme's theme implementations.\n *\n * The implementations declared by this hook specify how a particular render\n * array is to be rendered as HTML.\n *\n * @param array $existing\n *   An array of existing implementations that may be used for override\n *   purposes. This is primarily useful for themes that may wish to examine\n *   existing implementations to extract data (such as arguments) so that\n *   it may properly register its own, higher priority implementations.\n * @param $type\n *   Whether a theme, module, etc. is being processed. This is primarily useful\n *   so that themes tell if they are the actual theme being called or a parent\n *   theme. May be one of:\n *   - 'module': A module is being checked for theme implementations.\n *   - 'base_theme_engine': A theme engine is being checked for a theme that is\n *     a parent of the actual theme being used.\n *   - 'theme_engine': A theme engine is being checked for the actual theme\n *     being used.\n *   - 'base_theme': A base theme is being checked for theme implementations.\n *   - 'theme': The actual theme in use is being checked.\n * @param $theme\n *   The actual name of theme, module, etc. that is being being processed.\n * @param $path\n *   The directory path of the theme or module, so that it doesn't need to be\n *   looked up.\n *\n * @return array\n *   An associative array of information about theme implementations. The keys\n *   on the outer array are known as \"theme hooks\". For theme suggestions,\n *   instead of the array key being the base theme hook, the key is a theme\n *   suggestion name with the format 'base_hook_name__sub_hook_name'.\n *   For render elements, the key is the machine name of the render element.\n *   The array values are themselves arrays containing information about the\n *   theme hook and its implementation. Each information array must contain\n *   either a 'variables' element (for using a #theme element) or a\n *   'render element' element (for render elements), but not both.\n *   The following elements may be part of each information array:\n *   - variables: Only used for #theme in render array: an array of variables,\n *     where the array keys are the names of the variables, and the array\n *     values are the default values if they are not given in the render array.\n *     Template implementations receive each array key as a variable in the\n *     template file (so they must be legal PHP\/Twig variable names). Function\n *     implementations are passed the variables in a single $variables function\n *     argument. If you are using these variables in a render array, prefix the\n *     variable names defined here with a #.\n *   - render element: Used for render element items only: the name of the\n *     renderable element or element tree to pass to the theme function. This\n *     name is used as the name of the variable that holds the renderable\n *     element or tree in preprocess and process functions.\n *   - file: The file the implementation resides in. This file will be included\n *     prior to the theme being rendered, to make sure that the function or\n *     preprocess function (as needed) is actually loaded.\n *   - path: Override the path of the file to be used. Ordinarily the module or\n *     theme path will be used, but if the file will not be in the default\n *     path, include it here. This path should be relative to the Drupal root\n *     directory.\n *   - template: If specified, the theme implementation is a template file, and\n *     this is the template name. Do not add 'html.twig' on the end of the\n *     template name. The extension will be added automatically by the default\n *     rendering engine (which is Twig.) If 'path' is specified, 'template'\n *     should also be specified. If neither 'template' nor 'function' are\n *     specified, a default template name will be assumed. For example, if a\n *     module registers the 'search_result' theme hook, 'search-result' will be\n *     assigned as its template name.\n *   - function: (deprecated in Drupal 8.0.x, will be removed in Drupal 9.0.x)\n *     If specified, this will be the function name to invoke for this\n *     implementation. If neither 'template' nor 'function' are specified, a\n *     default template name will be assumed. See above for more details.\n *   - base hook: Used for theme suggestions only: the base theme hook name.\n *     Instead of this suggestion's implementation being used directly, the base\n *     hook will be invoked with this implementation as its first suggestion.\n *     The base hook's files will be included and the base hook's preprocess\n *     functions will be called in place of any suggestion's preprocess\n *     functions. If an implementation of hook_theme_suggestions_HOOK() (where\n *     HOOK is the base hook) changes the suggestion order, a different\n *     suggestion may be used in place of this suggestion. If after\n *     hook_theme_suggestions_HOOK() this suggestion remains the first\n *     suggestion, then this suggestion's function or template will be used to\n *     generate the rendered output.\n *   - pattern: A regular expression pattern to be used to allow this theme\n *     implementation to have a dynamic name. The convention is to use __ to\n *     differentiate the dynamic portion of the theme. For example, to allow\n *     forums to be themed individually, the pattern might be: 'forum__'. Then,\n *     when the forum is rendered, following render array can be used:\n *     @code\n *     $render_array = array(\n *       '#theme' => array('forum__' . $tid, 'forum'),\n *       '#forum' => $forum,\n *     );\n *     @endcode\n *   - preprocess functions: A list of functions used to preprocess this data.\n *     Ordinarily this won't be used; it's automatically filled in. By default,\n *     for a module this will be filled in as template_preprocess_HOOK. For\n *     a theme this will be filled in as twig_preprocess and\n *     twig_preprocess_HOOK as well as themename_preprocess and\n *     themename_preprocess_HOOK.\n *   - override preprocess functions: Set to TRUE when a theme does NOT want\n *     the standard preprocess functions to run. This can be used to give a\n *     theme FULL control over how variables are set. For example, if a theme\n *     wants total control over how certain variables in the page.html.twig are\n *     set, this can be set to true. Please keep in mind that when this is used\n *     by a theme, that theme becomes responsible for making sure necessary\n *     variables are set.\n *   - type: (automatically derived) Where the theme hook is defined:\n *     'module', 'theme_engine', or 'theme'.\n *   - theme path: (automatically derived) The directory path of the theme or\n *     module, so that it doesn't need to be looked up.\n *\n * @see themeable\n * @see hook_theme_registry_alter()\n *\/",1067],["T_WHITESPACE","\n",1179],["T_FUNCTION","function",1180],["T_WHITESPACE"," ",1180],["T_STRING","hook_theme",1180],"(",["T_VARIABLE","$existing",1180],",",["T_WHITESPACE"," ",1180],["T_VARIABLE","$type",1180],",",["T_WHITESPACE"," ",1180],["T_VARIABLE","$theme",1180],",",["T_WHITESPACE"," ",1180],["T_VARIABLE","$path",1180],")",["T_WHITESPACE"," ",1180],"{",["T_WHITESPACE","\n  ",1180],["T_RETURN","return",1181],["T_WHITESPACE"," ",1181],["T_ARRAY","array",1181],"(",["T_WHITESPACE","\n    ",1181],["T_CONSTANT_ENCAPSED_STRING","'forum_display'",1182],["T_WHITESPACE"," ",1182],["T_DOUBLE_ARROW","=>",1182],["T_WHITESPACE"," ",1182],["T_ARRAY","array",1182],"(",["T_WHITESPACE","\n      ",1182],["T_CONSTANT_ENCAPSED_STRING","'variables'",1183],["T_WHITESPACE"," ",1183],["T_DOUBLE_ARROW","=>",1183],["T_WHITESPACE"," ",1183],["T_ARRAY","array",1183],"(",["T_CONSTANT_ENCAPSED_STRING","'forums'",1183],["T_WHITESPACE"," ",1183],["T_DOUBLE_ARROW","=>",1183],["T_WHITESPACE"," ",1183],["T_STRING","NULL",1183],",",["T_WHITESPACE"," ",1183],["T_CONSTANT_ENCAPSED_STRING","'topics'",1183],["T_WHITESPACE"," ",1183],["T_DOUBLE_ARROW","=>",1183],["T_WHITESPACE"," ",1183],["T_STRING","NULL",1183],",",["T_WHITESPACE"," ",1183],["T_CONSTANT_ENCAPSED_STRING","'parents'",1183],["T_WHITESPACE"," ",1183],["T_DOUBLE_ARROW","=>",1183],["T_WHITESPACE"," ",1183],["T_STRING","NULL",1183],",",["T_WHITESPACE"," ",1183],["T_CONSTANT_ENCAPSED_STRING","'tid'",1183],["T_WHITESPACE"," ",1183],["T_DOUBLE_ARROW","=>",1183],["T_WHITESPACE"," ",1183],["T_STRING","NULL",1183],",",["T_WHITESPACE"," ",1183],["T_CONSTANT_ENCAPSED_STRING","'sortby'",1183],["T_WHITESPACE"," ",1183],["T_DOUBLE_ARROW","=>",1183],["T_WHITESPACE"," ",1183],["T_STRING","NULL",1183],",",["T_WHITESPACE"," ",1183],["T_CONSTANT_ENCAPSED_STRING","'forum_per_page'",1183],["T_WHITESPACE"," ",1183],["T_DOUBLE_ARROW","=>",1183],["T_WHITESPACE"," ",1183],["T_STRING","NULL",1183],")",",",["T_WHITESPACE","\n    ",1183],")",",",["T_WHITESPACE","\n    ",1184],["T_CONSTANT_ENCAPSED_STRING","'forum_list'",1185],["T_WHITESPACE"," ",1185],["T_DOUBLE_ARROW","=>",1185],["T_WHITESPACE"," ",1185],["T_ARRAY","array",1185],"(",["T_WHITESPACE","\n      ",1185],["T_CONSTANT_ENCAPSED_STRING","'variables'",1186],["T_WHITESPACE"," ",1186],["T_DOUBLE_ARROW","=>",1186],["T_WHITESPACE"," ",1186],["T_ARRAY","array",1186],"(",["T_CONSTANT_ENCAPSED_STRING","'forums'",1186],["T_WHITESPACE"," ",1186],["T_DOUBLE_ARROW","=>",1186],["T_WHITESPACE"," ",1186],["T_STRING","NULL",1186],",",["T_WHITESPACE"," ",1186],["T_CONSTANT_ENCAPSED_STRING","'parents'",1186],["T_WHITESPACE"," ",1186],["T_DOUBLE_ARROW","=>",1186],["T_WHITESPACE"," ",1186],["T_STRING","NULL",1186],",",["T_WHITESPACE"," ",1186],["T_CONSTANT_ENCAPSED_STRING","'tid'",1186],["T_WHITESPACE"," ",1186],["T_DOUBLE_ARROW","=>",1186],["T_WHITESPACE"," ",1186],["T_STRING","NULL",1186],")",",",["T_WHITESPACE","\n    ",1186],")",",",["T_WHITESPACE","\n    ",1187],["T_CONSTANT_ENCAPSED_STRING","'forum_icon'",1188],["T_WHITESPACE"," ",1188],["T_DOUBLE_ARROW","=>",1188],["T_WHITESPACE"," ",1188],["T_ARRAY","array",1188],"(",["T_WHITESPACE","\n      ",1188],["T_CONSTANT_ENCAPSED_STRING","'variables'",1189],["T_WHITESPACE"," ",1189],["T_DOUBLE_ARROW","=>",1189],["T_WHITESPACE"," ",1189],["T_ARRAY","array",1189],"(",["T_CONSTANT_ENCAPSED_STRING","'new_posts'",1189],["T_WHITESPACE"," ",1189],["T_DOUBLE_ARROW","=>",1189],["T_WHITESPACE"," ",1189],["T_STRING","NULL",1189],",",["T_WHITESPACE"," ",1189],["T_CONSTANT_ENCAPSED_STRING","'num_posts'",1189],["T_WHITESPACE"," ",1189],["T_DOUBLE_ARROW","=>",1189],["T_WHITESPACE"," ",1189],["T_LNUMBER","0",1189],",",["T_WHITESPACE"," ",1189],["T_CONSTANT_ENCAPSED_STRING","'comment_mode'",1189],["T_WHITESPACE"," ",1189],["T_DOUBLE_ARROW","=>",1189],["T_WHITESPACE"," ",1189],["T_LNUMBER","0",1189],",",["T_WHITESPACE"," ",1189],["T_CONSTANT_ENCAPSED_STRING","'sticky'",1189],["T_WHITESPACE"," ",1189],["T_DOUBLE_ARROW","=>",1189],["T_WHITESPACE"," ",1189],["T_LNUMBER","0",1189],")",",",["T_WHITESPACE","\n    ",1189],")",",",["T_WHITESPACE","\n    ",1190],["T_CONSTANT_ENCAPSED_STRING","'status_report'",1191],["T_WHITESPACE"," ",1191],["T_DOUBLE_ARROW","=>",1191],["T_WHITESPACE"," ",1191],["T_ARRAY","array",1191],"(",["T_WHITESPACE","\n      ",1191],["T_CONSTANT_ENCAPSED_STRING","'render element'",1192],["T_WHITESPACE"," ",1192],["T_DOUBLE_ARROW","=>",1192],["T_WHITESPACE"," ",1192],["T_CONSTANT_ENCAPSED_STRING","'requirements'",1192],",",["T_WHITESPACE","\n      ",1192],["T_CONSTANT_ENCAPSED_STRING","'file'",1193],["T_WHITESPACE"," ",1193],["T_DOUBLE_ARROW","=>",1193],["T_WHITESPACE"," ",1193],["T_CONSTANT_ENCAPSED_STRING","'system.admin.inc'",1193],",",["T_WHITESPACE","\n    ",1193],")",",",["T_WHITESPACE","\n  ",1194],")",";",["T_WHITESPACE","\n",1195],"}",["T_WHITESPACE","\n\n",1196],["T_DOC_COMMENT","\/**\n * Alter the theme registry information returned from hook_theme().\n *\n * The theme registry stores information about all available theme hooks,\n * including which callback functions those hooks will call when triggered,\n * what template files are exposed by these hooks, and so on.\n *\n * Note that this hook is only executed as the theme cache is re-built.\n * Changes here will not be visible until the next cache clear.\n *\n * The $theme_registry array is keyed by theme hook name, and contains the\n * information returned from hook_theme(), as well as additional properties\n * added by \\Drupal\\Core\\Theme\\Registry::processExtension().\n *\n * For example:\n * @code\n * $theme_registry['block_content_add_list'] = array (\n *   'template' => 'block-content-add-list',\n *   'path' => 'core\/themes\/seven\/templates',\n *   'type' => 'theme_engine',\n *   'theme path' => 'core\/themes\/seven',\n *   'includes' => array (\n *     0 => 'core\/modules\/block_content\/block_content.pages.inc',\n *   ),\n *   'variables' => array (\n *     'content' => NULL,\n *   ),\n *   'preprocess functions' => array (\n *     0 => 'template_preprocess',\n *     1 => 'template_preprocess_block_content_add_list',\n *     2 => 'contextual_preprocess',\n *     3 => 'seven_preprocess_block_content_add_list',\n *   ),\n * );\n * @endcode\n *\n * @param $theme_registry\n *   The entire cache of theme registry information, post-processing.\n *\n * @see hook_theme()\n * @see \\Drupal\\Core\\Theme\\Registry::processExtension()\n *\/",1198],["T_WHITESPACE","\n",1239],["T_FUNCTION","function",1240],["T_WHITESPACE"," ",1240],["T_STRING","hook_theme_registry_alter",1240],"(","&",["T_VARIABLE","$theme_registry",1240],")",["T_WHITESPACE"," ",1240],"{",["T_WHITESPACE","\n  ",1240],["T_COMMENT","\/\/ Kill the next\/previous forum topic navigation links.\n",1241],["T_WHITESPACE","  ",1242],["T_FOREACH","foreach",1242],["T_WHITESPACE"," ",1242],"(",["T_VARIABLE","$theme_registry",1242],"[",["T_CONSTANT_ENCAPSED_STRING","'forum_topic_navigation'",1242],"]","[",["T_CONSTANT_ENCAPSED_STRING","'preprocess functions'",1242],"]",["T_WHITESPACE"," ",1242],["T_AS","as",1242],["T_WHITESPACE"," ",1242],["T_VARIABLE","$key",1242],["T_WHITESPACE"," ",1242],["T_DOUBLE_ARROW","=>",1242],["T_WHITESPACE"," ",1242],["T_VARIABLE","$value",1242],")",["T_WHITESPACE"," ",1242],"{",["T_WHITESPACE","\n    ",1242],["T_IF","if",1243],["T_WHITESPACE"," ",1243],"(",["T_VARIABLE","$value",1243],["T_WHITESPACE"," ",1243],["T_IS_EQUAL","==",1243],["T_WHITESPACE"," ",1243],["T_CONSTANT_ENCAPSED_STRING","'template_preprocess_forum_topic_navigation'",1243],")",["T_WHITESPACE"," ",1243],"{",["T_WHITESPACE","\n      ",1243],["T_UNSET","unset",1244],"(",["T_VARIABLE","$theme_registry",1244],"[",["T_CONSTANT_ENCAPSED_STRING","'forum_topic_navigation'",1244],"]","[",["T_CONSTANT_ENCAPSED_STRING","'preprocess functions'",1244],"]","[",["T_VARIABLE","$key",1244],"]",")",";",["T_WHITESPACE","\n    ",1244],"}",["T_WHITESPACE","\n  ",1245],"}",["T_WHITESPACE","\n",1246],"}",["T_WHITESPACE","\n\n",1247],["T_DOC_COMMENT","\/**\n * Alter the default, hook-independent variables for all templates.\n *\n * Allows modules to provide additional default template variables or manipulate\n * existing. This hook is invoked from template_preprocess() after basic default\n * template variables have been set up and before the next template preprocess\n * function is invoked.\n *\n * Note that the default template variables are statically cached within a\n * request. When adding a template variable that depends on other context, it is\n * your responsibility to appropriately reset the static cache in\n * template_preprocess() when needed:\n * @code\n * drupal_static_reset('template_preprocess');\n * @endcode\n *\n * See user_template_preprocess_default_variables_alter() for an example.\n *\n * @param array $variables\n *   An associative array of default template variables, as set up by\n *   _template_preprocess_default_variables(). Passed by reference.\n *\n * @see template_preprocess()\n * @see _template_preprocess_default_variables()\n *\/",1249],["T_WHITESPACE","\n",1273],["T_FUNCTION","function",1274],["T_WHITESPACE"," ",1274],["T_STRING","hook_template_preprocess_default_variables_alter",1274],"(","&",["T_VARIABLE","$variables",1274],")",["T_WHITESPACE"," ",1274],"{",["T_WHITESPACE","\n  ",1274],["T_VARIABLE","$variables",1275],"[",["T_CONSTANT_ENCAPSED_STRING","'is_admin'",1275],"]",["T_WHITESPACE"," ",1275],"=",["T_WHITESPACE"," ",1275],["T_NS_SEPARATOR","\\",1275],["T_STRING","Drupal",1275],["T_DOUBLE_COLON","::",1275],["T_STRING","currentUser",1275],"(",")",["T_OBJECT_OPERATOR","->",1275],["T_STRING","hasPermission",1275],"(",["T_CONSTANT_ENCAPSED_STRING","'access administration pages'",1275],")",";",["T_WHITESPACE","\n",1275],"}",["T_WHITESPACE","\n\n",1276],["T_DOC_COMMENT","\/**\n * @} End of \"addtogroup hooks\".\n *\/",1278],["T_WHITESPACE","\n",1280]]