[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Core",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Render",3],";",["T_WHITESPACE","\n\n",3],["T_DOC_COMMENT","\/**\n * Defines an interface for processing attachments of responses that have them.\n *\n * @see \\Drupal\\Core\\Ajax\\AjaxResponse\n * @see \\Drupal\\Core\\Ajax\\AjaxResponseAttachmentsProcessor\n * @see \\Drupal\\Core\\Render\\HtmlResponse\n * @see \\Drupal\\Core\\Render\\HtmlResponseAttachmentsProcessor\n *\/",5],["T_WHITESPACE","\n",12],["T_INTERFACE","interface",13],["T_WHITESPACE"," ",13],["T_STRING","AttachmentsResponseProcessorInterface",13],["T_WHITESPACE"," ",13],"{",["T_WHITESPACE","\n\n  ",13],["T_DOC_COMMENT","\/**\n   * Processes the attachments of a response that has attachments.\n   *\n   * Libraries, JavaScript settings, feeds, HTML <head> tags, HTML <head> links,\n   * HTTP headers, and the HTTP status code are attached to render arrays using\n   * the #attached property. The #attached property is an associative array,\n   * where the keys are the attachment types and the values are the attached\n   * data. For example:\n   *\n   * @code\n   * $build['#attached']['library'][] = [\n   *   'library' => ['core\/jquery']\n   * ];\n   * $build['#attached']['http_header'] = [\n   *   ['Content-Type', 'application\/rss+xml; charset=utf-8'],\n   * ];\n   * @endcode\n   *\n   * The available keys are:\n   * - 'library' (asset libraries)\n   * - 'drupalSettings' (JavaScript settings)\n   * - 'feed' (RSS feeds)\n   * - 'html_head' (tags in HTML <head>)\n   * - 'html_head_link' (<link> tags in HTML <head>)\n   * - 'http_header' (HTTP headers and status code)\n   *\n   * @param \\Drupal\\Core\\Render\\AttachmentsInterface $response\n   *   The response to process.\n   *\n   * @return \\Drupal\\Core\\Render\\AttachmentsInterface\n   *   The processed response, with the attachments updated to reflect their\n   *   final values.\n   *\n   * @throws \\InvalidArgumentException\n   *   Thrown when the $response parameter is not the type of response object\n   *   the processor expects.\n   *\/",15],["T_WHITESPACE","\n  ",51],["T_PUBLIC","public",52],["T_WHITESPACE"," ",52],["T_FUNCTION","function",52],["T_WHITESPACE"," ",52],["T_STRING","processAttachments",52],"(",["T_STRING","AttachmentsInterface",52],["T_WHITESPACE"," ",52],["T_VARIABLE","$response",52],")",";",["T_WHITESPACE","\n\n",52],"}",["T_WHITESPACE","\n",54]]