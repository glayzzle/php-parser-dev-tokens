[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Core",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Render",3],";",["T_WHITESPACE","\n\n",3],["T_DOC_COMMENT","\/**\n * Collects available render array element types.\n *\/",5],["T_WHITESPACE","\n",7],["T_INTERFACE","interface",8],["T_WHITESPACE"," ",8],["T_STRING","ElementInfoManagerInterface",8],["T_WHITESPACE"," ",8],"{",["T_WHITESPACE","\n\n  ",8],["T_DOC_COMMENT","\/**\n   * Retrieves the default properties for the defined element type.\n   *\n   * Each of the form element types defined by this hook is assumed to have\n   * a matching theme hook, which should be registered with hook_theme() as\n   * normal.\n   *\n   * For more information about custom element types see the explanation at\n   * https:\/\/www.drupal.org\/node\/169815.\n   *\n   * @param string $type\n   *   The machine name of an element type plugin.\n   *\n   * @return array\n   *   An associative array describing the element types being defined. The\n   *   array contains a sub-array for each element type, with the\n   *   machine-readable type name as the key. Each sub-array has a number of\n   *   possible attributes:\n   *   - #input: boolean indicating whether or not this element carries a value\n   *     (even if it's hidden).\n   *   - #process: array of callback functions taking $element, $form_state,\n   *     and $complete_form.\n   *   - #after_build: array of callables taking $element and $form_state.\n   *   - #validate: array of callback functions taking $form and $form_state.\n   *   - #element_validate: array of callback functions taking $element and\n   *     $form_state.\n   *   - #pre_render: array of callables taking $element.\n   *   - #post_render: array of callables taking $children and $element.\n   *   - #submit: array of callback functions taking $form and $form_state.\n   *   - #title_display: optional string indicating if and how #title should be\n   *     displayed (see form-element.html.twig).\n   *\n   * @see \\Drupal\\Core\\Render\\Element\\ElementInterface\n   * @see \\Drupal\\Core\\Render\\Element\\ElementInterface::getInfo()\n   *\/",10],["T_WHITESPACE","\n  ",44],["T_PUBLIC","public",45],["T_WHITESPACE"," ",45],["T_FUNCTION","function",45],["T_WHITESPACE"," ",45],["T_STRING","getInfo",45],"(",["T_VARIABLE","$type",45],")",";",["T_WHITESPACE","\n\n  ",45],["T_DOC_COMMENT","\/**\n   * Retrieves a single property for the defined element type.\n   *\n   * @param string $type\n   *   An element type as defined by an element plugin.\n   * @param string $property_name\n   *   The property within the element type that should be returned.\n   * @param $default\n   *   (Optional) The value to return if the element type does not specify a\n   *   value for the property. Defaults to NULL.\n   *\n   * @return string\n   *   The property value of the defined element type. Or the provided\n   *   default value, which can be NULL.\n   *\/",47],["T_WHITESPACE","\n  ",61],["T_PUBLIC","public",62],["T_WHITESPACE"," ",62],["T_FUNCTION","function",62],["T_WHITESPACE"," ",62],["T_STRING","getInfoProperty",62],"(",["T_VARIABLE","$type",62],",",["T_WHITESPACE"," ",62],["T_VARIABLE","$property_name",62],",",["T_WHITESPACE"," ",62],["T_VARIABLE","$default",62],["T_WHITESPACE"," ",62],"=",["T_WHITESPACE"," ",62],["T_STRING","NULL",62],")",";",["T_WHITESPACE","\n\n",62],"}",["T_WHITESPACE","\n",64]]