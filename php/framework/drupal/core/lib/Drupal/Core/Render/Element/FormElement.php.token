[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Core",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Render",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Element",3],";",["T_WHITESPACE","\n\n",3],["T_USE","use",5],["T_WHITESPACE"," ",5],["T_STRING","Drupal",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Core",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Form",5],["T_NS_SEPARATOR","\\",5],["T_STRING","FormStateInterface",5],";",["T_WHITESPACE","\n",5],["T_USE","use",6],["T_WHITESPACE"," ",6],["T_STRING","Drupal",6],["T_NS_SEPARATOR","\\",6],["T_STRING","Core",6],["T_NS_SEPARATOR","\\",6],["T_STRING","Render",6],["T_NS_SEPARATOR","\\",6],["T_STRING","BubbleableMetadata",6],";",["T_WHITESPACE","\n",6],["T_USE","use",7],["T_WHITESPACE"," ",7],["T_STRING","Drupal",7],["T_NS_SEPARATOR","\\",7],["T_STRING","Core",7],["T_NS_SEPARATOR","\\",7],["T_STRING","Url",7],";",["T_WHITESPACE","\n\n",7],["T_DOC_COMMENT","\/**\n * Provides a base class for form element plugins.\n *\n * Form elements are a subset of render elements, representing elements for\n * HTML forms, which can be referenced in form arrays. See the\n * @link theme_render Render API topic @endlink for an overview of render\n * arrays and render elements, and the @link form_api Form API topic @endlink\n * for an overview of forms and form arrays.\n *\n * The elements of form arrays are divided up into properties (whose keys\n * start with #) and children (whose keys do not start with #). The properties\n * provide data or settings that are used in rendering and form processing.\n * Some properties are specific to a particular type of form\/render element,\n * some are available for any render element, and some are available for any\n * form input element. A list of the properties that are available for all form\n * elements follows; see \\Drupal\\Core\\Render\\Element\\RenderElement for some\n * additional information, as well as a list of properties that are common to\n * all render elements (including form elements). Properties specific to a\n * particular element are documented on that element's class.\n *\n * Here is a list of properties that are used during the rendering and form\n * processing of form elements:\n * - #after_build: (array) Array of callables or function names, which are\n *   called after the element is built. Arguments: $element, $form_state.\n * - #ajax: (array) Array of elements to specify Ajax behavior. See\n *   the @link ajax Ajax API topic @endlink for more information.\n * - #array_parents: (string[], read-only) Array of names of all the element's\n *   parents (including itself) in the render array. See also #parents, #tree.\n * - #default_value: Default value for the element. See also #value.\n * - #description: (string) Help or description text for the element. In an\n *   ideal user interface, the #title should be enough to describe the element,\n *   so most elements should not have a description; if you do need one, make\n *   sure it is translated. If it is not already wrapped in a safe markup\n *   object, it will be filtered for XSS safety.\n * - #disabled: (bool) If TRUE, the element is shown but does not accept\n *   user input.\n * - #element_validate: (array) Array of callables or function names, which\n *   are called to validate the input. Arguments: $element, $form_state, $form.\n * - #field_prefix: (string) Prefix to display before the HTML input element.\n *   Should be translated, normally. If it is not already wrapped in a safe\n *   markup object, will be filtered for XSS safety.\n * - #field_suffix: (string) Suffix to display after the HTML input element.\n *   Should be translated, normally. If it is not already wrapped in a safe\n *   markup object, will be filtered for XSS safety.\n * - #input: (bool, internal) Whether or not the element accepts input.\n * - #parents: (string[], read-only) Array of names of the element's parents\n *   for purposes of getting values out of $form_state. See also\n *   #array_parents, #tree.\n * - #process: (array) Array of callables or function names, which are\n *   called during form building. Arguments: $element, $form_state, $form.\n * - #processed: (bool, internal) Set to TRUE when the element is processed.\n * - #required: (bool) Whether or not input is required on the element.\n * - #states: (array) Information about JavaScript states, such as when to\n *   hide or show the element based on input on other elements.\n *   See drupal_process_states() for documentation.\n * - #title: (string) Title of the form element. Should be translated.\n * - #title_display: (string) Where and how to display the #title. Possible\n *   values:\n *   - before: Label goes before the element (default for most elements).\n *   - after: Label goes after the element (default for radio elements).\n *   - invisible: Label is there but is made invisible using CSS.\n *   - attribute: Make it the title attribute (hover tooltip).\n * - #tree: (bool) TRUE if the values of this element and its children should\n *   be hierarchical in $form_state; FALSE if the values should be flat.\n *   See also #parents, #array_parents.\n * - #value_callback: (callable) Callable or function name, which is called\n *   to transform the raw user input to the element's value. Arguments:\n *   $element, $input, $form_state.\n *\n * @see \\Drupal\\Core\\Render\\Annotation\\FormElement\n * @see \\Drupal\\Core\\Render\\Element\\FormElementInterface\n * @see \\Drupal\\Core\\Render\\ElementInfoManager\n * @see plugin_api\n *\n * @ingroup theme_render\n *\/",9],["T_WHITESPACE","\n",84],["T_ABSTRACT","abstract",85],["T_WHITESPACE"," ",85],["T_CLASS","class",85],["T_WHITESPACE"," ",85],["T_STRING","FormElement",85],["T_WHITESPACE"," ",85],["T_EXTENDS","extends",85],["T_WHITESPACE"," ",85],["T_STRING","RenderElement",85],["T_WHITESPACE"," ",85],["T_IMPLEMENTS","implements",85],["T_WHITESPACE"," ",85],["T_STRING","FormElementInterface",85],["T_WHITESPACE"," ",85],"{",["T_WHITESPACE","\n\n  ",85],["T_DOC_COMMENT","\/**\n   * {@inheritdoc}\n   *\/",87],["T_WHITESPACE","\n  ",89],["T_PUBLIC","public",90],["T_WHITESPACE"," ",90],["T_STATIC","static",90],["T_WHITESPACE"," ",90],["T_FUNCTION","function",90],["T_WHITESPACE"," ",90],["T_STRING","valueCallback",90],"(","&",["T_VARIABLE","$element",90],",",["T_WHITESPACE"," ",90],["T_VARIABLE","$input",90],",",["T_WHITESPACE"," ",90],["T_STRING","FormStateInterface",90],["T_WHITESPACE"," ",90],["T_VARIABLE","$form_state",90],")",["T_WHITESPACE"," ",90],"{",["T_WHITESPACE","\n    ",90],["T_RETURN","return",91],["T_WHITESPACE"," ",91],["T_STRING","NULL",91],";",["T_WHITESPACE","\n  ",91],"}",["T_WHITESPACE","\n\n  ",92],["T_DOC_COMMENT","\/**\n   * #process callback for #pattern form element property.\n   *\n   * @param array $element\n   *   An associative array containing the properties and children of the\n   *   generic input element.\n   * @param \\Drupal\\Core\\Form\\FormStateInterface $form_state\n   *   The current state of the form.\n   * @param array $complete_form\n   *   The complete form structure.\n   *\n   * @return array\n   *   The processed element.\n   *\/",94],["T_WHITESPACE","\n  ",107],["T_PUBLIC","public",108],["T_WHITESPACE"," ",108],["T_STATIC","static",108],["T_WHITESPACE"," ",108],["T_FUNCTION","function",108],["T_WHITESPACE"," ",108],["T_STRING","processPattern",108],"(","&",["T_VARIABLE","$element",108],",",["T_WHITESPACE"," ",108],["T_STRING","FormStateInterface",108],["T_WHITESPACE"," ",108],["T_VARIABLE","$form_state",108],",",["T_WHITESPACE"," ",108],"&",["T_VARIABLE","$complete_form",108],")",["T_WHITESPACE"," ",108],"{",["T_WHITESPACE","\n    ",108],["T_IF","if",109],["T_WHITESPACE"," ",109],"(",["T_ISSET","isset",109],"(",["T_VARIABLE","$element",109],"[",["T_CONSTANT_ENCAPSED_STRING","'#pattern'",109],"]",")",["T_WHITESPACE"," ",109],["T_BOOLEAN_AND","&&",109],["T_WHITESPACE"," ",109],"!",["T_ISSET","isset",109],"(",["T_VARIABLE","$element",109],"[",["T_CONSTANT_ENCAPSED_STRING","'#attributes'",109],"]","[",["T_CONSTANT_ENCAPSED_STRING","'pattern'",109],"]",")",")",["T_WHITESPACE"," ",109],"{",["T_WHITESPACE","\n      ",109],["T_VARIABLE","$element",110],"[",["T_CONSTANT_ENCAPSED_STRING","'#attributes'",110],"]","[",["T_CONSTANT_ENCAPSED_STRING","'pattern'",110],"]",["T_WHITESPACE"," ",110],"=",["T_WHITESPACE"," ",110],["T_VARIABLE","$element",110],"[",["T_CONSTANT_ENCAPSED_STRING","'#pattern'",110],"]",";",["T_WHITESPACE","\n      ",110],["T_VARIABLE","$element",111],"[",["T_CONSTANT_ENCAPSED_STRING","'#element_validate'",111],"]","[","]",["T_WHITESPACE"," ",111],"=",["T_WHITESPACE"," ",111],["T_ARRAY","array",111],"(",["T_STRING","get_called_class",111],"(",")",",",["T_WHITESPACE"," ",111],["T_CONSTANT_ENCAPSED_STRING","'validatePattern'",111],")",";",["T_WHITESPACE","\n    ",111],"}",["T_WHITESPACE","\n\n    ",112],["T_RETURN","return",114],["T_WHITESPACE"," ",114],["T_VARIABLE","$element",114],";",["T_WHITESPACE","\n  ",114],"}",["T_WHITESPACE","\n\n  ",115],["T_DOC_COMMENT","\/**\n   * #element_validate callback for #pattern form element property.\n   *\n   * @param $element\n   *   An associative array containing the properties and children of the\n   *   generic form element.\n   * @param $form_state\n   *   The current state of the form.\n   * @param array $complete_form\n   *   The complete form structure.\n   *\/",117],["T_WHITESPACE","\n  ",127],["T_PUBLIC","public",128],["T_WHITESPACE"," ",128],["T_STATIC","static",128],["T_WHITESPACE"," ",128],["T_FUNCTION","function",128],["T_WHITESPACE"," ",128],["T_STRING","validatePattern",128],"(","&",["T_VARIABLE","$element",128],",",["T_WHITESPACE"," ",128],["T_STRING","FormStateInterface",128],["T_WHITESPACE"," ",128],["T_VARIABLE","$form_state",128],",",["T_WHITESPACE"," ",128],"&",["T_VARIABLE","$complete_form",128],")",["T_WHITESPACE"," ",128],"{",["T_WHITESPACE","\n    ",128],["T_IF","if",129],["T_WHITESPACE"," ",129],"(",["T_VARIABLE","$element",129],"[",["T_CONSTANT_ENCAPSED_STRING","'#value'",129],"]",["T_WHITESPACE"," ",129],["T_IS_NOT_IDENTICAL","!==",129],["T_WHITESPACE"," ",129],["T_CONSTANT_ENCAPSED_STRING","''",129],")",["T_WHITESPACE"," ",129],"{",["T_WHITESPACE","\n      ",129],["T_COMMENT","\/\/ The pattern must match the entire string and should have the same\n",130],["T_WHITESPACE","      ",131],["T_COMMENT","\/\/ behavior as the RegExp object in ECMA 262.\n",131],["T_WHITESPACE","      ",132],["T_COMMENT","\/\/ - Use bracket-style delimiters to avoid introducing a special delimiter\n",132],["T_WHITESPACE","      ",133],["T_COMMENT","\/\/   character like '\/' that would have to be escaped.\n",133],["T_WHITESPACE","      ",134],["T_COMMENT","\/\/ - Put in brackets so that the pattern can't interfere with what's\n",134],["T_WHITESPACE","      ",135],["T_COMMENT","\/\/   prepended and appended.\n",135],["T_WHITESPACE","      ",136],["T_VARIABLE","$pattern",136],["T_WHITESPACE"," ",136],"=",["T_WHITESPACE"," ",136],["T_CONSTANT_ENCAPSED_STRING","'{^(?:'",136],["T_WHITESPACE"," ",136],".",["T_WHITESPACE"," ",136],["T_VARIABLE","$element",136],"[",["T_CONSTANT_ENCAPSED_STRING","'#pattern'",136],"]",["T_WHITESPACE"," ",136],".",["T_WHITESPACE"," ",136],["T_CONSTANT_ENCAPSED_STRING","')$}'",136],";",["T_WHITESPACE","\n\n      ",136],["T_IF","if",138],["T_WHITESPACE"," ",138],"(","!",["T_STRING","preg_match",138],"(",["T_VARIABLE","$pattern",138],",",["T_WHITESPACE"," ",138],["T_VARIABLE","$element",138],"[",["T_CONSTANT_ENCAPSED_STRING","'#value'",138],"]",")",")",["T_WHITESPACE"," ",138],"{",["T_WHITESPACE","\n        ",138],["T_VARIABLE","$form_state",139],["T_OBJECT_OPERATOR","->",139],["T_STRING","setError",139],"(",["T_VARIABLE","$element",139],",",["T_WHITESPACE"," ",139],["T_STRING","t",139],"(",["T_CONSTANT_ENCAPSED_STRING","'%name field is not in the right format.'",139],",",["T_WHITESPACE"," ",139],["T_ARRAY","array",139],"(",["T_CONSTANT_ENCAPSED_STRING","'%name'",139],["T_WHITESPACE"," ",139],["T_DOUBLE_ARROW","=>",139],["T_WHITESPACE"," ",139],["T_VARIABLE","$element",139],"[",["T_CONSTANT_ENCAPSED_STRING","'#title'",139],"]",")",")",")",";",["T_WHITESPACE","\n      ",139],"}",["T_WHITESPACE","\n    ",140],"}",["T_WHITESPACE","\n  ",141],"}",["T_WHITESPACE","\n\n  ",142],["T_DOC_COMMENT","\/**\n   * Adds autocomplete functionality to elements.\n   *\n   * This sets up autocomplete functionality for elements with an\n   * #autocomplete_route_name property, using the #autocomplete_route_parameters\n   * property if present.\n   *\n   * For example, suppose your autocomplete route name is\n   * 'mymodule.autocomplete' and its path is\n   * '\/mymodule\/autocomplete\/{a}\/{b}'. In a form array, you would create a text\n   * field with properties:\n   * @code\n   * '#autocomplete_route_name' => 'mymodule.autocomplete',\n   * '#autocomplete_route_parameters' => array('a' => $some_key, 'b' => $some_id),\n   * @endcode\n   * If the user types \"keywords\" in that field, the full path called would be:\n   * 'mymodule_autocomplete\/$some_key\/$some_id?q=keywords'\n   *\n   * @param array $element\n   *   The form element to process. Properties used:\n   *   - #autocomplete_route_name: A route to be used as callback URL by the\n   *     autocomplete JavaScript library.\n   *   - #autocomplete_route_parameters: The parameters to be used in\n   *     conjunction with the route name.\n   * @param \\Drupal\\Core\\Form\\FormStateInterface $form_state\n   *   The current state of the form.\n   * @param array $complete_form\n   *   The complete form structure.\n   *\n   * @return array\n   *   The form element.\n   *\/",144],["T_WHITESPACE","\n  ",175],["T_PUBLIC","public",176],["T_WHITESPACE"," ",176],["T_STATIC","static",176],["T_WHITESPACE"," ",176],["T_FUNCTION","function",176],["T_WHITESPACE"," ",176],["T_STRING","processAutocomplete",176],"(","&",["T_VARIABLE","$element",176],",",["T_WHITESPACE"," ",176],["T_STRING","FormStateInterface",176],["T_WHITESPACE"," ",176],["T_VARIABLE","$form_state",176],",",["T_WHITESPACE"," ",176],"&",["T_VARIABLE","$complete_form",176],")",["T_WHITESPACE"," ",176],"{",["T_WHITESPACE","\n    ",176],["T_VARIABLE","$url",177],["T_WHITESPACE"," ",177],"=",["T_WHITESPACE"," ",177],["T_STRING","NULL",177],";",["T_WHITESPACE","\n    ",177],["T_VARIABLE","$access",178],["T_WHITESPACE"," ",178],"=",["T_WHITESPACE"," ",178],["T_STRING","FALSE",178],";",["T_WHITESPACE","\n\n    ",178],["T_IF","if",180],["T_WHITESPACE"," ",180],"(","!",["T_EMPTY","empty",180],"(",["T_VARIABLE","$element",180],"[",["T_CONSTANT_ENCAPSED_STRING","'#autocomplete_route_name'",180],"]",")",")",["T_WHITESPACE"," ",180],"{",["T_WHITESPACE","\n      ",180],["T_VARIABLE","$parameters",181],["T_WHITESPACE"," ",181],"=",["T_WHITESPACE"," ",181],["T_ISSET","isset",181],"(",["T_VARIABLE","$element",181],"[",["T_CONSTANT_ENCAPSED_STRING","'#autocomplete_route_parameters'",181],"]",")",["T_WHITESPACE"," ",181],"?",["T_WHITESPACE"," ",181],["T_VARIABLE","$element",181],"[",["T_CONSTANT_ENCAPSED_STRING","'#autocomplete_route_parameters'",181],"]",["T_WHITESPACE"," ",181],":",["T_WHITESPACE"," ",181],["T_ARRAY","array",181],"(",")",";",["T_WHITESPACE","\n      ",181],["T_VARIABLE","$url",182],["T_WHITESPACE"," ",182],"=",["T_WHITESPACE"," ",182],["T_STRING","Url",182],["T_DOUBLE_COLON","::",182],["T_STRING","fromRoute",182],"(",["T_VARIABLE","$element",182],"[",["T_CONSTANT_ENCAPSED_STRING","'#autocomplete_route_name'",182],"]",",",["T_WHITESPACE"," ",182],["T_VARIABLE","$parameters",182],")",["T_OBJECT_OPERATOR","->",182],["T_STRING","toString",182],"(",["T_STRING","TRUE",182],")",";",["T_WHITESPACE","\n      ",182],["T_DOC_COMMENT","\/** @var \\Drupal\\Core\\Access\\AccessManagerInterface $access_manager *\/",183],["T_WHITESPACE","\n      ",183],["T_VARIABLE","$access_manager",184],["T_WHITESPACE"," ",184],"=",["T_WHITESPACE"," ",184],["T_NS_SEPARATOR","\\",184],["T_STRING","Drupal",184],["T_DOUBLE_COLON","::",184],["T_STRING","service",184],"(",["T_CONSTANT_ENCAPSED_STRING","'access_manager'",184],")",";",["T_WHITESPACE","\n      ",184],["T_VARIABLE","$access",185],["T_WHITESPACE"," ",185],"=",["T_WHITESPACE"," ",185],["T_VARIABLE","$access_manager",185],["T_OBJECT_OPERATOR","->",185],["T_STRING","checkNamedRoute",185],"(",["T_VARIABLE","$element",185],"[",["T_CONSTANT_ENCAPSED_STRING","'#autocomplete_route_name'",185],"]",",",["T_WHITESPACE"," ",185],["T_VARIABLE","$parameters",185],",",["T_WHITESPACE"," ",185],["T_NS_SEPARATOR","\\",185],["T_STRING","Drupal",185],["T_DOUBLE_COLON","::",185],["T_STRING","currentUser",185],"(",")",",",["T_WHITESPACE"," ",185],["T_STRING","TRUE",185],")",";",["T_WHITESPACE","\n    ",185],"}",["T_WHITESPACE","\n\n    ",186],["T_IF","if",188],["T_WHITESPACE"," ",188],"(",["T_VARIABLE","$access",188],")",["T_WHITESPACE"," ",188],"{",["T_WHITESPACE","\n      ",188],["T_VARIABLE","$metadata",189],["T_WHITESPACE"," ",189],"=",["T_WHITESPACE"," ",189],["T_STRING","BubbleableMetadata",189],["T_DOUBLE_COLON","::",189],["T_STRING","createFromRenderArray",189],"(",["T_VARIABLE","$element",189],")",";",["T_WHITESPACE","\n      ",189],["T_IF","if",190],["T_WHITESPACE"," ",190],"(",["T_VARIABLE","$access",190],["T_OBJECT_OPERATOR","->",190],["T_STRING","isAllowed",190],"(",")",")",["T_WHITESPACE"," ",190],"{",["T_WHITESPACE","\n        ",190],["T_VARIABLE","$element",191],"[",["T_CONSTANT_ENCAPSED_STRING","'#attributes'",191],"]","[",["T_CONSTANT_ENCAPSED_STRING","'class'",191],"]","[","]",["T_WHITESPACE"," ",191],"=",["T_WHITESPACE"," ",191],["T_CONSTANT_ENCAPSED_STRING","'form-autocomplete'",191],";",["T_WHITESPACE","\n        ",191],["T_VARIABLE","$metadata",192],["T_OBJECT_OPERATOR","->",192],["T_STRING","addAttachments",192],"(","[",["T_CONSTANT_ENCAPSED_STRING","'library'",192],["T_WHITESPACE"," ",192],["T_DOUBLE_ARROW","=>",192],["T_WHITESPACE"," ",192],"[",["T_CONSTANT_ENCAPSED_STRING","'core\/drupal.autocomplete'",192],"]","]",")",";",["T_WHITESPACE","\n        ",192],["T_COMMENT","\/\/ Provide a data attribute for the JavaScript behavior to bind to.\n",193],["T_WHITESPACE","        ",194],["T_VARIABLE","$element",194],"[",["T_CONSTANT_ENCAPSED_STRING","'#attributes'",194],"]","[",["T_CONSTANT_ENCAPSED_STRING","'data-autocomplete-path'",194],"]",["T_WHITESPACE"," ",194],"=",["T_WHITESPACE"," ",194],["T_VARIABLE","$url",194],["T_OBJECT_OPERATOR","->",194],["T_STRING","getGeneratedUrl",194],"(",")",";",["T_WHITESPACE","\n        ",194],["T_VARIABLE","$metadata",195],["T_WHITESPACE"," ",195],"=",["T_WHITESPACE"," ",195],["T_VARIABLE","$metadata",195],["T_OBJECT_OPERATOR","->",195],["T_STRING","merge",195],"(",["T_VARIABLE","$url",195],")",";",["T_WHITESPACE","\n      ",195],"}",["T_WHITESPACE","\n      ",196],["T_VARIABLE","$metadata",197],["T_WHITESPACE","\n        ",197],["T_OBJECT_OPERATOR","->",198],["T_STRING","merge",198],"(",["T_STRING","BubbleableMetadata",198],["T_DOUBLE_COLON","::",198],["T_STRING","createFromObject",198],"(",["T_VARIABLE","$access",198],")",")",["T_WHITESPACE","\n        ",198],["T_OBJECT_OPERATOR","->",199],["T_STRING","applyTo",199],"(",["T_VARIABLE","$element",199],")",";",["T_WHITESPACE","\n    ",199],"}",["T_WHITESPACE","\n\n    ",200],["T_RETURN","return",202],["T_WHITESPACE"," ",202],["T_VARIABLE","$element",202],";",["T_WHITESPACE","\n  ",202],"}",["T_WHITESPACE","\n\n",203],"}",["T_WHITESPACE","\n",205]]