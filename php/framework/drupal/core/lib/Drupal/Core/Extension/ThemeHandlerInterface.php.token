[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Core",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Extension",3],";",["T_WHITESPACE","\n\n",3],["T_DOC_COMMENT","\/**\n * Manages the list of available themes.\n *\/",5],["T_WHITESPACE","\n",7],["T_INTERFACE","interface",8],["T_WHITESPACE"," ",8],["T_STRING","ThemeHandlerInterface",8],["T_WHITESPACE"," ",8],"{",["T_WHITESPACE","\n\n  ",8],["T_DOC_COMMENT","\/**\n   * Installs a given list of themes.\n   *\n   * @param array $theme_list\n   *   An array of theme names.\n   * @param bool $install_dependencies\n   *   (optional) If TRUE, dependencies will automatically be installed in the\n   *   correct order. This incurs a significant performance cost, so use FALSE\n   *   if you know $theme_list is already complete and in the correct order.\n   *\n   * @return bool\n   *   Whether any of the given themes have been installed.\n   *\n   * @throws \\Drupal\\Core\\Extension\\ExtensionNameLengthException\n   *   Thrown when the theme name is to long.\n   *\n   * @deprecated in Drupal 8.0.x-dev and will be removed before Drupal 9.0.0.\n   *   Use the theme_installer service instead.\n   *\n   * @see \\Drupal\\Core\\Extension\\ThemeInstallerInterface::install\n   *\/",10],["T_WHITESPACE","\n  ",30],["T_PUBLIC","public",31],["T_WHITESPACE"," ",31],["T_FUNCTION","function",31],["T_WHITESPACE"," ",31],["T_STRING","install",31],"(",["T_ARRAY","array",31],["T_WHITESPACE"," ",31],["T_VARIABLE","$theme_list",31],",",["T_WHITESPACE"," ",31],["T_VARIABLE","$install_dependencies",31],["T_WHITESPACE"," ",31],"=",["T_WHITESPACE"," ",31],["T_STRING","TRUE",31],")",";",["T_WHITESPACE","\n\n  ",31],["T_DOC_COMMENT","\/**\n   * Uninstalls a given list of themes.\n   *\n   * Uninstalling a theme removes all related configuration (like blocks) and\n   * invokes the 'themes_uninstalled' hook.\n   *\n   * @param array $theme_list\n   *   The themes to uninstall.\n   *\n   * @throws \\InvalidArgumentException\n   *   Thrown when you uninstall an not installed theme.\n   *\n   * @see hook_themes_uninstalled()\n   *\n   * @deprecated in Drupal 8.0.x-dev and will be removed before Drupal 9.0.0.\n   *   Use the theme_installer service instead.\n   *\n   * @see \\Drupal\\Core\\Extension\\ThemeInstallerInterface::uninstall\n   *\/",33],["T_WHITESPACE","\n  ",51],["T_PUBLIC","public",52],["T_WHITESPACE"," ",52],["T_FUNCTION","function",52],["T_WHITESPACE"," ",52],["T_STRING","uninstall",52],"(",["T_ARRAY","array",52],["T_WHITESPACE"," ",52],["T_VARIABLE","$theme_list",52],")",";",["T_WHITESPACE","\n\n  ",52],["T_DOC_COMMENT","\/**\n   * Returns a list of currently installed themes.\n   *\n   * @return \\Drupal\\Core\\Extension\\Extension[]\n   *   An associative array of the currently installed themes. The keys are the\n   *   themes' machine names and the values are objects having the following\n   *   properties:\n   *   - filename: The filepath and name of the .info.yml file.\n   *   - name: The machine name of the theme.\n   *   - status: 1 for installed, 0 for uninstalled themes.\n   *   - info: The contents of the .info.yml file.\n   *   - stylesheets: A two dimensional array, using the first key for the\n   *     media attribute (e.g. 'all'), the second for the name of the file\n   *     (e.g. style.css). The value is a complete filepath (e.g.\n   *     themes\/bartik\/style.css). Not set if no stylesheets are defined in the\n   *     .info.yml file.\n   *   - scripts: An associative array of JavaScripts, using the filename as key\n   *     and the complete filepath as value. Not set if no scripts are defined\n   *     in the .info.yml file.\n   *   - prefix: The base theme engine prefix.\n   *   - engine: The machine name of the theme engine.\n   *   - base_theme: If this is a sub-theme, the machine name of the base theme\n   *     defined in the .info.yml file. Otherwise, the element is not set.\n   *   - base_themes: If this is a sub-theme, an associative array of the\n   *     base-theme ancestors of this theme, starting with this theme's base\n   *     theme, then the base theme's own base theme, etc. Each entry has an\n   *     array key equal to the theme's machine name, and a value equal to the\n   *     human-readable theme name; if a theme with matching machine name does\n   *     not exist in the system, the value will instead be NULL (and since the\n   *     system would not know whether that theme itself has a base theme, that\n   *     will end the array of base themes). This is not set if the theme is not\n   *     a sub-theme.\n   *   - sub_themes: An associative array of themes on the system that are\n   *     either direct sub-themes (that is, they declare this theme to be\n   *     their base theme), direct sub-themes of sub-themes, etc. The keys are\n   *     the themes' machine names, and the values are the themes'\n   *     human-readable names. This element is not set if there are no themes on\n   *     the system that declare this theme as their base theme.\n   *\/",54],["T_WHITESPACE","\n  ",92],["T_PUBLIC","public",93],["T_WHITESPACE"," ",93],["T_FUNCTION","function",93],["T_WHITESPACE"," ",93],["T_STRING","listInfo",93],"(",")",";",["T_WHITESPACE","\n\n\n  ",93],["T_DOC_COMMENT","\/**\n   * Adds a theme extension to the internal listing.\n   *\n   * @param \\Drupal\\Core\\Extension\\Extension $theme\n   *   The theme extension.\n   *\/",96],["T_WHITESPACE","\n  ",101],["T_PUBLIC","public",102],["T_WHITESPACE"," ",102],["T_FUNCTION","function",102],["T_WHITESPACE"," ",102],["T_STRING","addTheme",102],"(",["T_STRING","Extension",102],["T_WHITESPACE"," ",102],["T_VARIABLE","$theme",102],")",";",["T_WHITESPACE","\n\n  ",102],["T_DOC_COMMENT","\/**\n   * Refreshes the theme info data of currently installed themes.\n   *\n   * Modules can alter theme info, so this is typically called after a module\n   * has been installed or uninstalled.\n   *\/",104],["T_WHITESPACE","\n  ",109],["T_PUBLIC","public",110],["T_WHITESPACE"," ",110],["T_FUNCTION","function",110],["T_WHITESPACE"," ",110],["T_STRING","refreshInfo",110],"(",")",";",["T_WHITESPACE","\n\n  ",110],["T_DOC_COMMENT","\/**\n   * Resets the internal state of the theme handler.\n   *\/",112],["T_WHITESPACE","\n  ",114],["T_PUBLIC","public",115],["T_WHITESPACE"," ",115],["T_FUNCTION","function",115],["T_WHITESPACE"," ",115],["T_STRING","reset",115],"(",")",";",["T_WHITESPACE","\n\n  ",115],["T_DOC_COMMENT","\/**\n   * Scans and collects theme extension data and their engines.\n   *\n   * @return \\Drupal\\Core\\Extension\\Extension[]\n   *   An associative array of theme extensions.\n   *\/",117],["T_WHITESPACE","\n  ",122],["T_PUBLIC","public",123],["T_WHITESPACE"," ",123],["T_FUNCTION","function",123],["T_WHITESPACE"," ",123],["T_STRING","rebuildThemeData",123],"(",")",";",["T_WHITESPACE","\n\n  ",123],["T_DOC_COMMENT","\/**\n   * Finds all the base themes for the specified theme.\n   *\n   * Themes can inherit templates and function implementations from earlier\n   * themes.\n   *\n   * @param \\Drupal\\Core\\Extension\\Extension[] $themes\n   *   An array of available themes.\n   * @param string $theme\n   *   The name of the theme whose base we are looking for.\n   *\n   * @return array\n   *   Returns an array of all of the theme's ancestors; the first element's\n   *   value will be NULL if an error occurred.\n   *\/",125],["T_WHITESPACE","\n  ",139],["T_PUBLIC","public",140],["T_WHITESPACE"," ",140],["T_FUNCTION","function",140],["T_WHITESPACE"," ",140],["T_STRING","getBaseThemes",140],"(",["T_ARRAY","array",140],["T_WHITESPACE"," ",140],["T_VARIABLE","$themes",140],",",["T_WHITESPACE"," ",140],["T_VARIABLE","$theme",140],")",";",["T_WHITESPACE","\n\n  ",140],["T_DOC_COMMENT","\/**\n   * Gets the human readable name of a given theme.\n   *\n   * @param string $theme\n   *   The machine name of the theme which title should be shown.\n   *\n   * @return string\n   *   Returns the human readable name of the theme.\n   *\/",142],["T_WHITESPACE","\n  ",150],["T_PUBLIC","public",151],["T_WHITESPACE"," ",151],["T_FUNCTION","function",151],["T_WHITESPACE"," ",151],["T_STRING","getName",151],"(",["T_VARIABLE","$theme",151],")",";",["T_WHITESPACE","\n\n  ",151],["T_DOC_COMMENT","\/**\n   * Returns the default theme.\n   *\n   * @return string\n   *   The default theme.\n   *\/",153],["T_WHITESPACE","\n  ",158],["T_PUBLIC","public",159],["T_WHITESPACE"," ",159],["T_FUNCTION","function",159],["T_WHITESPACE"," ",159],["T_STRING","getDefault",159],"(",")",";",["T_WHITESPACE","\n\n  ",159],["T_DOC_COMMENT","\/**\n   * Sets a new default theme.\n   *\n   * @param string $theme\n   *   The new default theme.\n   *\n   * @return $this\n   *\/",161],["T_WHITESPACE","\n  ",168],["T_PUBLIC","public",169],["T_WHITESPACE"," ",169],["T_FUNCTION","function",169],["T_WHITESPACE"," ",169],["T_STRING","setDefault",169],"(",["T_VARIABLE","$theme",169],")",";",["T_WHITESPACE","\n\n  ",169],["T_DOC_COMMENT","\/**\n   * Returns an array of directories for all installed themes.\n   *\n   * Useful for tasks such as finding a file that exists in all theme\n   * directories.\n   *\n   * @return array\n   *\/",171],["T_WHITESPACE","\n  ",178],["T_PUBLIC","public",179],["T_WHITESPACE"," ",179],["T_FUNCTION","function",179],["T_WHITESPACE"," ",179],["T_STRING","getThemeDirectories",179],"(",")",";",["T_WHITESPACE","\n\n  ",179],["T_DOC_COMMENT","\/**\n   * Determines whether a given theme is installed.\n   *\n   * @param string $theme\n   *   The name of the theme (without the .theme extension).\n   *\n   * @return bool\n   *   TRUE if the theme is installed.\n   *\/",181],["T_WHITESPACE","\n  ",189],["T_PUBLIC","public",190],["T_WHITESPACE"," ",190],["T_FUNCTION","function",190],["T_WHITESPACE"," ",190],["T_STRING","themeExists",190],"(",["T_VARIABLE","$theme",190],")",";",["T_WHITESPACE","\n\n  ",190],["T_DOC_COMMENT","\/**\n   * Returns a theme extension object from the currently active theme list.\n   *\n   * @param string $name\n   *   The name of the theme to return.\n   *\n   * @return \\Drupal\\Core\\Extension\\Extension\n   *   An extension object.\n   *\n   * @throws \\InvalidArgumentException\n   *   Thrown when the requested theme does not exist.\n   *\/",192],["T_WHITESPACE","\n  ",203],["T_PUBLIC","public",204],["T_WHITESPACE"," ",204],["T_FUNCTION","function",204],["T_WHITESPACE"," ",204],["T_STRING","getTheme",204],"(",["T_VARIABLE","$name",204],")",";",["T_WHITESPACE","\n\n  ",204],["T_DOC_COMMENT","\/**\n   * Determines if a theme should be shown in the user interface.\n   *\n   * To be shown in the UI the theme has to be installed. If the theme is hidden\n   * it will not be shown unless it is the default or admin theme.\n   *\n   * @param string $name\n   *   The name of the theme to check.\n   *\n   * @return bool\n   *   TRUE if the theme should be shown in the UI, FALSE if not.\n   *\/",206],["T_WHITESPACE","\n  ",217],["T_PUBLIC","public",218],["T_WHITESPACE"," ",218],["T_FUNCTION","function",218],["T_WHITESPACE"," ",218],["T_STRING","hasUi",218],"(",["T_VARIABLE","$name",218],")",";",["T_WHITESPACE","\n\n",218],"}",["T_WHITESPACE","\n",220]]