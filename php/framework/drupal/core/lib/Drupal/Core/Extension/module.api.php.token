[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_DOC_COMMENT","\/**\n * @file\n * Hooks related to module and update systems.\n *\/",3],["T_WHITESPACE","\n\n",6],["T_USE","use",8],["T_WHITESPACE"," ",8],["T_STRING","Drupal",8],["T_NS_SEPARATOR","\\",8],["T_STRING","Core",8],["T_NS_SEPARATOR","\\",8],["T_STRING","Database",8],["T_NS_SEPARATOR","\\",8],["T_STRING","Database",8],";",["T_WHITESPACE","\n",8],["T_USE","use",9],["T_WHITESPACE"," ",9],["T_STRING","Drupal",9],["T_NS_SEPARATOR","\\",9],["T_STRING","Core",9],["T_NS_SEPARATOR","\\",9],["T_STRING","Url",9],";",["T_WHITESPACE","\n",9],["T_USE","use",10],["T_WHITESPACE"," ",10],["T_STRING","Drupal",10],["T_NS_SEPARATOR","\\",10],["T_STRING","Core",10],["T_NS_SEPARATOR","\\",10],["T_STRING","Utility",10],["T_NS_SEPARATOR","\\",10],["T_STRING","UpdateException",10],";",["T_WHITESPACE","\n\n\n",10],["T_DOC_COMMENT","\/**\n * @defgroup update_api Update API\n * @{\n * Updating minor versions of modules\n *\n * When you update code in a module, you may need to update stored data so that\n * the stored data is compatible with the new code. If this update is between\n * two minor versions of your module within the same major version of Drupal,\n * you can use the Update API to update the data. This API is described in brief\n * here; for more details, see https:\/\/www.drupal.org\/node\/2535316. If you are\n * updating your module for a major version of Drupal (for instance, Drupal 7 to\n * Drupal 8), updates will not run and you will need to use the\n * @link migrate Migrate API @endlink instead.\n *\n * @section sec_when When to write update code\n * You need to provide code that performs an update to stored data whenever your\n * module makes a change to its data model. A data model change is any change\n * that makes stored data on an existing site incompatible with that site's\n * updated codebase. Examples:\n * - Configuration changes: adding\/removing\/renaming a config key, changing the\n *   expected data type or value structure, changing dependencies, schema\n *   changes, etc.\n * - Database schema changes: adding, changing, or removing a database table or\n *   field; moving stored data to different fields or tables; changing the\n *   format of stored data.\n * - Content entity or field changes: adding, changing, or removing a field\n *   definition, entity definition, or any of their properties.\n *\n * @section sec_how How to write update code\n * Update code for a module is put into an implementation of hook_update_N(),\n * which goes into file mymodule.install (if your module's machine name is\n * mymodule). See the documentation of hook_update_N() and\n * https:\/\/www.drupal.org\/node\/2535316 for details and examples.\n *\n * @section sec_test Testing update code\n * Update code should be tested both manually and by writing an automated test.\n * Automated tests for update code extend\n * \\Drupal\\system\\Tests\\Update\\UpdatePathTestBase -- see that class for details,\n * and find classes that extend it for examples.\n *\n * @see migration\n * @}\n *\/",13],["T_WHITESPACE","\n\n",55],["T_DOC_COMMENT","\/**\n * @addtogroup hooks\n * @{\n *\/",57],["T_WHITESPACE","\n\n",60],["T_DOC_COMMENT","\/**\n * Defines one or more hooks that are exposed by a module.\n *\n * Normally hooks do not need to be explicitly defined. However, by declaring a\n * hook explicitly, a module may define a \"group\" for it. Modules that implement\n * a hook may then place their implementation in either $module.module or in\n * $module.$group.inc. If the hook is located in $module.$group.inc, then that\n * file will be automatically loaded when needed.\n * In general, hooks that are rarely invoked and\/or are very large should be\n * placed in a separate include file, while hooks that are very short or very\n * frequently called should be left in the main module file so that they are\n * always available.\n *\n * See system_hook_info() for all hook groups defined by Drupal core.\n *\n * @return\n *   An associative array whose keys are hook names and whose values are an\n *   associative array containing:\n *   - group: A string defining the group to which the hook belongs. The module\n *     system will determine whether a file with the name $module.$group.inc\n *     exists, and automatically load it when required.\n *\n * @see hook_hook_info_alter()\n *\/",62],["T_WHITESPACE","\n",85],["T_FUNCTION","function",86],["T_WHITESPACE"," ",86],["T_STRING","hook_hook_info",86],"(",")",["T_WHITESPACE"," ",86],"{",["T_WHITESPACE","\n  ",86],["T_VARIABLE","$hooks",87],"[",["T_CONSTANT_ENCAPSED_STRING","'token_info'",87],"]",["T_WHITESPACE"," ",87],"=",["T_WHITESPACE"," ",87],["T_ARRAY","array",87],"(",["T_WHITESPACE","\n    ",87],["T_CONSTANT_ENCAPSED_STRING","'group'",88],["T_WHITESPACE"," ",88],["T_DOUBLE_ARROW","=>",88],["T_WHITESPACE"," ",88],["T_CONSTANT_ENCAPSED_STRING","'tokens'",88],",",["T_WHITESPACE","\n  ",88],")",";",["T_WHITESPACE","\n  ",89],["T_VARIABLE","$hooks",90],"[",["T_CONSTANT_ENCAPSED_STRING","'tokens'",90],"]",["T_WHITESPACE"," ",90],"=",["T_WHITESPACE"," ",90],["T_ARRAY","array",90],"(",["T_WHITESPACE","\n    ",90],["T_CONSTANT_ENCAPSED_STRING","'group'",91],["T_WHITESPACE"," ",91],["T_DOUBLE_ARROW","=>",91],["T_WHITESPACE"," ",91],["T_CONSTANT_ENCAPSED_STRING","'tokens'",91],",",["T_WHITESPACE","\n  ",91],")",";",["T_WHITESPACE","\n  ",92],["T_RETURN","return",93],["T_WHITESPACE"," ",93],["T_VARIABLE","$hooks",93],";",["T_WHITESPACE","\n",93],"}",["T_WHITESPACE","\n\n",94],["T_DOC_COMMENT","\/**\n * Alter the registry of modules implementing a hook.\n *\n * This hook is invoked during \\Drupal::moduleHandler()->getImplementations().\n * A module may implement this hook in order to reorder the implementing\n * modules, which are otherwise ordered by the module's system weight.\n *\n * Note that hooks invoked using \\Drupal::moduleHandler->alter() can have\n * multiple variations(such as hook_form_alter() and hook_form_FORM_ID_alter()).\n * \\Drupal::moduleHandler->alter() will call all such variants defined by a\n * single module in turn. For the purposes of hook_module_implements_alter(),\n * these variants are treated as a single hook. Thus, to ensure that your\n * implementation of hook_form_FORM_ID_alter() is called at the right time,\n * you will have to change the order of hook_form_alter() implementation in\n * hook_module_implements_alter().\n *\n * @param $implementations\n *   An array keyed by the module's name. The value of each item corresponds\n *   to a $group, which is usually FALSE, unless the implementation is in a\n *   file named $module.$group.inc.\n * @param $hook\n *   The name of the module hook being implemented.\n *\/",96],["T_WHITESPACE","\n",118],["T_FUNCTION","function",119],["T_WHITESPACE"," ",119],["T_STRING","hook_module_implements_alter",119],"(","&",["T_VARIABLE","$implementations",119],",",["T_WHITESPACE"," ",119],["T_VARIABLE","$hook",119],")",["T_WHITESPACE"," ",119],"{",["T_WHITESPACE","\n  ",119],["T_IF","if",120],["T_WHITESPACE"," ",120],"(",["T_VARIABLE","$hook",120],["T_WHITESPACE"," ",120],["T_IS_EQUAL","==",120],["T_WHITESPACE"," ",120],["T_CONSTANT_ENCAPSED_STRING","'form_alter'",120],")",["T_WHITESPACE"," ",120],"{",["T_WHITESPACE","\n    ",120],["T_COMMENT","\/\/ Move my_module_form_alter() to the end of the list.\n",121],["T_WHITESPACE","    ",122],["T_COMMENT","\/\/ \\Drupal::moduleHandler()->getImplementations()\n",122],["T_WHITESPACE","    ",123],["T_COMMENT","\/\/ iterates through $implementations with a foreach loop which PHP iterates\n",123],["T_WHITESPACE","    ",124],["T_COMMENT","\/\/ in the order that the items were added, so to move an item to the end of\n",124],["T_WHITESPACE","    ",125],["T_COMMENT","\/\/ the array, we remove it and then add it.\n",125],["T_WHITESPACE","    ",126],["T_VARIABLE","$group",126],["T_WHITESPACE"," ",126],"=",["T_WHITESPACE"," ",126],["T_VARIABLE","$implementations",126],"[",["T_CONSTANT_ENCAPSED_STRING","'my_module'",126],"]",";",["T_WHITESPACE","\n    ",126],["T_UNSET","unset",127],"(",["T_VARIABLE","$implementations",127],"[",["T_CONSTANT_ENCAPSED_STRING","'my_module'",127],"]",")",";",["T_WHITESPACE","\n    ",127],["T_VARIABLE","$implementations",128],"[",["T_CONSTANT_ENCAPSED_STRING","'my_module'",128],"]",["T_WHITESPACE"," ",128],"=",["T_WHITESPACE"," ",128],["T_VARIABLE","$group",128],";",["T_WHITESPACE","\n  ",128],"}",["T_WHITESPACE","\n",129],"}",["T_WHITESPACE","\n\n",130],["T_DOC_COMMENT","\/**\n * Alter the information parsed from module and theme .info.yml files.\n *\n * This hook is invoked in _system_rebuild_module_data() and in\n * \\Drupal\\Core\\Extension\\ThemeHandlerInterface::rebuildThemeData(). A module\n * may implement this hook in order to add to or alter the data generated by\n * reading the .info.yml file with \\Drupal\\Core\\Extension\\InfoParser.\n *\n * Using implementations of this hook to make modules required by setting the\n * $info['required'] key is discouraged. Doing so will slow down the module\n * installation and uninstallation process. Instead, use\n * \\Drupal\\Core\\Extension\\ModuleUninstallValidatorInterface.\n *\n * @param array $info\n *   The .info.yml file contents, passed by reference so that it can be altered.\n * @param \\Drupal\\Core\\Extension\\Extension $file\n *   Full information about the module or theme.\n * @param string $type\n *   Either 'module' or 'theme', depending on the type of .info.yml file that\n *   was passed.\n *\n * @see \\Drupal\\Core\\Extension\\ModuleUninstallValidatorInterface\n *\/",132],["T_WHITESPACE","\n",154],["T_FUNCTION","function",155],["T_WHITESPACE"," ",155],["T_STRING","hook_system_info_alter",155],"(",["T_ARRAY","array",155],["T_WHITESPACE"," ",155],"&",["T_VARIABLE","$info",155],",",["T_WHITESPACE"," ",155],["T_NS_SEPARATOR","\\",155],["T_STRING","Drupal",155],["T_NS_SEPARATOR","\\",155],["T_STRING","Core",155],["T_NS_SEPARATOR","\\",155],["T_STRING","Extension",155],["T_NS_SEPARATOR","\\",155],["T_STRING","Extension",155],["T_WHITESPACE"," ",155],["T_VARIABLE","$file",155],",",["T_WHITESPACE"," ",155],["T_VARIABLE","$type",155],")",["T_WHITESPACE"," ",155],"{",["T_WHITESPACE","\n  ",155],["T_COMMENT","\/\/ Only fill this in if the .info.yml file does not define a 'datestamp'.\n",156],["T_WHITESPACE","  ",157],["T_IF","if",157],["T_WHITESPACE"," ",157],"(",["T_EMPTY","empty",157],"(",["T_VARIABLE","$info",157],"[",["T_CONSTANT_ENCAPSED_STRING","'datestamp'",157],"]",")",")",["T_WHITESPACE"," ",157],"{",["T_WHITESPACE","\n    ",157],["T_VARIABLE","$info",158],"[",["T_CONSTANT_ENCAPSED_STRING","'datestamp'",158],"]",["T_WHITESPACE"," ",158],"=",["T_WHITESPACE"," ",158],["T_VARIABLE","$file",158],["T_OBJECT_OPERATOR","->",158],["T_STRING","getMTime",158],"(",")",";",["T_WHITESPACE","\n  ",158],"}",["T_WHITESPACE","\n",159],"}",["T_WHITESPACE","\n\n",160],["T_DOC_COMMENT","\/**\n * Perform necessary actions before a module is installed.\n *\n * @param string $module\n *   The name of the module about to be installed.\n *\/",162],["T_WHITESPACE","\n",167],["T_FUNCTION","function",168],["T_WHITESPACE"," ",168],["T_STRING","hook_module_preinstall",168],"(",["T_VARIABLE","$module",168],")",["T_WHITESPACE"," ",168],"{",["T_WHITESPACE","\n  ",168],["T_STRING","mymodule_cache_clear",169],"(",")",";",["T_WHITESPACE","\n",169],"}",["T_WHITESPACE","\n\n",170],["T_DOC_COMMENT","\/**\n * Perform necessary actions after modules are installed.\n *\n * This function differs from hook_install() in that it gives all other modules\n * a chance to perform actions when a module is installed, whereas\n * hook_install() is only called on the module actually being installed. See\n * \\Drupal\\Core\\Extension\\ModuleInstaller::install() for a detailed description of\n * the order in which install hooks are invoked.\n *\n * This hook should be implemented in a .module file, not in an .install file.\n *\n * @param $modules\n *   An array of the modules that were installed.\n *\n * @see \\Drupal\\Core\\Extension\\ModuleInstaller::install()\n * @see hook_install()\n *\/",172],["T_WHITESPACE","\n",188],["T_FUNCTION","function",189],["T_WHITESPACE"," ",189],["T_STRING","hook_modules_installed",189],"(",["T_VARIABLE","$modules",189],")",["T_WHITESPACE"," ",189],"{",["T_WHITESPACE","\n  ",189],["T_IF","if",190],["T_WHITESPACE"," ",190],"(",["T_STRING","in_array",190],"(",["T_CONSTANT_ENCAPSED_STRING","'lousy_module'",190],",",["T_WHITESPACE"," ",190],["T_VARIABLE","$modules",190],")",")",["T_WHITESPACE"," ",190],"{",["T_WHITESPACE","\n    ",190],["T_NS_SEPARATOR","\\",191],["T_STRING","Drupal",191],["T_DOUBLE_COLON","::",191],["T_STRING","state",191],"(",")",["T_OBJECT_OPERATOR","->",191],["T_STRING","set",191],"(",["T_CONSTANT_ENCAPSED_STRING","'mymodule.lousy_module_compatibility'",191],",",["T_WHITESPACE"," ",191],["T_STRING","TRUE",191],")",";",["T_WHITESPACE","\n  ",191],"}",["T_WHITESPACE","\n",192],"}",["T_WHITESPACE","\n\n",193],["T_DOC_COMMENT","\/**\n * Perform setup tasks when the module is installed.\n *\n * If the module implements hook_schema(), the database tables will\n * be created before this hook is fired.\n *\n * If the module provides a MODULE.routing.yml or alters routing information\n * these changes will not be available when this hook is fired. If up-to-date\n * router information is required, for example to use \\Drupal\\Core\\Url, then\n * (preferably) use hook_modules_installed() or rebuild the router in the\n * hook_install() implementation.\n *\n * Implementations of this hook are by convention declared in the module's\n * .install file. The implementation can rely on the .module file being loaded.\n * The hook will only be called when a module is installed. The module's schema\n * version will be set to the module's greatest numbered update hook. Because of\n * this, any time a hook_update_N() is added to the module, this function needs\n * to be updated to reflect the current version of the database schema.\n *\n * See the @link https:\/\/www.drupal.org\/node\/146843 Schema API documentation\n * @endlink for details on hook_schema and how database tables are defined.\n *\n * Note that since this function is called from a full bootstrap, all functions\n * (including those in modules enabled by the current page request) are\n * available when this hook is called. Use cases could be displaying a user\n * message, or calling a module function necessary for initial setup, etc.\n *\n * Please be sure that anything added or modified in this function that can\n * be removed during uninstall should be removed with hook_uninstall().\n *\n * @see hook_schema()\n * @see \\Drupal\\Core\\Extension\\ModuleInstaller::install()\n * @see hook_uninstall()\n * @see hook_modules_installed()\n *\/",195],["T_WHITESPACE","\n",229],["T_FUNCTION","function",230],["T_WHITESPACE"," ",230],["T_STRING","hook_install",230],"(",")",["T_WHITESPACE"," ",230],"{",["T_WHITESPACE","\n  ",230],["T_COMMENT","\/\/ Create the styles directory and ensure it's writable.\n",231],["T_WHITESPACE","  ",232],["T_VARIABLE","$directory",232],["T_WHITESPACE"," ",232],"=",["T_WHITESPACE"," ",232],["T_STRING","file_default_scheme",232],"(",")",["T_WHITESPACE"," ",232],".",["T_WHITESPACE"," ",232],["T_CONSTANT_ENCAPSED_STRING","':\/\/styles'",232],";",["T_WHITESPACE","\n  ",232],["T_VARIABLE","$mode",233],["T_WHITESPACE"," ",233],"=",["T_WHITESPACE"," ",233],["T_ISSET","isset",233],"(",["T_VARIABLE","$GLOBALS",233],"[",["T_CONSTANT_ENCAPSED_STRING","'install_state'",233],"]","[",["T_CONSTANT_ENCAPSED_STRING","'mode'",233],"]",")",["T_WHITESPACE"," ",233],"?",["T_WHITESPACE"," ",233],["T_VARIABLE","$GLOBALS",233],"[",["T_CONSTANT_ENCAPSED_STRING","'install_state'",233],"]","[",["T_CONSTANT_ENCAPSED_STRING","'mode'",233],"]",["T_WHITESPACE"," ",233],":",["T_WHITESPACE"," ",233],["T_STRING","NULL",233],";",["T_WHITESPACE","\n  ",233],["T_STRING","file_prepare_directory",234],"(",["T_VARIABLE","$directory",234],",",["T_WHITESPACE"," ",234],["T_STRING","FILE_CREATE_DIRECTORY",234],["T_WHITESPACE"," ",234],"|",["T_WHITESPACE"," ",234],["T_STRING","FILE_MODIFY_PERMISSIONS",234],",",["T_WHITESPACE"," ",234],["T_VARIABLE","$mode",234],")",";",["T_WHITESPACE","\n",234],"}",["T_WHITESPACE","\n\n",235],["T_DOC_COMMENT","\/**\n * Perform necessary actions before a module is uninstalled.\n *\n * @param string $module\n *   The name of the module about to be uninstalled.\n *\/",237],["T_WHITESPACE","\n",242],["T_FUNCTION","function",243],["T_WHITESPACE"," ",243],["T_STRING","hook_module_preuninstall",243],"(",["T_VARIABLE","$module",243],")",["T_WHITESPACE"," ",243],"{",["T_WHITESPACE","\n  ",243],["T_STRING","mymodule_cache_clear",244],"(",")",";",["T_WHITESPACE","\n",244],"}",["T_WHITESPACE","\n\n",245],["T_DOC_COMMENT","\/**\n * Perform necessary actions after modules are uninstalled.\n *\n * This function differs from hook_uninstall() in that it gives all other\n * modules a chance to perform actions when a module is uninstalled, whereas\n * hook_uninstall() is only called on the module actually being uninstalled.\n *\n * It is recommended that you implement this hook if your module stores\n * data that may have been set by other modules.\n *\n * @param $modules\n *   An array of the modules that were uninstalled.\n *\n * @see hook_uninstall()\n *\/",247],["T_WHITESPACE","\n",261],["T_FUNCTION","function",262],["T_WHITESPACE"," ",262],["T_STRING","hook_modules_uninstalled",262],"(",["T_VARIABLE","$modules",262],")",["T_WHITESPACE"," ",262],"{",["T_WHITESPACE","\n  ",262],["T_IF","if",263],["T_WHITESPACE"," ",263],"(",["T_STRING","in_array",263],"(",["T_CONSTANT_ENCAPSED_STRING","'lousy_module'",263],",",["T_WHITESPACE"," ",263],["T_VARIABLE","$modules",263],")",")",["T_WHITESPACE"," ",263],"{",["T_WHITESPACE","\n    ",263],["T_NS_SEPARATOR","\\",264],["T_STRING","Drupal",264],["T_DOUBLE_COLON","::",264],["T_STRING","state",264],"(",")",["T_OBJECT_OPERATOR","->",264],["T_STRING","delete",264],"(",["T_CONSTANT_ENCAPSED_STRING","'mymodule.lousy_module_compatibility'",264],")",";",["T_WHITESPACE","\n  ",264],"}",["T_WHITESPACE","\n  ",265],["T_STRING","mymodule_cache_rebuild",266],"(",")",";",["T_WHITESPACE","\n",266],"}",["T_WHITESPACE","\n\n",267],["T_DOC_COMMENT","\/**\n * Remove any information that the module sets.\n *\n * The information that the module should remove includes:\n * - state that the module has set using \\Drupal::state()\n * - modifications to existing tables\n *\n * The module should not remove its entry from the module configuration.\n * Database tables defined by hook_schema() will be removed automatically.\n *\n * The uninstall hook must be implemented in the module's .install file. It\n * will fire when the module gets uninstalled but before the module's database\n * tables are removed, allowing your module to query its own tables during\n * this routine.\n *\n * @see hook_install()\n * @see hook_schema()\n * @see hook_modules_uninstalled()\n *\/",269],["T_WHITESPACE","\n",287],["T_FUNCTION","function",288],["T_WHITESPACE"," ",288],["T_STRING","hook_uninstall",288],"(",")",["T_WHITESPACE"," ",288],"{",["T_WHITESPACE","\n  ",288],["T_COMMENT","\/\/ Remove the styles directory and generated images.\n",289],["T_WHITESPACE","  ",290],["T_STRING","file_unmanaged_delete_recursive",290],"(",["T_STRING","file_default_scheme",290],"(",")",["T_WHITESPACE"," ",290],".",["T_WHITESPACE"," ",290],["T_CONSTANT_ENCAPSED_STRING","':\/\/styles'",290],")",";",["T_WHITESPACE","\n",290],"}",["T_WHITESPACE","\n\n",291],["T_DOC_COMMENT","\/**\n * Return an array of tasks to be performed by an installation profile.\n *\n * Any tasks you define here will be run, in order, after the installer has\n * finished the site configuration step but before it has moved on to the\n * final import of languages and the end of the installation. This is invoked\n * by install_tasks(). You can have any number of custom tasks to perform\n * during this phase.\n *\n * Each task you define here corresponds to a callback function which you must\n * separately define and which is called when your task is run. This function\n * will receive the global installation state variable, $install_state, as\n * input, and has the opportunity to access or modify any of its settings. See\n * the install_state_defaults() function in the installer for the list of\n * $install_state settings used by Drupal core.\n *\n * At the end of your task function, you can indicate that you want the\n * installer to pause and display a page to the user by returning any themed\n * output that should be displayed on that page (but see below for tasks that\n * use the form API or batch API; the return values of these task functions are\n * handled differently). You should also use #title within the task\n * callback function to set a custom page title. For some tasks, however, you\n * may want to simply do some processing and pass control to the next task\n * without ending the page request; to indicate this, simply do not send back\n * a return value from your task function at all. This can be used, for\n * example, by installation profiles that need to configure certain site\n * settings in the database without obtaining any input from the user.\n *\n * The task function is treated specially if it defines a form or requires\n * batch processing; in that case, you should return either the form API\n * definition or batch API array, as appropriate. See below for more\n * information on the 'type' key that you must define in the task definition\n * to inform the installer that your task falls into one of those two\n * categories. It is important to use these APIs directly, since the installer\n * may be run non-interactively (for example, via a command line script), all\n * in one page request; in that case, the installer will automatically take\n * care of submitting forms and processing batches correctly for both types of\n * installations. You can inspect the $install_state['interactive'] boolean to\n * see whether or not the current installation is interactive, if you need\n * access to this information.\n *\n * Remember that a user installing Drupal interactively will be able to reload\n * an installation page multiple times, so you should use \\Drupal::state() to\n * store any data that you may need later in the installation process. Any\n * temporary state must be removed using \\Drupal::state()->delete() before\n * your last task has completed and control is handed back to the installer.\n *\n * @param array $install_state\n *   An array of information about the current installation state.\n *\n * @return array\n *   A keyed array of tasks the profile will perform during the final stage of\n *   the installation. Each key represents the name of a function (usually a\n *   function defined by this profile, although that is not strictly required)\n *   that is called when that task is run. The values are associative arrays\n *   containing the following key-value pairs (all of which are optional):\n *   - display_name: The human-readable name of the task. This will be\n *     displayed to the user while the installer is running, along with a list\n *     of other tasks that are being run. Leave this unset to prevent the task\n *     from appearing in the list.\n *   - display: This is a boolean which can be used to provide finer-grained\n *     control over whether or not the task will display. This is mostly useful\n *     for tasks that are intended to display only under certain conditions;\n *     for these tasks, you can set 'display_name' to the name that you want to\n *     display, but then use this boolean to hide the task only when certain\n *     conditions apply.\n *   - type: A string representing the type of task. This parameter has three\n *     possible values:\n *     - normal: (default) This indicates that the task will be treated as a\n *       regular callback function, which does its processing and optionally\n *       returns HTML output.\n *     - batch: This indicates that the task function will return a batch API\n *       definition suitable for batch_set() or an array of batch definitions\n *       suitable for consecutive batch_set() calls. The installer will then\n *       take care of automatically running the task via batch processing.\n *     - form: This indicates that the task function will return a standard\n *       form API definition (and separately define validation and submit\n *       handlers, as appropriate). The installer will then take care of\n *       automatically directing the user through the form submission process.\n *   - run: A constant representing the manner in which the task will be run.\n *     This parameter has three possible values:\n *     - INSTALL_TASK_RUN_IF_NOT_COMPLETED: (default) This indicates that the\n *       task will run once during the installation of the profile.\n *     - INSTALL_TASK_SKIP: This indicates that the task will not run during\n *       the current installation page request. It can be used to skip running\n *       an installation task when certain conditions are met, even though the\n *       task may still show on the list of installation tasks presented to the\n *       user.\n *     - INSTALL_TASK_RUN_IF_REACHED: This indicates that the task will run on\n *       each installation page request that reaches it. This is rarely\n *       necessary for an installation profile to use; it is primarily used by\n *       the Drupal installer for bootstrap-related tasks.\n *   - function: Normally this does not need to be set, but it can be used to\n *     force the installer to call a different function when the task is run\n *     (rather than the function whose name is given by the array key). This\n *     could be used, for example, to allow the same function to be called by\n *     two different tasks.\n *\n * @see install_state_defaults()\n * @see batch_set()\n * @see hook_install_tasks_alter()\n * @see install_tasks()\n *\/",293],["T_WHITESPACE","\n",395],["T_FUNCTION","function",396],["T_WHITESPACE"," ",396],["T_STRING","hook_install_tasks",396],"(","&",["T_VARIABLE","$install_state",396],")",["T_WHITESPACE"," ",396],"{",["T_WHITESPACE","\n  ",396],["T_COMMENT","\/\/ Here, we define a variable to allow tasks to indicate that a particular,\n",397],["T_WHITESPACE","  ",398],["T_COMMENT","\/\/ processor-intensive batch process needs to be triggered later on in the\n",398],["T_WHITESPACE","  ",399],["T_COMMENT","\/\/ installation.\n",399],["T_WHITESPACE","  ",400],["T_VARIABLE","$myprofile_needs_batch_processing",400],["T_WHITESPACE"," ",400],"=",["T_WHITESPACE"," ",400],["T_NS_SEPARATOR","\\",400],["T_STRING","Drupal",400],["T_DOUBLE_COLON","::",400],["T_STRING","state",400],"(",")",["T_OBJECT_OPERATOR","->",400],["T_STRING","get",400],"(",["T_CONSTANT_ENCAPSED_STRING","'myprofile.needs_batch_processing'",400],",",["T_WHITESPACE"," ",400],["T_STRING","FALSE",400],")",";",["T_WHITESPACE","\n  ",400],["T_VARIABLE","$tasks",401],["T_WHITESPACE"," ",401],"=",["T_WHITESPACE"," ",401],["T_ARRAY","array",401],"(",["T_WHITESPACE","\n    ",401],["T_COMMENT","\/\/ This is an example of a task that defines a form which the user who is\n",402],["T_WHITESPACE","    ",403],["T_COMMENT","\/\/ installing the site will be asked to fill out. To implement this task,\n",403],["T_WHITESPACE","    ",404],["T_COMMENT","\/\/ your profile would define a function named myprofile_data_import_form()\n",404],["T_WHITESPACE","    ",405],["T_COMMENT","\/\/ as a normal form API callback function, with associated validation and\n",405],["T_WHITESPACE","    ",406],["T_COMMENT","\/\/ submit handlers. In the submit handler, in addition to saving whatever\n",406],["T_WHITESPACE","    ",407],["T_COMMENT","\/\/ other data you have collected from the user, you might also call\n",407],["T_WHITESPACE","    ",408],["T_COMMENT","\/\/ \\Drupal::state()->set('myprofile.needs_batch_processing', TRUE) if the\n",408],["T_WHITESPACE","    ",409],["T_COMMENT","\/\/ user has entered data which requires that batch processing will need to\n",409],["T_WHITESPACE","    ",410],["T_COMMENT","\/\/ occur later on.\n",410],["T_WHITESPACE","    ",411],["T_CONSTANT_ENCAPSED_STRING","'myprofile_data_import_form'",411],["T_WHITESPACE"," ",411],["T_DOUBLE_ARROW","=>",411],["T_WHITESPACE"," ",411],["T_ARRAY","array",411],"(",["T_WHITESPACE","\n      ",411],["T_CONSTANT_ENCAPSED_STRING","'display_name'",412],["T_WHITESPACE"," ",412],["T_DOUBLE_ARROW","=>",412],["T_WHITESPACE"," ",412],["T_STRING","t",412],"(",["T_CONSTANT_ENCAPSED_STRING","'Data import options'",412],")",",",["T_WHITESPACE","\n      ",412],["T_CONSTANT_ENCAPSED_STRING","'type'",413],["T_WHITESPACE"," ",413],["T_DOUBLE_ARROW","=>",413],["T_WHITESPACE"," ",413],["T_CONSTANT_ENCAPSED_STRING","'form'",413],",",["T_WHITESPACE","\n    ",413],")",",",["T_WHITESPACE","\n    ",414],["T_COMMENT","\/\/ Similarly, to implement this task, your profile would define a function\n",415],["T_WHITESPACE","    ",416],["T_COMMENT","\/\/ named myprofile_settings_form() with associated validation and submit\n",416],["T_WHITESPACE","    ",417],["T_COMMENT","\/\/ handlers. This form might be used to collect and save additional\n",417],["T_WHITESPACE","    ",418],["T_COMMENT","\/\/ information from the user that your profile needs. There are no extra\n",418],["T_WHITESPACE","    ",419],["T_COMMENT","\/\/ steps required for your profile to act as an \"installation wizard\"; you\n",419],["T_WHITESPACE","    ",420],["T_COMMENT","\/\/ can simply define as many tasks of type 'form' as you wish to execute,\n",420],["T_WHITESPACE","    ",421],["T_COMMENT","\/\/ and the forms will be presented to the user, one after another.\n",421],["T_WHITESPACE","    ",422],["T_CONSTANT_ENCAPSED_STRING","'myprofile_settings_form'",422],["T_WHITESPACE"," ",422],["T_DOUBLE_ARROW","=>",422],["T_WHITESPACE"," ",422],["T_ARRAY","array",422],"(",["T_WHITESPACE","\n      ",422],["T_CONSTANT_ENCAPSED_STRING","'display_name'",423],["T_WHITESPACE"," ",423],["T_DOUBLE_ARROW","=>",423],["T_WHITESPACE"," ",423],["T_STRING","t",423],"(",["T_CONSTANT_ENCAPSED_STRING","'Additional options'",423],")",",",["T_WHITESPACE","\n      ",423],["T_CONSTANT_ENCAPSED_STRING","'type'",424],["T_WHITESPACE"," ",424],["T_DOUBLE_ARROW","=>",424],["T_WHITESPACE"," ",424],["T_CONSTANT_ENCAPSED_STRING","'form'",424],",",["T_WHITESPACE","\n    ",424],")",",",["T_WHITESPACE","\n    ",425],["T_COMMENT","\/\/ This is an example of a task that performs batch operations. To\n",426],["T_WHITESPACE","    ",427],["T_COMMENT","\/\/ implement this task, your profile would define a function named\n",427],["T_WHITESPACE","    ",428],["T_COMMENT","\/\/ myprofile_batch_processing() which returns a batch API array definition\n",428],["T_WHITESPACE","    ",429],["T_COMMENT","\/\/ that the installer will use to execute your batch operations. Due to the\n",429],["T_WHITESPACE","    ",430],["T_COMMENT","\/\/ 'myprofile.needs_batch_processing' variable used here, this task will be\n",430],["T_WHITESPACE","    ",431],["T_COMMENT","\/\/ hidden and skipped unless your profile set it to TRUE in one of the\n",431],["T_WHITESPACE","    ",432],["T_COMMENT","\/\/ previous tasks.\n",432],["T_WHITESPACE","    ",433],["T_CONSTANT_ENCAPSED_STRING","'myprofile_batch_processing'",433],["T_WHITESPACE"," ",433],["T_DOUBLE_ARROW","=>",433],["T_WHITESPACE"," ",433],["T_ARRAY","array",433],"(",["T_WHITESPACE","\n      ",433],["T_CONSTANT_ENCAPSED_STRING","'display_name'",434],["T_WHITESPACE"," ",434],["T_DOUBLE_ARROW","=>",434],["T_WHITESPACE"," ",434],["T_STRING","t",434],"(",["T_CONSTANT_ENCAPSED_STRING","'Import additional data'",434],")",",",["T_WHITESPACE","\n      ",434],["T_CONSTANT_ENCAPSED_STRING","'display'",435],["T_WHITESPACE"," ",435],["T_DOUBLE_ARROW","=>",435],["T_WHITESPACE"," ",435],["T_VARIABLE","$myprofile_needs_batch_processing",435],",",["T_WHITESPACE","\n      ",435],["T_CONSTANT_ENCAPSED_STRING","'type'",436],["T_WHITESPACE"," ",436],["T_DOUBLE_ARROW","=>",436],["T_WHITESPACE"," ",436],["T_CONSTANT_ENCAPSED_STRING","'batch'",436],",",["T_WHITESPACE","\n      ",436],["T_CONSTANT_ENCAPSED_STRING","'run'",437],["T_WHITESPACE"," ",437],["T_DOUBLE_ARROW","=>",437],["T_WHITESPACE"," ",437],["T_VARIABLE","$myprofile_needs_batch_processing",437],["T_WHITESPACE"," ",437],"?",["T_WHITESPACE"," ",437],["T_STRING","INSTALL_TASK_RUN_IF_NOT_COMPLETED",437],["T_WHITESPACE"," ",437],":",["T_WHITESPACE"," ",437],["T_STRING","INSTALL_TASK_SKIP",437],",",["T_WHITESPACE","\n    ",437],")",",",["T_WHITESPACE","\n    ",438],["T_COMMENT","\/\/ This is an example of a task that will not be displayed in the list that\n",439],["T_WHITESPACE","    ",440],["T_COMMENT","\/\/ the user sees. To implement this task, your profile would define a\n",440],["T_WHITESPACE","    ",441],["T_COMMENT","\/\/ function named myprofile_final_site_setup(), in which additional,\n",441],["T_WHITESPACE","    ",442],["T_COMMENT","\/\/ automated site setup operations would be performed. Since this is the\n",442],["T_WHITESPACE","    ",443],["T_COMMENT","\/\/ last task defined by your profile, you should also use this function to\n",443],["T_WHITESPACE","    ",444],["T_COMMENT","\/\/ call \\Drupal::state()->delete('myprofile.needs_batch_processing') and\n",444],["T_WHITESPACE","    ",445],["T_COMMENT","\/\/ clean up the state that was used above. If you want the user to pass\n",445],["T_WHITESPACE","    ",446],["T_COMMENT","\/\/ to the final Drupal installation tasks uninterrupted, return no output\n",446],["T_WHITESPACE","    ",447],["T_COMMENT","\/\/ from this function. Otherwise, return themed output that the user will\n",447],["T_WHITESPACE","    ",448],["T_COMMENT","\/\/ see (for example, a confirmation page explaining that your profile's\n",448],["T_WHITESPACE","    ",449],["T_COMMENT","\/\/ tasks are complete, with a link to reload the current page and therefore\n",449],["T_WHITESPACE","    ",450],["T_COMMENT","\/\/ pass on to the final Drupal installation tasks when the user is ready to\n",450],["T_WHITESPACE","    ",451],["T_COMMENT","\/\/ do so).\n",451],["T_WHITESPACE","    ",452],["T_CONSTANT_ENCAPSED_STRING","'myprofile_final_site_setup'",452],["T_WHITESPACE"," ",452],["T_DOUBLE_ARROW","=>",452],["T_WHITESPACE"," ",452],["T_ARRAY","array",452],"(",["T_WHITESPACE","\n    ",452],")",",",["T_WHITESPACE","\n  ",453],")",";",["T_WHITESPACE","\n  ",454],["T_RETURN","return",455],["T_WHITESPACE"," ",455],["T_VARIABLE","$tasks",455],";",["T_WHITESPACE","\n",455],"}",["T_WHITESPACE","\n\n",456],["T_DOC_COMMENT","\/**\n * Alter the full list of installation tasks.\n *\n * You can use this hook to change or replace any part of the Drupal\n * installation process that occurs after the installation profile is selected.\n *\n * This hook is invoked on the install profile in install_tasks().\n *\n * @param $tasks\n *   An array of all available installation tasks, including those provided by\n *   Drupal core. You can modify this array to change or replace individual\n *   steps within the installation process.\n * @param $install_state\n *   An array of information about the current installation state.\n *\n * @see hook_install_tasks()\n * @see install_tasks()\n *\/",458],["T_WHITESPACE","\n",475],["T_FUNCTION","function",476],["T_WHITESPACE"," ",476],["T_STRING","hook_install_tasks_alter",476],"(","&",["T_VARIABLE","$tasks",476],",",["T_WHITESPACE"," ",476],["T_VARIABLE","$install_state",476],")",["T_WHITESPACE"," ",476],"{",["T_WHITESPACE","\n  ",476],["T_COMMENT","\/\/ Replace the entire site configuration form provided by Drupal core\n",477],["T_WHITESPACE","  ",478],["T_COMMENT","\/\/ with a custom callback function defined by this installation profile.\n",478],["T_WHITESPACE","  ",479],["T_VARIABLE","$tasks",479],"[",["T_CONSTANT_ENCAPSED_STRING","'install_configure_form'",479],"]","[",["T_CONSTANT_ENCAPSED_STRING","'function'",479],"]",["T_WHITESPACE"," ",479],"=",["T_WHITESPACE"," ",479],["T_CONSTANT_ENCAPSED_STRING","'myprofile_install_configure_form'",479],";",["T_WHITESPACE","\n",479],"}",["T_WHITESPACE","\n\n",480],["T_DOC_COMMENT","\/**\n * Perform a single update between minor versions.\n *\n * hook_update_N() can only be used to update between minor versions of a\n * module. To upgrade between major versions of Drupal (for example, between\n * Drupal 7 and 8), use the @link migrate Migrate API @endlink instead.\n *\n * @section sec_naming Naming and documenting your function\n * For each change in a module that requires one or more actions to be performed\n * when updating a site, add a new implementation of hook_update_N() to your\n * mymodule.install file (assuming mymodule is the machine name of your module).\n * Implementations of hook_update_N() are named (module name)_update_(number).\n * The numbers are normally composed of three parts:\n * - 1 or 2 digits for Drupal core compatibility (Drupal 8, 9, 10, etc.). This\n *   convention must be followed.\n * - 1 digit for your module's major release version; for example, for 8.x-1.*\n *   use 1, for 8.x-2.* use 2, for Core 8.0.x use 0, and for Core 8.1.x use 1.\n *   This convention is optional but suggested for clarity.\n * - 2 digits for sequential counting, starting with 01. Note that the x000\n *   number can never be used: the lowest update number that will be recognized\n *   and run for major version x is x001.\n * Examples:\n * - node_update_8001(): The first update for the Drupal 8.0.x version of the\n *   Drupal Core node module.\n * - mymodule_update_8101(): The first update for your custom or contributed\n *   module's 8.x-1.x versions.\n * - mymodule_update_8201(): The first update for the 8.x-2.x versions.\n *\n * Never renumber update functions. The numeric part of the hook implementation\n * function is stored in the database to keep track of which updates have run,\n * so it is important to maintain this information consistently.\n *\n * The documentation block preceding this function is stripped of newlines and\n * used as the description for the update on the pending updates task list,\n * which users will see when they run the update.php script.\n *\n * @section sec_notes Notes about the function body\n * Writing hook_update_N() functions is tricky. There are several reasons why\n * this is the case:\n * - You do not know when updates will be run: someone could be keeping up with\n *   every update and run them when the database and code are in the same state\n *   as when you wrote your update function, or they could have waited until a\n *   few more updates have come out, and run several at the same time.\n * - You do not know the state of other modules' updates either.\n * - Other modules can use hook_update_dependencies() to run updates between\n *   your module's updates, so you also cannot count on your functions running\n *   right after one another.\n * - You do not know what environment your update will run in (which modules\n *   are installed, whether certain hooks are implemented or not, whether\n *   services are overridden, etc.).\n *\n * Because of these reasons, you'll need to use care in writing your update\n * function. Some things to think about:\n * - Never assume that the database schema is the same when the update will run\n *   as it is when you wrote the update function. So, when updating a database\n *   table or field, put the schema information you want to update to directly\n *   into your function instead of calling your hook_schema() function to\n *   retrieve it (this is one case where the right thing to do is copy and paste\n *   the code).\n * - Never assume that the configuration schema is the same when the update will\n *   run as it is when you wrote the update function. So, when saving\n *   configuration, use the $has_trusted_data = TRUE parameter so that schema is\n *   ignored, and make sure that the configuration data you are saving matches\n *   the configuration schema at the time when you write the update function\n *   (later updates may change it again to match new schema changes).\n * - Never assume your field or entity type definitions are the same when the\n *   update will run as they are when you wrote the update function. Always\n *   retrieve the correct version via\n *   \\Drupal::entityDefinitionUpdateManager()::getEntityType() or\n *   \\Drupal::entityDefinitionUpdateManager()::getFieldStorageDefinition(). When\n *   adding a new definition always replicate it in the update function body as\n *   you would do with a schema definition.\n * - Never call \\Drupal::entityDefinitionUpdateManager()::applyUpdates() in an\n *   update function, as it will apply updates for any module not only yours,\n *   which will lead to unpredictable results.\n * - Be careful about API functions and especially CRUD operations that you use\n *   in your update function. If they invoke hooks or use services, they may\n *   not behave as expected, and it may actually not be appropriate to use the\n *   normal API functions that invoke all the hooks, use the database schema,\n *   and\/or use services in an update function -- you may need to switch to\n *   using a more direct method (database query, etc.).\n * - In particular, loading, saving, or performing any other CRUD operation on\n *   an entity is never safe to do (they always involve hooks and services).\n * - Never rebuild the router during an update function.\n *\n * The following actions are examples of things that are safe to do during\n * updates:\n * - Cache invalidation.\n * - Using \\Drupal::configFactory()->getEditable() and \\Drupal::config(), as\n *   long as you make sure that your update data matches the schema, and you\n *   use the $has_trusted_data argument in the save operation.\n * - Marking a container for rebuild.\n * - Using the API provided by \\Drupal::entityDefinitionUpdateManager() to\n *   update the entity schema based on changes in entity type or field\n *   definitions provided by your module.\n *\n * See https:\/\/www.drupal.org\/node\/2535316 for more on writing update functions.\n *\n * @section sec_bulk Batch updates\n * If running your update all at once could possibly cause PHP to time out, use\n * the $sandbox parameter to indicate that the Batch API should be used for your\n * update. In this case, your update function acts as an implementation of\n * callback_batch_operation(), and $sandbox acts as the batch context\n * parameter. In your function, read the state information from the previous\n * run from $sandbox (or initialize), run a chunk of updates, save the state in\n * $sandbox, and set $sandbox['#finished'] to a value between 0 and 1 to\n * indicate the percent completed, or 1 if it is finished (you need to do this\n * explicitly in each pass).\n *\n * See the @link batch Batch operations topic @endlink for more information on\n * how to use the Batch API.\n *\n * @param array $sandbox\n *   Stores information for batch updates. See above for more information.\n *\n * @return string|null\n *   Optionally, update hooks may return a translated string that will be\n *   displayed to the user after the update has completed. If no message is\n *   returned, no message will be presented to the user.\n *\n * @throws \\Drupal\\Core\\Utility\\UpdateException|PDOException\n *   In case of error, update hooks should throw an instance of\n *   Drupal\\Core\\Utility\\UpdateException with a meaningful message for the user.\n *   If a database query fails for whatever reason, it will throw a\n *   PDOException.\n *\n * @ingroup update_api\n *\n * @see batch\n * @see schemaapi\n * @see hook_update_last_removed()\n * @see update_get_update_list()\n * @see \\Drupal\\Core\\Entity\\EntityDefinitionUpdateManagerInterface\n * @see node_update_8001\n * @see system_update_8004\n * @see https:\/\/www.drupal.org\/node\/2535316\n *\/",482],["T_WHITESPACE","\n",618],["T_FUNCTION","function",619],["T_WHITESPACE"," ",619],["T_STRING","hook_update_N",619],"(","&",["T_VARIABLE","$sandbox",619],")",["T_WHITESPACE"," ",619],"{",["T_WHITESPACE","\n  ",619],["T_COMMENT","\/\/ For non-batch updates, the signature can simply be:\n",620],["T_WHITESPACE","  ",621],["T_COMMENT","\/\/ function hook_update_N() {\n",621],["T_WHITESPACE","\n  ",622],["T_COMMENT","\/\/ Example function body for adding a field to a database table, which does\n",623],["T_WHITESPACE","  ",624],["T_COMMENT","\/\/ not require a batch operation:\n",624],["T_WHITESPACE","  ",625],["T_VARIABLE","$spec",625],["T_WHITESPACE"," ",625],"=",["T_WHITESPACE"," ",625],["T_ARRAY","array",625],"(",["T_WHITESPACE","\n    ",625],["T_CONSTANT_ENCAPSED_STRING","'type'",626],["T_WHITESPACE"," ",626],["T_DOUBLE_ARROW","=>",626],["T_WHITESPACE"," ",626],["T_CONSTANT_ENCAPSED_STRING","'varchar'",626],",",["T_WHITESPACE","\n    ",626],["T_CONSTANT_ENCAPSED_STRING","'description'",627],["T_WHITESPACE"," ",627],["T_DOUBLE_ARROW","=>",627],["T_WHITESPACE"," ",627],["T_CONSTANT_ENCAPSED_STRING","\"New Col\"",627],",",["T_WHITESPACE","\n    ",627],["T_CONSTANT_ENCAPSED_STRING","'length'",628],["T_WHITESPACE"," ",628],["T_DOUBLE_ARROW","=>",628],["T_WHITESPACE"," ",628],["T_LNUMBER","20",628],",",["T_WHITESPACE","\n    ",628],["T_CONSTANT_ENCAPSED_STRING","'not null'",629],["T_WHITESPACE"," ",629],["T_DOUBLE_ARROW","=>",629],["T_WHITESPACE"," ",629],["T_STRING","FALSE",629],",",["T_WHITESPACE","\n  ",629],")",";",["T_WHITESPACE","\n  ",630],["T_VARIABLE","$schema",631],["T_WHITESPACE"," ",631],"=",["T_WHITESPACE"," ",631],["T_STRING","Database",631],["T_DOUBLE_COLON","::",631],["T_STRING","getConnection",631],"(",")",["T_OBJECT_OPERATOR","->",631],["T_STRING","schema",631],"(",")",";",["T_WHITESPACE","\n  ",631],["T_VARIABLE","$schema",632],["T_OBJECT_OPERATOR","->",632],["T_STRING","addField",632],"(",["T_CONSTANT_ENCAPSED_STRING","'mytable1'",632],",",["T_WHITESPACE"," ",632],["T_CONSTANT_ENCAPSED_STRING","'newcol'",632],",",["T_WHITESPACE"," ",632],["T_VARIABLE","$spec",632],")",";",["T_WHITESPACE","\n\n  ",632],["T_COMMENT","\/\/ Example of what to do if there is an error during your update.\n",634],["T_WHITESPACE","  ",635],["T_IF","if",635],["T_WHITESPACE"," ",635],"(",["T_VARIABLE","$some_error_condition_met",635],")",["T_WHITESPACE"," ",635],"{",["T_WHITESPACE","\n    ",635],["T_THROW","throw",636],["T_WHITESPACE"," ",636],["T_NEW","new",636],["T_WHITESPACE"," ",636],["T_STRING","UpdateException",636],"(",["T_CONSTANT_ENCAPSED_STRING","'Something went wrong; here is what you should do.'",636],")",";",["T_WHITESPACE","\n  ",636],"}",["T_WHITESPACE","\n\n  ",637],["T_COMMENT","\/\/ Example function body for a batch update. In this example, the values in\n",639],["T_WHITESPACE","  ",640],["T_COMMENT","\/\/ a database field are updated.\n",640],["T_WHITESPACE","  ",641],["T_IF","if",641],["T_WHITESPACE"," ",641],"(","!",["T_ISSET","isset",641],"(",["T_VARIABLE","$sandbox",641],"[",["T_CONSTANT_ENCAPSED_STRING","'progress'",641],"]",")",")",["T_WHITESPACE"," ",641],"{",["T_WHITESPACE","\n    ",641],["T_COMMENT","\/\/ This must be the first run. Initialize the sandbox.\n",642],["T_WHITESPACE","    ",643],["T_VARIABLE","$sandbox",643],"[",["T_CONSTANT_ENCAPSED_STRING","'progress'",643],"]",["T_WHITESPACE"," ",643],"=",["T_WHITESPACE"," ",643],["T_LNUMBER","0",643],";",["T_WHITESPACE","\n    ",643],["T_VARIABLE","$sandbox",644],"[",["T_CONSTANT_ENCAPSED_STRING","'current_pk'",644],"]",["T_WHITESPACE"," ",644],"=",["T_WHITESPACE"," ",644],["T_LNUMBER","0",644],";",["T_WHITESPACE","\n    ",644],["T_VARIABLE","$sandbox",645],"[",["T_CONSTANT_ENCAPSED_STRING","'max'",645],"]",["T_WHITESPACE"," ",645],"=",["T_WHITESPACE"," ",645],["T_STRING","Database",645],["T_DOUBLE_COLON","::",645],["T_STRING","getConnection",645],"(",")",["T_OBJECT_OPERATOR","->",645],["T_STRING","query",645],"(",["T_CONSTANT_ENCAPSED_STRING","'SELECT COUNT(myprimarykey) FROM {mytable1}'",645],")",["T_OBJECT_OPERATOR","->",645],["T_STRING","fetchField",645],"(",")",["T_WHITESPACE"," ",645],"-",["T_WHITESPACE"," ",645],["T_LNUMBER","1",645],";",["T_WHITESPACE","\n  ",645],"}",["T_WHITESPACE","\n\n  ",646],["T_COMMENT","\/\/ Update in chunks of 20.\n",648],["T_WHITESPACE","  ",649],["T_VARIABLE","$records",649],["T_WHITESPACE"," ",649],"=",["T_WHITESPACE"," ",649],["T_STRING","Database",649],["T_DOUBLE_COLON","::",649],["T_STRING","getConnection",649],"(",")",["T_OBJECT_OPERATOR","->",649],["T_STRING","select",649],"(",["T_CONSTANT_ENCAPSED_STRING","'mytable1'",649],",",["T_WHITESPACE"," ",649],["T_CONSTANT_ENCAPSED_STRING","'m'",649],")",["T_WHITESPACE","\n    ",649],["T_OBJECT_OPERATOR","->",650],["T_STRING","fields",650],"(",["T_CONSTANT_ENCAPSED_STRING","'m'",650],",",["T_WHITESPACE"," ",650],["T_ARRAY","array",650],"(",["T_CONSTANT_ENCAPSED_STRING","'myprimarykey'",650],",",["T_WHITESPACE"," ",650],["T_CONSTANT_ENCAPSED_STRING","'otherfield'",650],")",")",["T_WHITESPACE","\n    ",650],["T_OBJECT_OPERATOR","->",651],["T_STRING","condition",651],"(",["T_CONSTANT_ENCAPSED_STRING","'myprimarykey'",651],",",["T_WHITESPACE"," ",651],["T_VARIABLE","$sandbox",651],"[",["T_CONSTANT_ENCAPSED_STRING","'current_pk'",651],"]",",",["T_WHITESPACE"," ",651],["T_CONSTANT_ENCAPSED_STRING","'>'",651],")",["T_WHITESPACE","\n    ",651],["T_OBJECT_OPERATOR","->",652],["T_STRING","range",652],"(",["T_LNUMBER","0",652],",",["T_WHITESPACE"," ",652],["T_LNUMBER","20",652],")",["T_WHITESPACE","\n    ",652],["T_OBJECT_OPERATOR","->",653],["T_STRING","orderBy",653],"(",["T_CONSTANT_ENCAPSED_STRING","'myprimarykey'",653],",",["T_WHITESPACE"," ",653],["T_CONSTANT_ENCAPSED_STRING","'ASC'",653],")",["T_WHITESPACE","\n    ",653],["T_OBJECT_OPERATOR","->",654],["T_STRING","execute",654],"(",")",";",["T_WHITESPACE","\n  ",654],["T_FOREACH","foreach",655],["T_WHITESPACE"," ",655],"(",["T_VARIABLE","$records",655],["T_WHITESPACE"," ",655],["T_AS","as",655],["T_WHITESPACE"," ",655],["T_VARIABLE","$record",655],")",["T_WHITESPACE"," ",655],"{",["T_WHITESPACE","\n    ",655],["T_COMMENT","\/\/ Here, you would make an update something related to this record. In this\n",656],["T_WHITESPACE","    ",657],["T_COMMENT","\/\/ example, some text is added to the other field.\n",657],["T_WHITESPACE","    ",658],["T_STRING","Database",658],["T_DOUBLE_COLON","::",658],["T_STRING","getConnection",658],"(",")",["T_OBJECT_OPERATOR","->",658],["T_STRING","update",658],"(",["T_CONSTANT_ENCAPSED_STRING","'mytable1'",658],")",["T_WHITESPACE","\n      ",658],["T_OBJECT_OPERATOR","->",659],["T_STRING","fields",659],"(",["T_ARRAY","array",659],"(",["T_CONSTANT_ENCAPSED_STRING","'otherfield'",659],["T_WHITESPACE"," ",659],["T_DOUBLE_ARROW","=>",659],["T_WHITESPACE"," ",659],["T_VARIABLE","$record",659],["T_OBJECT_OPERATOR","->",659],["T_STRING","otherfield",659],["T_WHITESPACE"," ",659],".",["T_WHITESPACE"," ",659],["T_CONSTANT_ENCAPSED_STRING","'-suffix'",659],")",")",["T_WHITESPACE","\n      ",659],["T_OBJECT_OPERATOR","->",660],["T_STRING","condition",660],"(",["T_CONSTANT_ENCAPSED_STRING","'myprimarykey'",660],",",["T_WHITESPACE"," ",660],["T_VARIABLE","$record",660],["T_OBJECT_OPERATOR","->",660],["T_STRING","myprimarykey",660],")",["T_WHITESPACE","\n      ",660],["T_OBJECT_OPERATOR","->",661],["T_STRING","execute",661],"(",")",";",["T_WHITESPACE","\n\n    ",661],["T_VARIABLE","$sandbox",663],"[",["T_CONSTANT_ENCAPSED_STRING","'progress'",663],"]",["T_INC","++",663],";",["T_WHITESPACE","\n    ",663],["T_VARIABLE","$sandbox",664],"[",["T_CONSTANT_ENCAPSED_STRING","'current_pk'",664],"]",["T_WHITESPACE"," ",664],"=",["T_WHITESPACE"," ",664],["T_VARIABLE","$record",664],["T_OBJECT_OPERATOR","->",664],["T_STRING","myprimarykey",664],";",["T_WHITESPACE","\n  ",664],"}",["T_WHITESPACE","\n\n  ",665],["T_VARIABLE","$sandbox",667],"[",["T_CONSTANT_ENCAPSED_STRING","'#finished'",667],"]",["T_WHITESPACE"," ",667],"=",["T_WHITESPACE"," ",667],["T_EMPTY","empty",667],"(",["T_VARIABLE","$sandbox",667],"[",["T_CONSTANT_ENCAPSED_STRING","'max'",667],"]",")",["T_WHITESPACE"," ",667],"?",["T_WHITESPACE"," ",667],["T_LNUMBER","1",667],["T_WHITESPACE"," ",667],":",["T_WHITESPACE"," ",667],"(",["T_VARIABLE","$sandbox",667],"[",["T_CONSTANT_ENCAPSED_STRING","'progress'",667],"]",["T_WHITESPACE"," ",667],"\/",["T_WHITESPACE"," ",667],["T_VARIABLE","$sandbox",667],"[",["T_CONSTANT_ENCAPSED_STRING","'max'",667],"]",")",";",["T_WHITESPACE","\n\n  ",667],["T_COMMENT","\/\/ To display a message to the user when the update is completed, return it.\n",669],["T_WHITESPACE","  ",670],["T_COMMENT","\/\/ If you do not want to display a completion message, return nothing.\n",670],["T_WHITESPACE","  ",671],["T_RETURN","return",671],["T_WHITESPACE"," ",671],["T_STRING","t",671],"(",["T_CONSTANT_ENCAPSED_STRING","'All foo bars were updated with the new suffix'",671],")",";",["T_WHITESPACE","\n",671],"}",["T_WHITESPACE","\n\n",672],["T_DOC_COMMENT","\/**\n * Executes an update which is intended to update data, like entities.\n *\n * These implementations have to be placed in a MODULE.post_update.php file.\n *\n * These updates are executed after all hook_update_N() implementations. At this\n * stage Drupal is already fully repaired so you can use any API as you wish.\n *\n * NAME can be arbitrary machine names. In contrast to hook_update_N() the order\n * of functions in the file is the only thing which ensures the execution order\n * of those functions.\n *\n * Drupal also ensures to not execute the same hook_post_update_NAME() function\n * twice.\n *\n * @param array $sandbox\n *   Stores information for batch updates. See above for more information.\n *\n * @return string|null\n *   Optionally, hook_post_update_NAME() hooks may return a translated string\n *   that will be displayed to the user after the update has completed. If no\n *   message is returned, no message will be presented to the user.\n *\n * @throws \\Drupal\\Core\\Utility\\UpdateException|PDOException\n *   In case of error, update hooks should throw an instance of\n *   \\Drupal\\Core\\Utility\\UpdateException with a meaningful message for the\n *   user. If a database query fails for whatever reason, it will throw a\n *   PDOException.\n *\n * @ingroup update_api\n *\n * @see hook_update_N()\n *\/",674],["T_WHITESPACE","\n",706],["T_FUNCTION","function",707],["T_WHITESPACE"," ",707],["T_STRING","hook_post_update_NAME",707],"(","&",["T_VARIABLE","$sandbox",707],")",["T_WHITESPACE"," ",707],"{",["T_WHITESPACE","\n  ",707],["T_COMMENT","\/\/ Example of updating some content.\n",708],["T_WHITESPACE","  ",709],["T_VARIABLE","$node",709],["T_WHITESPACE"," ",709],"=",["T_WHITESPACE"," ",709],["T_NS_SEPARATOR","\\",709],["T_STRING","Drupal",709],["T_NS_SEPARATOR","\\",709],["T_STRING","node",709],["T_NS_SEPARATOR","\\",709],["T_STRING","Entity",709],["T_NS_SEPARATOR","\\",709],["T_STRING","Node",709],["T_DOUBLE_COLON","::",709],["T_STRING","load",709],"(",["T_LNUMBER","123",709],")",";",["T_WHITESPACE","\n  ",709],["T_VARIABLE","$node",710],["T_OBJECT_OPERATOR","->",710],["T_STRING","setTitle",710],"(",["T_CONSTANT_ENCAPSED_STRING","'foo'",710],")",";",["T_WHITESPACE","\n  ",710],["T_VARIABLE","$node",711],["T_OBJECT_OPERATOR","->",711],["T_STRING","save",711],"(",")",";",["T_WHITESPACE","\n\n  ",711],["T_VARIABLE","$result",713],["T_WHITESPACE"," ",713],"=",["T_WHITESPACE"," ",713],["T_STRING","t",713],"(",["T_CONSTANT_ENCAPSED_STRING","'Node %nid saved'",713],",",["T_WHITESPACE"," ",713],"[",["T_CONSTANT_ENCAPSED_STRING","'%nid'",713],["T_WHITESPACE"," ",713],["T_DOUBLE_ARROW","=>",713],["T_WHITESPACE"," ",713],["T_VARIABLE","$node",713],["T_OBJECT_OPERATOR","->",713],["T_STRING","id",713],"(",")","]",")",";",["T_WHITESPACE","\n\n  ",713],["T_COMMENT","\/\/ Example of disabling blocks with missing condition contexts. Note: The\n",715],["T_WHITESPACE","  ",716],["T_COMMENT","\/\/ block itself is in a state which is valid at that point.\n",716],["T_WHITESPACE","  ",717],["T_COMMENT","\/\/ @see block_update_8001()\n",717],["T_WHITESPACE","  ",718],["T_COMMENT","\/\/ @see block_post_update_disable_blocks_with_missing_contexts()\n",718],["T_WHITESPACE","  ",719],["T_VARIABLE","$block_update_8001",719],["T_WHITESPACE"," ",719],"=",["T_WHITESPACE"," ",719],["T_NS_SEPARATOR","\\",719],["T_STRING","Drupal",719],["T_DOUBLE_COLON","::",719],["T_STRING","keyValue",719],"(",["T_CONSTANT_ENCAPSED_STRING","'update_backup'",719],")",["T_OBJECT_OPERATOR","->",719],["T_STRING","get",719],"(",["T_CONSTANT_ENCAPSED_STRING","'block_update_8001'",719],",",["T_WHITESPACE"," ",719],"[","]",")",";",["T_WHITESPACE","\n\n  ",719],["T_VARIABLE","$block_ids",721],["T_WHITESPACE"," ",721],"=",["T_WHITESPACE"," ",721],["T_STRING","array_keys",721],"(",["T_VARIABLE","$block_update_8001",721],")",";",["T_WHITESPACE","\n  ",721],["T_VARIABLE","$block_storage",722],["T_WHITESPACE"," ",722],"=",["T_WHITESPACE"," ",722],["T_NS_SEPARATOR","\\",722],["T_STRING","Drupal",722],["T_DOUBLE_COLON","::",722],["T_STRING","entityManager",722],"(",")",["T_OBJECT_OPERATOR","->",722],["T_STRING","getStorage",722],"(",["T_CONSTANT_ENCAPSED_STRING","'block'",722],")",";",["T_WHITESPACE","\n  ",722],["T_VARIABLE","$blocks",723],["T_WHITESPACE"," ",723],"=",["T_WHITESPACE"," ",723],["T_VARIABLE","$block_storage",723],["T_OBJECT_OPERATOR","->",723],["T_STRING","loadMultiple",723],"(",["T_VARIABLE","$block_ids",723],")",";",["T_WHITESPACE","\n  ",723],["T_DOC_COMMENT","\/** @var $blocks \\Drupal\\block\\BlockInterface[] *\/",724],["T_WHITESPACE","\n  ",724],["T_FOREACH","foreach",725],["T_WHITESPACE"," ",725],"(",["T_VARIABLE","$blocks",725],["T_WHITESPACE"," ",725],["T_AS","as",725],["T_WHITESPACE"," ",725],["T_VARIABLE","$block",725],")",["T_WHITESPACE"," ",725],"{",["T_WHITESPACE","\n    ",725],["T_COMMENT","\/\/ This block has had conditions removed due to an inability to resolve\n",726],["T_WHITESPACE","    ",727],["T_COMMENT","\/\/ contexts in block_update_8001() so disable it.\n",727],["T_WHITESPACE","\n    ",728],["T_COMMENT","\/\/ Disable currently enabled blocks.\n",729],["T_WHITESPACE","    ",730],["T_IF","if",730],["T_WHITESPACE"," ",730],"(",["T_VARIABLE","$block_update_8001",730],"[",["T_VARIABLE","$block",730],["T_OBJECT_OPERATOR","->",730],["T_STRING","id",730],"(",")","]","[",["T_CONSTANT_ENCAPSED_STRING","'status'",730],"]",")",["T_WHITESPACE"," ",730],"{",["T_WHITESPACE","\n      ",730],["T_VARIABLE","$block",731],["T_OBJECT_OPERATOR","->",731],["T_STRING","setStatus",731],"(",["T_STRING","FALSE",731],")",";",["T_WHITESPACE","\n      ",731],["T_VARIABLE","$block",732],["T_OBJECT_OPERATOR","->",732],["T_STRING","save",732],"(",")",";",["T_WHITESPACE","\n    ",732],"}",["T_WHITESPACE","\n  ",733],"}",["T_WHITESPACE","\n\n  ",734],["T_RETURN","return",736],["T_WHITESPACE"," ",736],["T_VARIABLE","$result",736],";",["T_WHITESPACE","\n",736],"}",["T_WHITESPACE","\n\n",737],["T_DOC_COMMENT","\/**\n * Return an array of information about module update dependencies.\n *\n * This can be used to indicate update functions from other modules that your\n * module's update functions depend on, or vice versa. It is used by the update\n * system to determine the appropriate order in which updates should be run, as\n * well as to search for missing dependencies.\n *\n * Implementations of this hook should be placed in a mymodule.install file in\n * the same directory as mymodule.module.\n *\n * @return\n *   A multidimensional array containing information about the module update\n *   dependencies. The first two levels of keys represent the module and update\n *   number (respectively) for which information is being returned, and the\n *   value is an array of information about that update's dependencies. Within\n *   this array, each key represents a module, and each value represents the\n *   number of an update function within that module. In the event that your\n *   update function depends on more than one update from a particular module,\n *   you should always list the highest numbered one here (since updates within\n *   a given module always run in numerical order).\n *\n * @ingroup update_api\n *\n * @see update_resolve_dependencies()\n * @see hook_update_N()\n *\/",739],["T_WHITESPACE","\n",765],["T_FUNCTION","function",766],["T_WHITESPACE"," ",766],["T_STRING","hook_update_dependencies",766],"(",")",["T_WHITESPACE"," ",766],"{",["T_WHITESPACE","\n  ",766],["T_COMMENT","\/\/ Indicate that the mymodule_update_8001() function provided by this module\n",767],["T_WHITESPACE","  ",768],["T_COMMENT","\/\/ must run after the another_module_update_8003() function provided by the\n",768],["T_WHITESPACE","  ",769],["T_COMMENT","\/\/ 'another_module' module.\n",769],["T_WHITESPACE","  ",770],["T_VARIABLE","$dependencies",770],"[",["T_CONSTANT_ENCAPSED_STRING","'mymodule'",770],"]","[",["T_LNUMBER","8001",770],"]",["T_WHITESPACE"," ",770],"=",["T_WHITESPACE"," ",770],["T_ARRAY","array",770],"(",["T_WHITESPACE","\n    ",770],["T_CONSTANT_ENCAPSED_STRING","'another_module'",771],["T_WHITESPACE"," ",771],["T_DOUBLE_ARROW","=>",771],["T_WHITESPACE"," ",771],["T_LNUMBER","8003",771],",",["T_WHITESPACE","\n  ",771],")",";",["T_WHITESPACE","\n  ",772],["T_COMMENT","\/\/ Indicate that the mymodule_update_8002() function provided by this module\n",773],["T_WHITESPACE","  ",774],["T_COMMENT","\/\/ must run before the yet_another_module_update_8005() function provided by\n",774],["T_WHITESPACE","  ",775],["T_COMMENT","\/\/ the 'yet_another_module' module. (Note that declaring dependencies in this\n",775],["T_WHITESPACE","  ",776],["T_COMMENT","\/\/ direction should be done only in rare situations, since it can lead to the\n",776],["T_WHITESPACE","  ",777],["T_COMMENT","\/\/ following problem: If a site has already run the yet_another_module\n",777],["T_WHITESPACE","  ",778],["T_COMMENT","\/\/ module's database updates before it updates its codebase to pick up the\n",778],["T_WHITESPACE","  ",779],["T_COMMENT","\/\/ newest mymodule code, then the dependency declared here will be ignored.)\n",779],["T_WHITESPACE","  ",780],["T_VARIABLE","$dependencies",780],"[",["T_CONSTANT_ENCAPSED_STRING","'yet_another_module'",780],"]","[",["T_LNUMBER","8005",780],"]",["T_WHITESPACE"," ",780],"=",["T_WHITESPACE"," ",780],["T_ARRAY","array",780],"(",["T_WHITESPACE","\n    ",780],["T_CONSTANT_ENCAPSED_STRING","'mymodule'",781],["T_WHITESPACE"," ",781],["T_DOUBLE_ARROW","=>",781],["T_WHITESPACE"," ",781],["T_LNUMBER","8002",781],",",["T_WHITESPACE","\n  ",781],")",";",["T_WHITESPACE","\n  ",782],["T_RETURN","return",783],["T_WHITESPACE"," ",783],["T_VARIABLE","$dependencies",783],";",["T_WHITESPACE","\n",783],"}",["T_WHITESPACE","\n\n",784],["T_DOC_COMMENT","\/**\n * Return a number which is no longer available as hook_update_N().\n *\n * If you remove some update functions from your mymodule.install file, you\n * should notify Drupal of those missing functions. This way, Drupal can\n * ensure that no update is accidentally skipped.\n *\n * Implementations of this hook should be placed in a mymodule.install file in\n * the same directory as mymodule.module.\n *\n * @return\n *   An integer, corresponding to hook_update_N() which has been removed from\n *   mymodule.install.\n *\n * @ingroup update_api\n *\n * @see hook_update_N()\n *\/",786],["T_WHITESPACE","\n",803],["T_FUNCTION","function",804],["T_WHITESPACE"," ",804],["T_STRING","hook_update_last_removed",804],"(",")",["T_WHITESPACE"," ",804],"{",["T_WHITESPACE","\n  ",804],["T_COMMENT","\/\/ We've removed the 8.x-1.x version of mymodule, including database updates.\n",805],["T_WHITESPACE","  ",806],["T_COMMENT","\/\/ The next update function is mymodule_update_8200().\n",806],["T_WHITESPACE","  ",807],["T_RETURN","return",807],["T_WHITESPACE"," ",807],["T_LNUMBER","8103",807],";",["T_WHITESPACE","\n",807],"}",["T_WHITESPACE","\n\n",808],["T_DOC_COMMENT","\/**\n * Provide information on Updaters (classes that can update Drupal).\n *\n * Drupal\\Core\\Updater\\Updater is a class that knows how to update various parts\n * of the Drupal file system, for example to update modules that have newer\n * releases, or to install a new theme.\n *\n * @return\n *   An associative array of information about the updater(s) being provided.\n *   This array is keyed by a unique identifier for each updater, and the\n *   values are subarrays that can contain the following keys:\n *   - class: The name of the PHP class which implements this updater.\n *   - name: Human-readable name of this updater.\n *   - weight: Controls what order the Updater classes are consulted to decide\n *     which one should handle a given task. When an update task is being run,\n *     the system will loop through all the Updater classes defined in this\n *     registry in weight order and let each class respond to the task and\n *     decide if each Updater wants to handle the task. In general, this\n *     doesn't matter, but if you need to override an existing Updater, make\n *     sure your Updater has a lighter weight so that it comes first.\n *\n * @ingroup update_api\n *\n * @see drupal_get_updaters()\n * @see hook_updater_info_alter()\n *\/",810],["T_WHITESPACE","\n",835],["T_FUNCTION","function",836],["T_WHITESPACE"," ",836],["T_STRING","hook_updater_info",836],"(",")",["T_WHITESPACE"," ",836],"{",["T_WHITESPACE","\n  ",836],["T_RETURN","return",837],["T_WHITESPACE"," ",837],["T_ARRAY","array",837],"(",["T_WHITESPACE","\n    ",837],["T_CONSTANT_ENCAPSED_STRING","'module'",838],["T_WHITESPACE"," ",838],["T_DOUBLE_ARROW","=>",838],["T_WHITESPACE"," ",838],["T_ARRAY","array",838],"(",["T_WHITESPACE","\n      ",838],["T_CONSTANT_ENCAPSED_STRING","'class'",839],["T_WHITESPACE"," ",839],["T_DOUBLE_ARROW","=>",839],["T_WHITESPACE"," ",839],["T_CONSTANT_ENCAPSED_STRING","'Drupal\\Core\\Updater\\Module'",839],",",["T_WHITESPACE","\n      ",839],["T_CONSTANT_ENCAPSED_STRING","'name'",840],["T_WHITESPACE"," ",840],["T_DOUBLE_ARROW","=>",840],["T_WHITESPACE"," ",840],["T_STRING","t",840],"(",["T_CONSTANT_ENCAPSED_STRING","'Update modules'",840],")",",",["T_WHITESPACE","\n      ",840],["T_CONSTANT_ENCAPSED_STRING","'weight'",841],["T_WHITESPACE"," ",841],["T_DOUBLE_ARROW","=>",841],["T_WHITESPACE"," ",841],["T_LNUMBER","0",841],",",["T_WHITESPACE","\n    ",841],")",",",["T_WHITESPACE","\n    ",842],["T_CONSTANT_ENCAPSED_STRING","'theme'",843],["T_WHITESPACE"," ",843],["T_DOUBLE_ARROW","=>",843],["T_WHITESPACE"," ",843],["T_ARRAY","array",843],"(",["T_WHITESPACE","\n      ",843],["T_CONSTANT_ENCAPSED_STRING","'class'",844],["T_WHITESPACE"," ",844],["T_DOUBLE_ARROW","=>",844],["T_WHITESPACE"," ",844],["T_CONSTANT_ENCAPSED_STRING","'Drupal\\Core\\Updater\\Theme'",844],",",["T_WHITESPACE","\n      ",844],["T_CONSTANT_ENCAPSED_STRING","'name'",845],["T_WHITESPACE"," ",845],["T_DOUBLE_ARROW","=>",845],["T_WHITESPACE"," ",845],["T_STRING","t",845],"(",["T_CONSTANT_ENCAPSED_STRING","'Update themes'",845],")",",",["T_WHITESPACE","\n      ",845],["T_CONSTANT_ENCAPSED_STRING","'weight'",846],["T_WHITESPACE"," ",846],["T_DOUBLE_ARROW","=>",846],["T_WHITESPACE"," ",846],["T_LNUMBER","0",846],",",["T_WHITESPACE","\n    ",846],")",",",["T_WHITESPACE","\n  ",847],")",";",["T_WHITESPACE","\n",848],"}",["T_WHITESPACE","\n\n",849],["T_DOC_COMMENT","\/**\n * Alter the Updater information array.\n *\n * An Updater is a class that knows how to update various parts of the Drupal\n * file system, for example to update modules that have newer releases, or to\n * install a new theme.\n *\n * @param array $updaters\n *   Associative array of updaters as defined through hook_updater_info().\n *   Alter this array directly.\n *\n * @ingroup update_api\n *\n * @see drupal_get_updaters()\n * @see hook_updater_info()\n *\/",851],["T_WHITESPACE","\n",866],["T_FUNCTION","function",867],["T_WHITESPACE"," ",867],["T_STRING","hook_updater_info_alter",867],"(","&",["T_VARIABLE","$updaters",867],")",["T_WHITESPACE"," ",867],"{",["T_WHITESPACE","\n  ",867],["T_COMMENT","\/\/ Adjust weight so that the theme Updater gets a chance to handle a given\n",868],["T_WHITESPACE","  ",869],["T_COMMENT","\/\/ update task before module updaters.\n",869],["T_WHITESPACE","  ",870],["T_VARIABLE","$updaters",870],"[",["T_CONSTANT_ENCAPSED_STRING","'theme'",870],"]","[",["T_CONSTANT_ENCAPSED_STRING","'weight'",870],"]",["T_WHITESPACE"," ",870],"=",["T_WHITESPACE"," ",870],"-",["T_LNUMBER","1",870],";",["T_WHITESPACE","\n",870],"}",["T_WHITESPACE","\n\n",871],["T_DOC_COMMENT","\/**\n * Check installation requirements and do status reporting.\n *\n * This hook has three closely related uses, determined by the $phase argument:\n * - Checking installation requirements ($phase == 'install').\n * - Checking update requirements ($phase == 'update').\n * - Status reporting ($phase == 'runtime').\n *\n * Note that this hook, like all others dealing with installation and updates,\n * must reside in a module_name.install file, or it will not properly abort\n * the installation of the module if a critical requirement is missing.\n *\n * During the 'install' phase, modules can for example assert that\n * library or server versions are available or sufficient.\n * Note that the installation of a module can happen during installation of\n * Drupal itself (by install.php) with an installation profile or later by hand.\n * As a consequence, install-time requirements must be checked without access\n * to the full Drupal API, because it is not available during install.php.\n * If a requirement has a severity of REQUIREMENT_ERROR, install.php will abort\n * or at least the module will not install.\n * Other severity levels have no effect on the installation.\n * Module dependencies do not belong to these installation requirements,\n * but should be defined in the module's .info.yml file.\n *\n * During installation (when $phase == 'install'), if you need to load a class\n * from your module, you'll need to include the class file directly.\n *\n * The 'runtime' phase is not limited to pure installation requirements\n * but can also be used for more general status information like maintenance\n * tasks and security issues.\n * The returned 'requirements' will be listed on the status report in the\n * administration section, with indication of the severity level.\n * Moreover, any requirement with a severity of REQUIREMENT_ERROR severity will\n * result in a notice on the administration configuration page.\n *\n * @param $phase\n *   The phase in which requirements are checked:\n *   - install: The module is being installed.\n *   - update: The module is enabled and update.php is run.\n *   - runtime: The runtime requirements are being checked and shown on the\n *     status report page.\n *\n * @return\n *   An associative array where the keys are arbitrary but must be unique (it\n *   is suggested to use the module short name as a prefix) and the values are\n *   themselves associative arrays with the following elements:\n *   - title: The name of the requirement.\n *   - value: The current value (e.g., version, time, level, etc). During\n *     install phase, this should only be used for version numbers, do not set\n *     it if not applicable.\n *   - description: The description of the requirement\/status.\n *   - severity: The requirement's result\/severity level, one of:\n *     - REQUIREMENT_INFO: For info only.\n *     - REQUIREMENT_OK: The requirement is satisfied.\n *     - REQUIREMENT_WARNING: The requirement failed with a warning.\n *     - REQUIREMENT_ERROR: The requirement failed with an error.\n *\/",873],["T_WHITESPACE","\n",929],["T_FUNCTION","function",930],["T_WHITESPACE"," ",930],["T_STRING","hook_requirements",930],"(",["T_VARIABLE","$phase",930],")",["T_WHITESPACE"," ",930],"{",["T_WHITESPACE","\n  ",930],["T_VARIABLE","$requirements",931],["T_WHITESPACE"," ",931],"=",["T_WHITESPACE"," ",931],["T_ARRAY","array",931],"(",")",";",["T_WHITESPACE","\n\n  ",931],["T_COMMENT","\/\/ Report Drupal version\n",933],["T_WHITESPACE","  ",934],["T_IF","if",934],["T_WHITESPACE"," ",934],"(",["T_VARIABLE","$phase",934],["T_WHITESPACE"," ",934],["T_IS_EQUAL","==",934],["T_WHITESPACE"," ",934],["T_CONSTANT_ENCAPSED_STRING","'runtime'",934],")",["T_WHITESPACE"," ",934],"{",["T_WHITESPACE","\n    ",934],["T_VARIABLE","$requirements",935],"[",["T_CONSTANT_ENCAPSED_STRING","'drupal'",935],"]",["T_WHITESPACE"," ",935],"=",["T_WHITESPACE"," ",935],["T_ARRAY","array",935],"(",["T_WHITESPACE","\n      ",935],["T_CONSTANT_ENCAPSED_STRING","'title'",936],["T_WHITESPACE"," ",936],["T_DOUBLE_ARROW","=>",936],["T_WHITESPACE"," ",936],["T_STRING","t",936],"(",["T_CONSTANT_ENCAPSED_STRING","'Drupal'",936],")",",",["T_WHITESPACE","\n      ",936],["T_CONSTANT_ENCAPSED_STRING","'value'",937],["T_WHITESPACE"," ",937],["T_DOUBLE_ARROW","=>",937],["T_WHITESPACE"," ",937],["T_NS_SEPARATOR","\\",937],["T_STRING","Drupal",937],["T_DOUBLE_COLON","::",937],["T_STRING","VERSION",937],",",["T_WHITESPACE","\n      ",937],["T_CONSTANT_ENCAPSED_STRING","'severity'",938],["T_WHITESPACE"," ",938],["T_DOUBLE_ARROW","=>",938],["T_WHITESPACE"," ",938],["T_STRING","REQUIREMENT_INFO",938],["T_WHITESPACE","\n    ",938],")",";",["T_WHITESPACE","\n  ",939],"}",["T_WHITESPACE","\n\n  ",940],["T_COMMENT","\/\/ Test PHP version\n",942],["T_WHITESPACE","  ",943],["T_VARIABLE","$requirements",943],"[",["T_CONSTANT_ENCAPSED_STRING","'php'",943],"]",["T_WHITESPACE"," ",943],"=",["T_WHITESPACE"," ",943],["T_ARRAY","array",943],"(",["T_WHITESPACE","\n    ",943],["T_CONSTANT_ENCAPSED_STRING","'title'",944],["T_WHITESPACE"," ",944],["T_DOUBLE_ARROW","=>",944],["T_WHITESPACE"," ",944],["T_STRING","t",944],"(",["T_CONSTANT_ENCAPSED_STRING","'PHP'",944],")",",",["T_WHITESPACE","\n    ",944],["T_CONSTANT_ENCAPSED_STRING","'value'",945],["T_WHITESPACE"," ",945],["T_DOUBLE_ARROW","=>",945],["T_WHITESPACE"," ",945],"(",["T_VARIABLE","$phase",945],["T_WHITESPACE"," ",945],["T_IS_EQUAL","==",945],["T_WHITESPACE"," ",945],["T_CONSTANT_ENCAPSED_STRING","'runtime'",945],")",["T_WHITESPACE"," ",945],"?",["T_WHITESPACE"," ",945],["T_NS_SEPARATOR","\\",945],["T_STRING","Drupal",945],["T_DOUBLE_COLON","::",945],["T_STRING","l",945],"(",["T_STRING","phpversion",945],"(",")",",",["T_WHITESPACE"," ",945],["T_NEW","new",945],["T_WHITESPACE"," ",945],["T_STRING","Url",945],"(",["T_CONSTANT_ENCAPSED_STRING","'system.php'",945],")",")",["T_WHITESPACE"," ",945],":",["T_WHITESPACE"," ",945],["T_STRING","phpversion",945],"(",")",",",["T_WHITESPACE","\n  ",945],")",";",["T_WHITESPACE","\n  ",946],["T_IF","if",947],["T_WHITESPACE"," ",947],"(",["T_STRING","version_compare",947],"(",["T_STRING","phpversion",947],"(",")",",",["T_WHITESPACE"," ",947],["T_STRING","DRUPAL_MINIMUM_PHP",947],")",["T_WHITESPACE"," ",947],"<",["T_WHITESPACE"," ",947],["T_LNUMBER","0",947],")",["T_WHITESPACE"," ",947],"{",["T_WHITESPACE","\n    ",947],["T_VARIABLE","$requirements",948],"[",["T_CONSTANT_ENCAPSED_STRING","'php'",948],"]","[",["T_CONSTANT_ENCAPSED_STRING","'description'",948],"]",["T_WHITESPACE"," ",948],"=",["T_WHITESPACE"," ",948],["T_STRING","t",948],"(",["T_CONSTANT_ENCAPSED_STRING","'Your PHP installation is too old. Drupal requires at least PHP %version.'",948],",",["T_WHITESPACE"," ",948],["T_ARRAY","array",948],"(",["T_CONSTANT_ENCAPSED_STRING","'%version'",948],["T_WHITESPACE"," ",948],["T_DOUBLE_ARROW","=>",948],["T_WHITESPACE"," ",948],["T_STRING","DRUPAL_MINIMUM_PHP",948],")",")",";",["T_WHITESPACE","\n    ",948],["T_VARIABLE","$requirements",949],"[",["T_CONSTANT_ENCAPSED_STRING","'php'",949],"]","[",["T_CONSTANT_ENCAPSED_STRING","'severity'",949],"]",["T_WHITESPACE"," ",949],"=",["T_WHITESPACE"," ",949],["T_STRING","REQUIREMENT_ERROR",949],";",["T_WHITESPACE","\n  ",949],"}",["T_WHITESPACE","\n\n  ",950],["T_COMMENT","\/\/ Report cron status\n",952],["T_WHITESPACE","  ",953],["T_IF","if",953],["T_WHITESPACE"," ",953],"(",["T_VARIABLE","$phase",953],["T_WHITESPACE"," ",953],["T_IS_EQUAL","==",953],["T_WHITESPACE"," ",953],["T_CONSTANT_ENCAPSED_STRING","'runtime'",953],")",["T_WHITESPACE"," ",953],"{",["T_WHITESPACE","\n    ",953],["T_VARIABLE","$cron_last",954],["T_WHITESPACE"," ",954],"=",["T_WHITESPACE"," ",954],["T_NS_SEPARATOR","\\",954],["T_STRING","Drupal",954],["T_DOUBLE_COLON","::",954],["T_STRING","state",954],"(",")",["T_OBJECT_OPERATOR","->",954],["T_STRING","get",954],"(",["T_CONSTANT_ENCAPSED_STRING","'system.cron_last'",954],")",";",["T_WHITESPACE","\n\n    ",954],["T_IF","if",956],["T_WHITESPACE"," ",956],"(",["T_STRING","is_numeric",956],"(",["T_VARIABLE","$cron_last",956],")",")",["T_WHITESPACE"," ",956],"{",["T_WHITESPACE","\n      ",956],["T_VARIABLE","$requirements",957],"[",["T_CONSTANT_ENCAPSED_STRING","'cron'",957],"]","[",["T_CONSTANT_ENCAPSED_STRING","'value'",957],"]",["T_WHITESPACE"," ",957],"=",["T_WHITESPACE"," ",957],["T_STRING","t",957],"(",["T_CONSTANT_ENCAPSED_STRING","'Last run @time ago'",957],",",["T_WHITESPACE"," ",957],["T_ARRAY","array",957],"(",["T_CONSTANT_ENCAPSED_STRING","'@time'",957],["T_WHITESPACE"," ",957],["T_DOUBLE_ARROW","=>",957],["T_WHITESPACE"," ",957],["T_NS_SEPARATOR","\\",957],["T_STRING","Drupal",957],["T_DOUBLE_COLON","::",957],["T_STRING","service",957],"(",["T_CONSTANT_ENCAPSED_STRING","'date.formatter'",957],")",["T_OBJECT_OPERATOR","->",957],["T_STRING","formatTimeDiffSince",957],"(",["T_VARIABLE","$cron_last",957],")",")",")",";",["T_WHITESPACE","\n    ",957],"}",["T_WHITESPACE","\n    ",958],["T_ELSE","else",959],["T_WHITESPACE"," ",959],"{",["T_WHITESPACE","\n      ",959],["T_VARIABLE","$requirements",960],"[",["T_CONSTANT_ENCAPSED_STRING","'cron'",960],"]",["T_WHITESPACE"," ",960],"=",["T_WHITESPACE"," ",960],["T_ARRAY","array",960],"(",["T_WHITESPACE","\n        ",960],["T_CONSTANT_ENCAPSED_STRING","'description'",961],["T_WHITESPACE"," ",961],["T_DOUBLE_ARROW","=>",961],["T_WHITESPACE"," ",961],["T_STRING","t",961],"(",["T_CONSTANT_ENCAPSED_STRING","'Cron has not run. It appears cron jobs have not been setup on your system. Check the help pages for <a href=\":url\">configuring cron jobs<\/a>.'",961],",",["T_WHITESPACE"," ",961],["T_ARRAY","array",961],"(",["T_CONSTANT_ENCAPSED_STRING","':url'",961],["T_WHITESPACE"," ",961],["T_DOUBLE_ARROW","=>",961],["T_WHITESPACE"," ",961],["T_CONSTANT_ENCAPSED_STRING","'https:\/\/www.drupal.org\/cron'",961],")",")",",",["T_WHITESPACE","\n        ",961],["T_CONSTANT_ENCAPSED_STRING","'severity'",962],["T_WHITESPACE"," ",962],["T_DOUBLE_ARROW","=>",962],["T_WHITESPACE"," ",962],["T_STRING","REQUIREMENT_ERROR",962],",",["T_WHITESPACE","\n        ",962],["T_CONSTANT_ENCAPSED_STRING","'value'",963],["T_WHITESPACE"," ",963],["T_DOUBLE_ARROW","=>",963],["T_WHITESPACE"," ",963],["T_STRING","t",963],"(",["T_CONSTANT_ENCAPSED_STRING","'Never run'",963],")",",",["T_WHITESPACE","\n      ",963],")",";",["T_WHITESPACE","\n    ",964],"}",["T_WHITESPACE","\n\n    ",965],["T_VARIABLE","$requirements",967],"[",["T_CONSTANT_ENCAPSED_STRING","'cron'",967],"]","[",["T_CONSTANT_ENCAPSED_STRING","'description'",967],"]",["T_WHITESPACE"," ",967],["T_CONCAT_EQUAL",".=",967],["T_WHITESPACE"," ",967],["T_CONSTANT_ENCAPSED_STRING","' '",967],["T_WHITESPACE"," ",967],".",["T_WHITESPACE"," ",967],["T_STRING","t",967],"(",["T_CONSTANT_ENCAPSED_STRING","'You can <a href=\":cron\">run cron manually<\/a>.'",967],",",["T_WHITESPACE"," ",967],["T_ARRAY","array",967],"(",["T_CONSTANT_ENCAPSED_STRING","':cron'",967],["T_WHITESPACE"," ",967],["T_DOUBLE_ARROW","=>",967],["T_WHITESPACE"," ",967],["T_NS_SEPARATOR","\\",967],["T_STRING","Drupal",967],["T_DOUBLE_COLON","::",967],["T_STRING","url",967],"(",["T_CONSTANT_ENCAPSED_STRING","'system.run_cron'",967],")",")",")",";",["T_WHITESPACE","\n\n    ",967],["T_VARIABLE","$requirements",969],"[",["T_CONSTANT_ENCAPSED_STRING","'cron'",969],"]","[",["T_CONSTANT_ENCAPSED_STRING","'title'",969],"]",["T_WHITESPACE"," ",969],"=",["T_WHITESPACE"," ",969],["T_STRING","t",969],"(",["T_CONSTANT_ENCAPSED_STRING","'Cron maintenance tasks'",969],")",";",["T_WHITESPACE","\n  ",969],"}",["T_WHITESPACE","\n\n  ",970],["T_RETURN","return",972],["T_WHITESPACE"," ",972],["T_VARIABLE","$requirements",972],";",["T_WHITESPACE","\n",972],"}",["T_WHITESPACE","\n\n",973],["T_DOC_COMMENT","\/**\n * @} End of \"addtogroup hooks\".\n *\/",975],["T_WHITESPACE","\n",977]]