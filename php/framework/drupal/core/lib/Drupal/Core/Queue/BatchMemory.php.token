[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Core",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Queue",3],";",["T_WHITESPACE","\n\n",3],["T_DOC_COMMENT","\/**\n * Defines a batch queue handler used by the Batch API for non-progressive\n * batches.\n *\n * This implementation:\n * - Ensures FIFO ordering.\n * - Allows an item to be repeatedly claimed until it is actually deleted (no\n *   notion of lease time or 'expire' date), to allow multipass operations.\n *\n * @ingroup queue\n *\/",5],["T_WHITESPACE","\n",15],["T_CLASS","class",16],["T_WHITESPACE"," ",16],["T_STRING","BatchMemory",16],["T_WHITESPACE"," ",16],["T_EXTENDS","extends",16],["T_WHITESPACE"," ",16],["T_STRING","Memory",16],["T_WHITESPACE"," ",16],"{",["T_WHITESPACE","\n\n  ",16],["T_DOC_COMMENT","\/**\n   * Overrides \\Drupal\\Core\\Queue\\Memory::claimItem().\n   *\n   * Unlike \\Drupal\\Core\\Queue\\Memory::claimItem(), this method provides a\n   * default lease time of 0 (no expiration) instead of 30. This allows the item\n   * to be claimed repeatedly until it is deleted.\n   *\/",18],["T_WHITESPACE","\n  ",24],["T_PUBLIC","public",25],["T_WHITESPACE"," ",25],["T_FUNCTION","function",25],["T_WHITESPACE"," ",25],["T_STRING","claimItem",25],"(",["T_VARIABLE","$lease_time",25],["T_WHITESPACE"," ",25],"=",["T_WHITESPACE"," ",25],["T_LNUMBER","0",25],")",["T_WHITESPACE"," ",25],"{",["T_WHITESPACE","\n    ",25],["T_IF","if",26],["T_WHITESPACE"," ",26],"(","!",["T_EMPTY","empty",26],"(",["T_VARIABLE","$this",26],["T_OBJECT_OPERATOR","->",26],["T_STRING","queue",26],")",")",["T_WHITESPACE"," ",26],"{",["T_WHITESPACE","\n      ",26],["T_STRING","reset",27],"(",["T_VARIABLE","$this",27],["T_OBJECT_OPERATOR","->",27],["T_STRING","queue",27],")",";",["T_WHITESPACE","\n      ",27],["T_RETURN","return",28],["T_WHITESPACE"," ",28],["T_STRING","current",28],"(",["T_VARIABLE","$this",28],["T_OBJECT_OPERATOR","->",28],["T_STRING","queue",28],")",";",["T_WHITESPACE","\n    ",28],"}",["T_WHITESPACE","\n    ",29],["T_RETURN","return",30],["T_WHITESPACE"," ",30],["T_STRING","FALSE",30],";",["T_WHITESPACE","\n  ",30],"}",["T_WHITESPACE","\n\n  ",31],["T_DOC_COMMENT","\/**\n   * Retrieves all remaining items in the queue.\n   *\n   * This is specific to Batch API and is not part of the\n   * \\Drupal\\Core\\Queue\\QueueInterface.\n   *\n   * @return array\n   *   An array of queue items.\n   *\/",33],["T_WHITESPACE","\n  ",41],["T_PUBLIC","public",42],["T_WHITESPACE"," ",42],["T_FUNCTION","function",42],["T_WHITESPACE"," ",42],["T_STRING","getAllItems",42],"(",")",["T_WHITESPACE"," ",42],"{",["T_WHITESPACE","\n    ",42],["T_VARIABLE","$result",43],["T_WHITESPACE"," ",43],"=",["T_WHITESPACE"," ",43],["T_ARRAY","array",43],"(",")",";",["T_WHITESPACE","\n    ",43],["T_FOREACH","foreach",44],["T_WHITESPACE"," ",44],"(",["T_VARIABLE","$this",44],["T_OBJECT_OPERATOR","->",44],["T_STRING","queue",44],["T_WHITESPACE"," ",44],["T_AS","as",44],["T_WHITESPACE"," ",44],["T_VARIABLE","$item",44],")",["T_WHITESPACE"," ",44],"{",["T_WHITESPACE","\n      ",44],["T_VARIABLE","$result",45],"[","]",["T_WHITESPACE"," ",45],"=",["T_WHITESPACE"," ",45],["T_VARIABLE","$item",45],["T_OBJECT_OPERATOR","->",45],["T_STRING","data",45],";",["T_WHITESPACE","\n    ",45],"}",["T_WHITESPACE","\n    ",46],["T_RETURN","return",47],["T_WHITESPACE"," ",47],["T_VARIABLE","$result",47],";",["T_WHITESPACE","\n  ",47],"}",["T_WHITESPACE","\n\n",48],"}",["T_WHITESPACE","\n",50]]