[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Core",3],["T_NS_SEPARATOR","\\",3],["T_STRING","ImageToolkit",3],";",["T_WHITESPACE","\n\n",3],["T_USE","use",5],["T_WHITESPACE"," ",5],["T_STRING","Drupal",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Core",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Plugin",5],["T_NS_SEPARATOR","\\",5],["T_STRING","ContainerFactoryPluginInterface",5],";",["T_WHITESPACE","\n",5],["T_USE","use",6],["T_WHITESPACE"," ",6],["T_STRING","Drupal",6],["T_NS_SEPARATOR","\\",6],["T_STRING","Core",6],["T_NS_SEPARATOR","\\",6],["T_STRING","Plugin",6],["T_NS_SEPARATOR","\\",6],["T_STRING","PluginFormInterface",6],";",["T_WHITESPACE","\n",6],["T_USE","use",7],["T_WHITESPACE"," ",7],["T_STRING","Drupal",7],["T_NS_SEPARATOR","\\",7],["T_STRING","Component",7],["T_NS_SEPARATOR","\\",7],["T_STRING","Plugin",7],["T_NS_SEPARATOR","\\",7],["T_STRING","PluginInspectionInterface",7],";",["T_WHITESPACE","\n\n",7],["T_DOC_COMMENT","\/**\n * @defgroup image Image toolkits\n * @{\n * Functions for image file manipulations.\n *\n * Drupal's image toolkits provide an abstraction layer for common image file\n * manipulations like scaling, cropping, and rotating. The abstraction frees\n * module authors from the need to support multiple image libraries, and it\n * allows site administrators to choose the library that's best for them.\n *\n * PHP includes the GD library by default so a GD toolkit is installed with\n * Drupal. Other toolkits like ImageMagick are available from contrib modules.\n * GD works well for small images, but using it with larger files may cause PHP\n * to run out of memory. In contrast the ImageMagick library does not suffer\n * from this problem, but it requires the ISP to have installed additional\n * software.\n *\n * Image toolkits are discovered using the Plugin system using\n * \\Drupal\\Core\\ImageToolkit\\ImageToolkitManager. The toolkit must then be\n * enabled using the admin\/config\/media\/image-toolkit form.\n *\n * Only one toolkit may be selected at a time. If a module author wishes to call\n * a specific toolkit they can check that it is installed by calling\n * \\Drupal\\Core\\ImageToolkit\\ImageToolkitManager::getAvailableToolkits(), and\n * then calling its functions directly.\n *\/",9],["T_WHITESPACE","\n\n",34],["T_DOC_COMMENT","\/**\n * Defines an interface for image toolkits.\n *\n * An image toolkit provides common image file manipulations like scaling,\n * cropping, and rotating.\n *\n * @see \\Drupal\\Core\\ImageToolkit\\Annotation\\ImageToolkit\n * @see \\Drupal\\Core\\ImageToolkit\\ImageToolkitBase\n * @see \\Drupal\\Core\\ImageToolkit\\ImageToolkitManager\n * @see plugin_api\n *\/",36],["T_WHITESPACE","\n",46],["T_INTERFACE","interface",47],["T_WHITESPACE"," ",47],["T_STRING","ImageToolkitInterface",47],["T_WHITESPACE"," ",47],["T_EXTENDS","extends",47],["T_WHITESPACE"," ",47],["T_STRING","ContainerFactoryPluginInterface",47],",",["T_WHITESPACE"," ",47],["T_STRING","PluginInspectionInterface",47],",",["T_WHITESPACE"," ",47],["T_STRING","PluginFormInterface",47],["T_WHITESPACE"," ",47],"{",["T_WHITESPACE","\n\n  ",47],["T_DOC_COMMENT","\/**\n   * Sets the source path of the image file.\n   *\n   * @param string $source\n   *   The source path of the image file.\n   *\n   * @return \\Drupal\\Core\\ImageToolkit\\ImageToolkitInterface\n   *   An instance of the current toolkit object.\n   *\n   * @throws \\BadMethodCallException\n   *   After being set initially, the source image cannot be changed.\n   *\/",49],["T_WHITESPACE","\n  ",60],["T_PUBLIC","public",61],["T_WHITESPACE"," ",61],["T_FUNCTION","function",61],["T_WHITESPACE"," ",61],["T_STRING","setSource",61],"(",["T_VARIABLE","$source",61],")",";",["T_WHITESPACE","\n\n  ",61],["T_DOC_COMMENT","\/**\n   * Gets the source path of the image file.\n   *\n   * @return string\n   *   The source path of the image file, or an empty string if the source is\n   *   not set.\n   *\/",63],["T_WHITESPACE","\n  ",69],["T_PUBLIC","public",70],["T_WHITESPACE"," ",70],["T_FUNCTION","function",70],["T_WHITESPACE"," ",70],["T_STRING","getSource",70],"(",")",";",["T_WHITESPACE","\n\n  ",70],["T_DOC_COMMENT","\/**\n   * Checks if the image is valid.\n   *\n   * @return bool\n   *   TRUE if the image toolkit is currently handling a valid image, FALSE\n   *   otherwise.\n   *\/",72],["T_WHITESPACE","\n  ",78],["T_PUBLIC","public",79],["T_WHITESPACE"," ",79],["T_FUNCTION","function",79],["T_WHITESPACE"," ",79],["T_STRING","isValid",79],"(",")",";",["T_WHITESPACE","\n\n  ",79],["T_DOC_COMMENT","\/**\n   * Writes an image resource to a destination file.\n   *\n   * @param string $destination\n   *   A string file URI or path where the image should be saved.\n   *\n   * @return bool\n   *   TRUE on success, FALSE on failure.\n   *\/",81],["T_WHITESPACE","\n  ",89],["T_PUBLIC","public",90],["T_WHITESPACE"," ",90],["T_FUNCTION","function",90],["T_WHITESPACE"," ",90],["T_STRING","save",90],"(",["T_VARIABLE","$destination",90],")",";",["T_WHITESPACE","\n\n  ",90],["T_DOC_COMMENT","\/**\n   * Determines if a file contains a valid image.\n   *\n   * Drupal supports GIF, JPG and PNG file formats when used with the GD\n   * toolkit, and may support others, depending on which toolkits are\n   * installed.\n   *\n   * @return bool\n   *   TRUE if the file could be found and is an image, FALSE otherwise.\n   *\/",92],["T_WHITESPACE","\n  ",101],["T_PUBLIC","public",102],["T_WHITESPACE"," ",102],["T_FUNCTION","function",102],["T_WHITESPACE"," ",102],["T_STRING","parseFile",102],"(",")",";",["T_WHITESPACE","\n\n  ",102],["T_DOC_COMMENT","\/**\n   * Returns the height of the image.\n   *\n   * @return int|null\n   *   The height of the image, or NULL if the image is invalid.\n   *\/",104],["T_WHITESPACE","\n  ",109],["T_PUBLIC","public",110],["T_WHITESPACE"," ",110],["T_FUNCTION","function",110],["T_WHITESPACE"," ",110],["T_STRING","getHeight",110],"(",")",";",["T_WHITESPACE","\n\n  ",110],["T_DOC_COMMENT","\/**\n   * Returns the width of the image.\n   *\n   * @return int|null\n   *   The width of the image, or NULL if the image is invalid.\n   *\/",112],["T_WHITESPACE","\n  ",117],["T_PUBLIC","public",118],["T_WHITESPACE"," ",118],["T_FUNCTION","function",118],["T_WHITESPACE"," ",118],["T_STRING","getWidth",118],"(",")",";",["T_WHITESPACE","\n\n  ",118],["T_DOC_COMMENT","\/**\n   * Returns the MIME type of the image file.\n   *\n   * @return string\n   *   The MIME type of the image file, or an empty string if the image is\n   *   invalid.\n   *\/",120],["T_WHITESPACE","\n  ",126],["T_PUBLIC","public",127],["T_WHITESPACE"," ",127],["T_FUNCTION","function",127],["T_WHITESPACE"," ",127],["T_STRING","getMimeType",127],"(",")",";",["T_WHITESPACE","\n\n  ",127],["T_DOC_COMMENT","\/**\n   * Gets toolkit requirements in a format suitable for hook_requirements().\n   *\n   * @return array\n   *   An associative requirements array as is returned by hook_requirements().\n   *   If the toolkit claims no requirements to the system, returns an empty\n   *   array. The array can have arbitrary keys and they do not have to be\n   *   prefixed by e.g. the module name or toolkit ID, as the system will make\n   *   the keys globally unique.\n   *\n   * @see hook_requirements()\n   *\/",129],["T_WHITESPACE","\n  ",140],["T_PUBLIC","public",141],["T_WHITESPACE"," ",141],["T_FUNCTION","function",141],["T_WHITESPACE"," ",141],["T_STRING","getRequirements",141],"(",")",";",["T_WHITESPACE","\n\n  ",141],["T_DOC_COMMENT","\/**\n   * Verifies that the Image Toolkit is set up correctly.\n   *\n   * @return bool\n   *   TRUE if the toolkit is available on this machine, FALSE otherwise.\n   *\/",143],["T_WHITESPACE","\n  ",148],["T_PUBLIC","public",149],["T_WHITESPACE"," ",149],["T_STATIC","static",149],["T_WHITESPACE"," ",149],["T_FUNCTION","function",149],["T_WHITESPACE"," ",149],["T_STRING","isAvailable",149],"(",")",";",["T_WHITESPACE","\n\n  ",149],["T_DOC_COMMENT","\/**\n   * Returns a list of image file extensions supported by the toolkit.\n   *\n   * @return array\n   *   An array of supported image file extensions (e.g. png\/jpeg\/gif).\n   *\/",151],["T_WHITESPACE","\n  ",156],["T_PUBLIC","public",157],["T_WHITESPACE"," ",157],["T_STATIC","static",157],["T_WHITESPACE"," ",157],["T_FUNCTION","function",157],["T_WHITESPACE"," ",157],["T_STRING","getSupportedExtensions",157],"(",")",";",["T_WHITESPACE","\n\n  ",157],["T_DOC_COMMENT","\/**\n   * Applies a toolkit operation to an image.\n   *\n   * @param string $operation\n   *   The toolkit operation to be processed.\n   * @param array $arguments\n   *   An associative array of arguments to be passed to the toolkit\n   *   operation, e.g. array('width' => 50, 'height' => 100,\n   *   'upscale' => TRUE).\n   *\n   * @return bool\n   *   TRUE if the operation was performed successfully, FALSE otherwise.\n   *\/",159],["T_WHITESPACE","\n  ",171],["T_PUBLIC","public",172],["T_WHITESPACE"," ",172],["T_FUNCTION","function",172],["T_WHITESPACE"," ",172],["T_STRING","apply",172],"(",["T_VARIABLE","$operation",172],",",["T_WHITESPACE"," ",172],["T_ARRAY","array",172],["T_WHITESPACE"," ",172],["T_VARIABLE","$arguments",172],["T_WHITESPACE"," ",172],"=",["T_WHITESPACE"," ",172],["T_ARRAY","array",172],"(",")",")",";",["T_WHITESPACE","\n\n",172],"}",["T_WHITESPACE","\n",174]]