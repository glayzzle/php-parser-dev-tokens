[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Core",3],["T_NS_SEPARATOR","\\",3],["T_STRING","ImageToolkit",3],";",["T_WHITESPACE","\n\n",3],["T_USE","use",5],["T_WHITESPACE"," ",5],["T_STRING","Drupal",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Component",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Plugin",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Exception",5],["T_NS_SEPARATOR","\\",5],["T_STRING","InvalidPluginDefinitionException",5],";",["T_WHITESPACE","\n",5],["T_USE","use",6],["T_WHITESPACE"," ",6],["T_STRING","Drupal",6],["T_NS_SEPARATOR","\\",6],["T_STRING","Core",6],["T_NS_SEPARATOR","\\",6],["T_STRING","Plugin",6],["T_NS_SEPARATOR","\\",6],["T_STRING","PluginBase",6],";",["T_WHITESPACE","\n",6],["T_USE","use",7],["T_WHITESPACE"," ",7],["T_STRING","Psr",7],["T_NS_SEPARATOR","\\",7],["T_STRING","Log",7],["T_NS_SEPARATOR","\\",7],["T_STRING","LoggerInterface",7],";",["T_WHITESPACE","\n\n",7],["T_DOC_COMMENT","\/**\n * Provides a base class for image toolkit operation plugins.\n *\n * @see \\Drupal\\Core\\ImageToolkit\\Annotation\\ImageToolkitOperation\n * @see \\Drupal\\Core\\ImageToolkit\\ImageToolkitOperationInterface\n * @see \\Drupal\\Core\\ImageToolkit\\ImageToolkitOperationManager\n * @see plugin_api\n *\/",9],["T_WHITESPACE","\n",16],["T_ABSTRACT","abstract",17],["T_WHITESPACE"," ",17],["T_CLASS","class",17],["T_WHITESPACE"," ",17],["T_STRING","ImageToolkitOperationBase",17],["T_WHITESPACE"," ",17],["T_EXTENDS","extends",17],["T_WHITESPACE"," ",17],["T_STRING","PluginBase",17],["T_WHITESPACE"," ",17],["T_IMPLEMENTS","implements",17],["T_WHITESPACE"," ",17],["T_STRING","ImageToolkitOperationInterface",17],["T_WHITESPACE"," ",17],"{",["T_WHITESPACE","\n\n  ",17],["T_DOC_COMMENT","\/**\n   * The image toolkit.\n   *\n   * @var \\Drupal\\Core\\ImageToolkit\\ImageToolkitInterface\n   *\/",19],["T_WHITESPACE","\n  ",23],["T_PROTECTED","protected",24],["T_WHITESPACE"," ",24],["T_VARIABLE","$toolkit",24],";",["T_WHITESPACE","\n\n  ",24],["T_DOC_COMMENT","\/**\n   * A logger instance.\n   *\n   * @var \\Psr\\Log\\LoggerInterface\n   *\/",26],["T_WHITESPACE","\n  ",30],["T_PROTECTED","protected",31],["T_WHITESPACE"," ",31],["T_VARIABLE","$logger",31],";",["T_WHITESPACE","\n\n  ",31],["T_DOC_COMMENT","\/**\n   * Constructs an image toolkit operation plugin.\n   *\n   * @param array $configuration\n   *   A configuration array containing information about the plugin instance.\n   * @param string $plugin_id\n   *   The plugin_id for the plugin instance.\n   * @param array $plugin_definition\n   *   The plugin implementation definition.\n   * @param \\Drupal\\Core\\ImageToolkit\\ImageToolkitInterface $toolkit\n   *   The image toolkit.\n   * @param \\Psr\\Log\\LoggerInterface $logger\n   *   A logger instance.\n   *\/",33],["T_WHITESPACE","\n  ",46],["T_PUBLIC","public",47],["T_WHITESPACE"," ",47],["T_FUNCTION","function",47],["T_WHITESPACE"," ",47],["T_STRING","__construct",47],"(",["T_ARRAY","array",47],["T_WHITESPACE"," ",47],["T_VARIABLE","$configuration",47],",",["T_WHITESPACE"," ",47],["T_VARIABLE","$plugin_id",47],",",["T_WHITESPACE"," ",47],["T_ARRAY","array",47],["T_WHITESPACE"," ",47],["T_VARIABLE","$plugin_definition",47],",",["T_WHITESPACE"," ",47],["T_STRING","ImageToolkitInterface",47],["T_WHITESPACE"," ",47],["T_VARIABLE","$toolkit",47],",",["T_WHITESPACE"," ",47],["T_STRING","LoggerInterface",47],["T_WHITESPACE"," ",47],["T_VARIABLE","$logger",47],")",["T_WHITESPACE"," ",47],"{",["T_WHITESPACE","\n    ",47],["T_STRING","parent",48],["T_DOUBLE_COLON","::",48],["T_STRING","__construct",48],"(",["T_VARIABLE","$configuration",48],",",["T_WHITESPACE"," ",48],["T_VARIABLE","$plugin_id",48],",",["T_WHITESPACE"," ",48],["T_VARIABLE","$plugin_definition",48],")",";",["T_WHITESPACE","\n    ",48],["T_VARIABLE","$this",49],["T_OBJECT_OPERATOR","->",49],["T_STRING","toolkit",49],["T_WHITESPACE"," ",49],"=",["T_WHITESPACE"," ",49],["T_VARIABLE","$toolkit",49],";",["T_WHITESPACE","\n    ",49],["T_VARIABLE","$this",50],["T_OBJECT_OPERATOR","->",50],["T_STRING","logger",50],["T_WHITESPACE"," ",50],"=",["T_WHITESPACE"," ",50],["T_VARIABLE","$logger",50],";",["T_WHITESPACE","\n  ",50],"}",["T_WHITESPACE","\n\n  ",51],["T_DOC_COMMENT","\/**\n   * Returns the image toolkit instance for this operation.\n   *\n   * Image toolkit implementers should provide a toolkit operation base class\n   * that overrides this method to correctly document the return type of this\n   * getter. This provides better DX (code checking and code completion) for\n   * image toolkit operation developers.\n   *\n   * @return \\Drupal\\Core\\ImageToolkit\\ImageToolkitInterface\n   *\/",53],["T_WHITESPACE","\n  ",62],["T_PROTECTED","protected",63],["T_WHITESPACE"," ",63],["T_FUNCTION","function",63],["T_WHITESPACE"," ",63],["T_STRING","getToolkit",63],"(",")",["T_WHITESPACE"," ",63],"{",["T_WHITESPACE","\n    ",63],["T_RETURN","return",64],["T_WHITESPACE"," ",64],["T_VARIABLE","$this",64],["T_OBJECT_OPERATOR","->",64],["T_STRING","toolkit",64],";",["T_WHITESPACE","\n  ",64],"}",["T_WHITESPACE","\n\n  ",65],["T_DOC_COMMENT","\/**\n   * Returns the definition of the operation arguments.\n   *\n   * Image toolkit operation implementers must implement this method to\n   * \"document\" their operation, thus also if no arguments are expected.\n   *\n   * @return array\n   *   An array whose keys are the names of the arguments (e.g. \"width\",\n   *   \"degrees\") and each value is an associative array having the following\n   *   keys:\n   *   - description: A string with the argument description. This is used only\n   *     internally for documentation purposes, so it does not need to be\n   *     translatable.\n   *   - required: (optional) A boolean indicating if this argument should be\n   *     provided or not. Defaults to TRUE.\n   *   - default: (optional) When the argument is set to \"required\" = FALSE,\n   *     this must be set to a default value. Ignored for \"required\" = TRUE\n   *     arguments.\n   *\/",67],["T_WHITESPACE","\n  ",85],["T_ABSTRACT","abstract",86],["T_WHITESPACE"," ",86],["T_PROTECTED","protected",86],["T_WHITESPACE"," ",86],["T_FUNCTION","function",86],["T_WHITESPACE"," ",86],["T_STRING","arguments",86],"(",")",";",["T_WHITESPACE","\n\n  ",86],["T_DOC_COMMENT","\/**\n   * Checks if required arguments are passed in and adds defaults for non passed\n   * in optional arguments.\n   *\n   * Image toolkit operation implementers should not normally need to override\n   * this method as they should place their own validation in validateArguments.\n   *\n   * @param array $arguments\n   *   An associative array of arguments to be used by the toolkit operation.\n   *\n   * @return array\n   *   The prepared arguments array.\n   *\n   * @throws \\InvalidArgumentException.\n   * @throws \\Drupal\\Component\\Plugin\\Exception\\InvalidPluginDefinitionException.\n   *\/",88],["T_WHITESPACE","\n  ",103],["T_PROTECTED","protected",104],["T_WHITESPACE"," ",104],["T_FUNCTION","function",104],["T_WHITESPACE"," ",104],["T_STRING","prepareArguments",104],"(",["T_ARRAY","array",104],["T_WHITESPACE"," ",104],["T_VARIABLE","$arguments",104],")",["T_WHITESPACE"," ",104],"{",["T_WHITESPACE","\n    ",104],["T_FOREACH","foreach",105],["T_WHITESPACE"," ",105],"(",["T_VARIABLE","$this",105],["T_OBJECT_OPERATOR","->",105],["T_STRING","arguments",105],"(",")",["T_WHITESPACE"," ",105],["T_AS","as",105],["T_WHITESPACE"," ",105],["T_VARIABLE","$id",105],["T_WHITESPACE"," ",105],["T_DOUBLE_ARROW","=>",105],["T_WHITESPACE"," ",105],["T_VARIABLE","$argument",105],")",["T_WHITESPACE"," ",105],"{",["T_WHITESPACE","\n      ",105],["T_VARIABLE","$argument",106],["T_WHITESPACE"," ",106],["T_PLUS_EQUAL","+=",106],["T_WHITESPACE"," ",106],["T_ARRAY","array",106],"(",["T_CONSTANT_ENCAPSED_STRING","'required'",106],["T_WHITESPACE"," ",106],["T_DOUBLE_ARROW","=>",106],["T_WHITESPACE"," ",106],["T_STRING","TRUE",106],")",";",["T_WHITESPACE","\n      ",106],["T_COMMENT","\/\/ Check if the argument is required and, if so, has been provided.\n",107],["T_WHITESPACE","      ",108],["T_IF","if",108],["T_WHITESPACE"," ",108],"(",["T_VARIABLE","$argument",108],"[",["T_CONSTANT_ENCAPSED_STRING","'required'",108],"]",")",["T_WHITESPACE"," ",108],"{",["T_WHITESPACE","\n        ",108],["T_IF","if",109],["T_WHITESPACE"," ",109],"(","!",["T_STRING","array_key_exists",109],"(",["T_VARIABLE","$id",109],",",["T_WHITESPACE"," ",109],["T_VARIABLE","$arguments",109],")",")",["T_WHITESPACE"," ",109],"{",["T_WHITESPACE","\n          ",109],["T_COMMENT","\/\/ If the argument is required throw an exception.\n",110],["T_WHITESPACE","          ",111],["T_THROW","throw",111],["T_WHITESPACE"," ",111],["T_NEW","new",111],["T_WHITESPACE"," ",111],["T_NS_SEPARATOR","\\",111],["T_STRING","InvalidArgumentException",111],"(","\"",["T_ENCAPSED_AND_WHITESPACE","Argument '",111],["T_VARIABLE","$id",111],["T_ENCAPSED_AND_WHITESPACE","' expected by plugin '",111],["T_CURLY_OPEN","{",111],["T_VARIABLE","$this",111],["T_OBJECT_OPERATOR","->",111],["T_STRING","getPluginId",111],"(",")","}",["T_ENCAPSED_AND_WHITESPACE","' but not passed",111],"\"",")",";",["T_WHITESPACE","\n        ",111],"}",["T_WHITESPACE","\n      ",112],"}",["T_WHITESPACE","\n      ",113],["T_ELSE","else",114],["T_WHITESPACE"," ",114],"{",["T_WHITESPACE","\n        ",114],["T_COMMENT","\/\/ Optional arguments require a 'default' value.\n",115],["T_WHITESPACE","        ",116],["T_COMMENT","\/\/ We check this even if the argument is provided by the caller, as we\n",116],["T_WHITESPACE","        ",117],["T_COMMENT","\/\/ want to fail fast here, i.e. at development time.\n",117],["T_WHITESPACE","        ",118],["T_IF","if",118],["T_WHITESPACE"," ",118],"(","!",["T_STRING","array_key_exists",118],"(",["T_CONSTANT_ENCAPSED_STRING","'default'",118],",",["T_WHITESPACE"," ",118],["T_VARIABLE","$argument",118],")",")",["T_WHITESPACE"," ",118],"{",["T_WHITESPACE","\n          ",118],["T_COMMENT","\/\/ The plugin did not define a default, so throw a plugin exception,\n",119],["T_WHITESPACE","          ",120],["T_COMMENT","\/\/ not an invalid argument exception.\n",120],["T_WHITESPACE","          ",121],["T_THROW","throw",121],["T_WHITESPACE"," ",121],["T_NEW","new",121],["T_WHITESPACE"," ",121],["T_STRING","InvalidPluginDefinitionException",121],"(","\"",["T_ENCAPSED_AND_WHITESPACE","Default for argument '",121],["T_VARIABLE","$id",121],["T_ENCAPSED_AND_WHITESPACE","' expected by plugin '",121],["T_CURLY_OPEN","{",121],["T_VARIABLE","$this",121],["T_OBJECT_OPERATOR","->",121],["T_STRING","getPluginId",121],"(",")","}",["T_ENCAPSED_AND_WHITESPACE","' but not defined",121],"\"",")",";",["T_WHITESPACE","\n        ",121],"}",["T_WHITESPACE","\n\n        ",122],["T_COMMENT","\/\/ Use the default value if the argument is not passed in.\n",124],["T_WHITESPACE","        ",125],["T_IF","if",125],["T_WHITESPACE"," ",125],"(","!",["T_STRING","array_key_exists",125],"(",["T_VARIABLE","$id",125],",",["T_WHITESPACE"," ",125],["T_VARIABLE","$arguments",125],")",")",["T_WHITESPACE"," ",125],"{",["T_WHITESPACE","\n          ",125],["T_VARIABLE","$arguments",126],"[",["T_VARIABLE","$id",126],"]",["T_WHITESPACE"," ",126],"=",["T_WHITESPACE"," ",126],["T_VARIABLE","$argument",126],"[",["T_CONSTANT_ENCAPSED_STRING","'default'",126],"]",";",["T_WHITESPACE","\n        ",126],"}",["T_WHITESPACE","\n      ",127],"}",["T_WHITESPACE","\n    ",128],"}",["T_WHITESPACE","\n    ",129],["T_RETURN","return",130],["T_WHITESPACE"," ",130],["T_VARIABLE","$arguments",130],";",["T_WHITESPACE","\n  ",130],"}",["T_WHITESPACE","\n\n  ",131],["T_DOC_COMMENT","\/**\n   * Validates the arguments.\n   *\n   * Image toolkit operation implementers should place any argument validation\n   * in this method, throwing an InvalidArgumentException when an error is\n   * encountered.\n   *\n   * Validation typically includes things like:\n   * - Checking that width and height are not negative.\n   * - Checking that a color value is indeed a color.\n   *\n   * But validation may also include correcting the arguments, e.g:\n   * - Casting arguments to the correct type.\n   * - Rounding pixel values to an integer.\n   *\n   * This base implementation just returns the array of arguments and thus does\n   * not need to be called by overriding methods.\n   *\n   * @param array $arguments\n   *   An associative array of arguments to be used by the toolkit operation.\n   *\n   * @return array\n   *   The validated and corrected arguments array.\n   *\n   * @throws \\InvalidArgumentException\n   *   If one or more of the arguments are not valid.\n   * @throws \\Drupal\\Component\\Plugin\\Exception\\InvalidPluginDefinitionException\n   *   If the plugin does not define a default for an optional argument.\n   *\/",133],["T_WHITESPACE","\n  ",161],["T_PROTECTED","protected",162],["T_WHITESPACE"," ",162],["T_FUNCTION","function",162],["T_WHITESPACE"," ",162],["T_STRING","validateArguments",162],"(",["T_ARRAY","array",162],["T_WHITESPACE"," ",162],["T_VARIABLE","$arguments",162],")",["T_WHITESPACE"," ",162],"{",["T_WHITESPACE","\n    ",162],["T_RETURN","return",163],["T_WHITESPACE"," ",163],["T_VARIABLE","$arguments",163],";",["T_WHITESPACE","\n  ",163],"}",["T_WHITESPACE","\n\n  ",164],["T_DOC_COMMENT","\/**\n   * {@inheritdoc}\n   *\/",166],["T_WHITESPACE","\n  ",168],["T_PUBLIC","public",169],["T_WHITESPACE"," ",169],["T_FINAL","final",169],["T_WHITESPACE"," ",169],["T_FUNCTION","function",169],["T_WHITESPACE"," ",169],["T_STRING","apply",169],"(",["T_ARRAY","array",169],["T_WHITESPACE"," ",169],["T_VARIABLE","$arguments",169],")",["T_WHITESPACE"," ",169],"{",["T_WHITESPACE","\n    ",169],["T_VARIABLE","$arguments",170],["T_WHITESPACE"," ",170],"=",["T_WHITESPACE"," ",170],["T_VARIABLE","$this",170],["T_OBJECT_OPERATOR","->",170],["T_STRING","prepareArguments",170],"(",["T_VARIABLE","$arguments",170],")",";",["T_WHITESPACE","\n    ",170],["T_VARIABLE","$arguments",171],["T_WHITESPACE"," ",171],"=",["T_WHITESPACE"," ",171],["T_VARIABLE","$this",171],["T_OBJECT_OPERATOR","->",171],["T_STRING","validateArguments",171],"(",["T_VARIABLE","$arguments",171],")",";",["T_WHITESPACE","\n    ",171],["T_RETURN","return",172],["T_WHITESPACE"," ",172],["T_VARIABLE","$this",172],["T_OBJECT_OPERATOR","->",172],["T_STRING","execute",172],"(",["T_VARIABLE","$arguments",172],")",";",["T_WHITESPACE","\n  ",172],"}",["T_WHITESPACE","\n\n  ",173],["T_DOC_COMMENT","\/**\n   * Performs the actual manipulation on the image.\n   *\n   * Image toolkit operation implementers must implement this method. This\n   * method is responsible for actually performing the operation on the image.\n   * When this method gets called, the implementer may assume all arguments,\n   * also the optional ones, to be available, validated and corrected.\n   *\n   * @param array $arguments\n   *   An associative array of arguments to be used by the toolkit operation.\n   *\n   * @return bool\n   *   TRUE if the operation was performed successfully, FALSE otherwise.\n   *\/",175],["T_WHITESPACE","\n  ",188],["T_ABSTRACT","abstract",189],["T_WHITESPACE"," ",189],["T_PROTECTED","protected",189],["T_WHITESPACE"," ",189],["T_FUNCTION","function",189],["T_WHITESPACE"," ",189],["T_STRING","execute",189],"(",["T_ARRAY","array",189],["T_WHITESPACE"," ",189],["T_VARIABLE","$arguments",189],")",";",["T_WHITESPACE","\n\n",189],"}",["T_WHITESPACE","\n",191]]