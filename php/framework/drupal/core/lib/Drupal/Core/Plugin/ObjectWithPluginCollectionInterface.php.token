[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Core",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Plugin",3],";",["T_WHITESPACE","\n\n",3],["T_DOC_COMMENT","\/**\n * Provides an interface for an object using a plugin collection.\n *\n * @see \\Drupal\\Component\\Plugin\\LazyPluginCollection\n *\n * @ingroup plugin_api\n *\n * Entities that need this interface should implement\n * \\Drupal\\Core\\Entity\\EntityWithPluginCollectionInterface, which extends this.\n *\/",5],["T_WHITESPACE","\n",14],["T_INTERFACE","interface",15],["T_WHITESPACE"," ",15],["T_STRING","ObjectWithPluginCollectionInterface",15],["T_WHITESPACE"," ",15],"{",["T_WHITESPACE","\n\n  ",15],["T_DOC_COMMENT","\/**\n   * Gets the plugin collections used by this entity.\n   *\n   * @return \\Drupal\\Component\\Plugin\\LazyPluginCollection[]\n   *   An array of plugin collections, keyed by the property name they use to\n   *   store their configuration.\n   *\/",17],["T_WHITESPACE","\n  ",23],["T_PUBLIC","public",24],["T_WHITESPACE"," ",24],["T_FUNCTION","function",24],["T_WHITESPACE"," ",24],["T_STRING","getPluginCollections",24],"(",")",";",["T_WHITESPACE","\n\n",24],"}",["T_WHITESPACE","\n",26]]