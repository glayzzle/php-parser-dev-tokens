[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Core",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Plugin",3],";",["T_WHITESPACE","\n\n",3],["T_USE","use",5],["T_WHITESPACE"," ",5],["T_STRING","Symfony",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Component",5],["T_NS_SEPARATOR","\\",5],["T_STRING","DependencyInjection",5],["T_NS_SEPARATOR","\\",5],["T_STRING","ContainerInterface",5],";",["T_WHITESPACE","\n\n",5],["T_DOC_COMMENT","\/**\n * Defines an interface for pulling plugin dependencies from the container.\n *\/",7],["T_WHITESPACE","\n",9],["T_INTERFACE","interface",10],["T_WHITESPACE"," ",10],["T_STRING","ContainerFactoryPluginInterface",10],["T_WHITESPACE"," ",10],"{",["T_WHITESPACE","\n\n  ",10],["T_DOC_COMMENT","\/**\n   * Creates an instance of the plugin.\n   *\n   * @param \\Symfony\\Component\\DependencyInjection\\ContainerInterface $container\n   *   The container to pull out services used in the plugin.\n   * @param array $configuration\n   *   A configuration array containing information about the plugin instance.\n   * @param string $plugin_id\n   *   The plugin ID for the plugin instance.\n   * @param mixed $plugin_definition\n   *   The plugin implementation definition.\n   *\n   * @return static\n   *   Returns an instance of this plugin.\n   *\/",12],["T_WHITESPACE","\n  ",26],["T_PUBLIC","public",27],["T_WHITESPACE"," ",27],["T_STATIC","static",27],["T_WHITESPACE"," ",27],["T_FUNCTION","function",27],["T_WHITESPACE"," ",27],["T_STRING","create",27],"(",["T_STRING","ContainerInterface",27],["T_WHITESPACE"," ",27],["T_VARIABLE","$container",27],",",["T_WHITESPACE"," ",27],["T_ARRAY","array",27],["T_WHITESPACE"," ",27],["T_VARIABLE","$configuration",27],",",["T_WHITESPACE"," ",27],["T_VARIABLE","$plugin_id",27],",",["T_WHITESPACE"," ",27],["T_VARIABLE","$plugin_definition",27],")",";",["T_WHITESPACE","\n\n",27],"}",["T_WHITESPACE","\n",29]]