[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Core",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Plugin",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Context",3],";",["T_WHITESPACE","\n\n",3],["T_USE","use",5],["T_WHITESPACE"," ",5],["T_STRING","Drupal",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Core",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Plugin",5],["T_NS_SEPARATOR","\\",5],["T_STRING","ContextAwarePluginInterface",5],";",["T_WHITESPACE","\n\n",5],["T_DOC_COMMENT","\/**\n * Provides an interface for handling sets of contexts.\n *\/",7],["T_WHITESPACE","\n",9],["T_INTERFACE","interface",10],["T_WHITESPACE"," ",10],["T_STRING","ContextHandlerInterface",10],["T_WHITESPACE"," ",10],"{",["T_WHITESPACE","\n\n  ",10],["T_DOC_COMMENT","\/**\n   * Determines plugins whose constraints are satisfied by a set of contexts.\n   *\n   * @todo Use context definition objects after\n   *   https:\/\/www.drupal.org\/node\/2281635.\n   *\n   * @param \\Drupal\\Component\\Plugin\\Context\\ContextInterface[] $contexts\n   *   An array of contexts.\n   * @param array $definitions\n   *   An array of plugin definitions.\n   *\n   * @return array\n   *   An array of plugin definitions.\n   *\/",12],["T_WHITESPACE","\n  ",25],["T_PUBLIC","public",26],["T_WHITESPACE"," ",26],["T_FUNCTION","function",26],["T_WHITESPACE"," ",26],["T_STRING","filterPluginDefinitionsByContexts",26],"(",["T_ARRAY","array",26],["T_WHITESPACE"," ",26],["T_VARIABLE","$contexts",26],",",["T_WHITESPACE"," ",26],["T_ARRAY","array",26],["T_WHITESPACE"," ",26],["T_VARIABLE","$definitions",26],")",";",["T_WHITESPACE","\n\n  ",26],["T_DOC_COMMENT","\/**\n   * Checks a set of requirements against a set of contexts.\n   *\n   * @todo Use context definition objects after\n   *   https:\/\/www.drupal.org\/node\/2281635.\n   *\n   * @param \\Drupal\\Component\\Plugin\\Context\\ContextInterface[] $contexts\n   *   An array of available contexts.\n   * @param \\Drupal\\Core\\TypedData\\DataDefinitionInterface[] $requirements\n   *   An array of requirements.\n   *\n   * @return bool\n   *   TRUE if all of the requirements are satisfied by the context, FALSE\n   *   otherwise.\n   *\/",28],["T_WHITESPACE","\n  ",42],["T_PUBLIC","public",43],["T_WHITESPACE"," ",43],["T_FUNCTION","function",43],["T_WHITESPACE"," ",43],["T_STRING","checkRequirements",43],"(",["T_ARRAY","array",43],["T_WHITESPACE"," ",43],["T_VARIABLE","$contexts",43],",",["T_WHITESPACE"," ",43],["T_ARRAY","array",43],["T_WHITESPACE"," ",43],["T_VARIABLE","$requirements",43],")",";",["T_WHITESPACE","\n\n  ",43],["T_DOC_COMMENT","\/**\n   * Determines which contexts satisfy the constraints of a given definition.\n   *\n   * @todo Use context definition objects after\n   *   https:\/\/www.drupal.org\/node\/2281635.\n   *\n   * @param \\Drupal\\Component\\Plugin\\Context\\ContextInterface[] $contexts\n   *   An array of contexts.\n   * @param \\Drupal\\Core\\Plugin\\Context\\ContextDefinitionInterface $definition\n   *   The definition to satisfy.\n   *\n   * @return \\Drupal\\Component\\Plugin\\Context\\ContextInterface[]\n   *   An array of matching contexts.\n   *\/",45],["T_WHITESPACE","\n  ",58],["T_PUBLIC","public",59],["T_WHITESPACE"," ",59],["T_FUNCTION","function",59],["T_WHITESPACE"," ",59],["T_STRING","getMatchingContexts",59],"(",["T_ARRAY","array",59],["T_WHITESPACE"," ",59],["T_VARIABLE","$contexts",59],",",["T_WHITESPACE"," ",59],["T_STRING","ContextDefinitionInterface",59],["T_WHITESPACE"," ",59],["T_VARIABLE","$definition",59],")",";",["T_WHITESPACE","\n\n  ",59],["T_DOC_COMMENT","\/**\n   * Prepares a plugin for evaluation.\n   *\n   * @param \\Drupal\\Core\\Plugin\\ContextAwarePluginInterface $plugin\n   *   A plugin about to be evaluated.\n   * @param \\Drupal\\Core\\Plugin\\Context\\ContextInterface[] $contexts\n   *   An array of contexts to set on the plugin. They will only be set if they\n   *   match the plugin's context definitions.\n   * @param array $mappings\n   *   (optional) A mapping of the expected assignment names to their context\n   *   names. For example, if one of the $contexts is named 'current_user', but the\n   *   plugin expects a context named 'user', then this map would contain\n   *   'user' => 'current_user'.\n   *\n   * @throws \\Drupal\\Component\\Plugin\\Exception\\ContextException\n   *   Thrown when a context assignment was not satisfied.\n   *\/",61],["T_WHITESPACE","\n  ",77],["T_PUBLIC","public",78],["T_WHITESPACE"," ",78],["T_FUNCTION","function",78],["T_WHITESPACE"," ",78],["T_STRING","applyContextMapping",78],"(",["T_STRING","ContextAwarePluginInterface",78],["T_WHITESPACE"," ",78],["T_VARIABLE","$plugin",78],",",["T_WHITESPACE"," ",78],["T_VARIABLE","$contexts",78],",",["T_WHITESPACE"," ",78],["T_VARIABLE","$mappings",78],["T_WHITESPACE"," ",78],"=",["T_WHITESPACE"," ",78],["T_ARRAY","array",78],"(",")",")",";",["T_WHITESPACE","\n\n",78],"}",["T_WHITESPACE","\n",80]]