[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Core",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Cache",3],";",["T_WHITESPACE","\n\n",3],["T_USE","use",5],["T_WHITESPACE"," ",5],["T_STRING","Symfony",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Component",5],["T_NS_SEPARATOR","\\",5],["T_STRING","DependencyInjection",5],["T_NS_SEPARATOR","\\",5],["T_STRING","ContainerAwareTrait",5],";",["T_WHITESPACE","\n\n",5],["T_DOC_COMMENT","\/**\n * Passes cache tag events to classes that wish to respond to them.\n *\/",7],["T_WHITESPACE","\n",9],["T_CLASS","class",10],["T_WHITESPACE"," ",10],["T_STRING","CacheTagsInvalidator",10],["T_WHITESPACE"," ",10],["T_IMPLEMENTS","implements",10],["T_WHITESPACE"," ",10],["T_STRING","CacheTagsInvalidatorInterface",10],["T_WHITESPACE"," ",10],"{",["T_WHITESPACE","\n\n  ",10],["T_USE","use",12],["T_WHITESPACE"," ",12],["T_STRING","ContainerAwareTrait",12],";",["T_WHITESPACE","\n\n  ",12],["T_DOC_COMMENT","\/**\n   * Holds an array of cache tags invalidators.\n   *\n   * @var \\Drupal\\Core\\Cache\\CacheTagsInvalidatorInterface[]\n   *\/",14],["T_WHITESPACE","\n  ",18],["T_PROTECTED","protected",19],["T_WHITESPACE"," ",19],["T_VARIABLE","$invalidators",19],["T_WHITESPACE"," ",19],"=",["T_WHITESPACE"," ",19],["T_ARRAY","array",19],"(",")",";",["T_WHITESPACE","\n\n  ",19],["T_DOC_COMMENT","\/**\n   * {@inheritdoc}\n   *\/",21],["T_WHITESPACE","\n  ",23],["T_PUBLIC","public",24],["T_WHITESPACE"," ",24],["T_FUNCTION","function",24],["T_WHITESPACE"," ",24],["T_STRING","invalidateTags",24],"(",["T_ARRAY","array",24],["T_WHITESPACE"," ",24],["T_VARIABLE","$tags",24],")",["T_WHITESPACE"," ",24],"{",["T_WHITESPACE","\n    ",24],["T_STRING","assert",25],"(",["T_CONSTANT_ENCAPSED_STRING","'Drupal\\Component\\Assertion\\Inspector::assertAllStrings($tags)'",25],",",["T_WHITESPACE"," ",25],["T_CONSTANT_ENCAPSED_STRING","'Cache tags must be strings.'",25],")",";",["T_WHITESPACE","\n\n    ",25],["T_COMMENT","\/\/ Notify all added cache tags invalidators.\n",27],["T_WHITESPACE","    ",28],["T_FOREACH","foreach",28],["T_WHITESPACE"," ",28],"(",["T_VARIABLE","$this",28],["T_OBJECT_OPERATOR","->",28],["T_STRING","invalidators",28],["T_WHITESPACE"," ",28],["T_AS","as",28],["T_WHITESPACE"," ",28],["T_VARIABLE","$invalidator",28],")",["T_WHITESPACE"," ",28],"{",["T_WHITESPACE","\n      ",28],["T_VARIABLE","$invalidator",29],["T_OBJECT_OPERATOR","->",29],["T_STRING","invalidateTags",29],"(",["T_VARIABLE","$tags",29],")",";",["T_WHITESPACE","\n    ",29],"}",["T_WHITESPACE","\n\n    ",30],["T_COMMENT","\/\/ Additionally, notify each cache bin if it implements the service.\n",32],["T_WHITESPACE","    ",33],["T_FOREACH","foreach",33],["T_WHITESPACE"," ",33],"(",["T_VARIABLE","$this",33],["T_OBJECT_OPERATOR","->",33],["T_STRING","getInvalidatorCacheBins",33],"(",")",["T_WHITESPACE"," ",33],["T_AS","as",33],["T_WHITESPACE"," ",33],["T_VARIABLE","$bin",33],")",["T_WHITESPACE"," ",33],"{",["T_WHITESPACE","\n      ",33],["T_VARIABLE","$bin",34],["T_OBJECT_OPERATOR","->",34],["T_STRING","invalidateTags",34],"(",["T_VARIABLE","$tags",34],")",";",["T_WHITESPACE","\n    ",34],"}",["T_WHITESPACE","\n  ",35],"}",["T_WHITESPACE","\n\n  ",36],["T_DOC_COMMENT","\/**\n   * Reset statically cached tags in all cache tag checksum services.\n   *\n   * This is only used by tests.\n   *\/",38],["T_WHITESPACE","\n  ",42],["T_PUBLIC","public",43],["T_WHITESPACE"," ",43],["T_FUNCTION","function",43],["T_WHITESPACE"," ",43],["T_STRING","resetChecksums",43],"(",")",["T_WHITESPACE"," ",43],"{",["T_WHITESPACE","\n    ",43],["T_FOREACH","foreach",44],["T_WHITESPACE"," ",44],"(",["T_VARIABLE","$this",44],["T_OBJECT_OPERATOR","->",44],["T_STRING","invalidators",44],["T_WHITESPACE"," ",44],["T_AS","as",44],["T_WHITESPACE"," ",44],["T_VARIABLE","$invalidator",44],")",["T_WHITESPACE"," ",44],"{",["T_WHITESPACE","\n      ",44],["T_IF","if",45],["T_WHITESPACE"," ",45],"(",["T_VARIABLE","$invalidator",45],["T_WHITESPACE"," ",45],["T_INSTANCEOF","instanceof",45],["T_WHITESPACE"," ",45],["T_STRING","CacheTagsChecksumInterface",45],")",["T_WHITESPACE"," ",45],"{",["T_WHITESPACE","\n        ",45],["T_VARIABLE","$invalidator",46],["T_OBJECT_OPERATOR","->",46],["T_STRING","reset",46],"(",")",";",["T_WHITESPACE","\n      ",46],"}",["T_WHITESPACE","\n    ",47],"}",["T_WHITESPACE","\n  ",48],"}",["T_WHITESPACE","\n\n  ",49],["T_DOC_COMMENT","\/**\n   * Adds a cache tags invalidator.\n   *\n   * @param \\Drupal\\Core\\Cache\\CacheTagsInvalidatorInterface $invalidator\n   *   A cache invalidator.\n   *\/",51],["T_WHITESPACE","\n  ",56],["T_PUBLIC","public",57],["T_WHITESPACE"," ",57],["T_FUNCTION","function",57],["T_WHITESPACE"," ",57],["T_STRING","addInvalidator",57],"(",["T_STRING","CacheTagsInvalidatorInterface",57],["T_WHITESPACE"," ",57],["T_VARIABLE","$invalidator",57],")",["T_WHITESPACE"," ",57],"{",["T_WHITESPACE","\n    ",57],["T_VARIABLE","$this",58],["T_OBJECT_OPERATOR","->",58],["T_STRING","invalidators",58],"[","]",["T_WHITESPACE"," ",58],"=",["T_WHITESPACE"," ",58],["T_VARIABLE","$invalidator",58],";",["T_WHITESPACE","\n  ",58],"}",["T_WHITESPACE","\n\n  ",59],["T_DOC_COMMENT","\/**\n   * Returns all cache bins that need to be notified about invalidations.\n   *\n   * @return \\Drupal\\Core\\Cache\\CacheTagsInvalidatorInterface[]\n   *   An array of cache backend objects that implement the invalidator\n   *   interface, keyed by their cache bin.\n   *\/",61],["T_WHITESPACE","\n  ",67],["T_PROTECTED","protected",68],["T_WHITESPACE"," ",68],["T_FUNCTION","function",68],["T_WHITESPACE"," ",68],["T_STRING","getInvalidatorCacheBins",68],"(",")",["T_WHITESPACE"," ",68],"{",["T_WHITESPACE","\n    ",68],["T_VARIABLE","$bins",69],["T_WHITESPACE"," ",69],"=",["T_WHITESPACE"," ",69],["T_ARRAY","array",69],"(",")",";",["T_WHITESPACE","\n    ",69],["T_FOREACH","foreach",70],["T_WHITESPACE"," ",70],"(",["T_VARIABLE","$this",70],["T_OBJECT_OPERATOR","->",70],["T_STRING","container",70],["T_OBJECT_OPERATOR","->",70],["T_STRING","getParameter",70],"(",["T_CONSTANT_ENCAPSED_STRING","'cache_bins'",70],")",["T_WHITESPACE"," ",70],["T_AS","as",70],["T_WHITESPACE"," ",70],["T_VARIABLE","$service_id",70],["T_WHITESPACE"," ",70],["T_DOUBLE_ARROW","=>",70],["T_WHITESPACE"," ",70],["T_VARIABLE","$bin",70],")",["T_WHITESPACE"," ",70],"{",["T_WHITESPACE","\n      ",70],["T_VARIABLE","$service",71],["T_WHITESPACE"," ",71],"=",["T_WHITESPACE"," ",71],["T_VARIABLE","$this",71],["T_OBJECT_OPERATOR","->",71],["T_STRING","container",71],["T_OBJECT_OPERATOR","->",71],["T_STRING","get",71],"(",["T_VARIABLE","$service_id",71],")",";",["T_WHITESPACE","\n      ",71],["T_IF","if",72],["T_WHITESPACE"," ",72],"(",["T_VARIABLE","$service",72],["T_WHITESPACE"," ",72],["T_INSTANCEOF","instanceof",72],["T_WHITESPACE"," ",72],["T_STRING","CacheTagsInvalidatorInterface",72],")",["T_WHITESPACE"," ",72],"{",["T_WHITESPACE","\n        ",72],["T_VARIABLE","$bins",73],"[",["T_VARIABLE","$bin",73],"]",["T_WHITESPACE"," ",73],"=",["T_WHITESPACE"," ",73],["T_VARIABLE","$service",73],";",["T_WHITESPACE","\n      ",73],"}",["T_WHITESPACE","\n    ",74],"}",["T_WHITESPACE","\n    ",75],["T_RETURN","return",76],["T_WHITESPACE"," ",76],["T_VARIABLE","$bins",76],";",["T_WHITESPACE","\n  ",76],"}",["T_WHITESPACE","\n\n",77],"}",["T_WHITESPACE","\n",79]]