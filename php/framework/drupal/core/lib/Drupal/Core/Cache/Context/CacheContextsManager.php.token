[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Core",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Cache",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Context",3],";",["T_WHITESPACE","\n\n",3],["T_USE","use",5],["T_WHITESPACE"," ",5],["T_STRING","Drupal",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Core",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Cache",5],["T_NS_SEPARATOR","\\",5],["T_STRING","CacheableMetadata",5],";",["T_WHITESPACE","\n",5],["T_USE","use",6],["T_WHITESPACE"," ",6],["T_STRING","Symfony",6],["T_NS_SEPARATOR","\\",6],["T_STRING","Component",6],["T_NS_SEPARATOR","\\",6],["T_STRING","DependencyInjection",6],["T_NS_SEPARATOR","\\",6],["T_STRING","ContainerInterface",6],";",["T_WHITESPACE","\n\n",6],["T_DOC_COMMENT","\/**\n * Converts cache context tokens into cache keys.\n *\n * Uses cache context services (services tagged with 'cache.context', and whose\n * service ID has the 'cache_context.' prefix) to dynamically generate cache\n * keys based on the request context, thus allowing developers to express the\n * state by which should varied (the current URL, language, and so on).\n *\n * Note that this maps exactly to HTTP's Vary header semantics:\n * @link http:\/\/www.w3.org\/Protocols\/rfc2616\/rfc2616-sec14.html#sec14.44\n *\n * @see \\Drupal\\Core\\Cache\\Context\\CacheContextInterface\n * @see \\Drupal\\Core\\Cache\\Context\\CalculatedCacheContextInterface\n * @see \\Drupal\\Core\\Cache\\Context\\CacheContextsPass\n *\/",8],["T_WHITESPACE","\n",22],["T_CLASS","class",23],["T_WHITESPACE"," ",23],["T_STRING","CacheContextsManager",23],["T_WHITESPACE"," ",23],"{",["T_WHITESPACE","\n\n  ",23],["T_DOC_COMMENT","\/**\n   * The service container.\n   *\n   * @var \\Symfony\\Component\\DependencyInjection\\ContainerInterface\n   *\/",25],["T_WHITESPACE","\n  ",29],["T_PROTECTED","protected",30],["T_WHITESPACE"," ",30],["T_VARIABLE","$container",30],";",["T_WHITESPACE","\n\n  ",30],["T_DOC_COMMENT","\/**\n   * Available cache context IDs and corresponding labels.\n   *\n   * @var string[]\n   *\/",32],["T_WHITESPACE","\n  ",36],["T_PROTECTED","protected",37],["T_WHITESPACE"," ",37],["T_VARIABLE","$contexts",37],";",["T_WHITESPACE","\n\n  ",37],["T_DOC_COMMENT","\/**\n   * Constructs a CacheContextsManager object.\n   *\n   * @param \\Symfony\\Component\\DependencyInjection\\ContainerInterface $container\n   *   The current service container.\n   * @param string[] $contexts\n   *   An array of the available cache context IDs.\n   *\/",39],["T_WHITESPACE","\n  ",46],["T_PUBLIC","public",47],["T_WHITESPACE"," ",47],["T_FUNCTION","function",47],["T_WHITESPACE"," ",47],["T_STRING","__construct",47],"(",["T_STRING","ContainerInterface",47],["T_WHITESPACE"," ",47],["T_VARIABLE","$container",47],",",["T_WHITESPACE"," ",47],["T_ARRAY","array",47],["T_WHITESPACE"," ",47],["T_VARIABLE","$contexts",47],")",["T_WHITESPACE"," ",47],"{",["T_WHITESPACE","\n    ",47],["T_VARIABLE","$this",48],["T_OBJECT_OPERATOR","->",48],["T_STRING","container",48],["T_WHITESPACE"," ",48],"=",["T_WHITESPACE"," ",48],["T_VARIABLE","$container",48],";",["T_WHITESPACE","\n    ",48],["T_VARIABLE","$this",49],["T_OBJECT_OPERATOR","->",49],["T_STRING","contexts",49],["T_WHITESPACE"," ",49],"=",["T_WHITESPACE"," ",49],["T_VARIABLE","$contexts",49],";",["T_WHITESPACE","\n  ",49],"}",["T_WHITESPACE","\n\n  ",50],["T_DOC_COMMENT","\/**\n   * Provides an array of available cache contexts.\n   *\n   * @return string[]\n   *   An array of available cache context IDs.\n   *\/",52],["T_WHITESPACE","\n  ",57],["T_PUBLIC","public",58],["T_WHITESPACE"," ",58],["T_FUNCTION","function",58],["T_WHITESPACE"," ",58],["T_STRING","getAll",58],"(",")",["T_WHITESPACE"," ",58],"{",["T_WHITESPACE","\n    ",58],["T_RETURN","return",59],["T_WHITESPACE"," ",59],["T_VARIABLE","$this",59],["T_OBJECT_OPERATOR","->",59],["T_STRING","contexts",59],";",["T_WHITESPACE","\n  ",59],"}",["T_WHITESPACE","\n\n  ",60],["T_DOC_COMMENT","\/**\n   * Provides an array of available cache context labels.\n   *\n   * To be used in cache configuration forms.\n   *\n   * @param bool $include_calculated_cache_contexts\n   *   Whether to also return calculated cache contexts. Default to FALSE.\n   *\n   * @return array\n   *   An array of available cache contexts and corresponding labels.\n   *\/",62],["T_WHITESPACE","\n  ",72],["T_PUBLIC","public",73],["T_WHITESPACE"," ",73],["T_FUNCTION","function",73],["T_WHITESPACE"," ",73],["T_STRING","getLabels",73],"(",["T_VARIABLE","$include_calculated_cache_contexts",73],["T_WHITESPACE"," ",73],"=",["T_WHITESPACE"," ",73],["T_STRING","FALSE",73],")",["T_WHITESPACE"," ",73],"{",["T_WHITESPACE","\n    ",73],["T_VARIABLE","$with_labels",74],["T_WHITESPACE"," ",74],"=",["T_WHITESPACE"," ",74],["T_ARRAY","array",74],"(",")",";",["T_WHITESPACE","\n    ",74],["T_FOREACH","foreach",75],["T_WHITESPACE"," ",75],"(",["T_VARIABLE","$this",75],["T_OBJECT_OPERATOR","->",75],["T_STRING","contexts",75],["T_WHITESPACE"," ",75],["T_AS","as",75],["T_WHITESPACE"," ",75],["T_VARIABLE","$context",75],")",["T_WHITESPACE"," ",75],"{",["T_WHITESPACE","\n      ",75],["T_VARIABLE","$service",76],["T_WHITESPACE"," ",76],"=",["T_WHITESPACE"," ",76],["T_VARIABLE","$this",76],["T_OBJECT_OPERATOR","->",76],["T_STRING","getService",76],"(",["T_VARIABLE","$context",76],")",";",["T_WHITESPACE","\n      ",76],["T_IF","if",77],["T_WHITESPACE"," ",77],"(","!",["T_VARIABLE","$include_calculated_cache_contexts",77],["T_WHITESPACE"," ",77],["T_BOOLEAN_AND","&&",77],["T_WHITESPACE"," ",77],["T_VARIABLE","$service",77],["T_WHITESPACE"," ",77],["T_INSTANCEOF","instanceof",77],["T_WHITESPACE"," ",77],["T_STRING","CalculatedCacheContextInterface",77],")",["T_WHITESPACE"," ",77],"{",["T_WHITESPACE","\n        ",77],["T_CONTINUE","continue",78],";",["T_WHITESPACE","\n      ",78],"}",["T_WHITESPACE","\n      ",79],["T_VARIABLE","$with_labels",80],"[",["T_VARIABLE","$context",80],"]",["T_WHITESPACE"," ",80],"=",["T_WHITESPACE"," ",80],["T_VARIABLE","$service",80],["T_OBJECT_OPERATOR","->",80],["T_STRING","getLabel",80],"(",")",";",["T_WHITESPACE","\n    ",80],"}",["T_WHITESPACE","\n    ",81],["T_RETURN","return",82],["T_WHITESPACE"," ",82],["T_VARIABLE","$with_labels",82],";",["T_WHITESPACE","\n  ",82],"}",["T_WHITESPACE","\n\n  ",83],["T_DOC_COMMENT","\/**\n   * Converts cache context tokens to cache keys.\n   *\n   * A cache context token is either:\n   * - a cache context ID (if the service ID is 'cache_context.foo', then 'foo'\n   *   is a cache context ID); for example, 'foo'.\n   * - a calculated cache context ID, followed by a colon, followed by\n   *   the parameter for the calculated cache context; for example,\n   *   'bar:some_parameter'.\n   *\n   * @param string[] $context_tokens\n   *   An array of cache context tokens.\n   *\n   * @return \\Drupal\\Core\\Cache\\Context\\ContextCacheKeys\n   *   The ContextCacheKeys object containing the converted cache keys and\n   *   cacheability metadata.\n   *\/",85],["T_WHITESPACE","\n  ",101],["T_PUBLIC","public",102],["T_WHITESPACE"," ",102],["T_FUNCTION","function",102],["T_WHITESPACE"," ",102],["T_STRING","convertTokensToKeys",102],"(",["T_ARRAY","array",102],["T_WHITESPACE"," ",102],["T_VARIABLE","$context_tokens",102],")",["T_WHITESPACE"," ",102],"{",["T_WHITESPACE","\n    ",102],["T_STRING","assert",103],"(",["T_CONSTANT_ENCAPSED_STRING","'$this->assertValidTokens($context_tokens)'",103],")",";",["T_WHITESPACE","\n    ",103],["T_VARIABLE","$cacheable_metadata",104],["T_WHITESPACE"," ",104],"=",["T_WHITESPACE"," ",104],["T_NEW","new",104],["T_WHITESPACE"," ",104],["T_STRING","CacheableMetadata",104],"(",")",";",["T_WHITESPACE","\n    ",104],["T_VARIABLE","$optimized_tokens",105],["T_WHITESPACE"," ",105],"=",["T_WHITESPACE"," ",105],["T_VARIABLE","$this",105],["T_OBJECT_OPERATOR","->",105],["T_STRING","optimizeTokens",105],"(",["T_VARIABLE","$context_tokens",105],")",";",["T_WHITESPACE","\n    ",105],["T_COMMENT","\/\/ Iterate over cache contexts that have been optimized away and get their\n",106],["T_WHITESPACE","    ",107],["T_COMMENT","\/\/ cacheability metadata.\n",107],["T_WHITESPACE","    ",108],["T_FOREACH","foreach",108],["T_WHITESPACE"," ",108],"(",["T_STATIC","static",108],["T_DOUBLE_COLON","::",108],["T_STRING","parseTokens",108],"(",["T_STRING","array_diff",108],"(",["T_VARIABLE","$context_tokens",108],",",["T_WHITESPACE"," ",108],["T_VARIABLE","$optimized_tokens",108],")",")",["T_WHITESPACE"," ",108],["T_AS","as",108],["T_WHITESPACE"," ",108],["T_VARIABLE","$context_token",108],")",["T_WHITESPACE"," ",108],"{",["T_WHITESPACE","\n      ",108],["T_LIST","list",109],"(",["T_VARIABLE","$context_id",109],",",["T_WHITESPACE"," ",109],["T_VARIABLE","$parameter",109],")",["T_WHITESPACE"," ",109],"=",["T_WHITESPACE"," ",109],["T_VARIABLE","$context_token",109],";",["T_WHITESPACE","\n      ",109],["T_VARIABLE","$context",110],["T_WHITESPACE"," ",110],"=",["T_WHITESPACE"," ",110],["T_VARIABLE","$this",110],["T_OBJECT_OPERATOR","->",110],["T_STRING","getService",110],"(",["T_VARIABLE","$context_id",110],")",";",["T_WHITESPACE","\n      ",110],["T_VARIABLE","$cacheable_metadata",111],["T_WHITESPACE"," ",111],"=",["T_WHITESPACE"," ",111],["T_VARIABLE","$cacheable_metadata",111],["T_OBJECT_OPERATOR","->",111],["T_STRING","merge",111],"(",["T_VARIABLE","$context",111],["T_OBJECT_OPERATOR","->",111],["T_STRING","getCacheableMetadata",111],"(",["T_VARIABLE","$parameter",111],")",")",";",["T_WHITESPACE","\n    ",111],"}",["T_WHITESPACE","\n\n    ",112],["T_STRING","sort",114],"(",["T_VARIABLE","$optimized_tokens",114],")",";",["T_WHITESPACE","\n    ",114],["T_VARIABLE","$keys",115],["T_WHITESPACE"," ",115],"=",["T_WHITESPACE"," ",115],"[","]",";",["T_WHITESPACE","\n    ",115],["T_FOREACH","foreach",116],["T_WHITESPACE"," ",116],"(",["T_STRING","array_combine",116],"(",["T_VARIABLE","$optimized_tokens",116],",",["T_WHITESPACE"," ",116],["T_STATIC","static",116],["T_DOUBLE_COLON","::",116],["T_STRING","parseTokens",116],"(",["T_VARIABLE","$optimized_tokens",116],")",")",["T_WHITESPACE"," ",116],["T_AS","as",116],["T_WHITESPACE"," ",116],["T_VARIABLE","$context_token",116],["T_WHITESPACE"," ",116],["T_DOUBLE_ARROW","=>",116],["T_WHITESPACE"," ",116],["T_VARIABLE","$context",116],")",["T_WHITESPACE"," ",116],"{",["T_WHITESPACE","\n      ",116],["T_LIST","list",117],"(",["T_VARIABLE","$context_id",117],",",["T_WHITESPACE"," ",117],["T_VARIABLE","$parameter",117],")",["T_WHITESPACE"," ",117],"=",["T_WHITESPACE"," ",117],["T_VARIABLE","$context",117],";",["T_WHITESPACE","\n      ",117],["T_VARIABLE","$keys",118],"[","]",["T_WHITESPACE"," ",118],"=",["T_WHITESPACE"," ",118],["T_CONSTANT_ENCAPSED_STRING","'['",118],["T_WHITESPACE"," ",118],".",["T_WHITESPACE"," ",118],["T_VARIABLE","$context_token",118],["T_WHITESPACE"," ",118],".",["T_WHITESPACE"," ",118],["T_CONSTANT_ENCAPSED_STRING","']='",118],["T_WHITESPACE"," ",118],".",["T_WHITESPACE"," ",118],["T_VARIABLE","$this",118],["T_OBJECT_OPERATOR","->",118],["T_STRING","getService",118],"(",["T_VARIABLE","$context_id",118],")",["T_OBJECT_OPERATOR","->",118],["T_STRING","getContext",118],"(",["T_VARIABLE","$parameter",118],")",";",["T_WHITESPACE","\n    ",118],"}",["T_WHITESPACE","\n\n    ",119],["T_COMMENT","\/\/ Create the returned object and merge in the cacheability metadata.\n",121],["T_WHITESPACE","    ",122],["T_VARIABLE","$context_cache_keys",122],["T_WHITESPACE"," ",122],"=",["T_WHITESPACE"," ",122],["T_NEW","new",122],["T_WHITESPACE"," ",122],["T_STRING","ContextCacheKeys",122],"(",["T_VARIABLE","$keys",122],")",";",["T_WHITESPACE","\n    ",122],["T_RETURN","return",123],["T_WHITESPACE"," ",123],["T_VARIABLE","$context_cache_keys",123],["T_OBJECT_OPERATOR","->",123],["T_STRING","merge",123],"(",["T_VARIABLE","$cacheable_metadata",123],")",";",["T_WHITESPACE","\n  ",123],"}",["T_WHITESPACE","\n\n  ",124],["T_DOC_COMMENT","\/**\n   * Optimizes cache context tokens (the minimal representative subset).\n   *\n   * A minimal representative subset means that any cache context token in the\n   * given set of cache context tokens that is a property of another cache\n   * context cache context token in the set, is removed.\n   *\n   * Hence a minimal representative subset is the most compact representation\n   * possible of a set of cache context tokens, that still captures the entire\n   * universe of variations.\n   *\n   * If a cache context is being optimized away, it is able to set cacheable\n   * metadata for itself which will be bubbled up.\n   *\n   * For example, when caching per user ('user'), also caching per role\n   * ('user.roles') is meaningless because \"per role\" is implied by \"per user\".\n   *\n   * In the following examples, remember that the period indicates hierarchy and\n   * the colon can be used to get a specific value of a calculated cache\n   * context:\n   * - ['a', 'a.b'] -> ['a']\n   * - ['a', 'a.b.c'] -> ['a']\n   * - ['a.b', 'a.b.c'] -> ['a.b']\n   * - ['a', 'a.b', 'a.b.c'] -> ['a']\n   * - ['x', 'x:foo'] -> ['x']\n   * - ['a', 'a.b.c:bar'] -> ['a']\n   *\n   * @param string[] $context_tokens\n   *   A set of cache context tokens.\n   *\n   * @return string[]\n   *   A representative subset of the given set of cache context tokens..\n   *\/",126],["T_WHITESPACE","\n  ",158],["T_PUBLIC","public",159],["T_WHITESPACE"," ",159],["T_FUNCTION","function",159],["T_WHITESPACE"," ",159],["T_STRING","optimizeTokens",159],"(",["T_ARRAY","array",159],["T_WHITESPACE"," ",159],["T_VARIABLE","$context_tokens",159],")",["T_WHITESPACE"," ",159],"{",["T_WHITESPACE","\n    ",159],["T_VARIABLE","$optimized_content_tokens",160],["T_WHITESPACE"," ",160],"=",["T_WHITESPACE"," ",160],"[","]",";",["T_WHITESPACE","\n    ",160],["T_FOREACH","foreach",161],["T_WHITESPACE"," ",161],"(",["T_VARIABLE","$context_tokens",161],["T_WHITESPACE"," ",161],["T_AS","as",161],["T_WHITESPACE"," ",161],["T_VARIABLE","$context_token",161],")",["T_WHITESPACE"," ",161],"{",["T_WHITESPACE","\n\n      ",161],["T_COMMENT","\/\/ Extract the parameter if available.\n",163],["T_WHITESPACE","      ",164],["T_VARIABLE","$parameter",164],["T_WHITESPACE"," ",164],"=",["T_WHITESPACE"," ",164],["T_STRING","NULL",164],";",["T_WHITESPACE","\n      ",164],["T_VARIABLE","$context_id",165],["T_WHITESPACE"," ",165],"=",["T_WHITESPACE"," ",165],["T_VARIABLE","$context_token",165],";",["T_WHITESPACE","\n      ",165],["T_IF","if",166],["T_WHITESPACE"," ",166],"(",["T_STRING","strpos",166],"(",["T_VARIABLE","$context_token",166],",",["T_WHITESPACE"," ",166],["T_CONSTANT_ENCAPSED_STRING","':'",166],")",["T_WHITESPACE"," ",166],["T_IS_NOT_IDENTICAL","!==",166],["T_WHITESPACE"," ",166],["T_STRING","FALSE",166],")",["T_WHITESPACE"," ",166],"{",["T_WHITESPACE","\n        ",166],["T_LIST","list",167],"(",["T_VARIABLE","$context_id",167],",",["T_WHITESPACE"," ",167],["T_VARIABLE","$parameter",167],")",["T_WHITESPACE"," ",167],"=",["T_WHITESPACE"," ",167],["T_STRING","explode",167],"(",["T_CONSTANT_ENCAPSED_STRING","':'",167],",",["T_WHITESPACE"," ",167],["T_VARIABLE","$context_token",167],")",";",["T_WHITESPACE","\n      ",167],"}",["T_WHITESPACE","\n\n      ",168],["T_COMMENT","\/\/ Context tokens without:\n",170],["T_WHITESPACE","      ",171],["T_COMMENT","\/\/ - a period means they don't have a parent\n",171],["T_WHITESPACE","      ",172],["T_COMMENT","\/\/ - a colon means they're not a specific value of a cache context\n",172],["T_WHITESPACE","      ",173],["T_COMMENT","\/\/ hence no optimizations are possible.\n",173],["T_WHITESPACE","      ",174],["T_IF","if",174],["T_WHITESPACE"," ",174],"(",["T_STRING","strpos",174],"(",["T_VARIABLE","$context_token",174],",",["T_WHITESPACE"," ",174],["T_CONSTANT_ENCAPSED_STRING","'.'",174],")",["T_WHITESPACE"," ",174],["T_IS_IDENTICAL","===",174],["T_WHITESPACE"," ",174],["T_STRING","FALSE",174],["T_WHITESPACE"," ",174],["T_BOOLEAN_AND","&&",174],["T_WHITESPACE"," ",174],["T_STRING","strpos",174],"(",["T_VARIABLE","$context_token",174],",",["T_WHITESPACE"," ",174],["T_CONSTANT_ENCAPSED_STRING","':'",174],")",["T_WHITESPACE"," ",174],["T_IS_IDENTICAL","===",174],["T_WHITESPACE"," ",174],["T_STRING","FALSE",174],")",["T_WHITESPACE"," ",174],"{",["T_WHITESPACE","\n        ",174],["T_VARIABLE","$optimized_content_tokens",175],"[","]",["T_WHITESPACE"," ",175],"=",["T_WHITESPACE"," ",175],["T_VARIABLE","$context_token",175],";",["T_WHITESPACE","\n      ",175],"}",["T_WHITESPACE","\n      ",176],["T_COMMENT","\/\/ Check cacheability. If the context defines a max-age of 0, then it\n",177],["T_WHITESPACE","      ",178],["T_COMMENT","\/\/ can not be optimized away. Pass the parameter along if we have one.\n",178],["T_WHITESPACE","      ",179],["T_ELSEIF","elseif",179],["T_WHITESPACE"," ",179],"(",["T_VARIABLE","$this",179],["T_OBJECT_OPERATOR","->",179],["T_STRING","getService",179],"(",["T_VARIABLE","$context_id",179],")",["T_OBJECT_OPERATOR","->",179],["T_STRING","getCacheableMetadata",179],"(",["T_VARIABLE","$parameter",179],")",["T_OBJECT_OPERATOR","->",179],["T_STRING","getCacheMaxAge",179],"(",")",["T_WHITESPACE"," ",179],["T_IS_IDENTICAL","===",179],["T_WHITESPACE"," ",179],["T_LNUMBER","0",179],")",["T_WHITESPACE"," ",179],"{",["T_WHITESPACE","\n        ",179],["T_VARIABLE","$optimized_content_tokens",180],"[","]",["T_WHITESPACE"," ",180],"=",["T_WHITESPACE"," ",180],["T_VARIABLE","$context_token",180],";",["T_WHITESPACE","\n      ",180],"}",["T_WHITESPACE","\n      ",181],["T_COMMENT","\/\/ The context token has a period or a colon. Iterate over all ancestor\n",182],["T_WHITESPACE","      ",183],["T_COMMENT","\/\/ cache contexts. If one exists, omit the context token.\n",183],["T_WHITESPACE","      ",184],["T_ELSE","else",184],["T_WHITESPACE"," ",184],"{",["T_WHITESPACE","\n        ",184],["T_VARIABLE","$ancestor_found",185],["T_WHITESPACE"," ",185],"=",["T_WHITESPACE"," ",185],["T_STRING","FALSE",185],";",["T_WHITESPACE","\n        ",185],["T_COMMENT","\/\/ Treat a colon like a period, that allows us to consider 'a' the\n",186],["T_WHITESPACE","        ",187],["T_COMMENT","\/\/ ancestor of 'a:foo', without any additional code for the colon.\n",187],["T_WHITESPACE","        ",188],["T_VARIABLE","$ancestor",188],["T_WHITESPACE"," ",188],"=",["T_WHITESPACE"," ",188],["T_STRING","str_replace",188],"(",["T_CONSTANT_ENCAPSED_STRING","':'",188],",",["T_WHITESPACE"," ",188],["T_CONSTANT_ENCAPSED_STRING","'.'",188],",",["T_WHITESPACE"," ",188],["T_VARIABLE","$context_token",188],")",";",["T_WHITESPACE","\n        ",188],["T_DO","do",189],["T_WHITESPACE"," ",189],"{",["T_WHITESPACE","\n          ",189],["T_VARIABLE","$ancestor",190],["T_WHITESPACE"," ",190],"=",["T_WHITESPACE"," ",190],["T_STRING","substr",190],"(",["T_VARIABLE","$ancestor",190],",",["T_WHITESPACE"," ",190],["T_LNUMBER","0",190],",",["T_WHITESPACE"," ",190],["T_STRING","strrpos",190],"(",["T_VARIABLE","$ancestor",190],",",["T_WHITESPACE"," ",190],["T_CONSTANT_ENCAPSED_STRING","'.'",190],")",")",";",["T_WHITESPACE","\n          ",190],["T_IF","if",191],["T_WHITESPACE"," ",191],"(",["T_STRING","in_array",191],"(",["T_VARIABLE","$ancestor",191],",",["T_WHITESPACE"," ",191],["T_VARIABLE","$context_tokens",191],")",")",["T_WHITESPACE"," ",191],"{",["T_WHITESPACE","\n            ",191],["T_COMMENT","\/\/ An ancestor cache context is in $context_tokens, hence this cache\n",192],["T_WHITESPACE","            ",193],["T_COMMENT","\/\/ context is implied.\n",193],["T_WHITESPACE","            ",194],["T_VARIABLE","$ancestor_found",194],["T_WHITESPACE"," ",194],"=",["T_WHITESPACE"," ",194],["T_STRING","TRUE",194],";",["T_WHITESPACE","\n          ",194],"}",["T_WHITESPACE","\n\n        ",195],"}",["T_WHITESPACE"," ",197],["T_WHILE","while",197],["T_WHITESPACE"," ",197],"(","!",["T_VARIABLE","$ancestor_found",197],["T_WHITESPACE"," ",197],["T_BOOLEAN_AND","&&",197],["T_WHITESPACE"," ",197],["T_STRING","strpos",197],"(",["T_VARIABLE","$ancestor",197],",",["T_WHITESPACE"," ",197],["T_CONSTANT_ENCAPSED_STRING","'.'",197],")",["T_WHITESPACE"," ",197],["T_IS_NOT_IDENTICAL","!==",197],["T_WHITESPACE"," ",197],["T_STRING","FALSE",197],")",";",["T_WHITESPACE","\n        ",197],["T_IF","if",198],["T_WHITESPACE"," ",198],"(","!",["T_VARIABLE","$ancestor_found",198],")",["T_WHITESPACE"," ",198],"{",["T_WHITESPACE","\n          ",198],["T_VARIABLE","$optimized_content_tokens",199],"[","]",["T_WHITESPACE"," ",199],"=",["T_WHITESPACE"," ",199],["T_VARIABLE","$context_token",199],";",["T_WHITESPACE","\n        ",199],"}",["T_WHITESPACE","\n      ",200],"}",["T_WHITESPACE","\n    ",201],"}",["T_WHITESPACE","\n    ",202],["T_RETURN","return",203],["T_WHITESPACE"," ",203],["T_VARIABLE","$optimized_content_tokens",203],";",["T_WHITESPACE","\n  ",203],"}",["T_WHITESPACE","\n\n  ",204],["T_DOC_COMMENT","\/**\n   * Retrieves a cache context service from the container.\n   *\n   * @param string $context_id\n   *   The context ID, which together with the service ID prefix allows the\n   *   corresponding cache context service to be retrieved.\n   *\n   * @return \\Drupal\\Core\\Cache\\Context\\CacheContextInterface\n   *   The requested cache context service.\n   *\/",206],["T_WHITESPACE","\n  ",215],["T_PROTECTED","protected",216],["T_WHITESPACE"," ",216],["T_FUNCTION","function",216],["T_WHITESPACE"," ",216],["T_STRING","getService",216],"(",["T_VARIABLE","$context_id",216],")",["T_WHITESPACE"," ",216],"{",["T_WHITESPACE","\n    ",216],["T_RETURN","return",217],["T_WHITESPACE"," ",217],["T_VARIABLE","$this",217],["T_OBJECT_OPERATOR","->",217],["T_STRING","container",217],["T_OBJECT_OPERATOR","->",217],["T_STRING","get",217],"(",["T_CONSTANT_ENCAPSED_STRING","'cache_context.'",217],["T_WHITESPACE"," ",217],".",["T_WHITESPACE"," ",217],["T_VARIABLE","$context_id",217],")",";",["T_WHITESPACE","\n  ",217],"}",["T_WHITESPACE","\n\n  ",218],["T_DOC_COMMENT","\/**\n   * Parses cache context tokens into context IDs and optional parameters.\n   *\n   * @param string[] $context_tokens\n   *   An array of cache context tokens.\n   *\n   * @return array\n   *   An array with the parsed results, with each result being an array\n   *   containing:\n   *   - The cache context ID.\n   *   - The associated parameter (for a calculated cache context), or NULL if\n   *     there is no parameter.\n   *\/",220],["T_WHITESPACE","\n  ",232],["T_PUBLIC","public",233],["T_WHITESPACE"," ",233],["T_STATIC","static",233],["T_WHITESPACE"," ",233],["T_FUNCTION","function",233],["T_WHITESPACE"," ",233],["T_STRING","parseTokens",233],"(",["T_ARRAY","array",233],["T_WHITESPACE"," ",233],["T_VARIABLE","$context_tokens",233],")",["T_WHITESPACE"," ",233],"{",["T_WHITESPACE","\n    ",233],["T_VARIABLE","$contexts_with_parameters",234],["T_WHITESPACE"," ",234],"=",["T_WHITESPACE"," ",234],"[","]",";",["T_WHITESPACE","\n    ",234],["T_FOREACH","foreach",235],["T_WHITESPACE"," ",235],"(",["T_VARIABLE","$context_tokens",235],["T_WHITESPACE"," ",235],["T_AS","as",235],["T_WHITESPACE"," ",235],["T_VARIABLE","$context",235],")",["T_WHITESPACE"," ",235],"{",["T_WHITESPACE","\n      ",235],["T_VARIABLE","$context_id",236],["T_WHITESPACE"," ",236],"=",["T_WHITESPACE"," ",236],["T_VARIABLE","$context",236],";",["T_WHITESPACE","\n      ",236],["T_VARIABLE","$parameter",237],["T_WHITESPACE"," ",237],"=",["T_WHITESPACE"," ",237],["T_STRING","NULL",237],";",["T_WHITESPACE","\n      ",237],["T_IF","if",238],["T_WHITESPACE"," ",238],"(",["T_STRING","strpos",238],"(",["T_VARIABLE","$context",238],",",["T_WHITESPACE"," ",238],["T_CONSTANT_ENCAPSED_STRING","':'",238],")",["T_WHITESPACE"," ",238],["T_IS_NOT_IDENTICAL","!==",238],["T_WHITESPACE"," ",238],["T_STRING","FALSE",238],")",["T_WHITESPACE"," ",238],"{",["T_WHITESPACE","\n        ",238],["T_LIST","list",239],"(",["T_VARIABLE","$context_id",239],",",["T_WHITESPACE"," ",239],["T_VARIABLE","$parameter",239],")",["T_WHITESPACE"," ",239],"=",["T_WHITESPACE"," ",239],["T_STRING","explode",239],"(",["T_CONSTANT_ENCAPSED_STRING","':'",239],",",["T_WHITESPACE"," ",239],["T_VARIABLE","$context",239],",",["T_WHITESPACE"," ",239],["T_LNUMBER","2",239],")",";",["T_WHITESPACE","\n      ",239],"}",["T_WHITESPACE","\n      ",240],["T_VARIABLE","$contexts_with_parameters",241],"[","]",["T_WHITESPACE"," ",241],"=",["T_WHITESPACE"," ",241],"[",["T_VARIABLE","$context_id",241],",",["T_WHITESPACE"," ",241],["T_VARIABLE","$parameter",241],"]",";",["T_WHITESPACE","\n    ",241],"}",["T_WHITESPACE","\n    ",242],["T_RETURN","return",243],["T_WHITESPACE"," ",243],["T_VARIABLE","$contexts_with_parameters",243],";",["T_WHITESPACE","\n  ",243],"}",["T_WHITESPACE","\n\n  ",244],["T_DOC_COMMENT","\/**\n   * Validates an array of cache context tokens.\n   *\n   * Can be called before using cache contexts in operations, to check validity.\n   *\n   * @param string[] $context_tokens\n   *   An array of cache context tokens.\n   *\n   * @throws \\LogicException\n   *\n   * @see \\Drupal\\Core\\Cache\\Context\\CacheContextsManager::parseTokens()\n   *\/",246],["T_WHITESPACE","\n  ",257],["T_PUBLIC","public",258],["T_WHITESPACE"," ",258],["T_FUNCTION","function",258],["T_WHITESPACE"," ",258],["T_STRING","validateTokens",258],"(",["T_ARRAY","array",258],["T_WHITESPACE"," ",258],["T_VARIABLE","$context_tokens",258],["T_WHITESPACE"," ",258],"=",["T_WHITESPACE"," ",258],"[","]",")",["T_WHITESPACE"," ",258],"{",["T_WHITESPACE","\n    ",258],["T_IF","if",259],["T_WHITESPACE"," ",259],"(",["T_EMPTY","empty",259],"(",["T_VARIABLE","$context_tokens",259],")",")",["T_WHITESPACE"," ",259],"{",["T_WHITESPACE","\n      ",259],["T_RETURN","return",260],";",["T_WHITESPACE","\n    ",260],"}",["T_WHITESPACE","\n\n    ",261],["T_COMMENT","\/\/ Initialize the set of valid context tokens with the container's contexts.\n",263],["T_WHITESPACE","    ",264],["T_IF","if",264],["T_WHITESPACE"," ",264],"(","!",["T_ISSET","isset",264],"(",["T_VARIABLE","$this",264],["T_OBJECT_OPERATOR","->",264],["T_STRING","validContextTokens",264],")",")",["T_WHITESPACE"," ",264],"{",["T_WHITESPACE","\n      ",264],["T_VARIABLE","$this",265],["T_OBJECT_OPERATOR","->",265],["T_STRING","validContextTokens",265],["T_WHITESPACE"," ",265],"=",["T_WHITESPACE"," ",265],["T_STRING","array_flip",265],"(",["T_VARIABLE","$this",265],["T_OBJECT_OPERATOR","->",265],["T_STRING","contexts",265],")",";",["T_WHITESPACE","\n    ",265],"}",["T_WHITESPACE","\n\n    ",266],["T_FOREACH","foreach",268],["T_WHITESPACE"," ",268],"(",["T_VARIABLE","$context_tokens",268],["T_WHITESPACE"," ",268],["T_AS","as",268],["T_WHITESPACE"," ",268],["T_VARIABLE","$context_token",268],")",["T_WHITESPACE"," ",268],"{",["T_WHITESPACE","\n      ",268],["T_IF","if",269],["T_WHITESPACE"," ",269],"(","!",["T_STRING","is_string",269],"(",["T_VARIABLE","$context_token",269],")",")",["T_WHITESPACE"," ",269],"{",["T_WHITESPACE","\n        ",269],["T_THROW","throw",270],["T_WHITESPACE"," ",270],["T_NEW","new",270],["T_WHITESPACE"," ",270],["T_NS_SEPARATOR","\\",270],["T_STRING","LogicException",270],"(",["T_STRING","sprintf",270],"(",["T_CONSTANT_ENCAPSED_STRING","'Cache contexts must be strings, %s given.'",270],",",["T_WHITESPACE"," ",270],["T_STRING","gettype",270],"(",["T_VARIABLE","$context_token",270],")",")",")",";",["T_WHITESPACE","\n      ",270],"}",["T_WHITESPACE","\n\n      ",271],["T_IF","if",273],["T_WHITESPACE"," ",273],"(",["T_ISSET","isset",273],"(",["T_VARIABLE","$this",273],["T_OBJECT_OPERATOR","->",273],["T_STRING","validContextTokens",273],"[",["T_VARIABLE","$context_token",273],"]",")",")",["T_WHITESPACE"," ",273],"{",["T_WHITESPACE","\n        ",273],["T_CONTINUE","continue",274],";",["T_WHITESPACE","\n      ",274],"}",["T_WHITESPACE","\n\n      ",275],["T_COMMENT","\/\/ If it's a valid context token, then the ID must be stored in the set\n",277],["T_WHITESPACE","      ",278],["T_COMMENT","\/\/ of valid context tokens (since we initialized it with the list of cache\n",278],["T_WHITESPACE","      ",279],["T_COMMENT","\/\/ context IDs using the container). In case of an invalid context token,\n",279],["T_WHITESPACE","      ",280],["T_COMMENT","\/\/ throw an exception, otherwise cache it, including the parameter, to\n",280],["T_WHITESPACE","      ",281],["T_COMMENT","\/\/ minimize the amount of work in future ::validateContexts() calls.\n",281],["T_WHITESPACE","      ",282],["T_VARIABLE","$context_id",282],["T_WHITESPACE"," ",282],"=",["T_WHITESPACE"," ",282],["T_VARIABLE","$context_token",282],";",["T_WHITESPACE","\n      ",282],["T_VARIABLE","$colon_pos",283],["T_WHITESPACE"," ",283],"=",["T_WHITESPACE"," ",283],["T_STRING","strpos",283],"(",["T_VARIABLE","$context_id",283],",",["T_WHITESPACE"," ",283],["T_CONSTANT_ENCAPSED_STRING","':'",283],")",";",["T_WHITESPACE","\n      ",283],["T_IF","if",284],["T_WHITESPACE"," ",284],"(",["T_VARIABLE","$colon_pos",284],["T_WHITESPACE"," ",284],["T_IS_NOT_IDENTICAL","!==",284],["T_WHITESPACE"," ",284],["T_STRING","FALSE",284],")",["T_WHITESPACE"," ",284],"{",["T_WHITESPACE","\n        ",284],["T_VARIABLE","$context_id",285],["T_WHITESPACE"," ",285],"=",["T_WHITESPACE"," ",285],["T_STRING","substr",285],"(",["T_VARIABLE","$context_id",285],",",["T_WHITESPACE"," ",285],["T_LNUMBER","0",285],",",["T_WHITESPACE"," ",285],["T_VARIABLE","$colon_pos",285],")",";",["T_WHITESPACE","\n      ",285],"}",["T_WHITESPACE","\n      ",286],["T_IF","if",287],["T_WHITESPACE"," ",287],"(",["T_ISSET","isset",287],"(",["T_VARIABLE","$this",287],["T_OBJECT_OPERATOR","->",287],["T_STRING","validContextTokens",287],"[",["T_VARIABLE","$context_id",287],"]",")",")",["T_WHITESPACE"," ",287],"{",["T_WHITESPACE","\n        ",287],["T_VARIABLE","$this",288],["T_OBJECT_OPERATOR","->",288],["T_STRING","validContextTokens",288],"[",["T_VARIABLE","$context_token",288],"]",["T_WHITESPACE"," ",288],"=",["T_WHITESPACE"," ",288],["T_STRING","TRUE",288],";",["T_WHITESPACE","\n      ",288],"}",["T_WHITESPACE","\n      ",289],["T_ELSE","else",290],["T_WHITESPACE"," ",290],"{",["T_WHITESPACE","\n        ",290],["T_THROW","throw",291],["T_WHITESPACE"," ",291],["T_NEW","new",291],["T_WHITESPACE"," ",291],["T_NS_SEPARATOR","\\",291],["T_STRING","LogicException",291],"(",["T_STRING","sprintf",291],"(",["T_CONSTANT_ENCAPSED_STRING","'\"%s\" is not a valid cache context ID.'",291],",",["T_WHITESPACE"," ",291],["T_VARIABLE","$context_id",291],")",")",";",["T_WHITESPACE","\n      ",291],"}",["T_WHITESPACE","\n    ",292],"}",["T_WHITESPACE","\n  ",293],"}",["T_WHITESPACE","\n\n  ",294],["T_DOC_COMMENT","\/**\n   * Asserts the context tokens are valid\n   *\n   * Similar to ::validateTokens, this method returns boolean TRUE when the\n   * context tokens are valid, and FALSE when they are not instead of returning\n   * NULL when they are valid and throwing a \\LogicException when they are not.\n   * This function should be used with the assert() statement.\n   *\n   * @param mixed $context_tokens\n   *   Variable to be examined - should be array of context_tokens.\n   *\n   * @return bool\n   *   TRUE if context_tokens is an array of valid tokens.\n   *\/",296],["T_WHITESPACE","\n  ",309],["T_PUBLIC","public",310],["T_WHITESPACE"," ",310],["T_FUNCTION","function",310],["T_WHITESPACE"," ",310],["T_STRING","assertValidTokens",310],"(",["T_VARIABLE","$context_tokens",310],")",["T_WHITESPACE"," ",310],"{",["T_WHITESPACE","\n    ",310],["T_IF","if",311],["T_WHITESPACE"," ",311],"(","!",["T_STRING","is_array",311],"(",["T_VARIABLE","$context_tokens",311],")",")",["T_WHITESPACE"," ",311],"{",["T_WHITESPACE","\n      ",311],["T_RETURN","return",312],["T_WHITESPACE"," ",312],["T_STRING","FALSE",312],";",["T_WHITESPACE","\n    ",312],"}",["T_WHITESPACE","\n\n    ",313],["T_TRY","try",315],["T_WHITESPACE"," ",315],"{",["T_WHITESPACE","\n      ",315],["T_VARIABLE","$this",316],["T_OBJECT_OPERATOR","->",316],["T_STRING","validateTokens",316],"(",["T_VARIABLE","$context_tokens",316],")",";",["T_WHITESPACE","\n    ",316],"}",["T_WHITESPACE","\n    ",317],["T_CATCH","catch",318],["T_WHITESPACE"," ",318],"(",["T_NS_SEPARATOR","\\",318],["T_STRING","LogicException",318],["T_WHITESPACE"," ",318],["T_VARIABLE","$e",318],")",["T_WHITESPACE"," ",318],"{",["T_WHITESPACE","\n      ",318],["T_RETURN","return",319],["T_WHITESPACE"," ",319],["T_STRING","FALSE",319],";",["T_WHITESPACE","\n    ",319],"}",["T_WHITESPACE","\n\n    ",320],["T_RETURN","return",322],["T_WHITESPACE"," ",322],["T_STRING","TRUE",322],";",["T_WHITESPACE","\n  ",322],"}",["T_WHITESPACE","\n\n",323],"}",["T_WHITESPACE","\n",325]]