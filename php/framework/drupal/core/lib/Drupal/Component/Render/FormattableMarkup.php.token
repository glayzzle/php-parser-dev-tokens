[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Component",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Render",3],";",["T_WHITESPACE","\n\n",3],["T_USE","use",5],["T_WHITESPACE"," ",5],["T_STRING","Drupal",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Component",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Utility",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Html",5],";",["T_WHITESPACE","\n",5],["T_USE","use",6],["T_WHITESPACE"," ",6],["T_STRING","Drupal",6],["T_NS_SEPARATOR","\\",6],["T_STRING","Component",6],["T_NS_SEPARATOR","\\",6],["T_STRING","Utility",6],["T_NS_SEPARATOR","\\",6],["T_STRING","Unicode",6],";",["T_WHITESPACE","\n",6],["T_USE","use",7],["T_WHITESPACE"," ",7],["T_STRING","Drupal",7],["T_NS_SEPARATOR","\\",7],["T_STRING","Component",7],["T_NS_SEPARATOR","\\",7],["T_STRING","Utility",7],["T_NS_SEPARATOR","\\",7],["T_STRING","UrlHelper",7],";",["T_WHITESPACE","\n\n",7],["T_DOC_COMMENT","\/**\n * Formats a string for HTML display by replacing variable placeholders.\n *\n * When cast to a string, this object replaces variable placeholders in the\n * string with the arguments passed in during construction and escapes the\n * values so they can be safely displayed as HTML. See the documentation of\n * \\Drupal\\Component\\Render\\FormattableMarkup::placeholderFormat() for details\n * on the supported placeholders and how to use them securely. Incorrect use of\n * this class can result in security vulnerabilities.\n *\n * In most cases, you should use TranslatableMarkup or PluralTranslatableMarkup\n * rather than this object, since they will translate the text (on\n * non-English-only sites) in addition to formatting it. Variables concatenated\n * without the insertion of language-specific words or punctuation are some\n * examples where translation is not applicable and using this class directly\n * directly is appropriate.\n *\n * This class is designed for formatting messages that are mostly text, not as\n * an HTML template language. As such:\n * - The passed in string should contain no (or minimal) HTML.\n * - Variable placeholders should not be used within the \"<\" and \">\" of an\n *   HTML tag, such as in HTML attribute values. This would be a security\n *   risk. Examples:\n *   @code\n *     \/\/ Insecure (placeholder within \"<\" and \">\"):\n *     $this->placeholderFormat('<@variable>text<\/@variable>', ['@variable' => $variable]);\n *     \/\/ Insecure (placeholder within \"<\" and \">\"):\n *     $this->placeholderFormat('<a @variable>link text<\/a>', ['@variable' => $variable]);\n *     \/\/ Insecure (placeholder within \"<\" and \">\"):\n *     $this->placeholderFormat('<a title=\"@variable\">link text<\/a>', ['@variable' => $variable]);\n *   @endcode\n *   Only the \"href\" attribute is supported via the special \":variable\"\n *   placeholder, to allow simple links to be inserted:\n *   @code\n *     \/\/ Secure (usage of \":variable\" placeholder for href attribute):\n *     $this->placeholderFormat('<a href=\":variable\">link text<\/a>', [':variable' , $variable]);\n *     \/\/ Secure (usage of \":variable\" placeholder for href attribute):\n *     $this->placeholderFormat('<a href=\":variable\" title=\"static text\">link text<\/a>', [':variable' => $variable]);\n *     \/\/ Insecure (the \"@variable\" placeholder does not filter dangerous\n *     \/\/ protocols):\n *     $this->placeholderFormat('<a href=\"@variable\">link text<\/a>', ['@variable' => $variable]);\n *     \/\/ Insecure (\"@variable\" placeholder within \"<\" and \">\"):\n *     $this->placeholderFormat('<a href=\":url\" title=\"@variable\">link text<\/a>', [':url' => $url, '@variable' => $variable]);\n *   @endcode\n * To build non-minimal HTML, use an HTML template language such as Twig,\n * rather than this class.\n *\n * @ingroup sanitization\n *\n * @see \\Drupal\\Core\\StringTranslation\\TranslatableMarkup\n * @see \\Drupal\\Core\\StringTranslation\\PluralTranslatableMarkup\n * @see \\Drupal\\Component\\Render\\FormattableMarkup::placeholderFormat()\n *\/",9],["T_WHITESPACE","\n",61],["T_CLASS","class",62],["T_WHITESPACE"," ",62],["T_STRING","FormattableMarkup",62],["T_WHITESPACE"," ",62],["T_IMPLEMENTS","implements",62],["T_WHITESPACE"," ",62],["T_STRING","MarkupInterface",62],",",["T_WHITESPACE"," ",62],["T_NS_SEPARATOR","\\",62],["T_STRING","Countable",62],["T_WHITESPACE"," ",62],"{",["T_WHITESPACE","\n\n  ",62],["T_DOC_COMMENT","\/**\n   * The arguments to replace placeholders with.\n   *\n   * @var array\n   *\/",64],["T_WHITESPACE","\n  ",68],["T_PROTECTED","protected",69],["T_WHITESPACE"," ",69],["T_VARIABLE","$arguments",69],["T_WHITESPACE"," ",69],"=",["T_WHITESPACE"," ",69],"[","]",";",["T_WHITESPACE","\n\n  ",69],["T_DOC_COMMENT","\/**\n   * Constructs a new class instance.\n   *\n   * @param string $string\n   *   A string containing placeholders. The string itself will not be escaped,\n   *   any unsafe content must be in $args and inserted via placeholders.\n   * @param array $arguments\n   *   An array with placeholder replacements, keyed by placeholder. See\n   *   \\Drupal\\Component\\Render\\FormattableMarkup::placeholderFormat() for\n   *   additional information about placeholders.\n   *\n   * @see \\Drupal\\Component\\Render\\FormattableMarkup::placeholderFormat()\n   *\/",71],["T_WHITESPACE","\n  ",83],["T_PUBLIC","public",84],["T_WHITESPACE"," ",84],["T_FUNCTION","function",84],["T_WHITESPACE"," ",84],["T_STRING","__construct",84],"(",["T_VARIABLE","$string",84],",",["T_WHITESPACE"," ",84],["T_ARRAY","array",84],["T_WHITESPACE"," ",84],["T_VARIABLE","$arguments",84],")",["T_WHITESPACE"," ",84],"{",["T_WHITESPACE","\n    ",84],["T_VARIABLE","$this",85],["T_OBJECT_OPERATOR","->",85],["T_STRING","string",85],["T_WHITESPACE"," ",85],"=",["T_WHITESPACE"," ",85],["T_STRING_CAST","(string)",85],["T_WHITESPACE"," ",85],["T_VARIABLE","$string",85],";",["T_WHITESPACE","\n    ",85],["T_VARIABLE","$this",86],["T_OBJECT_OPERATOR","->",86],["T_STRING","arguments",86],["T_WHITESPACE"," ",86],"=",["T_WHITESPACE"," ",86],["T_VARIABLE","$arguments",86],";",["T_WHITESPACE","\n  ",86],"}",["T_WHITESPACE","\n\n  ",87],["T_DOC_COMMENT","\/**\n   * {@inheritdoc}\n   *\/",89],["T_WHITESPACE","\n  ",91],["T_PUBLIC","public",92],["T_WHITESPACE"," ",92],["T_FUNCTION","function",92],["T_WHITESPACE"," ",92],["T_STRING","__toString",92],"(",")",["T_WHITESPACE"," ",92],"{",["T_WHITESPACE","\n    ",92],["T_RETURN","return",93],["T_WHITESPACE"," ",93],["T_STATIC","static",93],["T_DOUBLE_COLON","::",93],["T_STRING","placeholderFormat",93],"(",["T_VARIABLE","$this",93],["T_OBJECT_OPERATOR","->",93],["T_STRING","string",93],",",["T_WHITESPACE"," ",93],["T_VARIABLE","$this",93],["T_OBJECT_OPERATOR","->",93],["T_STRING","arguments",93],")",";",["T_WHITESPACE","\n  ",93],"}",["T_WHITESPACE","\n\n  ",94],["T_DOC_COMMENT","\/**\n   * Returns the string length.\n   *\n   * @return int\n   *   The length of the string.\n   *\/",96],["T_WHITESPACE","\n  ",101],["T_PUBLIC","public",102],["T_WHITESPACE"," ",102],["T_FUNCTION","function",102],["T_WHITESPACE"," ",102],["T_STRING","count",102],"(",")",["T_WHITESPACE"," ",102],"{",["T_WHITESPACE","\n    ",102],["T_RETURN","return",103],["T_WHITESPACE"," ",103],["T_STRING","Unicode",103],["T_DOUBLE_COLON","::",103],["T_STRING","strlen",103],"(",["T_VARIABLE","$this",103],["T_OBJECT_OPERATOR","->",103],["T_STRING","string",103],")",";",["T_WHITESPACE","\n  ",103],"}",["T_WHITESPACE","\n\n  ",104],["T_DOC_COMMENT","\/**\n   * Returns a representation of the object for use in JSON serialization.\n   *\n   * @return string\n   *   The safe string content.\n   *\/",106],["T_WHITESPACE","\n  ",111],["T_PUBLIC","public",112],["T_WHITESPACE"," ",112],["T_FUNCTION","function",112],["T_WHITESPACE"," ",112],["T_STRING","jsonSerialize",112],"(",")",["T_WHITESPACE"," ",112],"{",["T_WHITESPACE","\n    ",112],["T_RETURN","return",113],["T_WHITESPACE"," ",113],["T_VARIABLE","$this",113],["T_OBJECT_OPERATOR","->",113],["T_STRING","__toString",113],"(",")",";",["T_WHITESPACE","\n  ",113],"}",["T_WHITESPACE","\n\n  ",114],["T_DOC_COMMENT","\/**\n   * Replaces placeholders in a string with values.\n   *\n   * @param string $string\n   *   A string containing placeholders. The string itself is expected to be\n   *   safe and correct HTML. Any unsafe content must be in $args and\n   *   inserted via placeholders.\n   * @param array $args\n   *   An associative array of replacements. Each array key should be the same\n   *   as a placeholder in $string. The corresponding value should be a string\n   *   or an object that implements\n   *   \\Drupal\\Component\\Render\\MarkupInterface. The value replaces the\n   *   placeholder in $string. Sanitization and formatting will be done before\n   *   replacement. The type of sanitization and formatting depends on the first\n   *   character of the key:\n   *   - @variable: When the placeholder replacement value is:\n   *     - A string, the replaced value in the returned string will be sanitized\n   *       using \\Drupal\\Component\\Utility\\Html::escape().\n   *     - A MarkupInterface object, the replaced value in the returned string\n   *       will not be sanitized.\n   *     - A MarkupInterface object cast to a string, the replaced value in the\n   *       returned string be forcibly sanitized using\n   *       \\Drupal\\Component\\Utility\\Html::escape().\n   *       @code\n   *         $this->placeholderFormat('This will force HTML-escaping of the replacement value: @text', ['@text' => (string) $safe_string_interface_object));\n   *       @endcode\n   *     Use this placeholder as the default choice for anything displayed on\n   *     the site, but not within HTML attributes, JavaScript, or CSS. Doing so\n   *     is a security risk.\n   *   - %variable: Use when the replacement value is to be wrapped in <em>\n   *     tags.\n   *     A call like:\n   *     @code\n   *       $string = \"%output_text\";\n   *       $arguments = ['%output_text' => 'text output here.'];\n   *       $this->placeholderFormat($string, $arguments);\n   *     @endcode\n   *     makes the following HTML code:\n   *     @code\n   *       <em class=\"placeholder\">text output here.<\/em>\n   *     @endcode\n   *     As with @variable, do not use this within HTML attributes, JavaScript,\n   *     or CSS. Doing so is a security risk.\n   *   - :variable: Return value is escaped with\n   *     \\Drupal\\Component\\Utility\\Html::escape() and filtered for dangerous\n   *     protocols using UrlHelper::stripDangerousProtocols(). Use this when\n   *     using the \"href\" attribute, ensuring the attribute value is always\n   *     wrapped in quotes:\n   *     @code\n   *     \/\/ Secure (with quotes):\n   *     $this->placeholderFormat('<a href=\":url\">@variable<\/a>', [':url' => $url, '@variable' => $variable]);\n   *     \/\/ Insecure (without quotes):\n   *     $this->placeholderFormat('<a href=:url>@variable<\/a>', [':url' => $url, '@variable' => $variable]);\n   *     @endcode\n   *     When \":variable\" comes from arbitrary user input, the result is secure,\n   *     but not guaranteed to be a valid URL (which means the resulting output\n   *     could fail HTML validation). To guarantee a valid URL, use\n   *     Url::fromUri($user_input)->toString() (which either throws an exception\n   *     or returns a well-formed URL) before passing the result into a\n   *     \":variable\" placeholder.\n   *\n   * @return string\n   *   A formatted HTML string with the placeholders replaced.\n   *\n   * @ingroup sanitization\n   *\n   * @see \\Drupal\\Core\\StringTranslation\\TranslatableMarkup\n   * @see \\Drupal\\Core\\StringTranslation\\PluralTranslatableMarkup\n   * @see \\Drupal\\Component\\Utility\\Html::escape()\n   * @see \\Drupal\\Component\\Utility\\UrlHelper::stripDangerousProtocols()\n   * @see \\Drupal\\Core\\Url::fromUri()\n   *\/",116],["T_WHITESPACE","\n  ",187],["T_PROTECTED","protected",188],["T_WHITESPACE"," ",188],["T_STATIC","static",188],["T_WHITESPACE"," ",188],["T_FUNCTION","function",188],["T_WHITESPACE"," ",188],["T_STRING","placeholderFormat",188],"(",["T_VARIABLE","$string",188],",",["T_WHITESPACE"," ",188],["T_ARRAY","array",188],["T_WHITESPACE"," ",188],["T_VARIABLE","$args",188],")",["T_WHITESPACE"," ",188],"{",["T_WHITESPACE","\n    ",188],["T_COMMENT","\/\/ Transform arguments before inserting them.\n",189],["T_WHITESPACE","    ",190],["T_FOREACH","foreach",190],["T_WHITESPACE"," ",190],"(",["T_VARIABLE","$args",190],["T_WHITESPACE"," ",190],["T_AS","as",190],["T_WHITESPACE"," ",190],["T_VARIABLE","$key",190],["T_WHITESPACE"," ",190],["T_DOUBLE_ARROW","=>",190],["T_WHITESPACE"," ",190],["T_VARIABLE","$value",190],")",["T_WHITESPACE"," ",190],"{",["T_WHITESPACE","\n      ",190],["T_SWITCH","switch",191],["T_WHITESPACE"," ",191],"(",["T_VARIABLE","$key",191],"[",["T_LNUMBER","0",191],"]",")",["T_WHITESPACE"," ",191],"{",["T_WHITESPACE","\n        ",191],["T_CASE","case",192],["T_WHITESPACE"," ",192],["T_CONSTANT_ENCAPSED_STRING","'@'",192],":",["T_WHITESPACE","\n          ",192],["T_COMMENT","\/\/ Escape if the value is not an object from a class that implements\n",193],["T_WHITESPACE","          ",194],["T_COMMENT","\/\/ \\Drupal\\Component\\Render\\MarkupInterface, for example strings will\n",194],["T_WHITESPACE","          ",195],["T_COMMENT","\/\/ be escaped.\n",195],["T_WHITESPACE","          ",196],["T_COMMENT","\/\/ Strings that are safe within HTML fragments, but not within other\n",196],["T_WHITESPACE","          ",197],["T_COMMENT","\/\/ contexts, may still be an instance of\n",197],["T_WHITESPACE","          ",198],["T_COMMENT","\/\/ \\Drupal\\Component\\Render\\MarkupInterface, so this placeholder type\n",198],["T_WHITESPACE","          ",199],["T_COMMENT","\/\/ must not be used within HTML attributes, JavaScript, or CSS.\n",199],["T_WHITESPACE","          ",200],["T_VARIABLE","$args",200],"[",["T_VARIABLE","$key",200],"]",["T_WHITESPACE"," ",200],"=",["T_WHITESPACE"," ",200],["T_STATIC","static",200],["T_DOUBLE_COLON","::",200],["T_STRING","placeholderEscape",200],"(",["T_VARIABLE","$value",200],")",";",["T_WHITESPACE","\n          ",200],["T_BREAK","break",201],";",["T_WHITESPACE","\n\n        ",201],["T_CASE","case",203],["T_WHITESPACE"," ",203],["T_CONSTANT_ENCAPSED_STRING","':'",203],":",["T_WHITESPACE","\n          ",203],["T_COMMENT","\/\/ Strip URL protocols that can be XSS vectors.\n",204],["T_WHITESPACE","          ",205],["T_VARIABLE","$value",205],["T_WHITESPACE"," ",205],"=",["T_WHITESPACE"," ",205],["T_STRING","UrlHelper",205],["T_DOUBLE_COLON","::",205],["T_STRING","stripDangerousProtocols",205],"(",["T_VARIABLE","$value",205],")",";",["T_WHITESPACE","\n          ",205],["T_COMMENT","\/\/ Escape unconditionally, without checking whether the value is an\n",206],["T_WHITESPACE","          ",207],["T_COMMENT","\/\/ instance of \\Drupal\\Component\\Render\\MarkupInterface. This forces\n",207],["T_WHITESPACE","          ",208],["T_COMMENT","\/\/ characters that are unsafe for use in an \"href\" HTML attribute to\n",208],["T_WHITESPACE","          ",209],["T_COMMENT","\/\/ be encoded. If a caller wants to pass a value that is extracted\n",209],["T_WHITESPACE","          ",210],["T_COMMENT","\/\/ from HTML and therefore is already HTML encoded, it must invoke\n",210],["T_WHITESPACE","          ",211],["T_COMMENT","\/\/ \\Drupal\\Component\\Render\\OutputStrategyInterface::renderFromHtml()\n",211],["T_WHITESPACE","          ",212],["T_COMMENT","\/\/ on it prior to passing it in as a placeholder value of this type.\n",212],["T_WHITESPACE","          ",213],["T_COMMENT","\/\/ @todo Add some advice and stronger warnings.\n",213],["T_WHITESPACE","          ",214],["T_COMMENT","\/\/   https:\/\/www.drupal.org\/node\/2569041.\n",214],["T_WHITESPACE","          ",215],["T_VARIABLE","$args",215],"[",["T_VARIABLE","$key",215],"]",["T_WHITESPACE"," ",215],"=",["T_WHITESPACE"," ",215],["T_STRING","Html",215],["T_DOUBLE_COLON","::",215],["T_STRING","escape",215],"(",["T_VARIABLE","$value",215],")",";",["T_WHITESPACE","\n          ",215],["T_BREAK","break",216],";",["T_WHITESPACE","\n\n        ",216],["T_CASE","case",218],["T_WHITESPACE"," ",218],["T_CONSTANT_ENCAPSED_STRING","'%'",218],":",["T_WHITESPACE","\n          ",218],["T_COMMENT","\/\/ Similarly to @, escape non-safe values. Also, add wrapping markup\n",219],["T_WHITESPACE","          ",220],["T_COMMENT","\/\/ in order to render as a placeholder. Not for use within attributes,\n",220],["T_WHITESPACE","          ",221],["T_COMMENT","\/\/ per the warning above about\n",221],["T_WHITESPACE","          ",222],["T_COMMENT","\/\/ \\Drupal\\Component\\Render\\MarkupInterface and also due to the\n",222],["T_WHITESPACE","          ",223],["T_COMMENT","\/\/ wrapping markup.\n",223],["T_WHITESPACE","          ",224],["T_VARIABLE","$args",224],"[",["T_VARIABLE","$key",224],"]",["T_WHITESPACE"," ",224],"=",["T_WHITESPACE"," ",224],["T_CONSTANT_ENCAPSED_STRING","'<em class=\"placeholder\">'",224],["T_WHITESPACE"," ",224],".",["T_WHITESPACE"," ",224],["T_STATIC","static",224],["T_DOUBLE_COLON","::",224],["T_STRING","placeholderEscape",224],"(",["T_VARIABLE","$value",224],")",["T_WHITESPACE"," ",224],".",["T_WHITESPACE"," ",224],["T_CONSTANT_ENCAPSED_STRING","'<\/em>'",224],";",["T_WHITESPACE","\n          ",224],["T_BREAK","break",225],";",["T_WHITESPACE","\n\n        ",225],["T_DEFAULT","default",227],":",["T_WHITESPACE","\n          ",227],["T_COMMENT","\/\/ We do not trigger an error for placeholder that start with an\n",228],["T_WHITESPACE","          ",229],["T_COMMENT","\/\/ alphabetic character.\n",229],["T_WHITESPACE","          ",230],["T_COMMENT","\/\/ @todo https:\/\/www.drupal.org\/node\/2807743 Change to an exception\n",230],["T_WHITESPACE","          ",231],["T_COMMENT","\/\/   and always throw regardless of the first character.\n",231],["T_WHITESPACE","          ",232],["T_IF","if",232],["T_WHITESPACE"," ",232],"(","!",["T_STRING","ctype_alpha",232],"(",["T_VARIABLE","$key",232],"[",["T_LNUMBER","0",232],"]",")",")",["T_WHITESPACE"," ",232],"{",["T_WHITESPACE","\n            ",232],["T_COMMENT","\/\/ We trigger an error as we may want to introduce new placeholders\n",233],["T_WHITESPACE","            ",234],["T_COMMENT","\/\/ in the future without breaking backward compatibility.\n",234],["T_WHITESPACE","            ",235],["T_STRING","trigger_error",235],"(",["T_CONSTANT_ENCAPSED_STRING","'Invalid placeholder ('",235],["T_WHITESPACE"," ",235],".",["T_WHITESPACE"," ",235],["T_VARIABLE","$key",235],["T_WHITESPACE"," ",235],".",["T_WHITESPACE"," ",235],["T_CONSTANT_ENCAPSED_STRING","') in string: '",235],["T_WHITESPACE"," ",235],".",["T_WHITESPACE"," ",235],["T_VARIABLE","$string",235],",",["T_WHITESPACE"," ",235],["T_STRING","E_USER_ERROR",235],")",";",["T_WHITESPACE","\n          ",235],"}",["T_WHITESPACE","\n          ",236],["T_ELSEIF","elseif",237],["T_WHITESPACE"," ",237],"(",["T_STRING","strpos",237],"(",["T_VARIABLE","$string",237],",",["T_WHITESPACE"," ",237],["T_VARIABLE","$key",237],")",["T_WHITESPACE"," ",237],["T_IS_NOT_IDENTICAL","!==",237],["T_WHITESPACE"," ",237],["T_STRING","FALSE",237],")",["T_WHITESPACE"," ",237],"{",["T_WHITESPACE","\n            ",237],["T_STRING","trigger_error",238],"(",["T_CONSTANT_ENCAPSED_STRING","'Invalid placeholder ('",238],["T_WHITESPACE"," ",238],".",["T_WHITESPACE"," ",238],["T_VARIABLE","$key",238],["T_WHITESPACE"," ",238],".",["T_WHITESPACE"," ",238],["T_CONSTANT_ENCAPSED_STRING","') in string: '",238],["T_WHITESPACE"," ",238],".",["T_WHITESPACE"," ",238],["T_VARIABLE","$string",238],",",["T_WHITESPACE"," ",238],["T_STRING","E_USER_DEPRECATED",238],")",";",["T_WHITESPACE","\n          ",238],"}",["T_WHITESPACE","\n          ",239],["T_COMMENT","\/\/ No replacement possible therefore we can discard the argument.\n",240],["T_WHITESPACE","          ",241],["T_UNSET","unset",241],"(",["T_VARIABLE","$args",241],"[",["T_VARIABLE","$key",241],"]",")",";",["T_WHITESPACE","\n          ",241],["T_BREAK","break",242],";",["T_WHITESPACE","\n      ",242],"}",["T_WHITESPACE","\n    ",243],"}",["T_WHITESPACE","\n\n    ",244],["T_RETURN","return",246],["T_WHITESPACE"," ",246],["T_STRING","strtr",246],"(",["T_VARIABLE","$string",246],",",["T_WHITESPACE"," ",246],["T_VARIABLE","$args",246],")",";",["T_WHITESPACE","\n  ",246],"}",["T_WHITESPACE","\n\n  ",247],["T_DOC_COMMENT","\/**\n   * Escapes a placeholder replacement value if needed.\n   *\n   * @param string|\\Drupal\\Component\\Render\\MarkupInterface $value\n   *   A placeholder replacement value.\n   *\n   * @return string\n   *   The properly escaped replacement value.\n   *\/",249],["T_WHITESPACE","\n  ",257],["T_PROTECTED","protected",258],["T_WHITESPACE"," ",258],["T_STATIC","static",258],["T_WHITESPACE"," ",258],["T_FUNCTION","function",258],["T_WHITESPACE"," ",258],["T_STRING","placeholderEscape",258],"(",["T_VARIABLE","$value",258],")",["T_WHITESPACE"," ",258],"{",["T_WHITESPACE","\n    ",258],["T_RETURN","return",259],["T_WHITESPACE"," ",259],["T_VARIABLE","$value",259],["T_WHITESPACE"," ",259],["T_INSTANCEOF","instanceof",259],["T_WHITESPACE"," ",259],["T_STRING","MarkupInterface",259],["T_WHITESPACE"," ",259],"?",["T_WHITESPACE"," ",259],["T_STRING_CAST","(string)",259],["T_WHITESPACE"," ",259],["T_VARIABLE","$value",259],["T_WHITESPACE"," ",259],":",["T_WHITESPACE"," ",259],["T_STRING","Html",259],["T_DOUBLE_COLON","::",259],["T_STRING","escape",259],"(",["T_VARIABLE","$value",259],")",";",["T_WHITESPACE","\n  ",259],"}",["T_WHITESPACE","\n\n",260],"}",["T_WHITESPACE","\n",262]]