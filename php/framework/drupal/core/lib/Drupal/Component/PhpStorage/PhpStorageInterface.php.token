[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Component",3],["T_NS_SEPARATOR","\\",3],["T_STRING","PhpStorage",3],";",["T_WHITESPACE","\n\n",3],["T_DOC_COMMENT","\/**\n * Stores and loads PHP code.\n *\n * Each interface function takes $name as a parameter. This is a virtual file\n * name: for example, 'foo.php' or 'some\/relative\/path\/to\/foo.php'. The\n * storage implementation may store these as files within the local file system,\n * use a remote stream, combine multiple virtual files into an archive, store\n * them in database records, or use some other storage technique.\n *\/",5],["T_WHITESPACE","\n",13],["T_INTERFACE","interface",14],["T_WHITESPACE"," ",14],["T_STRING","PhpStorageInterface",14],["T_WHITESPACE"," ",14],"{",["T_WHITESPACE","\n\n  ",14],["T_DOC_COMMENT","\/**\n   * Checks whether the PHP code exists in storage.\n   *\n   * @param string $name\n   *   The virtual file name. Can be a relative path.\n   *\n   * @return bool\n   *   TRUE if the virtual file exists, FALSE otherwise.\n   *\/",16],["T_WHITESPACE","\n  ",24],["T_PUBLIC","public",25],["T_WHITESPACE"," ",25],["T_FUNCTION","function",25],["T_WHITESPACE"," ",25],["T_STRING","exists",25],"(",["T_VARIABLE","$name",25],")",";",["T_WHITESPACE","\n\n  ",25],["T_DOC_COMMENT","\/**\n   * Loads PHP code from storage.\n   *\n   * Depending on storage implementation, exists() checks can be expensive, so\n   * this function may be called for a file that doesn't exist, and that should\n   * not result in errors. This function does not return anything, so it is\n   * up to the caller to determine if any code was loaded (for example, check\n   * class_exists() or function_exists() for what was expected in the code).\n   *\n   * @param string $name\n   *   The virtual file name. Can be a relative path.\n   *\/",27],["T_WHITESPACE","\n  ",38],["T_PUBLIC","public",39],["T_WHITESPACE"," ",39],["T_FUNCTION","function",39],["T_WHITESPACE"," ",39],["T_STRING","load",39],"(",["T_VARIABLE","$name",39],")",";",["T_WHITESPACE","\n\n  ",39],["T_DOC_COMMENT","\/**\n   * Saves PHP code to storage.\n   *\n   * @param string $name\n   *   The virtual file name. Can be a relative path.\n   * @param string $code\n   *    The PHP code to be saved.\n   *\n   * @return bool\n   *   TRUE if the save succeeded, FALSE if it failed.\n   *\/",41],["T_WHITESPACE","\n  ",51],["T_PUBLIC","public",52],["T_WHITESPACE"," ",52],["T_FUNCTION","function",52],["T_WHITESPACE"," ",52],["T_STRING","save",52],"(",["T_VARIABLE","$name",52],",",["T_WHITESPACE"," ",52],["T_VARIABLE","$code",52],")",";",["T_WHITESPACE","\n\n  ",52],["T_DOC_COMMENT","\/**\n   * Whether this is a writeable storage.\n   *\n   * @return bool\n   *\/",54],["T_WHITESPACE","\n  ",58],["T_PUBLIC","public",59],["T_WHITESPACE"," ",59],["T_FUNCTION","function",59],["T_WHITESPACE"," ",59],["T_STRING","writeable",59],"(",")",";",["T_WHITESPACE","\n\n  ",59],["T_DOC_COMMENT","\/**\n   * Deletes PHP code from storage.\n   *\n   * @param string $name\n   *   The virtual file name. Can be a relative path.\n   *\n   * @return bool\n   *   TRUE if the delete succeeded, FALSE if it failed.\n   *\/",61],["T_WHITESPACE","\n  ",69],["T_PUBLIC","public",70],["T_WHITESPACE"," ",70],["T_FUNCTION","function",70],["T_WHITESPACE"," ",70],["T_STRING","delete",70],"(",["T_VARIABLE","$name",70],")",";",["T_WHITESPACE","\n\n  ",70],["T_DOC_COMMENT","\/**\n   * Removes all files in this bin.\n   *\/",72],["T_WHITESPACE","\n  ",74],["T_PUBLIC","public",75],["T_WHITESPACE"," ",75],["T_FUNCTION","function",75],["T_WHITESPACE"," ",75],["T_STRING","deleteAll",75],"(",")",";",["T_WHITESPACE","\n\n  ",75],["T_DOC_COMMENT","\/**\n   * Gets the full file path.\n   *\n   * @param string $name\n   *   The virtual file name. Can be a relative path.\n   *\n   * @return string|false\n   *   The full file path for the provided name. Return FALSE if the\n   *   implementation needs to prevent access to the file.\n   *\/",77],["T_WHITESPACE","\n  ",86],["T_PUBLIC","public",87],["T_WHITESPACE"," ",87],["T_FUNCTION","function",87],["T_WHITESPACE"," ",87],["T_STRING","getFullPath",87],"(",["T_VARIABLE","$name",87],")",";",["T_WHITESPACE","\n\n  ",87],["T_DOC_COMMENT","\/**\n   * Lists all the files in the storage.\n   *\n   * @return array\n   *   Array of filenames.\n   *\/",89],["T_WHITESPACE","\n  ",94],["T_PUBLIC","public",95],["T_WHITESPACE"," ",95],["T_FUNCTION","function",95],["T_WHITESPACE"," ",95],["T_STRING","listAll",95],"(",")",";",["T_WHITESPACE","\n\n  ",95],["T_DOC_COMMENT","\/**\n   * Performs garbage collection on the storage.\n   *\n   * The storage may choose to delete expired or invalidated items.\n   *\/",97],["T_WHITESPACE","\n  ",101],["T_PUBLIC","public",102],["T_WHITESPACE"," ",102],["T_FUNCTION","function",102],["T_WHITESPACE"," ",102],["T_STRING","garbageCollection",102],"(",")",";",["T_WHITESPACE","\n\n",102],"}",["T_WHITESPACE","\n",104]]