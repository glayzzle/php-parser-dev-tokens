[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Component",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Utility",3],";",["T_WHITESPACE","\n\n",3],["T_DOC_COMMENT","\/**\n * Performs color conversions.\n *\/",5],["T_WHITESPACE","\n",7],["T_CLASS","class",8],["T_WHITESPACE"," ",8],["T_STRING","Color",8],["T_WHITESPACE"," ",8],"{",["T_WHITESPACE","\n\n  ",8],["T_DOC_COMMENT","\/**\n   * Validates whether a hexadecimal color value is syntactically correct.\n   *\n   * @param $hex\n   *   The hexadecimal string to validate. May contain a leading '#'. May use\n   *   the shorthand notation (e.g., '123' for '112233').\n   *\n   * @return bool\n   *   TRUE if $hex is valid or FALSE if it is not.\n   *\/",10],["T_WHITESPACE","\n  ",19],["T_PUBLIC","public",20],["T_WHITESPACE"," ",20],["T_STATIC","static",20],["T_WHITESPACE"," ",20],["T_FUNCTION","function",20],["T_WHITESPACE"," ",20],["T_STRING","validateHex",20],"(",["T_VARIABLE","$hex",20],")",["T_WHITESPACE"," ",20],"{",["T_WHITESPACE","\n    ",20],["T_COMMENT","\/\/ Must be a string.\n",21],["T_WHITESPACE","    ",22],["T_VARIABLE","$valid",22],["T_WHITESPACE"," ",22],"=",["T_WHITESPACE"," ",22],["T_STRING","is_string",22],"(",["T_VARIABLE","$hex",22],")",";",["T_WHITESPACE","\n    ",22],["T_COMMENT","\/\/ Hash prefix is optional.\n",23],["T_WHITESPACE","    ",24],["T_VARIABLE","$hex",24],["T_WHITESPACE"," ",24],"=",["T_WHITESPACE"," ",24],["T_STRING","ltrim",24],"(",["T_VARIABLE","$hex",24],",",["T_WHITESPACE"," ",24],["T_CONSTANT_ENCAPSED_STRING","'#'",24],")",";",["T_WHITESPACE","\n    ",24],["T_COMMENT","\/\/ Must be either RGB or RRGGBB.\n",25],["T_WHITESPACE","    ",26],["T_VARIABLE","$length",26],["T_WHITESPACE"," ",26],"=",["T_WHITESPACE"," ",26],["T_STRING","Unicode",26],["T_DOUBLE_COLON","::",26],["T_STRING","strlen",26],"(",["T_VARIABLE","$hex",26],")",";",["T_WHITESPACE","\n    ",26],["T_VARIABLE","$valid",27],["T_WHITESPACE"," ",27],"=",["T_WHITESPACE"," ",27],["T_VARIABLE","$valid",27],["T_WHITESPACE"," ",27],["T_BOOLEAN_AND","&&",27],["T_WHITESPACE"," ",27],"(",["T_VARIABLE","$length",27],["T_WHITESPACE"," ",27],["T_IS_IDENTICAL","===",27],["T_WHITESPACE"," ",27],["T_LNUMBER","3",27],["T_WHITESPACE"," ",27],["T_BOOLEAN_OR","||",27],["T_WHITESPACE"," ",27],["T_VARIABLE","$length",27],["T_WHITESPACE"," ",27],["T_IS_IDENTICAL","===",27],["T_WHITESPACE"," ",27],["T_LNUMBER","6",27],")",";",["T_WHITESPACE","\n    ",27],["T_COMMENT","\/\/ Must be a valid hex value.\n",28],["T_WHITESPACE","    ",29],["T_VARIABLE","$valid",29],["T_WHITESPACE"," ",29],"=",["T_WHITESPACE"," ",29],["T_VARIABLE","$valid",29],["T_WHITESPACE"," ",29],["T_BOOLEAN_AND","&&",29],["T_WHITESPACE"," ",29],["T_STRING","ctype_xdigit",29],"(",["T_VARIABLE","$hex",29],")",";",["T_WHITESPACE","\n    ",29],["T_RETURN","return",30],["T_WHITESPACE"," ",30],["T_VARIABLE","$valid",30],";",["T_WHITESPACE","\n  ",30],"}",["T_WHITESPACE","\n\n  ",31],["T_DOC_COMMENT","\/**\n   * Parses a hexadecimal color string like '#abc' or '#aabbcc'.\n   *\n   * @param string $hex\n   *   The hexadecimal color string to parse.\n   *\n   * @return array\n   *   An array containing the values for 'red', 'green', 'blue'.\n   *\n   * @throws \\InvalidArgumentException\n   *\/",33],["T_WHITESPACE","\n  ",43],["T_PUBLIC","public",44],["T_WHITESPACE"," ",44],["T_STATIC","static",44],["T_WHITESPACE"," ",44],["T_FUNCTION","function",44],["T_WHITESPACE"," ",44],["T_STRING","hexToRgb",44],"(",["T_VARIABLE","$hex",44],")",["T_WHITESPACE"," ",44],"{",["T_WHITESPACE","\n    ",44],["T_IF","if",45],["T_WHITESPACE"," ",45],"(","!",["T_STRING","self",45],["T_DOUBLE_COLON","::",45],["T_STRING","validateHex",45],"(",["T_VARIABLE","$hex",45],")",")",["T_WHITESPACE"," ",45],"{",["T_WHITESPACE","\n      ",45],["T_THROW","throw",46],["T_WHITESPACE"," ",46],["T_NEW","new",46],["T_WHITESPACE"," ",46],["T_NS_SEPARATOR","\\",46],["T_STRING","InvalidArgumentException",46],"(","\"",["T_ENCAPSED_AND_WHITESPACE","'",46],["T_VARIABLE","$hex",46],["T_ENCAPSED_AND_WHITESPACE","' is not a valid hex value.",46],"\"",")",";",["T_WHITESPACE","\n    ",46],"}",["T_WHITESPACE","\n\n    ",47],["T_COMMENT","\/\/ Ignore '#' prefixes.\n",49],["T_WHITESPACE","    ",50],["T_VARIABLE","$hex",50],["T_WHITESPACE"," ",50],"=",["T_WHITESPACE"," ",50],["T_STRING","ltrim",50],"(",["T_VARIABLE","$hex",50],",",["T_WHITESPACE"," ",50],["T_CONSTANT_ENCAPSED_STRING","'#'",50],")",";",["T_WHITESPACE","\n\n    ",50],["T_COMMENT","\/\/ Convert shorthands like '#abc' to '#aabbcc'.\n",52],["T_WHITESPACE","    ",53],["T_IF","if",53],["T_WHITESPACE"," ",53],"(",["T_STRING","strlen",53],"(",["T_VARIABLE","$hex",53],")",["T_WHITESPACE"," ",53],["T_IS_EQUAL","==",53],["T_WHITESPACE"," ",53],["T_LNUMBER","3",53],")",["T_WHITESPACE"," ",53],"{",["T_WHITESPACE","\n      ",53],["T_VARIABLE","$hex",54],["T_WHITESPACE"," ",54],"=",["T_WHITESPACE"," ",54],["T_VARIABLE","$hex",54],"[",["T_LNUMBER","0",54],"]",["T_WHITESPACE"," ",54],".",["T_WHITESPACE"," ",54],["T_VARIABLE","$hex",54],"[",["T_LNUMBER","0",54],"]",["T_WHITESPACE"," ",54],".",["T_WHITESPACE"," ",54],["T_VARIABLE","$hex",54],"[",["T_LNUMBER","1",54],"]",["T_WHITESPACE"," ",54],".",["T_WHITESPACE"," ",54],["T_VARIABLE","$hex",54],"[",["T_LNUMBER","1",54],"]",["T_WHITESPACE"," ",54],".",["T_WHITESPACE"," ",54],["T_VARIABLE","$hex",54],"[",["T_LNUMBER","2",54],"]",["T_WHITESPACE"," ",54],".",["T_WHITESPACE"," ",54],["T_VARIABLE","$hex",54],"[",["T_LNUMBER","2",54],"]",";",["T_WHITESPACE","\n    ",54],"}",["T_WHITESPACE","\n\n    ",55],["T_VARIABLE","$c",57],["T_WHITESPACE"," ",57],"=",["T_WHITESPACE"," ",57],["T_STRING","hexdec",57],"(",["T_VARIABLE","$hex",57],")",";",["T_WHITESPACE","\n\n    ",57],["T_RETURN","return",59],["T_WHITESPACE"," ",59],["T_ARRAY","array",59],"(",["T_WHITESPACE","\n      ",59],["T_CONSTANT_ENCAPSED_STRING","'red'",60],["T_WHITESPACE"," ",60],["T_DOUBLE_ARROW","=>",60],["T_WHITESPACE"," ",60],["T_VARIABLE","$c",60],["T_WHITESPACE"," ",60],["T_SR",">>",60],["T_WHITESPACE"," ",60],["T_LNUMBER","16",60],["T_WHITESPACE"," ",60],"&",["T_WHITESPACE"," ",60],["T_LNUMBER","0xFF",60],",",["T_WHITESPACE","\n      ",60],["T_CONSTANT_ENCAPSED_STRING","'green'",61],["T_WHITESPACE"," ",61],["T_DOUBLE_ARROW","=>",61],["T_WHITESPACE"," ",61],["T_VARIABLE","$c",61],["T_WHITESPACE"," ",61],["T_SR",">>",61],["T_WHITESPACE"," ",61],["T_LNUMBER","8",61],["T_WHITESPACE"," ",61],"&",["T_WHITESPACE"," ",61],["T_LNUMBER","0xFF",61],",",["T_WHITESPACE","\n      ",61],["T_CONSTANT_ENCAPSED_STRING","'blue'",62],["T_WHITESPACE"," ",62],["T_DOUBLE_ARROW","=>",62],["T_WHITESPACE"," ",62],["T_VARIABLE","$c",62],["T_WHITESPACE"," ",62],"&",["T_WHITESPACE"," ",62],["T_LNUMBER","0xFF",62],",",["T_WHITESPACE","\n    ",62],")",";",["T_WHITESPACE","\n  ",63],"}",["T_WHITESPACE","\n\n  ",64],["T_DOC_COMMENT","\/**\n   * Converts RGB color arrays and RGB strings in CSS notation to lowercase\n   * simple colors like '#aabbcc'.\n   *\n   * @param array|string $input\n   *   The value to convert. If the value is an array the first three elements\n   *   will be used as the red, green and blue components. String values in CSS\n   *   notation like '10, 20, 30' are also supported.\n   *\n   * @return string\n   *   The lowercase simple color representation of the given color.\n   *\/",66],["T_WHITESPACE","\n  ",77],["T_PUBLIC","public",78],["T_WHITESPACE"," ",78],["T_STATIC","static",78],["T_WHITESPACE"," ",78],["T_FUNCTION","function",78],["T_WHITESPACE"," ",78],["T_STRING","rgbToHex",78],"(",["T_VARIABLE","$input",78],")",["T_WHITESPACE"," ",78],"{",["T_WHITESPACE","\n    ",78],["T_COMMENT","\/\/ Remove named array keys if input comes from Color::hex2rgb().\n",79],["T_WHITESPACE","    ",80],["T_IF","if",80],["T_WHITESPACE"," ",80],"(",["T_STRING","is_array",80],"(",["T_VARIABLE","$input",80],")",")",["T_WHITESPACE"," ",80],"{",["T_WHITESPACE","\n      ",80],["T_VARIABLE","$rgb",81],["T_WHITESPACE"," ",81],"=",["T_WHITESPACE"," ",81],["T_STRING","array_values",81],"(",["T_VARIABLE","$input",81],")",";",["T_WHITESPACE","\n    ",81],"}",["T_WHITESPACE","\n    ",82],["T_COMMENT","\/\/ Parse string input in CSS notation ('10, 20, 30').\n",83],["T_WHITESPACE","    ",84],["T_ELSEIF","elseif",84],["T_WHITESPACE"," ",84],"(",["T_STRING","is_string",84],"(",["T_VARIABLE","$input",84],")",")",["T_WHITESPACE"," ",84],"{",["T_WHITESPACE","\n      ",84],["T_STRING","preg_match",85],"(",["T_CONSTANT_ENCAPSED_STRING","'\/(\\d+), ?(\\d+), ?(\\d+)\/'",85],",",["T_WHITESPACE"," ",85],["T_VARIABLE","$input",85],",",["T_WHITESPACE"," ",85],["T_VARIABLE","$rgb",85],")",";",["T_WHITESPACE","\n      ",85],["T_STRING","array_shift",86],"(",["T_VARIABLE","$rgb",86],")",";",["T_WHITESPACE","\n    ",86],"}",["T_WHITESPACE","\n\n    ",87],["T_VARIABLE","$out",89],["T_WHITESPACE"," ",89],"=",["T_WHITESPACE"," ",89],["T_LNUMBER","0",89],";",["T_WHITESPACE","\n    ",89],["T_FOREACH","foreach",90],["T_WHITESPACE"," ",90],"(",["T_VARIABLE","$rgb",90],["T_WHITESPACE"," ",90],["T_AS","as",90],["T_WHITESPACE"," ",90],["T_VARIABLE","$k",90],["T_WHITESPACE"," ",90],["T_DOUBLE_ARROW","=>",90],["T_WHITESPACE"," ",90],["T_VARIABLE","$v",90],")",["T_WHITESPACE"," ",90],"{",["T_WHITESPACE","\n      ",90],["T_VARIABLE","$out",91],["T_WHITESPACE"," ",91],["T_OR_EQUAL","|=",91],["T_WHITESPACE"," ",91],["T_VARIABLE","$v",91],["T_WHITESPACE"," ",91],["T_SL","<<",91],["T_WHITESPACE"," ",91],"(",["T_LNUMBER","16",91],["T_WHITESPACE"," ",91],"-",["T_WHITESPACE"," ",91],["T_VARIABLE","$k",91],["T_WHITESPACE"," ",91],"*",["T_WHITESPACE"," ",91],["T_LNUMBER","8",91],")",";",["T_WHITESPACE","\n    ",91],"}",["T_WHITESPACE","\n\n    ",92],["T_RETURN","return",94],["T_WHITESPACE"," ",94],["T_CONSTANT_ENCAPSED_STRING","'#'",94],["T_WHITESPACE"," ",94],".",["T_WHITESPACE"," ",94],["T_STRING","str_pad",94],"(",["T_STRING","dechex",94],"(",["T_VARIABLE","$out",94],")",",",["T_WHITESPACE"," ",94],["T_LNUMBER","6",94],",",["T_WHITESPACE"," ",94],["T_LNUMBER","0",94],",",["T_WHITESPACE"," ",94],["T_STRING","STR_PAD_LEFT",94],")",";",["T_WHITESPACE","\n  ",94],"}",["T_WHITESPACE","\n\n",95],"}",["T_WHITESPACE","\n",97]]