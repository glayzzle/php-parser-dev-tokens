[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Component",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Utility",3],";",["T_WHITESPACE","\n\n",3],["T_DOC_COMMENT","\/**\n * Rectangle rotation algebra class.\n *\n * This class is used by the image system to abstract, from toolkit\n * implementations, the calculation of the expected dimensions resulting from\n * an image rotate operation.\n *\n * Different versions of PHP for the GD toolkit, and alternative toolkits, use\n * different algorithms to perform the rotation of an image and result in\n * different dimensions of the output image. This prevents predictability of\n * the final image size for instance by the image rotate effect, or by image\n * toolkit rotate operations.\n *\n * This class implements a calculation algorithm that returns, given input\n * width, height and rotation angle, dimensions of the expected image after\n * rotation that are consistent with those produced by the GD rotate image\n * toolkit operation using PHP 5.5 and above.\n *\n * @see \\Drupal\\system\\Plugin\\ImageToolkit\\Operation\\gd\\Rotate\n *\/",5],["T_WHITESPACE","\n",24],["T_CLASS","class",25],["T_WHITESPACE"," ",25],["T_STRING","Rectangle",25],["T_WHITESPACE"," ",25],"{",["T_WHITESPACE","\n\n  ",25],["T_DOC_COMMENT","\/**\n   * The width of the rectangle.\n   *\n   * @var int\n   *\/",27],["T_WHITESPACE","\n  ",31],["T_PROTECTED","protected",32],["T_WHITESPACE"," ",32],["T_VARIABLE","$width",32],";",["T_WHITESPACE","\n\n  ",32],["T_DOC_COMMENT","\/**\n   * The height of the rectangle.\n   *\n   * @var int\n   *\/",34],["T_WHITESPACE","\n  ",38],["T_PROTECTED","protected",39],["T_WHITESPACE"," ",39],["T_VARIABLE","$height",39],";",["T_WHITESPACE","\n\n  ",39],["T_DOC_COMMENT","\/**\n   * The width of the rotated rectangle.\n   *\n   * @var int\n   *\/",41],["T_WHITESPACE","\n  ",45],["T_PROTECTED","protected",46],["T_WHITESPACE"," ",46],["T_VARIABLE","$boundingWidth",46],";",["T_WHITESPACE","\n\n  ",46],["T_DOC_COMMENT","\/**\n   * The height of the rotated rectangle.\n   *\n   * @var int\n   *\/",48],["T_WHITESPACE","\n  ",52],["T_PROTECTED","protected",53],["T_WHITESPACE"," ",53],["T_VARIABLE","$boundingHeight",53],";",["T_WHITESPACE","\n\n  ",53],["T_DOC_COMMENT","\/**\n   * Constructs a new Rectangle object.\n   *\n   * @param int $width\n   *   The width of the rectangle.\n   * @param int $height\n   *   The height of the rectangle.\n   *\/",55],["T_WHITESPACE","\n  ",62],["T_PUBLIC","public",63],["T_WHITESPACE"," ",63],["T_FUNCTION","function",63],["T_WHITESPACE"," ",63],["T_STRING","__construct",63],"(",["T_VARIABLE","$width",63],",",["T_WHITESPACE"," ",63],["T_VARIABLE","$height",63],")",["T_WHITESPACE"," ",63],"{",["T_WHITESPACE","\n    ",63],["T_IF","if",64],["T_WHITESPACE"," ",64],"(",["T_VARIABLE","$width",64],["T_WHITESPACE"," ",64],">",["T_WHITESPACE"," ",64],["T_LNUMBER","0",64],["T_WHITESPACE"," ",64],["T_BOOLEAN_AND","&&",64],["T_WHITESPACE"," ",64],["T_VARIABLE","$height",64],["T_WHITESPACE"," ",64],">",["T_WHITESPACE"," ",64],["T_LNUMBER","0",64],")",["T_WHITESPACE"," ",64],"{",["T_WHITESPACE","\n      ",64],["T_VARIABLE","$this",65],["T_OBJECT_OPERATOR","->",65],["T_STRING","width",65],["T_WHITESPACE"," ",65],"=",["T_WHITESPACE"," ",65],["T_VARIABLE","$width",65],";",["T_WHITESPACE","\n      ",65],["T_VARIABLE","$this",66],["T_OBJECT_OPERATOR","->",66],["T_STRING","height",66],["T_WHITESPACE"," ",66],"=",["T_WHITESPACE"," ",66],["T_VARIABLE","$height",66],";",["T_WHITESPACE","\n      ",66],["T_VARIABLE","$this",67],["T_OBJECT_OPERATOR","->",67],["T_STRING","boundingWidth",67],["T_WHITESPACE"," ",67],"=",["T_WHITESPACE"," ",67],["T_VARIABLE","$width",67],";",["T_WHITESPACE","\n      ",67],["T_VARIABLE","$this",68],["T_OBJECT_OPERATOR","->",68],["T_STRING","boundingHeight",68],["T_WHITESPACE"," ",68],"=",["T_WHITESPACE"," ",68],["T_VARIABLE","$height",68],";",["T_WHITESPACE","\n    ",68],"}",["T_WHITESPACE","\n    ",69],["T_ELSE","else",70],["T_WHITESPACE"," ",70],"{",["T_WHITESPACE","\n      ",70],["T_THROW","throw",71],["T_WHITESPACE"," ",71],["T_NEW","new",71],["T_WHITESPACE"," ",71],["T_NS_SEPARATOR","\\",71],["T_STRING","InvalidArgumentException",71],"(","\"",["T_ENCAPSED_AND_WHITESPACE","Invalid dimensions (",71],["T_CURLY_OPEN","{",71],["T_VARIABLE","$width",71],"}",["T_ENCAPSED_AND_WHITESPACE","x",71],["T_CURLY_OPEN","{",71],["T_VARIABLE","$height",71],"}",["T_ENCAPSED_AND_WHITESPACE",") specified for a Rectangle object",71],"\"",")",";",["T_WHITESPACE","\n    ",71],"}",["T_WHITESPACE","\n  ",72],"}",["T_WHITESPACE","\n\n  ",73],["T_DOC_COMMENT","\/**\n   * Rotates the rectangle.\n   *\n   * @param float $angle\n   *   Rotation angle.\n   *\n   * @return $this\n   *\/",75],["T_WHITESPACE","\n  ",82],["T_PUBLIC","public",83],["T_WHITESPACE"," ",83],["T_FUNCTION","function",83],["T_WHITESPACE"," ",83],["T_STRING","rotate",83],"(",["T_VARIABLE","$angle",83],")",["T_WHITESPACE"," ",83],"{",["T_WHITESPACE","\n    ",83],["T_COMMENT","\/\/ PHP 5.5 GD bug: https:\/\/bugs.php.net\/bug.php?id=65148: To prevent buggy\n",84],["T_WHITESPACE","    ",85],["T_COMMENT","\/\/ behavior on negative multiples of 30 degrees we convert any negative\n",85],["T_WHITESPACE","    ",86],["T_COMMENT","\/\/ angle to a positive one between 0 and 360 degrees.\n",86],["T_WHITESPACE","    ",87],["T_VARIABLE","$angle",87],["T_WHITESPACE"," ",87],["T_MINUS_EQUAL","-=",87],["T_WHITESPACE"," ",87],["T_STRING","floor",87],"(",["T_VARIABLE","$angle",87],["T_WHITESPACE"," ",87],"\/",["T_WHITESPACE"," ",87],["T_LNUMBER","360",87],")",["T_WHITESPACE"," ",87],"*",["T_WHITESPACE"," ",87],["T_LNUMBER","360",87],";",["T_WHITESPACE","\n\n    ",87],["T_COMMENT","\/\/ For some rotations that are multiple of 30 degrees, we need to correct\n",89],["T_WHITESPACE","    ",90],["T_COMMENT","\/\/ an imprecision between GD that uses C floats internally, and PHP that\n",90],["T_WHITESPACE","    ",91],["T_COMMENT","\/\/ uses C doubles. Also, for rotations that are not multiple of 90 degrees,\n",91],["T_WHITESPACE","    ",92],["T_COMMENT","\/\/ we need to introduce a correction factor of 0.5 to match the GD\n",92],["T_WHITESPACE","    ",93],["T_COMMENT","\/\/ algorithm used in PHP 5.5 (and above) to calculate the width and height\n",93],["T_WHITESPACE","    ",94],["T_COMMENT","\/\/ of the rotated image.\n",94],["T_WHITESPACE","    ",95],["T_IF","if",95],["T_WHITESPACE"," ",95],"(",["T_INT_CAST","(int)",95],["T_WHITESPACE"," ",95],["T_VARIABLE","$angle",95],["T_WHITESPACE"," ",95],["T_IS_EQUAL","==",95],["T_WHITESPACE"," ",95],["T_VARIABLE","$angle",95],["T_WHITESPACE"," ",95],["T_BOOLEAN_AND","&&",95],["T_WHITESPACE"," ",95],["T_VARIABLE","$angle",95],["T_WHITESPACE"," ",95],"%",["T_WHITESPACE"," ",95],["T_LNUMBER","90",95],["T_WHITESPACE"," ",95],["T_IS_EQUAL","==",95],["T_WHITESPACE"," ",95],["T_LNUMBER","0",95],")",["T_WHITESPACE"," ",95],"{",["T_WHITESPACE","\n      ",95],["T_VARIABLE","$imprecision",96],["T_WHITESPACE"," ",96],"=",["T_WHITESPACE"," ",96],["T_LNUMBER","0",96],";",["T_WHITESPACE","\n      ",96],["T_VARIABLE","$correction",97],["T_WHITESPACE"," ",97],"=",["T_WHITESPACE"," ",97],["T_LNUMBER","0",97],";",["T_WHITESPACE","\n    ",97],"}",["T_WHITESPACE","\n    ",98],["T_ELSE","else",99],["T_WHITESPACE"," ",99],"{",["T_WHITESPACE","\n      ",99],["T_VARIABLE","$imprecision",100],["T_WHITESPACE"," ",100],"=",["T_WHITESPACE"," ",100],"-",["T_DNUMBER","0.00001",100],";",["T_WHITESPACE","\n      ",100],["T_VARIABLE","$correction",101],["T_WHITESPACE"," ",101],"=",["T_WHITESPACE"," ",101],["T_DNUMBER","0.5",101],";",["T_WHITESPACE","\n    ",101],"}",["T_WHITESPACE","\n\n    ",102],["T_COMMENT","\/\/ Do the trigonometry, applying imprecision fixes where needed.\n",104],["T_WHITESPACE","    ",105],["T_VARIABLE","$rad",105],["T_WHITESPACE"," ",105],"=",["T_WHITESPACE"," ",105],["T_STRING","deg2rad",105],"(",["T_VARIABLE","$angle",105],")",";",["T_WHITESPACE","\n    ",105],["T_VARIABLE","$cos",106],["T_WHITESPACE"," ",106],"=",["T_WHITESPACE"," ",106],["T_STRING","cos",106],"(",["T_VARIABLE","$rad",106],")",";",["T_WHITESPACE","\n    ",106],["T_VARIABLE","$sin",107],["T_WHITESPACE"," ",107],"=",["T_WHITESPACE"," ",107],["T_STRING","sin",107],"(",["T_VARIABLE","$rad",107],")",";",["T_WHITESPACE","\n    ",107],["T_VARIABLE","$a",108],["T_WHITESPACE"," ",108],"=",["T_WHITESPACE"," ",108],["T_VARIABLE","$this",108],["T_OBJECT_OPERATOR","->",108],["T_STRING","width",108],["T_WHITESPACE"," ",108],"*",["T_WHITESPACE"," ",108],["T_VARIABLE","$cos",108],";",["T_WHITESPACE","\n    ",108],["T_VARIABLE","$b",109],["T_WHITESPACE"," ",109],"=",["T_WHITESPACE"," ",109],["T_VARIABLE","$this",109],["T_OBJECT_OPERATOR","->",109],["T_STRING","height",109],["T_WHITESPACE"," ",109],"*",["T_WHITESPACE"," ",109],["T_VARIABLE","$sin",109],["T_WHITESPACE"," ",109],"+",["T_WHITESPACE"," ",109],["T_VARIABLE","$correction",109],";",["T_WHITESPACE","\n    ",109],["T_VARIABLE","$c",110],["T_WHITESPACE"," ",110],"=",["T_WHITESPACE"," ",110],["T_VARIABLE","$this",110],["T_OBJECT_OPERATOR","->",110],["T_STRING","width",110],["T_WHITESPACE"," ",110],"*",["T_WHITESPACE"," ",110],["T_VARIABLE","$sin",110],";",["T_WHITESPACE","\n    ",110],["T_VARIABLE","$d",111],["T_WHITESPACE"," ",111],"=",["T_WHITESPACE"," ",111],["T_VARIABLE","$this",111],["T_OBJECT_OPERATOR","->",111],["T_STRING","height",111],["T_WHITESPACE"," ",111],"*",["T_WHITESPACE"," ",111],["T_VARIABLE","$cos",111],["T_WHITESPACE"," ",111],"+",["T_WHITESPACE"," ",111],["T_VARIABLE","$correction",111],";",["T_WHITESPACE","\n    ",111],["T_IF","if",112],["T_WHITESPACE"," ",112],"(",["T_INT_CAST","(int)",112],["T_WHITESPACE"," ",112],["T_VARIABLE","$angle",112],["T_WHITESPACE"," ",112],["T_IS_EQUAL","==",112],["T_WHITESPACE"," ",112],["T_VARIABLE","$angle",112],["T_WHITESPACE"," ",112],["T_BOOLEAN_AND","&&",112],["T_WHITESPACE"," ",112],["T_STRING","in_array",112],"(",["T_VARIABLE","$angle",112],",",["T_WHITESPACE"," ",112],"[",["T_LNUMBER","60",112],",",["T_WHITESPACE"," ",112],["T_LNUMBER","150",112],",",["T_WHITESPACE"," ",112],["T_LNUMBER","300",112],"]",")",")",["T_WHITESPACE"," ",112],"{",["T_WHITESPACE","\n      ",112],["T_VARIABLE","$a",113],["T_WHITESPACE"," ",113],"=",["T_WHITESPACE"," ",113],["T_VARIABLE","$this",113],["T_OBJECT_OPERATOR","->",113],["T_STRING","fixImprecision",113],"(",["T_VARIABLE","$a",113],",",["T_WHITESPACE"," ",113],["T_VARIABLE","$imprecision",113],")",";",["T_WHITESPACE","\n      ",113],["T_VARIABLE","$b",114],["T_WHITESPACE"," ",114],"=",["T_WHITESPACE"," ",114],["T_VARIABLE","$this",114],["T_OBJECT_OPERATOR","->",114],["T_STRING","fixImprecision",114],"(",["T_VARIABLE","$b",114],",",["T_WHITESPACE"," ",114],["T_VARIABLE","$imprecision",114],")",";",["T_WHITESPACE","\n      ",114],["T_VARIABLE","$c",115],["T_WHITESPACE"," ",115],"=",["T_WHITESPACE"," ",115],["T_VARIABLE","$this",115],["T_OBJECT_OPERATOR","->",115],["T_STRING","fixImprecision",115],"(",["T_VARIABLE","$c",115],",",["T_WHITESPACE"," ",115],["T_VARIABLE","$imprecision",115],")",";",["T_WHITESPACE","\n      ",115],["T_VARIABLE","$d",116],["T_WHITESPACE"," ",116],"=",["T_WHITESPACE"," ",116],["T_VARIABLE","$this",116],["T_OBJECT_OPERATOR","->",116],["T_STRING","fixImprecision",116],"(",["T_VARIABLE","$d",116],",",["T_WHITESPACE"," ",116],["T_VARIABLE","$imprecision",116],")",";",["T_WHITESPACE","\n    ",116],"}",["T_WHITESPACE","\n\n    ",117],["T_COMMENT","\/\/ This is how GD on PHP5.5 calculates the new dimensions.\n",119],["T_WHITESPACE","    ",120],["T_VARIABLE","$this",120],["T_OBJECT_OPERATOR","->",120],["T_STRING","boundingWidth",120],["T_WHITESPACE"," ",120],"=",["T_WHITESPACE"," ",120],["T_STRING","abs",120],"(",["T_INT_CAST","(int)",120],["T_WHITESPACE"," ",120],["T_VARIABLE","$a",120],")",["T_WHITESPACE"," ",120],"+",["T_WHITESPACE"," ",120],["T_STRING","abs",120],"(",["T_INT_CAST","(int)",120],["T_WHITESPACE"," ",120],["T_VARIABLE","$b",120],")",";",["T_WHITESPACE","\n    ",120],["T_VARIABLE","$this",121],["T_OBJECT_OPERATOR","->",121],["T_STRING","boundingHeight",121],["T_WHITESPACE"," ",121],"=",["T_WHITESPACE"," ",121],["T_STRING","abs",121],"(",["T_INT_CAST","(int)",121],["T_WHITESPACE"," ",121],["T_VARIABLE","$c",121],")",["T_WHITESPACE"," ",121],"+",["T_WHITESPACE"," ",121],["T_STRING","abs",121],"(",["T_INT_CAST","(int)",121],["T_WHITESPACE"," ",121],["T_VARIABLE","$d",121],")",";",["T_WHITESPACE","\n\n    ",121],["T_RETURN","return",123],["T_WHITESPACE"," ",123],["T_VARIABLE","$this",123],";",["T_WHITESPACE","\n  ",123],"}",["T_WHITESPACE","\n\n  ",124],["T_DOC_COMMENT","\/**\n   * Performs an imprecision check on the input value and fixes it if needed.\n   *\n   * GD that uses C floats internally, whereas we at PHP level use C doubles.\n   * In some cases, we need to compensate imprecision.\n   *\n   * @param float $input\n   *   The input value.\n   * @param float $imprecision\n   *   The imprecision factor.\n   *\n   * @return float\n   *   A value, where imprecision is added to input if the delta part of the\n   *   input is lower than the absolute imprecision.\n   *\/",126],["T_WHITESPACE","\n  ",140],["T_PROTECTED","protected",141],["T_WHITESPACE"," ",141],["T_FUNCTION","function",141],["T_WHITESPACE"," ",141],["T_STRING","fixImprecision",141],"(",["T_VARIABLE","$input",141],",",["T_WHITESPACE"," ",141],["T_VARIABLE","$imprecision",141],")",["T_WHITESPACE"," ",141],"{",["T_WHITESPACE","\n    ",141],["T_IF","if",142],["T_WHITESPACE"," ",142],"(",["T_VARIABLE","$this",142],["T_OBJECT_OPERATOR","->",142],["T_STRING","delta",142],"(",["T_VARIABLE","$input",142],")",["T_WHITESPACE"," ",142],"<",["T_WHITESPACE"," ",142],["T_STRING","abs",142],"(",["T_VARIABLE","$imprecision",142],")",")",["T_WHITESPACE"," ",142],"{",["T_WHITESPACE","\n      ",142],["T_RETURN","return",143],["T_WHITESPACE"," ",143],["T_VARIABLE","$input",143],["T_WHITESPACE"," ",143],"+",["T_WHITESPACE"," ",143],["T_VARIABLE","$imprecision",143],";",["T_WHITESPACE","\n    ",143],"}",["T_WHITESPACE","\n    ",144],["T_RETURN","return",145],["T_WHITESPACE"," ",145],["T_VARIABLE","$input",145],";",["T_WHITESPACE","\n  ",145],"}",["T_WHITESPACE","\n\n  ",146],["T_DOC_COMMENT","\/**\n   * Returns the fractional part of a float number, unsigned.\n   *\n   * @param float $input\n   *   The input value.\n   *\n   * @return float\n   *   The fractional part of the input number, unsigned.\n   *\/",148],["T_WHITESPACE","\n  ",156],["T_PROTECTED","protected",157],["T_WHITESPACE"," ",157],["T_FUNCTION","function",157],["T_WHITESPACE"," ",157],["T_STRING","fraction",157],"(",["T_VARIABLE","$input",157],")",["T_WHITESPACE"," ",157],"{",["T_WHITESPACE","\n    ",157],["T_RETURN","return",158],["T_WHITESPACE"," ",158],["T_STRING","abs",158],"(",["T_INT_CAST","(int)",158],["T_WHITESPACE"," ",158],["T_VARIABLE","$input",158],["T_WHITESPACE"," ",158],"-",["T_WHITESPACE"," ",158],["T_VARIABLE","$input",158],")",";",["T_WHITESPACE","\n  ",158],"}",["T_WHITESPACE","\n\n  ",159],["T_DOC_COMMENT","\/**\n   * Returns the difference of a fraction from the closest between 0 and 1.\n   *\n   * @param float $input\n   *   The input value.\n   *\n   * @return float\n   *   the difference of a fraction from the closest between 0 and 1.\n   *\/",161],["T_WHITESPACE","\n  ",169],["T_PROTECTED","protected",170],["T_WHITESPACE"," ",170],["T_FUNCTION","function",170],["T_WHITESPACE"," ",170],["T_STRING","delta",170],"(",["T_VARIABLE","$input",170],")",["T_WHITESPACE"," ",170],"{",["T_WHITESPACE","\n    ",170],["T_VARIABLE","$fraction",171],["T_WHITESPACE"," ",171],"=",["T_WHITESPACE"," ",171],["T_VARIABLE","$this",171],["T_OBJECT_OPERATOR","->",171],["T_STRING","fraction",171],"(",["T_VARIABLE","$input",171],")",";",["T_WHITESPACE","\n    ",171],["T_RETURN","return",172],["T_WHITESPACE"," ",172],["T_VARIABLE","$fraction",172],["T_WHITESPACE"," ",172],">",["T_WHITESPACE"," ",172],["T_DNUMBER","0.5",172],["T_WHITESPACE"," ",172],"?",["T_WHITESPACE"," ",172],"(",["T_LNUMBER","1",172],["T_WHITESPACE"," ",172],"-",["T_WHITESPACE"," ",172],["T_VARIABLE","$fraction",172],")",["T_WHITESPACE"," ",172],":",["T_WHITESPACE"," ",172],["T_VARIABLE","$fraction",172],";",["T_WHITESPACE","\n  ",172],"}",["T_WHITESPACE","\n\n  ",173],["T_DOC_COMMENT","\/**\n   * Gets the bounding width of the rectangle.\n   *\n   * @return int\n   *   The bounding width of the rotated rectangle.\n   *\/",175],["T_WHITESPACE","\n  ",180],["T_PUBLIC","public",181],["T_WHITESPACE"," ",181],["T_FUNCTION","function",181],["T_WHITESPACE"," ",181],["T_STRING","getBoundingWidth",181],"(",")",["T_WHITESPACE"," ",181],"{",["T_WHITESPACE","\n    ",181],["T_RETURN","return",182],["T_WHITESPACE"," ",182],["T_VARIABLE","$this",182],["T_OBJECT_OPERATOR","->",182],["T_STRING","boundingWidth",182],";",["T_WHITESPACE","\n  ",182],"}",["T_WHITESPACE","\n\n  ",183],["T_DOC_COMMENT","\/**\n   * Gets the bounding height of the rectangle.\n   *\n   * @return int\n   *   The bounding height of the rotated rectangle.\n   *\/",185],["T_WHITESPACE","\n  ",190],["T_PUBLIC","public",191],["T_WHITESPACE"," ",191],["T_FUNCTION","function",191],["T_WHITESPACE"," ",191],["T_STRING","getBoundingHeight",191],"(",")",["T_WHITESPACE"," ",191],"{",["T_WHITESPACE","\n    ",191],["T_RETURN","return",192],["T_WHITESPACE"," ",192],["T_VARIABLE","$this",192],["T_OBJECT_OPERATOR","->",192],["T_STRING","boundingHeight",192],";",["T_WHITESPACE","\n  ",192],"}",["T_WHITESPACE","\n\n",193],"}",["T_WHITESPACE","\n",195]]