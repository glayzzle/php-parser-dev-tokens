[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Component",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Utility",3],";",["T_WHITESPACE","\n\n",3],["T_DOC_COMMENT","\/**\n * Provides DOMDocument helpers for parsing and serializing HTML strings.\n *\n * @ingroup utility\n *\/",5],["T_WHITESPACE","\n",9],["T_CLASS","class",10],["T_WHITESPACE"," ",10],["T_STRING","Html",10],["T_WHITESPACE"," ",10],"{",["T_WHITESPACE","\n\n  ",10],["T_DOC_COMMENT","\/**\n   * An array of previously cleaned HTML classes.\n   *\n   * @var array\n   *\/",12],["T_WHITESPACE","\n  ",16],["T_PROTECTED","protected",17],["T_WHITESPACE"," ",17],["T_STATIC","static",17],["T_WHITESPACE"," ",17],["T_VARIABLE","$classes",17],["T_WHITESPACE"," ",17],"=",["T_WHITESPACE"," ",17],["T_ARRAY","array",17],"(",")",";",["T_WHITESPACE","\n\n  ",17],["T_DOC_COMMENT","\/**\n   * An array of the initial IDs used in one request.\n   *\n   * @var array\n   *\/",19],["T_WHITESPACE","\n  ",23],["T_PROTECTED","protected",24],["T_WHITESPACE"," ",24],["T_STATIC","static",24],["T_WHITESPACE"," ",24],["T_VARIABLE","$seenIdsInit",24],";",["T_WHITESPACE","\n\n  ",24],["T_DOC_COMMENT","\/**\n   * An array of IDs, including incremented versions when an ID is duplicated.\n   * @var array\n   *\/",26],["T_WHITESPACE","\n  ",29],["T_PROTECTED","protected",30],["T_WHITESPACE"," ",30],["T_STATIC","static",30],["T_WHITESPACE"," ",30],["T_VARIABLE","$seenIds",30],";",["T_WHITESPACE","\n\n  ",30],["T_DOC_COMMENT","\/**\n   * Stores whether the current request was sent via AJAX.\n   *\n   * @var bool\n   *\/",32],["T_WHITESPACE","\n  ",36],["T_PROTECTED","protected",37],["T_WHITESPACE"," ",37],["T_STATIC","static",37],["T_WHITESPACE"," ",37],["T_VARIABLE","$isAjax",37],["T_WHITESPACE"," ",37],"=",["T_WHITESPACE"," ",37],["T_STRING","FALSE",37],";",["T_WHITESPACE","\n\n  ",37],["T_DOC_COMMENT","\/**\n   * All attributes that may contain URIs.\n   *\n   * - The attributes 'code' and 'codebase' are omitted, because they only exist\n   *   for the <applet> tag. The time of Java applets has passed.\n   * - The attribute 'icon' is omitted, because no browser implements the\n   *   <command> tag anymore.\n   *  See https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTML\/Element\/command.\n   * - The 'manifest' attribute is omitted because it only exists for the <html>\n   *   tag. That tag only makes sense in a HTML-served-as-HTML context, in which\n   *   case relative URLs are guaranteed to work.\n   *\n   * @see https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTML\/Attributes\n   * @see https:\/\/stackoverflow.com\/questions\/2725156\/complete-list-of-html-tag-attributes-which-have-a-url-value\n   *\n   * @var string[]\n   *\/",39],["T_WHITESPACE","\n  ",55],["T_PROTECTED","protected",56],["T_WHITESPACE"," ",56],["T_STATIC","static",56],["T_WHITESPACE"," ",56],["T_VARIABLE","$uriAttributes",56],["T_WHITESPACE"," ",56],"=",["T_WHITESPACE"," ",56],"[",["T_CONSTANT_ENCAPSED_STRING","'href'",56],",",["T_WHITESPACE"," ",56],["T_CONSTANT_ENCAPSED_STRING","'poster'",56],",",["T_WHITESPACE"," ",56],["T_CONSTANT_ENCAPSED_STRING","'src'",56],",",["T_WHITESPACE"," ",56],["T_CONSTANT_ENCAPSED_STRING","'cite'",56],",",["T_WHITESPACE"," ",56],["T_CONSTANT_ENCAPSED_STRING","'data'",56],",",["T_WHITESPACE"," ",56],["T_CONSTANT_ENCAPSED_STRING","'action'",56],",",["T_WHITESPACE"," ",56],["T_CONSTANT_ENCAPSED_STRING","'formaction'",56],",",["T_WHITESPACE"," ",56],["T_CONSTANT_ENCAPSED_STRING","'srcset'",56],",",["T_WHITESPACE"," ",56],["T_CONSTANT_ENCAPSED_STRING","'about'",56],"]",";",["T_WHITESPACE","\n\n  ",56],["T_DOC_COMMENT","\/**\n   * Prepares a string for use as a valid class name.\n   *\n   * Do not pass one string containing multiple classes as they will be\n   * incorrectly concatenated with dashes, i.e. \"one two\" will become \"one-two\".\n   *\n   * @param string $class\n   *   The class name to clean.\n   *\n   * @return string\n   *   The cleaned class name.\n   *\/",58],["T_WHITESPACE","\n  ",69],["T_PUBLIC","public",70],["T_WHITESPACE"," ",70],["T_STATIC","static",70],["T_WHITESPACE"," ",70],["T_FUNCTION","function",70],["T_WHITESPACE"," ",70],["T_STRING","getClass",70],"(",["T_VARIABLE","$class",70],")",["T_WHITESPACE"," ",70],"{",["T_WHITESPACE","\n    ",70],["T_IF","if",71],["T_WHITESPACE"," ",71],"(","!",["T_ISSET","isset",71],"(",["T_STATIC","static",71],["T_DOUBLE_COLON","::",71],["T_VARIABLE","$classes",71],"[",["T_VARIABLE","$class",71],"]",")",")",["T_WHITESPACE"," ",71],"{",["T_WHITESPACE","\n      ",71],["T_STATIC","static",72],["T_DOUBLE_COLON","::",72],["T_VARIABLE","$classes",72],"[",["T_VARIABLE","$class",72],"]",["T_WHITESPACE"," ",72],"=",["T_WHITESPACE"," ",72],["T_STATIC","static",72],["T_DOUBLE_COLON","::",72],["T_STRING","cleanCssIdentifier",72],"(",["T_STRING","Unicode",72],["T_DOUBLE_COLON","::",72],["T_STRING","strtolower",72],"(",["T_VARIABLE","$class",72],")",")",";",["T_WHITESPACE","\n    ",72],"}",["T_WHITESPACE","\n    ",73],["T_RETURN","return",74],["T_WHITESPACE"," ",74],["T_STATIC","static",74],["T_DOUBLE_COLON","::",74],["T_VARIABLE","$classes",74],"[",["T_VARIABLE","$class",74],"]",";",["T_WHITESPACE","\n  ",74],"}",["T_WHITESPACE","\n\n  ",75],["T_DOC_COMMENT","\/**\n   * Prepares a string for use as a CSS identifier (element, class, or ID name).\n   *\n   * http:\/\/www.w3.org\/TR\/CSS21\/syndata.html#characters shows the syntax for\n   * valid CSS identifiers (including element names, classes, and IDs in\n   * selectors.)\n   *\n   * @param string $identifier\n   *   The identifier to clean.\n   * @param array $filter\n   *   An array of string replacements to use on the identifier.\n   *\n   * @return string\n   *   The cleaned identifier.\n   *\/",77],["T_WHITESPACE","\n  ",91],["T_PUBLIC","public",92],["T_WHITESPACE"," ",92],["T_STATIC","static",92],["T_WHITESPACE"," ",92],["T_FUNCTION","function",92],["T_WHITESPACE"," ",92],["T_STRING","cleanCssIdentifier",92],"(",["T_VARIABLE","$identifier",92],",",["T_WHITESPACE"," ",92],["T_ARRAY","array",92],["T_WHITESPACE"," ",92],["T_VARIABLE","$filter",92],["T_WHITESPACE"," ",92],"=",["T_WHITESPACE"," ",92],["T_ARRAY","array",92],"(",["T_WHITESPACE","\n    ",92],["T_CONSTANT_ENCAPSED_STRING","' '",93],["T_WHITESPACE"," ",93],["T_DOUBLE_ARROW","=>",93],["T_WHITESPACE"," ",93],["T_CONSTANT_ENCAPSED_STRING","'-'",93],",",["T_WHITESPACE","\n    ",93],["T_CONSTANT_ENCAPSED_STRING","'_'",94],["T_WHITESPACE"," ",94],["T_DOUBLE_ARROW","=>",94],["T_WHITESPACE"," ",94],["T_CONSTANT_ENCAPSED_STRING","'-'",94],",",["T_WHITESPACE","\n    ",94],["T_CONSTANT_ENCAPSED_STRING","'\/'",95],["T_WHITESPACE"," ",95],["T_DOUBLE_ARROW","=>",95],["T_WHITESPACE"," ",95],["T_CONSTANT_ENCAPSED_STRING","'-'",95],",",["T_WHITESPACE","\n    ",95],["T_CONSTANT_ENCAPSED_STRING","'['",96],["T_WHITESPACE"," ",96],["T_DOUBLE_ARROW","=>",96],["T_WHITESPACE"," ",96],["T_CONSTANT_ENCAPSED_STRING","'-'",96],",",["T_WHITESPACE","\n    ",96],["T_CONSTANT_ENCAPSED_STRING","']'",97],["T_WHITESPACE"," ",97],["T_DOUBLE_ARROW","=>",97],["T_WHITESPACE"," ",97],["T_CONSTANT_ENCAPSED_STRING","''",97],",",["T_WHITESPACE","\n  ",97],")",")",["T_WHITESPACE"," ",98],"{",["T_WHITESPACE","\n    ",98],["T_COMMENT","\/\/ We could also use strtr() here but its much slower than str_replace(). In\n",99],["T_WHITESPACE","    ",100],["T_COMMENT","\/\/ order to keep '__' to stay '__' we first replace it with a different\n",100],["T_WHITESPACE","    ",101],["T_COMMENT","\/\/ placeholder after checking that it is not defined as a filter.\n",101],["T_WHITESPACE","    ",102],["T_VARIABLE","$double_underscore_replacements",102],["T_WHITESPACE"," ",102],"=",["T_WHITESPACE"," ",102],["T_LNUMBER","0",102],";",["T_WHITESPACE","\n    ",102],["T_IF","if",103],["T_WHITESPACE"," ",103],"(","!",["T_ISSET","isset",103],"(",["T_VARIABLE","$filter",103],"[",["T_CONSTANT_ENCAPSED_STRING","'__'",103],"]",")",")",["T_WHITESPACE"," ",103],"{",["T_WHITESPACE","\n      ",103],["T_VARIABLE","$identifier",104],["T_WHITESPACE"," ",104],"=",["T_WHITESPACE"," ",104],["T_STRING","str_replace",104],"(",["T_CONSTANT_ENCAPSED_STRING","'__'",104],",",["T_WHITESPACE"," ",104],["T_CONSTANT_ENCAPSED_STRING","'##'",104],",",["T_WHITESPACE"," ",104],["T_VARIABLE","$identifier",104],",",["T_WHITESPACE"," ",104],["T_VARIABLE","$double_underscore_replacements",104],")",";",["T_WHITESPACE","\n    ",104],"}",["T_WHITESPACE","\n    ",105],["T_VARIABLE","$identifier",106],["T_WHITESPACE"," ",106],"=",["T_WHITESPACE"," ",106],["T_STRING","str_replace",106],"(",["T_STRING","array_keys",106],"(",["T_VARIABLE","$filter",106],")",",",["T_WHITESPACE"," ",106],["T_STRING","array_values",106],"(",["T_VARIABLE","$filter",106],")",",",["T_WHITESPACE"," ",106],["T_VARIABLE","$identifier",106],")",";",["T_WHITESPACE","\n    ",106],["T_COMMENT","\/\/ Replace temporary placeholder '##' with '__' only if the original\n",107],["T_WHITESPACE","    ",108],["T_COMMENT","\/\/ $identifier contained '__'.\n",108],["T_WHITESPACE","    ",109],["T_IF","if",109],["T_WHITESPACE"," ",109],"(",["T_VARIABLE","$double_underscore_replacements",109],["T_WHITESPACE"," ",109],">",["T_WHITESPACE"," ",109],["T_LNUMBER","0",109],")",["T_WHITESPACE"," ",109],"{",["T_WHITESPACE","\n      ",109],["T_VARIABLE","$identifier",110],["T_WHITESPACE"," ",110],"=",["T_WHITESPACE"," ",110],["T_STRING","str_replace",110],"(",["T_CONSTANT_ENCAPSED_STRING","'##'",110],",",["T_WHITESPACE"," ",110],["T_CONSTANT_ENCAPSED_STRING","'__'",110],",",["T_WHITESPACE"," ",110],["T_VARIABLE","$identifier",110],")",";",["T_WHITESPACE","\n    ",110],"}",["T_WHITESPACE","\n\n    ",111],["T_COMMENT","\/\/ Valid characters in a CSS identifier are:\n",113],["T_WHITESPACE","    ",114],["T_COMMENT","\/\/ - the hyphen (U+002D)\n",114],["T_WHITESPACE","    ",115],["T_COMMENT","\/\/ - a-z (U+0030 - U+0039)\n",115],["T_WHITESPACE","    ",116],["T_COMMENT","\/\/ - A-Z (U+0041 - U+005A)\n",116],["T_WHITESPACE","    ",117],["T_COMMENT","\/\/ - the underscore (U+005F)\n",117],["T_WHITESPACE","    ",118],["T_COMMENT","\/\/ - 0-9 (U+0061 - U+007A)\n",118],["T_WHITESPACE","    ",119],["T_COMMENT","\/\/ - ISO 10646 characters U+00A1 and higher\n",119],["T_WHITESPACE","    ",120],["T_COMMENT","\/\/ We strip out any character not in the above list.\n",120],["T_WHITESPACE","    ",121],["T_VARIABLE","$identifier",121],["T_WHITESPACE"," ",121],"=",["T_WHITESPACE"," ",121],["T_STRING","preg_replace",121],"(",["T_CONSTANT_ENCAPSED_STRING","'\/[^\\x{002D}\\x{0030}-\\x{0039}\\x{0041}-\\x{005A}\\x{005F}\\x{0061}-\\x{007A}\\x{00A1}-\\x{FFFF}]\/u'",121],",",["T_WHITESPACE"," ",121],["T_CONSTANT_ENCAPSED_STRING","''",121],",",["T_WHITESPACE"," ",121],["T_VARIABLE","$identifier",121],")",";",["T_WHITESPACE","\n    ",121],["T_COMMENT","\/\/ Identifiers cannot start with a digit, two hyphens, or a hyphen followed by a digit.\n",122],["T_WHITESPACE","    ",123],["T_VARIABLE","$identifier",123],["T_WHITESPACE"," ",123],"=",["T_WHITESPACE"," ",123],["T_STRING","preg_replace",123],"(",["T_ARRAY","array",123],"(",["T_WHITESPACE","\n      ",123],["T_CONSTANT_ENCAPSED_STRING","'\/^[0-9]\/'",124],",",["T_WHITESPACE","\n      ",124],["T_CONSTANT_ENCAPSED_STRING","'\/^(-[0-9])|^(--)\/'",125],["T_WHITESPACE","\n    ",125],")",",",["T_WHITESPACE"," ",126],["T_ARRAY","array",126],"(",["T_CONSTANT_ENCAPSED_STRING","'_'",126],",",["T_WHITESPACE"," ",126],["T_CONSTANT_ENCAPSED_STRING","'__'",126],")",",",["T_WHITESPACE"," ",126],["T_VARIABLE","$identifier",126],")",";",["T_WHITESPACE","\n    ",126],["T_RETURN","return",127],["T_WHITESPACE"," ",127],["T_VARIABLE","$identifier",127],";",["T_WHITESPACE","\n  ",127],"}",["T_WHITESPACE","\n\n  ",128],["T_DOC_COMMENT","\/**\n   * Sets if this request is an Ajax request.\n   *\n   * @param bool $is_ajax\n   *   TRUE if this request is an Ajax request, FALSE otherwise.\n   *\/",130],["T_WHITESPACE","\n  ",135],["T_PUBLIC","public",136],["T_WHITESPACE"," ",136],["T_STATIC","static",136],["T_WHITESPACE"," ",136],["T_FUNCTION","function",136],["T_WHITESPACE"," ",136],["T_STRING","setIsAjax",136],"(",["T_VARIABLE","$is_ajax",136],")",["T_WHITESPACE"," ",136],"{",["T_WHITESPACE","\n    ",136],["T_STATIC","static",137],["T_DOUBLE_COLON","::",137],["T_VARIABLE","$isAjax",137],["T_WHITESPACE"," ",137],"=",["T_WHITESPACE"," ",137],["T_VARIABLE","$is_ajax",137],";",["T_WHITESPACE","\n  ",137],"}",["T_WHITESPACE","\n\n  ",138],["T_DOC_COMMENT","\/**\n   * Prepares a string for use as a valid HTML ID and guarantees uniqueness.\n   *\n   * This function ensures that each passed HTML ID value only exists once on\n   * the page. By tracking the already returned ids, this function enables\n   * forms, blocks, and other content to be output multiple times on the same\n   * page, without breaking (X)HTML validation.\n   *\n   * For already existing IDs, a counter is appended to the ID string.\n   * Therefore, JavaScript and CSS code should not rely on any value that was\n   * generated by this function and instead should rely on manually added CSS\n   * classes or similarly reliable constructs.\n   *\n   * Two consecutive hyphens separate the counter from the original ID. To\n   * manage uniqueness across multiple Ajax requests on the same page, Ajax\n   * requests POST an array of all IDs currently present on the page, which are\n   * used to prime this function's cache upon first invocation.\n   *\n   * To allow reverse-parsing of IDs submitted via Ajax, any multiple\n   * consecutive hyphens in the originally passed $id are replaced with a\n   * single hyphen.\n   *\n   * @param string $id\n   *   The ID to clean.\n   *\n   * @return string\n   *   The cleaned ID.\n   *\/",140],["T_WHITESPACE","\n  ",167],["T_PUBLIC","public",168],["T_WHITESPACE"," ",168],["T_STATIC","static",168],["T_WHITESPACE"," ",168],["T_FUNCTION","function",168],["T_WHITESPACE"," ",168],["T_STRING","getUniqueId",168],"(",["T_VARIABLE","$id",168],")",["T_WHITESPACE"," ",168],"{",["T_WHITESPACE","\n    ",168],["T_COMMENT","\/\/ If this is an Ajax request, then content returned by this page request\n",169],["T_WHITESPACE","    ",170],["T_COMMENT","\/\/ will be merged with content already on the base page. The HTML IDs must\n",170],["T_WHITESPACE","    ",171],["T_COMMENT","\/\/ be unique for the fully merged content. Therefore use unique IDs.\n",171],["T_WHITESPACE","    ",172],["T_IF","if",172],["T_WHITESPACE"," ",172],"(",["T_STATIC","static",172],["T_DOUBLE_COLON","::",172],["T_VARIABLE","$isAjax",172],")",["T_WHITESPACE"," ",172],"{",["T_WHITESPACE","\n      ",172],["T_RETURN","return",173],["T_WHITESPACE"," ",173],["T_STATIC","static",173],["T_DOUBLE_COLON","::",173],["T_STRING","getId",173],"(",["T_VARIABLE","$id",173],")",["T_WHITESPACE"," ",173],".",["T_WHITESPACE"," ",173],["T_CONSTANT_ENCAPSED_STRING","'--'",173],["T_WHITESPACE"," ",173],".",["T_WHITESPACE"," ",173],["T_STRING","Crypt",173],["T_DOUBLE_COLON","::",173],["T_STRING","randomBytesBase64",173],"(",["T_LNUMBER","8",173],")",";",["T_WHITESPACE","\n    ",173],"}",["T_WHITESPACE","\n\n    ",174],["T_COMMENT","\/\/ @todo Remove all that code once we switch over to random IDs only,\n",176],["T_WHITESPACE","    ",177],["T_COMMENT","\/\/ see https:\/\/www.drupal.org\/node\/1090592.\n",177],["T_WHITESPACE","    ",178],["T_IF","if",178],["T_WHITESPACE"," ",178],"(","!",["T_ISSET","isset",178],"(",["T_STATIC","static",178],["T_DOUBLE_COLON","::",178],["T_VARIABLE","$seenIdsInit",178],")",")",["T_WHITESPACE"," ",178],"{",["T_WHITESPACE","\n      ",178],["T_STATIC","static",179],["T_DOUBLE_COLON","::",179],["T_VARIABLE","$seenIdsInit",179],["T_WHITESPACE"," ",179],"=",["T_WHITESPACE"," ",179],["T_ARRAY","array",179],"(",")",";",["T_WHITESPACE","\n    ",179],"}",["T_WHITESPACE","\n    ",180],["T_IF","if",181],["T_WHITESPACE"," ",181],"(","!",["T_ISSET","isset",181],"(",["T_STATIC","static",181],["T_DOUBLE_COLON","::",181],["T_VARIABLE","$seenIds",181],")",")",["T_WHITESPACE"," ",181],"{",["T_WHITESPACE","\n      ",181],["T_STATIC","static",182],["T_DOUBLE_COLON","::",182],["T_VARIABLE","$seenIds",182],["T_WHITESPACE"," ",182],"=",["T_WHITESPACE"," ",182],["T_STATIC","static",182],["T_DOUBLE_COLON","::",182],["T_VARIABLE","$seenIdsInit",182],";",["T_WHITESPACE","\n    ",182],"}",["T_WHITESPACE","\n\n    ",183],["T_VARIABLE","$id",185],["T_WHITESPACE"," ",185],"=",["T_WHITESPACE"," ",185],["T_STATIC","static",185],["T_DOUBLE_COLON","::",185],["T_STRING","getId",185],"(",["T_VARIABLE","$id",185],")",";",["T_WHITESPACE","\n\n    ",185],["T_COMMENT","\/\/ Ensure IDs are unique by appending a counter after the first occurrence.\n",187],["T_WHITESPACE","    ",188],["T_COMMENT","\/\/ The counter needs to be appended with a delimiter that does not exist in\n",188],["T_WHITESPACE","    ",189],["T_COMMENT","\/\/ the base ID. Requiring a unique delimiter helps ensure that we really do\n",189],["T_WHITESPACE","    ",190],["T_COMMENT","\/\/ return unique IDs and also helps us re-create the $seen_ids array during\n",190],["T_WHITESPACE","    ",191],["T_COMMENT","\/\/ Ajax requests.\n",191],["T_WHITESPACE","    ",192],["T_IF","if",192],["T_WHITESPACE"," ",192],"(",["T_ISSET","isset",192],"(",["T_STATIC","static",192],["T_DOUBLE_COLON","::",192],["T_VARIABLE","$seenIds",192],"[",["T_VARIABLE","$id",192],"]",")",")",["T_WHITESPACE"," ",192],"{",["T_WHITESPACE","\n      ",192],["T_VARIABLE","$id",193],["T_WHITESPACE"," ",193],"=",["T_WHITESPACE"," ",193],["T_VARIABLE","$id",193],["T_WHITESPACE"," ",193],".",["T_WHITESPACE"," ",193],["T_CONSTANT_ENCAPSED_STRING","'--'",193],["T_WHITESPACE"," ",193],".",["T_WHITESPACE"," ",193],["T_INC","++",193],["T_STATIC","static",193],["T_DOUBLE_COLON","::",193],["T_VARIABLE","$seenIds",193],"[",["T_VARIABLE","$id",193],"]",";",["T_WHITESPACE","\n    ",193],"}",["T_WHITESPACE","\n    ",194],["T_ELSE","else",195],["T_WHITESPACE"," ",195],"{",["T_WHITESPACE","\n      ",195],["T_STATIC","static",196],["T_DOUBLE_COLON","::",196],["T_VARIABLE","$seenIds",196],"[",["T_VARIABLE","$id",196],"]",["T_WHITESPACE"," ",196],"=",["T_WHITESPACE"," ",196],["T_LNUMBER","1",196],";",["T_WHITESPACE","\n    ",196],"}",["T_WHITESPACE","\n    ",197],["T_RETURN","return",198],["T_WHITESPACE"," ",198],["T_VARIABLE","$id",198],";",["T_WHITESPACE","\n  ",198],"}",["T_WHITESPACE","\n\n  ",199],["T_DOC_COMMENT","\/**\n   * Prepares a string for use as a valid HTML ID.\n   *\n   * Only use this function when you want to intentionally skip the uniqueness\n   * guarantee of self::getUniqueId().\n   *\n   * @param string $id\n   *   The ID to clean.\n   *\n   * @return string\n   *   The cleaned ID.\n   *\n   * @see self::getUniqueId()\n   *\/",201],["T_WHITESPACE","\n  ",214],["T_PUBLIC","public",215],["T_WHITESPACE"," ",215],["T_STATIC","static",215],["T_WHITESPACE"," ",215],["T_FUNCTION","function",215],["T_WHITESPACE"," ",215],["T_STRING","getId",215],"(",["T_VARIABLE","$id",215],")",["T_WHITESPACE"," ",215],"{",["T_WHITESPACE","\n    ",215],["T_VARIABLE","$id",216],["T_WHITESPACE"," ",216],"=",["T_WHITESPACE"," ",216],["T_STRING","str_replace",216],"(","[",["T_CONSTANT_ENCAPSED_STRING","' '",216],",",["T_WHITESPACE"," ",216],["T_CONSTANT_ENCAPSED_STRING","'_'",216],",",["T_WHITESPACE"," ",216],["T_CONSTANT_ENCAPSED_STRING","'['",216],",",["T_WHITESPACE"," ",216],["T_CONSTANT_ENCAPSED_STRING","']'",216],"]",",",["T_WHITESPACE"," ",216],"[",["T_CONSTANT_ENCAPSED_STRING","'-'",216],",",["T_WHITESPACE"," ",216],["T_CONSTANT_ENCAPSED_STRING","'-'",216],",",["T_WHITESPACE"," ",216],["T_CONSTANT_ENCAPSED_STRING","'-'",216],",",["T_WHITESPACE"," ",216],["T_CONSTANT_ENCAPSED_STRING","''",216],"]",",",["T_WHITESPACE"," ",216],["T_STRING","Unicode",216],["T_DOUBLE_COLON","::",216],["T_STRING","strtolower",216],"(",["T_VARIABLE","$id",216],")",")",";",["T_WHITESPACE","\n\n    ",216],["T_COMMENT","\/\/ As defined in http:\/\/www.w3.org\/TR\/html4\/types.html#type-name, HTML IDs can\n",218],["T_WHITESPACE","    ",219],["T_COMMENT","\/\/ only contain letters, digits ([0-9]), hyphens (\"-\"), underscores (\"_\"),\n",219],["T_WHITESPACE","    ",220],["T_COMMENT","\/\/ colons (\":\"), and periods (\".\"). We strip out any character not in that\n",220],["T_WHITESPACE","    ",221],["T_COMMENT","\/\/ list. Note that the CSS spec doesn't allow colons or periods in identifiers\n",221],["T_WHITESPACE","    ",222],["T_COMMENT","\/\/ (http:\/\/www.w3.org\/TR\/CSS21\/syndata.html#characters), so we strip those two\n",222],["T_WHITESPACE","    ",223],["T_COMMENT","\/\/ characters as well.\n",223],["T_WHITESPACE","    ",224],["T_VARIABLE","$id",224],["T_WHITESPACE"," ",224],"=",["T_WHITESPACE"," ",224],["T_STRING","preg_replace",224],"(",["T_CONSTANT_ENCAPSED_STRING","'\/[^A-Za-z0-9\\-_]\/'",224],",",["T_WHITESPACE"," ",224],["T_CONSTANT_ENCAPSED_STRING","''",224],",",["T_WHITESPACE"," ",224],["T_VARIABLE","$id",224],")",";",["T_WHITESPACE","\n\n    ",224],["T_COMMENT","\/\/ Removing multiple consecutive hyphens.\n",226],["T_WHITESPACE","    ",227],["T_VARIABLE","$id",227],["T_WHITESPACE"," ",227],"=",["T_WHITESPACE"," ",227],["T_STRING","preg_replace",227],"(",["T_CONSTANT_ENCAPSED_STRING","'\/\\-+\/'",227],",",["T_WHITESPACE"," ",227],["T_CONSTANT_ENCAPSED_STRING","'-'",227],",",["T_WHITESPACE"," ",227],["T_VARIABLE","$id",227],")",";",["T_WHITESPACE","\n    ",227],["T_RETURN","return",228],["T_WHITESPACE"," ",228],["T_VARIABLE","$id",228],";",["T_WHITESPACE","\n  ",228],"}",["T_WHITESPACE","\n\n  ",229],["T_DOC_COMMENT","\/**\n   * Resets the list of seen IDs.\n   *\/",231],["T_WHITESPACE","\n  ",233],["T_PUBLIC","public",234],["T_WHITESPACE"," ",234],["T_STATIC","static",234],["T_WHITESPACE"," ",234],["T_FUNCTION","function",234],["T_WHITESPACE"," ",234],["T_STRING","resetSeenIds",234],"(",")",["T_WHITESPACE"," ",234],"{",["T_WHITESPACE","\n    ",234],["T_STATIC","static",235],["T_DOUBLE_COLON","::",235],["T_VARIABLE","$seenIds",235],["T_WHITESPACE"," ",235],"=",["T_WHITESPACE"," ",235],["T_STRING","NULL",235],";",["T_WHITESPACE","\n  ",235],"}",["T_WHITESPACE","\n\n  ",236],["T_DOC_COMMENT","\/**\n   * Normalizes an HTML snippet.\n   *\n   * This function is essentially \\DOMDocument::normalizeDocument(), but\n   * operates on an HTML string instead of a \\DOMDocument.\n   *\n   * @param string $html\n   *   The HTML string to normalize.\n   *\n   * @return string\n   *   The normalized HTML string.\n   *\/",238],["T_WHITESPACE","\n  ",249],["T_PUBLIC","public",250],["T_WHITESPACE"," ",250],["T_STATIC","static",250],["T_WHITESPACE"," ",250],["T_FUNCTION","function",250],["T_WHITESPACE"," ",250],["T_STRING","normalize",250],"(",["T_VARIABLE","$html",250],")",["T_WHITESPACE"," ",250],"{",["T_WHITESPACE","\n    ",250],["T_VARIABLE","$document",251],["T_WHITESPACE"," ",251],"=",["T_WHITESPACE"," ",251],["T_STATIC","static",251],["T_DOUBLE_COLON","::",251],["T_STRING","load",251],"(",["T_VARIABLE","$html",251],")",";",["T_WHITESPACE","\n    ",251],["T_RETURN","return",252],["T_WHITESPACE"," ",252],["T_STATIC","static",252],["T_DOUBLE_COLON","::",252],["T_STRING","serialize",252],"(",["T_VARIABLE","$document",252],")",";",["T_WHITESPACE","\n  ",252],"}",["T_WHITESPACE","\n\n  ",253],["T_DOC_COMMENT","\/**\n   * Parses an HTML snippet and returns it as a DOM object.\n   *\n   * This function loads the body part of a partial (X)HTML document and returns\n   * a full \\DOMDocument object that represents this document.\n   *\n   * Use \\Drupal\\Component\\Utility\\Html::serialize() to serialize this\n   * \\DOMDocument back to a string.\n   *\n   * @param string $html\n   *   The partial (X)HTML snippet to load. Invalid markup will be corrected on\n   *   import.\n   *\n   * @return \\DOMDocument\n   *   A \\DOMDocument that represents the loaded (X)HTML snippet.\n   *\/",255],["T_WHITESPACE","\n  ",270],["T_PUBLIC","public",271],["T_WHITESPACE"," ",271],["T_STATIC","static",271],["T_WHITESPACE"," ",271],["T_FUNCTION","function",271],["T_WHITESPACE"," ",271],["T_STRING","load",271],"(",["T_VARIABLE","$html",271],")",["T_WHITESPACE"," ",271],"{",["T_WHITESPACE","\n    ",271],["T_VARIABLE","$document",272],["T_WHITESPACE"," ",272],"=",["T_WHITESPACE"," ",272],["T_START_HEREDOC","<<<EOD\n",272],["T_ENCAPSED_AND_WHITESPACE","<!DOCTYPE html PUBLIC \"-\/\/W3C\/\/DTD XHTML 1.0 Strict\/\/EN\" \"http:\/\/www.w3.org\/TR\/xhtml1\/DTD\/xhtml1-strict.dtd\">\n<html xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n<head><meta http-equiv=\"Content-Type\" content=\"text\/html; charset=utf-8\" \/><\/head>\n<body>!html<\/body>\n<\/html>\n",273],["T_END_HEREDOC","EOD",278],";",["T_WHITESPACE","\n    ",278],["T_COMMENT","\/\/ PHP's \\DOMDocument serialization adds extra whitespace when the markup\n",279],["T_WHITESPACE","    ",280],["T_COMMENT","\/\/ of the wrapping document contains newlines, so ensure we remove all\n",280],["T_WHITESPACE","    ",281],["T_COMMENT","\/\/ newlines before injecting the actual HTML body to be processed.\n",281],["T_WHITESPACE","    ",282],["T_VARIABLE","$document",282],["T_WHITESPACE"," ",282],"=",["T_WHITESPACE"," ",282],["T_STRING","strtr",282],"(",["T_VARIABLE","$document",282],",",["T_WHITESPACE"," ",282],["T_ARRAY","array",282],"(",["T_CONSTANT_ENCAPSED_STRING","\"\\n\"",282],["T_WHITESPACE"," ",282],["T_DOUBLE_ARROW","=>",282],["T_WHITESPACE"," ",282],["T_CONSTANT_ENCAPSED_STRING","''",282],",",["T_WHITESPACE"," ",282],["T_CONSTANT_ENCAPSED_STRING","'!html'",282],["T_WHITESPACE"," ",282],["T_DOUBLE_ARROW","=>",282],["T_WHITESPACE"," ",282],["T_VARIABLE","$html",282],")",")",";",["T_WHITESPACE","\n\n    ",282],["T_VARIABLE","$dom",284],["T_WHITESPACE"," ",284],"=",["T_WHITESPACE"," ",284],["T_NEW","new",284],["T_WHITESPACE"," ",284],["T_NS_SEPARATOR","\\",284],["T_STRING","DOMDocument",284],"(",")",";",["T_WHITESPACE","\n    ",284],["T_COMMENT","\/\/ Ignore warnings during HTML soup loading.\n",285],["T_WHITESPACE","    ",286],"@",["T_VARIABLE","$dom",286],["T_OBJECT_OPERATOR","->",286],["T_STRING","loadHTML",286],"(",["T_VARIABLE","$document",286],")",";",["T_WHITESPACE","\n\n    ",286],["T_RETURN","return",288],["T_WHITESPACE"," ",288],["T_VARIABLE","$dom",288],";",["T_WHITESPACE","\n  ",288],"}",["T_WHITESPACE","\n\n  ",289],["T_DOC_COMMENT","\/**\n   * Converts the body of a \\DOMDocument back to an HTML snippet.\n   *\n   * The function serializes the body part of a \\DOMDocument back to an (X)HTML\n   * snippet. The resulting (X)HTML snippet will be properly formatted to be\n   * compatible with HTML user agents.\n   *\n   * @param \\DOMDocument $document\n   *   A \\DOMDocument object to serialize, only the tags below the first <body>\n   *   node will be converted.\n   *\n   * @return string\n   *   A valid (X)HTML snippet, as a string.\n   *\/",291],["T_WHITESPACE","\n  ",304],["T_PUBLIC","public",305],["T_WHITESPACE"," ",305],["T_STATIC","static",305],["T_WHITESPACE"," ",305],["T_FUNCTION","function",305],["T_WHITESPACE"," ",305],["T_STRING","serialize",305],"(",["T_NS_SEPARATOR","\\",305],["T_STRING","DOMDocument",305],["T_WHITESPACE"," ",305],["T_VARIABLE","$document",305],")",["T_WHITESPACE"," ",305],"{",["T_WHITESPACE","\n    ",305],["T_VARIABLE","$body_node",306],["T_WHITESPACE"," ",306],"=",["T_WHITESPACE"," ",306],["T_VARIABLE","$document",306],["T_OBJECT_OPERATOR","->",306],["T_STRING","getElementsByTagName",306],"(",["T_CONSTANT_ENCAPSED_STRING","'body'",306],")",["T_OBJECT_OPERATOR","->",306],["T_STRING","item",306],"(",["T_LNUMBER","0",306],")",";",["T_WHITESPACE","\n    ",306],["T_VARIABLE","$html",307],["T_WHITESPACE"," ",307],"=",["T_WHITESPACE"," ",307],["T_CONSTANT_ENCAPSED_STRING","''",307],";",["T_WHITESPACE","\n\n    ",307],["T_IF","if",309],["T_WHITESPACE"," ",309],"(",["T_VARIABLE","$body_node",309],["T_WHITESPACE"," ",309],["T_IS_NOT_IDENTICAL","!==",309],["T_WHITESPACE"," ",309],["T_STRING","NULL",309],")",["T_WHITESPACE"," ",309],"{",["T_WHITESPACE","\n      ",309],["T_FOREACH","foreach",310],["T_WHITESPACE"," ",310],"(",["T_VARIABLE","$body_node",310],["T_OBJECT_OPERATOR","->",310],["T_STRING","getElementsByTagName",310],"(",["T_CONSTANT_ENCAPSED_STRING","'script'",310],")",["T_WHITESPACE"," ",310],["T_AS","as",310],["T_WHITESPACE"," ",310],["T_VARIABLE","$node",310],")",["T_WHITESPACE"," ",310],"{",["T_WHITESPACE","\n        ",310],["T_STATIC","static",311],["T_DOUBLE_COLON","::",311],["T_STRING","escapeCdataElement",311],"(",["T_VARIABLE","$node",311],")",";",["T_WHITESPACE","\n      ",311],"}",["T_WHITESPACE","\n      ",312],["T_FOREACH","foreach",313],["T_WHITESPACE"," ",313],"(",["T_VARIABLE","$body_node",313],["T_OBJECT_OPERATOR","->",313],["T_STRING","getElementsByTagName",313],"(",["T_CONSTANT_ENCAPSED_STRING","'style'",313],")",["T_WHITESPACE"," ",313],["T_AS","as",313],["T_WHITESPACE"," ",313],["T_VARIABLE","$node",313],")",["T_WHITESPACE"," ",313],"{",["T_WHITESPACE","\n        ",313],["T_STATIC","static",314],["T_DOUBLE_COLON","::",314],["T_STRING","escapeCdataElement",314],"(",["T_VARIABLE","$node",314],",",["T_WHITESPACE"," ",314],["T_CONSTANT_ENCAPSED_STRING","'\/*'",314],",",["T_WHITESPACE"," ",314],["T_CONSTANT_ENCAPSED_STRING","'*\/'",314],")",";",["T_WHITESPACE","\n      ",314],"}",["T_WHITESPACE","\n      ",315],["T_FOREACH","foreach",316],["T_WHITESPACE"," ",316],"(",["T_VARIABLE","$body_node",316],["T_OBJECT_OPERATOR","->",316],["T_STRING","childNodes",316],["T_WHITESPACE"," ",316],["T_AS","as",316],["T_WHITESPACE"," ",316],["T_VARIABLE","$node",316],")",["T_WHITESPACE"," ",316],"{",["T_WHITESPACE","\n        ",316],["T_VARIABLE","$html",317],["T_WHITESPACE"," ",317],["T_CONCAT_EQUAL",".=",317],["T_WHITESPACE"," ",317],["T_VARIABLE","$document",317],["T_OBJECT_OPERATOR","->",317],["T_STRING","saveXML",317],"(",["T_VARIABLE","$node",317],")",";",["T_WHITESPACE","\n      ",317],"}",["T_WHITESPACE","\n    ",318],"}",["T_WHITESPACE","\n    ",319],["T_RETURN","return",320],["T_WHITESPACE"," ",320],["T_VARIABLE","$html",320],";",["T_WHITESPACE","\n  ",320],"}",["T_WHITESPACE","\n\n  ",321],["T_DOC_COMMENT","\/**\n   * Adds comments around a <!CDATA section in a \\DOMNode.\n   *\n   * \\DOMDocument::loadHTML() in \\Drupal\\Component\\Utility\\Html::load() makes\n   * CDATA sections from the contents of inline script and style tags. This can\n   * cause HTML4 browsers to throw exceptions.\n   *\n   * This function attempts to solve the problem by creating a\n   * \\DOMDocumentFragment to comment the CDATA tag.\n   *\n   * @param \\DOMNode $node\n   *   The element potentially containing a CDATA node.\n   * @param string $comment_start\n   *   (optional) A string to use as a comment start marker to escape the CDATA\n   *   declaration. Defaults to '\/\/'.\n   * @param string $comment_end\n   *   (optional) A string to use as a comment end marker to escape the CDATA\n   *   declaration. Defaults to an empty string.\n   *\/",323],["T_WHITESPACE","\n  ",341],["T_PUBLIC","public",342],["T_WHITESPACE"," ",342],["T_STATIC","static",342],["T_WHITESPACE"," ",342],["T_FUNCTION","function",342],["T_WHITESPACE"," ",342],["T_STRING","escapeCdataElement",342],"(",["T_NS_SEPARATOR","\\",342],["T_STRING","DOMNode",342],["T_WHITESPACE"," ",342],["T_VARIABLE","$node",342],",",["T_WHITESPACE"," ",342],["T_VARIABLE","$comment_start",342],["T_WHITESPACE"," ",342],"=",["T_WHITESPACE"," ",342],["T_CONSTANT_ENCAPSED_STRING","'\/\/'",342],",",["T_WHITESPACE"," ",342],["T_VARIABLE","$comment_end",342],["T_WHITESPACE"," ",342],"=",["T_WHITESPACE"," ",342],["T_CONSTANT_ENCAPSED_STRING","''",342],")",["T_WHITESPACE"," ",342],"{",["T_WHITESPACE","\n    ",342],["T_FOREACH","foreach",343],["T_WHITESPACE"," ",343],"(",["T_VARIABLE","$node",343],["T_OBJECT_OPERATOR","->",343],["T_STRING","childNodes",343],["T_WHITESPACE"," ",343],["T_AS","as",343],["T_WHITESPACE"," ",343],["T_VARIABLE","$child_node",343],")",["T_WHITESPACE"," ",343],"{",["T_WHITESPACE","\n      ",343],["T_IF","if",344],["T_WHITESPACE"," ",344],"(",["T_VARIABLE","$child_node",344],["T_WHITESPACE"," ",344],["T_INSTANCEOF","instanceof",344],["T_WHITESPACE"," ",344],["T_NS_SEPARATOR","\\",344],["T_STRING","DOMCdataSection",344],")",["T_WHITESPACE"," ",344],"{",["T_WHITESPACE","\n        ",344],["T_VARIABLE","$embed_prefix",345],["T_WHITESPACE"," ",345],"=",["T_WHITESPACE"," ",345],"\"",["T_ENCAPSED_AND_WHITESPACE","\\n<!--",345],["T_CURLY_OPEN","{",345],["T_VARIABLE","$comment_start",345],"}",["T_ENCAPSED_AND_WHITESPACE","--><![CDATA[",345],["T_CURLY_OPEN","{",345],["T_VARIABLE","$comment_start",345],"}",["T_ENCAPSED_AND_WHITESPACE"," ><!--",345],["T_CURLY_OPEN","{",345],["T_VARIABLE","$comment_end",345],"}",["T_ENCAPSED_AND_WHITESPACE","\\n",345],"\"",";",["T_WHITESPACE","\n        ",345],["T_VARIABLE","$embed_suffix",346],["T_WHITESPACE"," ",346],"=",["T_WHITESPACE"," ",346],"\"",["T_ENCAPSED_AND_WHITESPACE","\\n",346],["T_CURLY_OPEN","{",346],["T_VARIABLE","$comment_start",346],"}",["T_ENCAPSED_AND_WHITESPACE","--><!]]>",346],["T_CURLY_OPEN","{",346],["T_VARIABLE","$comment_end",346],"}",["T_ENCAPSED_AND_WHITESPACE","\\n",346],"\"",";",["T_WHITESPACE","\n\n        ",346],["T_COMMENT","\/\/ Prevent invalid cdata escaping as this would throw a DOM error.\n",348],["T_WHITESPACE","        ",349],["T_COMMENT","\/\/ This is the same behavior as found in libxml2.\n",349],["T_WHITESPACE","        ",350],["T_COMMENT","\/\/ Related W3C standard: http:\/\/www.w3.org\/TR\/REC-xml\/#dt-cdsection\n",350],["T_WHITESPACE","        ",351],["T_COMMENT","\/\/ Fix explanation: http:\/\/wikipedia.org\/wiki\/CDATA#Nesting\n",351],["T_WHITESPACE","        ",352],["T_VARIABLE","$data",352],["T_WHITESPACE"," ",352],"=",["T_WHITESPACE"," ",352],["T_STRING","str_replace",352],"(",["T_CONSTANT_ENCAPSED_STRING","']]>'",352],",",["T_WHITESPACE"," ",352],["T_CONSTANT_ENCAPSED_STRING","']]]]><![CDATA[>'",352],",",["T_WHITESPACE"," ",352],["T_VARIABLE","$child_node",352],["T_OBJECT_OPERATOR","->",352],["T_STRING","data",352],")",";",["T_WHITESPACE","\n\n        ",352],["T_VARIABLE","$fragment",354],["T_WHITESPACE"," ",354],"=",["T_WHITESPACE"," ",354],["T_VARIABLE","$node",354],["T_OBJECT_OPERATOR","->",354],["T_STRING","ownerDocument",354],["T_OBJECT_OPERATOR","->",354],["T_STRING","createDocumentFragment",354],"(",")",";",["T_WHITESPACE","\n        ",354],["T_VARIABLE","$fragment",355],["T_OBJECT_OPERATOR","->",355],["T_STRING","appendXML",355],"(",["T_VARIABLE","$embed_prefix",355],["T_WHITESPACE"," ",355],".",["T_WHITESPACE"," ",355],["T_VARIABLE","$data",355],["T_WHITESPACE"," ",355],".",["T_WHITESPACE"," ",355],["T_VARIABLE","$embed_suffix",355],")",";",["T_WHITESPACE","\n        ",355],["T_VARIABLE","$node",356],["T_OBJECT_OPERATOR","->",356],["T_STRING","appendChild",356],"(",["T_VARIABLE","$fragment",356],")",";",["T_WHITESPACE","\n        ",356],["T_VARIABLE","$node",357],["T_OBJECT_OPERATOR","->",357],["T_STRING","removeChild",357],"(",["T_VARIABLE","$child_node",357],")",";",["T_WHITESPACE","\n      ",357],"}",["T_WHITESPACE","\n    ",358],"}",["T_WHITESPACE","\n  ",359],"}",["T_WHITESPACE","\n\n  ",360],["T_DOC_COMMENT","\/**\n   * Decodes all HTML entities including numerical ones to regular UTF-8 bytes.\n   *\n   * Double-escaped entities will only be decoded once (\"&amp;lt;\" becomes\n   * \"&lt;\", not \"<\"). Be careful when using this function, as it will revert\n   * previous sanitization efforts (&lt;script&gt; will become <script>).\n   *\n   * This method is not the opposite of Html::escape(). For example, this method\n   * will convert \"&eacute;\" to \"\u00c3\u00a9\", whereas Html::escape() will not convert \"\u00c3\u00a9\"\n   * to \"&eacute;\".\n   *\n   * @param string $text\n   *   The text to decode entities in.\n   *\n   * @return string\n   *   The input $text, with all HTML entities decoded once.\n   *\n   * @see html_entity_decode()\n   * @see \\Drupal\\Component\\Utility\\Html::escape()\n   *\/",362],["T_WHITESPACE","\n  ",381],["T_PUBLIC","public",382],["T_WHITESPACE"," ",382],["T_STATIC","static",382],["T_WHITESPACE"," ",382],["T_FUNCTION","function",382],["T_WHITESPACE"," ",382],["T_STRING","decodeEntities",382],"(",["T_VARIABLE","$text",382],")",["T_WHITESPACE"," ",382],"{",["T_WHITESPACE","\n    ",382],["T_RETURN","return",383],["T_WHITESPACE"," ",383],["T_STRING","html_entity_decode",383],"(",["T_VARIABLE","$text",383],",",["T_WHITESPACE"," ",383],["T_STRING","ENT_QUOTES",383],",",["T_WHITESPACE"," ",383],["T_CONSTANT_ENCAPSED_STRING","'UTF-8'",383],")",";",["T_WHITESPACE","\n  ",383],"}",["T_WHITESPACE","\n\n  ",384],["T_DOC_COMMENT","\/**\n   * Escapes text by converting special characters to HTML entities.\n   *\n   * This method escapes HTML for sanitization purposes by replacing the\n   * following special characters with their HTML entity equivalents:\n   * - & (ampersand) becomes &amp;\n   * - \" (double quote) becomes &quot;\n   * - ' (single quote) becomes &#039;\n   * - < (less than) becomes &lt;\n   * - > (greater than) becomes &gt;\n   * Special characters that have already been escaped will be double-escaped\n   * (for example, \"&lt;\" becomes \"&amp;lt;\"), and invalid UTF-8 encoding\n   * will be converted to the Unicode replacement character (\"\u00ef\u00bf\u00bd\").\n   *\n   * This method is not the opposite of Html::decodeEntities(). For example,\n   * this method will not encode \"\u00c3\u00a9\" to \"&eacute;\", whereas\n   * Html::decodeEntities() will convert all HTML entities to UTF-8 bytes,\n   * including \"&eacute;\" and \"&lt;\" to \"\u00c3\u00a9\" and \"<\".\n   *\n   * When constructing @link theme_render render arrays @endlink passing the output of Html::escape() to\n   * '#markup' is not recommended. Use the '#plain_text' key instead and the\n   * renderer will autoescape the text.\n   *\n   * @param string $text\n   *   The input text.\n   *\n   * @return string\n   *   The text with all HTML special characters converted.\n   *\n   * @see htmlspecialchars()\n   * @see \\Drupal\\Component\\Utility\\Html::decodeEntities()\n   *\n   * @ingroup sanitization\n   *\/",386],["T_WHITESPACE","\n  ",419],["T_PUBLIC","public",420],["T_WHITESPACE"," ",420],["T_STATIC","static",420],["T_WHITESPACE"," ",420],["T_FUNCTION","function",420],["T_WHITESPACE"," ",420],["T_STRING","escape",420],"(",["T_VARIABLE","$text",420],")",["T_WHITESPACE"," ",420],"{",["T_WHITESPACE","\n    ",420],["T_RETURN","return",421],["T_WHITESPACE"," ",421],["T_STRING","htmlspecialchars",421],"(",["T_VARIABLE","$text",421],",",["T_WHITESPACE"," ",421],["T_STRING","ENT_QUOTES",421],["T_WHITESPACE"," ",421],"|",["T_WHITESPACE"," ",421],["T_STRING","ENT_SUBSTITUTE",421],",",["T_WHITESPACE"," ",421],["T_CONSTANT_ENCAPSED_STRING","'UTF-8'",421],")",";",["T_WHITESPACE","\n  ",421],"}",["T_WHITESPACE","\n\n  ",422],["T_DOC_COMMENT","\/**\n   * Converts all root-relative URLs to absolute URLs.\n   *\n   * Does not change any existing protocol-relative or absolute URLs. Does not\n   * change other relative URLs because they would result in different absolute\n   * URLs depending on the current path. For example: when the same content\n   * containing such a relative URL (for example 'image.png'), is served from\n   * its canonical URL (for example 'http:\/\/example.com\/some-article') or from\n   * a listing or feed (for example 'http:\/\/example.com\/all-articles') their\n   * \"current path\" differs, resulting in different absolute URLs:\n   * 'http:\/\/example.com\/some-article\/image.png' versus\n   * 'http:\/\/example.com\/all-articles\/image.png'. Only one can be correct.\n   * Therefore relative URLs that are not root-relative cannot be safely\n   * transformed and should generally be avoided.\n   *\n   * Necessary for HTML that is served outside of a website, for example, RSS\n   * and e-mail.\n   *\n   * @param string $html\n   *   The partial (X)HTML snippet to load. Invalid markup will be corrected on\n   *   import.\n   * @param string $scheme_and_host\n   *   The root URL, which has a URI scheme, host and optional port.\n   *\n   * @return string\n   *   The updated (X)HTML snippet.\n   *\/",424],["T_WHITESPACE","\n  ",450],["T_PUBLIC","public",451],["T_WHITESPACE"," ",451],["T_STATIC","static",451],["T_WHITESPACE"," ",451],["T_FUNCTION","function",451],["T_WHITESPACE"," ",451],["T_STRING","transformRootRelativeUrlsToAbsolute",451],"(",["T_VARIABLE","$html",451],",",["T_WHITESPACE"," ",451],["T_VARIABLE","$scheme_and_host",451],")",["T_WHITESPACE"," ",451],"{",["T_WHITESPACE","\n    ",451],["T_STRING","assert",452],"(",["T_CONSTANT_ENCAPSED_STRING","'empty(array_diff(array_keys(parse_url($scheme_and_host)), [\"scheme\", \"host\", \"port\"]))'",452],",",["T_WHITESPACE"," ",452],["T_CONSTANT_ENCAPSED_STRING","'$scheme_and_host contains scheme, host and port at most.'",452],")",";",["T_WHITESPACE","\n    ",452],["T_STRING","assert",453],"(",["T_CONSTANT_ENCAPSED_STRING","'isset(parse_url($scheme_and_host)[\"scheme\"])'",453],",",["T_WHITESPACE"," ",453],["T_CONSTANT_ENCAPSED_STRING","'$scheme_and_host is absolute and hence has a scheme.'",453],")",";",["T_WHITESPACE","\n    ",453],["T_STRING","assert",454],"(",["T_CONSTANT_ENCAPSED_STRING","'isset(parse_url($scheme_and_host)[\"host\"])'",454],",",["T_WHITESPACE"," ",454],["T_CONSTANT_ENCAPSED_STRING","'$base_url is absolute and hence has a host.'",454],")",";",["T_WHITESPACE","\n\n    ",454],["T_VARIABLE","$html_dom",456],["T_WHITESPACE"," ",456],"=",["T_WHITESPACE"," ",456],["T_STRING","Html",456],["T_DOUBLE_COLON","::",456],["T_STRING","load",456],"(",["T_VARIABLE","$html",456],")",";",["T_WHITESPACE","\n    ",456],["T_VARIABLE","$xpath",457],["T_WHITESPACE"," ",457],"=",["T_WHITESPACE"," ",457],["T_NEW","new",457],["T_WHITESPACE"," ",457],["T_NS_SEPARATOR","\\",457],["T_STRING","DOMXpath",457],"(",["T_VARIABLE","$html_dom",457],")",";",["T_WHITESPACE","\n\n    ",457],["T_COMMENT","\/\/ Update all root-relative URLs to absolute URLs in the given HTML.\n",459],["T_WHITESPACE","    ",460],["T_FOREACH","foreach",460],["T_WHITESPACE"," ",460],"(",["T_STATIC","static",460],["T_DOUBLE_COLON","::",460],["T_VARIABLE","$uriAttributes",460],["T_WHITESPACE"," ",460],["T_AS","as",460],["T_WHITESPACE"," ",460],["T_VARIABLE","$attr",460],")",["T_WHITESPACE"," ",460],"{",["T_WHITESPACE","\n      ",460],["T_FOREACH","foreach",461],["T_WHITESPACE"," ",461],"(",["T_VARIABLE","$xpath",461],["T_OBJECT_OPERATOR","->",461],["T_STRING","query",461],"(","\"",["T_ENCAPSED_AND_WHITESPACE","\/\/*[starts-with(@",461],["T_VARIABLE","$attr",461],["T_ENCAPSED_AND_WHITESPACE",", '\/') and not(starts-with(@",461],["T_VARIABLE","$attr",461],["T_ENCAPSED_AND_WHITESPACE",", '\/\/'))]",461],"\"",")",["T_WHITESPACE"," ",461],["T_AS","as",461],["T_WHITESPACE"," ",461],["T_VARIABLE","$node",461],")",["T_WHITESPACE"," ",461],"{",["T_WHITESPACE","\n        ",461],["T_VARIABLE","$node",462],["T_OBJECT_OPERATOR","->",462],["T_STRING","setAttribute",462],"(",["T_VARIABLE","$attr",462],",",["T_WHITESPACE"," ",462],["T_VARIABLE","$scheme_and_host",462],["T_WHITESPACE"," ",462],".",["T_WHITESPACE"," ",462],["T_VARIABLE","$node",462],["T_OBJECT_OPERATOR","->",462],["T_STRING","getAttribute",462],"(",["T_VARIABLE","$attr",462],")",")",";",["T_WHITESPACE","\n      ",462],"}",["T_WHITESPACE","\n      ",463],["T_FOREACH","foreach",464],["T_WHITESPACE"," ",464],"(",["T_VARIABLE","$xpath",464],["T_OBJECT_OPERATOR","->",464],["T_STRING","query",464],"(",["T_CONSTANT_ENCAPSED_STRING","\"\/\/*[@srcset]\"",464],")",["T_WHITESPACE"," ",464],["T_AS","as",464],["T_WHITESPACE"," ",464],["T_VARIABLE","$node",464],")",["T_WHITESPACE"," ",464],"{",["T_WHITESPACE","\n        ",464],["T_COMMENT","\/\/ @see https:\/\/html.spec.whatwg.org\/multipage\/embedded-content.html#attr-img-srcset\n",465],["T_WHITESPACE","        ",466],["T_COMMENT","\/\/ @see https:\/\/html.spec.whatwg.org\/multipage\/embedded-content.html#image-candidate-string\n",466],["T_WHITESPACE","        ",467],["T_VARIABLE","$image_candidate_strings",467],["T_WHITESPACE"," ",467],"=",["T_WHITESPACE"," ",467],["T_STRING","explode",467],"(",["T_CONSTANT_ENCAPSED_STRING","','",467],",",["T_WHITESPACE"," ",467],["T_VARIABLE","$node",467],["T_OBJECT_OPERATOR","->",467],["T_STRING","getAttribute",467],"(",["T_CONSTANT_ENCAPSED_STRING","'srcset'",467],")",")",";",["T_WHITESPACE","\n        ",467],["T_VARIABLE","$image_candidate_strings",468],["T_WHITESPACE"," ",468],"=",["T_WHITESPACE"," ",468],["T_STRING","array_map",468],"(",["T_CONSTANT_ENCAPSED_STRING","'trim'",468],",",["T_WHITESPACE"," ",468],["T_VARIABLE","$image_candidate_strings",468],")",";",["T_WHITESPACE","\n        ",468],["T_FOR","for",469],["T_WHITESPACE"," ",469],"(",["T_VARIABLE","$i",469],["T_WHITESPACE"," ",469],"=",["T_WHITESPACE"," ",469],["T_LNUMBER","0",469],";",["T_WHITESPACE"," ",469],["T_VARIABLE","$i",469],["T_WHITESPACE"," ",469],"<",["T_WHITESPACE"," ",469],["T_STRING","count",469],"(",["T_VARIABLE","$image_candidate_strings",469],")",";",["T_WHITESPACE"," ",469],["T_VARIABLE","$i",469],["T_INC","++",469],")",["T_WHITESPACE"," ",469],"{",["T_WHITESPACE","\n          ",469],["T_VARIABLE","$image_candidate_string",470],["T_WHITESPACE"," ",470],"=",["T_WHITESPACE"," ",470],["T_VARIABLE","$image_candidate_strings",470],"[",["T_VARIABLE","$i",470],"]",";",["T_WHITESPACE","\n          ",470],["T_IF","if",471],["T_WHITESPACE"," ",471],"(",["T_VARIABLE","$image_candidate_string",471],"[",["T_LNUMBER","0",471],"]",["T_WHITESPACE"," ",471],["T_IS_IDENTICAL","===",471],["T_WHITESPACE"," ",471],["T_CONSTANT_ENCAPSED_STRING","'\/'",471],["T_WHITESPACE"," ",471],["T_BOOLEAN_AND","&&",471],["T_WHITESPACE"," ",471],["T_VARIABLE","$image_candidate_string",471],"[",["T_LNUMBER","1",471],"]",["T_WHITESPACE"," ",471],["T_IS_NOT_IDENTICAL","!==",471],["T_WHITESPACE"," ",471],["T_CONSTANT_ENCAPSED_STRING","'\/'",471],")",["T_WHITESPACE"," ",471],"{",["T_WHITESPACE","\n            ",471],["T_VARIABLE","$image_candidate_strings",472],"[",["T_VARIABLE","$i",472],"]",["T_WHITESPACE"," ",472],"=",["T_WHITESPACE"," ",472],["T_VARIABLE","$scheme_and_host",472],["T_WHITESPACE"," ",472],".",["T_WHITESPACE"," ",472],["T_VARIABLE","$image_candidate_string",472],";",["T_WHITESPACE","\n          ",472],"}",["T_WHITESPACE","\n        ",473],"}",["T_WHITESPACE","\n        ",474],["T_VARIABLE","$node",475],["T_OBJECT_OPERATOR","->",475],["T_STRING","setAttribute",475],"(",["T_CONSTANT_ENCAPSED_STRING","'srcset'",475],",",["T_WHITESPACE"," ",475],["T_STRING","implode",475],"(",["T_CONSTANT_ENCAPSED_STRING","', '",475],",",["T_WHITESPACE"," ",475],["T_VARIABLE","$image_candidate_strings",475],")",")",";",["T_WHITESPACE","\n      ",475],"}",["T_WHITESPACE","\n    ",476],"}",["T_WHITESPACE","\n    ",477],["T_RETURN","return",478],["T_WHITESPACE"," ",478],["T_STRING","Html",478],["T_DOUBLE_COLON","::",478],["T_STRING","serialize",478],"(",["T_VARIABLE","$html_dom",478],")",";",["T_WHITESPACE","\n  ",478],"}",["T_WHITESPACE","\n\n",479],"}",["T_WHITESPACE","\n",481]]