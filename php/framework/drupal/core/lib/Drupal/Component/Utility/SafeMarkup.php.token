[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Component",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Utility",3],";",["T_WHITESPACE","\n\n",3],["T_USE","use",5],["T_WHITESPACE"," ",5],["T_STRING","Drupal",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Component",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Render",5],["T_NS_SEPARATOR","\\",5],["T_STRING","HtmlEscapedText",5],";",["T_WHITESPACE","\n",5],["T_USE","use",6],["T_WHITESPACE"," ",6],["T_STRING","Drupal",6],["T_NS_SEPARATOR","\\",6],["T_STRING","Component",6],["T_NS_SEPARATOR","\\",6],["T_STRING","Render",6],["T_NS_SEPARATOR","\\",6],["T_STRING","FormattableMarkup",6],";",["T_WHITESPACE","\n",6],["T_USE","use",7],["T_WHITESPACE"," ",7],["T_STRING","Drupal",7],["T_NS_SEPARATOR","\\",7],["T_STRING","Component",7],["T_NS_SEPARATOR","\\",7],["T_STRING","Render",7],["T_NS_SEPARATOR","\\",7],["T_STRING","MarkupInterface",7],";",["T_WHITESPACE","\n\n",7],["T_DOC_COMMENT","\/**\n * Contains deprecated functionality related to sanitization of markup.\n *\n * @deprecated Will be removed before Drupal 9.0.0. Use the appropriate\n *   @link sanitization sanitization functions @endlink or the @link theme_render theme and render systems @endlink\n *   so that the output can can be themed, escaped, and altered properly.\n *\n * @see TwigExtension::escapeFilter()\n * @see twig_render_template()\n * @see sanitization\n * @see theme_render\n *\/",9],["T_WHITESPACE","\n",20],["T_CLASS","class",21],["T_WHITESPACE"," ",21],["T_STRING","SafeMarkup",21],["T_WHITESPACE"," ",21],"{",["T_WHITESPACE","\n\n  ",21],["T_DOC_COMMENT","\/**\n   * Checks if a string is safe to output.\n   *\n   * @param string|\\Drupal\\Component\\Render\\MarkupInterface $string\n   *   The content to be checked.\n   * @param string $strategy\n   *   (optional) This value is ignored.\n   *\n   * @return bool\n   *   TRUE if the string has been marked secure, FALSE otherwise.\n   *\n   * @deprecated in Drupal 8.0.x-dev, will be removed before Drupal 9.0.0.\n   *   Instead, you should just check if a variable is an instance of\n   *   \\Drupal\\Component\\Render\\MarkupInterface.\n   *\/",23],["T_WHITESPACE","\n  ",37],["T_PUBLIC","public",38],["T_WHITESPACE"," ",38],["T_STATIC","static",38],["T_WHITESPACE"," ",38],["T_FUNCTION","function",38],["T_WHITESPACE"," ",38],["T_STRING","isSafe",38],"(",["T_VARIABLE","$string",38],",",["T_WHITESPACE"," ",38],["T_VARIABLE","$strategy",38],["T_WHITESPACE"," ",38],"=",["T_WHITESPACE"," ",38],["T_CONSTANT_ENCAPSED_STRING","'html'",38],")",["T_WHITESPACE"," ",38],"{",["T_WHITESPACE","\n    ",38],["T_RETURN","return",39],["T_WHITESPACE"," ",39],["T_VARIABLE","$string",39],["T_WHITESPACE"," ",39],["T_INSTANCEOF","instanceof",39],["T_WHITESPACE"," ",39],["T_STRING","MarkupInterface",39],";",["T_WHITESPACE","\n  ",39],"}",["T_WHITESPACE","\n\n  ",40],["T_DOC_COMMENT","\/**\n   * Encodes special characters in a plain-text string for display as HTML.\n   *\n   * Also validates strings as UTF-8. All processed strings are also\n   * automatically flagged as safe markup strings for rendering.\n   *\n   * @param string $text\n   *   The text to be checked or processed.\n   *\n   * @return \\Drupal\\Component\\Render\\HtmlEscapedText\n   *   An HtmlEscapedText object that escapes when rendered to string.\n   *\n   * @deprecated Will be removed before Drupal 9.0.0. Rely on Twig's\n   *   auto-escaping feature, or use the @link theme_render #plain_text @endlink\n   *   key when constructing a render array that contains plain text in order to\n   *   use the renderer's auto-escaping feature. If neither of these are\n   *   possible, \\Drupal\\Component\\Utility\\Html::escape() can be used in places\n   *   where explicit escaping is needed.\n   *\n   * @see drupal_validate_utf8()\n   *\/",42],["T_WHITESPACE","\n  ",62],["T_PUBLIC","public",63],["T_WHITESPACE"," ",63],["T_STATIC","static",63],["T_WHITESPACE"," ",63],["T_FUNCTION","function",63],["T_WHITESPACE"," ",63],["T_STRING","checkPlain",63],"(",["T_VARIABLE","$text",63],")",["T_WHITESPACE"," ",63],"{",["T_WHITESPACE","\n    ",63],["T_RETURN","return",64],["T_WHITESPACE"," ",64],["T_NEW","new",64],["T_WHITESPACE"," ",64],["T_STRING","HtmlEscapedText",64],"(",["T_VARIABLE","$text",64],")",";",["T_WHITESPACE","\n  ",64],"}",["T_WHITESPACE","\n\n  ",65],["T_DOC_COMMENT","\/**\n   * Formats a string for HTML display by replacing variable placeholders.\n   *\n   * @param string $string\n   *   A string containing placeholders. The string itself will not be escaped,\n   *   any unsafe content must be in $args and inserted via placeholders.\n   * @param array $args\n   *   An array with placeholder replacements, keyed by placeholder. See\n   *   \\Drupal\\Component\\Render\\FormattableMarkup::placeholderFormat() for\n   *   additional information about placeholders.\n   *\n   * @return string|\\Drupal\\Component\\Render\\MarkupInterface\n   *   The formatted string, which is an instance of MarkupInterface unless\n   *   sanitization of an unsafe argument was suppressed (see above).\n   *\n   * @see \\Drupal\\Component\\Render\\FormattableMarkup::placeholderFormat()\n   * @see \\Drupal\\Component\\Render\\FormattableMarkup\n   *\n   * @deprecated in Drupal 8.0.0, will be removed before Drupal 9.0.0.\n   *   Use \\Drupal\\Component\\Render\\FormattableMarkup.\n   *\/",67],["T_WHITESPACE","\n  ",87],["T_PUBLIC","public",88],["T_WHITESPACE"," ",88],["T_STATIC","static",88],["T_WHITESPACE"," ",88],["T_FUNCTION","function",88],["T_WHITESPACE"," ",88],["T_STRING","format",88],"(",["T_VARIABLE","$string",88],",",["T_WHITESPACE"," ",88],["T_ARRAY","array",88],["T_WHITESPACE"," ",88],["T_VARIABLE","$args",88],")",["T_WHITESPACE"," ",88],"{",["T_WHITESPACE","\n    ",88],["T_RETURN","return",89],["T_WHITESPACE"," ",89],["T_NEW","new",89],["T_WHITESPACE"," ",89],["T_STRING","FormattableMarkup",89],"(",["T_VARIABLE","$string",89],",",["T_WHITESPACE"," ",89],["T_VARIABLE","$args",89],")",";",["T_WHITESPACE","\n  ",89],"}",["T_WHITESPACE","\n\n",90],"}",["T_WHITESPACE","\n",92]]