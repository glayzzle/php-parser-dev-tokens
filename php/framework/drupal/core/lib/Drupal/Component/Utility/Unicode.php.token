[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Component",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Utility",3],";",["T_WHITESPACE","\n\n",3],["T_DOC_COMMENT","\/**\n * Provides Unicode-related conversions and operations.\n *\n * @ingroup utility\n *\/",5],["T_WHITESPACE","\n",9],["T_CLASS","class",10],["T_WHITESPACE"," ",10],["T_STRING","Unicode",10],["T_WHITESPACE"," ",10],"{",["T_WHITESPACE","\n\n  ",10],["T_DOC_COMMENT","\/**\n   * Matches Unicode characters that are word boundaries.\n   *\n   * Characters with the following General_category (gc) property values are used\n   * as word boundaries. While this does not fully conform to the Word Boundaries\n   * algorithm described in http:\/\/unicode.org\/reports\/tr29, as PCRE does not\n   * contain the Word_Break property table, this simpler algorithm has to do.\n   * - Cc, Cf, Cn, Co, Cs: Other.\n   * - Pc, Pd, Pe, Pf, Pi, Po, Ps: Punctuation.\n   * - Sc, Sk, Sm, So: Symbols.\n   * - Zl, Zp, Zs: Separators.\n   *\n   * Non-boundary characters include the following General_category (gc) property\n   * values:\n   * - Ll, Lm, Lo, Lt, Lu: Letters.\n   * - Mc, Me, Mn: Combining Marks.\n   * - Nd, Nl, No: Numbers.\n   *\n   * Note that the PCRE property matcher is not used because we wanted to be\n   * compatible with Unicode 5.2.0 regardless of the PCRE version used (and any\n   * bugs in PCRE property tables).\n   *\n   * @see http:\/\/unicode.org\/glossary\n   *\/",12],["T_WHITESPACE","\n  ",35],["T_CONST","const",36],["T_WHITESPACE"," ",36],["T_STRING","PREG_CLASS_WORD_BOUNDARY",36],["T_WHITESPACE"," ",36],"=",["T_WHITESPACE"," ",36],["T_START_HEREDOC","<<<'EOD'\n",36],["T_ENCAPSED_AND_WHITESPACE","\\x{0}-\\x{2F}\\x{3A}-\\x{40}\\x{5B}-\\x{60}\\x{7B}-\\x{A9}\\x{AB}-\\x{B1}\\x{B4}\n\\x{B6}-\\x{B8}\\x{BB}\\x{BF}\\x{D7}\\x{F7}\\x{2C2}-\\x{2C5}\\x{2D2}-\\x{2DF}\n\\x{2E5}-\\x{2EB}\\x{2ED}\\x{2EF}-\\x{2FF}\\x{375}\\x{37E}-\\x{385}\\x{387}\\x{3F6}\n\\x{482}\\x{55A}-\\x{55F}\\x{589}-\\x{58A}\\x{5BE}\\x{5C0}\\x{5C3}\\x{5C6}\n\\x{5F3}-\\x{60F}\\x{61B}-\\x{61F}\\x{66A}-\\x{66D}\\x{6D4}\\x{6DD}\\x{6E9}\n\\x{6FD}-\\x{6FE}\\x{700}-\\x{70F}\\x{7F6}-\\x{7F9}\\x{830}-\\x{83E}\n\\x{964}-\\x{965}\\x{970}\\x{9F2}-\\x{9F3}\\x{9FA}-\\x{9FB}\\x{AF1}\\x{B70}\n\\x{BF3}-\\x{BFA}\\x{C7F}\\x{CF1}-\\x{CF2}\\x{D79}\\x{DF4}\\x{E3F}\\x{E4F}\n\\x{E5A}-\\x{E5B}\\x{F01}-\\x{F17}\\x{F1A}-\\x{F1F}\\x{F34}\\x{F36}\\x{F38}\n\\x{F3A}-\\x{F3D}\\x{F85}\\x{FBE}-\\x{FC5}\\x{FC7}-\\x{FD8}\\x{104A}-\\x{104F}\n\\x{109E}-\\x{109F}\\x{10FB}\\x{1360}-\\x{1368}\\x{1390}-\\x{1399}\\x{1400}\n\\x{166D}-\\x{166E}\\x{1680}\\x{169B}-\\x{169C}\\x{16EB}-\\x{16ED}\n\\x{1735}-\\x{1736}\\x{17B4}-\\x{17B5}\\x{17D4}-\\x{17D6}\\x{17D8}-\\x{17DB}\n\\x{1800}-\\x{180A}\\x{180E}\\x{1940}-\\x{1945}\\x{19DE}-\\x{19FF}\n\\x{1A1E}-\\x{1A1F}\\x{1AA0}-\\x{1AA6}\\x{1AA8}-\\x{1AAD}\\x{1B5A}-\\x{1B6A}\n\\x{1B74}-\\x{1B7C}\\x{1C3B}-\\x{1C3F}\\x{1C7E}-\\x{1C7F}\\x{1CD3}\\x{1FBD}\n\\x{1FBF}-\\x{1FC1}\\x{1FCD}-\\x{1FCF}\\x{1FDD}-\\x{1FDF}\\x{1FED}-\\x{1FEF}\n\\x{1FFD}-\\x{206F}\\x{207A}-\\x{207E}\\x{208A}-\\x{208E}\\x{20A0}-\\x{20B8}\n\\x{2100}-\\x{2101}\\x{2103}-\\x{2106}\\x{2108}-\\x{2109}\\x{2114}\n\\x{2116}-\\x{2118}\\x{211E}-\\x{2123}\\x{2125}\\x{2127}\\x{2129}\\x{212E}\n\\x{213A}-\\x{213B}\\x{2140}-\\x{2144}\\x{214A}-\\x{214D}\\x{214F}\n\\x{2190}-\\x{244A}\\x{249C}-\\x{24E9}\\x{2500}-\\x{2775}\\x{2794}-\\x{2B59}\n\\x{2CE5}-\\x{2CEA}\\x{2CF9}-\\x{2CFC}\\x{2CFE}-\\x{2CFF}\\x{2E00}-\\x{2E2E}\n\\x{2E30}-\\x{3004}\\x{3008}-\\x{3020}\\x{3030}\\x{3036}-\\x{3037}\n\\x{303D}-\\x{303F}\\x{309B}-\\x{309C}\\x{30A0}\\x{30FB}\\x{3190}-\\x{3191}\n\\x{3196}-\\x{319F}\\x{31C0}-\\x{31E3}\\x{3200}-\\x{321E}\\x{322A}-\\x{3250}\n\\x{3260}-\\x{327F}\\x{328A}-\\x{32B0}\\x{32C0}-\\x{33FF}\\x{4DC0}-\\x{4DFF}\n\\x{A490}-\\x{A4C6}\\x{A4FE}-\\x{A4FF}\\x{A60D}-\\x{A60F}\\x{A673}\\x{A67E}\n\\x{A6F2}-\\x{A716}\\x{A720}-\\x{A721}\\x{A789}-\\x{A78A}\\x{A828}-\\x{A82B}\n\\x{A836}-\\x{A839}\\x{A874}-\\x{A877}\\x{A8CE}-\\x{A8CF}\\x{A8F8}-\\x{A8FA}\n\\x{A92E}-\\x{A92F}\\x{A95F}\\x{A9C1}-\\x{A9CD}\\x{A9DE}-\\x{A9DF}\n\\x{AA5C}-\\x{AA5F}\\x{AA77}-\\x{AA79}\\x{AADE}-\\x{AADF}\\x{ABEB}\n\\x{E000}-\\x{F8FF}\\x{FB29}\\x{FD3E}-\\x{FD3F}\\x{FDFC}-\\x{FDFD}\n\\x{FE10}-\\x{FE19}\\x{FE30}-\\x{FE6B}\\x{FEFF}-\\x{FF0F}\\x{FF1A}-\\x{FF20}\n\\x{FF3B}-\\x{FF40}\\x{FF5B}-\\x{FF65}\\x{FFE0}-\\x{FFFD}\n",37],["T_END_HEREDOC","EOD",72],";",["T_WHITESPACE","\n\n  ",72],["T_DOC_COMMENT","\/**\n   * Indicates that standard PHP (emulated) unicode support is being used.\n   *\/",74],["T_WHITESPACE","\n  ",76],["T_CONST","const",77],["T_WHITESPACE"," ",77],["T_STRING","STATUS_SINGLEBYTE",77],["T_WHITESPACE"," ",77],"=",["T_WHITESPACE"," ",77],["T_LNUMBER","0",77],";",["T_WHITESPACE","\n\n  ",77],["T_DOC_COMMENT","\/**\n   * Indicates that full unicode support with the PHP mbstring extension is\n   * being used.\n   *\/",79],["T_WHITESPACE","\n  ",82],["T_CONST","const",83],["T_WHITESPACE"," ",83],["T_STRING","STATUS_MULTIBYTE",83],["T_WHITESPACE"," ",83],"=",["T_WHITESPACE"," ",83],["T_LNUMBER","1",83],";",["T_WHITESPACE","\n\n  ",83],["T_DOC_COMMENT","\/**\n   * Indicates an error during check for PHP unicode support.\n   *\/",85],["T_WHITESPACE","\n  ",87],["T_CONST","const",88],["T_WHITESPACE"," ",88],["T_STRING","STATUS_ERROR",88],["T_WHITESPACE"," ",88],"=",["T_WHITESPACE"," ",88],"-",["T_LNUMBER","1",88],";",["T_WHITESPACE","\n\n  ",88],["T_DOC_COMMENT","\/**\n   * Holds the multibyte capabilities of the current environment.\n   *\n   * @var int\n   *\/",90],["T_WHITESPACE","\n  ",94],["T_PROTECTED","protected",95],["T_WHITESPACE"," ",95],["T_STATIC","static",95],["T_WHITESPACE"," ",95],["T_VARIABLE","$status",95],["T_WHITESPACE"," ",95],"=",["T_WHITESPACE"," ",95],["T_LNUMBER","0",95],";",["T_WHITESPACE","\n\n  ",95],["T_DOC_COMMENT","\/**\n   * Gets the current status of unicode\/multibyte support on this environment.\n   *\n   * @return int\n   *   The status of multibyte support. It can be one of:\n   *   - \\Drupal\\Component\\Utility\\Unicode::STATUS_MULTIBYTE\n   *     Full unicode support using an extension.\n   *   - \\Drupal\\Component\\Utility\\Unicode::STATUS_SINGLEBYTE\n   *     Standard PHP (emulated) unicode support.\n   *   - \\Drupal\\Component\\Utility\\Unicode::STATUS_ERROR\n   *     An error occurred. No unicode support.\n   *\/",97],["T_WHITESPACE","\n  ",108],["T_PUBLIC","public",109],["T_WHITESPACE"," ",109],["T_STATIC","static",109],["T_WHITESPACE"," ",109],["T_FUNCTION","function",109],["T_WHITESPACE"," ",109],["T_STRING","getStatus",109],"(",")",["T_WHITESPACE"," ",109],"{",["T_WHITESPACE","\n    ",109],["T_RETURN","return",110],["T_WHITESPACE"," ",110],["T_STATIC","static",110],["T_DOUBLE_COLON","::",110],["T_VARIABLE","$status",110],";",["T_WHITESPACE","\n  ",110],"}",["T_WHITESPACE","\n\n  ",111],["T_DOC_COMMENT","\/**\n   * Sets the value for multibyte support status for the current environment.\n   *\n   * The following status keys are supported:\n   *   - \\Drupal\\Component\\Utility\\Unicode::STATUS_MULTIBYTE\n   *     Full unicode support using an extension.\n   *   - \\Drupal\\Component\\Utility\\Unicode::STATUS_SINGLEBYTE\n   *     Standard PHP (emulated) unicode support.\n   *   - \\Drupal\\Component\\Utility\\Unicode::STATUS_ERROR\n   *     An error occurred. No unicode support.\n   *\n   * @param int $status\n   *   The new status of multibyte support.\n   *\/",113],["T_WHITESPACE","\n  ",126],["T_PUBLIC","public",127],["T_WHITESPACE"," ",127],["T_STATIC","static",127],["T_WHITESPACE"," ",127],["T_FUNCTION","function",127],["T_WHITESPACE"," ",127],["T_STRING","setStatus",127],"(",["T_VARIABLE","$status",127],")",["T_WHITESPACE"," ",127],"{",["T_WHITESPACE","\n    ",127],["T_IF","if",128],["T_WHITESPACE"," ",128],"(","!",["T_STRING","in_array",128],"(",["T_VARIABLE","$status",128],",",["T_WHITESPACE"," ",128],["T_ARRAY","array",128],"(",["T_STATIC","static",128],["T_DOUBLE_COLON","::",128],["T_STRING","STATUS_SINGLEBYTE",128],",",["T_WHITESPACE"," ",128],["T_STATIC","static",128],["T_DOUBLE_COLON","::",128],["T_STRING","STATUS_MULTIBYTE",128],",",["T_WHITESPACE"," ",128],["T_STATIC","static",128],["T_DOUBLE_COLON","::",128],["T_STRING","STATUS_ERROR",128],")",")",")",["T_WHITESPACE"," ",128],"{",["T_WHITESPACE","\n      ",128],["T_THROW","throw",129],["T_WHITESPACE"," ",129],["T_NEW","new",129],["T_WHITESPACE"," ",129],["T_NS_SEPARATOR","\\",129],["T_STRING","InvalidArgumentException",129],"(",["T_CONSTANT_ENCAPSED_STRING","'Invalid status value for unicode support.'",129],")",";",["T_WHITESPACE","\n    ",129],"}",["T_WHITESPACE","\n    ",130],["T_STATIC","static",131],["T_DOUBLE_COLON","::",131],["T_VARIABLE","$status",131],["T_WHITESPACE"," ",131],"=",["T_WHITESPACE"," ",131],["T_VARIABLE","$status",131],";",["T_WHITESPACE","\n  ",131],"}",["T_WHITESPACE","\n\n  ",132],["T_DOC_COMMENT","\/**\n   * Checks for Unicode support in PHP and sets the proper settings if possible.\n   *\n   * Because of the need to be able to handle text in various encodings, we do\n   * not support mbstring function overloading. HTTP input\/output conversion\n   * must be disabled for similar reasons.\n   *\n   * @return string\n   *   A string identifier of a failed multibyte extension check, if any.\n   *   Otherwise, an empty string.\n   *\/",134],["T_WHITESPACE","\n  ",144],["T_PUBLIC","public",145],["T_WHITESPACE"," ",145],["T_STATIC","static",145],["T_WHITESPACE"," ",145],["T_FUNCTION","function",145],["T_WHITESPACE"," ",145],["T_STRING","check",145],"(",")",["T_WHITESPACE"," ",145],"{",["T_WHITESPACE","\n    ",145],["T_COMMENT","\/\/ Check for mbstring extension.\n",146],["T_WHITESPACE","    ",147],["T_IF","if",147],["T_WHITESPACE"," ",147],"(","!",["T_STRING","function_exists",147],"(",["T_CONSTANT_ENCAPSED_STRING","'mb_strlen'",147],")",")",["T_WHITESPACE"," ",147],"{",["T_WHITESPACE","\n      ",147],["T_STATIC","static",148],["T_DOUBLE_COLON","::",148],["T_VARIABLE","$status",148],["T_WHITESPACE"," ",148],"=",["T_WHITESPACE"," ",148],["T_STATIC","static",148],["T_DOUBLE_COLON","::",148],["T_STRING","STATUS_SINGLEBYTE",148],";",["T_WHITESPACE","\n      ",148],["T_RETURN","return",149],["T_WHITESPACE"," ",149],["T_CONSTANT_ENCAPSED_STRING","'mb_strlen'",149],";",["T_WHITESPACE","\n    ",149],"}",["T_WHITESPACE","\n\n    ",150],["T_COMMENT","\/\/ Check mbstring configuration.\n",152],["T_WHITESPACE","    ",153],["T_IF","if",153],["T_WHITESPACE"," ",153],"(",["T_STRING","ini_get",153],"(",["T_CONSTANT_ENCAPSED_STRING","'mbstring.func_overload'",153],")",["T_WHITESPACE"," ",153],["T_IS_NOT_EQUAL","!=",153],["T_WHITESPACE"," ",153],["T_LNUMBER","0",153],")",["T_WHITESPACE"," ",153],"{",["T_WHITESPACE","\n      ",153],["T_STATIC","static",154],["T_DOUBLE_COLON","::",154],["T_VARIABLE","$status",154],["T_WHITESPACE"," ",154],"=",["T_WHITESPACE"," ",154],["T_STATIC","static",154],["T_DOUBLE_COLON","::",154],["T_STRING","STATUS_ERROR",154],";",["T_WHITESPACE","\n      ",154],["T_RETURN","return",155],["T_WHITESPACE"," ",155],["T_CONSTANT_ENCAPSED_STRING","'mbstring.func_overload'",155],";",["T_WHITESPACE","\n    ",155],"}",["T_WHITESPACE","\n    ",156],["T_IF","if",157],["T_WHITESPACE"," ",157],"(",["T_STRING","ini_get",157],"(",["T_CONSTANT_ENCAPSED_STRING","'mbstring.encoding_translation'",157],")",["T_WHITESPACE"," ",157],["T_IS_NOT_EQUAL","!=",157],["T_WHITESPACE"," ",157],["T_LNUMBER","0",157],")",["T_WHITESPACE"," ",157],"{",["T_WHITESPACE","\n      ",157],["T_STATIC","static",158],["T_DOUBLE_COLON","::",158],["T_VARIABLE","$status",158],["T_WHITESPACE"," ",158],"=",["T_WHITESPACE"," ",158],["T_STATIC","static",158],["T_DOUBLE_COLON","::",158],["T_STRING","STATUS_ERROR",158],";",["T_WHITESPACE","\n      ",158],["T_RETURN","return",159],["T_WHITESPACE"," ",159],["T_CONSTANT_ENCAPSED_STRING","'mbstring.encoding_translation'",159],";",["T_WHITESPACE","\n    ",159],"}",["T_WHITESPACE","\n    ",160],["T_COMMENT","\/\/ mbstring.http_input and mbstring.http_output are deprecated and empty by\n",161],["T_WHITESPACE","    ",162],["T_COMMENT","\/\/ default in PHP 5.6.\n",162],["T_WHITESPACE","    ",163],["T_IF","if",163],["T_WHITESPACE"," ",163],"(",["T_STRING","version_compare",163],"(",["T_STRING","PHP_VERSION",163],",",["T_WHITESPACE"," ",163],["T_CONSTANT_ENCAPSED_STRING","'5.6.0'",163],")",["T_WHITESPACE"," ",163],["T_IS_EQUAL","==",163],["T_WHITESPACE"," ",163],"-",["T_LNUMBER","1",163],")",["T_WHITESPACE"," ",163],"{",["T_WHITESPACE","\n      ",163],["T_IF","if",164],["T_WHITESPACE"," ",164],"(",["T_STRING","ini_get",164],"(",["T_CONSTANT_ENCAPSED_STRING","'mbstring.http_input'",164],")",["T_WHITESPACE"," ",164],["T_IS_NOT_EQUAL","!=",164],["T_WHITESPACE"," ",164],["T_CONSTANT_ENCAPSED_STRING","'pass'",164],")",["T_WHITESPACE"," ",164],"{",["T_WHITESPACE","\n        ",164],["T_STATIC","static",165],["T_DOUBLE_COLON","::",165],["T_VARIABLE","$status",165],["T_WHITESPACE"," ",165],"=",["T_WHITESPACE"," ",165],["T_STATIC","static",165],["T_DOUBLE_COLON","::",165],["T_STRING","STATUS_ERROR",165],";",["T_WHITESPACE","\n        ",165],["T_RETURN","return",166],["T_WHITESPACE"," ",166],["T_CONSTANT_ENCAPSED_STRING","'mbstring.http_input'",166],";",["T_WHITESPACE","\n      ",166],"}",["T_WHITESPACE","\n      ",167],["T_IF","if",168],["T_WHITESPACE"," ",168],"(",["T_STRING","ini_get",168],"(",["T_CONSTANT_ENCAPSED_STRING","'mbstring.http_output'",168],")",["T_WHITESPACE"," ",168],["T_IS_NOT_EQUAL","!=",168],["T_WHITESPACE"," ",168],["T_CONSTANT_ENCAPSED_STRING","'pass'",168],")",["T_WHITESPACE"," ",168],"{",["T_WHITESPACE","\n        ",168],["T_STATIC","static",169],["T_DOUBLE_COLON","::",169],["T_VARIABLE","$status",169],["T_WHITESPACE"," ",169],"=",["T_WHITESPACE"," ",169],["T_STATIC","static",169],["T_DOUBLE_COLON","::",169],["T_STRING","STATUS_ERROR",169],";",["T_WHITESPACE","\n        ",169],["T_RETURN","return",170],["T_WHITESPACE"," ",170],["T_CONSTANT_ENCAPSED_STRING","'mbstring.http_output'",170],";",["T_WHITESPACE","\n      ",170],"}",["T_WHITESPACE","\n    ",171],"}",["T_WHITESPACE","\n\n    ",172],["T_COMMENT","\/\/ Set appropriate configuration.\n",174],["T_WHITESPACE","    ",175],["T_STRING","mb_internal_encoding",175],"(",["T_CONSTANT_ENCAPSED_STRING","'utf-8'",175],")",";",["T_WHITESPACE","\n    ",175],["T_STRING","mb_language",176],"(",["T_CONSTANT_ENCAPSED_STRING","'uni'",176],")",";",["T_WHITESPACE","\n    ",176],["T_STATIC","static",177],["T_DOUBLE_COLON","::",177],["T_VARIABLE","$status",177],["T_WHITESPACE"," ",177],"=",["T_WHITESPACE"," ",177],["T_STATIC","static",177],["T_DOUBLE_COLON","::",177],["T_STRING","STATUS_MULTIBYTE",177],";",["T_WHITESPACE","\n    ",177],["T_RETURN","return",178],["T_WHITESPACE"," ",178],["T_CONSTANT_ENCAPSED_STRING","''",178],";",["T_WHITESPACE","\n  ",178],"}",["T_WHITESPACE","\n\n  ",179],["T_DOC_COMMENT","\/**\n   * Decodes UTF byte-order mark (BOM) into the encoding's name.\n   *\n   * @param string $data\n   *   The data possibly containing a BOM. This can be the entire contents of\n   *   a file, or just a fragment containing at least the first five bytes.\n   *\n   * @return string|bool\n   *   The name of the encoding, or FALSE if no byte order mark was present.\n   *\/",181],["T_WHITESPACE","\n  ",190],["T_PUBLIC","public",191],["T_WHITESPACE"," ",191],["T_STATIC","static",191],["T_WHITESPACE"," ",191],["T_FUNCTION","function",191],["T_WHITESPACE"," ",191],["T_STRING","encodingFromBOM",191],"(",["T_VARIABLE","$data",191],")",["T_WHITESPACE"," ",191],"{",["T_WHITESPACE","\n    ",191],["T_STATIC","static",192],["T_WHITESPACE"," ",192],["T_VARIABLE","$bomMap",192],["T_WHITESPACE"," ",192],"=",["T_WHITESPACE"," ",192],["T_ARRAY","array",192],"(",["T_WHITESPACE","\n      ",192],["T_CONSTANT_ENCAPSED_STRING","\"\\xEF\\xBB\\xBF\"",193],["T_WHITESPACE"," ",193],["T_DOUBLE_ARROW","=>",193],["T_WHITESPACE"," ",193],["T_CONSTANT_ENCAPSED_STRING","'UTF-8'",193],",",["T_WHITESPACE","\n      ",193],["T_CONSTANT_ENCAPSED_STRING","\"\\xFE\\xFF\"",194],["T_WHITESPACE"," ",194],["T_DOUBLE_ARROW","=>",194],["T_WHITESPACE"," ",194],["T_CONSTANT_ENCAPSED_STRING","'UTF-16BE'",194],",",["T_WHITESPACE","\n      ",194],["T_CONSTANT_ENCAPSED_STRING","\"\\xFF\\xFE\"",195],["T_WHITESPACE"," ",195],["T_DOUBLE_ARROW","=>",195],["T_WHITESPACE"," ",195],["T_CONSTANT_ENCAPSED_STRING","'UTF-16LE'",195],",",["T_WHITESPACE","\n      ",195],["T_CONSTANT_ENCAPSED_STRING","\"\\x00\\x00\\xFE\\xFF\"",196],["T_WHITESPACE"," ",196],["T_DOUBLE_ARROW","=>",196],["T_WHITESPACE"," ",196],["T_CONSTANT_ENCAPSED_STRING","'UTF-32BE'",196],",",["T_WHITESPACE","\n      ",196],["T_CONSTANT_ENCAPSED_STRING","\"\\xFF\\xFE\\x00\\x00\"",197],["T_WHITESPACE"," ",197],["T_DOUBLE_ARROW","=>",197],["T_WHITESPACE"," ",197],["T_CONSTANT_ENCAPSED_STRING","'UTF-32LE'",197],",",["T_WHITESPACE","\n      ",197],["T_CONSTANT_ENCAPSED_STRING","\"\\x2B\\x2F\\x76\\x38\"",198],["T_WHITESPACE"," ",198],["T_DOUBLE_ARROW","=>",198],["T_WHITESPACE"," ",198],["T_CONSTANT_ENCAPSED_STRING","'UTF-7'",198],",",["T_WHITESPACE","\n      ",198],["T_CONSTANT_ENCAPSED_STRING","\"\\x2B\\x2F\\x76\\x39\"",199],["T_WHITESPACE"," ",199],["T_DOUBLE_ARROW","=>",199],["T_WHITESPACE"," ",199],["T_CONSTANT_ENCAPSED_STRING","'UTF-7'",199],",",["T_WHITESPACE","\n      ",199],["T_CONSTANT_ENCAPSED_STRING","\"\\x2B\\x2F\\x76\\x2B\"",200],["T_WHITESPACE"," ",200],["T_DOUBLE_ARROW","=>",200],["T_WHITESPACE"," ",200],["T_CONSTANT_ENCAPSED_STRING","'UTF-7'",200],",",["T_WHITESPACE","\n      ",200],["T_CONSTANT_ENCAPSED_STRING","\"\\x2B\\x2F\\x76\\x2F\"",201],["T_WHITESPACE"," ",201],["T_DOUBLE_ARROW","=>",201],["T_WHITESPACE"," ",201],["T_CONSTANT_ENCAPSED_STRING","'UTF-7'",201],",",["T_WHITESPACE","\n      ",201],["T_CONSTANT_ENCAPSED_STRING","\"\\x2B\\x2F\\x76\\x38\\x2D\"",202],["T_WHITESPACE"," ",202],["T_DOUBLE_ARROW","=>",202],["T_WHITESPACE"," ",202],["T_CONSTANT_ENCAPSED_STRING","'UTF-7'",202],",",["T_WHITESPACE","\n    ",202],")",";",["T_WHITESPACE","\n\n    ",203],["T_FOREACH","foreach",205],["T_WHITESPACE"," ",205],"(",["T_VARIABLE","$bomMap",205],["T_WHITESPACE"," ",205],["T_AS","as",205],["T_WHITESPACE"," ",205],["T_VARIABLE","$bom",205],["T_WHITESPACE"," ",205],["T_DOUBLE_ARROW","=>",205],["T_WHITESPACE"," ",205],["T_VARIABLE","$encoding",205],")",["T_WHITESPACE"," ",205],"{",["T_WHITESPACE","\n      ",205],["T_IF","if",206],["T_WHITESPACE"," ",206],"(",["T_STRING","strpos",206],"(",["T_VARIABLE","$data",206],",",["T_WHITESPACE"," ",206],["T_VARIABLE","$bom",206],")",["T_WHITESPACE"," ",206],["T_IS_IDENTICAL","===",206],["T_WHITESPACE"," ",206],["T_LNUMBER","0",206],")",["T_WHITESPACE"," ",206],"{",["T_WHITESPACE","\n        ",206],["T_RETURN","return",207],["T_WHITESPACE"," ",207],["T_VARIABLE","$encoding",207],";",["T_WHITESPACE","\n      ",207],"}",["T_WHITESPACE","\n    ",208],"}",["T_WHITESPACE","\n    ",209],["T_RETURN","return",210],["T_WHITESPACE"," ",210],["T_STRING","FALSE",210],";",["T_WHITESPACE","\n  ",210],"}",["T_WHITESPACE","\n\n  ",211],["T_DOC_COMMENT","\/**\n   * Converts data to UTF-8.\n   *\n   * Requires the iconv, GNU recode or mbstring PHP extension.\n   *\n   * @param string $data\n   *   The data to be converted.\n   * @param string $encoding\n   *   The encoding that the data is in.\n   *\n   * @return string|bool\n   *   Converted data or FALSE.\n   *\/",213],["T_WHITESPACE","\n  ",225],["T_PUBLIC","public",226],["T_WHITESPACE"," ",226],["T_STATIC","static",226],["T_WHITESPACE"," ",226],["T_FUNCTION","function",226],["T_WHITESPACE"," ",226],["T_STRING","convertToUtf8",226],"(",["T_VARIABLE","$data",226],",",["T_WHITESPACE"," ",226],["T_VARIABLE","$encoding",226],")",["T_WHITESPACE"," ",226],"{",["T_WHITESPACE","\n    ",226],["T_IF","if",227],["T_WHITESPACE"," ",227],"(",["T_STRING","function_exists",227],"(",["T_CONSTANT_ENCAPSED_STRING","'iconv'",227],")",")",["T_WHITESPACE"," ",227],"{",["T_WHITESPACE","\n      ",227],["T_RETURN","return",228],["T_WHITESPACE"," ",228],"@",["T_STRING","iconv",228],"(",["T_VARIABLE","$encoding",228],",",["T_WHITESPACE"," ",228],["T_CONSTANT_ENCAPSED_STRING","'utf-8'",228],",",["T_WHITESPACE"," ",228],["T_VARIABLE","$data",228],")",";",["T_WHITESPACE","\n    ",228],"}",["T_WHITESPACE","\n    ",229],["T_ELSEIF","elseif",230],["T_WHITESPACE"," ",230],"(",["T_STRING","function_exists",230],"(",["T_CONSTANT_ENCAPSED_STRING","'mb_convert_encoding'",230],")",")",["T_WHITESPACE"," ",230],"{",["T_WHITESPACE","\n      ",230],["T_RETURN","return",231],["T_WHITESPACE"," ",231],"@",["T_STRING","mb_convert_encoding",231],"(",["T_VARIABLE","$data",231],",",["T_WHITESPACE"," ",231],["T_CONSTANT_ENCAPSED_STRING","'utf-8'",231],",",["T_WHITESPACE"," ",231],["T_VARIABLE","$encoding",231],")",";",["T_WHITESPACE","\n    ",231],"}",["T_WHITESPACE","\n    ",232],["T_ELSEIF","elseif",233],["T_WHITESPACE"," ",233],"(",["T_STRING","function_exists",233],"(",["T_CONSTANT_ENCAPSED_STRING","'recode_string'",233],")",")",["T_WHITESPACE"," ",233],"{",["T_WHITESPACE","\n      ",233],["T_RETURN","return",234],["T_WHITESPACE"," ",234],"@",["T_STRING","recode_string",234],"(",["T_VARIABLE","$encoding",234],["T_WHITESPACE"," ",234],".",["T_WHITESPACE"," ",234],["T_CONSTANT_ENCAPSED_STRING","'..utf-8'",234],",",["T_WHITESPACE"," ",234],["T_VARIABLE","$data",234],")",";",["T_WHITESPACE","\n    ",234],"}",["T_WHITESPACE","\n    ",235],["T_COMMENT","\/\/ Cannot convert.\n",236],["T_WHITESPACE","    ",237],["T_RETURN","return",237],["T_WHITESPACE"," ",237],["T_STRING","FALSE",237],";",["T_WHITESPACE","\n  ",237],"}",["T_WHITESPACE","\n\n  ",238],["T_DOC_COMMENT","\/**\n   * Truncates a UTF-8-encoded string safely to a number of bytes.\n   *\n   * If the end position is in the middle of a UTF-8 sequence, it scans backwards\n   * until the beginning of the byte sequence.\n   *\n   * Use this function whenever you want to chop off a string at an unsure\n   * location. On the other hand, if you're sure that you're splitting on a\n   * character boundary (e.g. after using strpos() or similar), you can safely\n   * use substr() instead.\n   *\n   * @param string $string\n   *   The string to truncate.\n   * @param int $len\n   *   An upper limit on the returned string length.\n   *\n   * @return string\n   *   The truncated string.\n   *\/",240],["T_WHITESPACE","\n  ",258],["T_PUBLIC","public",259],["T_WHITESPACE"," ",259],["T_STATIC","static",259],["T_WHITESPACE"," ",259],["T_FUNCTION","function",259],["T_WHITESPACE"," ",259],["T_STRING","truncateBytes",259],"(",["T_VARIABLE","$string",259],",",["T_WHITESPACE"," ",259],["T_VARIABLE","$len",259],")",["T_WHITESPACE"," ",259],"{",["T_WHITESPACE","\n    ",259],["T_IF","if",260],["T_WHITESPACE"," ",260],"(",["T_STRING","strlen",260],"(",["T_VARIABLE","$string",260],")",["T_WHITESPACE"," ",260],["T_IS_SMALLER_OR_EQUAL","<=",260],["T_WHITESPACE"," ",260],["T_VARIABLE","$len",260],")",["T_WHITESPACE"," ",260],"{",["T_WHITESPACE","\n      ",260],["T_RETURN","return",261],["T_WHITESPACE"," ",261],["T_VARIABLE","$string",261],";",["T_WHITESPACE","\n    ",261],"}",["T_WHITESPACE","\n    ",262],["T_IF","if",263],["T_WHITESPACE"," ",263],"(","(",["T_STRING","ord",263],"(",["T_VARIABLE","$string",263],"[",["T_VARIABLE","$len",263],"]",")",["T_WHITESPACE"," ",263],"<",["T_WHITESPACE"," ",263],["T_LNUMBER","0x80",263],")",["T_WHITESPACE"," ",263],["T_BOOLEAN_OR","||",263],["T_WHITESPACE"," ",263],"(",["T_STRING","ord",263],"(",["T_VARIABLE","$string",263],"[",["T_VARIABLE","$len",263],"]",")",["T_WHITESPACE"," ",263],["T_IS_GREATER_OR_EQUAL",">=",263],["T_WHITESPACE"," ",263],["T_LNUMBER","0xC0",263],")",")",["T_WHITESPACE"," ",263],"{",["T_WHITESPACE","\n      ",263],["T_RETURN","return",264],["T_WHITESPACE"," ",264],["T_STRING","substr",264],"(",["T_VARIABLE","$string",264],",",["T_WHITESPACE"," ",264],["T_LNUMBER","0",264],",",["T_WHITESPACE"," ",264],["T_VARIABLE","$len",264],")",";",["T_WHITESPACE","\n    ",264],"}",["T_WHITESPACE","\n    ",265],["T_COMMENT","\/\/ Scan backwards to beginning of the byte sequence.\n",266],["T_WHITESPACE","    ",267],["T_WHILE","while",267],["T_WHITESPACE"," ",267],"(",["T_DEC","--",267],["T_VARIABLE","$len",267],["T_WHITESPACE"," ",267],["T_IS_GREATER_OR_EQUAL",">=",267],["T_WHITESPACE"," ",267],["T_LNUMBER","0",267],["T_WHITESPACE"," ",267],["T_BOOLEAN_AND","&&",267],["T_WHITESPACE"," ",267],["T_STRING","ord",267],"(",["T_VARIABLE","$string",267],"[",["T_VARIABLE","$len",267],"]",")",["T_WHITESPACE"," ",267],["T_IS_GREATER_OR_EQUAL",">=",267],["T_WHITESPACE"," ",267],["T_LNUMBER","0x80",267],["T_WHITESPACE"," ",267],["T_BOOLEAN_AND","&&",267],["T_WHITESPACE"," ",267],["T_STRING","ord",267],"(",["T_VARIABLE","$string",267],"[",["T_VARIABLE","$len",267],"]",")",["T_WHITESPACE"," ",267],"<",["T_WHITESPACE"," ",267],["T_LNUMBER","0xC0",267],")",";",["T_WHITESPACE","\n\n    ",267],["T_RETURN","return",269],["T_WHITESPACE"," ",269],["T_STRING","substr",269],"(",["T_VARIABLE","$string",269],",",["T_WHITESPACE"," ",269],["T_LNUMBER","0",269],",",["T_WHITESPACE"," ",269],["T_VARIABLE","$len",269],")",";",["T_WHITESPACE","\n  ",269],"}",["T_WHITESPACE","\n\n  ",270],["T_DOC_COMMENT","\/**\n   * Counts the number of characters in a UTF-8 string.\n   *\n   * This is less than or equal to the byte count.\n   *\n   * @param string $text\n   *   The string to run the operation on.\n   *\n   * @return int\n   *   The length of the string.\n   *\/",272],["T_WHITESPACE","\n  ",282],["T_PUBLIC","public",283],["T_WHITESPACE"," ",283],["T_STATIC","static",283],["T_WHITESPACE"," ",283],["T_FUNCTION","function",283],["T_WHITESPACE"," ",283],["T_STRING","strlen",283],"(",["T_VARIABLE","$text",283],")",["T_WHITESPACE"," ",283],"{",["T_WHITESPACE","\n    ",283],["T_IF","if",284],["T_WHITESPACE"," ",284],"(",["T_STATIC","static",284],["T_DOUBLE_COLON","::",284],["T_STRING","getStatus",284],"(",")",["T_WHITESPACE"," ",284],["T_IS_EQUAL","==",284],["T_WHITESPACE"," ",284],["T_STATIC","static",284],["T_DOUBLE_COLON","::",284],["T_STRING","STATUS_MULTIBYTE",284],")",["T_WHITESPACE"," ",284],"{",["T_WHITESPACE","\n      ",284],["T_RETURN","return",285],["T_WHITESPACE"," ",285],["T_STRING","mb_strlen",285],"(",["T_VARIABLE","$text",285],")",";",["T_WHITESPACE","\n    ",285],"}",["T_WHITESPACE","\n    ",286],["T_ELSE","else",287],["T_WHITESPACE"," ",287],"{",["T_WHITESPACE","\n      ",287],["T_COMMENT","\/\/ Do not count UTF-8 continuation bytes.\n",288],["T_WHITESPACE","      ",289],["T_RETURN","return",289],["T_WHITESPACE"," ",289],["T_STRING","strlen",289],"(",["T_STRING","preg_replace",289],"(",["T_CONSTANT_ENCAPSED_STRING","\"\/[\\x80-\\xBF]\/\"",289],",",["T_WHITESPACE"," ",289],["T_CONSTANT_ENCAPSED_STRING","''",289],",",["T_WHITESPACE"," ",289],["T_VARIABLE","$text",289],")",")",";",["T_WHITESPACE","\n    ",289],"}",["T_WHITESPACE","\n  ",290],"}",["T_WHITESPACE","\n\n  ",291],["T_DOC_COMMENT","\/**\n   * Converts a UTF-8 string to uppercase.\n   *\n   * @param string $text\n   *   The string to run the operation on.\n   *\n   * @return string\n   *   The string in uppercase.\n   *\/",293],["T_WHITESPACE","\n  ",301],["T_PUBLIC","public",302],["T_WHITESPACE"," ",302],["T_STATIC","static",302],["T_WHITESPACE"," ",302],["T_FUNCTION","function",302],["T_WHITESPACE"," ",302],["T_STRING","strtoupper",302],"(",["T_VARIABLE","$text",302],")",["T_WHITESPACE"," ",302],"{",["T_WHITESPACE","\n    ",302],["T_IF","if",303],["T_WHITESPACE"," ",303],"(",["T_STATIC","static",303],["T_DOUBLE_COLON","::",303],["T_STRING","getStatus",303],"(",")",["T_WHITESPACE"," ",303],["T_IS_EQUAL","==",303],["T_WHITESPACE"," ",303],["T_STATIC","static",303],["T_DOUBLE_COLON","::",303],["T_STRING","STATUS_MULTIBYTE",303],")",["T_WHITESPACE"," ",303],"{",["T_WHITESPACE","\n      ",303],["T_RETURN","return",304],["T_WHITESPACE"," ",304],["T_STRING","mb_strtoupper",304],"(",["T_VARIABLE","$text",304],")",";",["T_WHITESPACE","\n    ",304],"}",["T_WHITESPACE","\n    ",305],["T_ELSE","else",306],["T_WHITESPACE"," ",306],"{",["T_WHITESPACE","\n      ",306],["T_COMMENT","\/\/ Use C-locale for ASCII-only uppercase.\n",307],["T_WHITESPACE","      ",308],["T_VARIABLE","$text",308],["T_WHITESPACE"," ",308],"=",["T_WHITESPACE"," ",308],["T_STRING","strtoupper",308],"(",["T_VARIABLE","$text",308],")",";",["T_WHITESPACE","\n      ",308],["T_COMMENT","\/\/ Case flip Latin-1 accented letters.\n",309],["T_WHITESPACE","      ",310],["T_VARIABLE","$text",310],["T_WHITESPACE"," ",310],"=",["T_WHITESPACE"," ",310],["T_STRING","preg_replace_callback",310],"(",["T_CONSTANT_ENCAPSED_STRING","'\/\\xC3[\\xA0-\\xB6\\xB8-\\xBE]\/'",310],",",["T_WHITESPACE"," ",310],["T_CONSTANT_ENCAPSED_STRING","'\\Drupal\\Component\\Utility\\Unicode::caseFlip'",310],",",["T_WHITESPACE"," ",310],["T_VARIABLE","$text",310],")",";",["T_WHITESPACE","\n      ",310],["T_RETURN","return",311],["T_WHITESPACE"," ",311],["T_VARIABLE","$text",311],";",["T_WHITESPACE","\n    ",311],"}",["T_WHITESPACE","\n  ",312],"}",["T_WHITESPACE","\n\n  ",313],["T_DOC_COMMENT","\/**\n   * Converts a UTF-8 string to lowercase.\n   *\n   * @param string $text\n   *   The string to run the operation on.\n   *\n   * @return string\n   *   The string in lowercase.\n   *\/",315],["T_WHITESPACE","\n  ",323],["T_PUBLIC","public",324],["T_WHITESPACE"," ",324],["T_STATIC","static",324],["T_WHITESPACE"," ",324],["T_FUNCTION","function",324],["T_WHITESPACE"," ",324],["T_STRING","strtolower",324],"(",["T_VARIABLE","$text",324],")",["T_WHITESPACE"," ",324],"{",["T_WHITESPACE","\n    ",324],["T_IF","if",325],["T_WHITESPACE"," ",325],"(",["T_STATIC","static",325],["T_DOUBLE_COLON","::",325],["T_STRING","getStatus",325],"(",")",["T_WHITESPACE"," ",325],["T_IS_EQUAL","==",325],["T_WHITESPACE"," ",325],["T_STATIC","static",325],["T_DOUBLE_COLON","::",325],["T_STRING","STATUS_MULTIBYTE",325],")",["T_WHITESPACE"," ",325],"{",["T_WHITESPACE","\n      ",325],["T_RETURN","return",326],["T_WHITESPACE"," ",326],["T_STRING","mb_strtolower",326],"(",["T_VARIABLE","$text",326],")",";",["T_WHITESPACE","\n    ",326],"}",["T_WHITESPACE","\n    ",327],["T_ELSE","else",328],["T_WHITESPACE"," ",328],"{",["T_WHITESPACE","\n      ",328],["T_COMMENT","\/\/ Use C-locale for ASCII-only lowercase.\n",329],["T_WHITESPACE","      ",330],["T_VARIABLE","$text",330],["T_WHITESPACE"," ",330],"=",["T_WHITESPACE"," ",330],["T_STRING","strtolower",330],"(",["T_VARIABLE","$text",330],")",";",["T_WHITESPACE","\n      ",330],["T_COMMENT","\/\/ Case flip Latin-1 accented letters.\n",331],["T_WHITESPACE","      ",332],["T_VARIABLE","$text",332],["T_WHITESPACE"," ",332],"=",["T_WHITESPACE"," ",332],["T_STRING","preg_replace_callback",332],"(",["T_CONSTANT_ENCAPSED_STRING","'\/\\xC3[\\x80-\\x96\\x98-\\x9E]\/'",332],",",["T_WHITESPACE"," ",332],["T_CONSTANT_ENCAPSED_STRING","'\\Drupal\\Component\\Utility\\Unicode::caseFlip'",332],",",["T_WHITESPACE"," ",332],["T_VARIABLE","$text",332],")",";",["T_WHITESPACE","\n      ",332],["T_RETURN","return",333],["T_WHITESPACE"," ",333],["T_VARIABLE","$text",333],";",["T_WHITESPACE","\n    ",333],"}",["T_WHITESPACE","\n  ",334],"}",["T_WHITESPACE","\n\n  ",335],["T_DOC_COMMENT","\/**\n   * Capitalizes the first character of a UTF-8 string.\n   *\n   * @param string $text\n   *   The string to convert.\n   *\n   * @return string\n   *   The string with the first character as uppercase.\n   *\/",337],["T_WHITESPACE","\n  ",345],["T_PUBLIC","public",346],["T_WHITESPACE"," ",346],["T_STATIC","static",346],["T_WHITESPACE"," ",346],["T_FUNCTION","function",346],["T_WHITESPACE"," ",346],["T_STRING","ucfirst",346],"(",["T_VARIABLE","$text",346],")",["T_WHITESPACE"," ",346],"{",["T_WHITESPACE","\n    ",346],["T_RETURN","return",347],["T_WHITESPACE"," ",347],["T_STATIC","static",347],["T_DOUBLE_COLON","::",347],["T_STRING","strtoupper",347],"(",["T_STATIC","static",347],["T_DOUBLE_COLON","::",347],["T_STRING","substr",347],"(",["T_VARIABLE","$text",347],",",["T_WHITESPACE"," ",347],["T_LNUMBER","0",347],",",["T_WHITESPACE"," ",347],["T_LNUMBER","1",347],")",")",["T_WHITESPACE"," ",347],".",["T_WHITESPACE"," ",347],["T_STATIC","static",347],["T_DOUBLE_COLON","::",347],["T_STRING","substr",347],"(",["T_VARIABLE","$text",347],",",["T_WHITESPACE"," ",347],["T_LNUMBER","1",347],")",";",["T_WHITESPACE","\n  ",347],"}",["T_WHITESPACE","\n\n  ",348],["T_DOC_COMMENT","\/**\n   * Converts the first character of a UTF-8 string to lowercase.\n   *\n   * @param string $text\n   *   The string that will be converted.\n   *\n   * @return string\n   *   The string with the first character as lowercase.\n   *\n   * @ingroup php_wrappers\n   *\/",350],["T_WHITESPACE","\n  ",360],["T_PUBLIC","public",361],["T_WHITESPACE"," ",361],["T_STATIC","static",361],["T_WHITESPACE"," ",361],["T_FUNCTION","function",361],["T_WHITESPACE"," ",361],["T_STRING","lcfirst",361],"(",["T_VARIABLE","$text",361],")",["T_WHITESPACE"," ",361],"{",["T_WHITESPACE","\n    ",361],["T_COMMENT","\/\/ Note: no mbstring equivalent!\n",362],["T_WHITESPACE","    ",363],["T_RETURN","return",363],["T_WHITESPACE"," ",363],["T_STATIC","static",363],["T_DOUBLE_COLON","::",363],["T_STRING","strtolower",363],"(",["T_STATIC","static",363],["T_DOUBLE_COLON","::",363],["T_STRING","substr",363],"(",["T_VARIABLE","$text",363],",",["T_WHITESPACE"," ",363],["T_LNUMBER","0",363],",",["T_WHITESPACE"," ",363],["T_LNUMBER","1",363],")",")",["T_WHITESPACE"," ",363],".",["T_WHITESPACE"," ",363],["T_STATIC","static",363],["T_DOUBLE_COLON","::",363],["T_STRING","substr",363],"(",["T_VARIABLE","$text",363],",",["T_WHITESPACE"," ",363],["T_LNUMBER","1",363],")",";",["T_WHITESPACE","\n  ",363],"}",["T_WHITESPACE","\n\n  ",364],["T_DOC_COMMENT","\/**\n   * Capitalizes the first character of each word in a UTF-8 string.\n   *\n   * @param string $text\n   *   The text that will be converted.\n   *\n   * @return string\n   *   The input $text with each word capitalized.\n   *\n   * @ingroup php_wrappers\n   *\/",366],["T_WHITESPACE","\n  ",376],["T_PUBLIC","public",377],["T_WHITESPACE"," ",377],["T_STATIC","static",377],["T_WHITESPACE"," ",377],["T_FUNCTION","function",377],["T_WHITESPACE"," ",377],["T_STRING","ucwords",377],"(",["T_VARIABLE","$text",377],")",["T_WHITESPACE"," ",377],"{",["T_WHITESPACE","\n    ",377],["T_VARIABLE","$regex",378],["T_WHITESPACE"," ",378],"=",["T_WHITESPACE"," ",378],["T_CONSTANT_ENCAPSED_STRING","'\/(^|['",378],["T_WHITESPACE"," ",378],".",["T_WHITESPACE"," ",378],["T_STATIC","static",378],["T_DOUBLE_COLON","::",378],["T_STRING","PREG_CLASS_WORD_BOUNDARY",378],["T_WHITESPACE"," ",378],".",["T_WHITESPACE"," ",378],["T_CONSTANT_ENCAPSED_STRING","'])([^'",378],["T_WHITESPACE"," ",378],".",["T_WHITESPACE"," ",378],["T_STATIC","static",378],["T_DOUBLE_COLON","::",378],["T_STRING","PREG_CLASS_WORD_BOUNDARY",378],["T_WHITESPACE"," ",378],".",["T_WHITESPACE"," ",378],["T_CONSTANT_ENCAPSED_STRING","'])\/u'",378],";",["T_WHITESPACE","\n    ",378],["T_RETURN","return",379],["T_WHITESPACE"," ",379],["T_STRING","preg_replace_callback",379],"(",["T_VARIABLE","$regex",379],",",["T_WHITESPACE"," ",379],["T_FUNCTION","function",379],"(",["T_ARRAY","array",379],["T_WHITESPACE"," ",379],["T_VARIABLE","$matches",379],")",["T_WHITESPACE"," ",379],"{",["T_WHITESPACE","\n      ",379],["T_RETURN","return",380],["T_WHITESPACE"," ",380],["T_VARIABLE","$matches",380],"[",["T_LNUMBER","1",380],"]",["T_WHITESPACE"," ",380],".",["T_WHITESPACE"," ",380],["T_STRING","Unicode",380],["T_DOUBLE_COLON","::",380],["T_STRING","strtoupper",380],"(",["T_VARIABLE","$matches",380],"[",["T_LNUMBER","2",380],"]",")",";",["T_WHITESPACE","\n    ",380],"}",",",["T_WHITESPACE"," ",381],["T_VARIABLE","$text",381],")",";",["T_WHITESPACE","\n  ",381],"}",["T_WHITESPACE","\n\n  ",382],["T_DOC_COMMENT","\/**\n   * Cuts off a piece of a string based on character indices and counts.\n   *\n   * Follows the same behavior as PHP's own substr() function. Note that for\n   * cutting off a string at a known character\/substring location, the usage of\n   * PHP's normal strpos\/substr is safe and much faster.\n   *\n   * @param string $text\n   *   The input string.\n   * @param int $start\n   *   The position at which to start reading.\n   * @param int $length\n   *   The number of characters to read.\n   *\n   * @return string\n   *   The shortened string.\n   *\/",384],["T_WHITESPACE","\n  ",400],["T_PUBLIC","public",401],["T_WHITESPACE"," ",401],["T_STATIC","static",401],["T_WHITESPACE"," ",401],["T_FUNCTION","function",401],["T_WHITESPACE"," ",401],["T_STRING","substr",401],"(",["T_VARIABLE","$text",401],",",["T_WHITESPACE"," ",401],["T_VARIABLE","$start",401],",",["T_WHITESPACE"," ",401],["T_VARIABLE","$length",401],["T_WHITESPACE"," ",401],"=",["T_WHITESPACE"," ",401],["T_STRING","NULL",401],")",["T_WHITESPACE"," ",401],"{",["T_WHITESPACE","\n    ",401],["T_IF","if",402],["T_WHITESPACE"," ",402],"(",["T_STATIC","static",402],["T_DOUBLE_COLON","::",402],["T_STRING","getStatus",402],"(",")",["T_WHITESPACE"," ",402],["T_IS_EQUAL","==",402],["T_WHITESPACE"," ",402],["T_STATIC","static",402],["T_DOUBLE_COLON","::",402],["T_STRING","STATUS_MULTIBYTE",402],")",["T_WHITESPACE"," ",402],"{",["T_WHITESPACE","\n      ",402],["T_RETURN","return",403],["T_WHITESPACE"," ",403],["T_VARIABLE","$length",403],["T_WHITESPACE"," ",403],["T_IS_IDENTICAL","===",403],["T_WHITESPACE"," ",403],["T_STRING","NULL",403],["T_WHITESPACE"," ",403],"?",["T_WHITESPACE"," ",403],["T_STRING","mb_substr",403],"(",["T_VARIABLE","$text",403],",",["T_WHITESPACE"," ",403],["T_VARIABLE","$start",403],")",["T_WHITESPACE"," ",403],":",["T_WHITESPACE"," ",403],["T_STRING","mb_substr",403],"(",["T_VARIABLE","$text",403],",",["T_WHITESPACE"," ",403],["T_VARIABLE","$start",403],",",["T_WHITESPACE"," ",403],["T_VARIABLE","$length",403],")",";",["T_WHITESPACE","\n    ",403],"}",["T_WHITESPACE","\n    ",404],["T_ELSE","else",405],["T_WHITESPACE"," ",405],"{",["T_WHITESPACE","\n      ",405],["T_VARIABLE","$strlen",406],["T_WHITESPACE"," ",406],"=",["T_WHITESPACE"," ",406],["T_STRING","strlen",406],"(",["T_VARIABLE","$text",406],")",";",["T_WHITESPACE","\n      ",406],["T_COMMENT","\/\/ Find the starting byte offset.\n",407],["T_WHITESPACE","      ",408],["T_VARIABLE","$bytes",408],["T_WHITESPACE"," ",408],"=",["T_WHITESPACE"," ",408],["T_LNUMBER","0",408],";",["T_WHITESPACE","\n      ",408],["T_IF","if",409],["T_WHITESPACE"," ",409],"(",["T_VARIABLE","$start",409],["T_WHITESPACE"," ",409],">",["T_WHITESPACE"," ",409],["T_LNUMBER","0",409],")",["T_WHITESPACE"," ",409],"{",["T_WHITESPACE","\n        ",409],["T_COMMENT","\/\/ Count all the characters except continuation bytes from the start\n",410],["T_WHITESPACE","        ",411],["T_COMMENT","\/\/ until we have found $start characters or the end of the string.\n",411],["T_WHITESPACE","        ",412],["T_VARIABLE","$bytes",412],["T_WHITESPACE"," ",412],"=",["T_WHITESPACE"," ",412],"-",["T_LNUMBER","1",412],";",["T_WHITESPACE"," ",412],["T_VARIABLE","$chars",412],["T_WHITESPACE"," ",412],"=",["T_WHITESPACE"," ",412],"-",["T_LNUMBER","1",412],";",["T_WHITESPACE","\n        ",412],["T_WHILE","while",413],["T_WHITESPACE"," ",413],"(",["T_VARIABLE","$bytes",413],["T_WHITESPACE"," ",413],"<",["T_WHITESPACE"," ",413],["T_VARIABLE","$strlen",413],["T_WHITESPACE"," ",413],"-",["T_WHITESPACE"," ",413],["T_LNUMBER","1",413],["T_WHITESPACE"," ",413],["T_BOOLEAN_AND","&&",413],["T_WHITESPACE"," ",413],["T_VARIABLE","$chars",413],["T_WHITESPACE"," ",413],"<",["T_WHITESPACE"," ",413],["T_VARIABLE","$start",413],")",["T_WHITESPACE"," ",413],"{",["T_WHITESPACE","\n          ",413],["T_VARIABLE","$bytes",414],["T_INC","++",414],";",["T_WHITESPACE","\n          ",414],["T_VARIABLE","$c",415],["T_WHITESPACE"," ",415],"=",["T_WHITESPACE"," ",415],["T_STRING","ord",415],"(",["T_VARIABLE","$text",415],"[",["T_VARIABLE","$bytes",415],"]",")",";",["T_WHITESPACE","\n          ",415],["T_IF","if",416],["T_WHITESPACE"," ",416],"(",["T_VARIABLE","$c",416],["T_WHITESPACE"," ",416],"<",["T_WHITESPACE"," ",416],["T_LNUMBER","0x80",416],["T_WHITESPACE"," ",416],["T_BOOLEAN_OR","||",416],["T_WHITESPACE"," ",416],["T_VARIABLE","$c",416],["T_WHITESPACE"," ",416],["T_IS_GREATER_OR_EQUAL",">=",416],["T_WHITESPACE"," ",416],["T_LNUMBER","0xC0",416],")",["T_WHITESPACE"," ",416],"{",["T_WHITESPACE","\n            ",416],["T_VARIABLE","$chars",417],["T_INC","++",417],";",["T_WHITESPACE","\n          ",417],"}",["T_WHITESPACE","\n        ",418],"}",["T_WHITESPACE","\n      ",419],"}",["T_WHITESPACE","\n      ",420],["T_ELSEIF","elseif",421],["T_WHITESPACE"," ",421],"(",["T_VARIABLE","$start",421],["T_WHITESPACE"," ",421],"<",["T_WHITESPACE"," ",421],["T_LNUMBER","0",421],")",["T_WHITESPACE"," ",421],"{",["T_WHITESPACE","\n        ",421],["T_COMMENT","\/\/ Count all the characters except continuation bytes from the end\n",422],["T_WHITESPACE","        ",423],["T_COMMENT","\/\/ until we have found abs($start) characters.\n",423],["T_WHITESPACE","        ",424],["T_VARIABLE","$start",424],["T_WHITESPACE"," ",424],"=",["T_WHITESPACE"," ",424],["T_STRING","abs",424],"(",["T_VARIABLE","$start",424],")",";",["T_WHITESPACE","\n        ",424],["T_VARIABLE","$bytes",425],["T_WHITESPACE"," ",425],"=",["T_WHITESPACE"," ",425],["T_VARIABLE","$strlen",425],";",["T_WHITESPACE"," ",425],["T_VARIABLE","$chars",425],["T_WHITESPACE"," ",425],"=",["T_WHITESPACE"," ",425],["T_LNUMBER","0",425],";",["T_WHITESPACE","\n        ",425],["T_WHILE","while",426],["T_WHITESPACE"," ",426],"(",["T_VARIABLE","$bytes",426],["T_WHITESPACE"," ",426],">",["T_WHITESPACE"," ",426],["T_LNUMBER","0",426],["T_WHITESPACE"," ",426],["T_BOOLEAN_AND","&&",426],["T_WHITESPACE"," ",426],["T_VARIABLE","$chars",426],["T_WHITESPACE"," ",426],"<",["T_WHITESPACE"," ",426],["T_VARIABLE","$start",426],")",["T_WHITESPACE"," ",426],"{",["T_WHITESPACE","\n          ",426],["T_VARIABLE","$bytes",427],["T_DEC","--",427],";",["T_WHITESPACE","\n          ",427],["T_VARIABLE","$c",428],["T_WHITESPACE"," ",428],"=",["T_WHITESPACE"," ",428],["T_STRING","ord",428],"(",["T_VARIABLE","$text",428],"[",["T_VARIABLE","$bytes",428],"]",")",";",["T_WHITESPACE","\n          ",428],["T_IF","if",429],["T_WHITESPACE"," ",429],"(",["T_VARIABLE","$c",429],["T_WHITESPACE"," ",429],"<",["T_WHITESPACE"," ",429],["T_LNUMBER","0x80",429],["T_WHITESPACE"," ",429],["T_BOOLEAN_OR","||",429],["T_WHITESPACE"," ",429],["T_VARIABLE","$c",429],["T_WHITESPACE"," ",429],["T_IS_GREATER_OR_EQUAL",">=",429],["T_WHITESPACE"," ",429],["T_LNUMBER","0xC0",429],")",["T_WHITESPACE"," ",429],"{",["T_WHITESPACE","\n            ",429],["T_VARIABLE","$chars",430],["T_INC","++",430],";",["T_WHITESPACE","\n          ",430],"}",["T_WHITESPACE","\n        ",431],"}",["T_WHITESPACE","\n      ",432],"}",["T_WHITESPACE","\n      ",433],["T_VARIABLE","$istart",434],["T_WHITESPACE"," ",434],"=",["T_WHITESPACE"," ",434],["T_VARIABLE","$bytes",434],";",["T_WHITESPACE","\n\n      ",434],["T_COMMENT","\/\/ Find the ending byte offset.\n",436],["T_WHITESPACE","      ",437],["T_IF","if",437],["T_WHITESPACE"," ",437],"(",["T_VARIABLE","$length",437],["T_WHITESPACE"," ",437],["T_IS_IDENTICAL","===",437],["T_WHITESPACE"," ",437],["T_STRING","NULL",437],")",["T_WHITESPACE"," ",437],"{",["T_WHITESPACE","\n        ",437],["T_VARIABLE","$iend",438],["T_WHITESPACE"," ",438],"=",["T_WHITESPACE"," ",438],["T_VARIABLE","$strlen",438],";",["T_WHITESPACE","\n      ",438],"}",["T_WHITESPACE","\n      ",439],["T_ELSEIF","elseif",440],["T_WHITESPACE"," ",440],"(",["T_VARIABLE","$length",440],["T_WHITESPACE"," ",440],">",["T_WHITESPACE"," ",440],["T_LNUMBER","0",440],")",["T_WHITESPACE"," ",440],"{",["T_WHITESPACE","\n        ",440],["T_COMMENT","\/\/ Count all the characters except continuation bytes from the starting\n",441],["T_WHITESPACE","        ",442],["T_COMMENT","\/\/ index until we have found $length characters or reached the end of\n",442],["T_WHITESPACE","        ",443],["T_COMMENT","\/\/ the string, then backtrace one byte.\n",443],["T_WHITESPACE","        ",444],["T_VARIABLE","$iend",444],["T_WHITESPACE"," ",444],"=",["T_WHITESPACE"," ",444],["T_VARIABLE","$istart",444],["T_WHITESPACE"," ",444],"-",["T_WHITESPACE"," ",444],["T_LNUMBER","1",444],";",["T_WHITESPACE","\n        ",444],["T_VARIABLE","$chars",445],["T_WHITESPACE"," ",445],"=",["T_WHITESPACE"," ",445],"-",["T_LNUMBER","1",445],";",["T_WHITESPACE","\n        ",445],["T_VARIABLE","$last_real",446],["T_WHITESPACE"," ",446],"=",["T_WHITESPACE"," ",446],["T_STRING","FALSE",446],";",["T_WHITESPACE","\n        ",446],["T_WHILE","while",447],["T_WHITESPACE"," ",447],"(",["T_VARIABLE","$iend",447],["T_WHITESPACE"," ",447],"<",["T_WHITESPACE"," ",447],["T_VARIABLE","$strlen",447],["T_WHITESPACE"," ",447],"-",["T_WHITESPACE"," ",447],["T_LNUMBER","1",447],["T_WHITESPACE"," ",447],["T_BOOLEAN_AND","&&",447],["T_WHITESPACE"," ",447],["T_VARIABLE","$chars",447],["T_WHITESPACE"," ",447],"<",["T_WHITESPACE"," ",447],["T_VARIABLE","$length",447],")",["T_WHITESPACE"," ",447],"{",["T_WHITESPACE","\n          ",447],["T_VARIABLE","$iend",448],["T_INC","++",448],";",["T_WHITESPACE","\n          ",448],["T_VARIABLE","$c",449],["T_WHITESPACE"," ",449],"=",["T_WHITESPACE"," ",449],["T_STRING","ord",449],"(",["T_VARIABLE","$text",449],"[",["T_VARIABLE","$iend",449],"]",")",";",["T_WHITESPACE","\n          ",449],["T_VARIABLE","$last_real",450],["T_WHITESPACE"," ",450],"=",["T_WHITESPACE"," ",450],["T_STRING","FALSE",450],";",["T_WHITESPACE","\n          ",450],["T_IF","if",451],["T_WHITESPACE"," ",451],"(",["T_VARIABLE","$c",451],["T_WHITESPACE"," ",451],"<",["T_WHITESPACE"," ",451],["T_LNUMBER","0x80",451],["T_WHITESPACE"," ",451],["T_BOOLEAN_OR","||",451],["T_WHITESPACE"," ",451],["T_VARIABLE","$c",451],["T_WHITESPACE"," ",451],["T_IS_GREATER_OR_EQUAL",">=",451],["T_WHITESPACE"," ",451],["T_LNUMBER","0xC0",451],")",["T_WHITESPACE"," ",451],"{",["T_WHITESPACE","\n            ",451],["T_VARIABLE","$chars",452],["T_INC","++",452],";",["T_WHITESPACE","\n            ",452],["T_VARIABLE","$last_real",453],["T_WHITESPACE"," ",453],"=",["T_WHITESPACE"," ",453],["T_STRING","TRUE",453],";",["T_WHITESPACE","\n          ",453],"}",["T_WHITESPACE","\n        ",454],"}",["T_WHITESPACE","\n        ",455],["T_COMMENT","\/\/ Backtrace one byte if the last character we found was a real\n",456],["T_WHITESPACE","        ",457],["T_COMMENT","\/\/ character and we don't need it.\n",457],["T_WHITESPACE","        ",458],["T_IF","if",458],["T_WHITESPACE"," ",458],"(",["T_VARIABLE","$last_real",458],["T_WHITESPACE"," ",458],["T_BOOLEAN_AND","&&",458],["T_WHITESPACE"," ",458],["T_VARIABLE","$chars",458],["T_WHITESPACE"," ",458],["T_IS_GREATER_OR_EQUAL",">=",458],["T_WHITESPACE"," ",458],["T_VARIABLE","$length",458],")",["T_WHITESPACE"," ",458],"{",["T_WHITESPACE","\n          ",458],["T_VARIABLE","$iend",459],["T_DEC","--",459],";",["T_WHITESPACE","\n        ",459],"}",["T_WHITESPACE","\n      ",460],"}",["T_WHITESPACE","\n      ",461],["T_ELSEIF","elseif",462],["T_WHITESPACE"," ",462],"(",["T_VARIABLE","$length",462],["T_WHITESPACE"," ",462],"<",["T_WHITESPACE"," ",462],["T_LNUMBER","0",462],")",["T_WHITESPACE"," ",462],"{",["T_WHITESPACE","\n        ",462],["T_COMMENT","\/\/ Count all the characters except continuation bytes from the end\n",463],["T_WHITESPACE","        ",464],["T_COMMENT","\/\/ until we have found abs($start) characters, then backtrace one byte.\n",464],["T_WHITESPACE","        ",465],["T_VARIABLE","$length",465],["T_WHITESPACE"," ",465],"=",["T_WHITESPACE"," ",465],["T_STRING","abs",465],"(",["T_VARIABLE","$length",465],")",";",["T_WHITESPACE","\n        ",465],["T_VARIABLE","$iend",466],["T_WHITESPACE"," ",466],"=",["T_WHITESPACE"," ",466],["T_VARIABLE","$strlen",466],";",["T_WHITESPACE"," ",466],["T_VARIABLE","$chars",466],["T_WHITESPACE"," ",466],"=",["T_WHITESPACE"," ",466],["T_LNUMBER","0",466],";",["T_WHITESPACE","\n        ",466],["T_WHILE","while",467],["T_WHITESPACE"," ",467],"(",["T_VARIABLE","$iend",467],["T_WHITESPACE"," ",467],">",["T_WHITESPACE"," ",467],["T_LNUMBER","0",467],["T_WHITESPACE"," ",467],["T_BOOLEAN_AND","&&",467],["T_WHITESPACE"," ",467],["T_VARIABLE","$chars",467],["T_WHITESPACE"," ",467],"<",["T_WHITESPACE"," ",467],["T_VARIABLE","$length",467],")",["T_WHITESPACE"," ",467],"{",["T_WHITESPACE","\n          ",467],["T_VARIABLE","$iend",468],["T_DEC","--",468],";",["T_WHITESPACE","\n          ",468],["T_VARIABLE","$c",469],["T_WHITESPACE"," ",469],"=",["T_WHITESPACE"," ",469],["T_STRING","ord",469],"(",["T_VARIABLE","$text",469],"[",["T_VARIABLE","$iend",469],"]",")",";",["T_WHITESPACE","\n          ",469],["T_IF","if",470],["T_WHITESPACE"," ",470],"(",["T_VARIABLE","$c",470],["T_WHITESPACE"," ",470],"<",["T_WHITESPACE"," ",470],["T_LNUMBER","0x80",470],["T_WHITESPACE"," ",470],["T_BOOLEAN_OR","||",470],["T_WHITESPACE"," ",470],["T_VARIABLE","$c",470],["T_WHITESPACE"," ",470],["T_IS_GREATER_OR_EQUAL",">=",470],["T_WHITESPACE"," ",470],["T_LNUMBER","0xC0",470],")",["T_WHITESPACE"," ",470],"{",["T_WHITESPACE","\n            ",470],["T_VARIABLE","$chars",471],["T_INC","++",471],";",["T_WHITESPACE","\n          ",471],"}",["T_WHITESPACE","\n        ",472],"}",["T_WHITESPACE","\n        ",473],["T_COMMENT","\/\/ Backtrace one byte if we are not at the beginning of the string.\n",474],["T_WHITESPACE","        ",475],["T_IF","if",475],["T_WHITESPACE"," ",475],"(",["T_VARIABLE","$iend",475],["T_WHITESPACE"," ",475],">",["T_WHITESPACE"," ",475],["T_LNUMBER","0",475],")",["T_WHITESPACE"," ",475],"{",["T_WHITESPACE","\n          ",475],["T_VARIABLE","$iend",476],["T_DEC","--",476],";",["T_WHITESPACE","\n        ",476],"}",["T_WHITESPACE","\n      ",477],"}",["T_WHITESPACE","\n      ",478],["T_ELSE","else",479],["T_WHITESPACE"," ",479],"{",["T_WHITESPACE","\n        ",479],["T_COMMENT","\/\/ $length == 0, return an empty string.\n",480],["T_WHITESPACE","        ",481],["T_RETURN","return",481],["T_WHITESPACE"," ",481],["T_CONSTANT_ENCAPSED_STRING","''",481],";",["T_WHITESPACE","\n      ",481],"}",["T_WHITESPACE","\n\n      ",482],["T_RETURN","return",484],["T_WHITESPACE"," ",484],["T_STRING","substr",484],"(",["T_VARIABLE","$text",484],",",["T_WHITESPACE"," ",484],["T_VARIABLE","$istart",484],",",["T_WHITESPACE"," ",484],["T_STRING","max",484],"(",["T_LNUMBER","0",484],",",["T_WHITESPACE"," ",484],["T_VARIABLE","$iend",484],["T_WHITESPACE"," ",484],"-",["T_WHITESPACE"," ",484],["T_VARIABLE","$istart",484],["T_WHITESPACE"," ",484],"+",["T_WHITESPACE"," ",484],["T_LNUMBER","1",484],")",")",";",["T_WHITESPACE","\n    ",484],"}",["T_WHITESPACE","\n  ",485],"}",["T_WHITESPACE","\n\n  ",486],["T_DOC_COMMENT","\/**\n   * Truncates a UTF-8-encoded string safely to a number of characters.\n   *\n   * @param string $string\n   *   The string to truncate.\n   * @param int $max_length\n   *   An upper limit on the returned string length, including trailing ellipsis\n   *   if $add_ellipsis is TRUE.\n   * @param bool $wordsafe\n   *   If TRUE, attempt to truncate on a word boundary. Word boundaries are\n   *   spaces, punctuation, and Unicode characters used as word boundaries in\n   *   non-Latin languages; see Unicode::PREG_CLASS_WORD_BOUNDARY for more\n   *   information. If a word boundary cannot be found that would make the length\n   *   of the returned string fall within length guidelines (see parameters\n   *   $max_length and $min_wordsafe_length), word boundaries are ignored.\n   * @param bool $add_ellipsis\n   *   If TRUE, add '...' to the end of the truncated string (defaults to\n   *   FALSE). The string length will still fall within $max_length.\n   * @param int $min_wordsafe_length\n   *   If $wordsafe is TRUE, the minimum acceptable length for truncation (before\n   *   adding an ellipsis, if $add_ellipsis is TRUE). Has no effect if $wordsafe\n   *   is FALSE. This can be used to prevent having a very short resulting string\n   *   that will not be understandable. For instance, if you are truncating the\n   *   string \"See myverylongurlexample.com for more information\" to a word-safe\n   *   return length of 20, the only available word boundary within 20 characters\n   *   is after the word \"See\", which wouldn't leave a very informative string. If\n   *   you had set $min_wordsafe_length to 10, though, the function would realise\n   *   that \"See\" alone is too short, and would then just truncate ignoring word\n   *   boundaries, giving you \"See myverylongurl...\" (assuming you had set\n   *   $add_ellipses to TRUE).\n   *\n   * @return string\n   *   The truncated string.\n   *\/",488],["T_WHITESPACE","\n  ",521],["T_PUBLIC","public",522],["T_WHITESPACE"," ",522],["T_STATIC","static",522],["T_WHITESPACE"," ",522],["T_FUNCTION","function",522],["T_WHITESPACE"," ",522],["T_STRING","truncate",522],"(",["T_VARIABLE","$string",522],",",["T_WHITESPACE"," ",522],["T_VARIABLE","$max_length",522],",",["T_WHITESPACE"," ",522],["T_VARIABLE","$wordsafe",522],["T_WHITESPACE"," ",522],"=",["T_WHITESPACE"," ",522],["T_STRING","FALSE",522],",",["T_WHITESPACE"," ",522],["T_VARIABLE","$add_ellipsis",522],["T_WHITESPACE"," ",522],"=",["T_WHITESPACE"," ",522],["T_STRING","FALSE",522],",",["T_WHITESPACE"," ",522],["T_VARIABLE","$min_wordsafe_length",522],["T_WHITESPACE"," ",522],"=",["T_WHITESPACE"," ",522],["T_LNUMBER","1",522],")",["T_WHITESPACE"," ",522],"{",["T_WHITESPACE","\n    ",522],["T_VARIABLE","$ellipsis",523],["T_WHITESPACE"," ",523],"=",["T_WHITESPACE"," ",523],["T_CONSTANT_ENCAPSED_STRING","''",523],";",["T_WHITESPACE","\n    ",523],["T_VARIABLE","$max_length",524],["T_WHITESPACE"," ",524],"=",["T_WHITESPACE"," ",524],["T_STRING","max",524],"(",["T_VARIABLE","$max_length",524],",",["T_WHITESPACE"," ",524],["T_LNUMBER","0",524],")",";",["T_WHITESPACE","\n    ",524],["T_VARIABLE","$min_wordsafe_length",525],["T_WHITESPACE"," ",525],"=",["T_WHITESPACE"," ",525],["T_STRING","max",525],"(",["T_VARIABLE","$min_wordsafe_length",525],",",["T_WHITESPACE"," ",525],["T_LNUMBER","0",525],")",";",["T_WHITESPACE","\n\n    ",525],["T_IF","if",527],["T_WHITESPACE"," ",527],"(",["T_STATIC","static",527],["T_DOUBLE_COLON","::",527],["T_STRING","strlen",527],"(",["T_VARIABLE","$string",527],")",["T_WHITESPACE"," ",527],["T_IS_SMALLER_OR_EQUAL","<=",527],["T_WHITESPACE"," ",527],["T_VARIABLE","$max_length",527],")",["T_WHITESPACE"," ",527],"{",["T_WHITESPACE","\n      ",527],["T_COMMENT","\/\/ No truncation needed, so don't add ellipsis, just return.\n",528],["T_WHITESPACE","      ",529],["T_RETURN","return",529],["T_WHITESPACE"," ",529],["T_VARIABLE","$string",529],";",["T_WHITESPACE","\n    ",529],"}",["T_WHITESPACE","\n\n    ",530],["T_IF","if",532],["T_WHITESPACE"," ",532],"(",["T_VARIABLE","$add_ellipsis",532],")",["T_WHITESPACE"," ",532],"{",["T_WHITESPACE","\n      ",532],["T_COMMENT","\/\/ Truncate ellipsis in case $max_length is small.\n",533],["T_WHITESPACE","      ",534],["T_VARIABLE","$ellipsis",534],["T_WHITESPACE"," ",534],"=",["T_WHITESPACE"," ",534],["T_STATIC","static",534],["T_DOUBLE_COLON","::",534],["T_STRING","substr",534],"(",["T_CONSTANT_ENCAPSED_STRING","'\u00e2\u0080\u00a6'",534],",",["T_WHITESPACE"," ",534],["T_LNUMBER","0",534],",",["T_WHITESPACE"," ",534],["T_VARIABLE","$max_length",534],")",";",["T_WHITESPACE","\n      ",534],["T_VARIABLE","$max_length",535],["T_WHITESPACE"," ",535],["T_MINUS_EQUAL","-=",535],["T_WHITESPACE"," ",535],["T_STATIC","static",535],["T_DOUBLE_COLON","::",535],["T_STRING","strlen",535],"(",["T_VARIABLE","$ellipsis",535],")",";",["T_WHITESPACE","\n      ",535],["T_VARIABLE","$max_length",536],["T_WHITESPACE"," ",536],"=",["T_WHITESPACE"," ",536],["T_STRING","max",536],"(",["T_VARIABLE","$max_length",536],",",["T_WHITESPACE"," ",536],["T_LNUMBER","0",536],")",";",["T_WHITESPACE","\n    ",536],"}",["T_WHITESPACE","\n\n    ",537],["T_IF","if",539],["T_WHITESPACE"," ",539],"(",["T_VARIABLE","$max_length",539],["T_WHITESPACE"," ",539],["T_IS_SMALLER_OR_EQUAL","<=",539],["T_WHITESPACE"," ",539],["T_VARIABLE","$min_wordsafe_length",539],")",["T_WHITESPACE"," ",539],"{",["T_WHITESPACE","\n      ",539],["T_COMMENT","\/\/ Do not attempt word-safe if lengths are bad.\n",540],["T_WHITESPACE","      ",541],["T_VARIABLE","$wordsafe",541],["T_WHITESPACE"," ",541],"=",["T_WHITESPACE"," ",541],["T_STRING","FALSE",541],";",["T_WHITESPACE","\n    ",541],"}",["T_WHITESPACE","\n\n    ",542],["T_IF","if",544],["T_WHITESPACE"," ",544],"(",["T_VARIABLE","$wordsafe",544],")",["T_WHITESPACE"," ",544],"{",["T_WHITESPACE","\n      ",544],["T_VARIABLE","$matches",545],["T_WHITESPACE"," ",545],"=",["T_WHITESPACE"," ",545],["T_ARRAY","array",545],"(",")",";",["T_WHITESPACE","\n      ",545],["T_COMMENT","\/\/ Find the last word boundary, if there is one within $min_wordsafe_length\n",546],["T_WHITESPACE","      ",547],["T_COMMENT","\/\/ to $max_length characters. preg_match() is always greedy, so it will\n",547],["T_WHITESPACE","      ",548],["T_COMMENT","\/\/ find the longest string possible.\n",548],["T_WHITESPACE","      ",549],["T_VARIABLE","$found",549],["T_WHITESPACE"," ",549],"=",["T_WHITESPACE"," ",549],["T_STRING","preg_match",549],"(",["T_CONSTANT_ENCAPSED_STRING","'\/^(.{'",549],["T_WHITESPACE"," ",549],".",["T_WHITESPACE"," ",549],["T_VARIABLE","$min_wordsafe_length",549],["T_WHITESPACE"," ",549],".",["T_WHITESPACE"," ",549],["T_CONSTANT_ENCAPSED_STRING","','",549],["T_WHITESPACE"," ",549],".",["T_WHITESPACE"," ",549],["T_VARIABLE","$max_length",549],["T_WHITESPACE"," ",549],".",["T_WHITESPACE"," ",549],["T_CONSTANT_ENCAPSED_STRING","'})['",549],["T_WHITESPACE"," ",549],".",["T_WHITESPACE"," ",549],["T_STRING","Unicode",549],["T_DOUBLE_COLON","::",549],["T_STRING","PREG_CLASS_WORD_BOUNDARY",549],["T_WHITESPACE"," ",549],".",["T_WHITESPACE"," ",549],["T_CONSTANT_ENCAPSED_STRING","']\/u'",549],",",["T_WHITESPACE"," ",549],["T_VARIABLE","$string",549],",",["T_WHITESPACE"," ",549],["T_VARIABLE","$matches",549],")",";",["T_WHITESPACE","\n      ",549],["T_IF","if",550],["T_WHITESPACE"," ",550],"(",["T_VARIABLE","$found",550],")",["T_WHITESPACE"," ",550],"{",["T_WHITESPACE","\n        ",550],["T_VARIABLE","$string",551],["T_WHITESPACE"," ",551],"=",["T_WHITESPACE"," ",551],["T_VARIABLE","$matches",551],"[",["T_LNUMBER","1",551],"]",";",["T_WHITESPACE","\n      ",551],"}",["T_WHITESPACE","\n      ",552],["T_ELSE","else",553],["T_WHITESPACE"," ",553],"{",["T_WHITESPACE","\n        ",553],["T_VARIABLE","$string",554],["T_WHITESPACE"," ",554],"=",["T_WHITESPACE"," ",554],["T_STATIC","static",554],["T_DOUBLE_COLON","::",554],["T_STRING","substr",554],"(",["T_VARIABLE","$string",554],",",["T_WHITESPACE"," ",554],["T_LNUMBER","0",554],",",["T_WHITESPACE"," ",554],["T_VARIABLE","$max_length",554],")",";",["T_WHITESPACE","\n      ",554],"}",["T_WHITESPACE","\n    ",555],"}",["T_WHITESPACE","\n    ",556],["T_ELSE","else",557],["T_WHITESPACE"," ",557],"{",["T_WHITESPACE","\n      ",557],["T_VARIABLE","$string",558],["T_WHITESPACE"," ",558],"=",["T_WHITESPACE"," ",558],["T_STATIC","static",558],["T_DOUBLE_COLON","::",558],["T_STRING","substr",558],"(",["T_VARIABLE","$string",558],",",["T_WHITESPACE"," ",558],["T_LNUMBER","0",558],",",["T_WHITESPACE"," ",558],["T_VARIABLE","$max_length",558],")",";",["T_WHITESPACE","\n    ",558],"}",["T_WHITESPACE","\n\n    ",559],["T_IF","if",561],["T_WHITESPACE"," ",561],"(",["T_VARIABLE","$add_ellipsis",561],")",["T_WHITESPACE"," ",561],"{",["T_WHITESPACE","\n      ",561],["T_COMMENT","\/\/ If we're adding an ellipsis, remove any trailing periods.\n",562],["T_WHITESPACE","      ",563],["T_VARIABLE","$string",563],["T_WHITESPACE"," ",563],"=",["T_WHITESPACE"," ",563],["T_STRING","rtrim",563],"(",["T_VARIABLE","$string",563],",",["T_WHITESPACE"," ",563],["T_CONSTANT_ENCAPSED_STRING","'.'",563],")",";",["T_WHITESPACE","\n\n      ",563],["T_VARIABLE","$string",565],["T_WHITESPACE"," ",565],["T_CONCAT_EQUAL",".=",565],["T_WHITESPACE"," ",565],["T_VARIABLE","$ellipsis",565],";",["T_WHITESPACE","\n    ",565],"}",["T_WHITESPACE","\n\n    ",566],["T_RETURN","return",568],["T_WHITESPACE"," ",568],["T_VARIABLE","$string",568],";",["T_WHITESPACE","\n  ",568],"}",["T_WHITESPACE","\n\n  ",569],["T_DOC_COMMENT","\/**\n   * Compares UTF-8-encoded strings in a binary safe case-insensitive manner.\n   *\n   * @param string $str1\n   *   The first string.\n   * @param string $str2\n   *   The second string.\n   *\n   * @return int\n   *   Returns < 0 if $str1 is less than $str2; > 0 if $str1 is greater than\n   *   $str2, and 0 if they are equal.\n   *\/",571],["T_WHITESPACE","\n  ",582],["T_PUBLIC","public",583],["T_WHITESPACE"," ",583],["T_STATIC","static",583],["T_WHITESPACE"," ",583],["T_FUNCTION","function",583],["T_WHITESPACE"," ",583],["T_STRING","strcasecmp",583],"(",["T_VARIABLE","$str1",583],["T_WHITESPACE"," ",583],",",["T_WHITESPACE"," ",583],["T_VARIABLE","$str2",583],")",["T_WHITESPACE"," ",583],"{",["T_WHITESPACE","\n    ",583],["T_RETURN","return",584],["T_WHITESPACE"," ",584],["T_STRING","strcmp",584],"(",["T_STATIC","static",584],["T_DOUBLE_COLON","::",584],["T_STRING","strtoupper",584],"(",["T_VARIABLE","$str1",584],")",",",["T_WHITESPACE"," ",584],["T_STATIC","static",584],["T_DOUBLE_COLON","::",584],["T_STRING","strtoupper",584],"(",["T_VARIABLE","$str2",584],")",")",";",["T_WHITESPACE","\n  ",584],"}",["T_WHITESPACE","\n\n  ",585],["T_DOC_COMMENT","\/**\n   * Encodes MIME\/HTTP headers that contain incorrectly encoded characters.\n   *\n   * For example, Unicode::mimeHeaderEncode('t\u00c3\u00a9st.txt') returns\n   * \"=?UTF-8?B?dMOpc3QudHh0?=\".\n   *\n   * See http:\/\/www.rfc-editor.org\/rfc\/rfc2047.txt for more information.\n   *\n   * Notes:\n   * - Only encode strings that contain non-ASCII characters.\n   * - We progressively cut-off a chunk with self::truncateBytes(). This ensures\n   *   each chunk starts and ends on a character boundary.\n   * - Using \\n as the chunk separator may cause problems on some systems and\n   *   may have to be changed to \\r\\n or \\r.\n   *\n   * @param string $string\n   *   The header to encode.\n   *\n   * @return string\n   *   The mime-encoded header.\n   *\/",587],["T_WHITESPACE","\n  ",607],["T_PUBLIC","public",608],["T_WHITESPACE"," ",608],["T_STATIC","static",608],["T_WHITESPACE"," ",608],["T_FUNCTION","function",608],["T_WHITESPACE"," ",608],["T_STRING","mimeHeaderEncode",608],"(",["T_VARIABLE","$string",608],")",["T_WHITESPACE"," ",608],"{",["T_WHITESPACE","\n    ",608],["T_IF","if",609],["T_WHITESPACE"," ",609],"(",["T_STRING","preg_match",609],"(",["T_CONSTANT_ENCAPSED_STRING","'\/[^\\x20-\\x7E]\/'",609],",",["T_WHITESPACE"," ",609],["T_VARIABLE","$string",609],")",")",["T_WHITESPACE"," ",609],"{",["T_WHITESPACE","\n      ",609],["T_VARIABLE","$chunk_size",610],["T_WHITESPACE"," ",610],"=",["T_WHITESPACE"," ",610],["T_LNUMBER","47",610],";",["T_WHITESPACE"," ",610],["T_COMMENT","\/\/ floor((75 - strlen(\"=?UTF-8?B??=\")) * 0.75);\n",610],["T_WHITESPACE","      ",611],["T_VARIABLE","$len",611],["T_WHITESPACE"," ",611],"=",["T_WHITESPACE"," ",611],["T_STRING","strlen",611],"(",["T_VARIABLE","$string",611],")",";",["T_WHITESPACE","\n      ",611],["T_VARIABLE","$output",612],["T_WHITESPACE"," ",612],"=",["T_WHITESPACE"," ",612],["T_CONSTANT_ENCAPSED_STRING","''",612],";",["T_WHITESPACE","\n      ",612],["T_WHILE","while",613],["T_WHITESPACE"," ",613],"(",["T_VARIABLE","$len",613],["T_WHITESPACE"," ",613],">",["T_WHITESPACE"," ",613],["T_LNUMBER","0",613],")",["T_WHITESPACE"," ",613],"{",["T_WHITESPACE","\n        ",613],["T_VARIABLE","$chunk",614],["T_WHITESPACE"," ",614],"=",["T_WHITESPACE"," ",614],["T_STATIC","static",614],["T_DOUBLE_COLON","::",614],["T_STRING","truncateBytes",614],"(",["T_VARIABLE","$string",614],",",["T_WHITESPACE"," ",614],["T_VARIABLE","$chunk_size",614],")",";",["T_WHITESPACE","\n        ",614],["T_VARIABLE","$output",615],["T_WHITESPACE"," ",615],["T_CONCAT_EQUAL",".=",615],["T_WHITESPACE"," ",615],["T_CONSTANT_ENCAPSED_STRING","' =?UTF-8?B?'",615],["T_WHITESPACE"," ",615],".",["T_WHITESPACE"," ",615],["T_STRING","base64_encode",615],"(",["T_VARIABLE","$chunk",615],")",["T_WHITESPACE"," ",615],".",["T_WHITESPACE"," ",615],["T_CONSTANT_ENCAPSED_STRING","\"?=\\n\"",615],";",["T_WHITESPACE","\n        ",615],["T_VARIABLE","$c",616],["T_WHITESPACE"," ",616],"=",["T_WHITESPACE"," ",616],["T_STRING","strlen",616],"(",["T_VARIABLE","$chunk",616],")",";",["T_WHITESPACE","\n        ",616],["T_VARIABLE","$string",617],["T_WHITESPACE"," ",617],"=",["T_WHITESPACE"," ",617],["T_STRING","substr",617],"(",["T_VARIABLE","$string",617],",",["T_WHITESPACE"," ",617],["T_VARIABLE","$c",617],")",";",["T_WHITESPACE","\n        ",617],["T_VARIABLE","$len",618],["T_WHITESPACE"," ",618],["T_MINUS_EQUAL","-=",618],["T_WHITESPACE"," ",618],["T_VARIABLE","$c",618],";",["T_WHITESPACE","\n      ",618],"}",["T_WHITESPACE","\n      ",619],["T_RETURN","return",620],["T_WHITESPACE"," ",620],["T_STRING","trim",620],"(",["T_VARIABLE","$output",620],")",";",["T_WHITESPACE","\n    ",620],"}",["T_WHITESPACE","\n    ",621],["T_RETURN","return",622],["T_WHITESPACE"," ",622],["T_VARIABLE","$string",622],";",["T_WHITESPACE","\n  ",622],"}",["T_WHITESPACE","\n\n  ",623],["T_DOC_COMMENT","\/**\n   * Decodes MIME\/HTTP encoded header values.\n   *\n   * @param string $header\n   *   The header to decode.\n   *\n   * @return string\n   *   The mime-decoded header.\n   *\/",625],["T_WHITESPACE","\n  ",633],["T_PUBLIC","public",634],["T_WHITESPACE"," ",634],["T_STATIC","static",634],["T_WHITESPACE"," ",634],["T_FUNCTION","function",634],["T_WHITESPACE"," ",634],["T_STRING","mimeHeaderDecode",634],"(",["T_VARIABLE","$header",634],")",["T_WHITESPACE"," ",634],"{",["T_WHITESPACE","\n    ",634],["T_VARIABLE","$callback",635],["T_WHITESPACE"," ",635],"=",["T_WHITESPACE"," ",635],["T_FUNCTION","function",635],["T_WHITESPACE"," ",635],"(",["T_VARIABLE","$matches",635],")",["T_WHITESPACE"," ",635],"{",["T_WHITESPACE","\n      ",635],["T_VARIABLE","$data",636],["T_WHITESPACE"," ",636],"=",["T_WHITESPACE"," ",636],"(",["T_VARIABLE","$matches",636],"[",["T_LNUMBER","2",636],"]",["T_WHITESPACE"," ",636],["T_IS_EQUAL","==",636],["T_WHITESPACE"," ",636],["T_CONSTANT_ENCAPSED_STRING","'B'",636],")",["T_WHITESPACE"," ",636],"?",["T_WHITESPACE"," ",636],["T_STRING","base64_decode",636],"(",["T_VARIABLE","$matches",636],"[",["T_LNUMBER","3",636],"]",")",["T_WHITESPACE"," ",636],":",["T_WHITESPACE"," ",636],["T_STRING","str_replace",636],"(",["T_CONSTANT_ENCAPSED_STRING","'_'",636],",",["T_WHITESPACE"," ",636],["T_CONSTANT_ENCAPSED_STRING","' '",636],",",["T_WHITESPACE"," ",636],["T_STRING","quoted_printable_decode",636],"(",["T_VARIABLE","$matches",636],"[",["T_LNUMBER","3",636],"]",")",")",";",["T_WHITESPACE","\n      ",636],["T_IF","if",637],["T_WHITESPACE"," ",637],"(",["T_STRING","strtolower",637],"(",["T_VARIABLE","$matches",637],"[",["T_LNUMBER","1",637],"]",")",["T_WHITESPACE"," ",637],["T_IS_NOT_EQUAL","!=",637],["T_WHITESPACE"," ",637],["T_CONSTANT_ENCAPSED_STRING","'utf-8'",637],")",["T_WHITESPACE"," ",637],"{",["T_WHITESPACE","\n        ",637],["T_VARIABLE","$data",638],["T_WHITESPACE"," ",638],"=",["T_WHITESPACE"," ",638],["T_STATIC","static",638],["T_DOUBLE_COLON","::",638],["T_STRING","convertToUtf8",638],"(",["T_VARIABLE","$data",638],",",["T_WHITESPACE"," ",638],["T_VARIABLE","$matches",638],"[",["T_LNUMBER","1",638],"]",")",";",["T_WHITESPACE","\n      ",638],"}",["T_WHITESPACE","\n      ",639],["T_RETURN","return",640],["T_WHITESPACE"," ",640],["T_VARIABLE","$data",640],";",["T_WHITESPACE","\n    ",640],"}",";",["T_WHITESPACE","\n    ",641],["T_COMMENT","\/\/ First step: encoded chunks followed by other encoded chunks (need to collapse whitespace)\n",642],["T_WHITESPACE","    ",643],["T_VARIABLE","$header",643],["T_WHITESPACE"," ",643],"=",["T_WHITESPACE"," ",643],["T_STRING","preg_replace_callback",643],"(",["T_CONSTANT_ENCAPSED_STRING","'\/=\\?([^?]+)\\?(Q|B)\\?([^?]+|\\?(?!=))\\?=\\s+(?==\\?)\/'",643],",",["T_WHITESPACE"," ",643],["T_VARIABLE","$callback",643],",",["T_WHITESPACE"," ",643],["T_VARIABLE","$header",643],")",";",["T_WHITESPACE","\n    ",643],["T_COMMENT","\/\/ Second step: remaining chunks (do not collapse whitespace)\n",644],["T_WHITESPACE","    ",645],["T_RETURN","return",645],["T_WHITESPACE"," ",645],["T_STRING","preg_replace_callback",645],"(",["T_CONSTANT_ENCAPSED_STRING","'\/=\\?([^?]+)\\?(Q|B)\\?([^?]+|\\?(?!=))\\?=\/'",645],",",["T_WHITESPACE"," ",645],["T_VARIABLE","$callback",645],",",["T_WHITESPACE"," ",645],["T_VARIABLE","$header",645],")",";",["T_WHITESPACE","\n  ",645],"}",["T_WHITESPACE","\n\n  ",646],["T_DOC_COMMENT","\/**\n   * Flip U+C0-U+DE to U+E0-U+FD and back. Can be used as preg_replace callback.\n   *\n   * @param array $matches\n   *   An array of matches by preg_replace_callback().\n   *\n   * @return string\n   *   The flipped text.\n   *\/",648],["T_WHITESPACE","\n  ",656],["T_PUBLIC","public",657],["T_WHITESPACE"," ",657],["T_STATIC","static",657],["T_WHITESPACE"," ",657],["T_FUNCTION","function",657],["T_WHITESPACE"," ",657],["T_STRING","caseFlip",657],"(",["T_VARIABLE","$matches",657],")",["T_WHITESPACE"," ",657],"{",["T_WHITESPACE","\n    ",657],["T_RETURN","return",658],["T_WHITESPACE"," ",658],["T_VARIABLE","$matches",658],"[",["T_LNUMBER","0",658],"]","[",["T_LNUMBER","0",658],"]",["T_WHITESPACE"," ",658],".",["T_WHITESPACE"," ",658],["T_STRING","chr",658],"(",["T_STRING","ord",658],"(",["T_VARIABLE","$matches",658],"[",["T_LNUMBER","0",658],"]","[",["T_LNUMBER","1",658],"]",")",["T_WHITESPACE"," ",658],"^",["T_WHITESPACE"," ",658],["T_LNUMBER","32",658],")",";",["T_WHITESPACE","\n  ",658],"}",["T_WHITESPACE","\n\n  ",659],["T_DOC_COMMENT","\/**\n   * Checks whether a string is valid UTF-8.\n   *\n   * All functions designed to filter input should use drupal_validate_utf8\n   * to ensure they operate on valid UTF-8 strings to prevent bypass of the\n   * filter.\n   *\n   * When text containing an invalid UTF-8 lead byte (0xC0 - 0xFF) is presented\n   * as UTF-8 to Internet Explorer 6, the program may misinterpret subsequent\n   * bytes. When these subsequent bytes are HTML control characters such as\n   * quotes or angle brackets, parts of the text that were deemed safe by filters\n   * end up in locations that are potentially unsafe; An onerror attribute that\n   * is outside of a tag, and thus deemed safe by a filter, can be interpreted\n   * by the browser as if it were inside the tag.\n   *\n   * The function does not return FALSE for strings containing character codes\n   * above U+10FFFF, even though these are prohibited by RFC 3629.\n   *\n   * @param string $text\n   *   The text to check.\n   *\n   * @return bool\n   *   TRUE if the text is valid UTF-8, FALSE if not.\n   *\/",661],["T_WHITESPACE","\n  ",684],["T_PUBLIC","public",685],["T_WHITESPACE"," ",685],["T_STATIC","static",685],["T_WHITESPACE"," ",685],["T_FUNCTION","function",685],["T_WHITESPACE"," ",685],["T_STRING","validateUtf8",685],"(",["T_VARIABLE","$text",685],")",["T_WHITESPACE"," ",685],"{",["T_WHITESPACE","\n    ",685],["T_IF","if",686],["T_WHITESPACE"," ",686],"(",["T_STRING","strlen",686],"(",["T_VARIABLE","$text",686],")",["T_WHITESPACE"," ",686],["T_IS_EQUAL","==",686],["T_WHITESPACE"," ",686],["T_LNUMBER","0",686],")",["T_WHITESPACE"," ",686],"{",["T_WHITESPACE","\n      ",686],["T_RETURN","return",687],["T_WHITESPACE"," ",687],["T_STRING","TRUE",687],";",["T_WHITESPACE","\n    ",687],"}",["T_WHITESPACE","\n    ",688],["T_COMMENT","\/\/ With the PCRE_UTF8 modifier 'u', preg_match() fails silently on strings\n",689],["T_WHITESPACE","    ",690],["T_COMMENT","\/\/ containing invalid UTF-8 byte sequences. It does not reject character\n",690],["T_WHITESPACE","    ",691],["T_COMMENT","\/\/ codes above U+10FFFF (represented by 4 or more octets), though.\n",691],["T_WHITESPACE","    ",692],["T_RETURN","return",692],["T_WHITESPACE"," ",692],"(",["T_STRING","preg_match",692],"(",["T_CONSTANT_ENCAPSED_STRING","'\/^.\/us'",692],",",["T_WHITESPACE"," ",692],["T_VARIABLE","$text",692],")",["T_WHITESPACE"," ",692],["T_IS_EQUAL","==",692],["T_WHITESPACE"," ",692],["T_LNUMBER","1",692],")",";",["T_WHITESPACE","\n  ",692],"}",["T_WHITESPACE","\n\n  ",693],["T_DOC_COMMENT","\/**\n   * Finds the position of the first occurrence of a string in another string.\n   *\n   * @param string $haystack\n   *   The string to search in.\n   * @param string $needle\n   *   The string to find in $haystack.\n   * @param int $offset\n   *   If specified, start the search at this number of characters from the\n   *   beginning (default 0).\n   *\n   * @return int|false\n   *   The position where $needle occurs in $haystack, always relative to the\n   *   beginning (independent of $offset), or FALSE if not found. Note that\n   *   a return value of 0 is not the same as FALSE.\n   *\/",695],["T_WHITESPACE","\n  ",710],["T_PUBLIC","public",711],["T_WHITESPACE"," ",711],["T_STATIC","static",711],["T_WHITESPACE"," ",711],["T_FUNCTION","function",711],["T_WHITESPACE"," ",711],["T_STRING","strpos",711],"(",["T_VARIABLE","$haystack",711],",",["T_WHITESPACE"," ",711],["T_VARIABLE","$needle",711],",",["T_WHITESPACE"," ",711],["T_VARIABLE","$offset",711],["T_WHITESPACE"," ",711],"=",["T_WHITESPACE"," ",711],["T_LNUMBER","0",711],")",["T_WHITESPACE"," ",711],"{",["T_WHITESPACE","\n    ",711],["T_IF","if",712],["T_WHITESPACE"," ",712],"(",["T_STATIC","static",712],["T_DOUBLE_COLON","::",712],["T_STRING","getStatus",712],"(",")",["T_WHITESPACE"," ",712],["T_IS_EQUAL","==",712],["T_WHITESPACE"," ",712],["T_STATIC","static",712],["T_DOUBLE_COLON","::",712],["T_STRING","STATUS_MULTIBYTE",712],")",["T_WHITESPACE"," ",712],"{",["T_WHITESPACE","\n      ",712],["T_RETURN","return",713],["T_WHITESPACE"," ",713],["T_STRING","mb_strpos",713],"(",["T_VARIABLE","$haystack",713],",",["T_WHITESPACE"," ",713],["T_VARIABLE","$needle",713],",",["T_WHITESPACE"," ",713],["T_VARIABLE","$offset",713],")",";",["T_WHITESPACE","\n    ",713],"}",["T_WHITESPACE","\n    ",714],["T_ELSE","else",715],["T_WHITESPACE"," ",715],"{",["T_WHITESPACE","\n      ",715],["T_COMMENT","\/\/ Remove Unicode continuation characters, to be compatible with\n",716],["T_WHITESPACE","      ",717],["T_COMMENT","\/\/ Unicode::strlen() and Unicode::substr().\n",717],["T_WHITESPACE","      ",718],["T_VARIABLE","$haystack",718],["T_WHITESPACE"," ",718],"=",["T_WHITESPACE"," ",718],["T_STRING","preg_replace",718],"(",["T_CONSTANT_ENCAPSED_STRING","\"\/[\\x80-\\xBF]\/\"",718],",",["T_WHITESPACE"," ",718],["T_CONSTANT_ENCAPSED_STRING","''",718],",",["T_WHITESPACE"," ",718],["T_VARIABLE","$haystack",718],")",";",["T_WHITESPACE","\n      ",718],["T_VARIABLE","$needle",719],["T_WHITESPACE"," ",719],"=",["T_WHITESPACE"," ",719],["T_STRING","preg_replace",719],"(",["T_CONSTANT_ENCAPSED_STRING","\"\/[\\x80-\\xBF]\/\"",719],",",["T_WHITESPACE"," ",719],["T_CONSTANT_ENCAPSED_STRING","''",719],",",["T_WHITESPACE"," ",719],["T_VARIABLE","$needle",719],")",";",["T_WHITESPACE","\n      ",719],["T_RETURN","return",720],["T_WHITESPACE"," ",720],["T_STRING","strpos",720],"(",["T_VARIABLE","$haystack",720],",",["T_WHITESPACE"," ",720],["T_VARIABLE","$needle",720],",",["T_WHITESPACE"," ",720],["T_VARIABLE","$offset",720],")",";",["T_WHITESPACE","\n    ",720],"}",["T_WHITESPACE","\n  ",721],"}",["T_WHITESPACE","\n\n",722],"}",["T_WHITESPACE","\n",724]]