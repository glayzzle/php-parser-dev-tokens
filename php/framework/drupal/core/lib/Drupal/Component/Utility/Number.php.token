[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Component",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Utility",3],";",["T_WHITESPACE","\n\n",3],["T_DOC_COMMENT","\/**\n * Provides helper methods for manipulating numbers.\n *\n * @ingroup utility\n *\/",5],["T_WHITESPACE","\n",9],["T_CLASS","class",10],["T_WHITESPACE"," ",10],["T_STRING","Number",10],["T_WHITESPACE"," ",10],"{",["T_WHITESPACE","\n\n  ",10],["T_DOC_COMMENT","\/**\n   * Verifies that a number is a multiple of a given step.\n   *\n   * The implementation assumes it is dealing with IEEE 754 double precision\n   * floating point numbers that are used by PHP on most systems.\n   *\n   * This is based on the number\/range verification methods of webkit.\n   *\n   * @param float $value\n   *   The value that needs to be checked.\n   * @param float $step\n   *   The step scale factor. Must be positive.\n   * @param float $offset\n   *   (optional) An offset, to which the difference must be a multiple of the\n   *   given step.\n   *\n   * @return bool\n   *   TRUE if no step mismatch has occurred, or FALSE otherwise.\n   *\n   * @see http:\/\/opensource.apple.com\/source\/WebCore\/WebCore-1298\/html\/NumberInputType.cpp\n   *\/",12],["T_WHITESPACE","\n  ",32],["T_PUBLIC","public",33],["T_WHITESPACE"," ",33],["T_STATIC","static",33],["T_WHITESPACE"," ",33],["T_FUNCTION","function",33],["T_WHITESPACE"," ",33],["T_STRING","validStep",33],"(",["T_VARIABLE","$value",33],",",["T_WHITESPACE"," ",33],["T_VARIABLE","$step",33],",",["T_WHITESPACE"," ",33],["T_VARIABLE","$offset",33],["T_WHITESPACE"," ",33],"=",["T_WHITESPACE"," ",33],["T_DNUMBER","0.0",33],")",["T_WHITESPACE"," ",33],"{",["T_WHITESPACE","\n    ",33],["T_VARIABLE","$double_value",34],["T_WHITESPACE"," ",34],"=",["T_WHITESPACE"," ",34],["T_DOUBLE_CAST","(double)",34],["T_WHITESPACE"," ",34],["T_STRING","abs",34],"(",["T_VARIABLE","$value",34],["T_WHITESPACE"," ",34],"-",["T_WHITESPACE"," ",34],["T_VARIABLE","$offset",34],")",";",["T_WHITESPACE","\n\n    ",34],["T_COMMENT","\/\/ The fractional part of a double has 53 bits. The greatest number that\n",36],["T_WHITESPACE","    ",37],["T_COMMENT","\/\/ could be represented with that is 2^53. If the given value is even bigger\n",37],["T_WHITESPACE","    ",38],["T_COMMENT","\/\/ than $step * 2^53, then dividing by $step will result in a very small\n",38],["T_WHITESPACE","    ",39],["T_COMMENT","\/\/ remainder. Since that remainder can't even be represented with a single\n",39],["T_WHITESPACE","    ",40],["T_COMMENT","\/\/ precision float the following computation of the remainder makes no sense\n",40],["T_WHITESPACE","    ",41],["T_COMMENT","\/\/ and we can safely ignore it instead.\n",41],["T_WHITESPACE","    ",42],["T_IF","if",42],["T_WHITESPACE"," ",42],"(",["T_VARIABLE","$double_value",42],["T_WHITESPACE"," ",42],"\/",["T_WHITESPACE"," ",42],["T_STRING","pow",42],"(",["T_DNUMBER","2.0",42],",",["T_WHITESPACE"," ",42],["T_LNUMBER","53",42],")",["T_WHITESPACE"," ",42],">",["T_WHITESPACE"," ",42],["T_VARIABLE","$step",42],")",["T_WHITESPACE"," ",42],"{",["T_WHITESPACE","\n      ",42],["T_RETURN","return",43],["T_WHITESPACE"," ",43],["T_STRING","TRUE",43],";",["T_WHITESPACE","\n    ",43],"}",["T_WHITESPACE","\n\n    ",44],["T_COMMENT","\/\/ Now compute that remainder of a division by $step.\n",46],["T_WHITESPACE","    ",47],["T_VARIABLE","$remainder",47],["T_WHITESPACE"," ",47],"=",["T_WHITESPACE"," ",47],["T_DOUBLE_CAST","(double)",47],["T_WHITESPACE"," ",47],["T_STRING","abs",47],"(",["T_VARIABLE","$double_value",47],["T_WHITESPACE"," ",47],"-",["T_WHITESPACE"," ",47],["T_VARIABLE","$step",47],["T_WHITESPACE"," ",47],"*",["T_WHITESPACE"," ",47],["T_STRING","round",47],"(",["T_VARIABLE","$double_value",47],["T_WHITESPACE"," ",47],"\/",["T_WHITESPACE"," ",47],["T_VARIABLE","$step",47],")",")",";",["T_WHITESPACE","\n\n    ",47],["T_COMMENT","\/\/ $remainder is a double precision floating point number. Remainders that\n",49],["T_WHITESPACE","    ",50],["T_COMMENT","\/\/ can't be represented with single precision floats are acceptable. The\n",50],["T_WHITESPACE","    ",51],["T_COMMENT","\/\/ fractional part of a float has 24 bits. That means remainders smaller than\n",51],["T_WHITESPACE","    ",52],["T_COMMENT","\/\/ $step * 2^-24 are acceptable.\n",52],["T_WHITESPACE","    ",53],["T_VARIABLE","$computed_acceptable_error",53],["T_WHITESPACE"," ",53],"=",["T_WHITESPACE"," ",53],["T_DOUBLE_CAST","(double)",53],"(",["T_VARIABLE","$step",53],["T_WHITESPACE"," ",53],"\/",["T_WHITESPACE"," ",53],["T_STRING","pow",53],"(",["T_DNUMBER","2.0",53],",",["T_WHITESPACE"," ",53],["T_LNUMBER","24",53],")",")",";",["T_WHITESPACE","\n\n    ",53],["T_RETURN","return",55],["T_WHITESPACE"," ",55],["T_VARIABLE","$computed_acceptable_error",55],["T_WHITESPACE"," ",55],["T_IS_GREATER_OR_EQUAL",">=",55],["T_WHITESPACE"," ",55],["T_VARIABLE","$remainder",55],["T_WHITESPACE"," ",55],["T_BOOLEAN_OR","||",55],["T_WHITESPACE"," ",55],["T_VARIABLE","$remainder",55],["T_WHITESPACE"," ",55],["T_IS_GREATER_OR_EQUAL",">=",55],["T_WHITESPACE"," ",55],"(",["T_VARIABLE","$step",55],["T_WHITESPACE"," ",55],"-",["T_WHITESPACE"," ",55],["T_VARIABLE","$computed_acceptable_error",55],")",";",["T_WHITESPACE","\n  ",55],"}",["T_WHITESPACE","\n\n  ",56],["T_DOC_COMMENT","\/**\n   * Generates a sorting code from an integer.\n   *\n   * Consists of a leading character indicating length, followed by N digits\n   * with a numerical value in base 36 (alphadecimal). These codes can be sorted\n   * as strings without altering numerical order.\n   *\n   * It goes:\n   * 00, 01, 02, ..., 0y, 0z,\n   * 110, 111, ... , 1zy, 1zz,\n   * 2100, 2101, ..., 2zzy, 2zzz,\n   * 31000, 31001, ...\n   *\n   * @param int $i\n   *   The integer value to convert.\n   *\n   * @return string\n   *   The alpha decimal value.\n   *\n   * @see \\Drupal\\Component\\Utility\\Number::alphadecimalToInt\n   *\/",58],["T_WHITESPACE","\n  ",78],["T_PUBLIC","public",79],["T_WHITESPACE"," ",79],["T_STATIC","static",79],["T_WHITESPACE"," ",79],["T_FUNCTION","function",79],["T_WHITESPACE"," ",79],["T_STRING","intToAlphadecimal",79],"(",["T_VARIABLE","$i",79],["T_WHITESPACE"," ",79],"=",["T_WHITESPACE"," ",79],["T_LNUMBER","0",79],")",["T_WHITESPACE"," ",79],"{",["T_WHITESPACE","\n    ",79],["T_VARIABLE","$num",80],["T_WHITESPACE"," ",80],"=",["T_WHITESPACE"," ",80],["T_STRING","base_convert",80],"(",["T_INT_CAST","(int)",80],["T_WHITESPACE"," ",80],["T_VARIABLE","$i",80],",",["T_WHITESPACE"," ",80],["T_LNUMBER","10",80],",",["T_WHITESPACE"," ",80],["T_LNUMBER","36",80],")",";",["T_WHITESPACE","\n    ",80],["T_VARIABLE","$length",81],["T_WHITESPACE"," ",81],"=",["T_WHITESPACE"," ",81],["T_STRING","strlen",81],"(",["T_VARIABLE","$num",81],")",";",["T_WHITESPACE","\n\n    ",81],["T_RETURN","return",83],["T_WHITESPACE"," ",83],["T_STRING","chr",83],"(",["T_VARIABLE","$length",83],["T_WHITESPACE"," ",83],"+",["T_WHITESPACE"," ",83],["T_STRING","ord",83],"(",["T_CONSTANT_ENCAPSED_STRING","'0'",83],")",["T_WHITESPACE"," ",83],"-",["T_WHITESPACE"," ",83],["T_LNUMBER","1",83],")",["T_WHITESPACE"," ",83],".",["T_WHITESPACE"," ",83],["T_VARIABLE","$num",83],";",["T_WHITESPACE","\n  ",83],"}",["T_WHITESPACE","\n\n  ",84],["T_DOC_COMMENT","\/**\n   * Decodes a sorting code back to an integer.\n   *\n   * @param string $string\n   *   The alpha decimal value to convert\n   *\n   * @return int\n   *   The integer value.\n   *\n   * @see \\Drupal\\Component\\Utility\\Number::intToAlphadecimal\n   *\/",86],["T_WHITESPACE","\n  ",96],["T_PUBLIC","public",97],["T_WHITESPACE"," ",97],["T_STATIC","static",97],["T_WHITESPACE"," ",97],["T_FUNCTION","function",97],["T_WHITESPACE"," ",97],["T_STRING","alphadecimalToInt",97],"(",["T_VARIABLE","$string",97],["T_WHITESPACE"," ",97],"=",["T_WHITESPACE"," ",97],["T_CONSTANT_ENCAPSED_STRING","'00'",97],")",["T_WHITESPACE"," ",97],"{",["T_WHITESPACE","\n    ",97],["T_RETURN","return",98],["T_WHITESPACE"," ",98],["T_INT_CAST","(int)",98],["T_WHITESPACE"," ",98],["T_STRING","base_convert",98],"(",["T_STRING","substr",98],"(",["T_VARIABLE","$string",98],",",["T_WHITESPACE"," ",98],["T_LNUMBER","1",98],")",",",["T_WHITESPACE"," ",98],["T_LNUMBER","36",98],",",["T_WHITESPACE"," ",98],["T_LNUMBER","10",98],")",";",["T_WHITESPACE","\n  ",98],"}",["T_WHITESPACE","\n\n",99],"}",["T_WHITESPACE","\n",101]]