[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Component",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Uuid",3],";",["T_WHITESPACE","\n\n",3],["T_USE","use",5],["T_WHITESPACE"," ",5],["T_STRING","Drupal",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Component",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Utility",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Crypt",5],";",["T_WHITESPACE","\n\n",5],["T_DOC_COMMENT","\/**\n * Generates a UUID v4 (RFC 4122 section 4.4) using PHP code.\n *\n * @see http:\/\/www.rfc-editor.org\/rfc\/rfc4122.txt\n * @see http:\/\/www.rfc-editor.org\/errata_search.php?rfc=4122&eid=3546\n *\/",7],["T_WHITESPACE","\n",12],["T_CLASS","class",13],["T_WHITESPACE"," ",13],["T_STRING","Php",13],["T_WHITESPACE"," ",13],["T_IMPLEMENTS","implements",13],["T_WHITESPACE"," ",13],["T_STRING","UuidInterface",13],["T_WHITESPACE"," ",13],"{",["T_WHITESPACE","\n\n  ",13],["T_DOC_COMMENT","\/**\n   * {@inheritdoc}\n   *\/",15],["T_WHITESPACE","\n  ",17],["T_PUBLIC","public",18],["T_WHITESPACE"," ",18],["T_FUNCTION","function",18],["T_WHITESPACE"," ",18],["T_STRING","generate",18],"(",")",["T_WHITESPACE"," ",18],"{",["T_WHITESPACE","\n    ",18],["T_COMMENT","\/\/ Obtain a random string of 32 hex characters.\n",19],["T_WHITESPACE","    ",20],["T_VARIABLE","$hex",20],["T_WHITESPACE"," ",20],"=",["T_WHITESPACE"," ",20],["T_STRING","bin2hex",20],"(",["T_STRING","Crypt",20],["T_DOUBLE_COLON","::",20],["T_STRING","randomBytes",20],"(",["T_LNUMBER","16",20],")",")",";",["T_WHITESPACE","\n\n    ",20],["T_COMMENT","\/\/ The variable names $time_low, $time_mid, $time_hi_and_version,\n",22],["T_WHITESPACE","    ",23],["T_COMMENT","\/\/ $clock_seq_hi_and_reserved, $clock_seq_low, and $node correlate to\n",23],["T_WHITESPACE","    ",24],["T_COMMENT","\/\/ the fields defined in RFC 4122 section 4.1.2.\n",24],["T_WHITESPACE","    ",25],["T_COMMENT","\/\/\n",25],["T_WHITESPACE","    ",26],["T_COMMENT","\/\/ Use characters 0-11 to generate 32-bit $time_low and 16-bit $time_mid.\n",26],["T_WHITESPACE","    ",27],["T_VARIABLE","$time_low",27],["T_WHITESPACE"," ",27],"=",["T_WHITESPACE"," ",27],["T_STRING","substr",27],"(",["T_VARIABLE","$hex",27],",",["T_WHITESPACE"," ",27],["T_LNUMBER","0",27],",",["T_WHITESPACE"," ",27],["T_LNUMBER","8",27],")",";",["T_WHITESPACE","\n    ",27],["T_VARIABLE","$time_mid",28],["T_WHITESPACE"," ",28],"=",["T_WHITESPACE"," ",28],["T_STRING","substr",28],"(",["T_VARIABLE","$hex",28],",",["T_WHITESPACE"," ",28],["T_LNUMBER","8",28],",",["T_WHITESPACE"," ",28],["T_LNUMBER","4",28],")",";",["T_WHITESPACE","\n\n    ",28],["T_COMMENT","\/\/ Use characters 12-15 to generate 16-bit $time_hi_and_version.\n",30],["T_WHITESPACE","    ",31],["T_COMMENT","\/\/ The 4 most significant bits are the version number (0100 == 0x4).\n",31],["T_WHITESPACE","    ",32],["T_COMMENT","\/\/ We simply skip character 12 from $hex, and concatenate the strings.\n",32],["T_WHITESPACE","    ",33],["T_VARIABLE","$time_hi_and_version",33],["T_WHITESPACE"," ",33],"=",["T_WHITESPACE"," ",33],["T_CONSTANT_ENCAPSED_STRING","'4'",33],["T_WHITESPACE"," ",33],".",["T_WHITESPACE"," ",33],["T_STRING","substr",33],"(",["T_VARIABLE","$hex",33],",",["T_WHITESPACE"," ",33],["T_LNUMBER","13",33],",",["T_WHITESPACE"," ",33],["T_LNUMBER","3",33],")",";",["T_WHITESPACE","\n\n    ",33],["T_COMMENT","\/\/ Use characters 16-17 to generate 8-bit $clock_seq_hi_and_reserved.\n",35],["T_WHITESPACE","    ",36],["T_COMMENT","\/\/ The 2 most significant bits are set to one and zero respectively.\n",36],["T_WHITESPACE","    ",37],["T_VARIABLE","$clock_seq_hi_and_reserved",37],["T_WHITESPACE"," ",37],"=",["T_WHITESPACE"," ",37],["T_STRING","base_convert",37],"(",["T_STRING","substr",37],"(",["T_VARIABLE","$hex",37],",",["T_WHITESPACE"," ",37],["T_LNUMBER","16",37],",",["T_WHITESPACE"," ",37],["T_LNUMBER","2",37],")",",",["T_WHITESPACE"," ",37],["T_LNUMBER","16",37],",",["T_WHITESPACE"," ",37],["T_LNUMBER","10",37],")",";",["T_WHITESPACE","\n    ",37],["T_VARIABLE","$clock_seq_hi_and_reserved",38],["T_WHITESPACE"," ",38],["T_AND_EQUAL","&=",38],["T_WHITESPACE"," ",38],["T_LNUMBER","0b00111111",38],";",["T_WHITESPACE","\n    ",38],["T_VARIABLE","$clock_seq_hi_and_reserved",39],["T_WHITESPACE"," ",39],["T_OR_EQUAL","|=",39],["T_WHITESPACE"," ",39],["T_LNUMBER","0b10000000",39],";",["T_WHITESPACE","\n\n    ",39],["T_COMMENT","\/\/ Use characters 18-19 to generate 8-bit $clock_seq_low.\n",41],["T_WHITESPACE","    ",42],["T_VARIABLE","$clock_seq_low",42],["T_WHITESPACE"," ",42],"=",["T_WHITESPACE"," ",42],["T_STRING","substr",42],"(",["T_VARIABLE","$hex",42],",",["T_WHITESPACE"," ",42],["T_LNUMBER","18",42],",",["T_WHITESPACE"," ",42],["T_LNUMBER","2",42],")",";",["T_WHITESPACE","\n    ",42],["T_COMMENT","\/\/ Use characters 20-31 to generate 48-bit $node.\n",43],["T_WHITESPACE","    ",44],["T_VARIABLE","$node",44],["T_WHITESPACE"," ",44],"=",["T_WHITESPACE"," ",44],["T_STRING","substr",44],"(",["T_VARIABLE","$hex",44],",",["T_WHITESPACE"," ",44],["T_LNUMBER","20",44],")",";",["T_WHITESPACE","\n\n    ",44],["T_COMMENT","\/\/ Re-combine as a UUID. $clock_seq_hi_and_reserved is still an integer.\n",46],["T_WHITESPACE","    ",47],["T_VARIABLE","$uuid",47],["T_WHITESPACE"," ",47],"=",["T_WHITESPACE"," ",47],["T_STRING","sprintf",47],"(",["T_CONSTANT_ENCAPSED_STRING","'%s-%s-%s-%02x%s-%s'",47],",",["T_WHITESPACE","\n      ",47],["T_VARIABLE","$time_low",48],",",["T_WHITESPACE"," ",48],["T_VARIABLE","$time_mid",48],",",["T_WHITESPACE"," ",48],["T_VARIABLE","$time_hi_and_version",48],",",["T_WHITESPACE","\n      ",48],["T_VARIABLE","$clock_seq_hi_and_reserved",49],",",["T_WHITESPACE"," ",49],["T_VARIABLE","$clock_seq_low",49],",",["T_WHITESPACE","\n      ",49],["T_VARIABLE","$node",50],["T_WHITESPACE","\n    ",50],")",";",["T_WHITESPACE","\n\n    ",51],["T_RETURN","return",53],["T_WHITESPACE"," ",53],["T_VARIABLE","$uuid",53],";",["T_WHITESPACE","\n  ",53],"}",["T_WHITESPACE","\n\n",54],"}",["T_WHITESPACE","\n",56]]