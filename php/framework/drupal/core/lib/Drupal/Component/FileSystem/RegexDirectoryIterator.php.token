[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Component",3],["T_NS_SEPARATOR","\\",3],["T_STRING","FileSystem",3],";",["T_WHITESPACE","\n\n",3],["T_DOC_COMMENT","\/**\n * Iterates over files whose names match a regular expression in a directory.\n *\/",5],["T_WHITESPACE","\n",7],["T_CLASS","class",8],["T_WHITESPACE"," ",8],["T_STRING","RegexDirectoryIterator",8],["T_WHITESPACE"," ",8],["T_EXTENDS","extends",8],["T_WHITESPACE"," ",8],["T_NS_SEPARATOR","\\",8],["T_STRING","FilterIterator",8],["T_WHITESPACE"," ",8],"{",["T_WHITESPACE","\n\n  ",8],["T_DOC_COMMENT","\/**\n   * The regular expression to match.\n   *\n   * @var string\n   *\/",10],["T_WHITESPACE","\n  ",14],["T_PROTECTED","protected",15],["T_WHITESPACE"," ",15],["T_VARIABLE","$regex",15],";",["T_WHITESPACE","\n\n  ",15],["T_DOC_COMMENT","\/**\n   * RegexDirectoryIterator constructor.\n   *\n   * @param string $path\n   *   The path to scan.\n   * @param string $regex\n   *   The regular expression to match, including delimiters. For example,\n   *   \/\\.yml$\/ would list only files ending in .yml.\n   *\/",17],["T_WHITESPACE","\n  ",25],["T_PUBLIC","public",26],["T_WHITESPACE"," ",26],["T_FUNCTION","function",26],["T_WHITESPACE"," ",26],["T_STRING","__construct",26],"(",["T_VARIABLE","$path",26],",",["T_WHITESPACE"," ",26],["T_VARIABLE","$regex",26],")",["T_WHITESPACE"," ",26],"{",["T_WHITESPACE","\n    ",26],["T_COMMENT","\/\/ Use FilesystemIterator to not iterate over the the . and .. directories.\n",27],["T_WHITESPACE","    ",28],["T_VARIABLE","$iterator",28],["T_WHITESPACE"," ",28],"=",["T_WHITESPACE"," ",28],["T_NEW","new",28],["T_WHITESPACE"," ",28],["T_NS_SEPARATOR","\\",28],["T_STRING","FilesystemIterator",28],"(",["T_VARIABLE","$path",28],")",";",["T_WHITESPACE","\n    ",28],["T_STRING","parent",29],["T_DOUBLE_COLON","::",29],["T_STRING","__construct",29],"(",["T_VARIABLE","$iterator",29],")",";",["T_WHITESPACE","\n    ",29],["T_VARIABLE","$this",30],["T_OBJECT_OPERATOR","->",30],["T_STRING","regex",30],["T_WHITESPACE"," ",30],"=",["T_WHITESPACE"," ",30],["T_VARIABLE","$regex",30],";",["T_WHITESPACE","\n  ",30],"}",["T_WHITESPACE","\n\n  ",31],["T_DOC_COMMENT","\/**\n   * Implements \\FilterIterator::accept().\n   *\/",33],["T_WHITESPACE","\n  ",35],["T_PUBLIC","public",36],["T_WHITESPACE"," ",36],["T_FUNCTION","function",36],["T_WHITESPACE"," ",36],["T_STRING","accept",36],"(",")",["T_WHITESPACE"," ",36],"{",["T_WHITESPACE","\n    ",36],["T_DOC_COMMENT","\/** @var \\SplFileInfo $file_info *\/",37],["T_WHITESPACE","\n    ",37],["T_VARIABLE","$file_info",38],["T_WHITESPACE"," ",38],"=",["T_WHITESPACE"," ",38],["T_VARIABLE","$this",38],["T_OBJECT_OPERATOR","->",38],["T_STRING","getInnerIterator",38],"(",")",["T_OBJECT_OPERATOR","->",38],["T_STRING","current",38],"(",")",";",["T_WHITESPACE","\n    ",38],["T_RETURN","return",39],["T_WHITESPACE"," ",39],["T_VARIABLE","$file_info",39],["T_OBJECT_OPERATOR","->",39],["T_STRING","isFile",39],"(",")",["T_WHITESPACE"," ",39],["T_BOOLEAN_AND","&&",39],["T_WHITESPACE"," ",39],["T_STRING","preg_match",39],"(",["T_VARIABLE","$this",39],["T_OBJECT_OPERATOR","->",39],["T_STRING","regex",39],",",["T_WHITESPACE"," ",39],["T_VARIABLE","$file_info",39],["T_OBJECT_OPERATOR","->",39],["T_STRING","getFilename",39],"(",")",")",";",["T_WHITESPACE","\n  ",39],"}",["T_WHITESPACE","\n\n",40],"}",["T_WHITESPACE","\n",42]]