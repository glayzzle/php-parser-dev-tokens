[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Component",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Plugin",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Discovery",3],";",["T_WHITESPACE","\n\n",3],["T_USE","use",5],["T_WHITESPACE"," ",5],["T_STRING","Drupal",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Component",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Plugin",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Exception",5],["T_NS_SEPARATOR","\\",5],["T_STRING","InvalidDeriverException",5],";",["T_WHITESPACE","\n\n",5],["T_DOC_COMMENT","\/**\n * Base class providing the tools for a plugin discovery to be derivative aware.\n *\n * Provides a decorator that allows the use of plugin derivatives for normal\n * implementations DiscoveryInterface.\n *\/",7],["T_WHITESPACE","\n",12],["T_CLASS","class",13],["T_WHITESPACE"," ",13],["T_STRING","DerivativeDiscoveryDecorator",13],["T_WHITESPACE"," ",13],["T_IMPLEMENTS","implements",13],["T_WHITESPACE"," ",13],["T_STRING","DiscoveryInterface",13],["T_WHITESPACE"," ",13],"{",["T_WHITESPACE","\n\n  ",13],["T_USE","use",15],["T_WHITESPACE"," ",15],["T_STRING","DiscoveryTrait",15],";",["T_WHITESPACE","\n\n  ",15],["T_DOC_COMMENT","\/**\n   * Plugin derivers.\n   *\n   * @var \\Drupal\\Component\\Plugin\\Derivative\\DeriverInterface[]\n   *   Keys are base plugin IDs.\n   *\/",17],["T_WHITESPACE","\n  ",22],["T_PROTECTED","protected",23],["T_WHITESPACE"," ",23],["T_VARIABLE","$derivers",23],["T_WHITESPACE"," ",23],"=",["T_WHITESPACE"," ",23],["T_ARRAY","array",23],"(",")",";",["T_WHITESPACE","\n\n  ",23],["T_DOC_COMMENT","\/**\n   * The decorated plugin discovery.\n   *\n   * @var \\Drupal\\Component\\Plugin\\Discovery\\DiscoveryInterface\n   *\/",25],["T_WHITESPACE","\n  ",29],["T_PROTECTED","protected",30],["T_WHITESPACE"," ",30],["T_VARIABLE","$decorated",30],";",["T_WHITESPACE","\n\n  ",30],["T_DOC_COMMENT","\/**\n   * Creates a new instance.\n   *\n   * @param \\Drupal\\Component\\Plugin\\Discovery\\DiscoveryInterface $decorated\n   *   The parent object implementing DiscoveryInterface that is being\n   *   decorated.\n   *\/",32],["T_WHITESPACE","\n  ",38],["T_PUBLIC","public",39],["T_WHITESPACE"," ",39],["T_FUNCTION","function",39],["T_WHITESPACE"," ",39],["T_STRING","__construct",39],"(",["T_STRING","DiscoveryInterface",39],["T_WHITESPACE"," ",39],["T_VARIABLE","$decorated",39],")",["T_WHITESPACE"," ",39],"{",["T_WHITESPACE","\n    ",39],["T_VARIABLE","$this",40],["T_OBJECT_OPERATOR","->",40],["T_STRING","decorated",40],["T_WHITESPACE"," ",40],"=",["T_WHITESPACE"," ",40],["T_VARIABLE","$decorated",40],";",["T_WHITESPACE","\n  ",40],"}",["T_WHITESPACE","\n\n  ",41],["T_DOC_COMMENT","\/**\n   * {@inheritdoc}\n   *\n   * @throws \\Drupal\\Component\\Plugin\\Exception\\InvalidDeriverException\n   *   Thrown if the 'deriver' class specified in the plugin definition\n   *   does not implement \\Drupal\\Component\\Plugin\\Derivative\\DeriverInterface.\n   *\/",43],["T_WHITESPACE","\n  ",49],["T_PUBLIC","public",50],["T_WHITESPACE"," ",50],["T_FUNCTION","function",50],["T_WHITESPACE"," ",50],["T_STRING","getDefinition",50],"(",["T_VARIABLE","$plugin_id",50],",",["T_WHITESPACE"," ",50],["T_VARIABLE","$exception_on_invalid",50],["T_WHITESPACE"," ",50],"=",["T_WHITESPACE"," ",50],["T_STRING","TRUE",50],")",["T_WHITESPACE"," ",50],"{",["T_WHITESPACE","\n    ",50],["T_COMMENT","\/\/ This check is only for derivative plugins that have explicitly provided\n",51],["T_WHITESPACE","    ",52],["T_COMMENT","\/\/ an ID. This is not common, and can be expected to fail. Therefore, opt\n",52],["T_WHITESPACE","    ",53],["T_COMMENT","\/\/ out of the thrown exception, which will be handled when checking the\n",53],["T_WHITESPACE","    ",54],["T_COMMENT","\/\/ $base_plugin_id.\n",54],["T_WHITESPACE","    ",55],["T_VARIABLE","$plugin_definition",55],["T_WHITESPACE"," ",55],"=",["T_WHITESPACE"," ",55],["T_VARIABLE","$this",55],["T_OBJECT_OPERATOR","->",55],["T_STRING","decorated",55],["T_OBJECT_OPERATOR","->",55],["T_STRING","getDefinition",55],"(",["T_VARIABLE","$plugin_id",55],",",["T_WHITESPACE"," ",55],["T_STRING","FALSE",55],")",";",["T_WHITESPACE","\n\n    ",55],["T_LIST","list",57],"(",["T_VARIABLE","$base_plugin_id",57],",",["T_WHITESPACE"," ",57],["T_VARIABLE","$derivative_id",57],")",["T_WHITESPACE"," ",57],"=",["T_WHITESPACE"," ",57],["T_VARIABLE","$this",57],["T_OBJECT_OPERATOR","->",57],["T_STRING","decodePluginId",57],"(",["T_VARIABLE","$plugin_id",57],")",";",["T_WHITESPACE","\n    ",57],["T_VARIABLE","$base_plugin_definition",58],["T_WHITESPACE"," ",58],"=",["T_WHITESPACE"," ",58],["T_VARIABLE","$this",58],["T_OBJECT_OPERATOR","->",58],["T_STRING","decorated",58],["T_OBJECT_OPERATOR","->",58],["T_STRING","getDefinition",58],"(",["T_VARIABLE","$base_plugin_id",58],",",["T_WHITESPACE"," ",58],["T_VARIABLE","$exception_on_invalid",58],")",";",["T_WHITESPACE","\n    ",58],["T_IF","if",59],["T_WHITESPACE"," ",59],"(",["T_VARIABLE","$base_plugin_definition",59],")",["T_WHITESPACE"," ",59],"{",["T_WHITESPACE","\n      ",59],["T_VARIABLE","$deriver",60],["T_WHITESPACE"," ",60],"=",["T_WHITESPACE"," ",60],["T_VARIABLE","$this",60],["T_OBJECT_OPERATOR","->",60],["T_STRING","getDeriver",60],"(",["T_VARIABLE","$base_plugin_id",60],",",["T_WHITESPACE"," ",60],["T_VARIABLE","$base_plugin_definition",60],")",";",["T_WHITESPACE","\n      ",60],["T_IF","if",61],["T_WHITESPACE"," ",61],"(",["T_VARIABLE","$deriver",61],")",["T_WHITESPACE"," ",61],"{",["T_WHITESPACE","\n        ",61],["T_VARIABLE","$derivative_plugin_definition",62],["T_WHITESPACE"," ",62],"=",["T_WHITESPACE"," ",62],["T_VARIABLE","$deriver",62],["T_OBJECT_OPERATOR","->",62],["T_STRING","getDerivativeDefinition",62],"(",["T_VARIABLE","$derivative_id",62],",",["T_WHITESPACE"," ",62],["T_VARIABLE","$base_plugin_definition",62],")",";",["T_WHITESPACE","\n        ",62],["T_COMMENT","\/\/ If a plugin defined itself as a derivative, merge in possible\n",63],["T_WHITESPACE","        ",64],["T_COMMENT","\/\/ defaults from the derivative.\n",64],["T_WHITESPACE","        ",65],["T_IF","if",65],["T_WHITESPACE"," ",65],"(",["T_VARIABLE","$derivative_id",65],["T_WHITESPACE"," ",65],["T_BOOLEAN_AND","&&",65],["T_WHITESPACE"," ",65],["T_ISSET","isset",65],"(",["T_VARIABLE","$plugin_definition",65],")",")",["T_WHITESPACE"," ",65],"{",["T_WHITESPACE","\n          ",65],["T_VARIABLE","$plugin_definition",66],["T_WHITESPACE"," ",66],"=",["T_WHITESPACE"," ",66],["T_VARIABLE","$this",66],["T_OBJECT_OPERATOR","->",66],["T_STRING","mergeDerivativeDefinition",66],"(",["T_VARIABLE","$plugin_definition",66],",",["T_WHITESPACE"," ",66],["T_VARIABLE","$derivative_plugin_definition",66],")",";",["T_WHITESPACE","\n        ",66],"}",["T_WHITESPACE","\n        ",67],["T_ELSE","else",68],["T_WHITESPACE"," ",68],"{",["T_WHITESPACE","\n          ",68],["T_VARIABLE","$plugin_definition",69],["T_WHITESPACE"," ",69],"=",["T_WHITESPACE"," ",69],["T_VARIABLE","$derivative_plugin_definition",69],";",["T_WHITESPACE","\n        ",69],"}",["T_WHITESPACE","\n      ",70],"}",["T_WHITESPACE","\n    ",71],"}",["T_WHITESPACE","\n\n    ",72],["T_RETURN","return",74],["T_WHITESPACE"," ",74],["T_VARIABLE","$plugin_definition",74],";",["T_WHITESPACE","\n  ",74],"}",["T_WHITESPACE","\n\n  ",75],["T_DOC_COMMENT","\/**\n   * {@inheritdoc}\n   *\n   * @throws \\Drupal\\Component\\Plugin\\Exception\\InvalidDeriverException\n   *   Thrown if the 'deriver' class specified in the plugin definition\n   *   does not implement \\Drupal\\Component\\Plugin\\Derivative\\DeriverInterface.\n   *\/",77],["T_WHITESPACE","\n  ",83],["T_PUBLIC","public",84],["T_WHITESPACE"," ",84],["T_FUNCTION","function",84],["T_WHITESPACE"," ",84],["T_STRING","getDefinitions",84],"(",")",["T_WHITESPACE"," ",84],"{",["T_WHITESPACE","\n    ",84],["T_VARIABLE","$plugin_definitions",85],["T_WHITESPACE"," ",85],"=",["T_WHITESPACE"," ",85],["T_VARIABLE","$this",85],["T_OBJECT_OPERATOR","->",85],["T_STRING","decorated",85],["T_OBJECT_OPERATOR","->",85],["T_STRING","getDefinitions",85],"(",")",";",["T_WHITESPACE","\n    ",85],["T_RETURN","return",86],["T_WHITESPACE"," ",86],["T_VARIABLE","$this",86],["T_OBJECT_OPERATOR","->",86],["T_STRING","getDerivatives",86],"(",["T_VARIABLE","$plugin_definitions",86],")",";",["T_WHITESPACE","\n  ",86],"}",["T_WHITESPACE","\n\n  ",87],["T_DOC_COMMENT","\/**\n   * Adds derivatives to a list of plugin definitions.\n   *\n   * This should be called by the class extending this in\n   * DiscoveryInterface::getDefinitions().\n   *\/",89],["T_WHITESPACE","\n  ",94],["T_PROTECTED","protected",95],["T_WHITESPACE"," ",95],["T_FUNCTION","function",95],["T_WHITESPACE"," ",95],["T_STRING","getDerivatives",95],"(",["T_ARRAY","array",95],["T_WHITESPACE"," ",95],["T_VARIABLE","$base_plugin_definitions",95],")",["T_WHITESPACE"," ",95],"{",["T_WHITESPACE","\n    ",95],["T_VARIABLE","$plugin_definitions",96],["T_WHITESPACE"," ",96],"=",["T_WHITESPACE"," ",96],["T_ARRAY","array",96],"(",")",";",["T_WHITESPACE","\n    ",96],["T_FOREACH","foreach",97],["T_WHITESPACE"," ",97],"(",["T_VARIABLE","$base_plugin_definitions",97],["T_WHITESPACE"," ",97],["T_AS","as",97],["T_WHITESPACE"," ",97],["T_VARIABLE","$base_plugin_id",97],["T_WHITESPACE"," ",97],["T_DOUBLE_ARROW","=>",97],["T_WHITESPACE"," ",97],["T_VARIABLE","$plugin_definition",97],")",["T_WHITESPACE"," ",97],"{",["T_WHITESPACE","\n      ",97],["T_VARIABLE","$deriver",98],["T_WHITESPACE"," ",98],"=",["T_WHITESPACE"," ",98],["T_VARIABLE","$this",98],["T_OBJECT_OPERATOR","->",98],["T_STRING","getDeriver",98],"(",["T_VARIABLE","$base_plugin_id",98],",",["T_WHITESPACE"," ",98],["T_VARIABLE","$plugin_definition",98],")",";",["T_WHITESPACE","\n      ",98],["T_IF","if",99],["T_WHITESPACE"," ",99],"(",["T_VARIABLE","$deriver",99],")",["T_WHITESPACE"," ",99],"{",["T_WHITESPACE","\n        ",99],["T_VARIABLE","$derivative_definitions",100],["T_WHITESPACE"," ",100],"=",["T_WHITESPACE"," ",100],["T_VARIABLE","$deriver",100],["T_OBJECT_OPERATOR","->",100],["T_STRING","getDerivativeDefinitions",100],"(",["T_VARIABLE","$plugin_definition",100],")",";",["T_WHITESPACE","\n        ",100],["T_FOREACH","foreach",101],["T_WHITESPACE"," ",101],"(",["T_VARIABLE","$derivative_definitions",101],["T_WHITESPACE"," ",101],["T_AS","as",101],["T_WHITESPACE"," ",101],["T_VARIABLE","$derivative_id",101],["T_WHITESPACE"," ",101],["T_DOUBLE_ARROW","=>",101],["T_WHITESPACE"," ",101],["T_VARIABLE","$derivative_definition",101],")",["T_WHITESPACE"," ",101],"{",["T_WHITESPACE","\n          ",101],["T_VARIABLE","$plugin_id",102],["T_WHITESPACE"," ",102],"=",["T_WHITESPACE"," ",102],["T_VARIABLE","$this",102],["T_OBJECT_OPERATOR","->",102],["T_STRING","encodePluginId",102],"(",["T_VARIABLE","$base_plugin_id",102],",",["T_WHITESPACE"," ",102],["T_VARIABLE","$derivative_id",102],")",";",["T_WHITESPACE","\n          ",102],["T_COMMENT","\/\/ Use this definition as defaults if a plugin already defined\n",103],["T_WHITESPACE","          ",104],["T_COMMENT","\/\/ itself as this derivative.\n",104],["T_WHITESPACE","          ",105],["T_IF","if",105],["T_WHITESPACE"," ",105],"(",["T_VARIABLE","$derivative_id",105],["T_WHITESPACE"," ",105],["T_BOOLEAN_AND","&&",105],["T_WHITESPACE"," ",105],["T_ISSET","isset",105],"(",["T_VARIABLE","$base_plugin_definitions",105],"[",["T_VARIABLE","$plugin_id",105],"]",")",")",["T_WHITESPACE"," ",105],"{",["T_WHITESPACE","\n            ",105],["T_VARIABLE","$derivative_definition",106],["T_WHITESPACE"," ",106],"=",["T_WHITESPACE"," ",106],["T_VARIABLE","$this",106],["T_OBJECT_OPERATOR","->",106],["T_STRING","mergeDerivativeDefinition",106],"(",["T_VARIABLE","$base_plugin_definitions",106],"[",["T_VARIABLE","$plugin_id",106],"]",",",["T_WHITESPACE"," ",106],["T_VARIABLE","$derivative_definition",106],")",";",["T_WHITESPACE","\n          ",106],"}",["T_WHITESPACE","\n          ",107],["T_VARIABLE","$plugin_definitions",108],"[",["T_VARIABLE","$plugin_id",108],"]",["T_WHITESPACE"," ",108],"=",["T_WHITESPACE"," ",108],["T_VARIABLE","$derivative_definition",108],";",["T_WHITESPACE","\n        ",108],"}",["T_WHITESPACE","\n      ",109],"}",["T_WHITESPACE","\n      ",110],["T_COMMENT","\/\/ If a plugin already defined itself as a derivative it might already\n",111],["T_WHITESPACE","      ",112],["T_COMMENT","\/\/ be merged into the definitions.\n",112],["T_WHITESPACE","      ",113],["T_ELSEIF","elseif",113],["T_WHITESPACE"," ",113],"(","!",["T_ISSET","isset",113],"(",["T_VARIABLE","$plugin_definitions",113],"[",["T_VARIABLE","$base_plugin_id",113],"]",")",")",["T_WHITESPACE"," ",113],"{",["T_WHITESPACE","\n        ",113],["T_VARIABLE","$plugin_definitions",114],"[",["T_VARIABLE","$base_plugin_id",114],"]",["T_WHITESPACE"," ",114],"=",["T_WHITESPACE"," ",114],["T_VARIABLE","$plugin_definition",114],";",["T_WHITESPACE","\n      ",114],"}",["T_WHITESPACE","\n    ",115],"}",["T_WHITESPACE","\n\n    ",116],["T_RETURN","return",118],["T_WHITESPACE"," ",118],["T_VARIABLE","$plugin_definitions",118],";",["T_WHITESPACE","\n  ",118],"}",["T_WHITESPACE","\n\n  ",119],["T_DOC_COMMENT","\/**\n   * Decodes derivative id and plugin id from a string.\n   *\n   * @param string $plugin_id\n   *   Plugin identifier that may point to a derivative plugin.\n   *\n   * @return array\n   *   An array with the base plugin id as the first index and the derivative id\n   *   as the second. If there is no derivative id it will be null.\n   *\/",121],["T_WHITESPACE","\n  ",130],["T_PROTECTED","protected",131],["T_WHITESPACE"," ",131],["T_FUNCTION","function",131],["T_WHITESPACE"," ",131],["T_STRING","decodePluginId",131],"(",["T_VARIABLE","$plugin_id",131],")",["T_WHITESPACE"," ",131],"{",["T_WHITESPACE","\n    ",131],["T_COMMENT","\/\/ Try and split the passed plugin definition into a plugin and a\n",132],["T_WHITESPACE","    ",133],["T_COMMENT","\/\/ derivative id. We don't need to check for !== FALSE because a leading\n",133],["T_WHITESPACE","    ",134],["T_COMMENT","\/\/ colon would break the derivative system and doesn't makes sense.\n",134],["T_WHITESPACE","    ",135],["T_IF","if",135],["T_WHITESPACE"," ",135],"(",["T_STRING","strpos",135],"(",["T_VARIABLE","$plugin_id",135],",",["T_WHITESPACE"," ",135],["T_CONSTANT_ENCAPSED_STRING","':'",135],")",")",["T_WHITESPACE"," ",135],"{",["T_WHITESPACE","\n      ",135],["T_RETURN","return",136],["T_WHITESPACE"," ",136],["T_STRING","explode",136],"(",["T_CONSTANT_ENCAPSED_STRING","':'",136],",",["T_WHITESPACE"," ",136],["T_VARIABLE","$plugin_id",136],",",["T_WHITESPACE"," ",136],["T_LNUMBER","2",136],")",";",["T_WHITESPACE","\n    ",136],"}",["T_WHITESPACE","\n\n    ",137],["T_RETURN","return",139],["T_WHITESPACE"," ",139],["T_ARRAY","array",139],"(",["T_VARIABLE","$plugin_id",139],",",["T_WHITESPACE"," ",139],["T_STRING","NULL",139],")",";",["T_WHITESPACE","\n  ",139],"}",["T_WHITESPACE","\n\n  ",140],["T_DOC_COMMENT","\/**\n   * Encodes plugin and derivative id's into a string.\n   *\n   * @param string $base_plugin_id\n   *   The base plugin identifier.\n   * @param string $derivative_id\n   *   The derivative identifier.\n   *\n   * @return string\n   *   A uniquely encoded combination of the $base_plugin_id and $derivative_id.\n   *\/",142],["T_WHITESPACE","\n  ",152],["T_PROTECTED","protected",153],["T_WHITESPACE"," ",153],["T_FUNCTION","function",153],["T_WHITESPACE"," ",153],["T_STRING","encodePluginId",153],"(",["T_VARIABLE","$base_plugin_id",153],",",["T_WHITESPACE"," ",153],["T_VARIABLE","$derivative_id",153],")",["T_WHITESPACE"," ",153],"{",["T_WHITESPACE","\n    ",153],["T_IF","if",154],["T_WHITESPACE"," ",154],"(",["T_VARIABLE","$derivative_id",154],")",["T_WHITESPACE"," ",154],"{",["T_WHITESPACE","\n      ",154],["T_RETURN","return",155],["T_WHITESPACE"," ",155],"\"",["T_VARIABLE","$base_plugin_id",155],["T_ENCAPSED_AND_WHITESPACE",":",155],["T_VARIABLE","$derivative_id",155],"\"",";",["T_WHITESPACE","\n    ",155],"}",["T_WHITESPACE","\n\n    ",156],["T_COMMENT","\/\/ By returning the unmerged plugin_id, we are able to support derivative\n",158],["T_WHITESPACE","    ",159],["T_COMMENT","\/\/ plugins that support fetching the base definitions.\n",159],["T_WHITESPACE","    ",160],["T_RETURN","return",160],["T_WHITESPACE"," ",160],["T_VARIABLE","$base_plugin_id",160],";",["T_WHITESPACE","\n  ",160],"}",["T_WHITESPACE","\n\n  ",161],["T_DOC_COMMENT","\/**\n   * Gets a deriver for a base plugin.\n   *\n   * @param string $base_plugin_id\n   *   The base plugin id of the plugin.\n   * @param mixed $base_definition\n   *   The base plugin definition to build derivatives.\n   *\n   * @return \\Drupal\\Component\\Plugin\\Derivative\\DeriverInterface|null\n   *   A DerivativeInterface or NULL if none exists for the plugin.\n   *\n   * @throws \\Drupal\\Component\\Plugin\\Exception\\InvalidDeriverException\n   *   Thrown if the 'deriver' class specified in the plugin definition\n   *   does not implement \\Drupal\\Component\\Plugin\\Derivative\\DeriverInterface.\n   *\/",163],["T_WHITESPACE","\n  ",177],["T_PROTECTED","protected",178],["T_WHITESPACE"," ",178],["T_FUNCTION","function",178],["T_WHITESPACE"," ",178],["T_STRING","getDeriver",178],"(",["T_VARIABLE","$base_plugin_id",178],",",["T_WHITESPACE"," ",178],["T_VARIABLE","$base_definition",178],")",["T_WHITESPACE"," ",178],"{",["T_WHITESPACE","\n    ",178],["T_IF","if",179],["T_WHITESPACE"," ",179],"(","!",["T_ISSET","isset",179],"(",["T_VARIABLE","$this",179],["T_OBJECT_OPERATOR","->",179],["T_STRING","derivers",179],"[",["T_VARIABLE","$base_plugin_id",179],"]",")",")",["T_WHITESPACE"," ",179],"{",["T_WHITESPACE","\n      ",179],["T_VARIABLE","$this",180],["T_OBJECT_OPERATOR","->",180],["T_STRING","derivers",180],"[",["T_VARIABLE","$base_plugin_id",180],"]",["T_WHITESPACE"," ",180],"=",["T_WHITESPACE"," ",180],["T_STRING","FALSE",180],";",["T_WHITESPACE","\n      ",180],["T_VARIABLE","$class",181],["T_WHITESPACE"," ",181],"=",["T_WHITESPACE"," ",181],["T_VARIABLE","$this",181],["T_OBJECT_OPERATOR","->",181],["T_STRING","getDeriverClass",181],"(",["T_VARIABLE","$base_definition",181],")",";",["T_WHITESPACE","\n      ",181],["T_IF","if",182],["T_WHITESPACE"," ",182],"(",["T_VARIABLE","$class",182],")",["T_WHITESPACE"," ",182],"{",["T_WHITESPACE","\n        ",182],["T_VARIABLE","$this",183],["T_OBJECT_OPERATOR","->",183],["T_STRING","derivers",183],"[",["T_VARIABLE","$base_plugin_id",183],"]",["T_WHITESPACE"," ",183],"=",["T_WHITESPACE"," ",183],["T_NEW","new",183],["T_WHITESPACE"," ",183],["T_VARIABLE","$class",183],"(",["T_VARIABLE","$base_plugin_id",183],")",";",["T_WHITESPACE","\n      ",183],"}",["T_WHITESPACE","\n    ",184],"}",["T_WHITESPACE","\n    ",185],["T_RETURN","return",186],["T_WHITESPACE"," ",186],["T_VARIABLE","$this",186],["T_OBJECT_OPERATOR","->",186],["T_STRING","derivers",186],"[",["T_VARIABLE","$base_plugin_id",186],"]",["T_WHITESPACE"," ",186],"?",":",["T_WHITESPACE"," ",186],["T_STRING","NULL",186],";",["T_WHITESPACE","\n  ",186],"}",["T_WHITESPACE","\n\n  ",187],["T_DOC_COMMENT","\/**\n   * Gets the deriver class name from the base plugin definition.\n   *\n   * @param array $base_definition\n   *   The base plugin definition to build derivatives.\n   *\n   * @return string|null\n   *   The name of a class implementing\n   *   \\Drupal\\Component\\Plugin\\Derivative\\DeriverInterface.\n   *\n   * @throws \\Drupal\\Component\\Plugin\\Exception\\InvalidDeriverException\n   *   Thrown if the 'deriver' class specified in the plugin definition\n   *   does not implement\n   *   \\Drupal\\Component\\Plugin\\Derivative\\DerivativeInterface.\n   *\/",189],["T_WHITESPACE","\n  ",203],["T_PROTECTED","protected",204],["T_WHITESPACE"," ",204],["T_FUNCTION","function",204],["T_WHITESPACE"," ",204],["T_STRING","getDeriverClass",204],"(",["T_VARIABLE","$base_definition",204],")",["T_WHITESPACE"," ",204],"{",["T_WHITESPACE","\n    ",204],["T_VARIABLE","$class",205],["T_WHITESPACE"," ",205],"=",["T_WHITESPACE"," ",205],["T_STRING","NULL",205],";",["T_WHITESPACE","\n    ",205],["T_IF","if",206],["T_WHITESPACE"," ",206],"(","(",["T_STRING","is_array",206],"(",["T_VARIABLE","$base_definition",206],")",["T_WHITESPACE"," ",206],["T_BOOLEAN_OR","||",206],["T_WHITESPACE"," ",206],"(",["T_VARIABLE","$base_definition",206],["T_WHITESPACE"," ",206],"=",["T_WHITESPACE"," ",206],["T_ARRAY_CAST","(array)",206],["T_WHITESPACE"," ",206],["T_VARIABLE","$base_definition",206],")",")",["T_WHITESPACE"," ",206],["T_BOOLEAN_AND","&&",206],["T_WHITESPACE"," ",206],"(",["T_ISSET","isset",206],"(",["T_VARIABLE","$base_definition",206],"[",["T_CONSTANT_ENCAPSED_STRING","'deriver'",206],"]",")",["T_WHITESPACE"," ",206],["T_BOOLEAN_AND","&&",206],["T_WHITESPACE"," ",206],["T_VARIABLE","$class",206],["T_WHITESPACE"," ",206],"=",["T_WHITESPACE"," ",206],["T_VARIABLE","$base_definition",206],"[",["T_CONSTANT_ENCAPSED_STRING","'deriver'",206],"]",")",")",["T_WHITESPACE"," ",206],"{",["T_WHITESPACE","\n      ",206],["T_IF","if",207],["T_WHITESPACE"," ",207],"(","!",["T_STRING","class_exists",207],"(",["T_VARIABLE","$class",207],")",")",["T_WHITESPACE"," ",207],"{",["T_WHITESPACE","\n        ",207],["T_THROW","throw",208],["T_WHITESPACE"," ",208],["T_NEW","new",208],["T_WHITESPACE"," ",208],["T_STRING","InvalidDeriverException",208],"(",["T_STRING","sprintf",208],"(",["T_CONSTANT_ENCAPSED_STRING","'Plugin (%s) deriver \"%s\" does not exist.'",208],",",["T_WHITESPACE"," ",208],["T_VARIABLE","$base_definition",208],"[",["T_CONSTANT_ENCAPSED_STRING","'id'",208],"]",",",["T_WHITESPACE"," ",208],["T_VARIABLE","$class",208],")",")",";",["T_WHITESPACE","\n      ",208],"}",["T_WHITESPACE","\n      ",209],["T_IF","if",210],["T_WHITESPACE"," ",210],"(","!",["T_STRING","is_subclass_of",210],"(",["T_VARIABLE","$class",210],",",["T_WHITESPACE"," ",210],["T_CONSTANT_ENCAPSED_STRING","'\\Drupal\\Component\\Plugin\\Derivative\\DeriverInterface'",210],")",")",["T_WHITESPACE"," ",210],"{",["T_WHITESPACE","\n        ",210],["T_THROW","throw",211],["T_WHITESPACE"," ",211],["T_NEW","new",211],["T_WHITESPACE"," ",211],["T_STRING","InvalidDeriverException",211],"(",["T_STRING","sprintf",211],"(",["T_CONSTANT_ENCAPSED_STRING","'Plugin (%s) deriver \"%s\" must implement \\Drupal\\Component\\Plugin\\Derivative\\DeriverInterface.'",211],",",["T_WHITESPACE"," ",211],["T_VARIABLE","$base_definition",211],"[",["T_CONSTANT_ENCAPSED_STRING","'id'",211],"]",",",["T_WHITESPACE"," ",211],["T_VARIABLE","$class",211],")",")",";",["T_WHITESPACE","\n      ",211],"}",["T_WHITESPACE","\n    ",212],"}",["T_WHITESPACE","\n    ",213],["T_RETURN","return",214],["T_WHITESPACE"," ",214],["T_VARIABLE","$class",214],";",["T_WHITESPACE","\n  ",214],"}",["T_WHITESPACE","\n\n  ",215],["T_DOC_COMMENT","\/**\n   * Merges a base and derivative definition, taking into account empty values.\n   *\n   * @param array $base_plugin_definition\n   *   The base plugin definition.\n   * @param array $derivative_definition\n   *   The derivative plugin definition.\n   *\n   * @return array\n   *   The merged definition.\n   *\/",217],["T_WHITESPACE","\n  ",227],["T_PROTECTED","protected",228],["T_WHITESPACE"," ",228],["T_FUNCTION","function",228],["T_WHITESPACE"," ",228],["T_STRING","mergeDerivativeDefinition",228],"(",["T_VARIABLE","$base_plugin_definition",228],",",["T_WHITESPACE"," ",228],["T_VARIABLE","$derivative_definition",228],")",["T_WHITESPACE"," ",228],"{",["T_WHITESPACE","\n    ",228],["T_COMMENT","\/\/ Use this definition as defaults if a plugin already defined itself as\n",229],["T_WHITESPACE","    ",230],["T_COMMENT","\/\/ this derivative, but filter out empty values first.\n",230],["T_WHITESPACE","    ",231],["T_VARIABLE","$filtered_base",231],["T_WHITESPACE"," ",231],"=",["T_WHITESPACE"," ",231],["T_STRING","array_filter",231],"(",["T_VARIABLE","$base_plugin_definition",231],")",";",["T_WHITESPACE","\n    ",231],["T_VARIABLE","$derivative_definition",232],["T_WHITESPACE"," ",232],"=",["T_WHITESPACE"," ",232],["T_VARIABLE","$filtered_base",232],["T_WHITESPACE"," ",232],"+",["T_WHITESPACE"," ",232],"(",["T_VARIABLE","$derivative_definition",232],["T_WHITESPACE"," ",232],"?",":",["T_WHITESPACE"," ",232],["T_ARRAY","array",232],"(",")",")",";",["T_WHITESPACE","\n    ",232],["T_COMMENT","\/\/ Add back any empty keys that the derivative didn't have.\n",233],["T_WHITESPACE","    ",234],["T_RETURN","return",234],["T_WHITESPACE"," ",234],["T_VARIABLE","$derivative_definition",234],["T_WHITESPACE"," ",234],"+",["T_WHITESPACE"," ",234],["T_VARIABLE","$base_plugin_definition",234],";",["T_WHITESPACE","\n  ",234],"}",["T_WHITESPACE","\n\n  ",235],["T_DOC_COMMENT","\/**\n   * Passes through all unknown calls onto the decorated object.\n   *\/",237],["T_WHITESPACE","\n  ",239],["T_PUBLIC","public",240],["T_WHITESPACE"," ",240],["T_FUNCTION","function",240],["T_WHITESPACE"," ",240],["T_STRING","__call",240],"(",["T_VARIABLE","$method",240],",",["T_WHITESPACE"," ",240],["T_VARIABLE","$args",240],")",["T_WHITESPACE"," ",240],"{",["T_WHITESPACE","\n    ",240],["T_RETURN","return",241],["T_WHITESPACE"," ",241],["T_STRING","call_user_func_array",241],"(",["T_ARRAY","array",241],"(",["T_VARIABLE","$this",241],["T_OBJECT_OPERATOR","->",241],["T_STRING","decorated",241],",",["T_WHITESPACE"," ",241],["T_VARIABLE","$method",241],")",",",["T_WHITESPACE"," ",241],["T_VARIABLE","$args",241],")",";",["T_WHITESPACE","\n  ",241],"}",["T_WHITESPACE","\n\n",242],"}",["T_WHITESPACE","\n",244]]