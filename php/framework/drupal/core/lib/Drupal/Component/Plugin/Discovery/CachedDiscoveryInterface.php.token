[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Component",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Plugin",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Discovery",3],";",["T_WHITESPACE","\n\n",3],["T_DOC_COMMENT","\/**\n * Interface for discovery components holding a cache of plugin definitions.\n *\/",5],["T_WHITESPACE","\n",7],["T_INTERFACE","interface",8],["T_WHITESPACE"," ",8],["T_STRING","CachedDiscoveryInterface",8],["T_WHITESPACE"," ",8],["T_EXTENDS","extends",8],["T_WHITESPACE"," ",8],["T_STRING","DiscoveryInterface",8],["T_WHITESPACE"," ",8],"{",["T_WHITESPACE","\n\n  ",8],["T_DOC_COMMENT","\/**\n   * Clears static and persistent plugin definition caches.\n   *\n   * Don't resort to calling \\Drupal::cache()->delete() and friends to make\n   * Drupal detect new or updated plugin definitions. Always use this method on\n   * the appropriate plugin type's plugin manager!\n   *\/",10],["T_WHITESPACE","\n  ",16],["T_PUBLIC","public",17],["T_WHITESPACE"," ",17],["T_FUNCTION","function",17],["T_WHITESPACE"," ",17],["T_STRING","clearCachedDefinitions",17],"(",")",";",["T_WHITESPACE","\n\n  ",17],["T_DOC_COMMENT","\/**\n   * Disable the use of caches.\n   *\n   * Can be used to ensure that uncached plugin definitions are returned,\n   * without invalidating all cached information.\n   *\n   * This will also remove all local\/static caches.\n   *\n   * @param bool $use_caches\n   *   FALSE to not use any caches.\n   *\/",19],["T_WHITESPACE","\n  ",29],["T_PUBLIC","public",30],["T_WHITESPACE"," ",30],["T_FUNCTION","function",30],["T_WHITESPACE"," ",30],["T_STRING","useCaches",30],"(",["T_VARIABLE","$use_caches",30],["T_WHITESPACE"," ",30],"=",["T_WHITESPACE"," ",30],["T_STRING","FALSE",30],")",";",["T_WHITESPACE","\n\n",30],"}",["T_WHITESPACE","\n",32]]