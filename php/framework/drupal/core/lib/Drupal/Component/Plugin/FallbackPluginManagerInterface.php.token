[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Component",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Plugin",3],";",["T_WHITESPACE","\n\n",3],["T_DOC_COMMENT","\/**\n * An interface implemented by plugin managers with fallback plugin behaviors.\n *\/",5],["T_WHITESPACE","\n",7],["T_INTERFACE","interface",8],["T_WHITESPACE"," ",8],["T_STRING","FallbackPluginManagerInterface",8],["T_WHITESPACE"," ",8],"{",["T_WHITESPACE","\n\n  ",8],["T_DOC_COMMENT","\/**\n   * Gets a fallback id for a missing plugin.\n   *\n   * @param string $plugin_id\n   *   The ID of the missing requested plugin.\n   * @param array $configuration\n   *   An array of configuration relevant to the plugin instance.\n   *\n   * @return string\n   *   The id of an existing plugin to use when the plugin does not exist.\n   *\/",10],["T_WHITESPACE","\n  ",20],["T_PUBLIC","public",21],["T_WHITESPACE"," ",21],["T_FUNCTION","function",21],["T_WHITESPACE"," ",21],["T_STRING","getFallbackPluginId",21],"(",["T_VARIABLE","$plugin_id",21],",",["T_WHITESPACE"," ",21],["T_ARRAY","array",21],["T_WHITESPACE"," ",21],["T_VARIABLE","$configuration",21],["T_WHITESPACE"," ",21],"=",["T_WHITESPACE"," ",21],["T_ARRAY","array",21],"(",")",")",";",["T_WHITESPACE","\n\n",21],"}",["T_WHITESPACE","\n",23]]