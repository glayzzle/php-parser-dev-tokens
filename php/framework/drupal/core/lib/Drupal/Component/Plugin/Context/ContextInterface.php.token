[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Component",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Plugin",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Context",3],";",["T_WHITESPACE","\n\n",3],["T_DOC_COMMENT","\/**\n * A generic context interface for wrapping data a plugin needs to operate.\n *\/",5],["T_WHITESPACE","\n",7],["T_INTERFACE","interface",8],["T_WHITESPACE"," ",8],["T_STRING","ContextInterface",8],["T_WHITESPACE"," ",8],"{",["T_WHITESPACE","\n\n  ",8],["T_DOC_COMMENT","\/**\n   * Gets the context value.\n   *\n   * @return mixed\n   *   The currently set context value, or NULL if it is not set.\n   *\/",10],["T_WHITESPACE","\n  ",15],["T_PUBLIC","public",16],["T_WHITESPACE"," ",16],["T_FUNCTION","function",16],["T_WHITESPACE"," ",16],["T_STRING","getContextValue",16],"(",")",";",["T_WHITESPACE","\n\n  ",16],["T_DOC_COMMENT","\/**\n   * Returns whether the context has a value.\n   *\n   * @return bool\n   *   TRUE if the context has a value, FALSE otherwise.\n   *\/",18],["T_WHITESPACE","\n  ",23],["T_PUBLIC","public",24],["T_WHITESPACE"," ",24],["T_FUNCTION","function",24],["T_WHITESPACE"," ",24],["T_STRING","hasContextValue",24],"(",")",";",["T_WHITESPACE","\n\n  ",24],["T_DOC_COMMENT","\/**\n   * Gets the provided definition that the context must conform to.\n   *\n   * @return \\Drupal\\Component\\Plugin\\Context\\ContextDefinitionInterface\n   *   The defining characteristic representation of the context.\n   *\/",26],["T_WHITESPACE","\n  ",31],["T_PUBLIC","public",32],["T_WHITESPACE"," ",32],["T_FUNCTION","function",32],["T_WHITESPACE"," ",32],["T_STRING","getContextDefinition",32],"(",")",";",["T_WHITESPACE","\n\n  ",32],["T_DOC_COMMENT","\/**\n   * Gets a list of validation constraints.\n   *\n   * @return array\n   *   Array of constraints, each being an instance of\n   *   \\Symfony\\Component\\Validator\\Constraint.\n   *\/",34],["T_WHITESPACE","\n  ",40],["T_PUBLIC","public",41],["T_WHITESPACE"," ",41],["T_FUNCTION","function",41],["T_WHITESPACE"," ",41],["T_STRING","getConstraints",41],"(",")",";",["T_WHITESPACE","\n\n  ",41],["T_DOC_COMMENT","\/**\n   * Validates the set context value.\n   *\n   * @return \\Symfony\\Component\\Validator\\ConstraintViolationListInterface\n   *   A list of constraint violations. If the list is empty, validation\n   *   succeeded.\n   *\/",43],["T_WHITESPACE","\n  ",49],["T_PUBLIC","public",50],["T_WHITESPACE"," ",50],["T_FUNCTION","function",50],["T_WHITESPACE"," ",50],["T_STRING","validate",50],"(",")",";",["T_WHITESPACE","\n\n",50],"}",["T_WHITESPACE","\n",52]]