[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Component",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Plugin",3],";",["T_WHITESPACE","\n\n",3],["T_DOC_COMMENT","\/**\n * Provides an interface for a plugin that has dependencies.\n *\n * @ingroup plugin_api\n *\/",5],["T_WHITESPACE","\n",9],["T_INTERFACE","interface",10],["T_WHITESPACE"," ",10],["T_STRING","DependentPluginInterface",10],["T_WHITESPACE"," ",10],"{",["T_WHITESPACE","\n\n  ",10],["T_DOC_COMMENT","\/**\n   * Calculates dependencies for the configured plugin.\n   *\n   * Dependencies are saved in the plugin's configuration entity and are used to\n   * determine configuration synchronization order. For example, if the plugin\n   * integrates with specific user roles, this method should return an array of\n   * dependencies listing the specified roles.\n   *\n   * @return array\n   *   An array of dependencies grouped by type (config, content, module,\n   *   theme). For example:\n   *   @code\n   *   array(\n   *     'config' => array('user.role.anonymous', 'user.role.authenticated'),\n   *     'content' => array('node:article:f0a189e6-55fb-47fb-8005-5bef81c44d6d'),\n   *     'module' => array('node', 'user'),\n   *     'theme' => array('seven'),\n   *   );\n   *   @endcode\n   *\n   * @see \\Drupal\\Core\\Config\\Entity\\ConfigDependencyManager\n   * @see \\Drupal\\Core\\Entity\\EntityInterface::getConfigDependencyName()\n   *\/",12],["T_WHITESPACE","\n  ",34],["T_PUBLIC","public",35],["T_WHITESPACE"," ",35],["T_FUNCTION","function",35],["T_WHITESPACE"," ",35],["T_STRING","calculateDependencies",35],"(",")",";",["T_WHITESPACE","\n\n",35],"}",["T_WHITESPACE","\n",37]]