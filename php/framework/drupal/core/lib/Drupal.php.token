[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_DOC_COMMENT","\/**\n * @file\n * Contains \\Drupal.\n *\/",3],["T_WHITESPACE","\n\n",6],["T_USE","use",8],["T_WHITESPACE"," ",8],["T_STRING","Drupal",8],["T_NS_SEPARATOR","\\",8],["T_STRING","Core",8],["T_NS_SEPARATOR","\\",8],["T_STRING","DependencyInjection",8],["T_NS_SEPARATOR","\\",8],["T_STRING","ContainerNotInitializedException",8],";",["T_WHITESPACE","\n",8],["T_USE","use",9],["T_WHITESPACE"," ",9],["T_STRING","Symfony",9],["T_NS_SEPARATOR","\\",9],["T_STRING","Component",9],["T_NS_SEPARATOR","\\",9],["T_STRING","DependencyInjection",9],["T_NS_SEPARATOR","\\",9],["T_STRING","ContainerInterface",9],";",["T_WHITESPACE","\n",9],["T_USE","use",10],["T_WHITESPACE"," ",10],["T_STRING","Drupal",10],["T_NS_SEPARATOR","\\",10],["T_STRING","Core",10],["T_NS_SEPARATOR","\\",10],["T_STRING","Url",10],";",["T_WHITESPACE","\n\n",10],["T_DOC_COMMENT","\/**\n * Static Service Container wrapper.\n *\n * Generally, code in Drupal should accept its dependencies via either\n * constructor injection or setter method injection. However, there are cases,\n * particularly in legacy procedural code, where that is infeasible. This\n * class acts as a unified global accessor to arbitrary services within the\n * system in order to ease the transition from procedural code to injected OO\n * code.\n *\n * The container is built by the kernel and passed in to this class which stores\n * it statically. The container always contains the services from\n * \\Drupal\\Core\\CoreServiceProvider, the service providers of enabled modules and any other\n * service providers defined in $GLOBALS['conf']['container_service_providers'].\n *\n * This class exists only to support legacy code that cannot be dependency\n * injected. If your code needs it, consider refactoring it to be object\n * oriented, if possible. When this is not possible, for instance in the case of\n * hook implementations, and your code is more than a few non-reusable lines, it\n * is recommended to instantiate an object implementing the actual logic.\n *\n * @code\n *   \/\/ Legacy procedural code.\n *   function hook_do_stuff() {\n *     $lock = lock()->acquire('stuff_lock');\n *     \/\/ ...\n *   }\n *\n *   \/\/ Correct procedural code.\n *   function hook_do_stuff() {\n *     $lock = \\Drupal::lock()->acquire('stuff_lock');\n *     \/\/ ...\n *   }\n *\n *   \/\/ The preferred way: dependency injected code.\n *   function hook_do_stuff() {\n *     \/\/ Move the actual implementation to a class and instantiate it.\n *     $instance = new StuffDoingClass(\\Drupal::lock());\n *     $instance->doStuff();\n *\n *     \/\/ Or, even better, rely on the service container to avoid hard coding a\n *     \/\/ specific interface implementation, so that the actual logic can be\n *     \/\/ swapped. This might not always make sense, but in general it is a good\n *     \/\/ practice.\n *     \\Drupal::service('stuff.doing')->doStuff();\n *   }\n *\n *   interface StuffDoingInterface {\n *     public function doStuff();\n *   }\n *\n *   class StuffDoingClass implements StuffDoingInterface {\n *     protected $lockBackend;\n *\n *     public function __construct(LockBackendInterface $lock_backend) {\n *       $this->lockBackend = $lock_backend;\n *     }\n *\n *     public function doStuff() {\n *       $lock = $this->lockBackend->acquire('stuff_lock');\n *       \/\/ ...\n *     }\n *   }\n * @endcode\n *\n * @see \\Drupal\\Core\\DrupalKernel\n *\/",12],["T_WHITESPACE","\n",78],["T_CLASS","class",79],["T_WHITESPACE"," ",79],["T_STRING","Drupal",79],["T_WHITESPACE"," ",79],"{",["T_WHITESPACE","\n\n  ",79],["T_DOC_COMMENT","\/**\n   * The current system version.\n   *\/",81],["T_WHITESPACE","\n  ",83],["T_CONST","const",84],["T_WHITESPACE"," ",84],["T_STRING","VERSION",84],["T_WHITESPACE"," ",84],"=",["T_WHITESPACE"," ",84],["T_CONSTANT_ENCAPSED_STRING","'8.2.6-dev'",84],";",["T_WHITESPACE","\n\n  ",84],["T_DOC_COMMENT","\/**\n   * Core API compatibility.\n   *\/",86],["T_WHITESPACE","\n  ",88],["T_CONST","const",89],["T_WHITESPACE"," ",89],["T_STRING","CORE_COMPATIBILITY",89],["T_WHITESPACE"," ",89],"=",["T_WHITESPACE"," ",89],["T_CONSTANT_ENCAPSED_STRING","'8.x'",89],";",["T_WHITESPACE","\n\n  ",89],["T_DOC_COMMENT","\/**\n   * Core minimum schema version.\n   *\/",91],["T_WHITESPACE","\n  ",93],["T_CONST","const",94],["T_WHITESPACE"," ",94],["T_STRING","CORE_MINIMUM_SCHEMA_VERSION",94],["T_WHITESPACE"," ",94],"=",["T_WHITESPACE"," ",94],["T_LNUMBER","8000",94],";",["T_WHITESPACE","\n\n  ",94],["T_DOC_COMMENT","\/**\n   * The currently active container object, or NULL if not initialized yet.\n   *\n   * @var \\Symfony\\Component\\DependencyInjection\\ContainerInterface|null\n   *\/",96],["T_WHITESPACE","\n  ",100],["T_PROTECTED","protected",101],["T_WHITESPACE"," ",101],["T_STATIC","static",101],["T_WHITESPACE"," ",101],["T_VARIABLE","$container",101],";",["T_WHITESPACE","\n\n  ",101],["T_DOC_COMMENT","\/**\n   * Sets a new global container.\n   *\n   * @param \\Symfony\\Component\\DependencyInjection\\ContainerInterface $container\n   *   A new container instance to replace the current.\n   *\/",103],["T_WHITESPACE","\n  ",108],["T_PUBLIC","public",109],["T_WHITESPACE"," ",109],["T_STATIC","static",109],["T_WHITESPACE"," ",109],["T_FUNCTION","function",109],["T_WHITESPACE"," ",109],["T_STRING","setContainer",109],"(",["T_STRING","ContainerInterface",109],["T_WHITESPACE"," ",109],["T_VARIABLE","$container",109],")",["T_WHITESPACE"," ",109],"{",["T_WHITESPACE","\n    ",109],["T_STATIC","static",110],["T_DOUBLE_COLON","::",110],["T_VARIABLE","$container",110],["T_WHITESPACE"," ",110],"=",["T_WHITESPACE"," ",110],["T_VARIABLE","$container",110],";",["T_WHITESPACE","\n  ",110],"}",["T_WHITESPACE","\n\n  ",111],["T_DOC_COMMENT","\/**\n   * Unsets the global container.\n   *\/",113],["T_WHITESPACE","\n  ",115],["T_PUBLIC","public",116],["T_WHITESPACE"," ",116],["T_STATIC","static",116],["T_WHITESPACE"," ",116],["T_FUNCTION","function",116],["T_WHITESPACE"," ",116],["T_STRING","unsetContainer",116],"(",")",["T_WHITESPACE"," ",116],"{",["T_WHITESPACE","\n    ",116],["T_STATIC","static",117],["T_DOUBLE_COLON","::",117],["T_VARIABLE","$container",117],["T_WHITESPACE"," ",117],"=",["T_WHITESPACE"," ",117],["T_STRING","NULL",117],";",["T_WHITESPACE","\n  ",117],"}",["T_WHITESPACE","\n\n  ",118],["T_DOC_COMMENT","\/**\n   * Returns the currently active global container.\n   *\n   * @return \\Symfony\\Component\\DependencyInjection\\ContainerInterface|null\n   *\n   * @throws \\Drupal\\Core\\DependencyInjection\\ContainerNotInitializedException\n   *\/",120],["T_WHITESPACE","\n  ",126],["T_PUBLIC","public",127],["T_WHITESPACE"," ",127],["T_STATIC","static",127],["T_WHITESPACE"," ",127],["T_FUNCTION","function",127],["T_WHITESPACE"," ",127],["T_STRING","getContainer",127],"(",")",["T_WHITESPACE"," ",127],"{",["T_WHITESPACE","\n    ",127],["T_IF","if",128],["T_WHITESPACE"," ",128],"(",["T_STATIC","static",128],["T_DOUBLE_COLON","::",128],["T_VARIABLE","$container",128],["T_WHITESPACE"," ",128],["T_IS_IDENTICAL","===",128],["T_WHITESPACE"," ",128],["T_STRING","NULL",128],")",["T_WHITESPACE"," ",128],"{",["T_WHITESPACE","\n      ",128],["T_THROW","throw",129],["T_WHITESPACE"," ",129],["T_NEW","new",129],["T_WHITESPACE"," ",129],["T_STRING","ContainerNotInitializedException",129],"(",["T_CONSTANT_ENCAPSED_STRING","'\\Drupal::$container is not initialized yet. \\Drupal::setContainer() must be called with a real container.'",129],")",";",["T_WHITESPACE","\n    ",129],"}",["T_WHITESPACE","\n    ",130],["T_RETURN","return",131],["T_WHITESPACE"," ",131],["T_STATIC","static",131],["T_DOUBLE_COLON","::",131],["T_VARIABLE","$container",131],";",["T_WHITESPACE","\n  ",131],"}",["T_WHITESPACE","\n\n  ",132],["T_DOC_COMMENT","\/**\n   * Returns TRUE if the container has been initialized, FALSE otherwise.\n   *\n   * @return bool\n   *\/",134],["T_WHITESPACE","\n  ",138],["T_PUBLIC","public",139],["T_WHITESPACE"," ",139],["T_STATIC","static",139],["T_WHITESPACE"," ",139],["T_FUNCTION","function",139],["T_WHITESPACE"," ",139],["T_STRING","hasContainer",139],"(",")",["T_WHITESPACE"," ",139],"{",["T_WHITESPACE","\n    ",139],["T_RETURN","return",140],["T_WHITESPACE"," ",140],["T_STATIC","static",140],["T_DOUBLE_COLON","::",140],["T_VARIABLE","$container",140],["T_WHITESPACE"," ",140],["T_IS_NOT_IDENTICAL","!==",140],["T_WHITESPACE"," ",140],["T_STRING","NULL",140],";",["T_WHITESPACE","\n  ",140],"}",["T_WHITESPACE","\n\n\n  ",141],["T_DOC_COMMENT","\/**\n   * Retrieves a service from the container.\n   *\n   * Use this method if the desired service is not one of those with a dedicated\n   * accessor method below. If it is listed below, those methods are preferred\n   * as they can return useful type hints.\n   *\n   * @param string $id\n   *   The ID of the service to retrieve.\n   *\n   * @return mixed\n   *   The specified service.\n   *\/",144],["T_WHITESPACE","\n  ",156],["T_PUBLIC","public",157],["T_WHITESPACE"," ",157],["T_STATIC","static",157],["T_WHITESPACE"," ",157],["T_FUNCTION","function",157],["T_WHITESPACE"," ",157],["T_STRING","service",157],"(",["T_VARIABLE","$id",157],")",["T_WHITESPACE"," ",157],"{",["T_WHITESPACE","\n    ",157],["T_RETURN","return",158],["T_WHITESPACE"," ",158],["T_STATIC","static",158],["T_DOUBLE_COLON","::",158],["T_STRING","getContainer",158],"(",")",["T_OBJECT_OPERATOR","->",158],["T_STRING","get",158],"(",["T_VARIABLE","$id",158],")",";",["T_WHITESPACE","\n  ",158],"}",["T_WHITESPACE","\n\n  ",159],["T_DOC_COMMENT","\/**\n   * Indicates if a service is defined in the container.\n   *\n   * @param string $id\n   *   The ID of the service to check.\n   *\n   * @return bool\n   *   TRUE if the specified service exists, FALSE otherwise.\n   *\/",161],["T_WHITESPACE","\n  ",169],["T_PUBLIC","public",170],["T_WHITESPACE"," ",170],["T_STATIC","static",170],["T_WHITESPACE"," ",170],["T_FUNCTION","function",170],["T_WHITESPACE"," ",170],["T_STRING","hasService",170],"(",["T_VARIABLE","$id",170],")",["T_WHITESPACE"," ",170],"{",["T_WHITESPACE","\n    ",170],["T_COMMENT","\/\/ Check hasContainer() first in order to always return a Boolean.\n",171],["T_WHITESPACE","    ",172],["T_RETURN","return",172],["T_WHITESPACE"," ",172],["T_STATIC","static",172],["T_DOUBLE_COLON","::",172],["T_STRING","hasContainer",172],"(",")",["T_WHITESPACE"," ",172],["T_BOOLEAN_AND","&&",172],["T_WHITESPACE"," ",172],["T_STATIC","static",172],["T_DOUBLE_COLON","::",172],["T_STRING","getContainer",172],"(",")",["T_OBJECT_OPERATOR","->",172],["T_STRING","has",172],"(",["T_VARIABLE","$id",172],")",";",["T_WHITESPACE","\n  ",172],"}",["T_WHITESPACE","\n\n  ",173],["T_DOC_COMMENT","\/**\n   * Gets the app root.\n   *\n   * @return string\n   *\/",175],["T_WHITESPACE","\n  ",179],["T_PUBLIC","public",180],["T_WHITESPACE"," ",180],["T_STATIC","static",180],["T_WHITESPACE"," ",180],["T_FUNCTION","function",180],["T_WHITESPACE"," ",180],["T_STRING","root",180],"(",")",["T_WHITESPACE"," ",180],"{",["T_WHITESPACE","\n    ",180],["T_RETURN","return",181],["T_WHITESPACE"," ",181],["T_STATIC","static",181],["T_DOUBLE_COLON","::",181],["T_STRING","getContainer",181],"(",")",["T_OBJECT_OPERATOR","->",181],["T_STRING","get",181],"(",["T_CONSTANT_ENCAPSED_STRING","'app.root'",181],")",";",["T_WHITESPACE","\n  ",181],"}",["T_WHITESPACE","\n\n  ",182],["T_DOC_COMMENT","\/**\n   * Indicates if there is a currently active request object.\n   *\n   * @return bool\n   *   TRUE if there is a currently active request object, FALSE otherwise.\n   *\/",184],["T_WHITESPACE","\n  ",189],["T_PUBLIC","public",190],["T_WHITESPACE"," ",190],["T_STATIC","static",190],["T_WHITESPACE"," ",190],["T_FUNCTION","function",190],["T_WHITESPACE"," ",190],["T_STRING","hasRequest",190],"(",")",["T_WHITESPACE"," ",190],"{",["T_WHITESPACE","\n    ",190],["T_COMMENT","\/\/ Check hasContainer() first in order to always return a Boolean.\n",191],["T_WHITESPACE","    ",192],["T_RETURN","return",192],["T_WHITESPACE"," ",192],["T_STATIC","static",192],["T_DOUBLE_COLON","::",192],["T_STRING","hasContainer",192],"(",")",["T_WHITESPACE"," ",192],["T_BOOLEAN_AND","&&",192],["T_WHITESPACE"," ",192],["T_STATIC","static",192],["T_DOUBLE_COLON","::",192],["T_STRING","getContainer",192],"(",")",["T_OBJECT_OPERATOR","->",192],["T_STRING","has",192],"(",["T_CONSTANT_ENCAPSED_STRING","'request_stack'",192],")",["T_WHITESPACE"," ",192],["T_BOOLEAN_AND","&&",192],["T_WHITESPACE"," ",192],["T_STATIC","static",192],["T_DOUBLE_COLON","::",192],["T_STRING","getContainer",192],"(",")",["T_OBJECT_OPERATOR","->",192],["T_STRING","get",192],"(",["T_CONSTANT_ENCAPSED_STRING","'request_stack'",192],")",["T_OBJECT_OPERATOR","->",192],["T_STRING","getCurrentRequest",192],"(",")",["T_WHITESPACE"," ",192],["T_IS_NOT_IDENTICAL","!==",192],["T_WHITESPACE"," ",192],["T_STRING","NULL",192],";",["T_WHITESPACE","\n  ",192],"}",["T_WHITESPACE","\n\n  ",193],["T_DOC_COMMENT","\/**\n   * Retrieves the currently active request object.\n   *\n   * Note: The use of this wrapper in particular is especially discouraged. Most\n   * code should not need to access the request directly.  Doing so means it\n   * will only function when handling an HTTP request, and will require special\n   * modification or wrapping when run from a command line tool, from certain\n   * queue processors, or from automated tests.\n   *\n   * If code must access the request, it is considerably better to register\n   * an object with the Service Container and give it a setRequest() method\n   * that is configured to run when the service is created.  That way, the\n   * correct request object can always be provided by the container and the\n   * service can still be unit tested.\n   *\n   * If this method must be used, never save the request object that is\n   * returned.  Doing so may lead to inconsistencies as the request object is\n   * volatile and may change at various times, such as during a subrequest.\n   *\n   * @return \\Symfony\\Component\\HttpFoundation\\Request\n   *   The currently active request object.\n   *\/",195],["T_WHITESPACE","\n  ",216],["T_PUBLIC","public",217],["T_WHITESPACE"," ",217],["T_STATIC","static",217],["T_WHITESPACE"," ",217],["T_FUNCTION","function",217],["T_WHITESPACE"," ",217],["T_STRING","request",217],"(",")",["T_WHITESPACE"," ",217],"{",["T_WHITESPACE","\n    ",217],["T_RETURN","return",218],["T_WHITESPACE"," ",218],["T_STATIC","static",218],["T_DOUBLE_COLON","::",218],["T_STRING","getContainer",218],"(",")",["T_OBJECT_OPERATOR","->",218],["T_STRING","get",218],"(",["T_CONSTANT_ENCAPSED_STRING","'request_stack'",218],")",["T_OBJECT_OPERATOR","->",218],["T_STRING","getCurrentRequest",218],"(",")",";",["T_WHITESPACE","\n  ",218],"}",["T_WHITESPACE","\n\n  ",219],["T_DOC_COMMENT","\/**\n   * Retrives the request stack.\n   *\n   * @return \\Symfony\\Component\\HttpFoundation\\RequestStack\n   *   The request stack\n   *\/",221],["T_WHITESPACE","\n  ",226],["T_PUBLIC","public",227],["T_WHITESPACE"," ",227],["T_STATIC","static",227],["T_WHITESPACE"," ",227],["T_FUNCTION","function",227],["T_WHITESPACE"," ",227],["T_STRING","requestStack",227],"(",")",["T_WHITESPACE"," ",227],"{",["T_WHITESPACE","\n    ",227],["T_RETURN","return",228],["T_WHITESPACE"," ",228],["T_STATIC","static",228],["T_DOUBLE_COLON","::",228],["T_STRING","getContainer",228],"(",")",["T_OBJECT_OPERATOR","->",228],["T_STRING","get",228],"(",["T_CONSTANT_ENCAPSED_STRING","'request_stack'",228],")",";",["T_WHITESPACE","\n  ",228],"}",["T_WHITESPACE","\n\n  ",229],["T_DOC_COMMENT","\/**\n   * Retrieves the currently active route match object.\n   *\n   * @return \\Drupal\\Core\\Routing\\RouteMatchInterface\n   *   The currently active route match object.\n   *\/",231],["T_WHITESPACE","\n  ",236],["T_PUBLIC","public",237],["T_WHITESPACE"," ",237],["T_STATIC","static",237],["T_WHITESPACE"," ",237],["T_FUNCTION","function",237],["T_WHITESPACE"," ",237],["T_STRING","routeMatch",237],"(",")",["T_WHITESPACE"," ",237],"{",["T_WHITESPACE","\n    ",237],["T_RETURN","return",238],["T_WHITESPACE"," ",238],["T_STATIC","static",238],["T_DOUBLE_COLON","::",238],["T_STRING","getContainer",238],"(",")",["T_OBJECT_OPERATOR","->",238],["T_STRING","get",238],"(",["T_CONSTANT_ENCAPSED_STRING","'current_route_match'",238],")",";",["T_WHITESPACE","\n  ",238],"}",["T_WHITESPACE","\n\n  ",239],["T_DOC_COMMENT","\/**\n   * Gets the current active user.\n   *\n   * @return \\Drupal\\Core\\Session\\AccountProxyInterface\n   *\/",241],["T_WHITESPACE","\n  ",245],["T_PUBLIC","public",246],["T_WHITESPACE"," ",246],["T_STATIC","static",246],["T_WHITESPACE"," ",246],["T_FUNCTION","function",246],["T_WHITESPACE"," ",246],["T_STRING","currentUser",246],"(",")",["T_WHITESPACE"," ",246],"{",["T_WHITESPACE","\n    ",246],["T_RETURN","return",247],["T_WHITESPACE"," ",247],["T_STATIC","static",247],["T_DOUBLE_COLON","::",247],["T_STRING","getContainer",247],"(",")",["T_OBJECT_OPERATOR","->",247],["T_STRING","get",247],"(",["T_CONSTANT_ENCAPSED_STRING","'current_user'",247],")",";",["T_WHITESPACE","\n  ",247],"}",["T_WHITESPACE","\n\n  ",248],["T_DOC_COMMENT","\/**\n   * Retrieves the entity manager service.\n   *\n   * @return \\Drupal\\Core\\Entity\\EntityManagerInterface\n   *   The entity manager service.\n   *\n   * @deprecated in Drupal 8.0.0 and will be removed before Drupal 9.0.0.\n   *   Use \\Drupal::entityTypeManager() instead in most cases. If the needed\n   *   method is not on \\Drupal\\Core\\Entity\\EntityTypeManagerInterface, see the\n   *   deprecated \\Drupal\\Core\\Entity\\EntityManager to find the\n   *   correct interface or service.\n   *\/",250],["T_WHITESPACE","\n  ",261],["T_PUBLIC","public",262],["T_WHITESPACE"," ",262],["T_STATIC","static",262],["T_WHITESPACE"," ",262],["T_FUNCTION","function",262],["T_WHITESPACE"," ",262],["T_STRING","entityManager",262],"(",")",["T_WHITESPACE"," ",262],"{",["T_WHITESPACE","\n    ",262],["T_RETURN","return",263],["T_WHITESPACE"," ",263],["T_STATIC","static",263],["T_DOUBLE_COLON","::",263],["T_STRING","getContainer",263],"(",")",["T_OBJECT_OPERATOR","->",263],["T_STRING","get",263],"(",["T_CONSTANT_ENCAPSED_STRING","'entity.manager'",263],")",";",["T_WHITESPACE","\n  ",263],"}",["T_WHITESPACE","\n\n  ",264],["T_DOC_COMMENT","\/**\n   * Retrieves the entity type manager.\n   *\n   * @return \\Drupal\\Core\\Entity\\EntityTypeManagerInterface\n   *   The entity type manager.\n   *\/",266],["T_WHITESPACE","\n  ",271],["T_PUBLIC","public",272],["T_WHITESPACE"," ",272],["T_STATIC","static",272],["T_WHITESPACE"," ",272],["T_FUNCTION","function",272],["T_WHITESPACE"," ",272],["T_STRING","entityTypeManager",272],"(",")",["T_WHITESPACE"," ",272],"{",["T_WHITESPACE","\n    ",272],["T_RETURN","return",273],["T_WHITESPACE"," ",273],["T_STATIC","static",273],["T_DOUBLE_COLON","::",273],["T_STRING","getContainer",273],"(",")",["T_OBJECT_OPERATOR","->",273],["T_STRING","get",273],"(",["T_CONSTANT_ENCAPSED_STRING","'entity_type.manager'",273],")",";",["T_WHITESPACE","\n  ",273],"}",["T_WHITESPACE","\n\n  ",274],["T_DOC_COMMENT","\/**\n   * Returns the current primary database.\n   *\n   * @return \\Drupal\\Core\\Database\\Connection\n   *   The current active database's master connection.\n   *\/",276],["T_WHITESPACE","\n  ",281],["T_PUBLIC","public",282],["T_WHITESPACE"," ",282],["T_STATIC","static",282],["T_WHITESPACE"," ",282],["T_FUNCTION","function",282],["T_WHITESPACE"," ",282],["T_STRING","database",282],"(",")",["T_WHITESPACE"," ",282],"{",["T_WHITESPACE","\n    ",282],["T_RETURN","return",283],["T_WHITESPACE"," ",283],["T_STATIC","static",283],["T_DOUBLE_COLON","::",283],["T_STRING","getContainer",283],"(",")",["T_OBJECT_OPERATOR","->",283],["T_STRING","get",283],"(",["T_CONSTANT_ENCAPSED_STRING","'database'",283],")",";",["T_WHITESPACE","\n  ",283],"}",["T_WHITESPACE","\n\n  ",284],["T_DOC_COMMENT","\/**\n   * Returns the requested cache bin.\n   *\n   * @param string $bin\n   *   (optional) The cache bin for which the cache object should be returned,\n   *   defaults to 'default'.\n   *\n   * @return \\Drupal\\Core\\Cache\\CacheBackendInterface\n   *   The cache object associated with the specified bin.\n   *\n   * @ingroup cache\n   *\/",286],["T_WHITESPACE","\n  ",297],["T_PUBLIC","public",298],["T_WHITESPACE"," ",298],["T_STATIC","static",298],["T_WHITESPACE"," ",298],["T_FUNCTION","function",298],["T_WHITESPACE"," ",298],["T_STRING","cache",298],"(",["T_VARIABLE","$bin",298],["T_WHITESPACE"," ",298],"=",["T_WHITESPACE"," ",298],["T_CONSTANT_ENCAPSED_STRING","'default'",298],")",["T_WHITESPACE"," ",298],"{",["T_WHITESPACE","\n    ",298],["T_RETURN","return",299],["T_WHITESPACE"," ",299],["T_STATIC","static",299],["T_DOUBLE_COLON","::",299],["T_STRING","getContainer",299],"(",")",["T_OBJECT_OPERATOR","->",299],["T_STRING","get",299],"(",["T_CONSTANT_ENCAPSED_STRING","'cache.'",299],["T_WHITESPACE"," ",299],".",["T_WHITESPACE"," ",299],["T_VARIABLE","$bin",299],")",";",["T_WHITESPACE","\n  ",299],"}",["T_WHITESPACE","\n\n  ",300],["T_DOC_COMMENT","\/**\n   * Returns an expirable key value store collection.\n   *\n   * @param string $collection\n   *   The name of the collection holding key and value pairs.\n   *\n   * @return \\Drupal\\Core\\KeyValueStore\\KeyValueStoreExpirableInterface\n   *   An expirable key value store collection.\n   *\/",302],["T_WHITESPACE","\n  ",310],["T_PUBLIC","public",311],["T_WHITESPACE"," ",311],["T_STATIC","static",311],["T_WHITESPACE"," ",311],["T_FUNCTION","function",311],["T_WHITESPACE"," ",311],["T_STRING","keyValueExpirable",311],"(",["T_VARIABLE","$collection",311],")",["T_WHITESPACE"," ",311],"{",["T_WHITESPACE","\n    ",311],["T_RETURN","return",312],["T_WHITESPACE"," ",312],["T_STATIC","static",312],["T_DOUBLE_COLON","::",312],["T_STRING","getContainer",312],"(",")",["T_OBJECT_OPERATOR","->",312],["T_STRING","get",312],"(",["T_CONSTANT_ENCAPSED_STRING","'keyvalue.expirable'",312],")",["T_OBJECT_OPERATOR","->",312],["T_STRING","get",312],"(",["T_VARIABLE","$collection",312],")",";",["T_WHITESPACE","\n  ",312],"}",["T_WHITESPACE","\n\n  ",313],["T_DOC_COMMENT","\/**\n   * Returns the locking layer instance.\n   *\n   * @return \\Drupal\\Core\\Lock\\LockBackendInterface\n   *\n   * @ingroup lock\n   *\/",315],["T_WHITESPACE","\n  ",321],["T_PUBLIC","public",322],["T_WHITESPACE"," ",322],["T_STATIC","static",322],["T_WHITESPACE"," ",322],["T_FUNCTION","function",322],["T_WHITESPACE"," ",322],["T_STRING","lock",322],"(",")",["T_WHITESPACE"," ",322],"{",["T_WHITESPACE","\n    ",322],["T_RETURN","return",323],["T_WHITESPACE"," ",323],["T_STATIC","static",323],["T_DOUBLE_COLON","::",323],["T_STRING","getContainer",323],"(",")",["T_OBJECT_OPERATOR","->",323],["T_STRING","get",323],"(",["T_CONSTANT_ENCAPSED_STRING","'lock'",323],")",";",["T_WHITESPACE","\n  ",323],"}",["T_WHITESPACE","\n\n  ",324],["T_DOC_COMMENT","\/**\n   * Retrieves a configuration object.\n   *\n   * This is the main entry point to the configuration API. Calling\n   * @code \\Drupal::config('book.admin') @endcode will return a configuration\n   * object in which the book module can store its administrative settings.\n   *\n   * @param string $name\n   *   The name of the configuration object to retrieve. The name corresponds to\n   *   a configuration file. For @code \\Drupal::config('book.admin') @endcode, the config\n   *   object returned will contain the contents of book.admin configuration file.\n   *\n   * @return \\Drupal\\Core\\Config\\ImmutableConfig\n   *   An immutable configuration object.\n   *\/",326],["T_WHITESPACE","\n  ",340],["T_PUBLIC","public",341],["T_WHITESPACE"," ",341],["T_STATIC","static",341],["T_WHITESPACE"," ",341],["T_FUNCTION","function",341],["T_WHITESPACE"," ",341],["T_STRING","config",341],"(",["T_VARIABLE","$name",341],")",["T_WHITESPACE"," ",341],"{",["T_WHITESPACE","\n    ",341],["T_RETURN","return",342],["T_WHITESPACE"," ",342],["T_STATIC","static",342],["T_DOUBLE_COLON","::",342],["T_STRING","getContainer",342],"(",")",["T_OBJECT_OPERATOR","->",342],["T_STRING","get",342],"(",["T_CONSTANT_ENCAPSED_STRING","'config.factory'",342],")",["T_OBJECT_OPERATOR","->",342],["T_STRING","get",342],"(",["T_VARIABLE","$name",342],")",";",["T_WHITESPACE","\n  ",342],"}",["T_WHITESPACE","\n\n  ",343],["T_DOC_COMMENT","\/**\n   * Retrieves the configuration factory.\n   *\n   * This is mostly used to change the override settings on the configuration\n   * factory. For example, changing the language, or turning all overrides on\n   * or off.\n   *\n   * @return \\Drupal\\Core\\Config\\ConfigFactoryInterface\n   *   The configuration factory service.\n   *\/",345],["T_WHITESPACE","\n  ",354],["T_PUBLIC","public",355],["T_WHITESPACE"," ",355],["T_STATIC","static",355],["T_WHITESPACE"," ",355],["T_FUNCTION","function",355],["T_WHITESPACE"," ",355],["T_STRING","configFactory",355],"(",")",["T_WHITESPACE"," ",355],"{",["T_WHITESPACE","\n    ",355],["T_RETURN","return",356],["T_WHITESPACE"," ",356],["T_STATIC","static",356],["T_DOUBLE_COLON","::",356],["T_STRING","getContainer",356],"(",")",["T_OBJECT_OPERATOR","->",356],["T_STRING","get",356],"(",["T_CONSTANT_ENCAPSED_STRING","'config.factory'",356],")",";",["T_WHITESPACE","\n  ",356],"}",["T_WHITESPACE","\n\n  ",357],["T_DOC_COMMENT","\/**\n   * Returns a queue for the given queue name.\n   *\n   * The following values can be set in your settings.php file's $settings\n   * array to define which services are used for queues:\n   * - queue_reliable_service_$name: The container service to use for the\n   *   reliable queue $name.\n   * - queue_service_$name: The container service to use for the\n   *   queue $name.\n   * - queue_default: The container service to use by default for queues\n   *   without overrides. This defaults to 'queue.database'.\n   *\n   * @param string $name\n   *   The name of the queue to work with.\n   * @param bool $reliable\n   *   (optional) TRUE if the ordering of items and guaranteeing every item\n   *   executes at least once is important, FALSE if scalability is the main\n   *   concern. Defaults to FALSE.\n   *\n   * @return \\Drupal\\Core\\Queue\\QueueInterface\n   *   The queue object for a given name.\n   *\/",359],["T_WHITESPACE","\n  ",380],["T_PUBLIC","public",381],["T_WHITESPACE"," ",381],["T_STATIC","static",381],["T_WHITESPACE"," ",381],["T_FUNCTION","function",381],["T_WHITESPACE"," ",381],["T_STRING","queue",381],"(",["T_VARIABLE","$name",381],",",["T_WHITESPACE"," ",381],["T_VARIABLE","$reliable",381],["T_WHITESPACE"," ",381],"=",["T_WHITESPACE"," ",381],["T_STRING","FALSE",381],")",["T_WHITESPACE"," ",381],"{",["T_WHITESPACE","\n    ",381],["T_RETURN","return",382],["T_WHITESPACE"," ",382],["T_STATIC","static",382],["T_DOUBLE_COLON","::",382],["T_STRING","getContainer",382],"(",")",["T_OBJECT_OPERATOR","->",382],["T_STRING","get",382],"(",["T_CONSTANT_ENCAPSED_STRING","'queue'",382],")",["T_OBJECT_OPERATOR","->",382],["T_STRING","get",382],"(",["T_VARIABLE","$name",382],",",["T_WHITESPACE"," ",382],["T_VARIABLE","$reliable",382],")",";",["T_WHITESPACE","\n  ",382],"}",["T_WHITESPACE","\n\n  ",383],["T_DOC_COMMENT","\/**\n   * Returns a key\/value storage collection.\n   *\n   * @param string $collection\n   *   Name of the key\/value collection to return.\n   *\n   * @return \\Drupal\\Core\\KeyValueStore\\KeyValueStoreInterface\n   *\/",385],["T_WHITESPACE","\n  ",392],["T_PUBLIC","public",393],["T_WHITESPACE"," ",393],["T_STATIC","static",393],["T_WHITESPACE"," ",393],["T_FUNCTION","function",393],["T_WHITESPACE"," ",393],["T_STRING","keyValue",393],"(",["T_VARIABLE","$collection",393],")",["T_WHITESPACE"," ",393],"{",["T_WHITESPACE","\n    ",393],["T_RETURN","return",394],["T_WHITESPACE"," ",394],["T_STATIC","static",394],["T_DOUBLE_COLON","::",394],["T_STRING","getContainer",394],"(",")",["T_OBJECT_OPERATOR","->",394],["T_STRING","get",394],"(",["T_CONSTANT_ENCAPSED_STRING","'keyvalue'",394],")",["T_OBJECT_OPERATOR","->",394],["T_STRING","get",394],"(",["T_VARIABLE","$collection",394],")",";",["T_WHITESPACE","\n  ",394],"}",["T_WHITESPACE","\n\n  ",395],["T_DOC_COMMENT","\/**\n   * Returns the state storage service.\n   *\n   * Use this to store machine-generated data, local to a specific environment\n   * that does not need deploying and does not need human editing; for example,\n   * the last time cron was run. Data which needs to be edited by humans and\n   * needs to be the same across development, production, etc. environments\n   * (for example, the system maintenance message) should use \\Drupal::config() instead.\n   *\n   * @return \\Drupal\\Core\\State\\StateInterface\n   *\/",397],["T_WHITESPACE","\n  ",407],["T_PUBLIC","public",408],["T_WHITESPACE"," ",408],["T_STATIC","static",408],["T_WHITESPACE"," ",408],["T_FUNCTION","function",408],["T_WHITESPACE"," ",408],["T_STRING","state",408],"(",")",["T_WHITESPACE"," ",408],"{",["T_WHITESPACE","\n    ",408],["T_RETURN","return",409],["T_WHITESPACE"," ",409],["T_STATIC","static",409],["T_DOUBLE_COLON","::",409],["T_STRING","getContainer",409],"(",")",["T_OBJECT_OPERATOR","->",409],["T_STRING","get",409],"(",["T_CONSTANT_ENCAPSED_STRING","'state'",409],")",";",["T_WHITESPACE","\n  ",409],"}",["T_WHITESPACE","\n\n  ",410],["T_DOC_COMMENT","\/**\n   * Returns the default http client.\n   *\n   * @return \\GuzzleHttp\\Client\n   *   A guzzle http client instance.\n   *\/",412],["T_WHITESPACE","\n  ",417],["T_PUBLIC","public",418],["T_WHITESPACE"," ",418],["T_STATIC","static",418],["T_WHITESPACE"," ",418],["T_FUNCTION","function",418],["T_WHITESPACE"," ",418],["T_STRING","httpClient",418],"(",")",["T_WHITESPACE"," ",418],"{",["T_WHITESPACE","\n    ",418],["T_RETURN","return",419],["T_WHITESPACE"," ",419],["T_STATIC","static",419],["T_DOUBLE_COLON","::",419],["T_STRING","getContainer",419],"(",")",["T_OBJECT_OPERATOR","->",419],["T_STRING","get",419],"(",["T_CONSTANT_ENCAPSED_STRING","'http_client'",419],")",";",["T_WHITESPACE","\n  ",419],"}",["T_WHITESPACE","\n\n  ",420],["T_DOC_COMMENT","\/**\n   * Returns the entity query object for this entity type.\n   *\n   * @param string $entity_type\n   *   The entity type (for example, node) for which the query object should be\n   *   returned.\n   * @param string $conjunction\n   *   (optional) Either 'AND' if all conditions in the query need to apply, or\n   *   'OR' if any of them is sufficient. Defaults to 'AND'.\n   *\n   * @return \\Drupal\\Core\\Entity\\Query\\QueryInterface\n   *   The query object that can query the given entity type.\n   *\/",422],["T_WHITESPACE","\n  ",434],["T_PUBLIC","public",435],["T_WHITESPACE"," ",435],["T_STATIC","static",435],["T_WHITESPACE"," ",435],["T_FUNCTION","function",435],["T_WHITESPACE"," ",435],["T_STRING","entityQuery",435],"(",["T_VARIABLE","$entity_type",435],",",["T_WHITESPACE"," ",435],["T_VARIABLE","$conjunction",435],["T_WHITESPACE"," ",435],"=",["T_WHITESPACE"," ",435],["T_CONSTANT_ENCAPSED_STRING","'AND'",435],")",["T_WHITESPACE"," ",435],"{",["T_WHITESPACE","\n    ",435],["T_RETURN","return",436],["T_WHITESPACE"," ",436],["T_STATIC","static",436],["T_DOUBLE_COLON","::",436],["T_STRING","getContainer",436],"(",")",["T_OBJECT_OPERATOR","->",436],["T_STRING","get",436],"(",["T_CONSTANT_ENCAPSED_STRING","'entity.query'",436],")",["T_OBJECT_OPERATOR","->",436],["T_STRING","get",436],"(",["T_VARIABLE","$entity_type",436],",",["T_WHITESPACE"," ",436],["T_VARIABLE","$conjunction",436],")",";",["T_WHITESPACE","\n  ",436],"}",["T_WHITESPACE","\n\n  ",437],["T_DOC_COMMENT","\/**\n   * Returns the entity query aggregate object for this entity type.\n   *\n   * @param string $entity_type\n   *   The entity type (for example, node) for which the query object should be\n   *   returned.\n   * @param string $conjunction\n   *   (optional) Either 'AND' if all conditions in the query need to apply, or\n   *   'OR' if any of them is sufficient. Defaults to 'AND'.\n   *\n   * @return \\Drupal\\Core\\Entity\\Query\\QueryAggregateInterface\n   *   The query object that can query the given entity type.\n   *\/",439],["T_WHITESPACE","\n  ",451],["T_PUBLIC","public",452],["T_WHITESPACE"," ",452],["T_STATIC","static",452],["T_WHITESPACE"," ",452],["T_FUNCTION","function",452],["T_WHITESPACE"," ",452],["T_STRING","entityQueryAggregate",452],"(",["T_VARIABLE","$entity_type",452],",",["T_WHITESPACE"," ",452],["T_VARIABLE","$conjunction",452],["T_WHITESPACE"," ",452],"=",["T_WHITESPACE"," ",452],["T_CONSTANT_ENCAPSED_STRING","'AND'",452],")",["T_WHITESPACE"," ",452],"{",["T_WHITESPACE","\n    ",452],["T_RETURN","return",453],["T_WHITESPACE"," ",453],["T_STATIC","static",453],["T_DOUBLE_COLON","::",453],["T_STRING","getContainer",453],"(",")",["T_OBJECT_OPERATOR","->",453],["T_STRING","get",453],"(",["T_CONSTANT_ENCAPSED_STRING","'entity.query'",453],")",["T_OBJECT_OPERATOR","->",453],["T_STRING","getAggregate",453],"(",["T_VARIABLE","$entity_type",453],",",["T_WHITESPACE"," ",453],["T_VARIABLE","$conjunction",453],")",";",["T_WHITESPACE","\n  ",453],"}",["T_WHITESPACE","\n\n  ",454],["T_DOC_COMMENT","\/**\n   * Returns the flood instance.\n   *\n   * @return \\Drupal\\Core\\Flood\\FloodInterface\n   *\/",456],["T_WHITESPACE","\n  ",460],["T_PUBLIC","public",461],["T_WHITESPACE"," ",461],["T_STATIC","static",461],["T_WHITESPACE"," ",461],["T_FUNCTION","function",461],["T_WHITESPACE"," ",461],["T_STRING","flood",461],"(",")",["T_WHITESPACE"," ",461],"{",["T_WHITESPACE","\n    ",461],["T_RETURN","return",462],["T_WHITESPACE"," ",462],["T_STATIC","static",462],["T_DOUBLE_COLON","::",462],["T_STRING","getContainer",462],"(",")",["T_OBJECT_OPERATOR","->",462],["T_STRING","get",462],"(",["T_CONSTANT_ENCAPSED_STRING","'flood'",462],")",";",["T_WHITESPACE","\n  ",462],"}",["T_WHITESPACE","\n\n  ",463],["T_DOC_COMMENT","\/**\n   * Returns the module handler.\n   *\n   * @return \\Drupal\\Core\\Extension\\ModuleHandlerInterface\n   *\/",465],["T_WHITESPACE","\n  ",469],["T_PUBLIC","public",470],["T_WHITESPACE"," ",470],["T_STATIC","static",470],["T_WHITESPACE"," ",470],["T_FUNCTION","function",470],["T_WHITESPACE"," ",470],["T_STRING","moduleHandler",470],"(",")",["T_WHITESPACE"," ",470],"{",["T_WHITESPACE","\n    ",470],["T_RETURN","return",471],["T_WHITESPACE"," ",471],["T_STATIC","static",471],["T_DOUBLE_COLON","::",471],["T_STRING","getContainer",471],"(",")",["T_OBJECT_OPERATOR","->",471],["T_STRING","get",471],"(",["T_CONSTANT_ENCAPSED_STRING","'module_handler'",471],")",";",["T_WHITESPACE","\n  ",471],"}",["T_WHITESPACE","\n\n  ",472],["T_DOC_COMMENT","\/**\n   * Returns the typed data manager service.\n   *\n   * Use the typed data manager service for creating typed data objects.\n   *\n   * @return \\Drupal\\Core\\TypedData\\TypedDataManagerInterface\n   *   The typed data manager.\n   *\n   * @see \\Drupal\\Core\\TypedData\\TypedDataManager::create()\n   *\/",474],["T_WHITESPACE","\n  ",483],["T_PUBLIC","public",484],["T_WHITESPACE"," ",484],["T_STATIC","static",484],["T_WHITESPACE"," ",484],["T_FUNCTION","function",484],["T_WHITESPACE"," ",484],["T_STRING","typedDataManager",484],"(",")",["T_WHITESPACE"," ",484],"{",["T_WHITESPACE","\n    ",484],["T_RETURN","return",485],["T_WHITESPACE"," ",485],["T_STATIC","static",485],["T_DOUBLE_COLON","::",485],["T_STRING","getContainer",485],"(",")",["T_OBJECT_OPERATOR","->",485],["T_STRING","get",485],"(",["T_CONSTANT_ENCAPSED_STRING","'typed_data_manager'",485],")",";",["T_WHITESPACE","\n  ",485],"}",["T_WHITESPACE","\n\n  ",486],["T_DOC_COMMENT","\/**\n   * Returns the token service.\n   *\n   * @return \\Drupal\\Core\\Utility\\Token\n   *   The token service.\n   *\/",488],["T_WHITESPACE","\n  ",493],["T_PUBLIC","public",494],["T_WHITESPACE"," ",494],["T_STATIC","static",494],["T_WHITESPACE"," ",494],["T_FUNCTION","function",494],["T_WHITESPACE"," ",494],["T_STRING","token",494],"(",")",["T_WHITESPACE"," ",494],"{",["T_WHITESPACE","\n    ",494],["T_RETURN","return",495],["T_WHITESPACE"," ",495],["T_STATIC","static",495],["T_DOUBLE_COLON","::",495],["T_STRING","getContainer",495],"(",")",["T_OBJECT_OPERATOR","->",495],["T_STRING","get",495],"(",["T_CONSTANT_ENCAPSED_STRING","'token'",495],")",";",["T_WHITESPACE","\n  ",495],"}",["T_WHITESPACE","\n\n  ",496],["T_DOC_COMMENT","\/**\n   * Returns the url generator service.\n   *\n   * @return \\Drupal\\Core\\Routing\\UrlGeneratorInterface\n   *   The url generator service.\n   *\/",498],["T_WHITESPACE","\n  ",503],["T_PUBLIC","public",504],["T_WHITESPACE"," ",504],["T_STATIC","static",504],["T_WHITESPACE"," ",504],["T_FUNCTION","function",504],["T_WHITESPACE"," ",504],["T_STRING","urlGenerator",504],"(",")",["T_WHITESPACE"," ",504],"{",["T_WHITESPACE","\n    ",504],["T_RETURN","return",505],["T_WHITESPACE"," ",505],["T_STATIC","static",505],["T_DOUBLE_COLON","::",505],["T_STRING","getContainer",505],"(",")",["T_OBJECT_OPERATOR","->",505],["T_STRING","get",505],"(",["T_CONSTANT_ENCAPSED_STRING","'url_generator'",505],")",";",["T_WHITESPACE","\n  ",505],"}",["T_WHITESPACE","\n\n  ",506],["T_DOC_COMMENT","\/**\n   * Generates a URL string for a specific route based on the given parameters.\n   *\n   * This method is a convenience wrapper for generating URL strings for URLs\n   * that have Drupal routes (that is, most pages generated by Drupal) using\n   * the \\Drupal\\Core\\Url object. See \\Drupal\\Core\\Url::fromRoute() for\n   * detailed documentation. For non-routed local URIs relative to\n   * the base path (like robots.txt) use Url::fromUri()->toString() with the\n   * base: scheme.\n   *\n   * @param string $route_name\n   *   The name of the route.\n   * @param array $route_parameters\n   *   (optional) An associative array of parameter names and values.\n   * @param array $options\n   *   (optional) An associative array of additional options.\n   * @param bool $collect_bubbleable_metadata\n   *   (optional) Defaults to FALSE. When TRUE, both the generated URL and its\n   *   associated bubbleable metadata are returned.\n   *\n   * @return string|\\Drupal\\Core\\GeneratedUrl\n   *   A string containing a URL to the given path.\n   *   When $collect_bubbleable_metadata is TRUE, a GeneratedUrl object is\n   *   returned, containing the generated URL plus bubbleable metadata.\n   *\n   * @see \\Drupal\\Core\\Routing\\UrlGeneratorInterface::generateFromRoute()\n   * @see \\Drupal\\Core\\Url\n   * @see \\Drupal\\Core\\Url::fromRoute()\n   * @see \\Drupal\\Core\\Url::fromUri()\n   *\n   * @deprecated as of Drupal 8.0.x, will be removed before Drupal 9.0.0.\n   *   Instead create a \\Drupal\\Core\\Url object directly, for example using\n   *   Url::fromRoute().\n   *\/",508],["T_WHITESPACE","\n  ",541],["T_PUBLIC","public",542],["T_WHITESPACE"," ",542],["T_STATIC","static",542],["T_WHITESPACE"," ",542],["T_FUNCTION","function",542],["T_WHITESPACE"," ",542],["T_STRING","url",542],"(",["T_VARIABLE","$route_name",542],",",["T_WHITESPACE"," ",542],["T_VARIABLE","$route_parameters",542],["T_WHITESPACE"," ",542],"=",["T_WHITESPACE"," ",542],["T_ARRAY","array",542],"(",")",",",["T_WHITESPACE"," ",542],["T_VARIABLE","$options",542],["T_WHITESPACE"," ",542],"=",["T_WHITESPACE"," ",542],["T_ARRAY","array",542],"(",")",",",["T_WHITESPACE"," ",542],["T_VARIABLE","$collect_bubbleable_metadata",542],["T_WHITESPACE"," ",542],"=",["T_WHITESPACE"," ",542],["T_STRING","FALSE",542],")",["T_WHITESPACE"," ",542],"{",["T_WHITESPACE","\n    ",542],["T_RETURN","return",543],["T_WHITESPACE"," ",543],["T_STATIC","static",543],["T_DOUBLE_COLON","::",543],["T_STRING","getContainer",543],"(",")",["T_OBJECT_OPERATOR","->",543],["T_STRING","get",543],"(",["T_CONSTANT_ENCAPSED_STRING","'url_generator'",543],")",["T_OBJECT_OPERATOR","->",543],["T_STRING","generateFromRoute",543],"(",["T_VARIABLE","$route_name",543],",",["T_WHITESPACE"," ",543],["T_VARIABLE","$route_parameters",543],",",["T_WHITESPACE"," ",543],["T_VARIABLE","$options",543],",",["T_WHITESPACE"," ",543],["T_VARIABLE","$collect_bubbleable_metadata",543],")",";",["T_WHITESPACE","\n  ",543],"}",["T_WHITESPACE","\n\n  ",544],["T_DOC_COMMENT","\/**\n   * Returns the link generator service.\n   *\n   * @return \\Drupal\\Core\\Utility\\LinkGeneratorInterface\n   *\/",546],["T_WHITESPACE","\n  ",550],["T_PUBLIC","public",551],["T_WHITESPACE"," ",551],["T_STATIC","static",551],["T_WHITESPACE"," ",551],["T_FUNCTION","function",551],["T_WHITESPACE"," ",551],["T_STRING","linkGenerator",551],"(",")",["T_WHITESPACE"," ",551],"{",["T_WHITESPACE","\n    ",551],["T_RETURN","return",552],["T_WHITESPACE"," ",552],["T_STATIC","static",552],["T_DOUBLE_COLON","::",552],["T_STRING","getContainer",552],"(",")",["T_OBJECT_OPERATOR","->",552],["T_STRING","get",552],"(",["T_CONSTANT_ENCAPSED_STRING","'link_generator'",552],")",";",["T_WHITESPACE","\n  ",552],"}",["T_WHITESPACE","\n\n  ",553],["T_DOC_COMMENT","\/**\n   * Renders a link with a given link text and Url object.\n   *\n   * This method is a convenience wrapper for the link generator service's\n   * generate() method.\n   *\n   * @param string $text\n   *   The link text for the anchor tag.\n   * @param \\Drupal\\Core\\Url $url\n   *   The URL object used for the link.\n   *\n   * @return \\Drupal\\Core\\GeneratedLink\n   *   A GeneratedLink object containing a link to the given route and\n   *   parameters and bubbleable metadata.\n   *\n   * @see \\Drupal\\Core\\Utility\\LinkGeneratorInterface::generate()\n   * @see \\Drupal\\Core\\Url\n   *\n   * @deprecated in Drupal 8.0.0 and will be removed before Drupal 9.0.0.\n   *   Use \\Drupal\\Core\\Link instead.\n   *   Example:\n   *   @code\n   *     $link = Link::fromTextAndUrl($text, $url);\n   *   @endcode\n   *\/",555],["T_WHITESPACE","\n  ",579],["T_PUBLIC","public",580],["T_WHITESPACE"," ",580],["T_STATIC","static",580],["T_WHITESPACE"," ",580],["T_FUNCTION","function",580],["T_WHITESPACE"," ",580],["T_STRING","l",580],"(",["T_VARIABLE","$text",580],",",["T_WHITESPACE"," ",580],["T_STRING","Url",580],["T_WHITESPACE"," ",580],["T_VARIABLE","$url",580],")",["T_WHITESPACE"," ",580],"{",["T_WHITESPACE","\n    ",580],["T_RETURN","return",581],["T_WHITESPACE"," ",581],["T_STATIC","static",581],["T_DOUBLE_COLON","::",581],["T_STRING","getContainer",581],"(",")",["T_OBJECT_OPERATOR","->",581],["T_STRING","get",581],"(",["T_CONSTANT_ENCAPSED_STRING","'link_generator'",581],")",["T_OBJECT_OPERATOR","->",581],["T_STRING","generate",581],"(",["T_VARIABLE","$text",581],",",["T_WHITESPACE"," ",581],["T_VARIABLE","$url",581],")",";",["T_WHITESPACE","\n  ",581],"}",["T_WHITESPACE","\n\n  ",582],["T_DOC_COMMENT","\/**\n   * Returns the string translation service.\n   *\n   * @return \\Drupal\\Core\\StringTranslation\\TranslationManager\n   *   The string translation manager.\n   *\/",584],["T_WHITESPACE","\n  ",589],["T_PUBLIC","public",590],["T_WHITESPACE"," ",590],["T_STATIC","static",590],["T_WHITESPACE"," ",590],["T_FUNCTION","function",590],["T_WHITESPACE"," ",590],["T_STRING","translation",590],"(",")",["T_WHITESPACE"," ",590],"{",["T_WHITESPACE","\n    ",590],["T_RETURN","return",591],["T_WHITESPACE"," ",591],["T_STATIC","static",591],["T_DOUBLE_COLON","::",591],["T_STRING","getContainer",591],"(",")",["T_OBJECT_OPERATOR","->",591],["T_STRING","get",591],"(",["T_CONSTANT_ENCAPSED_STRING","'string_translation'",591],")",";",["T_WHITESPACE","\n  ",591],"}",["T_WHITESPACE","\n\n  ",592],["T_DOC_COMMENT","\/**\n   * Returns the language manager service.\n   *\n   * @return \\Drupal\\Core\\Language\\LanguageManagerInterface\n   *   The language manager.\n   *\/",594],["T_WHITESPACE","\n  ",599],["T_PUBLIC","public",600],["T_WHITESPACE"," ",600],["T_STATIC","static",600],["T_WHITESPACE"," ",600],["T_FUNCTION","function",600],["T_WHITESPACE"," ",600],["T_STRING","languageManager",600],"(",")",["T_WHITESPACE"," ",600],"{",["T_WHITESPACE","\n    ",600],["T_RETURN","return",601],["T_WHITESPACE"," ",601],["T_STATIC","static",601],["T_DOUBLE_COLON","::",601],["T_STRING","getContainer",601],"(",")",["T_OBJECT_OPERATOR","->",601],["T_STRING","get",601],"(",["T_CONSTANT_ENCAPSED_STRING","'language_manager'",601],")",";",["T_WHITESPACE","\n  ",601],"}",["T_WHITESPACE","\n\n  ",602],["T_DOC_COMMENT","\/**\n   * Returns the CSRF token manager service.\n   *\n   * The generated token is based on the session ID of the current user. Normally,\n   * anonymous users do not have a session, so the generated token will be\n   * different on every page request. To generate a token for users without a\n   * session, manually start a session prior to calling this function.\n   *\n   * @return \\Drupal\\Core\\Access\\CsrfTokenGenerator\n   *   The CSRF token manager.\n   *\n   * @see \\Drupal\\Core\\Session\\SessionManager::start()\n   *\/",604],["T_WHITESPACE","\n  ",616],["T_PUBLIC","public",617],["T_WHITESPACE"," ",617],["T_STATIC","static",617],["T_WHITESPACE"," ",617],["T_FUNCTION","function",617],["T_WHITESPACE"," ",617],["T_STRING","csrfToken",617],"(",")",["T_WHITESPACE"," ",617],"{",["T_WHITESPACE","\n    ",617],["T_RETURN","return",618],["T_WHITESPACE"," ",618],["T_STATIC","static",618],["T_DOUBLE_COLON","::",618],["T_STRING","getContainer",618],"(",")",["T_OBJECT_OPERATOR","->",618],["T_STRING","get",618],"(",["T_CONSTANT_ENCAPSED_STRING","'csrf_token'",618],")",";",["T_WHITESPACE","\n  ",618],"}",["T_WHITESPACE","\n\n  ",619],["T_DOC_COMMENT","\/**\n   * Returns the transliteration service.\n   *\n   * @return \\Drupal\\Core\\Transliteration\\PhpTransliteration\n   *   The transliteration manager.\n   *\/",621],["T_WHITESPACE","\n  ",626],["T_PUBLIC","public",627],["T_WHITESPACE"," ",627],["T_STATIC","static",627],["T_WHITESPACE"," ",627],["T_FUNCTION","function",627],["T_WHITESPACE"," ",627],["T_STRING","transliteration",627],"(",")",["T_WHITESPACE"," ",627],"{",["T_WHITESPACE","\n    ",627],["T_RETURN","return",628],["T_WHITESPACE"," ",628],["T_STATIC","static",628],["T_DOUBLE_COLON","::",628],["T_STRING","getContainer",628],"(",")",["T_OBJECT_OPERATOR","->",628],["T_STRING","get",628],"(",["T_CONSTANT_ENCAPSED_STRING","'transliteration'",628],")",";",["T_WHITESPACE","\n  ",628],"}",["T_WHITESPACE","\n\n  ",629],["T_DOC_COMMENT","\/**\n   * Returns the form builder service.\n   *\n   * @return \\Drupal\\Core\\Form\\FormBuilderInterface\n   *   The form builder.\n   *\/",631],["T_WHITESPACE","\n  ",636],["T_PUBLIC","public",637],["T_WHITESPACE"," ",637],["T_STATIC","static",637],["T_WHITESPACE"," ",637],["T_FUNCTION","function",637],["T_WHITESPACE"," ",637],["T_STRING","formBuilder",637],"(",")",["T_WHITESPACE"," ",637],"{",["T_WHITESPACE","\n    ",637],["T_RETURN","return",638],["T_WHITESPACE"," ",638],["T_STATIC","static",638],["T_DOUBLE_COLON","::",638],["T_STRING","getContainer",638],"(",")",["T_OBJECT_OPERATOR","->",638],["T_STRING","get",638],"(",["T_CONSTANT_ENCAPSED_STRING","'form_builder'",638],")",";",["T_WHITESPACE","\n  ",638],"}",["T_WHITESPACE","\n\n  ",639],["T_DOC_COMMENT","\/**\n   * Gets the theme service.\n   *\n   * @return \\Drupal\\Core\\Theme\\ThemeManagerInterface\n   *\/",641],["T_WHITESPACE","\n  ",645],["T_PUBLIC","public",646],["T_WHITESPACE"," ",646],["T_STATIC","static",646],["T_WHITESPACE"," ",646],["T_FUNCTION","function",646],["T_WHITESPACE"," ",646],["T_STRING","theme",646],"(",")",["T_WHITESPACE"," ",646],"{",["T_WHITESPACE","\n    ",646],["T_RETURN","return",647],["T_WHITESPACE"," ",647],["T_STATIC","static",647],["T_DOUBLE_COLON","::",647],["T_STRING","getContainer",647],"(",")",["T_OBJECT_OPERATOR","->",647],["T_STRING","get",647],"(",["T_CONSTANT_ENCAPSED_STRING","'theme.manager'",647],")",";",["T_WHITESPACE","\n  ",647],"}",["T_WHITESPACE","\n\n  ",648],["T_DOC_COMMENT","\/**\n   * Gets the syncing state.\n   *\n   * @return bool\n   *   Returns TRUE is syncing flag set.\n   *\/",650],["T_WHITESPACE","\n  ",655],["T_PUBLIC","public",656],["T_WHITESPACE"," ",656],["T_STATIC","static",656],["T_WHITESPACE"," ",656],["T_FUNCTION","function",656],["T_WHITESPACE"," ",656],["T_STRING","isConfigSyncing",656],"(",")",["T_WHITESPACE"," ",656],"{",["T_WHITESPACE","\n    ",656],["T_RETURN","return",657],["T_WHITESPACE"," ",657],["T_STATIC","static",657],["T_DOUBLE_COLON","::",657],["T_STRING","getContainer",657],"(",")",["T_OBJECT_OPERATOR","->",657],["T_STRING","get",657],"(",["T_CONSTANT_ENCAPSED_STRING","'config.installer'",657],")",["T_OBJECT_OPERATOR","->",657],["T_STRING","isSyncing",657],"(",")",";",["T_WHITESPACE","\n  ",657],"}",["T_WHITESPACE","\n\n  ",658],["T_DOC_COMMENT","\/**\n   * Returns a channel logger object.\n   *\n   * @param string $channel\n   *   The name of the channel. Can be any string, but the general practice is\n   *   to use the name of the subsystem calling this.\n   *\n   * @return \\Psr\\Log\\LoggerInterface\n   *   The logger for this channel.\n   *\/",660],["T_WHITESPACE","\n  ",669],["T_PUBLIC","public",670],["T_WHITESPACE"," ",670],["T_STATIC","static",670],["T_WHITESPACE"," ",670],["T_FUNCTION","function",670],["T_WHITESPACE"," ",670],["T_STRING","logger",670],"(",["T_VARIABLE","$channel",670],")",["T_WHITESPACE"," ",670],"{",["T_WHITESPACE","\n    ",670],["T_RETURN","return",671],["T_WHITESPACE"," ",671],["T_STATIC","static",671],["T_DOUBLE_COLON","::",671],["T_STRING","getContainer",671],"(",")",["T_OBJECT_OPERATOR","->",671],["T_STRING","get",671],"(",["T_CONSTANT_ENCAPSED_STRING","'logger.factory'",671],")",["T_OBJECT_OPERATOR","->",671],["T_STRING","get",671],"(",["T_VARIABLE","$channel",671],")",";",["T_WHITESPACE","\n  ",671],"}",["T_WHITESPACE","\n\n  ",672],["T_DOC_COMMENT","\/**\n   * Returns the menu tree.\n   *\n   * @return \\Drupal\\Core\\Menu\\MenuLinkTreeInterface\n   *   The menu tree.\n   *\/",674],["T_WHITESPACE","\n  ",679],["T_PUBLIC","public",680],["T_WHITESPACE"," ",680],["T_STATIC","static",680],["T_WHITESPACE"," ",680],["T_FUNCTION","function",680],["T_WHITESPACE"," ",680],["T_STRING","menuTree",680],"(",")",["T_WHITESPACE"," ",680],"{",["T_WHITESPACE","\n    ",680],["T_RETURN","return",681],["T_WHITESPACE"," ",681],["T_STATIC","static",681],["T_DOUBLE_COLON","::",681],["T_STRING","getContainer",681],"(",")",["T_OBJECT_OPERATOR","->",681],["T_STRING","get",681],"(",["T_CONSTANT_ENCAPSED_STRING","'menu.link_tree'",681],")",";",["T_WHITESPACE","\n  ",681],"}",["T_WHITESPACE","\n\n  ",682],["T_DOC_COMMENT","\/**\n   * Returns the path validator.\n   *\n   * @return \\Drupal\\Core\\Path\\PathValidatorInterface\n   *\/",684],["T_WHITESPACE","\n  ",688],["T_PUBLIC","public",689],["T_WHITESPACE"," ",689],["T_STATIC","static",689],["T_WHITESPACE"," ",689],["T_FUNCTION","function",689],["T_WHITESPACE"," ",689],["T_STRING","pathValidator",689],"(",")",["T_WHITESPACE"," ",689],"{",["T_WHITESPACE","\n    ",689],["T_RETURN","return",690],["T_WHITESPACE"," ",690],["T_STATIC","static",690],["T_DOUBLE_COLON","::",690],["T_STRING","getContainer",690],"(",")",["T_OBJECT_OPERATOR","->",690],["T_STRING","get",690],"(",["T_CONSTANT_ENCAPSED_STRING","'path.validator'",690],")",";",["T_WHITESPACE","\n  ",690],"}",["T_WHITESPACE","\n\n  ",691],["T_DOC_COMMENT","\/**\n   * Returns the access manager service.\n   *\n   * @return \\Drupal\\Core\\Access\\AccessManagerInterface\n   *   The access manager service.\n   *\/",693],["T_WHITESPACE","\n  ",698],["T_PUBLIC","public",699],["T_WHITESPACE"," ",699],["T_STATIC","static",699],["T_WHITESPACE"," ",699],["T_FUNCTION","function",699],["T_WHITESPACE"," ",699],["T_STRING","accessManager",699],"(",")",["T_WHITESPACE"," ",699],"{",["T_WHITESPACE","\n    ",699],["T_RETURN","return",700],["T_WHITESPACE"," ",700],["T_STATIC","static",700],["T_DOUBLE_COLON","::",700],["T_STRING","getContainer",700],"(",")",["T_OBJECT_OPERATOR","->",700],["T_STRING","get",700],"(",["T_CONSTANT_ENCAPSED_STRING","'access_manager'",700],")",";",["T_WHITESPACE","\n  ",700],"}",["T_WHITESPACE","\n\n  ",701],["T_DOC_COMMENT","\/**\n   * Returns the redirect destination helper.\n   *\n   * @return \\Drupal\\Core\\Routing\\RedirectDestinationInterface\n   *   The redirect destination helper.\n   *\/",703],["T_WHITESPACE","\n  ",708],["T_PUBLIC","public",709],["T_WHITESPACE"," ",709],["T_STATIC","static",709],["T_WHITESPACE"," ",709],["T_FUNCTION","function",709],["T_WHITESPACE"," ",709],["T_STRING","destination",709],"(",")",["T_WHITESPACE"," ",709],"{",["T_WHITESPACE","\n    ",709],["T_RETURN","return",710],["T_WHITESPACE"," ",710],["T_STATIC","static",710],["T_DOUBLE_COLON","::",710],["T_STRING","getContainer",710],"(",")",["T_OBJECT_OPERATOR","->",710],["T_STRING","get",710],"(",["T_CONSTANT_ENCAPSED_STRING","'redirect.destination'",710],")",";",["T_WHITESPACE","\n  ",710],"}",["T_WHITESPACE","\n\n  ",711],["T_DOC_COMMENT","\/**\n   * Returns the entity definition update manager.\n   *\n   * @return \\Drupal\\Core\\Entity\\EntityDefinitionUpdateManagerInterface\n   *   The entity definition update manager.\n   *\/",713],["T_WHITESPACE","\n  ",718],["T_PUBLIC","public",719],["T_WHITESPACE"," ",719],["T_STATIC","static",719],["T_WHITESPACE"," ",719],["T_FUNCTION","function",719],["T_WHITESPACE"," ",719],["T_STRING","entityDefinitionUpdateManager",719],"(",")",["T_WHITESPACE"," ",719],"{",["T_WHITESPACE","\n    ",719],["T_RETURN","return",720],["T_WHITESPACE"," ",720],["T_STATIC","static",720],["T_DOUBLE_COLON","::",720],["T_STRING","getContainer",720],"(",")",["T_OBJECT_OPERATOR","->",720],["T_STRING","get",720],"(",["T_CONSTANT_ENCAPSED_STRING","'entity.definition_update_manager'",720],")",";",["T_WHITESPACE","\n  ",720],"}",["T_WHITESPACE","\n\n",721],"}",["T_WHITESPACE","\n",723]]