[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Tests",3],";",["T_WHITESPACE","\n\n",3],["T_USE","use",5],["T_WHITESPACE"," ",5],["T_STRING","Drupal",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Component",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Utility",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Random",5],";",["T_WHITESPACE","\n\n",5],["T_DOC_COMMENT","\/**\n * Provides random generator utility methods.\n *\/",7],["T_WHITESPACE","\n",9],["T_TRAIT","trait",10],["T_WHITESPACE"," ",10],["T_STRING","RandomGeneratorTrait",10],["T_WHITESPACE"," ",10],"{",["T_WHITESPACE","\n\n  ",10],["T_DOC_COMMENT","\/**\n   * The random generator.\n   *\n   * @var \\Drupal\\Component\\Utility\\Random\n   *\/",12],["T_WHITESPACE","\n  ",16],["T_PROTECTED","protected",17],["T_WHITESPACE"," ",17],["T_VARIABLE","$randomGenerator",17],";",["T_WHITESPACE","\n\n  ",17],["T_DOC_COMMENT","\/**\n   * Generates a pseudo-random string of ASCII characters of codes 32 to 126.\n   *\n   * Do not use this method when special characters are not possible (e.g., in\n   * machine or file names that have already been validated); instead, use\n   * \\Drupal\\simpletest\\TestBase::randomMachineName(). If $length is greater\n   * than 3 the random string will include at least one ampersand ('&') and\n   * at least one greater than ('>') character to ensure coverage for special\n   * characters and avoid the introduction of random test failures.\n   *\n   * @param int $length\n   *   Length of random string to generate.\n   *\n   * @return string\n   *   Pseudo-randomly generated unique string including special characters.\n   *\n   * @see \\Drupal\\Component\\Utility\\Random::string()\n   *\/",19],["T_WHITESPACE","\n  ",36],["T_PUBLIC","public",37],["T_WHITESPACE"," ",37],["T_FUNCTION","function",37],["T_WHITESPACE"," ",37],["T_STRING","randomString",37],"(",["T_VARIABLE","$length",37],["T_WHITESPACE"," ",37],"=",["T_WHITESPACE"," ",37],["T_LNUMBER","8",37],")",["T_WHITESPACE"," ",37],"{",["T_WHITESPACE","\n    ",37],["T_IF","if",38],["T_WHITESPACE"," ",38],"(",["T_VARIABLE","$length",38],["T_WHITESPACE"," ",38],"<",["T_WHITESPACE"," ",38],["T_LNUMBER","4",38],")",["T_WHITESPACE"," ",38],"{",["T_WHITESPACE","\n      ",38],["T_RETURN","return",39],["T_WHITESPACE"," ",39],["T_VARIABLE","$this",39],["T_OBJECT_OPERATOR","->",39],["T_STRING","getRandomGenerator",39],"(",")",["T_OBJECT_OPERATOR","->",39],["T_STRING","string",39],"(",["T_VARIABLE","$length",39],",",["T_WHITESPACE"," ",39],["T_STRING","TRUE",39],",",["T_WHITESPACE"," ",39],["T_ARRAY","array",39],"(",["T_VARIABLE","$this",39],",",["T_WHITESPACE"," ",39],["T_CONSTANT_ENCAPSED_STRING","'randomStringValidate'",39],")",")",";",["T_WHITESPACE","\n    ",39],"}",["T_WHITESPACE","\n\n    ",40],["T_COMMENT","\/\/ To prevent the introduction of random test failures, ensure that the\n",42],["T_WHITESPACE","    ",43],["T_COMMENT","\/\/ returned string contains a character that needs to be escaped in HTML by\n",43],["T_WHITESPACE","    ",44],["T_COMMENT","\/\/ injecting an ampersand into it.\n",44],["T_WHITESPACE","    ",45],["T_VARIABLE","$replacement_pos",45],["T_WHITESPACE"," ",45],"=",["T_WHITESPACE"," ",45],["T_STRING","floor",45],"(",["T_VARIABLE","$length",45],["T_WHITESPACE"," ",45],"\/",["T_WHITESPACE"," ",45],["T_LNUMBER","2",45],")",";",["T_WHITESPACE","\n    ",45],["T_COMMENT","\/\/ Remove 2 from the length to account for the ampersand and greater than\n",46],["T_WHITESPACE","    ",47],["T_COMMENT","\/\/ characters.\n",47],["T_WHITESPACE","    ",48],["T_VARIABLE","$string",48],["T_WHITESPACE"," ",48],"=",["T_WHITESPACE"," ",48],["T_VARIABLE","$this",48],["T_OBJECT_OPERATOR","->",48],["T_STRING","getRandomGenerator",48],"(",")",["T_OBJECT_OPERATOR","->",48],["T_STRING","string",48],"(",["T_VARIABLE","$length",48],["T_WHITESPACE"," ",48],"-",["T_WHITESPACE"," ",48],["T_LNUMBER","2",48],",",["T_WHITESPACE"," ",48],["T_STRING","TRUE",48],",",["T_WHITESPACE"," ",48],["T_ARRAY","array",48],"(",["T_VARIABLE","$this",48],",",["T_WHITESPACE"," ",48],["T_CONSTANT_ENCAPSED_STRING","'randomStringValidate'",48],")",")",";",["T_WHITESPACE","\n    ",48],["T_RETURN","return",49],["T_WHITESPACE"," ",49],["T_STRING","substr_replace",49],"(",["T_VARIABLE","$string",49],",",["T_WHITESPACE"," ",49],["T_CONSTANT_ENCAPSED_STRING","'>&'",49],",",["T_WHITESPACE"," ",49],["T_VARIABLE","$replacement_pos",49],",",["T_WHITESPACE"," ",49],["T_LNUMBER","0",49],")",";",["T_WHITESPACE","\n  ",49],"}",["T_WHITESPACE","\n\n  ",50],["T_DOC_COMMENT","\/**\n   * Callback for random string validation.\n   *\n   * @see \\Drupal\\Component\\Utility\\Random::string()\n   *\n   * @param string $string\n   *   The random string to validate.\n   *\n   * @return bool\n   *   TRUE if the random string is valid, FALSE if not.\n   *\/",52],["T_WHITESPACE","\n  ",62],["T_PUBLIC","public",63],["T_WHITESPACE"," ",63],["T_FUNCTION","function",63],["T_WHITESPACE"," ",63],["T_STRING","randomStringValidate",63],"(",["T_VARIABLE","$string",63],")",["T_WHITESPACE"," ",63],"{",["T_WHITESPACE","\n    ",63],["T_COMMENT","\/\/ Consecutive spaces causes issues for\n",64],["T_WHITESPACE","    ",65],["T_COMMENT","\/\/ \\Drupal\\simpletest\\WebTestBase::assertLink().\n",65],["T_WHITESPACE","    ",66],["T_IF","if",66],["T_WHITESPACE"," ",66],"(",["T_STRING","preg_match",66],"(",["T_CONSTANT_ENCAPSED_STRING","'\/\\s{2,}\/'",66],",",["T_WHITESPACE"," ",66],["T_VARIABLE","$string",66],")",")",["T_WHITESPACE"," ",66],"{",["T_WHITESPACE","\n      ",66],["T_RETURN","return",67],["T_WHITESPACE"," ",67],["T_STRING","FALSE",67],";",["T_WHITESPACE","\n    ",67],"}",["T_WHITESPACE","\n\n    ",68],["T_COMMENT","\/\/ Starting or ending with a space means that length might not be what is\n",70],["T_WHITESPACE","    ",71],["T_COMMENT","\/\/ expected.\n",71],["T_WHITESPACE","    ",72],["T_IF","if",72],["T_WHITESPACE"," ",72],"(",["T_STRING","preg_match",72],"(",["T_CONSTANT_ENCAPSED_STRING","'\/^\\s|\\s$\/'",72],",",["T_WHITESPACE"," ",72],["T_VARIABLE","$string",72],")",")",["T_WHITESPACE"," ",72],"{",["T_WHITESPACE","\n      ",72],["T_RETURN","return",73],["T_WHITESPACE"," ",73],["T_STRING","FALSE",73],";",["T_WHITESPACE","\n    ",73],"}",["T_WHITESPACE","\n\n    ",74],["T_RETURN","return",76],["T_WHITESPACE"," ",76],["T_STRING","TRUE",76],";",["T_WHITESPACE","\n  ",76],"}",["T_WHITESPACE","\n\n  ",77],["T_DOC_COMMENT","\/**\n   * Generates a unique random string containing letters and numbers.\n   *\n   * Do not use this method when testing unvalidated user input. Instead, use\n   * \\Drupal\\simpletest\\TestBase::randomString().\n   *\n   * @param int $length\n   *   Length of random string to generate.\n   *\n   * @return string\n   *   Randomly generated unique string.\n   *\n   * @see \\Drupal\\Component\\Utility\\Random::name()\n   *\/",79],["T_WHITESPACE","\n  ",92],["T_PROTECTED","protected",93],["T_WHITESPACE"," ",93],["T_FUNCTION","function",93],["T_WHITESPACE"," ",93],["T_STRING","randomMachineName",93],"(",["T_VARIABLE","$length",93],["T_WHITESPACE"," ",93],"=",["T_WHITESPACE"," ",93],["T_LNUMBER","8",93],")",["T_WHITESPACE"," ",93],"{",["T_WHITESPACE","\n    ",93],["T_RETURN","return",94],["T_WHITESPACE"," ",94],["T_VARIABLE","$this",94],["T_OBJECT_OPERATOR","->",94],["T_STRING","getRandomGenerator",94],"(",")",["T_OBJECT_OPERATOR","->",94],["T_STRING","name",94],"(",["T_VARIABLE","$length",94],",",["T_WHITESPACE"," ",94],["T_STRING","TRUE",94],")",";",["T_WHITESPACE","\n  ",94],"}",["T_WHITESPACE","\n\n  ",95],["T_DOC_COMMENT","\/**\n   * Generates a random PHP object.\n   *\n   * @param int $size\n   *   The number of random keys to add to the object.\n   *\n   * @return \\stdClass\n   *   The generated object, with the specified number of random keys. Each key\n   *   has a random string value.\n   *\n   * @see \\Drupal\\Component\\Utility\\Random::object()\n   *\/",97],["T_WHITESPACE","\n  ",108],["T_PUBLIC","public",109],["T_WHITESPACE"," ",109],["T_FUNCTION","function",109],["T_WHITESPACE"," ",109],["T_STRING","randomObject",109],"(",["T_VARIABLE","$size",109],["T_WHITESPACE"," ",109],"=",["T_WHITESPACE"," ",109],["T_LNUMBER","4",109],")",["T_WHITESPACE"," ",109],"{",["T_WHITESPACE","\n    ",109],["T_RETURN","return",110],["T_WHITESPACE"," ",110],["T_VARIABLE","$this",110],["T_OBJECT_OPERATOR","->",110],["T_STRING","getRandomGenerator",110],"(",")",["T_OBJECT_OPERATOR","->",110],["T_STRING","object",110],"(",["T_VARIABLE","$size",110],")",";",["T_WHITESPACE","\n  ",110],"}",["T_WHITESPACE","\n\n  ",111],["T_DOC_COMMENT","\/**\n   * Gets the random generator for the utility methods.\n   *\n   * @return \\Drupal\\Component\\Utility\\Random\n   *   The random generator.\n   *\/",113],["T_WHITESPACE","\n  ",118],["T_PROTECTED","protected",119],["T_WHITESPACE"," ",119],["T_FUNCTION","function",119],["T_WHITESPACE"," ",119],["T_STRING","getRandomGenerator",119],"(",")",["T_WHITESPACE"," ",119],"{",["T_WHITESPACE","\n    ",119],["T_IF","if",120],["T_WHITESPACE"," ",120],"(","!",["T_STRING","is_object",120],"(",["T_VARIABLE","$this",120],["T_OBJECT_OPERATOR","->",120],["T_STRING","randomGenerator",120],")",")",["T_WHITESPACE"," ",120],"{",["T_WHITESPACE","\n      ",120],["T_VARIABLE","$this",121],["T_OBJECT_OPERATOR","->",121],["T_STRING","randomGenerator",121],["T_WHITESPACE"," ",121],"=",["T_WHITESPACE"," ",121],["T_NEW","new",121],["T_WHITESPACE"," ",121],["T_STRING","Random",121],"(",")",";",["T_WHITESPACE","\n    ",121],"}",["T_WHITESPACE","\n    ",122],["T_RETURN","return",123],["T_WHITESPACE"," ",123],["T_VARIABLE","$this",123],["T_OBJECT_OPERATOR","->",123],["T_STRING","randomGenerator",123],";",["T_WHITESPACE","\n  ",123],"}",["T_WHITESPACE","\n\n",124],"}",["T_WHITESPACE","\n",126]]