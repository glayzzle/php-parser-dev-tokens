[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Tests",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Component",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Plugin",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Discovery",3],";",["T_WHITESPACE","\n\n",3],["T_USE","use",5],["T_WHITESPACE"," ",5],["T_STRING","Drupal",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Tests",5],["T_NS_SEPARATOR","\\",5],["T_STRING","UnitTestCase",5],";",["T_WHITESPACE","\n\n",5],["T_DOC_COMMENT","\/**\n * @group Plugin\n * @coversDefaultClass \\Drupal\\Component\\Plugin\\Discovery\\StaticDiscoveryDecorator\n *\/",7],["T_WHITESPACE","\n",10],["T_CLASS","class",11],["T_WHITESPACE"," ",11],["T_STRING","StaticDiscoveryDecoratorTest",11],["T_WHITESPACE"," ",11],["T_EXTENDS","extends",11],["T_WHITESPACE"," ",11],["T_STRING","UnitTestCase",11],["T_WHITESPACE"," ",11],"{",["T_WHITESPACE","\n\n  ",11],["T_DOC_COMMENT","\/**\n   * Helper method to provide a mocked callback object with expectations.\n   *\n   * If there should be a registered definition, then we have to place a\n   * \\Callable in the mock object. The return value of this callback is\n   * never used.\n   *\n   * @return \\PHPUnit_Framework_MockObject_MockObject\n   *   Mocked object with expectation of registerDefinitionsCallback() being\n   *   called once.\n   *\/",13],["T_WHITESPACE","\n  ",23],["T_PUBLIC","public",24],["T_WHITESPACE"," ",24],["T_FUNCTION","function",24],["T_WHITESPACE"," ",24],["T_STRING","getRegisterDefinitionsCallback",24],"(",")",["T_WHITESPACE"," ",24],"{",["T_WHITESPACE","\n    ",24],["T_VARIABLE","$mock_callable",25],["T_WHITESPACE"," ",25],"=",["T_WHITESPACE"," ",25],["T_VARIABLE","$this",25],["T_OBJECT_OPERATOR","->",25],["T_STRING","getMockBuilder",25],"(",["T_CONSTANT_ENCAPSED_STRING","'\\stdClass'",25],")",["T_WHITESPACE","\n      ",25],["T_OBJECT_OPERATOR","->",26],["T_STRING","setMethods",26],"(",["T_ARRAY","array",26],"(",["T_CONSTANT_ENCAPSED_STRING","'registerDefinitionsCallback'",26],")",")",["T_WHITESPACE","\n      ",26],["T_OBJECT_OPERATOR","->",27],["T_STRING","getMock",27],"(",")",";",["T_WHITESPACE","\n    ",27],["T_COMMENT","\/\/ Set expectations for the callback method.\n",28],["T_WHITESPACE","    ",29],["T_VARIABLE","$mock_callable",29],["T_OBJECT_OPERATOR","->",29],["T_STRING","expects",29],"(",["T_VARIABLE","$this",29],["T_OBJECT_OPERATOR","->",29],["T_STRING","once",29],"(",")",")",["T_WHITESPACE","\n      ",29],["T_OBJECT_OPERATOR","->",30],["T_STRING","method",30],"(",["T_CONSTANT_ENCAPSED_STRING","'registerDefinitionsCallback'",30],")",";",["T_WHITESPACE","\n    ",30],["T_RETURN","return",31],["T_WHITESPACE"," ",31],["T_VARIABLE","$mock_callable",31],";",["T_WHITESPACE","\n  ",31],"}",["T_WHITESPACE","\n\n  ",32],["T_DOC_COMMENT","\/**\n   * Data provider for testGetDefinitions().\n   *\n   * @return array\n   *   - Expected plugin definition.\n   *   - Whether we require the method to register definitions through a\n   *     callback.\n   *   - Whether to throw an exception if the definition is invalid.\n   *   - A plugin definition.\n   *   - Base plugin ID.\n   *\/",34],["T_WHITESPACE","\n  ",44],["T_PUBLIC","public",45],["T_WHITESPACE"," ",45],["T_FUNCTION","function",45],["T_WHITESPACE"," ",45],["T_STRING","providerGetDefinition",45],"(",")",["T_WHITESPACE"," ",45],"{",["T_WHITESPACE","\n    ",45],["T_RETURN","return",46],["T_WHITESPACE"," ",46],"[",["T_WHITESPACE","\n      ",46],"[",["T_CONSTANT_ENCAPSED_STRING","'is_defined'",47],",",["T_WHITESPACE"," ",47],["T_STRING","TRUE",47],",",["T_WHITESPACE"," ",47],["T_STRING","FALSE",47],",",["T_WHITESPACE"," ",47],"[",["T_CONSTANT_ENCAPSED_STRING","'plugin-definition'",47],["T_WHITESPACE"," ",47],["T_DOUBLE_ARROW","=>",47],["T_WHITESPACE"," ",47],["T_CONSTANT_ENCAPSED_STRING","'is_defined'",47],"]",",",["T_WHITESPACE"," ",47],["T_CONSTANT_ENCAPSED_STRING","'plugin-definition'",47],"]",",",["T_WHITESPACE","\n      ",47],["T_COMMENT","\/\/ Make sure we don't call the decorated method if we shouldn't.\n",48],["T_WHITESPACE","      ",49],"[",["T_CONSTANT_ENCAPSED_STRING","'is_defined'",49],",",["T_WHITESPACE"," ",49],["T_STRING","FALSE",49],",",["T_WHITESPACE"," ",49],["T_STRING","FALSE",49],",",["T_WHITESPACE"," ",49],"[",["T_CONSTANT_ENCAPSED_STRING","'plugin-definition'",49],["T_WHITESPACE"," ",49],["T_DOUBLE_ARROW","=>",49],["T_WHITESPACE"," ",49],["T_CONSTANT_ENCAPSED_STRING","'is_defined'",49],"]",",",["T_WHITESPACE"," ",49],["T_CONSTANT_ENCAPSED_STRING","'plugin-definition'",49],"]",",",["T_WHITESPACE","\n      ",49],["T_COMMENT","\/\/ Return NULL for bad plugin id.\n",50],["T_WHITESPACE","      ",51],"[",["T_STRING","NULL",51],",",["T_WHITESPACE"," ",51],["T_STRING","FALSE",51],",",["T_WHITESPACE"," ",51],["T_STRING","FALSE",51],",",["T_WHITESPACE"," ",51],"[",["T_CONSTANT_ENCAPSED_STRING","'plugin-definition'",51],["T_WHITESPACE"," ",51],["T_DOUBLE_ARROW","=>",51],["T_WHITESPACE"," ",51],["T_CONSTANT_ENCAPSED_STRING","'is_defined'",51],"]",",",["T_WHITESPACE"," ",51],["T_CONSTANT_ENCAPSED_STRING","'BAD-plugin-definition'",51],"]",",",["T_WHITESPACE","\n      ",51],["T_COMMENT","\/\/ Generate an exception.\n",52],["T_WHITESPACE","      ",53],"[",["T_STRING","NULL",53],",",["T_WHITESPACE"," ",53],["T_STRING","FALSE",53],",",["T_WHITESPACE"," ",53],["T_STRING","TRUE",53],",",["T_WHITESPACE"," ",53],"[",["T_CONSTANT_ENCAPSED_STRING","'plugin-definition'",53],["T_WHITESPACE"," ",53],["T_DOUBLE_ARROW","=>",53],["T_WHITESPACE"," ",53],["T_CONSTANT_ENCAPSED_STRING","'is_defined'",53],"]",",",["T_WHITESPACE"," ",53],["T_CONSTANT_ENCAPSED_STRING","'BAD-plugin-definition'",53],"]",",",["T_WHITESPACE","\n    ",53],"]",";",["T_WHITESPACE","\n  ",54],"}",["T_WHITESPACE","\n\n  ",55],["T_DOC_COMMENT","\/**\n   * @covers ::getDefinition\n   * @dataProvider providerGetDefinition\n   *\/",57],["T_WHITESPACE","\n  ",60],["T_PUBLIC","public",61],["T_WHITESPACE"," ",61],["T_FUNCTION","function",61],["T_WHITESPACE"," ",61],["T_STRING","testGetDefinition",61],"(",["T_VARIABLE","$expected",61],",",["T_WHITESPACE"," ",61],["T_VARIABLE","$has_register_definitions",61],",",["T_WHITESPACE"," ",61],["T_VARIABLE","$exception_on_invalid",61],",",["T_WHITESPACE"," ",61],["T_VARIABLE","$definitions",61],",",["T_WHITESPACE"," ",61],["T_VARIABLE","$base_plugin_id",61],")",["T_WHITESPACE"," ",61],"{",["T_WHITESPACE","\n    ",61],["T_COMMENT","\/\/ Mock our StaticDiscoveryDecorator.\n",62],["T_WHITESPACE","    ",63],["T_VARIABLE","$mock_decorator",63],["T_WHITESPACE"," ",63],"=",["T_WHITESPACE"," ",63],["T_VARIABLE","$this",63],["T_OBJECT_OPERATOR","->",63],["T_STRING","getMockBuilder",63],"(",["T_CONSTANT_ENCAPSED_STRING","'Drupal\\Component\\Plugin\\Discovery\\StaticDiscoveryDecorator'",63],")",["T_WHITESPACE","\n      ",63],["T_OBJECT_OPERATOR","->",64],["T_STRING","disableOriginalConstructor",64],"(",")",["T_WHITESPACE","\n      ",64],["T_OBJECT_OPERATOR","->",65],["T_STRING","setMethods",65],"(",["T_ARRAY","array",65],"(",["T_CONSTANT_ENCAPSED_STRING","'registeredDefintionCallback'",65],")",")",["T_WHITESPACE","\n      ",65],["T_OBJECT_OPERATOR","->",66],["T_STRING","getMock",66],"(",")",";",["T_WHITESPACE","\n\n    ",66],["T_COMMENT","\/\/ Set up the ::$registerDefinitions property.\n",68],["T_WHITESPACE","    ",69],["T_VARIABLE","$ref_register_definitions",69],["T_WHITESPACE"," ",69],"=",["T_WHITESPACE"," ",69],["T_NEW","new",69],["T_WHITESPACE"," ",69],["T_NS_SEPARATOR","\\",69],["T_STRING","ReflectionProperty",69],"(",["T_VARIABLE","$mock_decorator",69],",",["T_WHITESPACE"," ",69],["T_CONSTANT_ENCAPSED_STRING","'registerDefinitions'",69],")",";",["T_WHITESPACE","\n    ",69],["T_VARIABLE","$ref_register_definitions",70],["T_OBJECT_OPERATOR","->",70],["T_STRING","setAccessible",70],"(",["T_STRING","TRUE",70],")",";",["T_WHITESPACE","\n    ",70],["T_IF","if",71],["T_WHITESPACE"," ",71],"(",["T_VARIABLE","$has_register_definitions",71],")",["T_WHITESPACE"," ",71],"{",["T_WHITESPACE","\n      ",71],["T_COMMENT","\/\/ Set the callback object on the mocked decorator.\n",72],["T_WHITESPACE","      ",73],["T_VARIABLE","$ref_register_definitions",73],["T_OBJECT_OPERATOR","->",73],["T_STRING","setValue",73],"(",["T_WHITESPACE","\n        ",73],["T_VARIABLE","$mock_decorator",74],",",["T_WHITESPACE","\n        ",74],["T_ARRAY","array",75],"(",["T_VARIABLE","$this",75],["T_OBJECT_OPERATOR","->",75],["T_STRING","getRegisterDefinitionsCallback",75],"(",")",",",["T_WHITESPACE"," ",75],["T_CONSTANT_ENCAPSED_STRING","'registerDefinitionsCallback'",75],")",["T_WHITESPACE","\n      ",75],")",";",["T_WHITESPACE","\n    ",76],"}",["T_WHITESPACE","\n    ",77],["T_ELSE","else",78],["T_WHITESPACE"," ",78],"{",["T_WHITESPACE","\n      ",78],["T_COMMENT","\/\/ There should be no registerDefinitions callback.\n",79],["T_WHITESPACE","      ",80],["T_VARIABLE","$ref_register_definitions",80],["T_OBJECT_OPERATOR","->",80],["T_STRING","setValue",80],"(",["T_VARIABLE","$mock_decorator",80],",",["T_WHITESPACE"," ",80],["T_STRING","NULL",80],")",";",["T_WHITESPACE","\n    ",80],"}",["T_WHITESPACE","\n\n    ",81],["T_COMMENT","\/\/ Set up ::$definitions to an empty array.\n",83],["T_WHITESPACE","    ",84],["T_VARIABLE","$ref_definitions",84],["T_WHITESPACE"," ",84],"=",["T_WHITESPACE"," ",84],["T_NEW","new",84],["T_WHITESPACE"," ",84],["T_NS_SEPARATOR","\\",84],["T_STRING","ReflectionProperty",84],"(",["T_VARIABLE","$mock_decorator",84],",",["T_WHITESPACE"," ",84],["T_CONSTANT_ENCAPSED_STRING","'definitions'",84],")",";",["T_WHITESPACE","\n    ",84],["T_VARIABLE","$ref_definitions",85],["T_OBJECT_OPERATOR","->",85],["T_STRING","setAccessible",85],"(",["T_STRING","TRUE",85],")",";",["T_WHITESPACE","\n    ",85],["T_VARIABLE","$ref_definitions",86],["T_OBJECT_OPERATOR","->",86],["T_STRING","setValue",86],"(",["T_VARIABLE","$mock_decorator",86],",",["T_WHITESPACE"," ",86],["T_ARRAY","array",86],"(",")",")",";",["T_WHITESPACE","\n\n    ",86],["T_COMMENT","\/\/ Mock a decorated object.\n",88],["T_WHITESPACE","    ",89],["T_VARIABLE","$mock_decorated",89],["T_WHITESPACE"," ",89],"=",["T_WHITESPACE"," ",89],["T_VARIABLE","$this",89],["T_OBJECT_OPERATOR","->",89],["T_STRING","getMockBuilder",89],"(",["T_CONSTANT_ENCAPSED_STRING","'Drupal\\Component\\Plugin\\Discovery\\DiscoveryInterface'",89],")",["T_WHITESPACE","\n      ",89],["T_OBJECT_OPERATOR","->",90],["T_STRING","setMethods",90],"(",["T_ARRAY","array",90],"(",["T_CONSTANT_ENCAPSED_STRING","'getDefinitions'",90],")",")",["T_WHITESPACE","\n      ",90],["T_OBJECT_OPERATOR","->",91],["T_STRING","getMockForAbstractClass",91],"(",")",";",["T_WHITESPACE","\n    ",91],["T_COMMENT","\/\/ Return our definitions from getDefinitions().\n",92],["T_WHITESPACE","    ",93],["T_VARIABLE","$mock_decorated",93],["T_OBJECT_OPERATOR","->",93],["T_STRING","expects",93],"(",["T_VARIABLE","$this",93],["T_OBJECT_OPERATOR","->",93],["T_STRING","once",93],"(",")",")",["T_WHITESPACE","\n      ",93],["T_OBJECT_OPERATOR","->",94],["T_STRING","method",94],"(",["T_CONSTANT_ENCAPSED_STRING","'getDefinitions'",94],")",["T_WHITESPACE","\n      ",94],["T_OBJECT_OPERATOR","->",95],["T_STRING","willReturn",95],"(",["T_VARIABLE","$definitions",95],")",";",["T_WHITESPACE","\n\n    ",95],["T_COMMENT","\/\/ Set up ::$decorated to our mocked decorated object.\n",97],["T_WHITESPACE","    ",98],["T_VARIABLE","$ref_decorated",98],["T_WHITESPACE"," ",98],"=",["T_WHITESPACE"," ",98],["T_NEW","new",98],["T_WHITESPACE"," ",98],["T_NS_SEPARATOR","\\",98],["T_STRING","ReflectionProperty",98],"(",["T_VARIABLE","$mock_decorator",98],",",["T_WHITESPACE"," ",98],["T_CONSTANT_ENCAPSED_STRING","'decorated'",98],")",";",["T_WHITESPACE","\n    ",98],["T_VARIABLE","$ref_decorated",99],["T_OBJECT_OPERATOR","->",99],["T_STRING","setAccessible",99],"(",["T_STRING","TRUE",99],")",";",["T_WHITESPACE","\n    ",99],["T_VARIABLE","$ref_decorated",100],["T_OBJECT_OPERATOR","->",100],["T_STRING","setValue",100],"(",["T_VARIABLE","$mock_decorator",100],",",["T_WHITESPACE"," ",100],["T_VARIABLE","$mock_decorated",100],")",";",["T_WHITESPACE","\n\n    ",100],["T_IF","if",102],["T_WHITESPACE"," ",102],"(",["T_VARIABLE","$exception_on_invalid",102],")",["T_WHITESPACE"," ",102],"{",["T_WHITESPACE","\n      ",102],["T_VARIABLE","$this",103],["T_OBJECT_OPERATOR","->",103],["T_STRING","setExpectedException",103],"(",["T_CONSTANT_ENCAPSED_STRING","'Drupal\\Component\\Plugin\\Exception\\PluginNotFoundException'",103],")",";",["T_WHITESPACE","\n    ",103],"}",["T_WHITESPACE","\n\n    ",104],["T_COMMENT","\/\/ Exercise getDefinition(). It calls parent::getDefinition().\n",106],["T_WHITESPACE","    ",107],["T_VARIABLE","$this",107],["T_OBJECT_OPERATOR","->",107],["T_STRING","assertEquals",107],"(",["T_WHITESPACE","\n      ",107],["T_VARIABLE","$expected",108],",",["T_WHITESPACE","\n      ",108],["T_VARIABLE","$mock_decorator",109],["T_OBJECT_OPERATOR","->",109],["T_STRING","getDefinition",109],"(",["T_VARIABLE","$base_plugin_id",109],",",["T_WHITESPACE"," ",109],["T_VARIABLE","$exception_on_invalid",109],")",["T_WHITESPACE","\n    ",109],")",";",["T_WHITESPACE","\n  ",110],"}",["T_WHITESPACE","\n\n  ",111],["T_DOC_COMMENT","\/**\n   * Data provider for testGetDefinitions().\n   *\n   * @return array\n   *   - bool Whether the test mock has a callback.\n   *   - array Plugin definitions.\n   *\/",113],["T_WHITESPACE","\n  ",119],["T_PUBLIC","public",120],["T_WHITESPACE"," ",120],["T_FUNCTION","function",120],["T_WHITESPACE"," ",120],["T_STRING","providerGetDefinitions",120],"(",")",["T_WHITESPACE"," ",120],"{",["T_WHITESPACE","\n    ",120],["T_RETURN","return",121],["T_WHITESPACE"," ",121],"[",["T_WHITESPACE","\n      ",121],"[",["T_STRING","TRUE",122],",",["T_WHITESPACE"," ",122],"[",["T_CONSTANT_ENCAPSED_STRING","'definition'",122],["T_WHITESPACE"," ",122],["T_DOUBLE_ARROW","=>",122],["T_WHITESPACE"," ",122],["T_CONSTANT_ENCAPSED_STRING","'is_fake'",122],"]","]",",",["T_WHITESPACE","\n      ",122],"[",["T_STRING","FALSE",123],",",["T_WHITESPACE"," ",123],"[",["T_CONSTANT_ENCAPSED_STRING","'definition'",123],["T_WHITESPACE"," ",123],["T_DOUBLE_ARROW","=>",123],["T_WHITESPACE"," ",123],["T_CONSTANT_ENCAPSED_STRING","'array_of_stuff'",123],"]","]",",",["T_WHITESPACE","\n    ",123],"]",";",["T_WHITESPACE","\n  ",124],"}",["T_WHITESPACE","\n\n  ",125],["T_DOC_COMMENT","\/**\n   * @covers ::getDefinitions\n   * @dataProvider providerGetDefinitions\n   *\/",127],["T_WHITESPACE","\n  ",130],["T_PUBLIC","public",131],["T_WHITESPACE"," ",131],["T_FUNCTION","function",131],["T_WHITESPACE"," ",131],["T_STRING","testGetDefinitions",131],"(",["T_VARIABLE","$has_register_definitions",131],",",["T_WHITESPACE"," ",131],["T_VARIABLE","$definitions",131],")",["T_WHITESPACE"," ",131],"{",["T_WHITESPACE","\n    ",131],["T_COMMENT","\/\/ Mock our StaticDiscoveryDecorator.\n",132],["T_WHITESPACE","    ",133],["T_VARIABLE","$mock_decorator",133],["T_WHITESPACE"," ",133],"=",["T_WHITESPACE"," ",133],["T_VARIABLE","$this",133],["T_OBJECT_OPERATOR","->",133],["T_STRING","getMockBuilder",133],"(",["T_CONSTANT_ENCAPSED_STRING","'Drupal\\Component\\Plugin\\Discovery\\StaticDiscoveryDecorator'",133],")",["T_WHITESPACE","\n      ",133],["T_OBJECT_OPERATOR","->",134],["T_STRING","disableOriginalConstructor",134],"(",")",["T_WHITESPACE","\n      ",134],["T_OBJECT_OPERATOR","->",135],["T_STRING","setMethods",135],"(",["T_ARRAY","array",135],"(",["T_CONSTANT_ENCAPSED_STRING","'registeredDefintionCallback'",135],")",")",["T_WHITESPACE","\n      ",135],["T_OBJECT_OPERATOR","->",136],["T_STRING","getMock",136],"(",")",";",["T_WHITESPACE","\n\n    ",136],["T_COMMENT","\/\/ Set up the ::$registerDefinitions property.\n",138],["T_WHITESPACE","    ",139],["T_VARIABLE","$ref_register_definitions",139],["T_WHITESPACE"," ",139],"=",["T_WHITESPACE"," ",139],["T_NEW","new",139],["T_WHITESPACE"," ",139],["T_NS_SEPARATOR","\\",139],["T_STRING","ReflectionProperty",139],"(",["T_VARIABLE","$mock_decorator",139],",",["T_WHITESPACE"," ",139],["T_CONSTANT_ENCAPSED_STRING","'registerDefinitions'",139],")",";",["T_WHITESPACE","\n    ",139],["T_VARIABLE","$ref_register_definitions",140],["T_OBJECT_OPERATOR","->",140],["T_STRING","setAccessible",140],"(",["T_STRING","TRUE",140],")",";",["T_WHITESPACE","\n    ",140],["T_IF","if",141],["T_WHITESPACE"," ",141],"(",["T_VARIABLE","$has_register_definitions",141],")",["T_WHITESPACE"," ",141],"{",["T_WHITESPACE","\n      ",141],["T_COMMENT","\/\/ Set the callback object on the mocked decorator.\n",142],["T_WHITESPACE","      ",143],["T_VARIABLE","$ref_register_definitions",143],["T_OBJECT_OPERATOR","->",143],["T_STRING","setValue",143],"(",["T_WHITESPACE","\n        ",143],["T_VARIABLE","$mock_decorator",144],",",["T_WHITESPACE","\n        ",144],["T_ARRAY","array",145],"(",["T_VARIABLE","$this",145],["T_OBJECT_OPERATOR","->",145],["T_STRING","getRegisterDefinitionsCallback",145],"(",")",",",["T_WHITESPACE"," ",145],["T_CONSTANT_ENCAPSED_STRING","'registerDefinitionsCallback'",145],")",["T_WHITESPACE","\n      ",145],")",";",["T_WHITESPACE","\n    ",146],"}",["T_WHITESPACE","\n    ",147],["T_ELSE","else",148],["T_WHITESPACE"," ",148],"{",["T_WHITESPACE","\n      ",148],["T_COMMENT","\/\/ There should be no registerDefinitions callback.\n",149],["T_WHITESPACE","      ",150],["T_VARIABLE","$ref_register_definitions",150],["T_OBJECT_OPERATOR","->",150],["T_STRING","setValue",150],"(",["T_VARIABLE","$mock_decorator",150],",",["T_WHITESPACE"," ",150],["T_STRING","NULL",150],")",";",["T_WHITESPACE","\n    ",150],"}",["T_WHITESPACE","\n\n    ",151],["T_COMMENT","\/\/ Set up ::$definitions to an empty array.\n",153],["T_WHITESPACE","    ",154],["T_VARIABLE","$ref_definitions",154],["T_WHITESPACE"," ",154],"=",["T_WHITESPACE"," ",154],["T_NEW","new",154],["T_WHITESPACE"," ",154],["T_NS_SEPARATOR","\\",154],["T_STRING","ReflectionProperty",154],"(",["T_VARIABLE","$mock_decorator",154],",",["T_WHITESPACE"," ",154],["T_CONSTANT_ENCAPSED_STRING","'definitions'",154],")",";",["T_WHITESPACE","\n    ",154],["T_VARIABLE","$ref_definitions",155],["T_OBJECT_OPERATOR","->",155],["T_STRING","setAccessible",155],"(",["T_STRING","TRUE",155],")",";",["T_WHITESPACE","\n    ",155],["T_VARIABLE","$ref_definitions",156],["T_OBJECT_OPERATOR","->",156],["T_STRING","setValue",156],"(",["T_VARIABLE","$mock_decorator",156],",",["T_WHITESPACE"," ",156],["T_ARRAY","array",156],"(",")",")",";",["T_WHITESPACE","\n\n    ",156],["T_COMMENT","\/\/ Mock a decorated object.\n",158],["T_WHITESPACE","    ",159],["T_VARIABLE","$mock_decorated",159],["T_WHITESPACE"," ",159],"=",["T_WHITESPACE"," ",159],["T_VARIABLE","$this",159],["T_OBJECT_OPERATOR","->",159],["T_STRING","getMockBuilder",159],"(",["T_CONSTANT_ENCAPSED_STRING","'Drupal\\Component\\Plugin\\Discovery\\DiscoveryInterface'",159],")",["T_WHITESPACE","\n      ",159],["T_OBJECT_OPERATOR","->",160],["T_STRING","setMethods",160],"(",["T_ARRAY","array",160],"(",["T_CONSTANT_ENCAPSED_STRING","'getDefinitions'",160],")",")",["T_WHITESPACE","\n      ",160],["T_OBJECT_OPERATOR","->",161],["T_STRING","getMockForAbstractClass",161],"(",")",";",["T_WHITESPACE","\n    ",161],["T_COMMENT","\/\/ Our mocked method will return any arguments sent to it.\n",162],["T_WHITESPACE","    ",163],["T_VARIABLE","$mock_decorated",163],["T_OBJECT_OPERATOR","->",163],["T_STRING","expects",163],"(",["T_VARIABLE","$this",163],["T_OBJECT_OPERATOR","->",163],["T_STRING","once",163],"(",")",")",["T_WHITESPACE","\n      ",163],["T_OBJECT_OPERATOR","->",164],["T_STRING","method",164],"(",["T_CONSTANT_ENCAPSED_STRING","'getDefinitions'",164],")",["T_WHITESPACE","\n      ",164],["T_OBJECT_OPERATOR","->",165],["T_STRING","willReturn",165],"(",["T_VARIABLE","$definitions",165],")",";",["T_WHITESPACE","\n\n    ",165],["T_COMMENT","\/\/ Set up ::$decorated to our mocked decorated object.\n",167],["T_WHITESPACE","    ",168],["T_VARIABLE","$ref_decorated",168],["T_WHITESPACE"," ",168],"=",["T_WHITESPACE"," ",168],["T_NEW","new",168],["T_WHITESPACE"," ",168],["T_NS_SEPARATOR","\\",168],["T_STRING","ReflectionProperty",168],"(",["T_VARIABLE","$mock_decorator",168],",",["T_WHITESPACE"," ",168],["T_CONSTANT_ENCAPSED_STRING","'decorated'",168],")",";",["T_WHITESPACE","\n    ",168],["T_VARIABLE","$ref_decorated",169],["T_OBJECT_OPERATOR","->",169],["T_STRING","setAccessible",169],"(",["T_STRING","TRUE",169],")",";",["T_WHITESPACE","\n    ",169],["T_VARIABLE","$ref_decorated",170],["T_OBJECT_OPERATOR","->",170],["T_STRING","setValue",170],"(",["T_VARIABLE","$mock_decorator",170],",",["T_WHITESPACE"," ",170],["T_VARIABLE","$mock_decorated",170],")",";",["T_WHITESPACE","\n\n    ",170],["T_COMMENT","\/\/ Exercise getDefinitions(). It calls parent::getDefinitions() but in this\n",172],["T_WHITESPACE","    ",173],["T_COMMENT","\/\/ case there will be no side-effects.\n",173],["T_WHITESPACE","    ",174],["T_VARIABLE","$this",174],["T_OBJECT_OPERATOR","->",174],["T_STRING","assertArrayEquals",174],"(",["T_WHITESPACE","\n      ",174],["T_VARIABLE","$definitions",175],",",["T_WHITESPACE","\n      ",175],["T_VARIABLE","$mock_decorator",176],["T_OBJECT_OPERATOR","->",176],["T_STRING","getDefinitions",176],"(",")",["T_WHITESPACE","\n    ",176],")",";",["T_WHITESPACE","\n  ",177],"}",["T_WHITESPACE","\n\n  ",178],["T_DOC_COMMENT","\/**\n   * Data provider for testCall().\n   *\n   * @return array\n   *   - Method name.\n   *   - Array of arguments to pass to the method, with the expectation that our\n   *     mocked __call() will return them.\n   *\/",180],["T_WHITESPACE","\n  ",187],["T_PUBLIC","public",188],["T_WHITESPACE"," ",188],["T_FUNCTION","function",188],["T_WHITESPACE"," ",188],["T_STRING","providerCall",188],"(",")",["T_WHITESPACE"," ",188],"{",["T_WHITESPACE","\n    ",188],["T_RETURN","return",189],["T_WHITESPACE"," ",189],"[",["T_WHITESPACE","\n      ",189],"[",["T_CONSTANT_ENCAPSED_STRING","'complexArguments'",190],",",["T_WHITESPACE"," ",190],"[",["T_CONSTANT_ENCAPSED_STRING","'1'",190],",",["T_WHITESPACE"," ",190],["T_DNUMBER","2.0",190],",",["T_WHITESPACE"," ",190],["T_LNUMBER","3",190],",",["T_WHITESPACE"," ",190],"[",["T_CONSTANT_ENCAPSED_STRING","'4'",190],["T_WHITESPACE"," ",190],["T_DOUBLE_ARROW","=>",190],["T_WHITESPACE"," ",190],["T_CONSTANT_ENCAPSED_STRING","'five'",190],"]","]","]",",",["T_WHITESPACE","\n      ",190],"[",["T_CONSTANT_ENCAPSED_STRING","'noArguments'",191],",",["T_WHITESPACE"," ",191],"[","]","]",",",["T_WHITESPACE","\n    ",191],"]",";",["T_WHITESPACE","\n  ",192],"}",["T_WHITESPACE","\n\n  ",193],["T_DOC_COMMENT","\/**\n   * @covers ::__call\n   * @dataProvider providerCall\n   *\/",195],["T_WHITESPACE","\n  ",198],["T_PUBLIC","public",199],["T_WHITESPACE"," ",199],["T_FUNCTION","function",199],["T_WHITESPACE"," ",199],["T_STRING","testCall",199],"(",["T_VARIABLE","$method",199],",",["T_WHITESPACE"," ",199],["T_VARIABLE","$args",199],")",["T_WHITESPACE"," ",199],"{",["T_WHITESPACE","\n    ",199],["T_COMMENT","\/\/ Mock a decorated object.\n",200],["T_WHITESPACE","    ",201],["T_VARIABLE","$mock_decorated",201],["T_WHITESPACE"," ",201],"=",["T_WHITESPACE"," ",201],["T_VARIABLE","$this",201],["T_OBJECT_OPERATOR","->",201],["T_STRING","getMockBuilder",201],"(",["T_CONSTANT_ENCAPSED_STRING","'Drupal\\Component\\Plugin\\Discovery\\DiscoveryInterface'",201],")",["T_WHITESPACE","\n      ",201],["T_OBJECT_OPERATOR","->",202],["T_STRING","setMethods",202],"(",["T_ARRAY","array",202],"(",["T_VARIABLE","$method",202],")",")",["T_WHITESPACE","\n      ",202],["T_OBJECT_OPERATOR","->",203],["T_STRING","getMockForAbstractClass",203],"(",")",";",["T_WHITESPACE","\n    ",203],["T_COMMENT","\/\/ Our mocked method will return any arguments sent to it.\n",204],["T_WHITESPACE","    ",205],["T_VARIABLE","$mock_decorated",205],["T_OBJECT_OPERATOR","->",205],["T_STRING","expects",205],"(",["T_VARIABLE","$this",205],["T_OBJECT_OPERATOR","->",205],["T_STRING","once",205],"(",")",")",["T_WHITESPACE","\n      ",205],["T_OBJECT_OPERATOR","->",206],["T_STRING","method",206],"(",["T_VARIABLE","$method",206],")",["T_WHITESPACE","\n      ",206],["T_OBJECT_OPERATOR","->",207],["T_STRING","willReturnCallback",207],"(",["T_WHITESPACE","\n        ",207],["T_FUNCTION","function",208],["T_WHITESPACE"," ",208],"(",")",["T_WHITESPACE"," ",208],"{",["T_WHITESPACE","\n          ",208],["T_RETURN","return",209],["T_WHITESPACE"," ",209],["T_NS_SEPARATOR","\\",209],["T_STRING","func_get_args",209],"(",")",";",["T_WHITESPACE","\n        ",209],"}",["T_WHITESPACE","\n      ",210],")",";",["T_WHITESPACE","\n\n    ",211],["T_COMMENT","\/\/ Create a mock decorator.\n",213],["T_WHITESPACE","    ",214],["T_VARIABLE","$mock_decorator",214],["T_WHITESPACE"," ",214],"=",["T_WHITESPACE"," ",214],["T_VARIABLE","$this",214],["T_OBJECT_OPERATOR","->",214],["T_STRING","getMockBuilder",214],"(",["T_CONSTANT_ENCAPSED_STRING","'Drupal\\Component\\Plugin\\Discovery\\StaticDiscoveryDecorator'",214],")",["T_WHITESPACE","\n      ",214],["T_OBJECT_OPERATOR","->",215],["T_STRING","disableOriginalConstructor",215],"(",")",["T_WHITESPACE","\n      ",215],["T_OBJECT_OPERATOR","->",216],["T_STRING","getMock",216],"(",")",";",["T_WHITESPACE","\n    ",216],["T_COMMENT","\/\/ Poke the decorated object into our decorator.\n",217],["T_WHITESPACE","    ",218],["T_VARIABLE","$ref_decorated",218],["T_WHITESPACE"," ",218],"=",["T_WHITESPACE"," ",218],["T_NEW","new",218],["T_WHITESPACE"," ",218],["T_NS_SEPARATOR","\\",218],["T_STRING","ReflectionProperty",218],"(",["T_VARIABLE","$mock_decorator",218],",",["T_WHITESPACE"," ",218],["T_CONSTANT_ENCAPSED_STRING","'decorated'",218],")",";",["T_WHITESPACE","\n    ",218],["T_VARIABLE","$ref_decorated",219],["T_OBJECT_OPERATOR","->",219],["T_STRING","setAccessible",219],"(",["T_STRING","TRUE",219],")",";",["T_WHITESPACE","\n    ",219],["T_VARIABLE","$ref_decorated",220],["T_OBJECT_OPERATOR","->",220],["T_STRING","setValue",220],"(",["T_VARIABLE","$mock_decorator",220],",",["T_WHITESPACE"," ",220],["T_VARIABLE","$mock_decorated",220],")",";",["T_WHITESPACE","\n\n    ",220],["T_COMMENT","\/\/ Exercise __call.\n",222],["T_WHITESPACE","    ",223],["T_VARIABLE","$this",223],["T_OBJECT_OPERATOR","->",223],["T_STRING","assertArrayEquals",223],"(",["T_WHITESPACE","\n      ",223],["T_VARIABLE","$args",224],",",["T_WHITESPACE","\n      ",224],["T_NS_SEPARATOR","\\",225],["T_STRING","call_user_func_array",225],"(",["T_ARRAY","array",225],"(",["T_VARIABLE","$mock_decorated",225],",",["T_WHITESPACE"," ",225],["T_VARIABLE","$method",225],")",",",["T_WHITESPACE"," ",225],["T_VARIABLE","$args",225],")",["T_WHITESPACE","\n    ",225],")",";",["T_WHITESPACE","\n  ",226],"}",["T_WHITESPACE","\n\n",227],"}",["T_WHITESPACE","\n",229]]