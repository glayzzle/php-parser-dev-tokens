[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Tests",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Component",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Serialization",3],";",["T_WHITESPACE","\n\n",3],["T_USE","use",5],["T_WHITESPACE"," ",5],["T_STRING","Drupal",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Component",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Serialization",5],["T_NS_SEPARATOR","\\",5],["T_STRING","YamlPecl",5],";",["T_WHITESPACE","\n\n",5],["T_DOC_COMMENT","\/**\n * Tests the YamlPecl serialization implementation.\n *\n * @group Drupal\n * @group Serialization\n * @coversDefaultClass \\Drupal\\Component\\Serialization\\YamlPecl\n * @requires extension yaml\n *\/",7],["T_WHITESPACE","\n",14],["T_CLASS","class",15],["T_WHITESPACE"," ",15],["T_STRING","YamlPeclTest",15],["T_WHITESPACE"," ",15],["T_EXTENDS","extends",15],["T_WHITESPACE"," ",15],["T_STRING","YamlTestBase",15],["T_WHITESPACE"," ",15],"{",["T_WHITESPACE","\n\n  ",15],["T_DOC_COMMENT","\/**\n   * Tests encoding and decoding basic data structures.\n   *\n   * @covers ::encode\n   * @covers ::decode\n   * @dataProvider providerEncodeDecodeTests\n   *\/",17],["T_WHITESPACE","\n  ",23],["T_PUBLIC","public",24],["T_WHITESPACE"," ",24],["T_FUNCTION","function",24],["T_WHITESPACE"," ",24],["T_STRING","testEncodeDecode",24],"(",["T_VARIABLE","$data",24],")",["T_WHITESPACE"," ",24],"{",["T_WHITESPACE","\n    ",24],["T_VARIABLE","$this",25],["T_OBJECT_OPERATOR","->",25],["T_STRING","assertEquals",25],"(",["T_VARIABLE","$data",25],",",["T_WHITESPACE"," ",25],["T_STRING","YamlPecl",25],["T_DOUBLE_COLON","::",25],["T_STRING","decode",25],"(",["T_STRING","YamlPecl",25],["T_DOUBLE_COLON","::",25],["T_STRING","encode",25],"(",["T_VARIABLE","$data",25],")",")",")",";",["T_WHITESPACE","\n  ",25],"}",["T_WHITESPACE","\n\n  ",26],["T_DOC_COMMENT","\/**\n   * Tests decoding YAML node anchors.\n   *\n   * @covers ::decode\n   * @dataProvider providerDecodeTests\n   *\/",28],["T_WHITESPACE","\n  ",33],["T_PUBLIC","public",34],["T_WHITESPACE"," ",34],["T_FUNCTION","function",34],["T_WHITESPACE"," ",34],["T_STRING","testDecode",34],"(",["T_VARIABLE","$string",34],",",["T_WHITESPACE"," ",34],["T_VARIABLE","$data",34],")",["T_WHITESPACE"," ",34],"{",["T_WHITESPACE","\n    ",34],["T_VARIABLE","$this",35],["T_OBJECT_OPERATOR","->",35],["T_STRING","assertEquals",35],"(",["T_VARIABLE","$data",35],",",["T_WHITESPACE"," ",35],["T_STRING","YamlPecl",35],["T_DOUBLE_COLON","::",35],["T_STRING","decode",35],"(",["T_VARIABLE","$string",35],")",")",";",["T_WHITESPACE","\n  ",35],"}",["T_WHITESPACE","\n\n  ",36],["T_DOC_COMMENT","\/**\n   * Tests our encode settings.\n   *\n   * @covers ::encode\n   *\/",38],["T_WHITESPACE","\n  ",42],["T_PUBLIC","public",43],["T_WHITESPACE"," ",43],["T_FUNCTION","function",43],["T_WHITESPACE"," ",43],["T_STRING","testEncode",43],"(",")",["T_WHITESPACE"," ",43],"{",["T_WHITESPACE","\n    ",43],["T_VARIABLE","$this",44],["T_OBJECT_OPERATOR","->",44],["T_STRING","assertEquals",44],"(",["T_CONSTANT_ENCAPSED_STRING","'---\nfoo:\n  bar: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus sapien ex, venenatis vitae nisi eu, posuere luctus dolor. Nullam convallis\n...\n'",44],",",["T_WHITESPACE"," ",48],["T_STRING","YamlPecl",48],["T_DOUBLE_COLON","::",48],["T_STRING","encode",48],"(","[",["T_CONSTANT_ENCAPSED_STRING","'foo'",48],["T_WHITESPACE"," ",48],["T_DOUBLE_ARROW","=>",48],["T_WHITESPACE"," ",48],"[",["T_CONSTANT_ENCAPSED_STRING","'bar'",48],["T_WHITESPACE"," ",48],["T_DOUBLE_ARROW","=>",48],["T_WHITESPACE"," ",48],["T_CONSTANT_ENCAPSED_STRING","'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus sapien ex, venenatis vitae nisi eu, posuere luctus dolor. Nullam convallis'",48],"]","]",")",")",";",["T_WHITESPACE","\n  ",48],"}",["T_WHITESPACE","\n\n  ",49],["T_DOC_COMMENT","\/**\n   * Tests YAML boolean callback.\n   *\n   * @param string $string\n   *   String value for the YAML boolean.\n   * @param string|bool $expected\n   *   The expected return value.\n   *\n   * @covers ::applyBooleanCallbacks\n   * @dataProvider providerBoolTest\n   *\/",51],["T_WHITESPACE","\n  ",61],["T_PUBLIC","public",62],["T_WHITESPACE"," ",62],["T_FUNCTION","function",62],["T_WHITESPACE"," ",62],["T_STRING","testApplyBooleanCallbacks",62],"(",["T_VARIABLE","$string",62],",",["T_WHITESPACE"," ",62],["T_VARIABLE","$expected",62],")",["T_WHITESPACE"," ",62],"{",["T_WHITESPACE","\n    ",62],["T_VARIABLE","$this",63],["T_OBJECT_OPERATOR","->",63],["T_STRING","assertEquals",63],"(",["T_VARIABLE","$expected",63],",",["T_WHITESPACE"," ",63],["T_STRING","YamlPecl",63],["T_DOUBLE_COLON","::",63],["T_STRING","applyBooleanCallbacks",63],"(",["T_VARIABLE","$string",63],",",["T_WHITESPACE"," ",63],["T_CONSTANT_ENCAPSED_STRING","'bool'",63],",",["T_WHITESPACE"," ",63],["T_STRING","NULL",63],")",")",";",["T_WHITESPACE","\n  ",63],"}",["T_WHITESPACE","\n\n  ",64],["T_DOC_COMMENT","\/**\n   * @covers ::getFileExtension\n   *\/",66],["T_WHITESPACE","\n  ",68],["T_PUBLIC","public",69],["T_WHITESPACE"," ",69],["T_FUNCTION","function",69],["T_WHITESPACE"," ",69],["T_STRING","testGetFileExtension",69],"(",")",["T_WHITESPACE"," ",69],"{",["T_WHITESPACE","\n    ",69],["T_VARIABLE","$this",70],["T_OBJECT_OPERATOR","->",70],["T_STRING","assertEquals",70],"(",["T_CONSTANT_ENCAPSED_STRING","'yml'",70],",",["T_WHITESPACE"," ",70],["T_STRING","YamlPecl",70],["T_DOUBLE_COLON","::",70],["T_STRING","getFileExtension",70],"(",")",")",";",["T_WHITESPACE","\n  ",70],"}",["T_WHITESPACE","\n\n  ",71],["T_DOC_COMMENT","\/**\n   * Tests that invalid YAML throws an exception.\n   *\n   * @covers ::errorHandler\n   * @expectedException \\Drupal\\Component\\Serialization\\Exception\\InvalidDataTypeException\n   *\/",73],["T_WHITESPACE","\n  ",78],["T_PUBLIC","public",79],["T_WHITESPACE"," ",79],["T_FUNCTION","function",79],["T_WHITESPACE"," ",79],["T_STRING","testError",79],"(",")",["T_WHITESPACE"," ",79],"{",["T_WHITESPACE","\n    ",79],["T_STRING","YamlPecl",80],["T_DOUBLE_COLON","::",80],["T_STRING","decode",80],"(",["T_CONSTANT_ENCAPSED_STRING","'foo: [ads'",80],")",";",["T_WHITESPACE","\n  ",80],"}",["T_WHITESPACE","\n\n",81],"}",["T_WHITESPACE","\n",83]]