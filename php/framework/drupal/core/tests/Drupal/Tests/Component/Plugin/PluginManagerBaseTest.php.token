[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Tests",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Component",3],["T_NS_SEPARATOR","\\",3],["T_STRING","Plugin",3],";",["T_WHITESPACE","\n\n",3],["T_USE","use",5],["T_WHITESPACE"," ",5],["T_STRING","Drupal",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Component",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Plugin",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Exception",5],["T_NS_SEPARATOR","\\",5],["T_STRING","PluginNotFoundException",5],";",["T_WHITESPACE","\n",5],["T_USE","use",6],["T_WHITESPACE"," ",6],["T_STRING","Drupal",6],["T_NS_SEPARATOR","\\",6],["T_STRING","Tests",6],["T_NS_SEPARATOR","\\",6],["T_STRING","UnitTestCase",6],";",["T_WHITESPACE","\n\n",6],["T_DOC_COMMENT","\/**\n * @coversDefaultClass \\Drupal\\Component\\Plugin\\PluginManagerBase\n * @group Plugin\n *\/",8],["T_WHITESPACE","\n",11],["T_CLASS","class",12],["T_WHITESPACE"," ",12],["T_STRING","PluginManagerBaseTest",12],["T_WHITESPACE"," ",12],["T_EXTENDS","extends",12],["T_WHITESPACE"," ",12],["T_STRING","UnitTestCase",12],["T_WHITESPACE"," ",12],"{",["T_WHITESPACE","\n\n  ",12],["T_DOC_COMMENT","\/**\n   * A callback method for mocking FactoryInterface objects.\n   *\/",14],["T_WHITESPACE","\n  ",16],["T_PUBLIC","public",17],["T_WHITESPACE"," ",17],["T_FUNCTION","function",17],["T_WHITESPACE"," ",17],["T_STRING","createInstanceCallback",17],"(",")",["T_WHITESPACE"," ",17],"{",["T_WHITESPACE","\n    ",17],["T_VARIABLE","$args",18],["T_WHITESPACE"," ",18],"=",["T_WHITESPACE"," ",18],["T_STRING","func_get_args",18],"(",")",";",["T_WHITESPACE","\n    ",18],["T_VARIABLE","$plugin_id",19],["T_WHITESPACE"," ",19],"=",["T_WHITESPACE"," ",19],["T_VARIABLE","$args",19],"[",["T_LNUMBER","0",19],"]",";",["T_WHITESPACE","\n    ",19],["T_VARIABLE","$configuration",20],["T_WHITESPACE"," ",20],"=",["T_WHITESPACE"," ",20],["T_VARIABLE","$args",20],"[",["T_LNUMBER","1",20],"]",";",["T_WHITESPACE","\n    ",20],["T_IF","if",21],["T_WHITESPACE"," ",21],"(",["T_CONSTANT_ENCAPSED_STRING","'invalid'",21],["T_WHITESPACE"," ",21],["T_IS_EQUAL","==",21],["T_WHITESPACE"," ",21],["T_VARIABLE","$plugin_id",21],")",["T_WHITESPACE"," ",21],"{",["T_WHITESPACE","\n      ",21],["T_THROW","throw",22],["T_WHITESPACE"," ",22],["T_NEW","new",22],["T_WHITESPACE"," ",22],["T_STRING","PluginNotFoundException",22],"(",["T_VARIABLE","$plugin_id",22],")",";",["T_WHITESPACE","\n    ",22],"}",["T_WHITESPACE","\n    ",23],["T_RETURN","return",24],["T_WHITESPACE"," ",24],["T_ARRAY","array",24],"(",["T_WHITESPACE","\n      ",24],["T_CONSTANT_ENCAPSED_STRING","'plugin_id'",25],["T_WHITESPACE"," ",25],["T_DOUBLE_ARROW","=>",25],["T_WHITESPACE"," ",25],["T_VARIABLE","$plugin_id",25],",",["T_WHITESPACE","\n      ",25],["T_CONSTANT_ENCAPSED_STRING","'configuration'",26],["T_WHITESPACE"," ",26],["T_DOUBLE_ARROW","=>",26],["T_WHITESPACE"," ",26],["T_VARIABLE","$configuration",26],",",["T_WHITESPACE","\n    ",26],")",";",["T_WHITESPACE","\n  ",27],"}",["T_WHITESPACE","\n\n  ",28],["T_DOC_COMMENT","\/**\n   * Generates a mocked FactoryInterface object with known properties.\n   *\/",30],["T_WHITESPACE","\n  ",32],["T_PUBLIC","public",33],["T_WHITESPACE"," ",33],["T_FUNCTION","function",33],["T_WHITESPACE"," ",33],["T_STRING","getMockFactoryInterface",33],"(",["T_VARIABLE","$expects_count",33],")",["T_WHITESPACE"," ",33],"{",["T_WHITESPACE","\n    ",33],["T_VARIABLE","$mock_factory",34],["T_WHITESPACE"," ",34],"=",["T_WHITESPACE"," ",34],["T_VARIABLE","$this",34],["T_OBJECT_OPERATOR","->",34],["T_STRING","getMockBuilder",34],"(",["T_CONSTANT_ENCAPSED_STRING","'Drupal\\Component\\Plugin\\Factory\\FactoryInterface'",34],")",["T_WHITESPACE","\n      ",34],["T_OBJECT_OPERATOR","->",35],["T_STRING","setMethods",35],"(",["T_ARRAY","array",35],"(",["T_CONSTANT_ENCAPSED_STRING","'createInstance'",35],")",")",["T_WHITESPACE","\n      ",35],["T_OBJECT_OPERATOR","->",36],["T_STRING","getMockForAbstractClass",36],"(",")",";",["T_WHITESPACE","\n    ",36],["T_VARIABLE","$mock_factory",37],["T_OBJECT_OPERATOR","->",37],["T_STRING","expects",37],"(",["T_VARIABLE","$this",37],["T_OBJECT_OPERATOR","->",37],["T_STRING","exactly",37],"(",["T_VARIABLE","$expects_count",37],")",")",["T_WHITESPACE","\n      ",37],["T_OBJECT_OPERATOR","->",38],["T_STRING","method",38],"(",["T_CONSTANT_ENCAPSED_STRING","'createInstance'",38],")",["T_WHITESPACE","\n      ",38],["T_OBJECT_OPERATOR","->",39],["T_STRING","willReturnCallback",39],"(",["T_ARRAY","array",39],"(",["T_VARIABLE","$this",39],",",["T_WHITESPACE"," ",39],["T_CONSTANT_ENCAPSED_STRING","'createInstanceCallback'",39],")",")",";",["T_WHITESPACE","\n    ",39],["T_RETURN","return",40],["T_WHITESPACE"," ",40],["T_VARIABLE","$mock_factory",40],";",["T_WHITESPACE","\n  ",40],"}",["T_WHITESPACE","\n\n  ",41],["T_DOC_COMMENT","\/**\n   * Tests createInstance() with no fallback methods.\n   *\n   * @covers ::createInstance\n   *\/",43],["T_WHITESPACE","\n  ",47],["T_PUBLIC","public",48],["T_WHITESPACE"," ",48],["T_FUNCTION","function",48],["T_WHITESPACE"," ",48],["T_STRING","testCreateInstance",48],"(",")",["T_WHITESPACE"," ",48],"{",["T_WHITESPACE","\n    ",48],["T_VARIABLE","$manager",49],["T_WHITESPACE"," ",49],"=",["T_WHITESPACE"," ",49],["T_VARIABLE","$this",49],["T_OBJECT_OPERATOR","->",49],["T_STRING","getMockBuilder",49],"(",["T_CONSTANT_ENCAPSED_STRING","'Drupal\\Component\\Plugin\\PluginManagerBase'",49],")",["T_WHITESPACE","\n      ",49],["T_OBJECT_OPERATOR","->",50],["T_STRING","getMockForAbstractClass",50],"(",")",";",["T_WHITESPACE","\n    ",50],["T_COMMENT","\/\/ PluginManagerBase::createInstance() looks for a factory object and then\n",51],["T_WHITESPACE","    ",52],["T_COMMENT","\/\/ calls createInstance() on it. So we have to mock a factory object.\n",52],["T_WHITESPACE","    ",53],["T_VARIABLE","$factory_ref",53],["T_WHITESPACE"," ",53],"=",["T_WHITESPACE"," ",53],["T_NEW","new",53],["T_WHITESPACE"," ",53],["T_NS_SEPARATOR","\\",53],["T_STRING","ReflectionProperty",53],"(",["T_VARIABLE","$manager",53],",",["T_WHITESPACE"," ",53],["T_CONSTANT_ENCAPSED_STRING","'factory'",53],")",";",["T_WHITESPACE","\n    ",53],["T_VARIABLE","$factory_ref",54],["T_OBJECT_OPERATOR","->",54],["T_STRING","setAccessible",54],"(",["T_STRING","TRUE",54],")",";",["T_WHITESPACE","\n    ",54],["T_VARIABLE","$factory_ref",55],["T_OBJECT_OPERATOR","->",55],["T_STRING","setValue",55],"(",["T_VARIABLE","$manager",55],",",["T_WHITESPACE"," ",55],["T_VARIABLE","$this",55],["T_OBJECT_OPERATOR","->",55],["T_STRING","getMockFactoryInterface",55],"(",["T_LNUMBER","1",55],")",")",";",["T_WHITESPACE","\n\n    ",55],["T_COMMENT","\/\/ Finally the test.\n",57],["T_WHITESPACE","    ",58],["T_VARIABLE","$configuration_array",58],["T_WHITESPACE"," ",58],"=",["T_WHITESPACE"," ",58],["T_ARRAY","array",58],"(",["T_CONSTANT_ENCAPSED_STRING","'config'",58],["T_WHITESPACE"," ",58],["T_DOUBLE_ARROW","=>",58],["T_WHITESPACE"," ",58],["T_CONSTANT_ENCAPSED_STRING","'something'",58],")",";",["T_WHITESPACE","\n    ",58],["T_VARIABLE","$result",59],["T_WHITESPACE"," ",59],"=",["T_WHITESPACE"," ",59],["T_VARIABLE","$manager",59],["T_OBJECT_OPERATOR","->",59],["T_STRING","createInstance",59],"(",["T_CONSTANT_ENCAPSED_STRING","'valid'",59],",",["T_WHITESPACE"," ",59],["T_VARIABLE","$configuration_array",59],")",";",["T_WHITESPACE","\n    ",59],["T_VARIABLE","$this",60],["T_OBJECT_OPERATOR","->",60],["T_STRING","assertEquals",60],"(",["T_CONSTANT_ENCAPSED_STRING","'valid'",60],",",["T_WHITESPACE"," ",60],["T_VARIABLE","$result",60],"[",["T_CONSTANT_ENCAPSED_STRING","'plugin_id'",60],"]",")",";",["T_WHITESPACE","\n    ",60],["T_VARIABLE","$this",61],["T_OBJECT_OPERATOR","->",61],["T_STRING","assertArrayEquals",61],"(",["T_VARIABLE","$configuration_array",61],",",["T_WHITESPACE"," ",61],["T_VARIABLE","$result",61],"[",["T_CONSTANT_ENCAPSED_STRING","'configuration'",61],"]",")",";",["T_WHITESPACE","\n  ",61],"}",["T_WHITESPACE","\n\n  ",62],["T_DOC_COMMENT","\/**\n   * Tests createInstance() with a fallback method.\n   *\n   * @covers ::createInstance\n   *\/",64],["T_WHITESPACE","\n  ",68],["T_PUBLIC","public",69],["T_WHITESPACE"," ",69],["T_FUNCTION","function",69],["T_WHITESPACE"," ",69],["T_STRING","testCreateInstanceFallback",69],"(",")",["T_WHITESPACE"," ",69],"{",["T_WHITESPACE","\n    ",69],["T_COMMENT","\/\/ We use our special stub class which extends PluginManagerBase and also\n",70],["T_WHITESPACE","    ",71],["T_COMMENT","\/\/ implements FallbackPluginManagerInterface.\n",71],["T_WHITESPACE","    ",72],["T_VARIABLE","$manager",72],["T_WHITESPACE"," ",72],"=",["T_WHITESPACE"," ",72],["T_NEW","new",72],["T_WHITESPACE"," ",72],["T_STRING","StubFallbackPluginManager",72],"(",")",";",["T_WHITESPACE","\n    ",72],["T_COMMENT","\/\/ Put our stubbed factory on the base object.\n",73],["T_WHITESPACE","    ",74],["T_VARIABLE","$factory_ref",74],["T_WHITESPACE"," ",74],"=",["T_WHITESPACE"," ",74],["T_NEW","new",74],["T_WHITESPACE"," ",74],["T_NS_SEPARATOR","\\",74],["T_STRING","ReflectionProperty",74],"(",["T_VARIABLE","$manager",74],",",["T_WHITESPACE"," ",74],["T_CONSTANT_ENCAPSED_STRING","'factory'",74],")",";",["T_WHITESPACE","\n    ",74],["T_VARIABLE","$factory_ref",75],["T_OBJECT_OPERATOR","->",75],["T_STRING","setAccessible",75],"(",["T_STRING","TRUE",75],")",";",["T_WHITESPACE","\n\n    ",75],["T_COMMENT","\/\/ Set up the configuration array.\n",77],["T_WHITESPACE","    ",78],["T_VARIABLE","$configuration_array",78],["T_WHITESPACE"," ",78],"=",["T_WHITESPACE"," ",78],["T_ARRAY","array",78],"(",["T_CONSTANT_ENCAPSED_STRING","'config'",78],["T_WHITESPACE"," ",78],["T_DOUBLE_ARROW","=>",78],["T_WHITESPACE"," ",78],["T_CONSTANT_ENCAPSED_STRING","'something'",78],")",";",["T_WHITESPACE","\n\n    ",78],["T_COMMENT","\/\/ Test with fallback interface and valid plugin_id.\n",80],["T_WHITESPACE","    ",81],["T_VARIABLE","$factory_ref",81],["T_OBJECT_OPERATOR","->",81],["T_STRING","setValue",81],"(",["T_VARIABLE","$manager",81],",",["T_WHITESPACE"," ",81],["T_VARIABLE","$this",81],["T_OBJECT_OPERATOR","->",81],["T_STRING","getMockFactoryInterface",81],"(",["T_LNUMBER","1",81],")",")",";",["T_WHITESPACE","\n    ",81],["T_VARIABLE","$no_fallback_result",82],["T_WHITESPACE"," ",82],"=",["T_WHITESPACE"," ",82],["T_VARIABLE","$manager",82],["T_OBJECT_OPERATOR","->",82],["T_STRING","createInstance",82],"(",["T_CONSTANT_ENCAPSED_STRING","'valid'",82],",",["T_WHITESPACE"," ",82],["T_VARIABLE","$configuration_array",82],")",";",["T_WHITESPACE","\n    ",82],["T_VARIABLE","$this",83],["T_OBJECT_OPERATOR","->",83],["T_STRING","assertEquals",83],"(",["T_CONSTANT_ENCAPSED_STRING","'valid'",83],",",["T_WHITESPACE"," ",83],["T_VARIABLE","$no_fallback_result",83],"[",["T_CONSTANT_ENCAPSED_STRING","'plugin_id'",83],"]",")",";",["T_WHITESPACE","\n    ",83],["T_VARIABLE","$this",84],["T_OBJECT_OPERATOR","->",84],["T_STRING","assertArrayEquals",84],"(",["T_VARIABLE","$configuration_array",84],",",["T_WHITESPACE"," ",84],["T_VARIABLE","$no_fallback_result",84],"[",["T_CONSTANT_ENCAPSED_STRING","'configuration'",84],"]",")",";",["T_WHITESPACE","\n\n    ",84],["T_COMMENT","\/\/ Test with fallback interface and invalid plugin_id.\n",86],["T_WHITESPACE","    ",87],["T_VARIABLE","$factory_ref",87],["T_OBJECT_OPERATOR","->",87],["T_STRING","setValue",87],"(",["T_VARIABLE","$manager",87],",",["T_WHITESPACE"," ",87],["T_VARIABLE","$this",87],["T_OBJECT_OPERATOR","->",87],["T_STRING","getMockFactoryInterface",87],"(",["T_LNUMBER","2",87],")",")",";",["T_WHITESPACE","\n    ",87],["T_VARIABLE","$fallback_result",88],["T_WHITESPACE"," ",88],"=",["T_WHITESPACE"," ",88],["T_VARIABLE","$manager",88],["T_OBJECT_OPERATOR","->",88],["T_STRING","createInstance",88],"(",["T_CONSTANT_ENCAPSED_STRING","'invalid'",88],",",["T_WHITESPACE"," ",88],["T_VARIABLE","$configuration_array",88],")",";",["T_WHITESPACE","\n    ",88],["T_VARIABLE","$this",89],["T_OBJECT_OPERATOR","->",89],["T_STRING","assertEquals",89],"(",["T_CONSTANT_ENCAPSED_STRING","'invalid_fallback'",89],",",["T_WHITESPACE"," ",89],["T_VARIABLE","$fallback_result",89],"[",["T_CONSTANT_ENCAPSED_STRING","'plugin_id'",89],"]",")",";",["T_WHITESPACE","\n    ",89],["T_VARIABLE","$this",90],["T_OBJECT_OPERATOR","->",90],["T_STRING","assertArrayEquals",90],"(",["T_VARIABLE","$configuration_array",90],",",["T_WHITESPACE"," ",90],["T_VARIABLE","$fallback_result",90],"[",["T_CONSTANT_ENCAPSED_STRING","'configuration'",90],"]",")",";",["T_WHITESPACE","\n  ",90],"}",["T_WHITESPACE","\n\n",91],"}",["T_WHITESPACE","\n",93]]