[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_NAMESPACE","namespace",3],["T_WHITESPACE"," ",3],["T_STRING","Drupal",3],["T_NS_SEPARATOR","\\",3],["T_STRING","FunctionalTests",3],";",["T_WHITESPACE","\n\n",3],["T_USE","use",5],["T_WHITESPACE"," ",5],["T_STRING","Drupal",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Component",5],["T_NS_SEPARATOR","\\",5],["T_STRING","Render",5],["T_NS_SEPARATOR","\\",5],["T_STRING","FormattableMarkup",5],";",["T_WHITESPACE","\n",5],["T_USE","use",6],["T_WHITESPACE"," ",6],["T_STRING","Drupal",6],["T_NS_SEPARATOR","\\",6],["T_STRING","Component",6],["T_NS_SEPARATOR","\\",6],["T_STRING","Utility",6],["T_NS_SEPARATOR","\\",6],["T_STRING","Xss",6],";",["T_WHITESPACE","\n",6],["T_USE","use",7],["T_WHITESPACE"," ",7],["T_STRING","Drupal",7],["T_NS_SEPARATOR","\\",7],["T_STRING","KernelTests",7],["T_NS_SEPARATOR","\\",7],["T_STRING","AssertLegacyTrait",7],["T_WHITESPACE"," ",7],["T_AS","as",7],["T_WHITESPACE"," ",7],["T_STRING","BaseAssertLegacyTrait",7],";",["T_WHITESPACE","\n\n",7],["T_DOC_COMMENT","\/**\n * Provides convenience methods for assertions in browser tests.\n *\n * @deprecated Scheduled for removal in Drupal 9.0.0. Use the methods on\n *   \\Drupal\\Tests\\WebAssert instead, for example\n * @code\n *    $this->assertSession()->statusCodeEquals(200);\n * @endcode\n *\/",9],["T_WHITESPACE","\n",17],["T_TRAIT","trait",18],["T_WHITESPACE"," ",18],["T_STRING","AssertLegacyTrait",18],["T_WHITESPACE"," ",18],"{",["T_WHITESPACE","\n\n  ",18],["T_USE","use",20],["T_WHITESPACE"," ",20],["T_STRING","BaseAssertLegacyTrait",20],";",["T_WHITESPACE","\n\n  ",20],["T_DOC_COMMENT","\/**\n   * Asserts that the element with the given CSS selector is present.\n   *\n   * @param string $css_selector\n   *   The CSS selector identifying the element to check.\n   *\n   * @deprecated Scheduled for removal in Drupal 9.0.0.\n   *   Use $this->assertSession()->elementExists() instead.\n   *\/",22],["T_WHITESPACE","\n  ",30],["T_PROTECTED","protected",31],["T_WHITESPACE"," ",31],["T_FUNCTION","function",31],["T_WHITESPACE"," ",31],["T_STRING","assertElementPresent",31],"(",["T_VARIABLE","$css_selector",31],")",["T_WHITESPACE"," ",31],"{",["T_WHITESPACE","\n    ",31],["T_VARIABLE","$this",32],["T_OBJECT_OPERATOR","->",32],["T_STRING","assertSession",32],"(",")",["T_OBJECT_OPERATOR","->",32],["T_STRING","elementExists",32],"(",["T_CONSTANT_ENCAPSED_STRING","'css'",32],",",["T_WHITESPACE"," ",32],["T_VARIABLE","$css_selector",32],")",";",["T_WHITESPACE","\n  ",32],"}",["T_WHITESPACE","\n\n  ",33],["T_DOC_COMMENT","\/**\n   * Asserts that the element with the given CSS selector is not present.\n   *\n   * @param string $css_selector\n   *   The CSS selector identifying the element to check.\n   *\n   * @deprecated Scheduled for removal in Drupal 9.0.0.\n   *   Use $this->assertSession()->elementNotExists() instead.\n   *\/",35],["T_WHITESPACE","\n  ",43],["T_PROTECTED","protected",44],["T_WHITESPACE"," ",44],["T_FUNCTION","function",44],["T_WHITESPACE"," ",44],["T_STRING","assertElementNotPresent",44],"(",["T_VARIABLE","$css_selector",44],")",["T_WHITESPACE"," ",44],"{",["T_WHITESPACE","\n    ",44],["T_VARIABLE","$this",45],["T_OBJECT_OPERATOR","->",45],["T_STRING","assertSession",45],"(",")",["T_OBJECT_OPERATOR","->",45],["T_STRING","elementNotExists",45],"(",["T_CONSTANT_ENCAPSED_STRING","'css'",45],",",["T_WHITESPACE"," ",45],["T_VARIABLE","$css_selector",45],")",";",["T_WHITESPACE","\n  ",45],"}",["T_WHITESPACE","\n\n  ",46],["T_DOC_COMMENT","\/**\n   * Passes if the page (with HTML stripped) contains the text.\n   *\n   * Note that stripping HTML tags also removes their attributes, such as\n   * the values of text fields.\n   *\n   * @param string $text\n   *   Plain text to look for.\n   *\n   * @deprecated Scheduled for removal in Drupal 9.0.0.\n   *   Use instead:\n   *     - $this->assertSession()->responseContains() for non-HTML responses,\n   *       like XML or Json.\n   *     - $this->assertSession()->pageTextContains() for HTML responses. Unlike\n   *       the deprecated assertText(), the passed text should be HTML decoded,\n   *       exactly as a human sees it in the browser.\n   *\/",48],["T_WHITESPACE","\n  ",64],["T_PROTECTED","protected",65],["T_WHITESPACE"," ",65],["T_FUNCTION","function",65],["T_WHITESPACE"," ",65],["T_STRING","assertText",65],"(",["T_VARIABLE","$text",65],")",["T_WHITESPACE"," ",65],"{",["T_WHITESPACE","\n    ",65],["T_COMMENT","\/\/ Cast MarkupInterface to string.\n",66],["T_WHITESPACE","    ",67],["T_VARIABLE","$text",67],["T_WHITESPACE"," ",67],"=",["T_WHITESPACE"," ",67],["T_STRING_CAST","(string)",67],["T_WHITESPACE"," ",67],["T_VARIABLE","$text",67],";",["T_WHITESPACE","\n\n    ",67],["T_VARIABLE","$content_type",69],["T_WHITESPACE"," ",69],"=",["T_WHITESPACE"," ",69],["T_VARIABLE","$this",69],["T_OBJECT_OPERATOR","->",69],["T_STRING","getSession",69],"(",")",["T_OBJECT_OPERATOR","->",69],["T_STRING","getResponseHeader",69],"(",["T_CONSTANT_ENCAPSED_STRING","'Content-type'",69],")",";",["T_WHITESPACE","\n    ",69],["T_COMMENT","\/\/ In case of a Non-HTML response (example: XML) check the original\n",70],["T_WHITESPACE","    ",71],["T_COMMENT","\/\/ response.\n",71],["T_WHITESPACE","    ",72],["T_IF","if",72],["T_WHITESPACE"," ",72],"(",["T_STRING","strpos",72],"(",["T_VARIABLE","$content_type",72],",",["T_WHITESPACE"," ",72],["T_CONSTANT_ENCAPSED_STRING","'html'",72],")",["T_WHITESPACE"," ",72],["T_IS_IDENTICAL","===",72],["T_WHITESPACE"," ",72],["T_STRING","FALSE",72],")",["T_WHITESPACE"," ",72],"{",["T_WHITESPACE","\n      ",72],["T_VARIABLE","$this",73],["T_OBJECT_OPERATOR","->",73],["T_STRING","assertSession",73],"(",")",["T_OBJECT_OPERATOR","->",73],["T_STRING","responseContains",73],"(",["T_VARIABLE","$text",73],")",";",["T_WHITESPACE","\n    ",73],"}",["T_WHITESPACE","\n    ",74],["T_ELSE","else",75],["T_WHITESPACE"," ",75],"{",["T_WHITESPACE","\n      ",75],["T_VARIABLE","$this",76],["T_OBJECT_OPERATOR","->",76],["T_STRING","assertTextHelper",76],"(",["T_VARIABLE","$text",76],",",["T_WHITESPACE"," ",76],["T_STRING","FALSE",76],")",";",["T_WHITESPACE","\n    ",76],"}",["T_WHITESPACE","\n  ",77],"}",["T_WHITESPACE","\n\n  ",78],["T_DOC_COMMENT","\/**\n   * Passes if the page (with HTML stripped) does not contains the text.\n   *\n   * Note that stripping HTML tags also removes their attributes, such as\n   * the values of text fields.\n   *\n   * @param string $text\n   *   Plain text to look for.\n   *\n   * @deprecated Scheduled for removal in Drupal 9.0.0.\n   *   Use instead:\n   *     - $this->assertSession()->responseNotContains() for non-HTML responses,\n   *       like XML or Json.\n   *     - $this->assertSession()->pageTextNotContains() for HTML responses.\n   *       Unlike the deprecated assertNoText(), the passed text should be HTML\n   *       decoded, exactly as a human sees it in the browser.\n   *\/",80],["T_WHITESPACE","\n  ",96],["T_PROTECTED","protected",97],["T_WHITESPACE"," ",97],["T_FUNCTION","function",97],["T_WHITESPACE"," ",97],["T_STRING","assertNoText",97],"(",["T_VARIABLE","$text",97],")",["T_WHITESPACE"," ",97],"{",["T_WHITESPACE","\n    ",97],["T_COMMENT","\/\/ Cast MarkupInterface to string.\n",98],["T_WHITESPACE","    ",99],["T_VARIABLE","$text",99],["T_WHITESPACE"," ",99],"=",["T_WHITESPACE"," ",99],["T_STRING_CAST","(string)",99],["T_WHITESPACE"," ",99],["T_VARIABLE","$text",99],";",["T_WHITESPACE","\n\n    ",99],["T_VARIABLE","$content_type",101],["T_WHITESPACE"," ",101],"=",["T_WHITESPACE"," ",101],["T_VARIABLE","$this",101],["T_OBJECT_OPERATOR","->",101],["T_STRING","getSession",101],"(",")",["T_OBJECT_OPERATOR","->",101],["T_STRING","getResponseHeader",101],"(",["T_CONSTANT_ENCAPSED_STRING","'Content-type'",101],")",";",["T_WHITESPACE","\n    ",101],["T_COMMENT","\/\/ In case of a Non-HTML response (example: XML) check the original\n",102],["T_WHITESPACE","    ",103],["T_COMMENT","\/\/ response.\n",103],["T_WHITESPACE","    ",104],["T_IF","if",104],["T_WHITESPACE"," ",104],"(",["T_STRING","strpos",104],"(",["T_VARIABLE","$content_type",104],",",["T_WHITESPACE"," ",104],["T_CONSTANT_ENCAPSED_STRING","'html'",104],")",["T_WHITESPACE"," ",104],["T_IS_IDENTICAL","===",104],["T_WHITESPACE"," ",104],["T_STRING","FALSE",104],")",["T_WHITESPACE"," ",104],"{",["T_WHITESPACE","\n      ",104],["T_VARIABLE","$this",105],["T_OBJECT_OPERATOR","->",105],["T_STRING","assertSession",105],"(",")",["T_OBJECT_OPERATOR","->",105],["T_STRING","responseNotContains",105],"(",["T_VARIABLE","$text",105],")",";",["T_WHITESPACE","\n    ",105],"}",["T_WHITESPACE","\n    ",106],["T_ELSE","else",107],["T_WHITESPACE"," ",107],"{",["T_WHITESPACE","\n      ",107],["T_VARIABLE","$this",108],["T_OBJECT_OPERATOR","->",108],["T_STRING","assertTextHelper",108],"(",["T_VARIABLE","$text",108],")",";",["T_WHITESPACE","\n    ",108],"}",["T_WHITESPACE","\n  ",109],"}",["T_WHITESPACE","\n\n  ",110],["T_DOC_COMMENT","\/**\n   * Helper for assertText and assertNoText.\n   *\n   * @param string $text\n   *   Plain text to look for.\n   * @param bool $not_exists\n   *   (optional) TRUE if this text should not exist, FALSE if it should.\n   *   Defaults to TRUE.\n   *\n   * @return bool\n   *   TRUE on pass, FALSE on fail.\n   *\/",112],["T_WHITESPACE","\n  ",123],["T_PROTECTED","protected",124],["T_WHITESPACE"," ",124],["T_FUNCTION","function",124],["T_WHITESPACE"," ",124],["T_STRING","assertTextHelper",124],"(",["T_VARIABLE","$text",124],",",["T_WHITESPACE"," ",124],["T_VARIABLE","$not_exists",124],["T_WHITESPACE"," ",124],"=",["T_WHITESPACE"," ",124],["T_STRING","TRUE",124],")",["T_WHITESPACE"," ",124],"{",["T_WHITESPACE","\n    ",124],["T_VARIABLE","$args",125],["T_WHITESPACE"," ",125],"=",["T_WHITESPACE"," ",125],"[",["T_CONSTANT_ENCAPSED_STRING","'@text'",125],["T_WHITESPACE"," ",125],["T_DOUBLE_ARROW","=>",125],["T_WHITESPACE"," ",125],["T_VARIABLE","$text",125],"]",";",["T_WHITESPACE","\n    ",125],["T_VARIABLE","$message",126],["T_WHITESPACE"," ",126],"=",["T_WHITESPACE"," ",126],["T_VARIABLE","$not_exists",126],["T_WHITESPACE"," ",126],"?",["T_WHITESPACE"," ",126],["T_NEW","new",126],["T_WHITESPACE"," ",126],["T_STRING","FormattableMarkup",126],"(",["T_CONSTANT_ENCAPSED_STRING","'\"@text\" not found'",126],",",["T_WHITESPACE"," ",126],["T_VARIABLE","$args",126],")",["T_WHITESPACE"," ",126],":",["T_WHITESPACE"," ",126],["T_NEW","new",126],["T_WHITESPACE"," ",126],["T_STRING","FormattableMarkup",126],"(",["T_CONSTANT_ENCAPSED_STRING","'\"@text\" found'",126],",",["T_WHITESPACE"," ",126],["T_VARIABLE","$args",126],")",";",["T_WHITESPACE","\n\n    ",126],["T_VARIABLE","$raw_content",128],["T_WHITESPACE"," ",128],"=",["T_WHITESPACE"," ",128],["T_VARIABLE","$this",128],["T_OBJECT_OPERATOR","->",128],["T_STRING","getSession",128],"(",")",["T_OBJECT_OPERATOR","->",128],["T_STRING","getPage",128],"(",")",["T_OBJECT_OPERATOR","->",128],["T_STRING","getContent",128],"(",")",";",["T_WHITESPACE","\n    ",128],["T_COMMENT","\/\/ Trying to simulate what the user sees, given that it removes all text\n",129],["T_WHITESPACE","    ",130],["T_COMMENT","\/\/ inside the head tags, removes inline Javascript, fix all HTML entities,\n",130],["T_WHITESPACE","    ",131],["T_COMMENT","\/\/ removes dangerous protocols and filtering out all HTML tags, as they are\n",131],["T_WHITESPACE","    ",132],["T_COMMENT","\/\/ not visible in a normal browser.\n",132],["T_WHITESPACE","    ",133],["T_VARIABLE","$raw_content",133],["T_WHITESPACE"," ",133],"=",["T_WHITESPACE"," ",133],["T_STRING","preg_replace",133],"(",["T_CONSTANT_ENCAPSED_STRING","'@<head>(.+?)<\/head>@si'",133],",",["T_WHITESPACE"," ",133],["T_CONSTANT_ENCAPSED_STRING","''",133],",",["T_WHITESPACE"," ",133],["T_VARIABLE","$raw_content",133],")",";",["T_WHITESPACE","\n    ",133],["T_VARIABLE","$page_text",134],["T_WHITESPACE"," ",134],"=",["T_WHITESPACE"," ",134],["T_STRING","Xss",134],["T_DOUBLE_COLON","::",134],["T_STRING","filter",134],"(",["T_VARIABLE","$raw_content",134],",",["T_WHITESPACE"," ",134],"[","]",")",";",["T_WHITESPACE","\n\n    ",134],["T_VARIABLE","$actual",136],["T_WHITESPACE"," ",136],"=",["T_WHITESPACE"," ",136],["T_VARIABLE","$not_exists",136],["T_WHITESPACE"," ",136],["T_IS_EQUAL","==",136],["T_WHITESPACE"," ",136],"(",["T_STRING","strpos",136],"(",["T_VARIABLE","$page_text",136],",",["T_WHITESPACE"," ",136],["T_STRING_CAST","(string)",136],["T_WHITESPACE"," ",136],["T_VARIABLE","$text",136],")",["T_WHITESPACE"," ",136],["T_IS_IDENTICAL","===",136],["T_WHITESPACE"," ",136],["T_STRING","FALSE",136],")",";",["T_WHITESPACE","\n    ",136],["T_VARIABLE","$this",137],["T_OBJECT_OPERATOR","->",137],["T_STRING","assertTrue",137],"(",["T_VARIABLE","$actual",137],",",["T_WHITESPACE"," ",137],["T_VARIABLE","$message",137],")",";",["T_WHITESPACE","\n\n    ",137],["T_RETURN","return",139],["T_WHITESPACE"," ",139],["T_VARIABLE","$actual",139],";",["T_WHITESPACE","\n  ",139],"}",["T_WHITESPACE","\n\n  ",140],["T_DOC_COMMENT","\/**\n   * Passes if the text is found ONLY ONCE on the text version of the page.\n   *\n   * The text version is the equivalent of what a user would see when viewing\n   * through a web browser. In other words the HTML has been filtered out of\n   * the contents.\n   *\n   * @param string|\\Drupal\\Component\\Render\\MarkupInterface $text\n   *   Plain text to look for.\n   * @param string $message\n   *   (optional) A message to display with the assertion. Do not translate\n   *   messages with t(). If left blank, a default message will be displayed.\n   *\n   * @deprecated Scheduled for removal in Drupal 9.0.0.\n   *   Use $this->getSession()->getPage()->getText() and substr_count() instead.\n   *\/",142],["T_WHITESPACE","\n  ",157],["T_PROTECTED","protected",158],["T_WHITESPACE"," ",158],["T_FUNCTION","function",158],["T_WHITESPACE"," ",158],["T_STRING","assertUniqueText",158],"(",["T_VARIABLE","$text",158],",",["T_WHITESPACE"," ",158],["T_VARIABLE","$message",158],["T_WHITESPACE"," ",158],"=",["T_WHITESPACE"," ",158],["T_STRING","NULL",158],")",["T_WHITESPACE"," ",158],"{",["T_WHITESPACE","\n    ",158],["T_COMMENT","\/\/ Cast MarkupInterface objects to string.\n",159],["T_WHITESPACE","    ",160],["T_VARIABLE","$text",160],["T_WHITESPACE"," ",160],"=",["T_WHITESPACE"," ",160],["T_STRING_CAST","(string)",160],["T_WHITESPACE"," ",160],["T_VARIABLE","$text",160],";",["T_WHITESPACE","\n\n    ",160],["T_VARIABLE","$message",162],["T_WHITESPACE"," ",162],"=",["T_WHITESPACE"," ",162],["T_VARIABLE","$message",162],["T_WHITESPACE"," ",162],"?",":",["T_WHITESPACE"," ",162],"\"",["T_ENCAPSED_AND_WHITESPACE","'",162],["T_VARIABLE","$text",162],["T_ENCAPSED_AND_WHITESPACE","' found only once on the page",162],"\"",";",["T_WHITESPACE","\n    ",162],["T_VARIABLE","$page_text",163],["T_WHITESPACE"," ",163],"=",["T_WHITESPACE"," ",163],["T_VARIABLE","$this",163],["T_OBJECT_OPERATOR","->",163],["T_STRING","getSession",163],"(",")",["T_OBJECT_OPERATOR","->",163],["T_STRING","getPage",163],"(",")",["T_OBJECT_OPERATOR","->",163],["T_STRING","getText",163],"(",")",";",["T_WHITESPACE","\n    ",163],["T_VARIABLE","$nr_found",164],["T_WHITESPACE"," ",164],"=",["T_WHITESPACE"," ",164],["T_STRING","substr_count",164],"(",["T_VARIABLE","$page_text",164],",",["T_WHITESPACE"," ",164],["T_VARIABLE","$text",164],")",";",["T_WHITESPACE","\n    ",164],["T_VARIABLE","$this",165],["T_OBJECT_OPERATOR","->",165],["T_STRING","assertSame",165],"(",["T_LNUMBER","1",165],",",["T_WHITESPACE"," ",165],["T_VARIABLE","$nr_found",165],",",["T_WHITESPACE"," ",165],["T_VARIABLE","$message",165],")",";",["T_WHITESPACE","\n  ",165],"}",["T_WHITESPACE","\n\n  ",166],["T_DOC_COMMENT","\/**\n   * Passes if the text is found MORE THAN ONCE on the text version of the page.\n   *\n   * The text version is the equivalent of what a user would see when viewing\n   * through a web browser. In other words the HTML has been filtered out of\n   * the contents.\n   *\n   * @param string|\\Drupal\\Component\\Render\\MarkupInterface $text\n   *   Plain text to look for.\n   * @param string $message\n   *   (optional) A message to display with the assertion. Do not translate\n   *   messages with t(). If left blank, a default message will be displayed.\n   *\n   * @deprecated Scheduled for removal in Drupal 9.0.0.\n   *   Use $this->getSession()->getPage()->getText() and substr_count() instead.\n   *\/",168],["T_WHITESPACE","\n  ",183],["T_PROTECTED","protected",184],["T_WHITESPACE"," ",184],["T_FUNCTION","function",184],["T_WHITESPACE"," ",184],["T_STRING","assertNoUniqueText",184],"(",["T_VARIABLE","$text",184],",",["T_WHITESPACE"," ",184],["T_VARIABLE","$message",184],["T_WHITESPACE"," ",184],"=",["T_WHITESPACE"," ",184],["T_CONSTANT_ENCAPSED_STRING","''",184],")",["T_WHITESPACE"," ",184],"{",["T_WHITESPACE","\n    ",184],["T_COMMENT","\/\/ Cast MarkupInterface objects to string.\n",185],["T_WHITESPACE","    ",186],["T_VARIABLE","$text",186],["T_WHITESPACE"," ",186],"=",["T_WHITESPACE"," ",186],["T_STRING_CAST","(string)",186],["T_WHITESPACE"," ",186],["T_VARIABLE","$text",186],";",["T_WHITESPACE","\n\n    ",186],["T_VARIABLE","$message",188],["T_WHITESPACE"," ",188],"=",["T_WHITESPACE"," ",188],["T_VARIABLE","$message",188],["T_WHITESPACE"," ",188],"?",":",["T_WHITESPACE"," ",188],"\"",["T_ENCAPSED_AND_WHITESPACE","'",188],["T_VARIABLE","$text",188],["T_ENCAPSED_AND_WHITESPACE","' found more than once on the page",188],"\"",";",["T_WHITESPACE","\n    ",188],["T_VARIABLE","$page_text",189],["T_WHITESPACE"," ",189],"=",["T_WHITESPACE"," ",189],["T_VARIABLE","$this",189],["T_OBJECT_OPERATOR","->",189],["T_STRING","getSession",189],"(",")",["T_OBJECT_OPERATOR","->",189],["T_STRING","getPage",189],"(",")",["T_OBJECT_OPERATOR","->",189],["T_STRING","getText",189],"(",")",";",["T_WHITESPACE","\n    ",189],["T_VARIABLE","$nr_found",190],["T_WHITESPACE"," ",190],"=",["T_WHITESPACE"," ",190],["T_STRING","substr_count",190],"(",["T_VARIABLE","$page_text",190],",",["T_WHITESPACE"," ",190],["T_VARIABLE","$text",190],")",";",["T_WHITESPACE","\n    ",190],["T_VARIABLE","$this",191],["T_OBJECT_OPERATOR","->",191],["T_STRING","assertGreaterThan",191],"(",["T_LNUMBER","1",191],",",["T_WHITESPACE"," ",191],["T_VARIABLE","$nr_found",191],",",["T_WHITESPACE"," ",191],["T_VARIABLE","$message",191],")",";",["T_WHITESPACE","\n  ",191],"}",["T_WHITESPACE","\n\n  ",192],["T_DOC_COMMENT","\/**\n   * Asserts the page responds with the specified response code.\n   *\n   * @param int $code\n   *   Response code. For example 200 is a successful page request. For a list\n   *   of all codes see http:\/\/www.w3.org\/Protocols\/rfc2616\/rfc2616-sec10.html.\n   *\n   * @deprecated Scheduled for removal in Drupal 9.0.0.\n   *   Use $this->assertSession()->statusCodeEquals() instead.\n   *\/",194],["T_WHITESPACE","\n  ",203],["T_PROTECTED","protected",204],["T_WHITESPACE"," ",204],["T_FUNCTION","function",204],["T_WHITESPACE"," ",204],["T_STRING","assertResponse",204],"(",["T_VARIABLE","$code",204],")",["T_WHITESPACE"," ",204],"{",["T_WHITESPACE","\n    ",204],["T_VARIABLE","$this",205],["T_OBJECT_OPERATOR","->",205],["T_STRING","assertSession",205],"(",")",["T_OBJECT_OPERATOR","->",205],["T_STRING","statusCodeEquals",205],"(",["T_VARIABLE","$code",205],")",";",["T_WHITESPACE","\n  ",205],"}",["T_WHITESPACE","\n\n  ",206],["T_DOC_COMMENT","\/**\n   * Asserts that a field exists with the given name and value.\n   *\n   * @param string $name\n   *   Name of field to assert.\n   * @param string $value\n   *   (optional) Value of the field to assert. You may pass in NULL (default)\n   *   to skip checking the actual value, while still checking that the field\n   *   exists.\n   *\n   * @deprecated Scheduled for removal in Drupal 9.0.0.\n   *   Use $this->assertSession()->fieldExists() or\n   *   $this->assertSession()->fieldValueEquals() instead.\n   *\/",208],["T_WHITESPACE","\n  ",221],["T_PROTECTED","protected",222],["T_WHITESPACE"," ",222],["T_FUNCTION","function",222],["T_WHITESPACE"," ",222],["T_STRING","assertFieldByName",222],"(",["T_VARIABLE","$name",222],",",["T_WHITESPACE"," ",222],["T_VARIABLE","$value",222],["T_WHITESPACE"," ",222],"=",["T_WHITESPACE"," ",222],["T_STRING","NULL",222],")",["T_WHITESPACE"," ",222],"{",["T_WHITESPACE","\n    ",222],["T_VARIABLE","$this",223],["T_OBJECT_OPERATOR","->",223],["T_STRING","assertSession",223],"(",")",["T_OBJECT_OPERATOR","->",223],["T_STRING","fieldExists",223],"(",["T_VARIABLE","$name",223],")",";",["T_WHITESPACE","\n    ",223],["T_IF","if",224],["T_WHITESPACE"," ",224],"(",["T_VARIABLE","$value",224],["T_WHITESPACE"," ",224],["T_IS_NOT_IDENTICAL","!==",224],["T_WHITESPACE"," ",224],["T_STRING","NULL",224],")",["T_WHITESPACE"," ",224],"{",["T_WHITESPACE","\n      ",224],["T_VARIABLE","$this",225],["T_OBJECT_OPERATOR","->",225],["T_STRING","assertSession",225],"(",")",["T_OBJECT_OPERATOR","->",225],["T_STRING","fieldValueEquals",225],"(",["T_VARIABLE","$name",225],",",["T_WHITESPACE"," ",225],["T_STRING_CAST","(string)",225],["T_WHITESPACE"," ",225],["T_VARIABLE","$value",225],")",";",["T_WHITESPACE","\n    ",225],"}",["T_WHITESPACE","\n  ",226],"}",["T_WHITESPACE","\n\n  ",227],["T_DOC_COMMENT","\/**\n   * Asserts that a field exists with the given name and value.\n   *\n   * @param string $name\n   *   Name of field to assert.\n   * @param string $value\n   *   (optional) Value of the field to assert. You may pass in NULL (default)\n   *   to skip checking the actual value, while still checking that the field\n   *   exists.\n   *\n   * @deprecated Scheduled for removal in Drupal 9.0.0.\n   *   Use $this->assertSession()->fieldNotExists() or\n   *   $this->assertSession()->fieldValueNotEquals() instead.\n   *\/",229],["T_WHITESPACE","\n  ",242],["T_PROTECTED","protected",243],["T_WHITESPACE"," ",243],["T_FUNCTION","function",243],["T_WHITESPACE"," ",243],["T_STRING","assertNoFieldByName",243],"(",["T_VARIABLE","$name",243],",",["T_WHITESPACE"," ",243],["T_VARIABLE","$value",243],["T_WHITESPACE"," ",243],"=",["T_WHITESPACE"," ",243],["T_STRING","NULL",243],")",["T_WHITESPACE"," ",243],"{",["T_WHITESPACE","\n    ",243],["T_VARIABLE","$this",244],["T_OBJECT_OPERATOR","->",244],["T_STRING","assertSession",244],"(",")",["T_OBJECT_OPERATOR","->",244],["T_STRING","fieldNotExists",244],"(",["T_VARIABLE","$name",244],")",";",["T_WHITESPACE","\n    ",244],["T_IF","if",245],["T_WHITESPACE"," ",245],"(",["T_VARIABLE","$value",245],["T_WHITESPACE"," ",245],["T_IS_NOT_IDENTICAL","!==",245],["T_WHITESPACE"," ",245],["T_STRING","NULL",245],")",["T_WHITESPACE"," ",245],"{",["T_WHITESPACE","\n      ",245],["T_VARIABLE","$this",246],["T_OBJECT_OPERATOR","->",246],["T_STRING","assertSession",246],"(",")",["T_OBJECT_OPERATOR","->",246],["T_STRING","fieldValueNotEquals",246],"(",["T_VARIABLE","$name",246],",",["T_WHITESPACE"," ",246],["T_STRING_CAST","(string)",246],["T_WHITESPACE"," ",246],["T_VARIABLE","$value",246],")",";",["T_WHITESPACE","\n    ",246],"}",["T_WHITESPACE","\n  ",247],"}",["T_WHITESPACE","\n\n  ",248],["T_DOC_COMMENT","\/**\n   * Asserts that a field exists with the given ID and value.\n   *\n   * @param string $id\n   *   ID of field to assert.\n   * @param string|\\Drupal\\Component\\Render\\MarkupInterface $value\n   *   (optional) Value for the field to assert. You may pass in NULL to skip\n   *   checking the value, while still checking that the field exists.\n   *   However, the default value ('') asserts that the field value is an empty\n   *   string.\n   *\n   * @deprecated Scheduled for removal in Drupal 9.0.0.\n   *   Use $this->assertSession()->fieldExists() or\n   *   $this->assertSession()->fieldValueEquals() instead.\n   *\/",250],["T_WHITESPACE","\n  ",264],["T_PROTECTED","protected",265],["T_WHITESPACE"," ",265],["T_FUNCTION","function",265],["T_WHITESPACE"," ",265],["T_STRING","assertFieldById",265],"(",["T_VARIABLE","$id",265],",",["T_WHITESPACE"," ",265],["T_VARIABLE","$value",265],["T_WHITESPACE"," ",265],"=",["T_WHITESPACE"," ",265],["T_STRING","NULL",265],")",["T_WHITESPACE"," ",265],"{",["T_WHITESPACE","\n    ",265],["T_VARIABLE","$this",266],["T_OBJECT_OPERATOR","->",266],["T_STRING","assertFieldByName",266],"(",["T_VARIABLE","$id",266],",",["T_WHITESPACE"," ",266],["T_VARIABLE","$value",266],")",";",["T_WHITESPACE","\n  ",266],"}",["T_WHITESPACE","\n\n  ",267],["T_DOC_COMMENT","\/**\n   * Asserts that a field exists with the given name or ID.\n   *\n   * @param string $field\n   *   Name or ID of field to assert.\n   *\n   * @deprecated Scheduled for removal in Drupal 9.0.0.\n   *   Use $this->assertSession()->fieldExists() instead.\n   *\/",269],["T_WHITESPACE","\n  ",277],["T_PROTECTED","protected",278],["T_WHITESPACE"," ",278],["T_FUNCTION","function",278],["T_WHITESPACE"," ",278],["T_STRING","assertField",278],"(",["T_VARIABLE","$field",278],")",["T_WHITESPACE"," ",278],"{",["T_WHITESPACE","\n    ",278],["T_VARIABLE","$this",279],["T_OBJECT_OPERATOR","->",279],["T_STRING","assertSession",279],"(",")",["T_OBJECT_OPERATOR","->",279],["T_STRING","fieldExists",279],"(",["T_VARIABLE","$field",279],")",";",["T_WHITESPACE","\n  ",279],"}",["T_WHITESPACE","\n\n  ",280],["T_DOC_COMMENT","\/**\n   * Asserts that a field exists with the given name or ID does NOT exist.\n   *\n   * @param string $field\n   *   Name or ID of field to assert.\n   *\n   * @deprecated Scheduled for removal in Drupal 9.0.0.\n   *   Use $this->assertSession()->fieldNotExists() instead.\n   *\/",282],["T_WHITESPACE","\n  ",290],["T_PROTECTED","protected",291],["T_WHITESPACE"," ",291],["T_FUNCTION","function",291],["T_WHITESPACE"," ",291],["T_STRING","assertNoField",291],"(",["T_VARIABLE","$field",291],")",["T_WHITESPACE"," ",291],"{",["T_WHITESPACE","\n    ",291],["T_VARIABLE","$this",292],["T_OBJECT_OPERATOR","->",292],["T_STRING","assertSession",292],"(",")",["T_OBJECT_OPERATOR","->",292],["T_STRING","fieldNotExists",292],"(",["T_VARIABLE","$field",292],")",";",["T_WHITESPACE","\n  ",292],"}",["T_WHITESPACE","\n\n  ",293],["T_DOC_COMMENT","\/**\n   * Passes if the raw text IS found on the loaded page, fail otherwise.\n   *\n   * Raw text refers to the raw HTML that the page generated.\n   *\n   * @param string $raw\n   *   Raw (HTML) string to look for.\n   *\n   * @deprecated Scheduled for removal in Drupal 9.0.0.\n   *   Use $this->assertSession()->responseContains() instead.\n   *\/",295],["T_WHITESPACE","\n  ",305],["T_PROTECTED","protected",306],["T_WHITESPACE"," ",306],["T_FUNCTION","function",306],["T_WHITESPACE"," ",306],["T_STRING","assertRaw",306],"(",["T_VARIABLE","$raw",306],")",["T_WHITESPACE"," ",306],"{",["T_WHITESPACE","\n    ",306],["T_VARIABLE","$this",307],["T_OBJECT_OPERATOR","->",307],["T_STRING","assertSession",307],"(",")",["T_OBJECT_OPERATOR","->",307],["T_STRING","responseContains",307],"(",["T_VARIABLE","$raw",307],")",";",["T_WHITESPACE","\n  ",307],"}",["T_WHITESPACE","\n\n  ",308],["T_DOC_COMMENT","\/**\n   * Passes if the raw text IS not found on the loaded page, fail otherwise.\n   *\n   * Raw text refers to the raw HTML that the page generated.\n   *\n   * @param string $raw\n   *   Raw (HTML) string to look for.\n   *\n   * @deprecated Scheduled for removal in Drupal 9.0.0.\n   *   Use $this->assertSession()->responseNotContains() instead.\n   *\/",310],["T_WHITESPACE","\n  ",320],["T_PROTECTED","protected",321],["T_WHITESPACE"," ",321],["T_FUNCTION","function",321],["T_WHITESPACE"," ",321],["T_STRING","assertNoRaw",321],"(",["T_VARIABLE","$raw",321],")",["T_WHITESPACE"," ",321],"{",["T_WHITESPACE","\n    ",321],["T_VARIABLE","$this",322],["T_OBJECT_OPERATOR","->",322],["T_STRING","assertSession",322],"(",")",["T_OBJECT_OPERATOR","->",322],["T_STRING","responseNotContains",322],"(",["T_VARIABLE","$raw",322],")",";",["T_WHITESPACE","\n  ",322],"}",["T_WHITESPACE","\n\n  ",323],["T_DOC_COMMENT","\/**\n   * Pass if the page title is the given string.\n   *\n   * @param string $expected_title\n   *   The string the page title should be.\n   *\n   * @deprecated Scheduled for removal in Drupal 9.0.0.\n   *   Use $this->assertSession()->titleEquals() instead.\n   *\/",325],["T_WHITESPACE","\n  ",333],["T_PROTECTED","protected",334],["T_WHITESPACE"," ",334],["T_FUNCTION","function",334],["T_WHITESPACE"," ",334],["T_STRING","assertTitle",334],"(",["T_VARIABLE","$expected_title",334],")",["T_WHITESPACE"," ",334],"{",["T_WHITESPACE","\n    ",334],["T_COMMENT","\/\/ Cast MarkupInterface to string.\n",335],["T_WHITESPACE","    ",336],["T_VARIABLE","$expected_title",336],["T_WHITESPACE"," ",336],"=",["T_WHITESPACE"," ",336],["T_STRING_CAST","(string)",336],["T_WHITESPACE"," ",336],["T_VARIABLE","$expected_title",336],";",["T_WHITESPACE","\n    ",336],["T_RETURN","return",337],["T_WHITESPACE"," ",337],["T_VARIABLE","$this",337],["T_OBJECT_OPERATOR","->",337],["T_STRING","assertSession",337],"(",")",["T_OBJECT_OPERATOR","->",337],["T_STRING","titleEquals",337],"(",["T_VARIABLE","$expected_title",337],")",";",["T_WHITESPACE","\n  ",337],"}",["T_WHITESPACE","\n\n  ",338],["T_DOC_COMMENT","\/**\n   * Passes if a link with the specified label is found.\n   *\n   * An optional link index may be passed.\n   *\n   * @param string|\\Drupal\\Component\\Render\\MarkupInterface $label\n   *   Text between the anchor tags.\n   * @param int $index\n   *   Link position counting from zero.\n   *\n   * @deprecated Scheduled for removal in Drupal 9.0.0.\n   *   Use $this->assertSession()->linkExists() instead.\n   *\/",340],["T_WHITESPACE","\n  ",352],["T_PROTECTED","protected",353],["T_WHITESPACE"," ",353],["T_FUNCTION","function",353],["T_WHITESPACE"," ",353],["T_STRING","assertLink",353],"(",["T_VARIABLE","$label",353],",",["T_WHITESPACE"," ",353],["T_VARIABLE","$index",353],["T_WHITESPACE"," ",353],"=",["T_WHITESPACE"," ",353],["T_LNUMBER","0",353],")",["T_WHITESPACE"," ",353],"{",["T_WHITESPACE","\n    ",353],["T_RETURN","return",354],["T_WHITESPACE"," ",354],["T_VARIABLE","$this",354],["T_OBJECT_OPERATOR","->",354],["T_STRING","assertSession",354],"(",")",["T_OBJECT_OPERATOR","->",354],["T_STRING","linkExists",354],"(",["T_VARIABLE","$label",354],",",["T_WHITESPACE"," ",354],["T_VARIABLE","$index",354],")",";",["T_WHITESPACE","\n  ",354],"}",["T_WHITESPACE","\n\n  ",355],["T_DOC_COMMENT","\/**\n   * Passes if a link with the specified label is not found.\n   *\n   * @param string|\\Drupal\\Component\\Render\\MarkupInterface $label\n   *   Text between the anchor tags.\n   *\n   * @deprecated Scheduled for removal in Drupal 9.0.0.\n   *   Use $this->assertSession()->linkNotExists() instead.\n   *\/",357],["T_WHITESPACE","\n  ",365],["T_PROTECTED","protected",366],["T_WHITESPACE"," ",366],["T_FUNCTION","function",366],["T_WHITESPACE"," ",366],["T_STRING","assertNoLink",366],"(",["T_VARIABLE","$label",366],")",["T_WHITESPACE"," ",366],"{",["T_WHITESPACE","\n    ",366],["T_RETURN","return",367],["T_WHITESPACE"," ",367],["T_VARIABLE","$this",367],["T_OBJECT_OPERATOR","->",367],["T_STRING","assertSession",367],"(",")",["T_OBJECT_OPERATOR","->",367],["T_STRING","linkNotExists",367],"(",["T_VARIABLE","$label",367],")",";",["T_WHITESPACE","\n  ",367],"}",["T_WHITESPACE","\n\n  ",368],["T_DOC_COMMENT","\/**\n   * Passes if a link containing a given href (part) is found.\n   *\n   * @param string $href\n   *   The full or partial value of the 'href' attribute of the anchor tag.\n   * @param int $index\n   *   Link position counting from zero.\n   *\n   * @deprecated Scheduled for removal in Drupal 9.0.0.\n   *   Use $this->assertSession()->linkByHref() instead.\n   *\/",370],["T_WHITESPACE","\n  ",380],["T_PROTECTED","protected",381],["T_WHITESPACE"," ",381],["T_FUNCTION","function",381],["T_WHITESPACE"," ",381],["T_STRING","assertLinkByHref",381],"(",["T_VARIABLE","$href",381],",",["T_WHITESPACE"," ",381],["T_VARIABLE","$index",381],["T_WHITESPACE"," ",381],"=",["T_WHITESPACE"," ",381],["T_LNUMBER","0",381],")",["T_WHITESPACE"," ",381],"{",["T_WHITESPACE","\n    ",381],["T_VARIABLE","$this",382],["T_OBJECT_OPERATOR","->",382],["T_STRING","assertSession",382],"(",")",["T_OBJECT_OPERATOR","->",382],["T_STRING","linkByHrefExists",382],"(",["T_VARIABLE","$href",382],",",["T_WHITESPACE"," ",382],["T_VARIABLE","$index",382],")",";",["T_WHITESPACE","\n  ",382],"}",["T_WHITESPACE","\n\n  ",383],["T_DOC_COMMENT","\/**\n   * Passes if a link containing a given href (part) is not found.\n   *\n   * @param string $href\n   *   The full or partial value of the 'href' attribute of the anchor tag.\n   *\n   * @deprecated Scheduled for removal in Drupal 9.0.0.\n   *   Use $this->assertSession()->linkByHrefNotExists() instead.\n   *\/",385],["T_WHITESPACE","\n  ",393],["T_PROTECTED","protected",394],["T_WHITESPACE"," ",394],["T_FUNCTION","function",394],["T_WHITESPACE"," ",394],["T_STRING","assertNoLinkByHref",394],"(",["T_VARIABLE","$href",394],")",["T_WHITESPACE"," ",394],"{",["T_WHITESPACE","\n    ",394],["T_VARIABLE","$this",395],["T_OBJECT_OPERATOR","->",395],["T_STRING","assertSession",395],"(",")",["T_OBJECT_OPERATOR","->",395],["T_STRING","linkByHrefNotExists",395],"(",["T_VARIABLE","$href",395],")",";",["T_WHITESPACE","\n  ",395],"}",["T_WHITESPACE","\n\n  ",396],["T_DOC_COMMENT","\/**\n   * Asserts that a field does not exist with the given ID and value.\n   *\n   * @param string $id\n   *   ID of field to assert.\n   * @param string $value\n   *   (optional) Value for the field, to assert that the field's value on the\n   *   page doesn't match it. You may pass in NULL to skip checking the value,\n   *   while still checking that the field doesn't exist. However, the default\n   *   value ('') asserts that the field value is not an empty string.\n   *\n   * @deprecated Scheduled for removal in Drupal 9.0.0.\n   *   Use $this->assertSession()->fieldNotExists() or\n   *   $this->assertSession()->fieldValueNotEquals() instead.\n   *\/",398],["T_WHITESPACE","\n  ",412],["T_PROTECTED","protected",413],["T_WHITESPACE"," ",413],["T_FUNCTION","function",413],["T_WHITESPACE"," ",413],["T_STRING","assertNoFieldById",413],"(",["T_VARIABLE","$id",413],",",["T_WHITESPACE"," ",413],["T_VARIABLE","$value",413],["T_WHITESPACE"," ",413],"=",["T_WHITESPACE"," ",413],["T_CONSTANT_ENCAPSED_STRING","''",413],")",["T_WHITESPACE"," ",413],"{",["T_WHITESPACE","\n    ",413],["T_IF","if",414],["T_WHITESPACE"," ",414],"(",["T_VARIABLE","$this",414],["T_OBJECT_OPERATOR","->",414],["T_STRING","getSession",414],"(",")",["T_OBJECT_OPERATOR","->",414],["T_STRING","getPage",414],"(",")",["T_OBJECT_OPERATOR","->",414],["T_STRING","findField",414],"(",["T_VARIABLE","$id",414],")",")",["T_WHITESPACE"," ",414],"{",["T_WHITESPACE","\n      ",414],["T_VARIABLE","$this",415],["T_OBJECT_OPERATOR","->",415],["T_STRING","assertSession",415],"(",")",["T_OBJECT_OPERATOR","->",415],["T_STRING","fieldValueNotEquals",415],"(",["T_VARIABLE","$id",415],",",["T_WHITESPACE"," ",415],["T_STRING_CAST","(string)",415],["T_WHITESPACE"," ",415],["T_VARIABLE","$value",415],")",";",["T_WHITESPACE","\n    ",415],"}",["T_WHITESPACE","\n    ",416],["T_ELSE","else",417],["T_WHITESPACE"," ",417],"{",["T_WHITESPACE","\n      ",417],["T_VARIABLE","$this",418],["T_OBJECT_OPERATOR","->",418],["T_STRING","assertSession",418],"(",")",["T_OBJECT_OPERATOR","->",418],["T_STRING","fieldNotExists",418],"(",["T_VARIABLE","$id",418],")",";",["T_WHITESPACE","\n    ",418],"}",["T_WHITESPACE","\n  ",419],"}",["T_WHITESPACE","\n\n  ",420],["T_DOC_COMMENT","\/**\n   * Passes if the internal browser's URL matches the given path.\n   *\n   * @param \\Drupal\\Core\\Url|string $path\n   *   The expected system path or URL.\n   *\n   * @deprecated Scheduled for removal in Drupal 9.0.0.\n   *   Use $this->assertSession()->addressEquals() instead.\n   *\/",422],["T_WHITESPACE","\n  ",430],["T_PROTECTED","protected",431],["T_WHITESPACE"," ",431],["T_FUNCTION","function",431],["T_WHITESPACE"," ",431],["T_STRING","assertUrl",431],"(",["T_VARIABLE","$path",431],")",["T_WHITESPACE"," ",431],"{",["T_WHITESPACE","\n    ",431],["T_VARIABLE","$this",432],["T_OBJECT_OPERATOR","->",432],["T_STRING","assertSession",432],"(",")",["T_OBJECT_OPERATOR","->",432],["T_STRING","addressEquals",432],"(",["T_VARIABLE","$path",432],")",";",["T_WHITESPACE","\n  ",432],"}",["T_WHITESPACE","\n\n  ",433],["T_DOC_COMMENT","\/**\n   * Asserts that a select option in the current page exists.\n   *\n   * @param string $id\n   *   ID of select field to assert.\n   * @param string $option\n   *   Option to assert.\n   *\n   * @deprecated Scheduled for removal in Drupal 9.0.0.\n   *   Use $this->assertSession()->optionExists() instead.\n   *\/",435],["T_WHITESPACE","\n  ",445],["T_PROTECTED","protected",446],["T_WHITESPACE"," ",446],["T_FUNCTION","function",446],["T_WHITESPACE"," ",446],["T_STRING","assertOption",446],"(",["T_VARIABLE","$id",446],",",["T_WHITESPACE"," ",446],["T_VARIABLE","$option",446],")",["T_WHITESPACE"," ",446],"{",["T_WHITESPACE","\n    ",446],["T_RETURN","return",447],["T_WHITESPACE"," ",447],["T_VARIABLE","$this",447],["T_OBJECT_OPERATOR","->",447],["T_STRING","assertSession",447],"(",")",["T_OBJECT_OPERATOR","->",447],["T_STRING","optionExists",447],"(",["T_VARIABLE","$id",447],",",["T_WHITESPACE"," ",447],["T_VARIABLE","$option",447],")",";",["T_WHITESPACE","\n  ",447],"}",["T_WHITESPACE","\n\n  ",448],["T_DOC_COMMENT","\/**\n   * Asserts that a select option does NOT exist in the current page.\n   *\n   * @param string $id\n   *   ID of select field to assert.\n   * @param string $option\n   *   Option to assert.\n   *\n   * @deprecated Scheduled for removal in Drupal 9.0.0.\n   *   Use $this->assertSession()->optionNotExists() instead.\n   *\/",450],["T_WHITESPACE","\n  ",460],["T_PROTECTED","protected",461],["T_WHITESPACE"," ",461],["T_FUNCTION","function",461],["T_WHITESPACE"," ",461],["T_STRING","assertNoOption",461],"(",["T_VARIABLE","$id",461],",",["T_WHITESPACE"," ",461],["T_VARIABLE","$option",461],")",["T_WHITESPACE"," ",461],"{",["T_WHITESPACE","\n    ",461],["T_RETURN","return",462],["T_WHITESPACE"," ",462],["T_VARIABLE","$this",462],["T_OBJECT_OPERATOR","->",462],["T_STRING","assertSession",462],"(",")",["T_OBJECT_OPERATOR","->",462],["T_STRING","optionNotExists",462],"(",["T_VARIABLE","$id",462],",",["T_WHITESPACE"," ",462],["T_VARIABLE","$option",462],")",";",["T_WHITESPACE","\n  ",462],"}",["T_WHITESPACE","\n\n  ",463],["T_DOC_COMMENT","\/**\n   * Asserts that a select option in the current page is checked.\n   *\n   * @param string $id\n   *   ID of select field to assert.\n   * @param string $option\n   *   Option to assert.\n   * @param string $message\n   *   (optional) A message to display with the assertion. Do not translate\n   *   messages with t(). If left blank, a default message will be displayed.\n   *\n   * @deprecated Scheduled for removal in Drupal 9.0.0.\n   *   Use $this->assertSession()->optionExists() instead and check the\n   *   \"selected\" attribute yourself.\n   *\/",465],["T_WHITESPACE","\n  ",479],["T_PROTECTED","protected",480],["T_WHITESPACE"," ",480],["T_FUNCTION","function",480],["T_WHITESPACE"," ",480],["T_STRING","assertOptionSelected",480],"(",["T_VARIABLE","$id",480],",",["T_WHITESPACE"," ",480],["T_VARIABLE","$option",480],",",["T_WHITESPACE"," ",480],["T_VARIABLE","$message",480],["T_WHITESPACE"," ",480],"=",["T_WHITESPACE"," ",480],["T_STRING","NULL",480],")",["T_WHITESPACE"," ",480],"{",["T_WHITESPACE","\n    ",480],["T_VARIABLE","$option_field",481],["T_WHITESPACE"," ",481],"=",["T_WHITESPACE"," ",481],["T_VARIABLE","$this",481],["T_OBJECT_OPERATOR","->",481],["T_STRING","assertSession",481],"(",")",["T_OBJECT_OPERATOR","->",481],["T_STRING","optionExists",481],"(",["T_VARIABLE","$id",481],",",["T_WHITESPACE"," ",481],["T_VARIABLE","$option",481],")",";",["T_WHITESPACE","\n    ",481],["T_VARIABLE","$message",482],["T_WHITESPACE"," ",482],"=",["T_WHITESPACE"," ",482],["T_VARIABLE","$message",482],["T_WHITESPACE"," ",482],"?",":",["T_WHITESPACE"," ",482],"\"",["T_ENCAPSED_AND_WHITESPACE","Option ",482],["T_VARIABLE","$option",482],["T_ENCAPSED_AND_WHITESPACE"," for field ",482],["T_VARIABLE","$id",482],["T_ENCAPSED_AND_WHITESPACE"," is selected.",482],"\"",";",["T_WHITESPACE","\n    ",482],["T_VARIABLE","$this",483],["T_OBJECT_OPERATOR","->",483],["T_STRING","assertTrue",483],"(",["T_VARIABLE","$option_field",483],["T_OBJECT_OPERATOR","->",483],["T_STRING","hasAttribute",483],"(",["T_CONSTANT_ENCAPSED_STRING","'selected'",483],")",",",["T_WHITESPACE"," ",483],["T_VARIABLE","$message",483],")",";",["T_WHITESPACE","\n  ",483],"}",["T_WHITESPACE","\n\n  ",484],["T_DOC_COMMENT","\/**\n   * Asserts that a checkbox field in the current page is checked.\n   *\n   * @param string $id\n   *   ID of field to assert.\n   *\n   * @deprecated Scheduled for removal in Drupal 9.0.0.\n   *   Use $this->assertSession()->checkboxChecked() instead.\n   *\/",486],["T_WHITESPACE","\n  ",494],["T_PROTECTED","protected",495],["T_WHITESPACE"," ",495],["T_FUNCTION","function",495],["T_WHITESPACE"," ",495],["T_STRING","assertFieldChecked",495],"(",["T_VARIABLE","$id",495],")",["T_WHITESPACE"," ",495],"{",["T_WHITESPACE","\n    ",495],["T_VARIABLE","$this",496],["T_OBJECT_OPERATOR","->",496],["T_STRING","assertSession",496],"(",")",["T_OBJECT_OPERATOR","->",496],["T_STRING","checkboxChecked",496],"(",["T_VARIABLE","$id",496],")",";",["T_WHITESPACE","\n  ",496],"}",["T_WHITESPACE","\n\n  ",497],["T_DOC_COMMENT","\/**\n   * Asserts that a checkbox field in the current page is not checked.\n   *\n   * @param string $id\n   *   ID of field to assert.\n   *\n   * @deprecated Scheduled for removal in Drupal 9.0.0.\n   *   Use $this->assertSession()->checkboxNotChecked() instead.\n   *\/",499],["T_WHITESPACE","\n  ",507],["T_PROTECTED","protected",508],["T_WHITESPACE"," ",508],["T_FUNCTION","function",508],["T_WHITESPACE"," ",508],["T_STRING","assertNoFieldChecked",508],"(",["T_VARIABLE","$id",508],")",["T_WHITESPACE"," ",508],"{",["T_WHITESPACE","\n    ",508],["T_VARIABLE","$this",509],["T_OBJECT_OPERATOR","->",509],["T_STRING","assertSession",509],"(",")",["T_OBJECT_OPERATOR","->",509],["T_STRING","checkboxNotChecked",509],"(",["T_VARIABLE","$id",509],")",";",["T_WHITESPACE","\n  ",509],"}",["T_WHITESPACE","\n\n  ",510],["T_DOC_COMMENT","\/**\n   * Passes if the raw text IS found escaped on the loaded page, fail otherwise.\n   *\n   * Raw text refers to the raw HTML that the page generated.\n   *\n   * @param string $raw\n   *   Raw (HTML) string to look for.\n   *\n   * @deprecated Scheduled for removal in Drupal 9.0.0.\n   *   Use $this->assertSession()->assertEscaped() instead.\n   *\/",512],["T_WHITESPACE","\n  ",522],["T_PROTECTED","protected",523],["T_WHITESPACE"," ",523],["T_FUNCTION","function",523],["T_WHITESPACE"," ",523],["T_STRING","assertEscaped",523],"(",["T_VARIABLE","$raw",523],")",["T_WHITESPACE"," ",523],"{",["T_WHITESPACE","\n    ",523],["T_VARIABLE","$this",524],["T_OBJECT_OPERATOR","->",524],["T_STRING","assertSession",524],"(",")",["T_OBJECT_OPERATOR","->",524],["T_STRING","assertEscaped",524],"(",["T_VARIABLE","$raw",524],")",";",["T_WHITESPACE","\n  ",524],"}",["T_WHITESPACE","\n\n  ",525],["T_DOC_COMMENT","\/**\n   * Passes if the raw text is not found escaped on the loaded page.\n   *\n   * Raw text refers to the raw HTML that the page generated.\n   *\n   * @param string $raw\n   *   Raw (HTML) string to look for.\n   *\n   * @deprecated Scheduled for removal in Drupal 9.0.0.\n   *   Use $this->assertSession()->assertNoEscaped() instead.\n   *\/",527],["T_WHITESPACE","\n  ",537],["T_PROTECTED","protected",538],["T_WHITESPACE"," ",538],["T_FUNCTION","function",538],["T_WHITESPACE"," ",538],["T_STRING","assertNoEscaped",538],"(",["T_VARIABLE","$raw",538],")",["T_WHITESPACE"," ",538],"{",["T_WHITESPACE","\n    ",538],["T_VARIABLE","$this",539],["T_OBJECT_OPERATOR","->",539],["T_STRING","assertSession",539],"(",")",["T_OBJECT_OPERATOR","->",539],["T_STRING","assertNoEscaped",539],"(",["T_VARIABLE","$raw",539],")",";",["T_WHITESPACE","\n  ",539],"}",["T_WHITESPACE","\n\n  ",540],["T_DOC_COMMENT","\/**\n   * Triggers a pass if the Perl regex pattern is found in the raw content.\n   *\n   * @param string $pattern\n   *   Perl regex to look for including the regex delimiters.\n   *\n   * @deprecated Scheduled for removal in Drupal 9.0.0.\n   *   Use $this->assertSession()->responseMatches() instead.\n   *\/",542],["T_WHITESPACE","\n  ",550],["T_PROTECTED","protected",551],["T_WHITESPACE"," ",551],["T_FUNCTION","function",551],["T_WHITESPACE"," ",551],["T_STRING","assertPattern",551],"(",["T_VARIABLE","$pattern",551],")",["T_WHITESPACE"," ",551],"{",["T_WHITESPACE","\n    ",551],["T_VARIABLE","$this",552],["T_OBJECT_OPERATOR","->",552],["T_STRING","assertSession",552],"(",")",["T_OBJECT_OPERATOR","->",552],["T_STRING","responseMatches",552],"(",["T_VARIABLE","$pattern",552],")",";",["T_WHITESPACE","\n  ",552],"}",["T_WHITESPACE","\n\n  ",553],["T_DOC_COMMENT","\/**\n   * Asserts whether an expected cache tag was present in the last response.\n   *\n   * @param string $expected_cache_tag\n   *   The expected cache tag.\n   *\n   * @deprecated Scheduled for removal in Drupal 9.0.0.\n   *   Use $this->assertSession()->responseHeaderContains() instead.\n   *\/",555],["T_WHITESPACE","\n  ",563],["T_PROTECTED","protected",564],["T_WHITESPACE"," ",564],["T_FUNCTION","function",564],["T_WHITESPACE"," ",564],["T_STRING","assertCacheTag",564],"(",["T_VARIABLE","$expected_cache_tag",564],")",["T_WHITESPACE"," ",564],"{",["T_WHITESPACE","\n    ",564],["T_VARIABLE","$this",565],["T_OBJECT_OPERATOR","->",565],["T_STRING","assertSession",565],"(",")",["T_OBJECT_OPERATOR","->",565],["T_STRING","responseHeaderContains",565],"(",["T_CONSTANT_ENCAPSED_STRING","'X-Drupal-Cache-Tags'",565],",",["T_WHITESPACE"," ",565],["T_VARIABLE","$expected_cache_tag",565],")",";",["T_WHITESPACE","\n  ",565],"}",["T_WHITESPACE","\n\n  ",566],["T_DOC_COMMENT","\/**\n   * Returns WebAssert object.\n   *\n   * @param string $name\n   *   (optional) Name of the session. Defaults to the active session.\n   *\n   * @return \\Drupal\\Tests\\WebAssert\n   *   A new web-assert option for asserting the presence of elements with.\n   *\/",568],["T_WHITESPACE","\n  ",576],["T_ABSTRACT","abstract",577],["T_WHITESPACE"," ",577],["T_PUBLIC","public",577],["T_WHITESPACE"," ",577],["T_FUNCTION","function",577],["T_WHITESPACE"," ",577],["T_STRING","assertSession",577],"(",["T_VARIABLE","$name",577],["T_WHITESPACE"," ",577],"=",["T_WHITESPACE"," ",577],["T_STRING","NULL",577],")",";",["T_WHITESPACE","\n\n  ",577],["T_DOC_COMMENT","\/**\n   * Builds an XPath query.\n   *\n   * Builds an XPath query by replacing placeholders in the query by the value\n   * of the arguments.\n   *\n   * XPath 1.0 (the version supported by libxml2, the underlying XML library\n   * used by PHP) doesn't support any form of quotation. This function\n   * simplifies the building of XPath expression.\n   *\n   * @param string $xpath\n   *   An XPath query, possibly with placeholders in the form ':name'.\n   * @param array $args\n   *   An array of arguments with keys in the form ':name' matching the\n   *   placeholders in the query. The values may be either strings or numeric\n   *   values.\n   *\n   * @return string\n   *   An XPath query with arguments replaced.\n   *\n   * @deprecated Scheduled for removal in Drupal 9.0.0.\n   *   Use $this->assertSession()->buildXPathQuery() instead.\n   *\/",579],["T_WHITESPACE","\n  ",601],["T_PROTECTED","protected",602],["T_WHITESPACE"," ",602],["T_FUNCTION","function",602],["T_WHITESPACE"," ",602],["T_STRING","buildXPathQuery",602],"(",["T_VARIABLE","$xpath",602],",",["T_WHITESPACE"," ",602],["T_ARRAY","array",602],["T_WHITESPACE"," ",602],["T_VARIABLE","$args",602],["T_WHITESPACE"," ",602],"=",["T_WHITESPACE"," ",602],["T_ARRAY","array",602],"(",")",")",["T_WHITESPACE"," ",602],"{",["T_WHITESPACE","\n    ",602],["T_RETURN","return",603],["T_WHITESPACE"," ",603],["T_VARIABLE","$this",603],["T_OBJECT_OPERATOR","->",603],["T_STRING","assertSession",603],"(",")",["T_OBJECT_OPERATOR","->",603],["T_STRING","buildXPathQuery",603],"(",["T_VARIABLE","$xpath",603],",",["T_WHITESPACE"," ",603],["T_VARIABLE","$args",603],")",";",["T_WHITESPACE","\n  ",603],"}",["T_WHITESPACE","\n\n",604],"}",["T_WHITESPACE","\n",606]]