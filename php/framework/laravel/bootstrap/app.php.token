[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_COMMENT","\/*\n|--------------------------------------------------------------------------\n| Create The Application\n|--------------------------------------------------------------------------\n|\n| The first thing we will do is create a new Laravel application instance\n| which serves as the \"glue\" for all the components of Laravel, and is\n| the IoC container for the system binding all of the various parts.\n|\n*\/",3],["T_WHITESPACE","\n\n",12],["T_VARIABLE","$app",14],["T_WHITESPACE"," ",14],"=",["T_WHITESPACE"," ",14],["T_NEW","new",14],["T_WHITESPACE"," ",14],["T_STRING","Illuminate",14],["T_NS_SEPARATOR","\\",14],["T_STRING","Foundation",14],["T_NS_SEPARATOR","\\",14],["T_STRING","Application",14],"(",["T_WHITESPACE","\n    ",14],["T_STRING","realpath",15],"(",["T_DIR","__DIR__",15],".",["T_CONSTANT_ENCAPSED_STRING","'\/..\/'",15],")",["T_WHITESPACE","\n",15],")",";",["T_WHITESPACE","\n\n",16],["T_COMMENT","\/*\n|--------------------------------------------------------------------------\n| Bind Important Interfaces\n|--------------------------------------------------------------------------\n|\n| Next, we need to bind some important interfaces into the container so\n| we will be able to resolve them when needed. The kernels serve the\n| incoming requests to this application from both the web and CLI.\n|\n*\/",18],["T_WHITESPACE","\n\n",27],["T_VARIABLE","$app",29],["T_OBJECT_OPERATOR","->",29],["T_STRING","singleton",29],"(",["T_WHITESPACE","\n    ",29],["T_STRING","Illuminate",30],["T_NS_SEPARATOR","\\",30],["T_STRING","Contracts",30],["T_NS_SEPARATOR","\\",30],["T_STRING","Http",30],["T_NS_SEPARATOR","\\",30],["T_STRING","Kernel",30],["T_DOUBLE_COLON","::",30],["T_CLASS","class",30],",",["T_WHITESPACE","\n    ",30],["T_STRING","App",31],["T_NS_SEPARATOR","\\",31],["T_STRING","Http",31],["T_NS_SEPARATOR","\\",31],["T_STRING","Kernel",31],["T_DOUBLE_COLON","::",31],["T_CLASS","class",31],["T_WHITESPACE","\n",31],")",";",["T_WHITESPACE","\n\n",32],["T_VARIABLE","$app",34],["T_OBJECT_OPERATOR","->",34],["T_STRING","singleton",34],"(",["T_WHITESPACE","\n    ",34],["T_STRING","Illuminate",35],["T_NS_SEPARATOR","\\",35],["T_STRING","Contracts",35],["T_NS_SEPARATOR","\\",35],["T_STRING","Console",35],["T_NS_SEPARATOR","\\",35],["T_STRING","Kernel",35],["T_DOUBLE_COLON","::",35],["T_CLASS","class",35],",",["T_WHITESPACE","\n    ",35],["T_STRING","App",36],["T_NS_SEPARATOR","\\",36],["T_STRING","Console",36],["T_NS_SEPARATOR","\\",36],["T_STRING","Kernel",36],["T_DOUBLE_COLON","::",36],["T_CLASS","class",36],["T_WHITESPACE","\n",36],")",";",["T_WHITESPACE","\n\n",37],["T_VARIABLE","$app",39],["T_OBJECT_OPERATOR","->",39],["T_STRING","singleton",39],"(",["T_WHITESPACE","\n    ",39],["T_STRING","Illuminate",40],["T_NS_SEPARATOR","\\",40],["T_STRING","Contracts",40],["T_NS_SEPARATOR","\\",40],["T_STRING","Debug",40],["T_NS_SEPARATOR","\\",40],["T_STRING","ExceptionHandler",40],["T_DOUBLE_COLON","::",40],["T_CLASS","class",40],",",["T_WHITESPACE","\n    ",40],["T_STRING","App",41],["T_NS_SEPARATOR","\\",41],["T_STRING","Exceptions",41],["T_NS_SEPARATOR","\\",41],["T_STRING","Handler",41],["T_DOUBLE_COLON","::",41],["T_CLASS","class",41],["T_WHITESPACE","\n",41],")",";",["T_WHITESPACE","\n\n",42],["T_COMMENT","\/*\n|--------------------------------------------------------------------------\n| Return The Application\n|--------------------------------------------------------------------------\n|\n| This script returns the application instance. The instance is given to\n| the calling script so we can separate the building of the instances\n| from the actual running of the application and sending responses.\n|\n*\/",44],["T_WHITESPACE","\n\n",53],["T_RETURN","return",55],["T_WHITESPACE"," ",55],["T_VARIABLE","$app",55],";",["T_WHITESPACE","\n",55]]