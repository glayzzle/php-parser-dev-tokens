[["T_OPEN_TAG","<?php\n",1],["T_DOC_COMMENT","\/**\n * CakePHP(tm) : Rapid Development Framework (http:\/\/cakephp.org)\n * Copyright (c) Cake Software Foundation, Inc. (http:\/\/cakefoundation.org)\n *\n * Licensed under The MIT License\n * For full copyright and license information, please see the LICENSE.txt\n * Redistributions of files must retain the above copyright notice\n *\n * @copyright     Copyright (c) Cake Software Foundation, Inc. (http:\/\/cakefoundation.org)\n * @since         1.2.0\n * @license       http:\/\/www.opensource.org\/licenses\/mit-license.php MIT License\n *\/",2],["T_WHITESPACE","\n",13],["T_NAMESPACE","namespace",14],["T_WHITESPACE"," ",14],["T_STRING","Cake",14],["T_NS_SEPARATOR","\\",14],["T_STRING","TestSuite",14],";",["T_WHITESPACE","\n\n",14],["T_USE","use",16],["T_WHITESPACE"," ",16],["T_STRING","Cake",16],["T_NS_SEPARATOR","\\",16],["T_STRING","Core",16],["T_NS_SEPARATOR","\\",16],["T_STRING","App",16],";",["T_WHITESPACE","\n",16],["T_USE","use",17],["T_WHITESPACE"," ",17],["T_STRING","Cake",17],["T_NS_SEPARATOR","\\",17],["T_STRING","Core",17],["T_NS_SEPARATOR","\\",17],["T_STRING","Configure",17],";",["T_WHITESPACE","\n",17],["T_USE","use",18],["T_WHITESPACE"," ",18],["T_STRING","Cake",18],["T_NS_SEPARATOR","\\",18],["T_STRING","Datasource",18],["T_NS_SEPARATOR","\\",18],["T_STRING","ConnectionManager",18],";",["T_WHITESPACE","\n",18],["T_USE","use",19],["T_WHITESPACE"," ",19],["T_STRING","Cake",19],["T_NS_SEPARATOR","\\",19],["T_STRING","Event",19],["T_NS_SEPARATOR","\\",19],["T_STRING","EventManager",19],";",["T_WHITESPACE","\n",19],["T_USE","use",20],["T_WHITESPACE"," ",20],["T_STRING","Cake",20],["T_NS_SEPARATOR","\\",20],["T_STRING","ORM",20],["T_NS_SEPARATOR","\\",20],["T_STRING","Exception",20],["T_NS_SEPARATOR","\\",20],["T_STRING","MissingTableClassException",20],";",["T_WHITESPACE","\n",20],["T_USE","use",21],["T_WHITESPACE"," ",21],["T_STRING","Cake",21],["T_NS_SEPARATOR","\\",21],["T_STRING","ORM",21],["T_NS_SEPARATOR","\\",21],["T_STRING","TableRegistry",21],";",["T_WHITESPACE","\n",21],["T_USE","use",22],["T_WHITESPACE"," ",22],["T_STRING","Cake",22],["T_NS_SEPARATOR","\\",22],["T_STRING","Routing",22],["T_NS_SEPARATOR","\\",22],["T_STRING","Router",22],";",["T_WHITESPACE","\n",22],["T_USE","use",23],["T_WHITESPACE"," ",23],["T_STRING","Cake",23],["T_NS_SEPARATOR","\\",23],["T_STRING","TestSuite",23],["T_NS_SEPARATOR","\\",23],["T_STRING","Constraint",23],["T_NS_SEPARATOR","\\",23],["T_STRING","EventFired",23],";",["T_WHITESPACE","\n",23],["T_USE","use",24],["T_WHITESPACE"," ",24],["T_STRING","Cake",24],["T_NS_SEPARATOR","\\",24],["T_STRING","TestSuite",24],["T_NS_SEPARATOR","\\",24],["T_STRING","Constraint",24],["T_NS_SEPARATOR","\\",24],["T_STRING","EventFiredWith",24],";",["T_WHITESPACE","\n",24],["T_USE","use",25],["T_WHITESPACE"," ",25],["T_STRING","Cake",25],["T_NS_SEPARATOR","\\",25],["T_STRING","Utility",25],["T_NS_SEPARATOR","\\",25],["T_STRING","Inflector",25],";",["T_WHITESPACE","\n",25],["T_USE","use",26],["T_WHITESPACE"," ",26],["T_STRING","Exception",26],";",["T_WHITESPACE","\n",26],["T_USE","use",27],["T_WHITESPACE"," ",27],["T_STRING","PHPUnit_Framework_TestCase",27],";",["T_WHITESPACE","\n\n",27],["T_DOC_COMMENT","\/**\n * Cake TestCase class\n *\/",29],["T_WHITESPACE","\n",31],["T_ABSTRACT","abstract",32],["T_WHITESPACE"," ",32],["T_CLASS","class",32],["T_WHITESPACE"," ",32],["T_STRING","TestCase",32],["T_WHITESPACE"," ",32],["T_EXTENDS","extends",32],["T_WHITESPACE"," ",32],["T_STRING","PHPUnit_Framework_TestCase",32],["T_WHITESPACE","\n",32],"{",["T_WHITESPACE","\n\n    ",33],["T_DOC_COMMENT","\/**\n     * The class responsible for managing the creation, loading and removing of fixtures\n     *\n     * @var \\Cake\\TestSuite\\Fixture\\FixtureManager\n     *\/",35],["T_WHITESPACE","\n    ",39],["T_PUBLIC","public",40],["T_WHITESPACE"," ",40],["T_VARIABLE","$fixtureManager",40],["T_WHITESPACE"," ",40],"=",["T_WHITESPACE"," ",40],["T_STRING","null",40],";",["T_WHITESPACE","\n\n    ",40],["T_DOC_COMMENT","\/**\n     * By default, all fixtures attached to this class will be truncated and reloaded after each test.\n     * Set this to false to handle manually\n     *\n     * @var bool\n     *\/",42],["T_WHITESPACE","\n    ",47],["T_PUBLIC","public",48],["T_WHITESPACE"," ",48],["T_VARIABLE","$autoFixtures",48],["T_WHITESPACE"," ",48],"=",["T_WHITESPACE"," ",48],["T_STRING","true",48],";",["T_WHITESPACE","\n\n    ",48],["T_DOC_COMMENT","\/**\n     * Control table create\/drops on each test method.\n     *\n     * If true, tables will still be dropped at the\n     * end of each test runner execution.\n     *\n     * @var bool\n     *\/",50],["T_WHITESPACE","\n    ",57],["T_PUBLIC","public",58],["T_WHITESPACE"," ",58],["T_VARIABLE","$dropTables",58],["T_WHITESPACE"," ",58],"=",["T_WHITESPACE"," ",58],["T_STRING","false",58],";",["T_WHITESPACE","\n\n    ",58],["T_DOC_COMMENT","\/**\n     * Configure values to restore at end of test.\n     *\n     * @var array\n     *\/",60],["T_WHITESPACE","\n    ",64],["T_PROTECTED","protected",65],["T_WHITESPACE"," ",65],["T_VARIABLE","$_configure",65],["T_WHITESPACE"," ",65],"=",["T_WHITESPACE"," ",65],"[","]",";",["T_WHITESPACE","\n\n    ",65],["T_DOC_COMMENT","\/**\n     * Path settings to restore at the end of the test.\n     *\n     * @var array\n     *\/",67],["T_WHITESPACE","\n    ",71],["T_PROTECTED","protected",72],["T_WHITESPACE"," ",72],["T_VARIABLE","$_pathRestore",72],["T_WHITESPACE"," ",72],"=",["T_WHITESPACE"," ",72],"[","]",";",["T_WHITESPACE","\n\n    ",72],["T_DOC_COMMENT","\/**\n     * Overrides SimpleTestCase::skipIf to provide a boolean return value\n     *\n     * @param bool $shouldSkip Whether or not the test should be skipped.\n     * @param string $message The message to display.\n     * @return bool\n     *\/",74],["T_WHITESPACE","\n    ",80],["T_PUBLIC","public",81],["T_WHITESPACE"," ",81],["T_FUNCTION","function",81],["T_WHITESPACE"," ",81],["T_STRING","skipIf",81],"(",["T_VARIABLE","$shouldSkip",81],",",["T_WHITESPACE"," ",81],["T_VARIABLE","$message",81],["T_WHITESPACE"," ",81],"=",["T_WHITESPACE"," ",81],["T_CONSTANT_ENCAPSED_STRING","''",81],")",["T_WHITESPACE","\n    ",81],"{",["T_WHITESPACE","\n        ",82],["T_IF","if",83],["T_WHITESPACE"," ",83],"(",["T_VARIABLE","$shouldSkip",83],")",["T_WHITESPACE"," ",83],"{",["T_WHITESPACE","\n            ",83],["T_VARIABLE","$this",84],["T_OBJECT_OPERATOR","->",84],["T_STRING","markTestSkipped",84],"(",["T_VARIABLE","$message",84],")",";",["T_WHITESPACE","\n        ",84],"}",["T_WHITESPACE","\n\n        ",85],["T_RETURN","return",87],["T_WHITESPACE"," ",87],["T_VARIABLE","$shouldSkip",87],";",["T_WHITESPACE","\n    ",87],"}",["T_WHITESPACE","\n\n    ",88],["T_DOC_COMMENT","\/**\n     * Setup the test case, backup the static object values so they can be restored.\n     * Specifically backs up the contents of Configure and paths in App if they have\n     * not already been backed up.\n     *\n     * @return void\n     *\/",90],["T_WHITESPACE","\n    ",96],["T_PUBLIC","public",97],["T_WHITESPACE"," ",97],["T_FUNCTION","function",97],["T_WHITESPACE"," ",97],["T_STRING","setUp",97],"(",")",["T_WHITESPACE","\n    ",97],"{",["T_WHITESPACE","\n        ",98],["T_STRING","parent",99],["T_DOUBLE_COLON","::",99],["T_STRING","setUp",99],"(",")",";",["T_WHITESPACE","\n\n        ",99],["T_IF","if",101],["T_WHITESPACE"," ",101],"(",["T_EMPTY","empty",101],"(",["T_VARIABLE","$this",101],["T_OBJECT_OPERATOR","->",101],["T_STRING","_configure",101],")",")",["T_WHITESPACE"," ",101],"{",["T_WHITESPACE","\n            ",101],["T_VARIABLE","$this",102],["T_OBJECT_OPERATOR","->",102],["T_STRING","_configure",102],["T_WHITESPACE"," ",102],"=",["T_WHITESPACE"," ",102],["T_STRING","Configure",102],["T_DOUBLE_COLON","::",102],["T_STRING","read",102],"(",")",";",["T_WHITESPACE","\n        ",102],"}",["T_WHITESPACE","\n        ",103],["T_IF","if",104],["T_WHITESPACE"," ",104],"(",["T_STRING","class_exists",104],"(",["T_CONSTANT_ENCAPSED_STRING","'Cake\\Routing\\Router'",104],",",["T_WHITESPACE"," ",104],["T_STRING","false",104],")",")",["T_WHITESPACE"," ",104],"{",["T_WHITESPACE","\n            ",104],["T_STRING","Router",105],["T_DOUBLE_COLON","::",105],["T_STRING","reload",105],"(",")",";",["T_WHITESPACE","\n        ",105],"}",["T_WHITESPACE","\n\n        ",106],["T_STRING","EventManager",108],["T_DOUBLE_COLON","::",108],["T_STRING","instance",108],"(",["T_NEW","new",108],["T_WHITESPACE"," ",108],["T_STRING","EventManager",108],"(",")",")",";",["T_WHITESPACE","\n    ",108],"}",["T_WHITESPACE","\n\n    ",109],["T_DOC_COMMENT","\/**\n     * teardown any static object changes and restore them.\n     *\n     * @return void\n     *\/",111],["T_WHITESPACE","\n    ",115],["T_PUBLIC","public",116],["T_WHITESPACE"," ",116],["T_FUNCTION","function",116],["T_WHITESPACE"," ",116],["T_STRING","tearDown",116],"(",")",["T_WHITESPACE","\n    ",116],"{",["T_WHITESPACE","\n        ",117],["T_STRING","parent",118],["T_DOUBLE_COLON","::",118],["T_STRING","tearDown",118],"(",")",";",["T_WHITESPACE","\n        ",118],["T_IF","if",119],["T_WHITESPACE"," ",119],"(","!",["T_EMPTY","empty",119],"(",["T_VARIABLE","$this",119],["T_OBJECT_OPERATOR","->",119],["T_STRING","_configure",119],")",")",["T_WHITESPACE"," ",119],"{",["T_WHITESPACE","\n            ",119],["T_STRING","Configure",120],["T_DOUBLE_COLON","::",120],["T_STRING","clear",120],"(",")",";",["T_WHITESPACE","\n            ",120],["T_STRING","Configure",121],["T_DOUBLE_COLON","::",121],["T_STRING","write",121],"(",["T_VARIABLE","$this",121],["T_OBJECT_OPERATOR","->",121],["T_STRING","_configure",121],")",";",["T_WHITESPACE","\n        ",121],"}",["T_WHITESPACE","\n        ",122],["T_STRING","TableRegistry",123],["T_DOUBLE_COLON","::",123],["T_STRING","clear",123],"(",")",";",["T_WHITESPACE","\n    ",123],"}",["T_WHITESPACE","\n\n    ",124],["T_DOC_COMMENT","\/**\n     * Chooses which fixtures to load for a given test\n     *\n     * Each parameter is a model name that corresponds to a fixture, i.e. 'Posts', 'Authors', etc.\n     *\n     * @return void\n     * @see \\Cake\\TestSuite\\TestCase::$autoFixtures\n     * @throws \\Exception when no fixture manager is available.\n     *\/",126],["T_WHITESPACE","\n    ",134],["T_PUBLIC","public",135],["T_WHITESPACE"," ",135],["T_FUNCTION","function",135],["T_WHITESPACE"," ",135],["T_STRING","loadFixtures",135],"(",")",["T_WHITESPACE","\n    ",135],"{",["T_WHITESPACE","\n        ",136],["T_IF","if",137],["T_WHITESPACE"," ",137],"(",["T_EMPTY","empty",137],"(",["T_VARIABLE","$this",137],["T_OBJECT_OPERATOR","->",137],["T_STRING","fixtureManager",137],")",")",["T_WHITESPACE"," ",137],"{",["T_WHITESPACE","\n            ",137],["T_THROW","throw",138],["T_WHITESPACE"," ",138],["T_NEW","new",138],["T_WHITESPACE"," ",138],["T_STRING","Exception",138],"(",["T_CONSTANT_ENCAPSED_STRING","'No fixture manager to load the test fixture'",138],")",";",["T_WHITESPACE","\n        ",138],"}",["T_WHITESPACE","\n        ",139],["T_VARIABLE","$args",140],["T_WHITESPACE"," ",140],"=",["T_WHITESPACE"," ",140],["T_STRING","func_get_args",140],"(",")",";",["T_WHITESPACE","\n        ",140],["T_FOREACH","foreach",141],["T_WHITESPACE"," ",141],"(",["T_VARIABLE","$args",141],["T_WHITESPACE"," ",141],["T_AS","as",141],["T_WHITESPACE"," ",141],["T_VARIABLE","$class",141],")",["T_WHITESPACE"," ",141],"{",["T_WHITESPACE","\n            ",141],["T_VARIABLE","$this",142],["T_OBJECT_OPERATOR","->",142],["T_STRING","fixtureManager",142],["T_OBJECT_OPERATOR","->",142],["T_STRING","loadSingle",142],"(",["T_VARIABLE","$class",142],",",["T_WHITESPACE"," ",142],["T_STRING","null",142],",",["T_WHITESPACE"," ",142],["T_VARIABLE","$this",142],["T_OBJECT_OPERATOR","->",142],["T_STRING","dropTables",142],")",";",["T_WHITESPACE","\n        ",142],"}",["T_WHITESPACE","\n    ",143],"}",["T_WHITESPACE","\n\n    ",144],["T_DOC_COMMENT","\/**\n     * Asserts that a global event was fired. You must track events in your event manager for this assertion to work\n     *\n     * @param string $name Event name\n     * @param EventManager|null $eventManager Event manager to check, defaults to global event manager\n     * @param string $message Assertion failure message\n     * @return void\n     *\/",146],["T_WHITESPACE","\n    ",153],["T_PUBLIC","public",154],["T_WHITESPACE"," ",154],["T_FUNCTION","function",154],["T_WHITESPACE"," ",154],["T_STRING","assertEventFired",154],"(",["T_VARIABLE","$name",154],",",["T_WHITESPACE"," ",154],["T_VARIABLE","$eventManager",154],["T_WHITESPACE"," ",154],"=",["T_WHITESPACE"," ",154],["T_STRING","null",154],",",["T_WHITESPACE"," ",154],["T_VARIABLE","$message",154],["T_WHITESPACE"," ",154],"=",["T_WHITESPACE"," ",154],["T_CONSTANT_ENCAPSED_STRING","''",154],")",["T_WHITESPACE","\n    ",154],"{",["T_WHITESPACE","\n        ",155],["T_IF","if",156],["T_WHITESPACE"," ",156],"(","!",["T_VARIABLE","$eventManager",156],")",["T_WHITESPACE"," ",156],"{",["T_WHITESPACE","\n            ",156],["T_VARIABLE","$eventManager",157],["T_WHITESPACE"," ",157],"=",["T_WHITESPACE"," ",157],["T_STRING","EventManager",157],["T_DOUBLE_COLON","::",157],["T_STRING","instance",157],"(",")",";",["T_WHITESPACE","\n        ",157],"}",["T_WHITESPACE","\n        ",158],["T_VARIABLE","$this",159],["T_OBJECT_OPERATOR","->",159],["T_STRING","assertThat",159],"(",["T_VARIABLE","$name",159],",",["T_WHITESPACE"," ",159],["T_NEW","new",159],["T_WHITESPACE"," ",159],["T_STRING","EventFired",159],"(",["T_VARIABLE","$eventManager",159],")",",",["T_WHITESPACE"," ",159],["T_VARIABLE","$message",159],")",";",["T_WHITESPACE","\n    ",159],"}",["T_WHITESPACE","\n\n    ",160],["T_DOC_COMMENT","\/**\n     * Asserts an event was fired with data\n     *\n     * If a third argument is passed, that value is used to compare with the value in $dataKey\n     *\n     * @param string $name Event name\n     * @param string $dataKey Data key\n     * @param string $dataValue Data value\n     * @param EventManager|null $eventManager Event manager to check, defaults to global event manager\n     * @param string $message Assertion failure message\n     * @return void\n     *\/",162],["T_WHITESPACE","\n    ",173],["T_PUBLIC","public",174],["T_WHITESPACE"," ",174],["T_FUNCTION","function",174],["T_WHITESPACE"," ",174],["T_STRING","assertEventFiredWith",174],"(",["T_VARIABLE","$name",174],",",["T_WHITESPACE"," ",174],["T_VARIABLE","$dataKey",174],",",["T_WHITESPACE"," ",174],["T_VARIABLE","$dataValue",174],",",["T_WHITESPACE"," ",174],["T_VARIABLE","$eventManager",174],["T_WHITESPACE"," ",174],"=",["T_WHITESPACE"," ",174],["T_STRING","null",174],",",["T_WHITESPACE"," ",174],["T_VARIABLE","$message",174],["T_WHITESPACE"," ",174],"=",["T_WHITESPACE"," ",174],["T_CONSTANT_ENCAPSED_STRING","''",174],")",["T_WHITESPACE","\n    ",174],"{",["T_WHITESPACE","\n        ",175],["T_IF","if",176],["T_WHITESPACE"," ",176],"(","!",["T_VARIABLE","$eventManager",176],")",["T_WHITESPACE"," ",176],"{",["T_WHITESPACE","\n            ",176],["T_VARIABLE","$eventManager",177],["T_WHITESPACE"," ",177],"=",["T_WHITESPACE"," ",177],["T_STRING","EventManager",177],["T_DOUBLE_COLON","::",177],["T_STRING","instance",177],"(",")",";",["T_WHITESPACE","\n        ",177],"}",["T_WHITESPACE","\n        ",178],["T_VARIABLE","$this",179],["T_OBJECT_OPERATOR","->",179],["T_STRING","assertThat",179],"(",["T_VARIABLE","$name",179],",",["T_WHITESPACE"," ",179],["T_NEW","new",179],["T_WHITESPACE"," ",179],["T_STRING","EventFiredWith",179],"(",["T_VARIABLE","$eventManager",179],",",["T_WHITESPACE"," ",179],["T_VARIABLE","$dataKey",179],",",["T_WHITESPACE"," ",179],["T_VARIABLE","$dataValue",179],")",",",["T_WHITESPACE"," ",179],["T_VARIABLE","$message",179],")",";",["T_WHITESPACE","\n    ",179],"}",["T_WHITESPACE","\n\n    ",180],["T_DOC_COMMENT","\/**\n     * Assert text equality, ignoring differences in newlines.\n     * Helpful for doing cross platform tests of blocks of text.\n     *\n     * @param string $expected The expected value.\n     * @param string $result The actual value.\n     * @param string $message The message to use for failure.\n     * @return void\n     *\/",182],["T_WHITESPACE","\n    ",190],["T_PUBLIC","public",191],["T_WHITESPACE"," ",191],["T_FUNCTION","function",191],["T_WHITESPACE"," ",191],["T_STRING","assertTextNotEquals",191],"(",["T_VARIABLE","$expected",191],",",["T_WHITESPACE"," ",191],["T_VARIABLE","$result",191],",",["T_WHITESPACE"," ",191],["T_VARIABLE","$message",191],["T_WHITESPACE"," ",191],"=",["T_WHITESPACE"," ",191],["T_CONSTANT_ENCAPSED_STRING","''",191],")",["T_WHITESPACE","\n    ",191],"{",["T_WHITESPACE","\n        ",192],["T_VARIABLE","$expected",193],["T_WHITESPACE"," ",193],"=",["T_WHITESPACE"," ",193],["T_STRING","str_replace",193],"(","[",["T_CONSTANT_ENCAPSED_STRING","\"\\r\\n\"",193],",",["T_WHITESPACE"," ",193],["T_CONSTANT_ENCAPSED_STRING","\"\\r\"",193],"]",",",["T_WHITESPACE"," ",193],["T_CONSTANT_ENCAPSED_STRING","\"\\n\"",193],",",["T_WHITESPACE"," ",193],["T_VARIABLE","$expected",193],")",";",["T_WHITESPACE","\n        ",193],["T_VARIABLE","$result",194],["T_WHITESPACE"," ",194],"=",["T_WHITESPACE"," ",194],["T_STRING","str_replace",194],"(","[",["T_CONSTANT_ENCAPSED_STRING","\"\\r\\n\"",194],",",["T_WHITESPACE"," ",194],["T_CONSTANT_ENCAPSED_STRING","\"\\r\"",194],"]",",",["T_WHITESPACE"," ",194],["T_CONSTANT_ENCAPSED_STRING","\"\\n\"",194],",",["T_WHITESPACE"," ",194],["T_VARIABLE","$result",194],")",";",["T_WHITESPACE","\n        ",194],["T_VARIABLE","$this",195],["T_OBJECT_OPERATOR","->",195],["T_STRING","assertNotEquals",195],"(",["T_VARIABLE","$expected",195],",",["T_WHITESPACE"," ",195],["T_VARIABLE","$result",195],",",["T_WHITESPACE"," ",195],["T_VARIABLE","$message",195],")",";",["T_WHITESPACE","\n    ",195],"}",["T_WHITESPACE","\n\n    ",196],["T_DOC_COMMENT","\/**\n     * Assert text equality, ignoring differences in newlines.\n     * Helpful for doing cross platform tests of blocks of text.\n     *\n     * @param string $expected The expected value.\n     * @param string $result The actual value.\n     * @param string $message The message to use for failure.\n     * @return void\n     *\/",198],["T_WHITESPACE","\n    ",206],["T_PUBLIC","public",207],["T_WHITESPACE"," ",207],["T_FUNCTION","function",207],["T_WHITESPACE"," ",207],["T_STRING","assertTextEquals",207],"(",["T_VARIABLE","$expected",207],",",["T_WHITESPACE"," ",207],["T_VARIABLE","$result",207],",",["T_WHITESPACE"," ",207],["T_VARIABLE","$message",207],["T_WHITESPACE"," ",207],"=",["T_WHITESPACE"," ",207],["T_CONSTANT_ENCAPSED_STRING","''",207],")",["T_WHITESPACE","\n    ",207],"{",["T_WHITESPACE","\n        ",208],["T_VARIABLE","$expected",209],["T_WHITESPACE"," ",209],"=",["T_WHITESPACE"," ",209],["T_STRING","str_replace",209],"(","[",["T_CONSTANT_ENCAPSED_STRING","\"\\r\\n\"",209],",",["T_WHITESPACE"," ",209],["T_CONSTANT_ENCAPSED_STRING","\"\\r\"",209],"]",",",["T_WHITESPACE"," ",209],["T_CONSTANT_ENCAPSED_STRING","\"\\n\"",209],",",["T_WHITESPACE"," ",209],["T_VARIABLE","$expected",209],")",";",["T_WHITESPACE","\n        ",209],["T_VARIABLE","$result",210],["T_WHITESPACE"," ",210],"=",["T_WHITESPACE"," ",210],["T_STRING","str_replace",210],"(","[",["T_CONSTANT_ENCAPSED_STRING","\"\\r\\n\"",210],",",["T_WHITESPACE"," ",210],["T_CONSTANT_ENCAPSED_STRING","\"\\r\"",210],"]",",",["T_WHITESPACE"," ",210],["T_CONSTANT_ENCAPSED_STRING","\"\\n\"",210],",",["T_WHITESPACE"," ",210],["T_VARIABLE","$result",210],")",";",["T_WHITESPACE","\n        ",210],["T_VARIABLE","$this",211],["T_OBJECT_OPERATOR","->",211],["T_STRING","assertEquals",211],"(",["T_VARIABLE","$expected",211],",",["T_WHITESPACE"," ",211],["T_VARIABLE","$result",211],",",["T_WHITESPACE"," ",211],["T_VARIABLE","$message",211],")",";",["T_WHITESPACE","\n    ",211],"}",["T_WHITESPACE","\n\n    ",212],["T_DOC_COMMENT","\/**\n     * Asserts that a string starts with a given prefix, ignoring differences in newlines.\n     * Helpful for doing cross platform tests of blocks of text.\n     *\n     * @param string $prefix The prefix to check for.\n     * @param string $string The string to search in.\n     * @param string $message The message to use for failure.\n     * @return void\n     *\/",214],["T_WHITESPACE","\n    ",222],["T_PUBLIC","public",223],["T_WHITESPACE"," ",223],["T_FUNCTION","function",223],["T_WHITESPACE"," ",223],["T_STRING","assertTextStartsWith",223],"(",["T_VARIABLE","$prefix",223],",",["T_WHITESPACE"," ",223],["T_VARIABLE","$string",223],",",["T_WHITESPACE"," ",223],["T_VARIABLE","$message",223],["T_WHITESPACE"," ",223],"=",["T_WHITESPACE"," ",223],["T_CONSTANT_ENCAPSED_STRING","''",223],")",["T_WHITESPACE","\n    ",223],"{",["T_WHITESPACE","\n        ",224],["T_VARIABLE","$prefix",225],["T_WHITESPACE"," ",225],"=",["T_WHITESPACE"," ",225],["T_STRING","str_replace",225],"(","[",["T_CONSTANT_ENCAPSED_STRING","\"\\r\\n\"",225],",",["T_WHITESPACE"," ",225],["T_CONSTANT_ENCAPSED_STRING","\"\\r\"",225],"]",",",["T_WHITESPACE"," ",225],["T_CONSTANT_ENCAPSED_STRING","\"\\n\"",225],",",["T_WHITESPACE"," ",225],["T_VARIABLE","$prefix",225],")",";",["T_WHITESPACE","\n        ",225],["T_VARIABLE","$string",226],["T_WHITESPACE"," ",226],"=",["T_WHITESPACE"," ",226],["T_STRING","str_replace",226],"(","[",["T_CONSTANT_ENCAPSED_STRING","\"\\r\\n\"",226],",",["T_WHITESPACE"," ",226],["T_CONSTANT_ENCAPSED_STRING","\"\\r\"",226],"]",",",["T_WHITESPACE"," ",226],["T_CONSTANT_ENCAPSED_STRING","\"\\n\"",226],",",["T_WHITESPACE"," ",226],["T_VARIABLE","$string",226],")",";",["T_WHITESPACE","\n        ",226],["T_VARIABLE","$this",227],["T_OBJECT_OPERATOR","->",227],["T_STRING","assertStringStartsWith",227],"(",["T_VARIABLE","$prefix",227],",",["T_WHITESPACE"," ",227],["T_VARIABLE","$string",227],",",["T_WHITESPACE"," ",227],["T_VARIABLE","$message",227],")",";",["T_WHITESPACE","\n    ",227],"}",["T_WHITESPACE","\n\n    ",228],["T_DOC_COMMENT","\/**\n     * Asserts that a string starts not with a given prefix, ignoring differences in newlines.\n     * Helpful for doing cross platform tests of blocks of text.\n     *\n     * @param string $prefix The prefix to not find.\n     * @param string $string The string to search.\n     * @param string $message The message to use for failure.\n     * @return void\n     *\/",230],["T_WHITESPACE","\n    ",238],["T_PUBLIC","public",239],["T_WHITESPACE"," ",239],["T_FUNCTION","function",239],["T_WHITESPACE"," ",239],["T_STRING","assertTextStartsNotWith",239],"(",["T_VARIABLE","$prefix",239],",",["T_WHITESPACE"," ",239],["T_VARIABLE","$string",239],",",["T_WHITESPACE"," ",239],["T_VARIABLE","$message",239],["T_WHITESPACE"," ",239],"=",["T_WHITESPACE"," ",239],["T_CONSTANT_ENCAPSED_STRING","''",239],")",["T_WHITESPACE","\n    ",239],"{",["T_WHITESPACE","\n        ",240],["T_VARIABLE","$prefix",241],["T_WHITESPACE"," ",241],"=",["T_WHITESPACE"," ",241],["T_STRING","str_replace",241],"(","[",["T_CONSTANT_ENCAPSED_STRING","\"\\r\\n\"",241],",",["T_WHITESPACE"," ",241],["T_CONSTANT_ENCAPSED_STRING","\"\\r\"",241],"]",",",["T_WHITESPACE"," ",241],["T_CONSTANT_ENCAPSED_STRING","\"\\n\"",241],",",["T_WHITESPACE"," ",241],["T_VARIABLE","$prefix",241],")",";",["T_WHITESPACE","\n        ",241],["T_VARIABLE","$string",242],["T_WHITESPACE"," ",242],"=",["T_WHITESPACE"," ",242],["T_STRING","str_replace",242],"(","[",["T_CONSTANT_ENCAPSED_STRING","\"\\r\\n\"",242],",",["T_WHITESPACE"," ",242],["T_CONSTANT_ENCAPSED_STRING","\"\\r\"",242],"]",",",["T_WHITESPACE"," ",242],["T_CONSTANT_ENCAPSED_STRING","\"\\n\"",242],",",["T_WHITESPACE"," ",242],["T_VARIABLE","$string",242],")",";",["T_WHITESPACE","\n        ",242],["T_VARIABLE","$this",243],["T_OBJECT_OPERATOR","->",243],["T_STRING","assertStringStartsNotWith",243],"(",["T_VARIABLE","$prefix",243],",",["T_WHITESPACE"," ",243],["T_VARIABLE","$string",243],",",["T_WHITESPACE"," ",243],["T_VARIABLE","$message",243],")",";",["T_WHITESPACE","\n    ",243],"}",["T_WHITESPACE","\n\n    ",244],["T_DOC_COMMENT","\/**\n     * Asserts that a string ends with a given prefix, ignoring differences in newlines.\n     * Helpful for doing cross platform tests of blocks of text.\n     *\n     * @param string $suffix The suffix to find.\n     * @param string $string The string to search.\n     * @param string $message The message to use for failure.\n     * @return void\n     *\/",246],["T_WHITESPACE","\n    ",254],["T_PUBLIC","public",255],["T_WHITESPACE"," ",255],["T_FUNCTION","function",255],["T_WHITESPACE"," ",255],["T_STRING","assertTextEndsWith",255],"(",["T_VARIABLE","$suffix",255],",",["T_WHITESPACE"," ",255],["T_VARIABLE","$string",255],",",["T_WHITESPACE"," ",255],["T_VARIABLE","$message",255],["T_WHITESPACE"," ",255],"=",["T_WHITESPACE"," ",255],["T_CONSTANT_ENCAPSED_STRING","''",255],")",["T_WHITESPACE","\n    ",255],"{",["T_WHITESPACE","\n        ",256],["T_VARIABLE","$suffix",257],["T_WHITESPACE"," ",257],"=",["T_WHITESPACE"," ",257],["T_STRING","str_replace",257],"(","[",["T_CONSTANT_ENCAPSED_STRING","\"\\r\\n\"",257],",",["T_WHITESPACE"," ",257],["T_CONSTANT_ENCAPSED_STRING","\"\\r\"",257],"]",",",["T_WHITESPACE"," ",257],["T_CONSTANT_ENCAPSED_STRING","\"\\n\"",257],",",["T_WHITESPACE"," ",257],["T_VARIABLE","$suffix",257],")",";",["T_WHITESPACE","\n        ",257],["T_VARIABLE","$string",258],["T_WHITESPACE"," ",258],"=",["T_WHITESPACE"," ",258],["T_STRING","str_replace",258],"(","[",["T_CONSTANT_ENCAPSED_STRING","\"\\r\\n\"",258],",",["T_WHITESPACE"," ",258],["T_CONSTANT_ENCAPSED_STRING","\"\\r\"",258],"]",",",["T_WHITESPACE"," ",258],["T_CONSTANT_ENCAPSED_STRING","\"\\n\"",258],",",["T_WHITESPACE"," ",258],["T_VARIABLE","$string",258],")",";",["T_WHITESPACE","\n        ",258],["T_VARIABLE","$this",259],["T_OBJECT_OPERATOR","->",259],["T_STRING","assertStringEndsWith",259],"(",["T_VARIABLE","$suffix",259],",",["T_WHITESPACE"," ",259],["T_VARIABLE","$string",259],",",["T_WHITESPACE"," ",259],["T_VARIABLE","$message",259],")",";",["T_WHITESPACE","\n    ",259],"}",["T_WHITESPACE","\n\n    ",260],["T_DOC_COMMENT","\/**\n     * Asserts that a string ends not with a given prefix, ignoring differences in newlines.\n     * Helpful for doing cross platform tests of blocks of text.\n     *\n     * @param string $suffix The suffix to not find.\n     * @param string $string The string to search.\n     * @param string $message The message to use for failure.\n     * @return void\n     *\/",262],["T_WHITESPACE","\n    ",270],["T_PUBLIC","public",271],["T_WHITESPACE"," ",271],["T_FUNCTION","function",271],["T_WHITESPACE"," ",271],["T_STRING","assertTextEndsNotWith",271],"(",["T_VARIABLE","$suffix",271],",",["T_WHITESPACE"," ",271],["T_VARIABLE","$string",271],",",["T_WHITESPACE"," ",271],["T_VARIABLE","$message",271],["T_WHITESPACE"," ",271],"=",["T_WHITESPACE"," ",271],["T_CONSTANT_ENCAPSED_STRING","''",271],")",["T_WHITESPACE","\n    ",271],"{",["T_WHITESPACE","\n        ",272],["T_VARIABLE","$suffix",273],["T_WHITESPACE"," ",273],"=",["T_WHITESPACE"," ",273],["T_STRING","str_replace",273],"(","[",["T_CONSTANT_ENCAPSED_STRING","\"\\r\\n\"",273],",",["T_WHITESPACE"," ",273],["T_CONSTANT_ENCAPSED_STRING","\"\\r\"",273],"]",",",["T_WHITESPACE"," ",273],["T_CONSTANT_ENCAPSED_STRING","\"\\n\"",273],",",["T_WHITESPACE"," ",273],["T_VARIABLE","$suffix",273],")",";",["T_WHITESPACE","\n        ",273],["T_VARIABLE","$string",274],["T_WHITESPACE"," ",274],"=",["T_WHITESPACE"," ",274],["T_STRING","str_replace",274],"(","[",["T_CONSTANT_ENCAPSED_STRING","\"\\r\\n\"",274],",",["T_WHITESPACE"," ",274],["T_CONSTANT_ENCAPSED_STRING","\"\\r\"",274],"]",",",["T_WHITESPACE"," ",274],["T_CONSTANT_ENCAPSED_STRING","\"\\n\"",274],",",["T_WHITESPACE"," ",274],["T_VARIABLE","$string",274],")",";",["T_WHITESPACE","\n        ",274],["T_VARIABLE","$this",275],["T_OBJECT_OPERATOR","->",275],["T_STRING","assertStringEndsNotWith",275],"(",["T_VARIABLE","$suffix",275],",",["T_WHITESPACE"," ",275],["T_VARIABLE","$string",275],",",["T_WHITESPACE"," ",275],["T_VARIABLE","$message",275],")",";",["T_WHITESPACE","\n    ",275],"}",["T_WHITESPACE","\n\n    ",276],["T_DOC_COMMENT","\/**\n     * Assert that a string contains another string, ignoring differences in newlines.\n     * Helpful for doing cross platform tests of blocks of text.\n     *\n     * @param string $needle The string to search for.\n     * @param string $haystack The string to search through.\n     * @param string $message The message to display on failure.\n     * @param bool $ignoreCase Whether or not the search should be case-sensitive.\n     * @return void\n     *\/",278],["T_WHITESPACE","\n    ",287],["T_PUBLIC","public",288],["T_WHITESPACE"," ",288],["T_FUNCTION","function",288],["T_WHITESPACE"," ",288],["T_STRING","assertTextContains",288],"(",["T_VARIABLE","$needle",288],",",["T_WHITESPACE"," ",288],["T_VARIABLE","$haystack",288],",",["T_WHITESPACE"," ",288],["T_VARIABLE","$message",288],["T_WHITESPACE"," ",288],"=",["T_WHITESPACE"," ",288],["T_CONSTANT_ENCAPSED_STRING","''",288],",",["T_WHITESPACE"," ",288],["T_VARIABLE","$ignoreCase",288],["T_WHITESPACE"," ",288],"=",["T_WHITESPACE"," ",288],["T_STRING","false",288],")",["T_WHITESPACE","\n    ",288],"{",["T_WHITESPACE","\n        ",289],["T_VARIABLE","$needle",290],["T_WHITESPACE"," ",290],"=",["T_WHITESPACE"," ",290],["T_STRING","str_replace",290],"(","[",["T_CONSTANT_ENCAPSED_STRING","\"\\r\\n\"",290],",",["T_WHITESPACE"," ",290],["T_CONSTANT_ENCAPSED_STRING","\"\\r\"",290],"]",",",["T_WHITESPACE"," ",290],["T_CONSTANT_ENCAPSED_STRING","\"\\n\"",290],",",["T_WHITESPACE"," ",290],["T_VARIABLE","$needle",290],")",";",["T_WHITESPACE","\n        ",290],["T_VARIABLE","$haystack",291],["T_WHITESPACE"," ",291],"=",["T_WHITESPACE"," ",291],["T_STRING","str_replace",291],"(","[",["T_CONSTANT_ENCAPSED_STRING","\"\\r\\n\"",291],",",["T_WHITESPACE"," ",291],["T_CONSTANT_ENCAPSED_STRING","\"\\r\"",291],"]",",",["T_WHITESPACE"," ",291],["T_CONSTANT_ENCAPSED_STRING","\"\\n\"",291],",",["T_WHITESPACE"," ",291],["T_VARIABLE","$haystack",291],")",";",["T_WHITESPACE","\n        ",291],["T_VARIABLE","$this",292],["T_OBJECT_OPERATOR","->",292],["T_STRING","assertContains",292],"(",["T_VARIABLE","$needle",292],",",["T_WHITESPACE"," ",292],["T_VARIABLE","$haystack",292],",",["T_WHITESPACE"," ",292],["T_VARIABLE","$message",292],",",["T_WHITESPACE"," ",292],["T_VARIABLE","$ignoreCase",292],")",";",["T_WHITESPACE","\n    ",292],"}",["T_WHITESPACE","\n\n    ",293],["T_DOC_COMMENT","\/**\n     * Assert that a text doesn't contain another text, ignoring differences in newlines.\n     * Helpful for doing cross platform tests of blocks of text.\n     *\n     * @param string $needle The string to search for.\n     * @param string $haystack The string to search through.\n     * @param string $message The message to display on failure.\n     * @param bool $ignoreCase Whether or not the search should be case-sensitive.\n     * @return void\n     *\/",295],["T_WHITESPACE","\n    ",304],["T_PUBLIC","public",305],["T_WHITESPACE"," ",305],["T_FUNCTION","function",305],["T_WHITESPACE"," ",305],["T_STRING","assertTextNotContains",305],"(",["T_VARIABLE","$needle",305],",",["T_WHITESPACE"," ",305],["T_VARIABLE","$haystack",305],",",["T_WHITESPACE"," ",305],["T_VARIABLE","$message",305],["T_WHITESPACE"," ",305],"=",["T_WHITESPACE"," ",305],["T_CONSTANT_ENCAPSED_STRING","''",305],",",["T_WHITESPACE"," ",305],["T_VARIABLE","$ignoreCase",305],["T_WHITESPACE"," ",305],"=",["T_WHITESPACE"," ",305],["T_STRING","false",305],")",["T_WHITESPACE","\n    ",305],"{",["T_WHITESPACE","\n        ",306],["T_VARIABLE","$needle",307],["T_WHITESPACE"," ",307],"=",["T_WHITESPACE"," ",307],["T_STRING","str_replace",307],"(","[",["T_CONSTANT_ENCAPSED_STRING","\"\\r\\n\"",307],",",["T_WHITESPACE"," ",307],["T_CONSTANT_ENCAPSED_STRING","\"\\r\"",307],"]",",",["T_WHITESPACE"," ",307],["T_CONSTANT_ENCAPSED_STRING","\"\\n\"",307],",",["T_WHITESPACE"," ",307],["T_VARIABLE","$needle",307],")",";",["T_WHITESPACE","\n        ",307],["T_VARIABLE","$haystack",308],["T_WHITESPACE"," ",308],"=",["T_WHITESPACE"," ",308],["T_STRING","str_replace",308],"(","[",["T_CONSTANT_ENCAPSED_STRING","\"\\r\\n\"",308],",",["T_WHITESPACE"," ",308],["T_CONSTANT_ENCAPSED_STRING","\"\\r\"",308],"]",",",["T_WHITESPACE"," ",308],["T_CONSTANT_ENCAPSED_STRING","\"\\n\"",308],",",["T_WHITESPACE"," ",308],["T_VARIABLE","$haystack",308],")",";",["T_WHITESPACE","\n        ",308],["T_VARIABLE","$this",309],["T_OBJECT_OPERATOR","->",309],["T_STRING","assertNotContains",309],"(",["T_VARIABLE","$needle",309],",",["T_WHITESPACE"," ",309],["T_VARIABLE","$haystack",309],",",["T_WHITESPACE"," ",309],["T_VARIABLE","$message",309],",",["T_WHITESPACE"," ",309],["T_VARIABLE","$ignoreCase",309],")",";",["T_WHITESPACE","\n    ",309],"}",["T_WHITESPACE","\n\n    ",310],["T_DOC_COMMENT","\/**\n     * Asserts HTML tags.\n     *\n     * @param string $string An HTML\/XHTML\/XML string\n     * @param array $expected An array, see above\n     * @param bool $fullDebug Whether or not more verbose output should be used.\n     * @return void\n     * @deprecated 3.0. Use assertHtml() instead.\n     *\/",312],["T_WHITESPACE","\n    ",320],["T_PUBLIC","public",321],["T_WHITESPACE"," ",321],["T_FUNCTION","function",321],["T_WHITESPACE"," ",321],["T_STRING","assertTags",321],"(",["T_VARIABLE","$string",321],",",["T_WHITESPACE"," ",321],["T_VARIABLE","$expected",321],",",["T_WHITESPACE"," ",321],["T_VARIABLE","$fullDebug",321],["T_WHITESPACE"," ",321],"=",["T_WHITESPACE"," ",321],["T_STRING","false",321],")",["T_WHITESPACE","\n    ",321],"{",["T_WHITESPACE","\n        ",322],["T_STRING","trigger_error",323],"(",["T_WHITESPACE","\n            ",323],["T_CONSTANT_ENCAPSED_STRING","'assertTags() is deprecated, use assertHtml() instead.'",324],",",["T_WHITESPACE","\n            ",324],["T_STRING","E_USER_DEPRECATED",325],["T_WHITESPACE","\n        ",325],")",";",["T_WHITESPACE","\n        ",326],["T_STATIC","static",327],["T_DOUBLE_COLON","::",327],["T_STRING","assertHtml",327],"(",["T_VARIABLE","$expected",327],",",["T_WHITESPACE"," ",327],["T_VARIABLE","$string",327],",",["T_WHITESPACE"," ",327],["T_VARIABLE","$fullDebug",327],")",";",["T_WHITESPACE","\n    ",327],"}",["T_WHITESPACE","\n\n    ",328],["T_DOC_COMMENT","\/**\n     * Asserts HTML tags.\n     *\n     * Takes an array $expected and generates a regex from it to match the provided $string.\n     * Samples for $expected:\n     *\n     * Checks for an input tag with a name attribute (contains any non-empty value) and an id\n     * attribute that contains 'my-input':\n     *\n     * ```\n     * ['input' => ['name', 'id' => 'my-input']]\n     * ```\n     *\n     * Checks for two p elements with some text in them:\n     *\n     * ```\n     * [\n     *   ['p' => true],\n     *   'textA',\n     *   '\/p',\n     *   ['p' => true],\n     *   'textB',\n     *   '\/p'\n     * ]\n     * ```\n     *\n     * You can also specify a pattern expression as part of the attribute values, or the tag\n     * being defined, if you prepend the value with preg: and enclose it with slashes, like so:\n     *\n     * ```\n     * [\n     *   ['input' => ['name', 'id' => 'preg:\/FieldName\\d+\/']],\n     *   'preg:\/My\\s+field\/'\n     * ]\n     * ```\n     *\n     * Important: This function is very forgiving about whitespace and also accepts any\n     * permutation of attribute order. It will also allow whitespace between specified tags.\n     *\n     * @param array $expected An array, see above\n     * @param string $string An HTML\/XHTML\/XML string\n     * @param bool $fullDebug Whether or not more verbose output should be used.\n     * @return bool\n     *\/",330],["T_WHITESPACE","\n    ",373],["T_PUBLIC","public",374],["T_WHITESPACE"," ",374],["T_FUNCTION","function",374],["T_WHITESPACE"," ",374],["T_STRING","assertHtml",374],"(",["T_VARIABLE","$expected",374],",",["T_WHITESPACE"," ",374],["T_VARIABLE","$string",374],",",["T_WHITESPACE"," ",374],["T_VARIABLE","$fullDebug",374],["T_WHITESPACE"," ",374],"=",["T_WHITESPACE"," ",374],["T_STRING","false",374],")",["T_WHITESPACE","\n    ",374],"{",["T_WHITESPACE","\n        ",375],["T_VARIABLE","$regex",376],["T_WHITESPACE"," ",376],"=",["T_WHITESPACE"," ",376],"[","]",";",["T_WHITESPACE","\n        ",376],["T_VARIABLE","$normalized",377],["T_WHITESPACE"," ",377],"=",["T_WHITESPACE"," ",377],"[","]",";",["T_WHITESPACE","\n        ",377],["T_FOREACH","foreach",378],["T_WHITESPACE"," ",378],"(",["T_ARRAY_CAST","(array)",378],["T_VARIABLE","$expected",378],["T_WHITESPACE"," ",378],["T_AS","as",378],["T_WHITESPACE"," ",378],["T_VARIABLE","$key",378],["T_WHITESPACE"," ",378],["T_DOUBLE_ARROW","=>",378],["T_WHITESPACE"," ",378],["T_VARIABLE","$val",378],")",["T_WHITESPACE"," ",378],"{",["T_WHITESPACE","\n            ",378],["T_IF","if",379],["T_WHITESPACE"," ",379],"(","!",["T_STRING","is_numeric",379],"(",["T_VARIABLE","$key",379],")",")",["T_WHITESPACE"," ",379],"{",["T_WHITESPACE","\n                ",379],["T_VARIABLE","$normalized",380],"[","]",["T_WHITESPACE"," ",380],"=",["T_WHITESPACE"," ",380],"[",["T_VARIABLE","$key",380],["T_WHITESPACE"," ",380],["T_DOUBLE_ARROW","=>",380],["T_WHITESPACE"," ",380],["T_VARIABLE","$val",380],"]",";",["T_WHITESPACE","\n            ",380],"}",["T_WHITESPACE"," ",381],["T_ELSE","else",381],["T_WHITESPACE"," ",381],"{",["T_WHITESPACE","\n                ",381],["T_VARIABLE","$normalized",382],"[","]",["T_WHITESPACE"," ",382],"=",["T_WHITESPACE"," ",382],["T_VARIABLE","$val",382],";",["T_WHITESPACE","\n            ",382],"}",["T_WHITESPACE","\n        ",383],"}",["T_WHITESPACE","\n        ",384],["T_VARIABLE","$i",385],["T_WHITESPACE"," ",385],"=",["T_WHITESPACE"," ",385],["T_LNUMBER","0",385],";",["T_WHITESPACE","\n        ",385],["T_FOREACH","foreach",386],["T_WHITESPACE"," ",386],"(",["T_VARIABLE","$normalized",386],["T_WHITESPACE"," ",386],["T_AS","as",386],["T_WHITESPACE"," ",386],["T_VARIABLE","$tags",386],")",["T_WHITESPACE"," ",386],"{",["T_WHITESPACE","\n            ",386],["T_IF","if",387],["T_WHITESPACE"," ",387],"(","!",["T_STRING","is_array",387],"(",["T_VARIABLE","$tags",387],")",")",["T_WHITESPACE"," ",387],"{",["T_WHITESPACE","\n                ",387],["T_VARIABLE","$tags",388],["T_WHITESPACE"," ",388],"=",["T_WHITESPACE"," ",388],["T_STRING_CAST","(string)",388],["T_VARIABLE","$tags",388],";",["T_WHITESPACE","\n            ",388],"}",["T_WHITESPACE","\n            ",389],["T_VARIABLE","$i",390],["T_INC","++",390],";",["T_WHITESPACE","\n            ",390],["T_IF","if",391],["T_WHITESPACE"," ",391],"(",["T_STRING","is_string",391],"(",["T_VARIABLE","$tags",391],")",["T_WHITESPACE"," ",391],["T_BOOLEAN_AND","&&",391],["T_WHITESPACE"," ",391],["T_VARIABLE","$tags",391],"{",["T_LNUMBER","0",391],"}",["T_WHITESPACE"," ",391],["T_IS_IDENTICAL","===",391],["T_WHITESPACE"," ",391],["T_CONSTANT_ENCAPSED_STRING","'<'",391],")",["T_WHITESPACE"," ",391],"{",["T_WHITESPACE","\n                ",391],["T_VARIABLE","$tags",392],["T_WHITESPACE"," ",392],"=",["T_WHITESPACE"," ",392],"[",["T_STRING","substr",392],"(",["T_VARIABLE","$tags",392],",",["T_WHITESPACE"," ",392],["T_LNUMBER","1",392],")",["T_WHITESPACE"," ",392],["T_DOUBLE_ARROW","=>",392],["T_WHITESPACE"," ",392],"[","]","]",";",["T_WHITESPACE","\n            ",392],"}",["T_WHITESPACE"," ",393],["T_ELSEIF","elseif",393],["T_WHITESPACE"," ",393],"(",["T_STRING","is_string",393],"(",["T_VARIABLE","$tags",393],")",")",["T_WHITESPACE"," ",393],"{",["T_WHITESPACE","\n                ",393],["T_VARIABLE","$tagsTrimmed",394],["T_WHITESPACE"," ",394],"=",["T_WHITESPACE"," ",394],["T_STRING","preg_replace",394],"(",["T_CONSTANT_ENCAPSED_STRING","'\/\\s+\/m'",394],",",["T_WHITESPACE"," ",394],["T_CONSTANT_ENCAPSED_STRING","''",394],",",["T_WHITESPACE"," ",394],["T_VARIABLE","$tags",394],")",";",["T_WHITESPACE","\n\n                ",394],["T_IF","if",396],["T_WHITESPACE"," ",396],"(",["T_STRING","preg_match",396],"(",["T_CONSTANT_ENCAPSED_STRING","'\/^\\*?\\\/\/'",396],",",["T_WHITESPACE"," ",396],["T_VARIABLE","$tags",396],",",["T_WHITESPACE"," ",396],["T_VARIABLE","$match",396],")",["T_WHITESPACE"," ",396],["T_BOOLEAN_AND","&&",396],["T_WHITESPACE"," ",396],["T_VARIABLE","$tagsTrimmed",396],["T_WHITESPACE"," ",396],["T_IS_NOT_IDENTICAL","!==",396],["T_WHITESPACE"," ",396],["T_CONSTANT_ENCAPSED_STRING","'\/\/'",396],")",["T_WHITESPACE"," ",396],"{",["T_WHITESPACE","\n                    ",396],["T_VARIABLE","$prefix",397],["T_WHITESPACE"," ",397],"=",["T_WHITESPACE"," ",397],"[",["T_STRING","null",397],",",["T_WHITESPACE"," ",397],["T_STRING","null",397],"]",";",["T_WHITESPACE","\n\n                    ",397],["T_IF","if",399],["T_WHITESPACE"," ",399],"(",["T_VARIABLE","$match",399],"[",["T_LNUMBER","0",399],"]",["T_WHITESPACE"," ",399],["T_IS_IDENTICAL","===",399],["T_WHITESPACE"," ",399],["T_CONSTANT_ENCAPSED_STRING","'*\/'",399],")",["T_WHITESPACE"," ",399],"{",["T_WHITESPACE","\n                        ",399],["T_VARIABLE","$prefix",400],["T_WHITESPACE"," ",400],"=",["T_WHITESPACE"," ",400],"[",["T_CONSTANT_ENCAPSED_STRING","'Anything, '",400],",",["T_WHITESPACE"," ",400],["T_CONSTANT_ENCAPSED_STRING","'.*?'",400],"]",";",["T_WHITESPACE","\n                    ",400],"}",["T_WHITESPACE","\n                    ",401],["T_VARIABLE","$regex",402],"[","]",["T_WHITESPACE"," ",402],"=",["T_WHITESPACE"," ",402],"[",["T_WHITESPACE","\n                        ",402],["T_STRING","sprintf",403],"(",["T_CONSTANT_ENCAPSED_STRING","'%sClose %s tag'",403],",",["T_WHITESPACE"," ",403],["T_VARIABLE","$prefix",403],"[",["T_LNUMBER","0",403],"]",",",["T_WHITESPACE"," ",403],["T_STRING","substr",403],"(",["T_VARIABLE","$tags",403],",",["T_WHITESPACE"," ",403],["T_STRING","strlen",403],"(",["T_VARIABLE","$match",403],"[",["T_LNUMBER","0",403],"]",")",")",")",",",["T_WHITESPACE","\n                        ",403],["T_STRING","sprintf",404],"(",["T_CONSTANT_ENCAPSED_STRING","'%s\\s*<[\\s]*\\\/[\\s]*%s[\\s]*>[\\n\\r]*'",404],",",["T_WHITESPACE"," ",404],["T_VARIABLE","$prefix",404],"[",["T_LNUMBER","1",404],"]",",",["T_WHITESPACE"," ",404],["T_STRING","substr",404],"(",["T_VARIABLE","$tags",404],",",["T_WHITESPACE"," ",404],["T_STRING","strlen",404],"(",["T_VARIABLE","$match",404],"[",["T_LNUMBER","0",404],"]",")",")",")",",",["T_WHITESPACE","\n                        ",404],["T_VARIABLE","$i",405],",",["T_WHITESPACE","\n                    ",405],"]",";",["T_WHITESPACE","\n                    ",406],["T_CONTINUE","continue",407],";",["T_WHITESPACE","\n                ",407],"}",["T_WHITESPACE","\n                ",408],["T_IF","if",409],["T_WHITESPACE"," ",409],"(","!",["T_EMPTY","empty",409],"(",["T_VARIABLE","$tags",409],")",["T_WHITESPACE"," ",409],["T_BOOLEAN_AND","&&",409],["T_WHITESPACE"," ",409],["T_STRING","preg_match",409],"(",["T_CONSTANT_ENCAPSED_STRING","'\/^preg\\:\\\/(.+)\\\/$\/i'",409],",",["T_WHITESPACE"," ",409],["T_VARIABLE","$tags",409],",",["T_WHITESPACE"," ",409],["T_VARIABLE","$matches",409],")",")",["T_WHITESPACE"," ",409],"{",["T_WHITESPACE","\n                    ",409],["T_VARIABLE","$tags",410],["T_WHITESPACE"," ",410],"=",["T_WHITESPACE"," ",410],["T_VARIABLE","$matches",410],"[",["T_LNUMBER","1",410],"]",";",["T_WHITESPACE","\n                    ",410],["T_VARIABLE","$type",411],["T_WHITESPACE"," ",411],"=",["T_WHITESPACE"," ",411],["T_CONSTANT_ENCAPSED_STRING","'Regex matches'",411],";",["T_WHITESPACE","\n                ",411],"}",["T_WHITESPACE"," ",412],["T_ELSE","else",412],["T_WHITESPACE"," ",412],"{",["T_WHITESPACE","\n                    ",412],["T_VARIABLE","$tags",413],["T_WHITESPACE"," ",413],"=",["T_WHITESPACE"," ",413],["T_STRING","preg_quote",413],"(",["T_VARIABLE","$tags",413],",",["T_WHITESPACE"," ",413],["T_CONSTANT_ENCAPSED_STRING","'\/'",413],")",";",["T_WHITESPACE","\n                    ",413],["T_VARIABLE","$type",414],["T_WHITESPACE"," ",414],"=",["T_WHITESPACE"," ",414],["T_CONSTANT_ENCAPSED_STRING","'Text equals'",414],";",["T_WHITESPACE","\n                ",414],"}",["T_WHITESPACE","\n                ",415],["T_VARIABLE","$regex",416],"[","]",["T_WHITESPACE"," ",416],"=",["T_WHITESPACE"," ",416],"[",["T_WHITESPACE","\n                    ",416],["T_STRING","sprintf",417],"(",["T_CONSTANT_ENCAPSED_STRING","'%s \"%s\"'",417],",",["T_WHITESPACE"," ",417],["T_VARIABLE","$type",417],",",["T_WHITESPACE"," ",417],["T_VARIABLE","$tags",417],")",",",["T_WHITESPACE","\n                    ",417],["T_VARIABLE","$tags",418],",",["T_WHITESPACE","\n                    ",418],["T_VARIABLE","$i",419],",",["T_WHITESPACE","\n                ",419],"]",";",["T_WHITESPACE","\n                ",420],["T_CONTINUE","continue",421],";",["T_WHITESPACE","\n            ",421],"}",["T_WHITESPACE","\n            ",422],["T_FOREACH","foreach",423],["T_WHITESPACE"," ",423],"(",["T_VARIABLE","$tags",423],["T_WHITESPACE"," ",423],["T_AS","as",423],["T_WHITESPACE"," ",423],["T_VARIABLE","$tag",423],["T_WHITESPACE"," ",423],["T_DOUBLE_ARROW","=>",423],["T_WHITESPACE"," ",423],["T_VARIABLE","$attributes",423],")",["T_WHITESPACE"," ",423],"{",["T_WHITESPACE","\n                ",423],["T_VARIABLE","$regex",424],"[","]",["T_WHITESPACE"," ",424],"=",["T_WHITESPACE"," ",424],"[",["T_WHITESPACE","\n                    ",424],["T_STRING","sprintf",425],"(",["T_CONSTANT_ENCAPSED_STRING","'Open %s tag'",425],",",["T_WHITESPACE"," ",425],["T_VARIABLE","$tag",425],")",",",["T_WHITESPACE","\n                    ",425],["T_STRING","sprintf",426],"(",["T_CONSTANT_ENCAPSED_STRING","'[\\s]*<%s'",426],",",["T_WHITESPACE"," ",426],["T_STRING","preg_quote",426],"(",["T_VARIABLE","$tag",426],",",["T_WHITESPACE"," ",426],["T_CONSTANT_ENCAPSED_STRING","'\/'",426],")",")",",",["T_WHITESPACE","\n                    ",426],["T_VARIABLE","$i",427],",",["T_WHITESPACE","\n                ",427],"]",";",["T_WHITESPACE","\n                ",428],["T_IF","if",429],["T_WHITESPACE"," ",429],"(",["T_VARIABLE","$attributes",429],["T_WHITESPACE"," ",429],["T_IS_IDENTICAL","===",429],["T_WHITESPACE"," ",429],["T_STRING","true",429],")",["T_WHITESPACE"," ",429],"{",["T_WHITESPACE","\n                    ",429],["T_VARIABLE","$attributes",430],["T_WHITESPACE"," ",430],"=",["T_WHITESPACE"," ",430],"[","]",";",["T_WHITESPACE","\n                ",430],"}",["T_WHITESPACE","\n                ",431],["T_VARIABLE","$attrs",432],["T_WHITESPACE"," ",432],"=",["T_WHITESPACE"," ",432],"[","]",";",["T_WHITESPACE","\n                ",432],["T_VARIABLE","$explanations",433],["T_WHITESPACE"," ",433],"=",["T_WHITESPACE"," ",433],"[","]",";",["T_WHITESPACE","\n                ",433],["T_VARIABLE","$i",434],["T_WHITESPACE"," ",434],"=",["T_WHITESPACE"," ",434],["T_LNUMBER","1",434],";",["T_WHITESPACE","\n                ",434],["T_FOREACH","foreach",435],["T_WHITESPACE"," ",435],"(",["T_VARIABLE","$attributes",435],["T_WHITESPACE"," ",435],["T_AS","as",435],["T_WHITESPACE"," ",435],["T_VARIABLE","$attr",435],["T_WHITESPACE"," ",435],["T_DOUBLE_ARROW","=>",435],["T_WHITESPACE"," ",435],["T_VARIABLE","$val",435],")",["T_WHITESPACE"," ",435],"{",["T_WHITESPACE","\n                    ",435],["T_IF","if",436],["T_WHITESPACE"," ",436],"(",["T_STRING","is_numeric",436],"(",["T_VARIABLE","$attr",436],")",["T_WHITESPACE"," ",436],["T_BOOLEAN_AND","&&",436],["T_WHITESPACE"," ",436],["T_STRING","preg_match",436],"(",["T_CONSTANT_ENCAPSED_STRING","'\/^preg\\:\\\/(.+)\\\/$\/i'",436],",",["T_WHITESPACE"," ",436],["T_VARIABLE","$val",436],",",["T_WHITESPACE"," ",436],["T_VARIABLE","$matches",436],")",")",["T_WHITESPACE"," ",436],"{",["T_WHITESPACE","\n                        ",436],["T_VARIABLE","$attrs",437],"[","]",["T_WHITESPACE"," ",437],"=",["T_WHITESPACE"," ",437],["T_VARIABLE","$matches",437],"[",["T_LNUMBER","1",437],"]",";",["T_WHITESPACE","\n                        ",437],["T_VARIABLE","$explanations",438],"[","]",["T_WHITESPACE"," ",438],"=",["T_WHITESPACE"," ",438],["T_STRING","sprintf",438],"(",["T_CONSTANT_ENCAPSED_STRING","'Regex \"%s\" matches'",438],",",["T_WHITESPACE"," ",438],["T_VARIABLE","$matches",438],"[",["T_LNUMBER","1",438],"]",")",";",["T_WHITESPACE","\n                        ",438],["T_CONTINUE","continue",439],";",["T_WHITESPACE","\n                    ",439],"}",["T_WHITESPACE","\n\n                    ",440],["T_VARIABLE","$quotes",442],["T_WHITESPACE"," ",442],"=",["T_WHITESPACE"," ",442],["T_CONSTANT_ENCAPSED_STRING","'[\"\\']'",442],";",["T_WHITESPACE","\n                    ",442],["T_IF","if",443],["T_WHITESPACE"," ",443],"(",["T_STRING","is_numeric",443],"(",["T_VARIABLE","$attr",443],")",")",["T_WHITESPACE"," ",443],"{",["T_WHITESPACE","\n                        ",443],["T_VARIABLE","$attr",444],["T_WHITESPACE"," ",444],"=",["T_WHITESPACE"," ",444],["T_VARIABLE","$val",444],";",["T_WHITESPACE","\n                        ",444],["T_VARIABLE","$val",445],["T_WHITESPACE"," ",445],"=",["T_WHITESPACE"," ",445],["T_CONSTANT_ENCAPSED_STRING","'.+?'",445],";",["T_WHITESPACE","\n                        ",445],["T_VARIABLE","$explanations",446],"[","]",["T_WHITESPACE"," ",446],"=",["T_WHITESPACE"," ",446],["T_STRING","sprintf",446],"(",["T_CONSTANT_ENCAPSED_STRING","'Attribute \"%s\" present'",446],",",["T_WHITESPACE"," ",446],["T_VARIABLE","$attr",446],")",";",["T_WHITESPACE","\n                    ",446],"}",["T_WHITESPACE"," ",447],["T_ELSEIF","elseif",447],["T_WHITESPACE"," ",447],"(","!",["T_EMPTY","empty",447],"(",["T_VARIABLE","$val",447],")",["T_WHITESPACE"," ",447],["T_BOOLEAN_AND","&&",447],["T_WHITESPACE"," ",447],["T_STRING","preg_match",447],"(",["T_CONSTANT_ENCAPSED_STRING","'\/^preg\\:\\\/(.+)\\\/$\/i'",447],",",["T_WHITESPACE"," ",447],["T_VARIABLE","$val",447],",",["T_WHITESPACE"," ",447],["T_VARIABLE","$matches",447],")",")",["T_WHITESPACE"," ",447],"{",["T_WHITESPACE","\n                        ",447],["T_VARIABLE","$val",448],["T_WHITESPACE"," ",448],"=",["T_WHITESPACE"," ",448],["T_STRING","str_replace",448],"(",["T_WHITESPACE","\n                            ",448],"[",["T_CONSTANT_ENCAPSED_STRING","'.*'",449],",",["T_WHITESPACE"," ",449],["T_CONSTANT_ENCAPSED_STRING","'.+'",449],"]",",",["T_WHITESPACE","\n                            ",449],"[",["T_CONSTANT_ENCAPSED_STRING","'.*?'",450],",",["T_WHITESPACE"," ",450],["T_CONSTANT_ENCAPSED_STRING","'.+?'",450],"]",",",["T_WHITESPACE","\n                            ",450],["T_VARIABLE","$matches",451],"[",["T_LNUMBER","1",451],"]",["T_WHITESPACE","\n                        ",451],")",";",["T_WHITESPACE","\n                        ",452],["T_VARIABLE","$quotes",453],["T_WHITESPACE"," ",453],"=",["T_WHITESPACE"," ",453],["T_VARIABLE","$val",453],["T_WHITESPACE"," ",453],["T_IS_NOT_IDENTICAL","!==",453],["T_WHITESPACE"," ",453],["T_VARIABLE","$matches",453],"[",["T_LNUMBER","1",453],"]",["T_WHITESPACE"," ",453],"?",["T_WHITESPACE"," ",453],["T_CONSTANT_ENCAPSED_STRING","'[\"\\']'",453],["T_WHITESPACE"," ",453],":",["T_WHITESPACE"," ",453],["T_CONSTANT_ENCAPSED_STRING","'[\"\\']?'",453],";",["T_WHITESPACE","\n\n                        ",453],["T_VARIABLE","$explanations",455],"[","]",["T_WHITESPACE"," ",455],"=",["T_WHITESPACE"," ",455],["T_STRING","sprintf",455],"(",["T_CONSTANT_ENCAPSED_STRING","'Attribute \"%s\" matches \"%s\"'",455],",",["T_WHITESPACE"," ",455],["T_VARIABLE","$attr",455],",",["T_WHITESPACE"," ",455],["T_VARIABLE","$val",455],")",";",["T_WHITESPACE","\n                    ",455],"}",["T_WHITESPACE"," ",456],["T_ELSE","else",456],["T_WHITESPACE"," ",456],"{",["T_WHITESPACE","\n                        ",456],["T_VARIABLE","$explanations",457],"[","]",["T_WHITESPACE"," ",457],"=",["T_WHITESPACE"," ",457],["T_STRING","sprintf",457],"(",["T_CONSTANT_ENCAPSED_STRING","'Attribute \"%s\" == \"%s\"'",457],",",["T_WHITESPACE"," ",457],["T_VARIABLE","$attr",457],",",["T_WHITESPACE"," ",457],["T_VARIABLE","$val",457],")",";",["T_WHITESPACE","\n                        ",457],["T_VARIABLE","$val",458],["T_WHITESPACE"," ",458],"=",["T_WHITESPACE"," ",458],["T_STRING","preg_quote",458],"(",["T_VARIABLE","$val",458],",",["T_WHITESPACE"," ",458],["T_CONSTANT_ENCAPSED_STRING","'\/'",458],")",";",["T_WHITESPACE","\n                    ",458],"}",["T_WHITESPACE","\n                    ",459],["T_VARIABLE","$attrs",460],"[","]",["T_WHITESPACE"," ",460],"=",["T_WHITESPACE"," ",460],["T_CONSTANT_ENCAPSED_STRING","'[\\s]+'",460],["T_WHITESPACE"," ",460],".",["T_WHITESPACE"," ",460],["T_STRING","preg_quote",460],"(",["T_VARIABLE","$attr",460],",",["T_WHITESPACE"," ",460],["T_CONSTANT_ENCAPSED_STRING","'\/'",460],")",["T_WHITESPACE"," ",460],".",["T_WHITESPACE"," ",460],["T_CONSTANT_ENCAPSED_STRING","'='",460],["T_WHITESPACE"," ",460],".",["T_WHITESPACE"," ",460],["T_VARIABLE","$quotes",460],["T_WHITESPACE"," ",460],".",["T_WHITESPACE"," ",460],["T_VARIABLE","$val",460],["T_WHITESPACE"," ",460],".",["T_WHITESPACE"," ",460],["T_VARIABLE","$quotes",460],";",["T_WHITESPACE","\n                    ",460],["T_VARIABLE","$i",461],["T_INC","++",461],";",["T_WHITESPACE","\n                ",461],"}",["T_WHITESPACE","\n                ",462],["T_IF","if",463],["T_WHITESPACE"," ",463],"(",["T_VARIABLE","$attrs",463],")",["T_WHITESPACE"," ",463],"{",["T_WHITESPACE","\n                    ",463],["T_VARIABLE","$regex",464],"[","]",["T_WHITESPACE"," ",464],"=",["T_WHITESPACE"," ",464],"[",["T_WHITESPACE","\n                        ",464],["T_CONSTANT_ENCAPSED_STRING","'explains'",465],["T_WHITESPACE"," ",465],["T_DOUBLE_ARROW","=>",465],["T_WHITESPACE"," ",465],["T_VARIABLE","$explanations",465],",",["T_WHITESPACE","\n                        ",465],["T_CONSTANT_ENCAPSED_STRING","'attrs'",466],["T_WHITESPACE"," ",466],["T_DOUBLE_ARROW","=>",466],["T_WHITESPACE"," ",466],["T_VARIABLE","$attrs",466],",",["T_WHITESPACE","\n                    ",466],"]",";",["T_WHITESPACE","\n                ",467],"}",["T_WHITESPACE","\n                ",468],["T_VARIABLE","$regex",469],"[","]",["T_WHITESPACE"," ",469],"=",["T_WHITESPACE"," ",469],"[",["T_WHITESPACE","\n                    ",469],["T_STRING","sprintf",470],"(",["T_CONSTANT_ENCAPSED_STRING","'End %s tag'",470],",",["T_WHITESPACE"," ",470],["T_VARIABLE","$tag",470],")",",",["T_WHITESPACE","\n                    ",470],["T_CONSTANT_ENCAPSED_STRING","'[\\s]*\\\/?[\\s]*>[\\n\\r]*'",471],",",["T_WHITESPACE","\n                    ",471],["T_VARIABLE","$i",472],",",["T_WHITESPACE","\n                ",472],"]",";",["T_WHITESPACE","\n            ",473],"}",["T_WHITESPACE","\n        ",474],"}",["T_WHITESPACE","\n        ",475],["T_FOREACH","foreach",476],["T_WHITESPACE"," ",476],"(",["T_VARIABLE","$regex",476],["T_WHITESPACE"," ",476],["T_AS","as",476],["T_WHITESPACE"," ",476],["T_VARIABLE","$i",476],["T_WHITESPACE"," ",476],["T_DOUBLE_ARROW","=>",476],["T_WHITESPACE"," ",476],["T_VARIABLE","$assertion",476],")",["T_WHITESPACE"," ",476],"{",["T_WHITESPACE","\n            ",476],["T_VARIABLE","$matches",477],["T_WHITESPACE"," ",477],"=",["T_WHITESPACE"," ",477],["T_STRING","false",477],";",["T_WHITESPACE","\n            ",477],["T_IF","if",478],["T_WHITESPACE"," ",478],"(",["T_ISSET","isset",478],"(",["T_VARIABLE","$assertion",478],"[",["T_CONSTANT_ENCAPSED_STRING","'attrs'",478],"]",")",")",["T_WHITESPACE"," ",478],"{",["T_WHITESPACE","\n                ",478],["T_VARIABLE","$string",479],["T_WHITESPACE"," ",479],"=",["T_WHITESPACE"," ",479],["T_VARIABLE","$this",479],["T_OBJECT_OPERATOR","->",479],["T_STRING","_assertAttributes",479],"(",["T_VARIABLE","$assertion",479],",",["T_WHITESPACE"," ",479],["T_VARIABLE","$string",479],",",["T_WHITESPACE"," ",479],["T_VARIABLE","$fullDebug",479],",",["T_WHITESPACE"," ",479],["T_VARIABLE","$regex",479],")",";",["T_WHITESPACE","\n                ",479],["T_IF","if",480],["T_WHITESPACE"," ",480],"(",["T_VARIABLE","$fullDebug",480],["T_WHITESPACE"," ",480],["T_IS_IDENTICAL","===",480],["T_WHITESPACE"," ",480],["T_STRING","true",480],["T_WHITESPACE"," ",480],["T_BOOLEAN_AND","&&",480],["T_WHITESPACE"," ",480],["T_VARIABLE","$string",480],["T_WHITESPACE"," ",480],["T_IS_IDENTICAL","===",480],["T_WHITESPACE"," ",480],["T_STRING","false",480],")",["T_WHITESPACE"," ",480],"{",["T_WHITESPACE","\n                    ",480],["T_STRING","debug",481],"(",["T_VARIABLE","$string",481],",",["T_WHITESPACE"," ",481],["T_STRING","true",481],")",";",["T_WHITESPACE","\n                    ",481],["T_STRING","debug",482],"(",["T_VARIABLE","$regex",482],",",["T_WHITESPACE"," ",482],["T_STRING","true",482],")",";",["T_WHITESPACE","\n                ",482],"}",["T_WHITESPACE","\n                ",483],["T_CONTINUE","continue",484],";",["T_WHITESPACE","\n            ",484],"}",["T_WHITESPACE","\n\n            ",485],["T_LIST","list",487],"(",["T_VARIABLE","$description",487],",",["T_WHITESPACE"," ",487],["T_VARIABLE","$expressions",487],",",["T_WHITESPACE"," ",487],["T_VARIABLE","$itemNum",487],")",["T_WHITESPACE"," ",487],"=",["T_WHITESPACE"," ",487],["T_VARIABLE","$assertion",487],";",["T_WHITESPACE","\n            ",487],["T_FOREACH","foreach",488],["T_WHITESPACE"," ",488],"(",["T_ARRAY_CAST","(array)",488],["T_VARIABLE","$expressions",488],["T_WHITESPACE"," ",488],["T_AS","as",488],["T_WHITESPACE"," ",488],["T_VARIABLE","$expression",488],")",["T_WHITESPACE"," ",488],"{",["T_WHITESPACE","\n                ",488],["T_VARIABLE","$expression",489],["T_WHITESPACE"," ",489],"=",["T_WHITESPACE"," ",489],["T_STRING","sprintf",489],"(",["T_CONSTANT_ENCAPSED_STRING","'\/^%s\/s'",489],",",["T_WHITESPACE"," ",489],["T_VARIABLE","$expression",489],")",";",["T_WHITESPACE","\n                ",489],["T_IF","if",490],["T_WHITESPACE"," ",490],"(",["T_STRING","preg_match",490],"(",["T_VARIABLE","$expression",490],",",["T_WHITESPACE"," ",490],["T_VARIABLE","$string",490],",",["T_WHITESPACE"," ",490],["T_VARIABLE","$match",490],")",")",["T_WHITESPACE"," ",490],"{",["T_WHITESPACE","\n                    ",490],["T_VARIABLE","$matches",491],["T_WHITESPACE"," ",491],"=",["T_WHITESPACE"," ",491],["T_STRING","true",491],";",["T_WHITESPACE","\n                    ",491],["T_VARIABLE","$string",492],["T_WHITESPACE"," ",492],"=",["T_WHITESPACE"," ",492],["T_STRING","substr",492],"(",["T_VARIABLE","$string",492],",",["T_WHITESPACE"," ",492],["T_STRING","strlen",492],"(",["T_VARIABLE","$match",492],"[",["T_LNUMBER","0",492],"]",")",")",";",["T_WHITESPACE","\n                    ",492],["T_BREAK","break",493],";",["T_WHITESPACE","\n                ",493],"}",["T_WHITESPACE","\n            ",494],"}",["T_WHITESPACE","\n            ",495],["T_IF","if",496],["T_WHITESPACE"," ",496],"(","!",["T_VARIABLE","$matches",496],")",["T_WHITESPACE"," ",496],"{",["T_WHITESPACE","\n                ",496],["T_IF","if",497],["T_WHITESPACE"," ",497],"(",["T_VARIABLE","$fullDebug",497],["T_WHITESPACE"," ",497],["T_IS_IDENTICAL","===",497],["T_WHITESPACE"," ",497],["T_STRING","true",497],")",["T_WHITESPACE"," ",497],"{",["T_WHITESPACE","\n                    ",497],["T_STRING","debug",498],"(",["T_VARIABLE","$string",498],")",";",["T_WHITESPACE","\n                    ",498],["T_STRING","debug",499],"(",["T_VARIABLE","$regex",499],")",";",["T_WHITESPACE","\n                ",499],"}",["T_WHITESPACE","\n                ",500],["T_VARIABLE","$this",501],["T_OBJECT_OPERATOR","->",501],["T_STRING","assertRegExp",501],"(",["T_VARIABLE","$expression",501],",",["T_WHITESPACE"," ",501],["T_VARIABLE","$string",501],",",["T_WHITESPACE"," ",501],["T_STRING","sprintf",501],"(",["T_CONSTANT_ENCAPSED_STRING","'Item #%d \/ regex #%d failed: %s'",501],",",["T_WHITESPACE"," ",501],["T_VARIABLE","$itemNum",501],",",["T_WHITESPACE"," ",501],["T_VARIABLE","$i",501],",",["T_WHITESPACE"," ",501],["T_VARIABLE","$description",501],")",")",";",["T_WHITESPACE","\n\n                ",501],["T_RETURN","return",503],["T_WHITESPACE"," ",503],["T_STRING","false",503],";",["T_WHITESPACE","\n            ",503],"}",["T_WHITESPACE","\n        ",504],"}",["T_WHITESPACE","\n\n        ",505],["T_VARIABLE","$this",507],["T_OBJECT_OPERATOR","->",507],["T_STRING","assertTrue",507],"(",["T_STRING","true",507],",",["T_WHITESPACE"," ",507],["T_CONSTANT_ENCAPSED_STRING","'%s'",507],")",";",["T_WHITESPACE","\n\n        ",507],["T_RETURN","return",509],["T_WHITESPACE"," ",509],["T_STRING","true",509],";",["T_WHITESPACE","\n    ",509],"}",["T_WHITESPACE","\n\n    ",510],["T_DOC_COMMENT","\/**\n     * Check the attributes as part of an assertTags() check.\n     *\n     * @param array $assertions Assertions to run.\n     * @param string $string The HTML string to check.\n     * @param bool $fullDebug Whether or not more verbose output should be used.\n     * @param array|string $regex Full regexp from `assertHtml`\n     * @return string\n     *\/",512],["T_WHITESPACE","\n    ",520],["T_PROTECTED","protected",521],["T_WHITESPACE"," ",521],["T_FUNCTION","function",521],["T_WHITESPACE"," ",521],["T_STRING","_assertAttributes",521],"(",["T_VARIABLE","$assertions",521],",",["T_WHITESPACE"," ",521],["T_VARIABLE","$string",521],",",["T_WHITESPACE"," ",521],["T_VARIABLE","$fullDebug",521],["T_WHITESPACE"," ",521],"=",["T_WHITESPACE"," ",521],["T_STRING","false",521],",",["T_WHITESPACE"," ",521],["T_VARIABLE","$regex",521],["T_WHITESPACE"," ",521],"=",["T_WHITESPACE"," ",521],["T_CONSTANT_ENCAPSED_STRING","''",521],")",["T_WHITESPACE","\n    ",521],"{",["T_WHITESPACE","\n        ",522],["T_VARIABLE","$asserts",523],["T_WHITESPACE"," ",523],"=",["T_WHITESPACE"," ",523],["T_VARIABLE","$assertions",523],"[",["T_CONSTANT_ENCAPSED_STRING","'attrs'",523],"]",";",["T_WHITESPACE","\n        ",523],["T_VARIABLE","$explains",524],["T_WHITESPACE"," ",524],"=",["T_WHITESPACE"," ",524],["T_VARIABLE","$assertions",524],"[",["T_CONSTANT_ENCAPSED_STRING","'explains'",524],"]",";",["T_WHITESPACE","\n        ",524],["T_DO","do",525],["T_WHITESPACE"," ",525],"{",["T_WHITESPACE","\n            ",525],["T_VARIABLE","$matches",526],["T_WHITESPACE"," ",526],"=",["T_WHITESPACE"," ",526],["T_STRING","false",526],";",["T_WHITESPACE","\n            ",526],["T_FOREACH","foreach",527],["T_WHITESPACE"," ",527],"(",["T_VARIABLE","$asserts",527],["T_WHITESPACE"," ",527],["T_AS","as",527],["T_WHITESPACE"," ",527],["T_VARIABLE","$j",527],["T_WHITESPACE"," ",527],["T_DOUBLE_ARROW","=>",527],["T_WHITESPACE"," ",527],["T_VARIABLE","$assert",527],")",["T_WHITESPACE"," ",527],"{",["T_WHITESPACE","\n                ",527],["T_IF","if",528],["T_WHITESPACE"," ",528],"(",["T_STRING","preg_match",528],"(",["T_STRING","sprintf",528],"(",["T_CONSTANT_ENCAPSED_STRING","'\/^%s\/s'",528],",",["T_WHITESPACE"," ",528],["T_VARIABLE","$assert",528],")",",",["T_WHITESPACE"," ",528],["T_VARIABLE","$string",528],",",["T_WHITESPACE"," ",528],["T_VARIABLE","$match",528],")",")",["T_WHITESPACE"," ",528],"{",["T_WHITESPACE","\n                    ",528],["T_VARIABLE","$matches",529],["T_WHITESPACE"," ",529],"=",["T_WHITESPACE"," ",529],["T_STRING","true",529],";",["T_WHITESPACE","\n                    ",529],["T_VARIABLE","$string",530],["T_WHITESPACE"," ",530],"=",["T_WHITESPACE"," ",530],["T_STRING","substr",530],"(",["T_VARIABLE","$string",530],",",["T_WHITESPACE"," ",530],["T_STRING","strlen",530],"(",["T_VARIABLE","$match",530],"[",["T_LNUMBER","0",530],"]",")",")",";",["T_WHITESPACE","\n                    ",530],["T_STRING","array_splice",531],"(",["T_VARIABLE","$asserts",531],",",["T_WHITESPACE"," ",531],["T_VARIABLE","$j",531],",",["T_WHITESPACE"," ",531],["T_LNUMBER","1",531],")",";",["T_WHITESPACE","\n                    ",531],["T_STRING","array_splice",532],"(",["T_VARIABLE","$explains",532],",",["T_WHITESPACE"," ",532],["T_VARIABLE","$j",532],",",["T_WHITESPACE"," ",532],["T_LNUMBER","1",532],")",";",["T_WHITESPACE","\n                    ",532],["T_BREAK","break",533],";",["T_WHITESPACE","\n                ",533],"}",["T_WHITESPACE","\n            ",534],"}",["T_WHITESPACE","\n            ",535],["T_IF","if",536],["T_WHITESPACE"," ",536],"(",["T_VARIABLE","$matches",536],["T_WHITESPACE"," ",536],["T_IS_IDENTICAL","===",536],["T_WHITESPACE"," ",536],["T_STRING","false",536],")",["T_WHITESPACE"," ",536],"{",["T_WHITESPACE","\n                ",536],["T_IF","if",537],["T_WHITESPACE"," ",537],"(",["T_VARIABLE","$fullDebug",537],["T_WHITESPACE"," ",537],["T_IS_IDENTICAL","===",537],["T_WHITESPACE"," ",537],["T_STRING","true",537],")",["T_WHITESPACE"," ",537],"{",["T_WHITESPACE","\n                    ",537],["T_STRING","debug",538],"(",["T_VARIABLE","$string",538],")",";",["T_WHITESPACE","\n                    ",538],["T_STRING","debug",539],"(",["T_VARIABLE","$regex",539],")",";",["T_WHITESPACE","\n                ",539],"}",["T_WHITESPACE","\n                ",540],["T_VARIABLE","$this",541],["T_OBJECT_OPERATOR","->",541],["T_STRING","assertTrue",541],"(",["T_STRING","false",541],",",["T_WHITESPACE"," ",541],["T_CONSTANT_ENCAPSED_STRING","'Attribute did not match. Was expecting '",541],["T_WHITESPACE"," ",541],".",["T_WHITESPACE"," ",541],["T_VARIABLE","$explains",541],"[",["T_VARIABLE","$j",541],"]",")",";",["T_WHITESPACE","\n            ",541],"}",["T_WHITESPACE","\n            ",542],["T_VARIABLE","$len",543],["T_WHITESPACE"," ",543],"=",["T_WHITESPACE"," ",543],["T_STRING","count",543],"(",["T_VARIABLE","$asserts",543],")",";",["T_WHITESPACE","\n        ",543],"}",["T_WHITESPACE"," ",544],["T_WHILE","while",544],["T_WHITESPACE"," ",544],"(",["T_VARIABLE","$len",544],["T_WHITESPACE"," ",544],">",["T_WHITESPACE"," ",544],["T_LNUMBER","0",544],")",";",["T_WHITESPACE","\n\n        ",544],["T_RETURN","return",546],["T_WHITESPACE"," ",546],["T_VARIABLE","$string",546],";",["T_WHITESPACE","\n    ",546],"}",["T_WHITESPACE","\n\n    ",547],["T_DOC_COMMENT","\/**\n     * Normalize a path for comparison.\n     *\n     * @param string $path Path separated by \"\/\" slash.\n     * @return string Normalized path separated by DIRECTORY_SEPARATOR.\n     *\/",549],["T_WHITESPACE","\n    ",554],["T_PROTECTED","protected",555],["T_WHITESPACE"," ",555],["T_FUNCTION","function",555],["T_WHITESPACE"," ",555],["T_STRING","_normalizePath",555],"(",["T_VARIABLE","$path",555],")",["T_WHITESPACE","\n    ",555],"{",["T_WHITESPACE","\n        ",556],["T_RETURN","return",557],["T_WHITESPACE"," ",557],["T_STRING","str_replace",557],"(",["T_CONSTANT_ENCAPSED_STRING","'\/'",557],",",["T_WHITESPACE"," ",557],["T_STRING","DIRECTORY_SEPARATOR",557],",",["T_WHITESPACE"," ",557],["T_VARIABLE","$path",557],")",";",["T_WHITESPACE","\n    ",557],"}",["T_WHITESPACE","\n\n",558],["T_COMMENT","\/\/ @codingStandardsIgnoreStart\n",560],["T_WHITESPACE","\n    ",561],["T_DOC_COMMENT","\/**\n     * Compatibility function to test if a value is between an acceptable range.\n     *\n     * @param float $expected\n     * @param float $result\n     * @param float $margin the rage of acceptation\n     * @param string $message the text to display if the assertion is not correct\n     * @return void\n     *\/",562],["T_WHITESPACE","\n    ",570],["T_PROTECTED","protected",571],["T_WHITESPACE"," ",571],["T_STATIC","static",571],["T_WHITESPACE"," ",571],["T_FUNCTION","function",571],["T_WHITESPACE"," ",571],["T_STRING","assertWithinRange",571],"(",["T_VARIABLE","$expected",571],",",["T_WHITESPACE"," ",571],["T_VARIABLE","$result",571],",",["T_WHITESPACE"," ",571],["T_VARIABLE","$margin",571],",",["T_WHITESPACE"," ",571],["T_VARIABLE","$message",571],["T_WHITESPACE"," ",571],"=",["T_WHITESPACE"," ",571],["T_CONSTANT_ENCAPSED_STRING","''",571],")",["T_WHITESPACE","\n    ",571],"{",["T_WHITESPACE","\n        ",572],["T_VARIABLE","$upper",573],["T_WHITESPACE"," ",573],"=",["T_WHITESPACE"," ",573],["T_VARIABLE","$result",573],["T_WHITESPACE"," ",573],"+",["T_WHITESPACE"," ",573],["T_VARIABLE","$margin",573],";",["T_WHITESPACE","\n        ",573],["T_VARIABLE","$lower",574],["T_WHITESPACE"," ",574],"=",["T_WHITESPACE"," ",574],["T_VARIABLE","$result",574],["T_WHITESPACE"," ",574],"-",["T_WHITESPACE"," ",574],["T_VARIABLE","$margin",574],";",["T_WHITESPACE","\n        ",574],["T_STATIC","static",575],["T_DOUBLE_COLON","::",575],["T_STRING","assertTrue",575],"(","(","(",["T_VARIABLE","$expected",575],["T_WHITESPACE"," ",575],["T_IS_SMALLER_OR_EQUAL","<=",575],["T_WHITESPACE"," ",575],["T_VARIABLE","$upper",575],")",["T_WHITESPACE"," ",575],["T_BOOLEAN_AND","&&",575],["T_WHITESPACE"," ",575],"(",["T_VARIABLE","$expected",575],["T_WHITESPACE"," ",575],["T_IS_GREATER_OR_EQUAL",">=",575],["T_WHITESPACE"," ",575],["T_VARIABLE","$lower",575],")",")",",",["T_WHITESPACE"," ",575],["T_VARIABLE","$message",575],")",";",["T_WHITESPACE","\n    ",575],"}",["T_WHITESPACE","\n\n    ",576],["T_DOC_COMMENT","\/**\n     * Compatibility function to test if a value is not between an acceptable range.\n     *\n     * @param float $expected\n     * @param float $result\n     * @param float $margin the rage of acceptation\n     * @param string $message the text to display if the assertion is not correct\n     * @return void\n     *\/",578],["T_WHITESPACE","\n    ",586],["T_PROTECTED","protected",587],["T_WHITESPACE"," ",587],["T_STATIC","static",587],["T_WHITESPACE"," ",587],["T_FUNCTION","function",587],["T_WHITESPACE"," ",587],["T_STRING","assertNotWithinRange",587],"(",["T_VARIABLE","$expected",587],",",["T_WHITESPACE"," ",587],["T_VARIABLE","$result",587],",",["T_WHITESPACE"," ",587],["T_VARIABLE","$margin",587],",",["T_WHITESPACE"," ",587],["T_VARIABLE","$message",587],["T_WHITESPACE"," ",587],"=",["T_WHITESPACE"," ",587],["T_CONSTANT_ENCAPSED_STRING","''",587],")",["T_WHITESPACE","\n    ",587],"{",["T_WHITESPACE","\n        ",588],["T_VARIABLE","$upper",589],["T_WHITESPACE"," ",589],"=",["T_WHITESPACE"," ",589],["T_VARIABLE","$result",589],["T_WHITESPACE"," ",589],"+",["T_WHITESPACE"," ",589],["T_VARIABLE","$margin",589],";",["T_WHITESPACE","\n        ",589],["T_VARIABLE","$lower",590],["T_WHITESPACE"," ",590],"=",["T_WHITESPACE"," ",590],["T_VARIABLE","$result",590],["T_WHITESPACE"," ",590],"-",["T_WHITESPACE"," ",590],["T_VARIABLE","$margin",590],";",["T_WHITESPACE","\n        ",590],["T_STATIC","static",591],["T_DOUBLE_COLON","::",591],["T_STRING","assertTrue",591],"(","(","(",["T_VARIABLE","$expected",591],["T_WHITESPACE"," ",591],">",["T_WHITESPACE"," ",591],["T_VARIABLE","$upper",591],")",["T_WHITESPACE"," ",591],["T_BOOLEAN_OR","||",591],["T_WHITESPACE"," ",591],"(",["T_VARIABLE","$expected",591],["T_WHITESPACE"," ",591],"<",["T_WHITESPACE"," ",591],["T_VARIABLE","$lower",591],")",")",",",["T_WHITESPACE"," ",591],["T_VARIABLE","$message",591],")",";",["T_WHITESPACE","\n    ",591],"}",["T_WHITESPACE","\n\n    ",592],["T_DOC_COMMENT","\/**\n     * Compatibility function to test paths.\n     *\n     * @param string $expected\n     * @param string $result\n     * @param string $message the text to display if the assertion is not correct\n     * @return void\n     *\/",594],["T_WHITESPACE","\n    ",601],["T_PROTECTED","protected",602],["T_WHITESPACE"," ",602],["T_STATIC","static",602],["T_WHITESPACE"," ",602],["T_FUNCTION","function",602],["T_WHITESPACE"," ",602],["T_STRING","assertPathEquals",602],"(",["T_VARIABLE","$expected",602],",",["T_WHITESPACE"," ",602],["T_VARIABLE","$result",602],",",["T_WHITESPACE"," ",602],["T_VARIABLE","$message",602],["T_WHITESPACE"," ",602],"=",["T_WHITESPACE"," ",602],["T_CONSTANT_ENCAPSED_STRING","''",602],")",["T_WHITESPACE","\n    ",602],"{",["T_WHITESPACE","\n        ",603],["T_VARIABLE","$expected",604],["T_WHITESPACE"," ",604],"=",["T_WHITESPACE"," ",604],["T_STRING","str_replace",604],"(",["T_STRING","DIRECTORY_SEPARATOR",604],",",["T_WHITESPACE"," ",604],["T_CONSTANT_ENCAPSED_STRING","'\/'",604],",",["T_WHITESPACE"," ",604],["T_VARIABLE","$expected",604],")",";",["T_WHITESPACE","\n        ",604],["T_VARIABLE","$result",605],["T_WHITESPACE"," ",605],"=",["T_WHITESPACE"," ",605],["T_STRING","str_replace",605],"(",["T_STRING","DIRECTORY_SEPARATOR",605],",",["T_WHITESPACE"," ",605],["T_CONSTANT_ENCAPSED_STRING","'\/'",605],",",["T_WHITESPACE"," ",605],["T_VARIABLE","$result",605],")",";",["T_WHITESPACE","\n        ",605],["T_STATIC","static",606],["T_DOUBLE_COLON","::",606],["T_STRING","assertEquals",606],"(",["T_VARIABLE","$expected",606],",",["T_WHITESPACE"," ",606],["T_VARIABLE","$result",606],",",["T_WHITESPACE"," ",606],["T_VARIABLE","$message",606],")",";",["T_WHITESPACE","\n    ",606],"}",["T_WHITESPACE","\n\n    ",607],["T_DOC_COMMENT","\/**\n     * Compatibility function for skipping.\n     *\n     * @param bool $condition Condition to trigger skipping\n     * @param string $message Message for skip\n     * @return bool\n     *\/",609],["T_WHITESPACE","\n    ",615],["T_PROTECTED","protected",616],["T_WHITESPACE"," ",616],["T_FUNCTION","function",616],["T_WHITESPACE"," ",616],["T_STRING","skipUnless",616],"(",["T_VARIABLE","$condition",616],",",["T_WHITESPACE"," ",616],["T_VARIABLE","$message",616],["T_WHITESPACE"," ",616],"=",["T_WHITESPACE"," ",616],["T_CONSTANT_ENCAPSED_STRING","''",616],")",["T_WHITESPACE","\n    ",616],"{",["T_WHITESPACE","\n        ",617],["T_IF","if",618],["T_WHITESPACE"," ",618],"(","!",["T_VARIABLE","$condition",618],")",["T_WHITESPACE"," ",618],"{",["T_WHITESPACE","\n            ",618],["T_VARIABLE","$this",619],["T_OBJECT_OPERATOR","->",619],["T_STRING","markTestSkipped",619],"(",["T_VARIABLE","$message",619],")",";",["T_WHITESPACE","\n        ",619],"}",["T_WHITESPACE","\n\n        ",620],["T_RETURN","return",622],["T_WHITESPACE"," ",622],["T_VARIABLE","$condition",622],";",["T_WHITESPACE","\n    ",622],"}",["T_WHITESPACE","\n\n",623],["T_COMMENT","\/\/ @codingStandardsIgnoreEnd\n",625],["T_WHITESPACE","\n    ",626],["T_DOC_COMMENT","\/**\n     * Mock a model, maintain fixtures and table association\n     *\n     * @param string $alias The model to get a mock for.\n     * @param mixed $methods The list of methods to mock\n     * @param array $options The config data for the mock's constructor.\n     * @throws \\Cake\\ORM\\Exception\\MissingTableClassException\n     * @return \\Cake\\ORM\\Table|\\PHPUnit_Framework_MockObject_MockObject\n     *\/",627],["T_WHITESPACE","\n    ",635],["T_PUBLIC","public",636],["T_WHITESPACE"," ",636],["T_FUNCTION","function",636],["T_WHITESPACE"," ",636],["T_STRING","getMockForModel",636],"(",["T_VARIABLE","$alias",636],",",["T_WHITESPACE"," ",636],["T_ARRAY","array",636],["T_WHITESPACE"," ",636],["T_VARIABLE","$methods",636],["T_WHITESPACE"," ",636],"=",["T_WHITESPACE"," ",636],"[","]",",",["T_WHITESPACE"," ",636],["T_ARRAY","array",636],["T_WHITESPACE"," ",636],["T_VARIABLE","$options",636],["T_WHITESPACE"," ",636],"=",["T_WHITESPACE"," ",636],"[","]",")",["T_WHITESPACE","\n    ",636],"{",["T_WHITESPACE","\n        ",637],["T_IF","if",638],["T_WHITESPACE"," ",638],"(",["T_EMPTY","empty",638],"(",["T_VARIABLE","$options",638],"[",["T_CONSTANT_ENCAPSED_STRING","'className'",638],"]",")",")",["T_WHITESPACE"," ",638],"{",["T_WHITESPACE","\n            ",638],["T_VARIABLE","$class",639],["T_WHITESPACE"," ",639],"=",["T_WHITESPACE"," ",639],["T_STRING","Inflector",639],["T_DOUBLE_COLON","::",639],["T_STRING","camelize",639],"(",["T_VARIABLE","$alias",639],")",";",["T_WHITESPACE","\n            ",639],["T_VARIABLE","$className",640],["T_WHITESPACE"," ",640],"=",["T_WHITESPACE"," ",640],["T_STRING","App",640],["T_DOUBLE_COLON","::",640],["T_STRING","className",640],"(",["T_VARIABLE","$class",640],",",["T_WHITESPACE"," ",640],["T_CONSTANT_ENCAPSED_STRING","'Model\/Table'",640],",",["T_WHITESPACE"," ",640],["T_CONSTANT_ENCAPSED_STRING","'Table'",640],")",";",["T_WHITESPACE","\n            ",640],["T_IF","if",641],["T_WHITESPACE"," ",641],"(","!",["T_VARIABLE","$className",641],")",["T_WHITESPACE"," ",641],"{",["T_WHITESPACE","\n                ",641],["T_THROW","throw",642],["T_WHITESPACE"," ",642],["T_NEW","new",642],["T_WHITESPACE"," ",642],["T_STRING","MissingTableClassException",642],"(","[",["T_VARIABLE","$alias",642],"]",")",";",["T_WHITESPACE","\n            ",642],"}",["T_WHITESPACE","\n            ",643],["T_VARIABLE","$options",644],"[",["T_CONSTANT_ENCAPSED_STRING","'className'",644],"]",["T_WHITESPACE"," ",644],"=",["T_WHITESPACE"," ",644],["T_VARIABLE","$className",644],";",["T_WHITESPACE","\n        ",644],"}",["T_WHITESPACE","\n\n        ",645],["T_VARIABLE","$connectionName",647],["T_WHITESPACE"," ",647],"=",["T_WHITESPACE"," ",647],["T_VARIABLE","$options",647],"[",["T_CONSTANT_ENCAPSED_STRING","'className'",647],"]",["T_DOUBLE_COLON","::",647],["T_STRING","defaultConnectionName",647],"(",")",";",["T_WHITESPACE","\n        ",647],["T_VARIABLE","$connection",648],["T_WHITESPACE"," ",648],"=",["T_WHITESPACE"," ",648],["T_STRING","ConnectionManager",648],["T_DOUBLE_COLON","::",648],["T_STRING","get",648],"(",["T_VARIABLE","$connectionName",648],")",";",["T_WHITESPACE","\n\n        ",648],["T_LIST","list",650],"(",",",["T_WHITESPACE"," ",650],["T_VARIABLE","$baseClass",650],")",["T_WHITESPACE"," ",650],"=",["T_WHITESPACE"," ",650],["T_STRING","pluginSplit",650],"(",["T_VARIABLE","$alias",650],")",";",["T_WHITESPACE","\n        ",650],["T_VARIABLE","$options",651],["T_WHITESPACE"," ",651],["T_PLUS_EQUAL","+=",651],["T_WHITESPACE"," ",651],"[",["T_CONSTANT_ENCAPSED_STRING","'alias'",651],["T_WHITESPACE"," ",651],["T_DOUBLE_ARROW","=>",651],["T_WHITESPACE"," ",651],["T_VARIABLE","$baseClass",651],",",["T_WHITESPACE"," ",651],["T_CONSTANT_ENCAPSED_STRING","'connection'",651],["T_WHITESPACE"," ",651],["T_DOUBLE_ARROW","=>",651],["T_WHITESPACE"," ",651],["T_VARIABLE","$connection",651],"]",";",["T_WHITESPACE","\n        ",651],["T_VARIABLE","$options",652],["T_WHITESPACE"," ",652],["T_PLUS_EQUAL","+=",652],["T_WHITESPACE"," ",652],["T_STRING","TableRegistry",652],["T_DOUBLE_COLON","::",652],["T_STRING","config",652],"(",["T_VARIABLE","$alias",652],")",";",["T_WHITESPACE","\n\n        ",652],["T_VARIABLE","$mock",654],["T_WHITESPACE"," ",654],"=",["T_WHITESPACE"," ",654],["T_VARIABLE","$this",654],["T_OBJECT_OPERATOR","->",654],["T_STRING","getMockBuilder",654],"(",["T_VARIABLE","$options",654],"[",["T_CONSTANT_ENCAPSED_STRING","'className'",654],"]",")",["T_WHITESPACE","\n            ",654],["T_OBJECT_OPERATOR","->",655],["T_STRING","setMethods",655],"(",["T_VARIABLE","$methods",655],")",["T_WHITESPACE","\n            ",655],["T_OBJECT_OPERATOR","->",656],["T_STRING","setConstructorArgs",656],"(","[",["T_VARIABLE","$options",656],"]",")",["T_WHITESPACE","\n            ",656],["T_OBJECT_OPERATOR","->",657],["T_STRING","getMock",657],"(",")",";",["T_WHITESPACE","\n\n        ",657],["T_IF","if",659],["T_WHITESPACE"," ",659],"(",["T_EMPTY","empty",659],"(",["T_VARIABLE","$options",659],"[",["T_CONSTANT_ENCAPSED_STRING","'entityClass'",659],"]",")",["T_WHITESPACE"," ",659],["T_BOOLEAN_AND","&&",659],["T_WHITESPACE"," ",659],["T_VARIABLE","$mock",659],["T_OBJECT_OPERATOR","->",659],["T_STRING","entityClass",659],"(",")",["T_WHITESPACE"," ",659],["T_IS_IDENTICAL","===",659],["T_WHITESPACE"," ",659],["T_CONSTANT_ENCAPSED_STRING","'\\Cake\\ORM\\Entity'",659],")",["T_WHITESPACE"," ",659],"{",["T_WHITESPACE","\n            ",659],["T_VARIABLE","$parts",660],["T_WHITESPACE"," ",660],"=",["T_WHITESPACE"," ",660],["T_STRING","explode",660],"(",["T_CONSTANT_ENCAPSED_STRING","'\\\\'",660],",",["T_WHITESPACE"," ",660],["T_VARIABLE","$options",660],"[",["T_CONSTANT_ENCAPSED_STRING","'className'",660],"]",")",";",["T_WHITESPACE","\n            ",660],["T_VARIABLE","$entityAlias",661],["T_WHITESPACE"," ",661],"=",["T_WHITESPACE"," ",661],["T_STRING","Inflector",661],["T_DOUBLE_COLON","::",661],["T_STRING","singularize",661],"(",["T_STRING","substr",661],"(",["T_STRING","array_pop",661],"(",["T_VARIABLE","$parts",661],")",",",["T_WHITESPACE"," ",661],["T_LNUMBER","0",661],",",["T_WHITESPACE"," ",661],"-",["T_LNUMBER","5",661],")",")",";",["T_WHITESPACE","\n            ",661],["T_VARIABLE","$entityClass",662],["T_WHITESPACE"," ",662],"=",["T_WHITESPACE"," ",662],["T_STRING","implode",662],"(",["T_CONSTANT_ENCAPSED_STRING","'\\\\'",662],",",["T_WHITESPACE"," ",662],["T_STRING","array_slice",662],"(",["T_VARIABLE","$parts",662],",",["T_WHITESPACE"," ",662],["T_LNUMBER","0",662],",",["T_WHITESPACE"," ",662],"-",["T_LNUMBER","1",662],")",")",["T_WHITESPACE"," ",662],".",["T_WHITESPACE"," ",662],["T_CONSTANT_ENCAPSED_STRING","'\\Entity\\\\'",662],["T_WHITESPACE"," ",662],".",["T_WHITESPACE"," ",662],["T_VARIABLE","$entityAlias",662],";",["T_WHITESPACE","\n            ",662],["T_IF","if",663],["T_WHITESPACE"," ",663],"(",["T_STRING","class_exists",663],"(",["T_VARIABLE","$entityClass",663],")",")",["T_WHITESPACE"," ",663],"{",["T_WHITESPACE","\n                ",663],["T_VARIABLE","$mock",664],["T_OBJECT_OPERATOR","->",664],["T_STRING","entityClass",664],"(",["T_VARIABLE","$entityClass",664],")",";",["T_WHITESPACE","\n            ",664],"}",["T_WHITESPACE","\n        ",665],"}",["T_WHITESPACE","\n\n        ",666],["T_IF","if",668],["T_WHITESPACE"," ",668],"(",["T_STRING","stripos",668],"(",["T_VARIABLE","$mock",668],["T_OBJECT_OPERATOR","->",668],["T_STRING","table",668],"(",")",",",["T_WHITESPACE"," ",668],["T_CONSTANT_ENCAPSED_STRING","'mock'",668],")",["T_WHITESPACE"," ",668],["T_IS_IDENTICAL","===",668],["T_WHITESPACE"," ",668],["T_LNUMBER","0",668],")",["T_WHITESPACE"," ",668],"{",["T_WHITESPACE","\n            ",668],["T_VARIABLE","$mock",669],["T_OBJECT_OPERATOR","->",669],["T_STRING","table",669],"(",["T_STRING","Inflector",669],["T_DOUBLE_COLON","::",669],["T_STRING","tableize",669],"(",["T_VARIABLE","$baseClass",669],")",")",";",["T_WHITESPACE","\n        ",669],"}",["T_WHITESPACE","\n\n        ",670],["T_STRING","TableRegistry",672],["T_DOUBLE_COLON","::",672],["T_STRING","set",672],"(",["T_VARIABLE","$baseClass",672],",",["T_WHITESPACE"," ",672],["T_VARIABLE","$mock",672],")",";",["T_WHITESPACE","\n        ",672],["T_STRING","TableRegistry",673],["T_DOUBLE_COLON","::",673],["T_STRING","set",673],"(",["T_VARIABLE","$alias",673],",",["T_WHITESPACE"," ",673],["T_VARIABLE","$mock",673],")",";",["T_WHITESPACE","\n\n        ",673],["T_RETURN","return",675],["T_WHITESPACE"," ",675],["T_VARIABLE","$mock",675],";",["T_WHITESPACE","\n    ",675],"}",["T_WHITESPACE","\n",676],"}",["T_WHITESPACE","\n",677]]