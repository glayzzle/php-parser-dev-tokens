[["T_OPEN_TAG","<?php\n",1],["T_DOC_COMMENT","\/**\n * CakePHP(tm) : Rapid Development Framework (http:\/\/cakephp.org)\n * Copyright (c) Cake Software Foundation, Inc. (http:\/\/cakefoundation.org)\n *\n * Licensed under The MIT License\n * For full copyright and license information, please see the LICENSE.txt\n * Redistributions of files must retain the above copyright notice.\n *\n * @copyright     Copyright (c) Cake Software Foundation, Inc. (http:\/\/cakefoundation.org)\n * @link          http:\/\/cakephp.org CakePHP(tm) Project\n * @since         2.2.0\n * @license       http:\/\/www.opensource.org\/licenses\/mit-license.php MIT License\n *\/",2],["T_WHITESPACE","\n",14],["T_NAMESPACE","namespace",15],["T_WHITESPACE"," ",15],["T_STRING","Cake",15],["T_NS_SEPARATOR","\\",15],["T_STRING","Log",15],";",["T_WHITESPACE","\n\n",15],["T_USE","use",17],["T_WHITESPACE"," ",17],["T_STRING","Cake",17],["T_NS_SEPARATOR","\\",17],["T_STRING","Core",17],["T_NS_SEPARATOR","\\",17],["T_STRING","App",17],";",["T_WHITESPACE","\n",17],["T_USE","use",18],["T_WHITESPACE"," ",18],["T_STRING","Cake",18],["T_NS_SEPARATOR","\\",18],["T_STRING","Core",18],["T_NS_SEPARATOR","\\",18],["T_STRING","ObjectRegistry",18],";",["T_WHITESPACE","\n",18],["T_USE","use",19],["T_WHITESPACE"," ",19],["T_STRING","Psr",19],["T_NS_SEPARATOR","\\",19],["T_STRING","Log",19],["T_NS_SEPARATOR","\\",19],["T_STRING","LoggerInterface",19],";",["T_WHITESPACE","\n",19],["T_USE","use",20],["T_WHITESPACE"," ",20],["T_STRING","RuntimeException",20],";",["T_WHITESPACE","\n\n",20],["T_DOC_COMMENT","\/**\n * Registry of loaded log engines\n *\/",22],["T_WHITESPACE","\n",24],["T_CLASS","class",25],["T_WHITESPACE"," ",25],["T_STRING","LogEngineRegistry",25],["T_WHITESPACE"," ",25],["T_EXTENDS","extends",25],["T_WHITESPACE"," ",25],["T_STRING","ObjectRegistry",25],["T_WHITESPACE","\n",25],"{",["T_WHITESPACE","\n\n    ",26],["T_DOC_COMMENT","\/**\n     * Resolve a logger classname.\n     *\n     * Part of the template method for Cake\\Core\\ObjectRegistry::load()\n     *\n     * @param string $class Partial classname to resolve.\n     * @return string|false Either the correct classname or false.\n     *\/",28],["T_WHITESPACE","\n    ",35],["T_PROTECTED","protected",36],["T_WHITESPACE"," ",36],["T_FUNCTION","function",36],["T_WHITESPACE"," ",36],["T_STRING","_resolveClassName",36],"(",["T_VARIABLE","$class",36],")",["T_WHITESPACE","\n    ",36],"{",["T_WHITESPACE","\n        ",37],["T_IF","if",38],["T_WHITESPACE"," ",38],"(",["T_STRING","is_object",38],"(",["T_VARIABLE","$class",38],")",")",["T_WHITESPACE"," ",38],"{",["T_WHITESPACE","\n            ",38],["T_RETURN","return",39],["T_WHITESPACE"," ",39],["T_VARIABLE","$class",39],";",["T_WHITESPACE","\n        ",39],"}",["T_WHITESPACE","\n\n        ",40],["T_RETURN","return",42],["T_WHITESPACE"," ",42],["T_STRING","App",42],["T_DOUBLE_COLON","::",42],["T_STRING","className",42],"(",["T_VARIABLE","$class",42],",",["T_WHITESPACE"," ",42],["T_CONSTANT_ENCAPSED_STRING","'Log\/Engine'",42],",",["T_WHITESPACE"," ",42],["T_CONSTANT_ENCAPSED_STRING","'Log'",42],")",";",["T_WHITESPACE","\n    ",42],"}",["T_WHITESPACE","\n\n    ",43],["T_DOC_COMMENT","\/**\n     * Throws an exception when a logger is missing.\n     *\n     * Part of the template method for Cake\\Core\\ObjectRegistry::load()\n     *\n     * @param string $class The classname that is missing.\n     * @param string $plugin The plugin the logger is missing in.\n     * @return void\n     * @throws \\RuntimeException\n     *\/",45],["T_WHITESPACE","\n    ",54],["T_PROTECTED","protected",55],["T_WHITESPACE"," ",55],["T_FUNCTION","function",55],["T_WHITESPACE"," ",55],["T_STRING","_throwMissingClassError",55],"(",["T_VARIABLE","$class",55],",",["T_WHITESPACE"," ",55],["T_VARIABLE","$plugin",55],")",["T_WHITESPACE","\n    ",55],"{",["T_WHITESPACE","\n        ",56],["T_THROW","throw",57],["T_WHITESPACE"," ",57],["T_NEW","new",57],["T_WHITESPACE"," ",57],["T_STRING","RuntimeException",57],"(",["T_STRING","sprintf",57],"(",["T_CONSTANT_ENCAPSED_STRING","'Could not load class %s'",57],",",["T_WHITESPACE"," ",57],["T_VARIABLE","$class",57],")",")",";",["T_WHITESPACE","\n    ",57],"}",["T_WHITESPACE","\n\n    ",58],["T_DOC_COMMENT","\/**\n     * Create the logger instance.\n     *\n     * Part of the template method for Cake\\Core\\ObjectRegistry::load()\n     *\n     * @param string|\\Psr\\Log\\LoggerInterface $class The classname or object to make.\n     * @param string $alias The alias of the object.\n     * @param array $settings An array of settings to use for the logger.\n     * @return \\Psr\\Log\\LoggerInterface The constructed logger class.\n     * @throws \\RuntimeException when an object doesn't implement the correct interface.\n     *\/",60],["T_WHITESPACE","\n    ",70],["T_PROTECTED","protected",71],["T_WHITESPACE"," ",71],["T_FUNCTION","function",71],["T_WHITESPACE"," ",71],["T_STRING","_create",71],"(",["T_VARIABLE","$class",71],",",["T_WHITESPACE"," ",71],["T_VARIABLE","$alias",71],",",["T_WHITESPACE"," ",71],["T_VARIABLE","$settings",71],")",["T_WHITESPACE","\n    ",71],"{",["T_WHITESPACE","\n        ",72],["T_IF","if",73],["T_WHITESPACE"," ",73],"(",["T_STRING","is_callable",73],"(",["T_VARIABLE","$class",73],")",")",["T_WHITESPACE"," ",73],"{",["T_WHITESPACE","\n            ",73],["T_VARIABLE","$class",74],["T_WHITESPACE"," ",74],"=",["T_WHITESPACE"," ",74],["T_VARIABLE","$class",74],"(",["T_VARIABLE","$alias",74],")",";",["T_WHITESPACE","\n        ",74],"}",["T_WHITESPACE","\n\n        ",75],["T_IF","if",77],["T_WHITESPACE"," ",77],"(",["T_STRING","is_object",77],"(",["T_VARIABLE","$class",77],")",")",["T_WHITESPACE"," ",77],"{",["T_WHITESPACE","\n            ",77],["T_VARIABLE","$instance",78],["T_WHITESPACE"," ",78],"=",["T_WHITESPACE"," ",78],["T_VARIABLE","$class",78],";",["T_WHITESPACE","\n        ",78],"}",["T_WHITESPACE","\n\n        ",79],["T_IF","if",81],["T_WHITESPACE"," ",81],"(","!",["T_ISSET","isset",81],"(",["T_VARIABLE","$instance",81],")",")",["T_WHITESPACE"," ",81],"{",["T_WHITESPACE","\n            ",81],["T_VARIABLE","$instance",82],["T_WHITESPACE"," ",82],"=",["T_WHITESPACE"," ",82],["T_NEW","new",82],["T_WHITESPACE"," ",82],["T_VARIABLE","$class",82],"(",["T_VARIABLE","$settings",82],")",";",["T_WHITESPACE","\n        ",82],"}",["T_WHITESPACE","\n\n        ",83],["T_IF","if",85],["T_WHITESPACE"," ",85],"(",["T_VARIABLE","$instance",85],["T_WHITESPACE"," ",85],["T_INSTANCEOF","instanceof",85],["T_WHITESPACE"," ",85],["T_STRING","LoggerInterface",85],")",["T_WHITESPACE"," ",85],"{",["T_WHITESPACE","\n            ",85],["T_RETURN","return",86],["T_WHITESPACE"," ",86],["T_VARIABLE","$instance",86],";",["T_WHITESPACE","\n        ",86],"}",["T_WHITESPACE","\n\n        ",87],["T_THROW","throw",89],["T_WHITESPACE"," ",89],["T_NEW","new",89],["T_WHITESPACE"," ",89],["T_STRING","RuntimeException",89],"(",["T_WHITESPACE","\n            ",89],["T_CONSTANT_ENCAPSED_STRING","'Loggers must implement Psr\\Log\\LoggerInterface.'",90],["T_WHITESPACE","\n        ",90],")",";",["T_WHITESPACE","\n    ",91],"}",["T_WHITESPACE","\n\n    ",92],["T_DOC_COMMENT","\/**\n     * Remove a single logger from the registry.\n     *\n     * @param string $name The logger name.\n     * @return void\n     *\/",94],["T_WHITESPACE","\n    ",99],["T_PUBLIC","public",100],["T_WHITESPACE"," ",100],["T_FUNCTION","function",100],["T_WHITESPACE"," ",100],["T_STRING","unload",100],"(",["T_VARIABLE","$name",100],")",["T_WHITESPACE","\n    ",100],"{",["T_WHITESPACE","\n        ",101],["T_UNSET","unset",102],"(",["T_VARIABLE","$this",102],["T_OBJECT_OPERATOR","->",102],["T_STRING","_loaded",102],"[",["T_VARIABLE","$name",102],"]",")",";",["T_WHITESPACE","\n    ",102],"}",["T_WHITESPACE","\n",103],"}",["T_WHITESPACE","\n",104]]