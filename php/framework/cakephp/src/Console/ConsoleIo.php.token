[["T_OPEN_TAG","<?php\n",1],["T_DOC_COMMENT","\/**\n * CakePHP(tm) : Rapid Development Framework (http:\/\/cakephp.org)\n * Copyright (c) Cake Software Foundation, Inc. (http:\/\/cakefoundation.org)\n *\n * Licensed under The MIT License\n * For full copyright and license information, please see the LICENSE.txt\n * Redistributions of files must retain the above copyright notice.\n *\n * @copyright     Copyright (c) Cake Software Foundation, Inc. (http:\/\/cakefoundation.org)\n * @link          http:\/\/cakephp.org CakePHP(tm) Project\n * @since         3.0.0\n * @license       http:\/\/www.opensource.org\/licenses\/mit-license.php MIT License\n *\/",2],["T_WHITESPACE","\n",14],["T_NAMESPACE","namespace",15],["T_WHITESPACE"," ",15],["T_STRING","Cake",15],["T_NS_SEPARATOR","\\",15],["T_STRING","Console",15],";",["T_WHITESPACE","\n\n",15],["T_USE","use",17],["T_WHITESPACE"," ",17],["T_STRING","Cake",17],["T_NS_SEPARATOR","\\",17],["T_STRING","Log",17],["T_NS_SEPARATOR","\\",17],["T_STRING","Engine",17],["T_NS_SEPARATOR","\\",17],["T_STRING","ConsoleLog",17],";",["T_WHITESPACE","\n",17],["T_USE","use",18],["T_WHITESPACE"," ",18],["T_STRING","Cake",18],["T_NS_SEPARATOR","\\",18],["T_STRING","Log",18],["T_NS_SEPARATOR","\\",18],["T_STRING","Log",18],";",["T_WHITESPACE","\n\n",18],["T_DOC_COMMENT","\/**\n * A wrapper around the various IO operations shell tasks need to do.\n *\n * Packages up the stdout, stderr, and stdin streams providing a simple\n * consistent interface for shells to use. This class also makes mocking streams\n * easy to do in unit tests.\n *\/",20],["T_WHITESPACE","\n",26],["T_CLASS","class",27],["T_WHITESPACE"," ",27],["T_STRING","ConsoleIo",27],["T_WHITESPACE","\n",27],"{",["T_WHITESPACE","\n\n    ",28],["T_DOC_COMMENT","\/**\n     * The output stream\n     *\n     * @var \\Cake\\Console\\ConsoleOutput\n     *\/",30],["T_WHITESPACE","\n    ",34],["T_PROTECTED","protected",35],["T_WHITESPACE"," ",35],["T_VARIABLE","$_out",35],";",["T_WHITESPACE","\n\n    ",35],["T_DOC_COMMENT","\/**\n     * The error stream\n     *\n     * @var \\Cake\\Console\\ConsoleOutput\n     *\/",37],["T_WHITESPACE","\n    ",41],["T_PROTECTED","protected",42],["T_WHITESPACE"," ",42],["T_VARIABLE","$_err",42],";",["T_WHITESPACE","\n\n    ",42],["T_DOC_COMMENT","\/**\n     * The input stream\n     *\n     * @var \\Cake\\Console\\ConsoleInput\n     *\/",44],["T_WHITESPACE","\n    ",48],["T_PROTECTED","protected",49],["T_WHITESPACE"," ",49],["T_VARIABLE","$_in",49],";",["T_WHITESPACE","\n\n    ",49],["T_DOC_COMMENT","\/**\n     * The helper registry.\n     *\n     * @var \\Cake\\Console\\HelperRegistry\n     *\/",51],["T_WHITESPACE","\n    ",55],["T_PROTECTED","protected",56],["T_WHITESPACE"," ",56],["T_VARIABLE","$_helpers",56],";",["T_WHITESPACE","\n\n    ",56],["T_DOC_COMMENT","\/**\n     * Output constant making verbose shells.\n     *\n     * @var int\n     *\/",58],["T_WHITESPACE","\n    ",62],["T_CONST","const",63],["T_WHITESPACE"," ",63],["T_STRING","VERBOSE",63],["T_WHITESPACE"," ",63],"=",["T_WHITESPACE"," ",63],["T_LNUMBER","2",63],";",["T_WHITESPACE","\n\n    ",63],["T_DOC_COMMENT","\/**\n     * Output constant for making normal shells.\n     *\n     * @var int\n     *\/",65],["T_WHITESPACE","\n    ",69],["T_CONST","const",70],["T_WHITESPACE"," ",70],["T_STRING","NORMAL",70],["T_WHITESPACE"," ",70],"=",["T_WHITESPACE"," ",70],["T_LNUMBER","1",70],";",["T_WHITESPACE","\n\n    ",70],["T_DOC_COMMENT","\/**\n     * Output constants for making quiet shells.\n     *\n     * @var int\n     *\/",72],["T_WHITESPACE","\n    ",76],["T_CONST","const",77],["T_WHITESPACE"," ",77],["T_STRING","QUIET",77],["T_WHITESPACE"," ",77],"=",["T_WHITESPACE"," ",77],["T_LNUMBER","0",77],";",["T_WHITESPACE","\n\n    ",77],["T_DOC_COMMENT","\/**\n     * The current output level.\n     *\n     * @var int\n     *\/",79],["T_WHITESPACE","\n    ",83],["T_PROTECTED","protected",84],["T_WHITESPACE"," ",84],["T_VARIABLE","$_level",84],["T_WHITESPACE"," ",84],"=",["T_WHITESPACE"," ",84],["T_STRING","ConsoleIo",84],["T_DOUBLE_COLON","::",84],["T_STRING","NORMAL",84],";",["T_WHITESPACE","\n\n    ",84],["T_DOC_COMMENT","\/**\n     * The number of bytes last written to the output stream\n     * used when overwriting the previous message.\n     *\n     * @var int\n     *\/",86],["T_WHITESPACE","\n    ",91],["T_PROTECTED","protected",92],["T_WHITESPACE"," ",92],["T_VARIABLE","$_lastWritten",92],["T_WHITESPACE"," ",92],"=",["T_WHITESPACE"," ",92],["T_LNUMBER","0",92],";",["T_WHITESPACE","\n\n    ",92],["T_DOC_COMMENT","\/**\n     * Constructor\n     *\n     * @param \\Cake\\Console\\ConsoleOutput|null $out A ConsoleOutput object for stdout.\n     * @param \\Cake\\Console\\ConsoleOutput|null $err A ConsoleOutput object for stderr.\n     * @param \\Cake\\Console\\ConsoleInput|null $in A ConsoleInput object for stdin.\n     * @param \\Cake\\Console\\HelperRegistry|null $helpers A HelperRegistry instance\n     *\/",94],["T_WHITESPACE","\n    ",101],["T_PUBLIC","public",102],["T_WHITESPACE"," ",102],["T_FUNCTION","function",102],["T_WHITESPACE"," ",102],["T_STRING","__construct",102],"(",["T_STRING","ConsoleOutput",102],["T_WHITESPACE"," ",102],["T_VARIABLE","$out",102],["T_WHITESPACE"," ",102],"=",["T_WHITESPACE"," ",102],["T_STRING","null",102],",",["T_WHITESPACE"," ",102],["T_STRING","ConsoleOutput",102],["T_WHITESPACE"," ",102],["T_VARIABLE","$err",102],["T_WHITESPACE"," ",102],"=",["T_WHITESPACE"," ",102],["T_STRING","null",102],",",["T_WHITESPACE"," ",102],["T_STRING","ConsoleInput",102],["T_WHITESPACE"," ",102],["T_VARIABLE","$in",102],["T_WHITESPACE"," ",102],"=",["T_WHITESPACE"," ",102],["T_STRING","null",102],",",["T_WHITESPACE"," ",102],["T_STRING","HelperRegistry",102],["T_WHITESPACE"," ",102],["T_VARIABLE","$helpers",102],["T_WHITESPACE"," ",102],"=",["T_WHITESPACE"," ",102],["T_STRING","null",102],")",["T_WHITESPACE","\n    ",102],"{",["T_WHITESPACE","\n        ",103],["T_VARIABLE","$this",104],["T_OBJECT_OPERATOR","->",104],["T_STRING","_out",104],["T_WHITESPACE"," ",104],"=",["T_WHITESPACE"," ",104],["T_VARIABLE","$out",104],["T_WHITESPACE"," ",104],"?",["T_WHITESPACE"," ",104],["T_VARIABLE","$out",104],["T_WHITESPACE"," ",104],":",["T_WHITESPACE"," ",104],["T_NEW","new",104],["T_WHITESPACE"," ",104],["T_STRING","ConsoleOutput",104],"(",["T_CONSTANT_ENCAPSED_STRING","'php:\/\/stdout'",104],")",";",["T_WHITESPACE","\n        ",104],["T_VARIABLE","$this",105],["T_OBJECT_OPERATOR","->",105],["T_STRING","_err",105],["T_WHITESPACE"," ",105],"=",["T_WHITESPACE"," ",105],["T_VARIABLE","$err",105],["T_WHITESPACE"," ",105],"?",["T_WHITESPACE"," ",105],["T_VARIABLE","$err",105],["T_WHITESPACE"," ",105],":",["T_WHITESPACE"," ",105],["T_NEW","new",105],["T_WHITESPACE"," ",105],["T_STRING","ConsoleOutput",105],"(",["T_CONSTANT_ENCAPSED_STRING","'php:\/\/stderr'",105],")",";",["T_WHITESPACE","\n        ",105],["T_VARIABLE","$this",106],["T_OBJECT_OPERATOR","->",106],["T_STRING","_in",106],["T_WHITESPACE"," ",106],"=",["T_WHITESPACE"," ",106],["T_VARIABLE","$in",106],["T_WHITESPACE"," ",106],"?",["T_WHITESPACE"," ",106],["T_VARIABLE","$in",106],["T_WHITESPACE"," ",106],":",["T_WHITESPACE"," ",106],["T_NEW","new",106],["T_WHITESPACE"," ",106],["T_STRING","ConsoleInput",106],"(",["T_CONSTANT_ENCAPSED_STRING","'php:\/\/stdin'",106],")",";",["T_WHITESPACE","\n        ",106],["T_VARIABLE","$this",107],["T_OBJECT_OPERATOR","->",107],["T_STRING","_helpers",107],["T_WHITESPACE"," ",107],"=",["T_WHITESPACE"," ",107],["T_VARIABLE","$helpers",107],["T_WHITESPACE"," ",107],"?",["T_WHITESPACE"," ",107],["T_VARIABLE","$helpers",107],["T_WHITESPACE"," ",107],":",["T_WHITESPACE"," ",107],["T_NEW","new",107],["T_WHITESPACE"," ",107],["T_STRING","HelperRegistry",107],"(",")",";",["T_WHITESPACE","\n        ",107],["T_VARIABLE","$this",108],["T_OBJECT_OPERATOR","->",108],["T_STRING","_helpers",108],["T_OBJECT_OPERATOR","->",108],["T_STRING","setIo",108],"(",["T_VARIABLE","$this",108],")",";",["T_WHITESPACE","\n    ",108],"}",["T_WHITESPACE","\n\n    ",109],["T_DOC_COMMENT","\/**\n     * Get\/set the current output level.\n     *\n     * @param null|int $level The current output level.\n     * @return int The current output level.\n     *\/",111],["T_WHITESPACE","\n    ",116],["T_PUBLIC","public",117],["T_WHITESPACE"," ",117],["T_FUNCTION","function",117],["T_WHITESPACE"," ",117],["T_STRING","level",117],"(",["T_VARIABLE","$level",117],["T_WHITESPACE"," ",117],"=",["T_WHITESPACE"," ",117],["T_STRING","null",117],")",["T_WHITESPACE","\n    ",117],"{",["T_WHITESPACE","\n        ",118],["T_IF","if",119],["T_WHITESPACE"," ",119],"(",["T_VARIABLE","$level",119],["T_WHITESPACE"," ",119],["T_IS_NOT_IDENTICAL","!==",119],["T_WHITESPACE"," ",119],["T_STRING","null",119],")",["T_WHITESPACE"," ",119],"{",["T_WHITESPACE","\n            ",119],["T_VARIABLE","$this",120],["T_OBJECT_OPERATOR","->",120],["T_STRING","_level",120],["T_WHITESPACE"," ",120],"=",["T_WHITESPACE"," ",120],["T_VARIABLE","$level",120],";",["T_WHITESPACE","\n        ",120],"}",["T_WHITESPACE","\n\n        ",121],["T_RETURN","return",123],["T_WHITESPACE"," ",123],["T_VARIABLE","$this",123],["T_OBJECT_OPERATOR","->",123],["T_STRING","_level",123],";",["T_WHITESPACE","\n    ",123],"}",["T_WHITESPACE","\n\n    ",124],["T_DOC_COMMENT","\/**\n     * Output at the verbose level.\n     *\n     * @param string|array $message A string or an array of strings to output\n     * @param int $newlines Number of newlines to append\n     * @return int|bool The number of bytes returned from writing to stdout.\n     *\/",126],["T_WHITESPACE","\n    ",132],["T_PUBLIC","public",133],["T_WHITESPACE"," ",133],["T_FUNCTION","function",133],["T_WHITESPACE"," ",133],["T_STRING","verbose",133],"(",["T_VARIABLE","$message",133],",",["T_WHITESPACE"," ",133],["T_VARIABLE","$newlines",133],["T_WHITESPACE"," ",133],"=",["T_WHITESPACE"," ",133],["T_LNUMBER","1",133],")",["T_WHITESPACE","\n    ",133],"{",["T_WHITESPACE","\n        ",134],["T_RETURN","return",135],["T_WHITESPACE"," ",135],["T_VARIABLE","$this",135],["T_OBJECT_OPERATOR","->",135],["T_STRING","out",135],"(",["T_VARIABLE","$message",135],",",["T_WHITESPACE"," ",135],["T_VARIABLE","$newlines",135],",",["T_WHITESPACE"," ",135],["T_STRING","self",135],["T_DOUBLE_COLON","::",135],["T_STRING","VERBOSE",135],")",";",["T_WHITESPACE","\n    ",135],"}",["T_WHITESPACE","\n\n    ",136],["T_DOC_COMMENT","\/**\n     * Output at all levels.\n     *\n     * @param string|array $message A string or an array of strings to output\n     * @param int $newlines Number of newlines to append\n     * @return int|bool The number of bytes returned from writing to stdout.\n     *\/",138],["T_WHITESPACE","\n    ",144],["T_PUBLIC","public",145],["T_WHITESPACE"," ",145],["T_FUNCTION","function",145],["T_WHITESPACE"," ",145],["T_STRING","quiet",145],"(",["T_VARIABLE","$message",145],",",["T_WHITESPACE"," ",145],["T_VARIABLE","$newlines",145],["T_WHITESPACE"," ",145],"=",["T_WHITESPACE"," ",145],["T_LNUMBER","1",145],")",["T_WHITESPACE","\n    ",145],"{",["T_WHITESPACE","\n        ",146],["T_RETURN","return",147],["T_WHITESPACE"," ",147],["T_VARIABLE","$this",147],["T_OBJECT_OPERATOR","->",147],["T_STRING","out",147],"(",["T_VARIABLE","$message",147],",",["T_WHITESPACE"," ",147],["T_VARIABLE","$newlines",147],",",["T_WHITESPACE"," ",147],["T_STRING","self",147],["T_DOUBLE_COLON","::",147],["T_STRING","QUIET",147],")",";",["T_WHITESPACE","\n    ",147],"}",["T_WHITESPACE","\n\n    ",148],["T_DOC_COMMENT","\/**\n     * Outputs a single or multiple messages to stdout. If no parameters\n     * are passed outputs just a newline.\n     *\n     * ### Output levels\n     *\n     * There are 3 built-in output level. Shell::QUIET, Shell::NORMAL, Shell::VERBOSE.\n     * The verbose and quiet output levels, map to the `verbose` and `quiet` output switches\n     * present in most shells. Using Shell::QUIET for a message means it will always display.\n     * While using Shell::VERBOSE means it will only display when verbose output is toggled.\n     *\n     * @param string|array $message A string or an array of strings to output\n     * @param int $newlines Number of newlines to append\n     * @param int $level The message's output level, see above.\n     * @return int|bool The number of bytes returned from writing to stdout.\n     *\/",150],["T_WHITESPACE","\n    ",165],["T_PUBLIC","public",166],["T_WHITESPACE"," ",166],["T_FUNCTION","function",166],["T_WHITESPACE"," ",166],["T_STRING","out",166],"(",["T_VARIABLE","$message",166],["T_WHITESPACE"," ",166],"=",["T_WHITESPACE"," ",166],["T_CONSTANT_ENCAPSED_STRING","''",166],",",["T_WHITESPACE"," ",166],["T_VARIABLE","$newlines",166],["T_WHITESPACE"," ",166],"=",["T_WHITESPACE"," ",166],["T_LNUMBER","1",166],",",["T_WHITESPACE"," ",166],["T_VARIABLE","$level",166],["T_WHITESPACE"," ",166],"=",["T_WHITESPACE"," ",166],["T_STRING","ConsoleIo",166],["T_DOUBLE_COLON","::",166],["T_STRING","NORMAL",166],")",["T_WHITESPACE","\n    ",166],"{",["T_WHITESPACE","\n        ",167],["T_IF","if",168],["T_WHITESPACE"," ",168],"(",["T_VARIABLE","$level",168],["T_WHITESPACE"," ",168],["T_IS_SMALLER_OR_EQUAL","<=",168],["T_WHITESPACE"," ",168],["T_VARIABLE","$this",168],["T_OBJECT_OPERATOR","->",168],["T_STRING","_level",168],")",["T_WHITESPACE"," ",168],"{",["T_WHITESPACE","\n            ",168],["T_VARIABLE","$this",169],["T_OBJECT_OPERATOR","->",169],["T_STRING","_lastWritten",169],["T_WHITESPACE"," ",169],"=",["T_WHITESPACE"," ",169],["T_VARIABLE","$this",169],["T_OBJECT_OPERATOR","->",169],["T_STRING","_out",169],["T_OBJECT_OPERATOR","->",169],["T_STRING","write",169],"(",["T_VARIABLE","$message",169],",",["T_WHITESPACE"," ",169],["T_VARIABLE","$newlines",169],")",";",["T_WHITESPACE","\n\n            ",169],["T_RETURN","return",171],["T_WHITESPACE"," ",171],["T_VARIABLE","$this",171],["T_OBJECT_OPERATOR","->",171],["T_STRING","_lastWritten",171],";",["T_WHITESPACE","\n        ",171],"}",["T_WHITESPACE","\n\n        ",172],["T_RETURN","return",174],["T_WHITESPACE"," ",174],["T_STRING","true",174],";",["T_WHITESPACE","\n    ",174],"}",["T_WHITESPACE","\n\n    ",175],["T_DOC_COMMENT","\/**\n     * Overwrite some already output text.\n     *\n     * Useful for building progress bars, or when you want to replace\n     * text already output to the screen with new text.\n     *\n     * **Warning** You cannot overwrite text that contains newlines.\n     *\n     * @param array|string $message The message to output.\n     * @param int $newlines Number of newlines to append.\n     * @param int|null $size The number of bytes to overwrite. Defaults to the\n     *    length of the last message output.\n     * @return void\n     *\/",177],["T_WHITESPACE","\n    ",190],["T_PUBLIC","public",191],["T_WHITESPACE"," ",191],["T_FUNCTION","function",191],["T_WHITESPACE"," ",191],["T_STRING","overwrite",191],"(",["T_VARIABLE","$message",191],",",["T_WHITESPACE"," ",191],["T_VARIABLE","$newlines",191],["T_WHITESPACE"," ",191],"=",["T_WHITESPACE"," ",191],["T_LNUMBER","1",191],",",["T_WHITESPACE"," ",191],["T_VARIABLE","$size",191],["T_WHITESPACE"," ",191],"=",["T_WHITESPACE"," ",191],["T_STRING","null",191],")",["T_WHITESPACE","\n    ",191],"{",["T_WHITESPACE","\n        ",192],["T_VARIABLE","$size",193],["T_WHITESPACE"," ",193],"=",["T_WHITESPACE"," ",193],["T_VARIABLE","$size",193],["T_WHITESPACE"," ",193],"?",":",["T_WHITESPACE"," ",193],["T_VARIABLE","$this",193],["T_OBJECT_OPERATOR","->",193],["T_STRING","_lastWritten",193],";",["T_WHITESPACE","\n\n        ",193],["T_COMMENT","\/\/ Output backspaces.\n",195],["T_WHITESPACE","        ",196],["T_VARIABLE","$this",196],["T_OBJECT_OPERATOR","->",196],["T_STRING","out",196],"(",["T_STRING","str_repeat",196],"(",["T_CONSTANT_ENCAPSED_STRING","\"\\x08\"",196],",",["T_WHITESPACE"," ",196],["T_VARIABLE","$size",196],")",",",["T_WHITESPACE"," ",196],["T_LNUMBER","0",196],")",";",["T_WHITESPACE","\n\n        ",196],["T_VARIABLE","$newBytes",198],["T_WHITESPACE"," ",198],"=",["T_WHITESPACE"," ",198],["T_VARIABLE","$this",198],["T_OBJECT_OPERATOR","->",198],["T_STRING","out",198],"(",["T_VARIABLE","$message",198],",",["T_WHITESPACE"," ",198],["T_LNUMBER","0",198],")",";",["T_WHITESPACE","\n\n        ",198],["T_COMMENT","\/\/ Fill any remaining bytes with spaces.\n",200],["T_WHITESPACE","        ",201],["T_VARIABLE","$fill",201],["T_WHITESPACE"," ",201],"=",["T_WHITESPACE"," ",201],["T_VARIABLE","$size",201],["T_WHITESPACE"," ",201],"-",["T_WHITESPACE"," ",201],["T_VARIABLE","$newBytes",201],";",["T_WHITESPACE","\n        ",201],["T_IF","if",202],["T_WHITESPACE"," ",202],"(",["T_VARIABLE","$fill",202],["T_WHITESPACE"," ",202],">",["T_WHITESPACE"," ",202],["T_LNUMBER","0",202],")",["T_WHITESPACE"," ",202],"{",["T_WHITESPACE","\n            ",202],["T_VARIABLE","$this",203],["T_OBJECT_OPERATOR","->",203],["T_STRING","out",203],"(",["T_STRING","str_repeat",203],"(",["T_CONSTANT_ENCAPSED_STRING","' '",203],",",["T_WHITESPACE"," ",203],["T_VARIABLE","$fill",203],")",",",["T_WHITESPACE"," ",203],["T_LNUMBER","0",203],")",";",["T_WHITESPACE","\n        ",203],"}",["T_WHITESPACE","\n        ",204],["T_IF","if",205],["T_WHITESPACE"," ",205],"(",["T_VARIABLE","$newlines",205],")",["T_WHITESPACE"," ",205],"{",["T_WHITESPACE","\n            ",205],["T_VARIABLE","$this",206],["T_OBJECT_OPERATOR","->",206],["T_STRING","out",206],"(",["T_VARIABLE","$this",206],["T_OBJECT_OPERATOR","->",206],["T_STRING","nl",206],"(",["T_VARIABLE","$newlines",206],")",",",["T_WHITESPACE"," ",206],["T_LNUMBER","0",206],")",";",["T_WHITESPACE","\n        ",206],"}",["T_WHITESPACE","\n    ",207],"}",["T_WHITESPACE","\n\n    ",208],["T_DOC_COMMENT","\/**\n     * Outputs a single or multiple error messages to stderr. If no parameters\n     * are passed outputs just a newline.\n     *\n     * @param string|array $message A string or an array of strings to output\n     * @param int $newlines Number of newlines to append\n     * @return int|bool The number of bytes returned from writing to stderr.\n     *\/",210],["T_WHITESPACE","\n    ",217],["T_PUBLIC","public",218],["T_WHITESPACE"," ",218],["T_FUNCTION","function",218],["T_WHITESPACE"," ",218],["T_STRING","err",218],"(",["T_VARIABLE","$message",218],["T_WHITESPACE"," ",218],"=",["T_WHITESPACE"," ",218],["T_CONSTANT_ENCAPSED_STRING","''",218],",",["T_WHITESPACE"," ",218],["T_VARIABLE","$newlines",218],["T_WHITESPACE"," ",218],"=",["T_WHITESPACE"," ",218],["T_LNUMBER","1",218],")",["T_WHITESPACE","\n    ",218],"{",["T_WHITESPACE","\n        ",219],["T_RETURN","return",220],["T_WHITESPACE"," ",220],["T_VARIABLE","$this",220],["T_OBJECT_OPERATOR","->",220],["T_STRING","_err",220],["T_OBJECT_OPERATOR","->",220],["T_STRING","write",220],"(",["T_VARIABLE","$message",220],",",["T_WHITESPACE"," ",220],["T_VARIABLE","$newlines",220],")",";",["T_WHITESPACE","\n    ",220],"}",["T_WHITESPACE","\n\n    ",221],["T_DOC_COMMENT","\/**\n     * Returns a single or multiple linefeeds sequences.\n     *\n     * @param int $multiplier Number of times the linefeed sequence should be repeated\n     * @return string\n     *\/",223],["T_WHITESPACE","\n    ",228],["T_PUBLIC","public",229],["T_WHITESPACE"," ",229],["T_FUNCTION","function",229],["T_WHITESPACE"," ",229],["T_STRING","nl",229],"(",["T_VARIABLE","$multiplier",229],["T_WHITESPACE"," ",229],"=",["T_WHITESPACE"," ",229],["T_LNUMBER","1",229],")",["T_WHITESPACE","\n    ",229],"{",["T_WHITESPACE","\n        ",230],["T_RETURN","return",231],["T_WHITESPACE"," ",231],["T_STRING","str_repeat",231],"(",["T_STRING","ConsoleOutput",231],["T_DOUBLE_COLON","::",231],["T_STRING","LF",231],",",["T_WHITESPACE"," ",231],["T_VARIABLE","$multiplier",231],")",";",["T_WHITESPACE","\n    ",231],"}",["T_WHITESPACE","\n\n    ",232],["T_DOC_COMMENT","\/**\n     * Outputs a series of minus characters to the standard output, acts as a visual separator.\n     *\n     * @param int $newlines Number of newlines to pre- and append\n     * @param int $width Width of the line, defaults to 79\n     * @return void\n     *\/",234],["T_WHITESPACE","\n    ",240],["T_PUBLIC","public",241],["T_WHITESPACE"," ",241],["T_FUNCTION","function",241],["T_WHITESPACE"," ",241],["T_STRING","hr",241],"(",["T_VARIABLE","$newlines",241],["T_WHITESPACE"," ",241],"=",["T_WHITESPACE"," ",241],["T_LNUMBER","0",241],",",["T_WHITESPACE"," ",241],["T_VARIABLE","$width",241],["T_WHITESPACE"," ",241],"=",["T_WHITESPACE"," ",241],["T_LNUMBER","79",241],")",["T_WHITESPACE","\n    ",241],"{",["T_WHITESPACE","\n        ",242],["T_VARIABLE","$this",243],["T_OBJECT_OPERATOR","->",243],["T_STRING","out",243],"(",["T_STRING","null",243],",",["T_WHITESPACE"," ",243],["T_VARIABLE","$newlines",243],")",";",["T_WHITESPACE","\n        ",243],["T_VARIABLE","$this",244],["T_OBJECT_OPERATOR","->",244],["T_STRING","out",244],"(",["T_STRING","str_repeat",244],"(",["T_CONSTANT_ENCAPSED_STRING","'-'",244],",",["T_WHITESPACE"," ",244],["T_VARIABLE","$width",244],")",")",";",["T_WHITESPACE","\n        ",244],["T_VARIABLE","$this",245],["T_OBJECT_OPERATOR","->",245],["T_STRING","out",245],"(",["T_STRING","null",245],",",["T_WHITESPACE"," ",245],["T_VARIABLE","$newlines",245],")",";",["T_WHITESPACE","\n    ",245],"}",["T_WHITESPACE","\n\n    ",246],["T_DOC_COMMENT","\/**\n     * Prompts the user for input, and returns it.\n     *\n     * @param string $prompt Prompt text.\n     * @param string|null $default Default input value.\n     * @return mixed Either the default value, or the user-provided input.\n     *\/",248],["T_WHITESPACE","\n    ",254],["T_PUBLIC","public",255],["T_WHITESPACE"," ",255],["T_FUNCTION","function",255],["T_WHITESPACE"," ",255],["T_STRING","ask",255],"(",["T_VARIABLE","$prompt",255],",",["T_WHITESPACE"," ",255],["T_VARIABLE","$default",255],["T_WHITESPACE"," ",255],"=",["T_WHITESPACE"," ",255],["T_STRING","null",255],")",["T_WHITESPACE","\n    ",255],"{",["T_WHITESPACE","\n        ",256],["T_RETURN","return",257],["T_WHITESPACE"," ",257],["T_VARIABLE","$this",257],["T_OBJECT_OPERATOR","->",257],["T_STRING","_getInput",257],"(",["T_VARIABLE","$prompt",257],",",["T_WHITESPACE"," ",257],["T_STRING","null",257],",",["T_WHITESPACE"," ",257],["T_VARIABLE","$default",257],")",";",["T_WHITESPACE","\n    ",257],"}",["T_WHITESPACE","\n\n    ",258],["T_DOC_COMMENT","\/**\n     * Change the output mode of the stdout stream\n     *\n     * @param int $mode The output mode.\n     * @return void\n     * @see \\Cake\\Console\\ConsoleOutput::outputAs()\n     *\/",260],["T_WHITESPACE","\n    ",266],["T_PUBLIC","public",267],["T_WHITESPACE"," ",267],["T_FUNCTION","function",267],["T_WHITESPACE"," ",267],["T_STRING","outputAs",267],"(",["T_VARIABLE","$mode",267],")",["T_WHITESPACE","\n    ",267],"{",["T_WHITESPACE","\n        ",268],["T_VARIABLE","$this",269],["T_OBJECT_OPERATOR","->",269],["T_STRING","_out",269],["T_OBJECT_OPERATOR","->",269],["T_STRING","outputAs",269],"(",["T_VARIABLE","$mode",269],")",";",["T_WHITESPACE","\n    ",269],"}",["T_WHITESPACE","\n\n    ",270],["T_DOC_COMMENT","\/**\n     * Add a new output style or get defined styles.\n     *\n     * @param string|null $style The style to get or create.\n     * @param array|bool|null $definition The array definition of the style to change or create a style\n     *   or false to remove a style.\n     * @return mixed If you are getting styles, the style or null will be returned. If you are creating\/modifying\n     *   styles true will be returned.\n     * @see \\Cake\\Console\\ConsoleOutput::styles()\n     *\/",272],["T_WHITESPACE","\n    ",281],["T_PUBLIC","public",282],["T_WHITESPACE"," ",282],["T_FUNCTION","function",282],["T_WHITESPACE"," ",282],["T_STRING","styles",282],"(",["T_VARIABLE","$style",282],["T_WHITESPACE"," ",282],"=",["T_WHITESPACE"," ",282],["T_STRING","null",282],",",["T_WHITESPACE"," ",282],["T_VARIABLE","$definition",282],["T_WHITESPACE"," ",282],"=",["T_WHITESPACE"," ",282],["T_STRING","null",282],")",["T_WHITESPACE","\n    ",282],"{",["T_WHITESPACE","\n        ",283],["T_VARIABLE","$this",284],["T_OBJECT_OPERATOR","->",284],["T_STRING","_out",284],["T_OBJECT_OPERATOR","->",284],["T_STRING","styles",284],"(",["T_VARIABLE","$style",284],",",["T_WHITESPACE"," ",284],["T_VARIABLE","$definition",284],")",";",["T_WHITESPACE","\n    ",284],"}",["T_WHITESPACE","\n\n    ",285],["T_DOC_COMMENT","\/**\n     * Prompts the user for input based on a list of options, and returns it.\n     *\n     * @param string $prompt Prompt text.\n     * @param string|array $options Array or string of options.\n     * @param string|null $default Default input value.\n     * @return mixed Either the default value, or the user-provided input.\n     *\/",287],["T_WHITESPACE","\n    ",294],["T_PUBLIC","public",295],["T_WHITESPACE"," ",295],["T_FUNCTION","function",295],["T_WHITESPACE"," ",295],["T_STRING","askChoice",295],"(",["T_VARIABLE","$prompt",295],",",["T_WHITESPACE"," ",295],["T_VARIABLE","$options",295],",",["T_WHITESPACE"," ",295],["T_VARIABLE","$default",295],["T_WHITESPACE"," ",295],"=",["T_WHITESPACE"," ",295],["T_STRING","null",295],")",["T_WHITESPACE","\n    ",295],"{",["T_WHITESPACE","\n        ",296],["T_IF","if",297],["T_WHITESPACE"," ",297],"(",["T_VARIABLE","$options",297],["T_WHITESPACE"," ",297],["T_BOOLEAN_AND","&&",297],["T_WHITESPACE"," ",297],["T_STRING","is_string",297],"(",["T_VARIABLE","$options",297],")",")",["T_WHITESPACE"," ",297],"{",["T_WHITESPACE","\n            ",297],["T_IF","if",298],["T_WHITESPACE"," ",298],"(",["T_STRING","strpos",298],"(",["T_VARIABLE","$options",298],",",["T_WHITESPACE"," ",298],["T_CONSTANT_ENCAPSED_STRING","','",298],")",")",["T_WHITESPACE"," ",298],"{",["T_WHITESPACE","\n                ",298],["T_VARIABLE","$options",299],["T_WHITESPACE"," ",299],"=",["T_WHITESPACE"," ",299],["T_STRING","explode",299],"(",["T_CONSTANT_ENCAPSED_STRING","','",299],",",["T_WHITESPACE"," ",299],["T_VARIABLE","$options",299],")",";",["T_WHITESPACE","\n            ",299],"}",["T_WHITESPACE"," ",300],["T_ELSEIF","elseif",300],["T_WHITESPACE"," ",300],"(",["T_STRING","strpos",300],"(",["T_VARIABLE","$options",300],",",["T_WHITESPACE"," ",300],["T_CONSTANT_ENCAPSED_STRING","'\/'",300],")",")",["T_WHITESPACE"," ",300],"{",["T_WHITESPACE","\n                ",300],["T_VARIABLE","$options",301],["T_WHITESPACE"," ",301],"=",["T_WHITESPACE"," ",301],["T_STRING","explode",301],"(",["T_CONSTANT_ENCAPSED_STRING","'\/'",301],",",["T_WHITESPACE"," ",301],["T_VARIABLE","$options",301],")",";",["T_WHITESPACE","\n            ",301],"}",["T_WHITESPACE"," ",302],["T_ELSE","else",302],["T_WHITESPACE"," ",302],"{",["T_WHITESPACE","\n                ",302],["T_VARIABLE","$options",303],["T_WHITESPACE"," ",303],"=",["T_WHITESPACE"," ",303],"[",["T_VARIABLE","$options",303],"]",";",["T_WHITESPACE","\n            ",303],"}",["T_WHITESPACE","\n        ",304],"}",["T_WHITESPACE","\n\n        ",305],["T_VARIABLE","$printOptions",307],["T_WHITESPACE"," ",307],"=",["T_WHITESPACE"," ",307],["T_CONSTANT_ENCAPSED_STRING","'('",307],["T_WHITESPACE"," ",307],".",["T_WHITESPACE"," ",307],["T_STRING","implode",307],"(",["T_CONSTANT_ENCAPSED_STRING","'\/'",307],",",["T_WHITESPACE"," ",307],["T_VARIABLE","$options",307],")",["T_WHITESPACE"," ",307],".",["T_WHITESPACE"," ",307],["T_CONSTANT_ENCAPSED_STRING","')'",307],";",["T_WHITESPACE","\n        ",307],["T_VARIABLE","$options",308],["T_WHITESPACE"," ",308],"=",["T_WHITESPACE"," ",308],["T_STRING","array_merge",308],"(",["T_WHITESPACE","\n            ",308],["T_STRING","array_map",309],"(",["T_CONSTANT_ENCAPSED_STRING","'strtolower'",309],",",["T_WHITESPACE"," ",309],["T_VARIABLE","$options",309],")",",",["T_WHITESPACE","\n            ",309],["T_STRING","array_map",310],"(",["T_CONSTANT_ENCAPSED_STRING","'strtoupper'",310],",",["T_WHITESPACE"," ",310],["T_VARIABLE","$options",310],")",",",["T_WHITESPACE","\n            ",310],["T_VARIABLE","$options",311],["T_WHITESPACE","\n        ",311],")",";",["T_WHITESPACE","\n        ",312],["T_VARIABLE","$in",313],["T_WHITESPACE"," ",313],"=",["T_WHITESPACE"," ",313],["T_CONSTANT_ENCAPSED_STRING","''",313],";",["T_WHITESPACE","\n        ",313],["T_WHILE","while",314],["T_WHITESPACE"," ",314],"(",["T_VARIABLE","$in",314],["T_WHITESPACE"," ",314],["T_IS_IDENTICAL","===",314],["T_WHITESPACE"," ",314],["T_CONSTANT_ENCAPSED_STRING","''",314],["T_WHITESPACE"," ",314],["T_BOOLEAN_OR","||",314],["T_WHITESPACE"," ",314],"!",["T_STRING","in_array",314],"(",["T_VARIABLE","$in",314],",",["T_WHITESPACE"," ",314],["T_VARIABLE","$options",314],")",")",["T_WHITESPACE"," ",314],"{",["T_WHITESPACE","\n            ",314],["T_VARIABLE","$in",315],["T_WHITESPACE"," ",315],"=",["T_WHITESPACE"," ",315],["T_VARIABLE","$this",315],["T_OBJECT_OPERATOR","->",315],["T_STRING","_getInput",315],"(",["T_VARIABLE","$prompt",315],",",["T_WHITESPACE"," ",315],["T_VARIABLE","$printOptions",315],",",["T_WHITESPACE"," ",315],["T_VARIABLE","$default",315],")",";",["T_WHITESPACE","\n        ",315],"}",["T_WHITESPACE","\n\n        ",316],["T_RETURN","return",318],["T_WHITESPACE"," ",318],["T_VARIABLE","$in",318],";",["T_WHITESPACE","\n    ",318],"}",["T_WHITESPACE","\n\n    ",319],["T_DOC_COMMENT","\/**\n     * Prompts the user for input, and returns it.\n     *\n     * @param string $prompt Prompt text.\n     * @param string|null $options String of options. Pass null to omit.\n     * @param string|null $default Default input value. Pass null to omit.\n     * @return string Either the default value, or the user-provided input.\n     *\/",321],["T_WHITESPACE","\n    ",328],["T_PROTECTED","protected",329],["T_WHITESPACE"," ",329],["T_FUNCTION","function",329],["T_WHITESPACE"," ",329],["T_STRING","_getInput",329],"(",["T_VARIABLE","$prompt",329],",",["T_WHITESPACE"," ",329],["T_VARIABLE","$options",329],",",["T_WHITESPACE"," ",329],["T_VARIABLE","$default",329],")",["T_WHITESPACE","\n    ",329],"{",["T_WHITESPACE","\n        ",330],["T_VARIABLE","$optionsText",331],["T_WHITESPACE"," ",331],"=",["T_WHITESPACE"," ",331],["T_CONSTANT_ENCAPSED_STRING","''",331],";",["T_WHITESPACE","\n        ",331],["T_IF","if",332],["T_WHITESPACE"," ",332],"(",["T_ISSET","isset",332],"(",["T_VARIABLE","$options",332],")",")",["T_WHITESPACE"," ",332],"{",["T_WHITESPACE","\n            ",332],["T_VARIABLE","$optionsText",333],["T_WHITESPACE"," ",333],"=",["T_WHITESPACE"," ",333],"\"",["T_ENCAPSED_AND_WHITESPACE"," ",333],["T_VARIABLE","$options",333],["T_ENCAPSED_AND_WHITESPACE"," ",333],"\"",";",["T_WHITESPACE","\n        ",333],"}",["T_WHITESPACE","\n\n        ",334],["T_VARIABLE","$defaultText",336],["T_WHITESPACE"," ",336],"=",["T_WHITESPACE"," ",336],["T_CONSTANT_ENCAPSED_STRING","''",336],";",["T_WHITESPACE","\n        ",336],["T_IF","if",337],["T_WHITESPACE"," ",337],"(",["T_VARIABLE","$default",337],["T_WHITESPACE"," ",337],["T_IS_NOT_IDENTICAL","!==",337],["T_WHITESPACE"," ",337],["T_STRING","null",337],")",["T_WHITESPACE"," ",337],"{",["T_WHITESPACE","\n            ",337],["T_VARIABLE","$defaultText",338],["T_WHITESPACE"," ",338],"=",["T_WHITESPACE"," ",338],"\"",["T_ENCAPSED_AND_WHITESPACE","[",338],["T_VARIABLE","$default",338],["T_ENCAPSED_AND_WHITESPACE","] ",338],"\"",";",["T_WHITESPACE","\n        ",338],"}",["T_WHITESPACE","\n        ",339],["T_VARIABLE","$this",340],["T_OBJECT_OPERATOR","->",340],["T_STRING","_out",340],["T_OBJECT_OPERATOR","->",340],["T_STRING","write",340],"(",["T_CONSTANT_ENCAPSED_STRING","'<question>'",340],["T_WHITESPACE"," ",340],".",["T_WHITESPACE"," ",340],["T_VARIABLE","$prompt",340],["T_WHITESPACE"," ",340],".",["T_WHITESPACE"," ",340],"\"",["T_ENCAPSED_AND_WHITESPACE","<\/question>",340],["T_VARIABLE","$optionsText",340],["T_ENCAPSED_AND_WHITESPACE","\\n",340],["T_VARIABLE","$defaultText",340],["T_ENCAPSED_AND_WHITESPACE","> ",340],"\"",",",["T_WHITESPACE"," ",340],["T_LNUMBER","0",340],")",";",["T_WHITESPACE","\n        ",340],["T_VARIABLE","$result",341],["T_WHITESPACE"," ",341],"=",["T_WHITESPACE"," ",341],["T_VARIABLE","$this",341],["T_OBJECT_OPERATOR","->",341],["T_STRING","_in",341],["T_OBJECT_OPERATOR","->",341],["T_STRING","read",341],"(",")",";",["T_WHITESPACE","\n\n        ",341],["T_VARIABLE","$result",343],["T_WHITESPACE"," ",343],"=",["T_WHITESPACE"," ",343],["T_STRING","trim",343],"(",["T_VARIABLE","$result",343],")",";",["T_WHITESPACE","\n        ",343],["T_IF","if",344],["T_WHITESPACE"," ",344],"(",["T_VARIABLE","$default",344],["T_WHITESPACE"," ",344],["T_IS_NOT_IDENTICAL","!==",344],["T_WHITESPACE"," ",344],["T_STRING","null",344],["T_WHITESPACE"," ",344],["T_BOOLEAN_AND","&&",344],["T_WHITESPACE"," ",344],"(",["T_VARIABLE","$result",344],["T_WHITESPACE"," ",344],["T_IS_IDENTICAL","===",344],["T_WHITESPACE"," ",344],["T_CONSTANT_ENCAPSED_STRING","''",344],["T_WHITESPACE"," ",344],["T_BOOLEAN_OR","||",344],["T_WHITESPACE"," ",344],["T_VARIABLE","$result",344],["T_WHITESPACE"," ",344],["T_IS_IDENTICAL","===",344],["T_WHITESPACE"," ",344],["T_STRING","null",344],")",")",["T_WHITESPACE"," ",344],"{",["T_WHITESPACE","\n            ",344],["T_RETURN","return",345],["T_WHITESPACE"," ",345],["T_VARIABLE","$default",345],";",["T_WHITESPACE","\n        ",345],"}",["T_WHITESPACE","\n\n        ",346],["T_RETURN","return",348],["T_WHITESPACE"," ",348],["T_VARIABLE","$result",348],";",["T_WHITESPACE","\n    ",348],"}",["T_WHITESPACE","\n\n    ",349],["T_DOC_COMMENT","\/**\n     * Connects or disconnects the loggers to the console output.\n     *\n     * Used to enable or disable logging stream output to stdout and stderr\n     * If you don't wish all log output in stdout or stderr\n     * through Cake's Log class, call this function with `$enable=false`.\n     *\n     * @param int|bool $enable Use a boolean to enable\/toggle all logging. Use\n     *   one of the verbosity constants (self::VERBOSE, self::QUIET, self::NORMAL)\n     *   to control logging levels. VERBOSE enables debug logs, NORMAL does not include debug logs,\n     *   QUIET disables notice, info and debug logs.\n     * @return void\n     *\/",351],["T_WHITESPACE","\n    ",363],["T_PUBLIC","public",364],["T_WHITESPACE"," ",364],["T_FUNCTION","function",364],["T_WHITESPACE"," ",364],["T_STRING","setLoggers",364],"(",["T_VARIABLE","$enable",364],")",["T_WHITESPACE","\n    ",364],"{",["T_WHITESPACE","\n        ",365],["T_STRING","Log",366],["T_DOUBLE_COLON","::",366],["T_STRING","drop",366],"(",["T_CONSTANT_ENCAPSED_STRING","'stdout'",366],")",";",["T_WHITESPACE","\n        ",366],["T_STRING","Log",367],["T_DOUBLE_COLON","::",367],["T_STRING","drop",367],"(",["T_CONSTANT_ENCAPSED_STRING","'stderr'",367],")",";",["T_WHITESPACE","\n        ",367],["T_IF","if",368],["T_WHITESPACE"," ",368],"(",["T_VARIABLE","$enable",368],["T_WHITESPACE"," ",368],["T_IS_IDENTICAL","===",368],["T_WHITESPACE"," ",368],["T_STRING","false",368],")",["T_WHITESPACE"," ",368],"{",["T_WHITESPACE","\n            ",368],["T_RETURN","return",369],";",["T_WHITESPACE","\n        ",369],"}",["T_WHITESPACE","\n        ",370],["T_VARIABLE","$outLevels",371],["T_WHITESPACE"," ",371],"=",["T_WHITESPACE"," ",371],"[",["T_CONSTANT_ENCAPSED_STRING","'notice'",371],",",["T_WHITESPACE"," ",371],["T_CONSTANT_ENCAPSED_STRING","'info'",371],"]",";",["T_WHITESPACE","\n        ",371],["T_IF","if",372],["T_WHITESPACE"," ",372],"(",["T_VARIABLE","$enable",372],["T_WHITESPACE"," ",372],["T_IS_IDENTICAL","===",372],["T_WHITESPACE"," ",372],["T_STATIC","static",372],["T_DOUBLE_COLON","::",372],["T_STRING","VERBOSE",372],["T_WHITESPACE"," ",372],["T_BOOLEAN_OR","||",372],["T_WHITESPACE"," ",372],["T_VARIABLE","$enable",372],["T_WHITESPACE"," ",372],["T_IS_IDENTICAL","===",372],["T_WHITESPACE"," ",372],["T_STRING","true",372],")",["T_WHITESPACE"," ",372],"{",["T_WHITESPACE","\n            ",372],["T_VARIABLE","$outLevels",373],"[","]",["T_WHITESPACE"," ",373],"=",["T_WHITESPACE"," ",373],["T_CONSTANT_ENCAPSED_STRING","'debug'",373],";",["T_WHITESPACE","\n        ",373],"}",["T_WHITESPACE","\n        ",374],["T_IF","if",375],["T_WHITESPACE"," ",375],"(",["T_VARIABLE","$enable",375],["T_WHITESPACE"," ",375],["T_IS_NOT_IDENTICAL","!==",375],["T_WHITESPACE"," ",375],["T_STATIC","static",375],["T_DOUBLE_COLON","::",375],["T_STRING","QUIET",375],")",["T_WHITESPACE"," ",375],"{",["T_WHITESPACE","\n            ",375],["T_VARIABLE","$stdout",376],["T_WHITESPACE"," ",376],"=",["T_WHITESPACE"," ",376],["T_NEW","new",376],["T_WHITESPACE"," ",376],["T_STRING","ConsoleLog",376],"(","[",["T_WHITESPACE","\n                ",376],["T_CONSTANT_ENCAPSED_STRING","'types'",377],["T_WHITESPACE"," ",377],["T_DOUBLE_ARROW","=>",377],["T_WHITESPACE"," ",377],["T_VARIABLE","$outLevels",377],",",["T_WHITESPACE","\n                ",377],["T_CONSTANT_ENCAPSED_STRING","'stream'",378],["T_WHITESPACE"," ",378],["T_DOUBLE_ARROW","=>",378],["T_WHITESPACE"," ",378],["T_VARIABLE","$this",378],["T_OBJECT_OPERATOR","->",378],["T_STRING","_out",378],["T_WHITESPACE","\n            ",378],"]",")",";",["T_WHITESPACE","\n            ",379],["T_STRING","Log",380],["T_DOUBLE_COLON","::",380],["T_STRING","config",380],"(",["T_CONSTANT_ENCAPSED_STRING","'stdout'",380],",",["T_WHITESPACE"," ",380],"[",["T_CONSTANT_ENCAPSED_STRING","'engine'",380],["T_WHITESPACE"," ",380],["T_DOUBLE_ARROW","=>",380],["T_WHITESPACE"," ",380],["T_VARIABLE","$stdout",380],"]",")",";",["T_WHITESPACE","\n        ",380],"}",["T_WHITESPACE","\n        ",381],["T_VARIABLE","$stderr",382],["T_WHITESPACE"," ",382],"=",["T_WHITESPACE"," ",382],["T_NEW","new",382],["T_WHITESPACE"," ",382],["T_STRING","ConsoleLog",382],"(","[",["T_WHITESPACE","\n            ",382],["T_CONSTANT_ENCAPSED_STRING","'types'",383],["T_WHITESPACE"," ",383],["T_DOUBLE_ARROW","=>",383],["T_WHITESPACE"," ",383],"[",["T_CONSTANT_ENCAPSED_STRING","'emergency'",383],",",["T_WHITESPACE"," ",383],["T_CONSTANT_ENCAPSED_STRING","'alert'",383],",",["T_WHITESPACE"," ",383],["T_CONSTANT_ENCAPSED_STRING","'critical'",383],",",["T_WHITESPACE"," ",383],["T_CONSTANT_ENCAPSED_STRING","'error'",383],",",["T_WHITESPACE"," ",383],["T_CONSTANT_ENCAPSED_STRING","'warning'",383],"]",",",["T_WHITESPACE","\n            ",383],["T_CONSTANT_ENCAPSED_STRING","'stream'",384],["T_WHITESPACE"," ",384],["T_DOUBLE_ARROW","=>",384],["T_WHITESPACE"," ",384],["T_VARIABLE","$this",384],["T_OBJECT_OPERATOR","->",384],["T_STRING","_err",384],",",["T_WHITESPACE","\n        ",384],"]",")",";",["T_WHITESPACE","\n        ",385],["T_STRING","Log",386],["T_DOUBLE_COLON","::",386],["T_STRING","config",386],"(",["T_CONSTANT_ENCAPSED_STRING","'stderr'",386],",",["T_WHITESPACE"," ",386],"[",["T_CONSTANT_ENCAPSED_STRING","'engine'",386],["T_WHITESPACE"," ",386],["T_DOUBLE_ARROW","=>",386],["T_WHITESPACE"," ",386],["T_VARIABLE","$stderr",386],"]",")",";",["T_WHITESPACE","\n    ",386],"}",["T_WHITESPACE","\n\n    ",387],["T_DOC_COMMENT","\/**\n     * Render a Console Helper\n     *\n     * Create and render the output for a helper object. If the helper\n     * object has not already been loaded, it will be loaded and constructed.\n     *\n     * @param string $name The name of the helper to render\n     * @param array $settings Configuration data for the helper.\n     * @return \\Cake\\Console\\Helper The created helper instance.\n     *\/",389],["T_WHITESPACE","\n    ",398],["T_PUBLIC","public",399],["T_WHITESPACE"," ",399],["T_FUNCTION","function",399],["T_WHITESPACE"," ",399],["T_STRING","helper",399],"(",["T_VARIABLE","$name",399],",",["T_WHITESPACE"," ",399],["T_ARRAY","array",399],["T_WHITESPACE"," ",399],["T_VARIABLE","$settings",399],["T_WHITESPACE"," ",399],"=",["T_WHITESPACE"," ",399],"[","]",")",["T_WHITESPACE","\n    ",399],"{",["T_WHITESPACE","\n        ",400],["T_VARIABLE","$name",401],["T_WHITESPACE"," ",401],"=",["T_WHITESPACE"," ",401],["T_STRING","ucfirst",401],"(",["T_VARIABLE","$name",401],")",";",["T_WHITESPACE","\n\n        ",401],["T_RETURN","return",403],["T_WHITESPACE"," ",403],["T_VARIABLE","$this",403],["T_OBJECT_OPERATOR","->",403],["T_STRING","_helpers",403],["T_OBJECT_OPERATOR","->",403],["T_STRING","load",403],"(",["T_VARIABLE","$name",403],",",["T_WHITESPACE"," ",403],["T_VARIABLE","$settings",403],")",";",["T_WHITESPACE","\n    ",403],"}",["T_WHITESPACE","\n",404],"}",["T_WHITESPACE","\n",405]]