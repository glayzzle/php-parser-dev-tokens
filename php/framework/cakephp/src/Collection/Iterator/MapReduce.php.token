[["T_OPEN_TAG","<?php\n",1],["T_DOC_COMMENT","\/**\n * CakePHP(tm) : Rapid Development Framework (http:\/\/cakephp.org)\n * Copyright (c) Cake Software Foundation, Inc. (http:\/\/cakefoundation.org)\n *\n * Licensed under The MIT License\n * For full copyright and license information, please see the LICENSE.txt\n * Redistributions of files must retain the above copyright notice.\n *\n * @copyright     Copyright (c) Cake Software Foundation, Inc. (http:\/\/cakefoundation.org)\n * @link          http:\/\/cakephp.org CakePHP(tm) Project\n * @license       http:\/\/www.opensource.org\/licenses\/mit-license.php MIT License\n *\/",2],["T_WHITESPACE","\n",13],["T_NAMESPACE","namespace",14],["T_WHITESPACE"," ",14],["T_STRING","Cake",14],["T_NS_SEPARATOR","\\",14],["T_STRING","Collection",14],["T_NS_SEPARATOR","\\",14],["T_STRING","Iterator",14],";",["T_WHITESPACE","\n\n",14],["T_USE","use",16],["T_WHITESPACE"," ",16],["T_STRING","ArrayIterator",16],";",["T_WHITESPACE","\n",16],["T_USE","use",17],["T_WHITESPACE"," ",17],["T_STRING","IteratorAggregate",17],";",["T_WHITESPACE","\n",17],["T_USE","use",18],["T_WHITESPACE"," ",18],["T_STRING","LogicException",18],";",["T_WHITESPACE","\n",18],["T_USE","use",19],["T_WHITESPACE"," ",19],["T_STRING","Traversable",19],";",["T_WHITESPACE","\n\n",19],["T_DOC_COMMENT","\/**\n * Implements a simplistic version of the popular Map-Reduce algorithm. Acts\n * like an iterator for the original passed data after each result has been\n * processed, thus offering a transparent wrapper for results coming from any\n * source.\n *\/",21],["T_WHITESPACE","\n",26],["T_CLASS","class",27],["T_WHITESPACE"," ",27],["T_STRING","MapReduce",27],["T_WHITESPACE"," ",27],["T_IMPLEMENTS","implements",27],["T_WHITESPACE"," ",27],["T_STRING","IteratorAggregate",27],["T_WHITESPACE","\n",27],"{",["T_WHITESPACE","\n\n    ",28],["T_DOC_COMMENT","\/**\n     * Holds the shuffled results that were emitted from the map\n     * phase\n     *\n     * @var array\n     *\/",30],["T_WHITESPACE","\n    ",35],["T_PROTECTED","protected",36],["T_WHITESPACE"," ",36],["T_VARIABLE","$_intermediate",36],["T_WHITESPACE"," ",36],"=",["T_WHITESPACE"," ",36],"[","]",";",["T_WHITESPACE","\n\n    ",36],["T_DOC_COMMENT","\/**\n     * Holds the results as emitted during the reduce phase\n     *\n     * @var array\n     *\/",38],["T_WHITESPACE","\n    ",42],["T_PROTECTED","protected",43],["T_WHITESPACE"," ",43],["T_VARIABLE","$_result",43],["T_WHITESPACE"," ",43],"=",["T_WHITESPACE"," ",43],"[","]",";",["T_WHITESPACE","\n\n    ",43],["T_DOC_COMMENT","\/**\n     * Whether the Map-Reduce routine has been executed already on the data\n     *\n     * @var bool\n     *\/",45],["T_WHITESPACE","\n    ",49],["T_PROTECTED","protected",50],["T_WHITESPACE"," ",50],["T_VARIABLE","$_executed",50],["T_WHITESPACE"," ",50],"=",["T_WHITESPACE"," ",50],["T_STRING","false",50],";",["T_WHITESPACE","\n\n    ",50],["T_DOC_COMMENT","\/**\n     * Holds the original data that needs to be processed\n     *\n     * @var \\Traversable\n     *\/",52],["T_WHITESPACE","\n    ",56],["T_PROTECTED","protected",57],["T_WHITESPACE"," ",57],["T_VARIABLE","$_data",57],";",["T_WHITESPACE","\n\n    ",57],["T_DOC_COMMENT","\/**\n     * A callable that will be executed for each record in the original data\n     *\n     * @var callable\n     *\/",59],["T_WHITESPACE","\n    ",63],["T_PROTECTED","protected",64],["T_WHITESPACE"," ",64],["T_VARIABLE","$_mapper",64],";",["T_WHITESPACE","\n\n    ",64],["T_DOC_COMMENT","\/**\n     * A callable that will be executed for each intermediate record emitted during\n     * the Map phase\n     *\n     * @var callable\n     *\/",66],["T_WHITESPACE","\n    ",71],["T_PROTECTED","protected",72],["T_WHITESPACE"," ",72],["T_VARIABLE","$_reducer",72],";",["T_WHITESPACE","\n\n    ",72],["T_DOC_COMMENT","\/**\n     * Count of elements emitted during the Reduce phase\n     *\n     * @var string\n     *\/",74],["T_WHITESPACE","\n    ",78],["T_PROTECTED","protected",79],["T_WHITESPACE"," ",79],["T_VARIABLE","$_counter",79],["T_WHITESPACE"," ",79],"=",["T_WHITESPACE"," ",79],["T_LNUMBER","0",79],";",["T_WHITESPACE","\n\n    ",79],["T_DOC_COMMENT","\/**\n     * Constructor\n     *\n     * ### Example:\n     *\n     * Separate all unique odd and even numbers in an array\n     *\n     * ```\n     *  $data = new \\ArrayObject([1, 2, 3, 4, 5, 3]);\n     *  $mapper = function ($value, $key, $mr) {\n     *      $type = ($value % 2 === 0) ? 'even' : 'odd';\n     *      $mr->emitIntermediate($value, $type);\n     *  };\n     *\n     *  $reducer = function ($numbers, $type, $mr) {\n     *      $mr->emit(array_unique($numbers), $type);\n     *  };\n     *  $results = new MapReduce($data, $mapper, $reducer);\n     * ```\n     *\n     * Previous example will generate the following result:\n     *\n     * ```\n     *  ['odd' => [1, 3, 5], 'even' => [2, 4]]\n     * ```\n     *\n     * @param \\Traversable $data the original data to be processed\n     * @param callable $mapper the mapper callback. This function will receive 3 arguments.\n     * The first one is the current value, second the current results key and third is\n     * this class instance so you can call the result emitters.\n     * @param callable|null $reducer the reducer callback. This function will receive 3 arguments.\n     * The first one is the list of values inside a bucket, second one is the name\n     * of the bucket that was created during the mapping phase and third one is an\n     * instance of this class.\n     *\/",81],["T_WHITESPACE","\n    ",115],["T_PUBLIC","public",116],["T_WHITESPACE"," ",116],["T_FUNCTION","function",116],["T_WHITESPACE"," ",116],["T_STRING","__construct",116],"(",["T_STRING","Traversable",116],["T_WHITESPACE"," ",116],["T_VARIABLE","$data",116],",",["T_WHITESPACE"," ",116],["T_CALLABLE","callable",116],["T_WHITESPACE"," ",116],["T_VARIABLE","$mapper",116],",",["T_WHITESPACE"," ",116],["T_CALLABLE","callable",116],["T_WHITESPACE"," ",116],["T_VARIABLE","$reducer",116],["T_WHITESPACE"," ",116],"=",["T_WHITESPACE"," ",116],["T_STRING","null",116],")",["T_WHITESPACE","\n    ",116],"{",["T_WHITESPACE","\n        ",117],["T_VARIABLE","$this",118],["T_OBJECT_OPERATOR","->",118],["T_STRING","_data",118],["T_WHITESPACE"," ",118],"=",["T_WHITESPACE"," ",118],["T_VARIABLE","$data",118],";",["T_WHITESPACE","\n        ",118],["T_VARIABLE","$this",119],["T_OBJECT_OPERATOR","->",119],["T_STRING","_mapper",119],["T_WHITESPACE"," ",119],"=",["T_WHITESPACE"," ",119],["T_VARIABLE","$mapper",119],";",["T_WHITESPACE","\n        ",119],["T_VARIABLE","$this",120],["T_OBJECT_OPERATOR","->",120],["T_STRING","_reducer",120],["T_WHITESPACE"," ",120],"=",["T_WHITESPACE"," ",120],["T_VARIABLE","$reducer",120],";",["T_WHITESPACE","\n    ",120],"}",["T_WHITESPACE","\n\n    ",121],["T_DOC_COMMENT","\/**\n     * Returns an iterator with the end result of running the Map and Reduce\n     * phases on the original data\n     *\n     * @return \\ArrayIterator\n     *\/",123],["T_WHITESPACE","\n    ",128],["T_PUBLIC","public",129],["T_WHITESPACE"," ",129],["T_FUNCTION","function",129],["T_WHITESPACE"," ",129],["T_STRING","getIterator",129],"(",")",["T_WHITESPACE","\n    ",129],"{",["T_WHITESPACE","\n        ",130],["T_IF","if",131],["T_WHITESPACE"," ",131],"(","!",["T_VARIABLE","$this",131],["T_OBJECT_OPERATOR","->",131],["T_STRING","_executed",131],")",["T_WHITESPACE"," ",131],"{",["T_WHITESPACE","\n            ",131],["T_VARIABLE","$this",132],["T_OBJECT_OPERATOR","->",132],["T_STRING","_execute",132],"(",")",";",["T_WHITESPACE","\n        ",132],"}",["T_WHITESPACE","\n\n        ",133],["T_RETURN","return",135],["T_WHITESPACE"," ",135],["T_NEW","new",135],["T_WHITESPACE"," ",135],["T_STRING","ArrayIterator",135],"(",["T_VARIABLE","$this",135],["T_OBJECT_OPERATOR","->",135],["T_STRING","_result",135],")",";",["T_WHITESPACE","\n    ",135],"}",["T_WHITESPACE","\n\n    ",136],["T_DOC_COMMENT","\/**\n     * Appends a new record to the bucket labelled with $key, usually as a result\n     * of mapping a single record from the original data.\n     *\n     * @param mixed $value The record itself to store in the bucket\n     * @param string $bucket the name of the bucket where to put the record\n     * @return void\n     *\/",138],["T_WHITESPACE","\n    ",145],["T_PUBLIC","public",146],["T_WHITESPACE"," ",146],["T_FUNCTION","function",146],["T_WHITESPACE"," ",146],["T_STRING","emitIntermediate",146],"(",["T_VARIABLE","$value",146],",",["T_WHITESPACE"," ",146],["T_VARIABLE","$bucket",146],")",["T_WHITESPACE","\n    ",146],"{",["T_WHITESPACE","\n        ",147],["T_VARIABLE","$this",148],["T_OBJECT_OPERATOR","->",148],["T_STRING","_intermediate",148],"[",["T_VARIABLE","$bucket",148],"]","[","]",["T_WHITESPACE"," ",148],"=",["T_WHITESPACE"," ",148],["T_VARIABLE","$value",148],";",["T_WHITESPACE","\n    ",148],"}",["T_WHITESPACE","\n\n    ",149],["T_DOC_COMMENT","\/**\n     * Appends a new record to the final list of results and optionally assign a key\n     * for this record.\n     *\n     * @param mixed $value The value to be appended to the final list of results\n     * @param string|null $key and optional key to assign to the value\n     * @return void\n     *\/",151],["T_WHITESPACE","\n    ",158],["T_PUBLIC","public",159],["T_WHITESPACE"," ",159],["T_FUNCTION","function",159],["T_WHITESPACE"," ",159],["T_STRING","emit",159],"(",["T_VARIABLE","$value",159],",",["T_WHITESPACE"," ",159],["T_VARIABLE","$key",159],["T_WHITESPACE"," ",159],"=",["T_WHITESPACE"," ",159],["T_STRING","null",159],")",["T_WHITESPACE","\n    ",159],"{",["T_WHITESPACE","\n        ",160],["T_VARIABLE","$this",161],["T_OBJECT_OPERATOR","->",161],["T_STRING","_result",161],"[",["T_VARIABLE","$key",161],["T_WHITESPACE"," ",161],["T_IS_IDENTICAL","===",161],["T_WHITESPACE"," ",161],["T_STRING","null",161],["T_WHITESPACE"," ",161],"?",["T_WHITESPACE"," ",161],["T_VARIABLE","$this",161],["T_OBJECT_OPERATOR","->",161],["T_STRING","_counter",161],["T_WHITESPACE"," ",161],":",["T_WHITESPACE"," ",161],["T_VARIABLE","$key",161],"]",["T_WHITESPACE"," ",161],"=",["T_WHITESPACE"," ",161],["T_VARIABLE","$value",161],";",["T_WHITESPACE","\n        ",161],["T_VARIABLE","$this",162],["T_OBJECT_OPERATOR","->",162],["T_STRING","_counter",162],["T_INC","++",162],";",["T_WHITESPACE","\n    ",162],"}",["T_WHITESPACE","\n\n    ",163],["T_DOC_COMMENT","\/**\n     * Runs the actual Map-Reduce algorithm. This is iterate the original data\n     * and call the mapper function for each , then for each intermediate\n     * bucket created during the Map phase call the reduce function.\n     *\n     * @return void\n     * @throws \\LogicException if emitIntermediate was called but no reducer function\n     * was provided\n     *\/",165],["T_WHITESPACE","\n    ",173],["T_PROTECTED","protected",174],["T_WHITESPACE"," ",174],["T_FUNCTION","function",174],["T_WHITESPACE"," ",174],["T_STRING","_execute",174],"(",")",["T_WHITESPACE","\n    ",174],"{",["T_WHITESPACE","\n        ",175],["T_VARIABLE","$mapper",176],["T_WHITESPACE"," ",176],"=",["T_WHITESPACE"," ",176],["T_VARIABLE","$this",176],["T_OBJECT_OPERATOR","->",176],["T_STRING","_mapper",176],";",["T_WHITESPACE","\n        ",176],["T_FOREACH","foreach",177],["T_WHITESPACE"," ",177],"(",["T_VARIABLE","$this",177],["T_OBJECT_OPERATOR","->",177],["T_STRING","_data",177],["T_WHITESPACE"," ",177],["T_AS","as",177],["T_WHITESPACE"," ",177],["T_VARIABLE","$key",177],["T_WHITESPACE"," ",177],["T_DOUBLE_ARROW","=>",177],["T_WHITESPACE"," ",177],["T_VARIABLE","$value",177],")",["T_WHITESPACE"," ",177],"{",["T_WHITESPACE","\n            ",177],["T_VARIABLE","$mapper",178],"(",["T_VARIABLE","$value",178],",",["T_WHITESPACE"," ",178],["T_VARIABLE","$key",178],",",["T_WHITESPACE"," ",178],["T_VARIABLE","$this",178],")",";",["T_WHITESPACE","\n        ",178],"}",["T_WHITESPACE","\n        ",179],["T_VARIABLE","$this",180],["T_OBJECT_OPERATOR","->",180],["T_STRING","_data",180],["T_WHITESPACE"," ",180],"=",["T_WHITESPACE"," ",180],["T_STRING","null",180],";",["T_WHITESPACE","\n\n        ",180],["T_IF","if",182],["T_WHITESPACE"," ",182],"(","!",["T_EMPTY","empty",182],"(",["T_VARIABLE","$this",182],["T_OBJECT_OPERATOR","->",182],["T_STRING","_intermediate",182],")",["T_WHITESPACE"," ",182],["T_BOOLEAN_AND","&&",182],["T_WHITESPACE"," ",182],["T_EMPTY","empty",182],"(",["T_VARIABLE","$this",182],["T_OBJECT_OPERATOR","->",182],["T_STRING","_reducer",182],")",")",["T_WHITESPACE"," ",182],"{",["T_WHITESPACE","\n            ",182],["T_THROW","throw",183],["T_WHITESPACE"," ",183],["T_NEW","new",183],["T_WHITESPACE"," ",183],["T_STRING","LogicException",183],"(",["T_CONSTANT_ENCAPSED_STRING","'No reducer function was provided'",183],")",";",["T_WHITESPACE","\n        ",183],"}",["T_WHITESPACE","\n\n        ",184],["T_VARIABLE","$reducer",186],["T_WHITESPACE"," ",186],"=",["T_WHITESPACE"," ",186],["T_VARIABLE","$this",186],["T_OBJECT_OPERATOR","->",186],["T_STRING","_reducer",186],";",["T_WHITESPACE","\n        ",186],["T_FOREACH","foreach",187],["T_WHITESPACE"," ",187],"(",["T_VARIABLE","$this",187],["T_OBJECT_OPERATOR","->",187],["T_STRING","_intermediate",187],["T_WHITESPACE"," ",187],["T_AS","as",187],["T_WHITESPACE"," ",187],["T_VARIABLE","$key",187],["T_WHITESPACE"," ",187],["T_DOUBLE_ARROW","=>",187],["T_WHITESPACE"," ",187],["T_VARIABLE","$list",187],")",["T_WHITESPACE"," ",187],"{",["T_WHITESPACE","\n            ",187],["T_VARIABLE","$reducer",188],"(",["T_VARIABLE","$list",188],",",["T_WHITESPACE"," ",188],["T_VARIABLE","$key",188],",",["T_WHITESPACE"," ",188],["T_VARIABLE","$this",188],")",";",["T_WHITESPACE","\n        ",188],"}",["T_WHITESPACE","\n        ",189],["T_VARIABLE","$this",190],["T_OBJECT_OPERATOR","->",190],["T_STRING","_intermediate",190],["T_WHITESPACE"," ",190],"=",["T_WHITESPACE"," ",190],"[","]",";",["T_WHITESPACE","\n        ",190],["T_VARIABLE","$this",191],["T_OBJECT_OPERATOR","->",191],["T_STRING","_executed",191],["T_WHITESPACE"," ",191],"=",["T_WHITESPACE"," ",191],["T_STRING","true",191],";",["T_WHITESPACE","\n    ",191],"}",["T_WHITESPACE","\n",192],"}",["T_WHITESPACE","\n",193]]