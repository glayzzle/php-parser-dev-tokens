[["T_OPEN_TAG","<?php\n",1],["T_DOC_COMMENT","\/**\n * CakePHP(tm) : Rapid Development Framework (http:\/\/cakephp.org)\n * Copyright (c) Cake Software Foundation, Inc. (http:\/\/cakefoundation.org)\n *\n * Licensed under The MIT License\n * For full copyright and license information, please see the LICENSE.txt\n * Redistributions of files must retain the above copyright notice.\n *\n * @copyright     Copyright (c) Cake Software Foundation, Inc. (http:\/\/cakefoundation.org)\n * @link          http:\/\/cakephp.org CakePHP(tm) Project\n * @since         3.0.0\n * @license       http:\/\/www.opensource.org\/licenses\/mit-license.php MIT License\n *\/",2],["T_WHITESPACE","\n",14],["T_NAMESPACE","namespace",15],["T_WHITESPACE"," ",15],["T_STRING","Cake",15],["T_NS_SEPARATOR","\\",15],["T_STRING","Collection",15],["T_NS_SEPARATOR","\\",15],["T_STRING","Iterator",15],";",["T_WHITESPACE","\n\n",15],["T_USE","use",17],["T_WHITESPACE"," ",17],["T_STRING","IteratorIterator",17],";",["T_WHITESPACE","\n",17],["T_USE","use",18],["T_WHITESPACE"," ",18],["T_STRING","RecursiveIterator",18],";",["T_WHITESPACE","\n\n",18],["T_DOC_COMMENT","\/**\n * An iterator that can be used to generate nested iterators out of a collection\n * of items by applying an function to each of the elements in this iterator.\n *\n * @internal\n * @see \\Cake\\Collection\\Collection::unfold()\n *\/",20],["T_WHITESPACE","\n",26],["T_CLASS","class",27],["T_WHITESPACE"," ",27],["T_STRING","UnfoldIterator",27],["T_WHITESPACE"," ",27],["T_EXTENDS","extends",27],["T_WHITESPACE"," ",27],["T_STRING","IteratorIterator",27],["T_WHITESPACE"," ",27],["T_IMPLEMENTS","implements",27],["T_WHITESPACE"," ",27],["T_STRING","RecursiveIterator",27],["T_WHITESPACE","\n",27],"{",["T_WHITESPACE","\n\n    ",28],["T_DOC_COMMENT","\/**\n     * A function that is passed each element in this iterator and\n     * must return an array or Traversable object.\n     *\n     * @var callable\n     *\/",30],["T_WHITESPACE","\n    ",35],["T_PROTECTED","protected",36],["T_WHITESPACE"," ",36],["T_VARIABLE","$_unfolder",36],";",["T_WHITESPACE","\n\n    ",36],["T_DOC_COMMENT","\/**\n     * A reference to the internal iterator this object is wrapping.\n     *\n     * @var \\Iterator\n     *\/",38],["T_WHITESPACE","\n    ",42],["T_PROTECTED","protected",43],["T_WHITESPACE"," ",43],["T_VARIABLE","$_innerIterator",43],";",["T_WHITESPACE","\n\n    ",43],["T_DOC_COMMENT","\/**\n     * Creates the iterator that will generate child iterators from each of the\n     * elements it was constructed with.\n     *\n     * @param array|\\Traversable $items The list of values to iterate\n     * @param callable $unfolder A callable function that will receive the\n     * current item and key. It must return an array or Traversable object\n     * out of which the nested iterators will be yielded.\n     *\/",45],["T_WHITESPACE","\n    ",53],["T_PUBLIC","public",54],["T_WHITESPACE"," ",54],["T_FUNCTION","function",54],["T_WHITESPACE"," ",54],["T_STRING","__construct",54],"(",["T_VARIABLE","$items",54],",",["T_WHITESPACE"," ",54],["T_CALLABLE","callable",54],["T_WHITESPACE"," ",54],["T_VARIABLE","$unfolder",54],")",["T_WHITESPACE","\n    ",54],"{",["T_WHITESPACE","\n        ",55],["T_VARIABLE","$this",56],["T_OBJECT_OPERATOR","->",56],["T_STRING","_unfolder",56],["T_WHITESPACE"," ",56],"=",["T_WHITESPACE"," ",56],["T_VARIABLE","$unfolder",56],";",["T_WHITESPACE","\n        ",56],["T_STRING","parent",57],["T_DOUBLE_COLON","::",57],["T_STRING","__construct",57],"(",["T_VARIABLE","$items",57],")",";",["T_WHITESPACE","\n        ",57],["T_VARIABLE","$this",58],["T_OBJECT_OPERATOR","->",58],["T_STRING","_innerIterator",58],["T_WHITESPACE"," ",58],"=",["T_WHITESPACE"," ",58],["T_VARIABLE","$this",58],["T_OBJECT_OPERATOR","->",58],["T_STRING","getInnerIterator",58],"(",")",";",["T_WHITESPACE","\n    ",58],"}",["T_WHITESPACE","\n\n    ",59],["T_DOC_COMMENT","\/**\n     * Returns true as each of the elements in the array represent a\n     * list of items\n     *\n     * @return bool\n     *\/",61],["T_WHITESPACE","\n    ",66],["T_PUBLIC","public",67],["T_WHITESPACE"," ",67],["T_FUNCTION","function",67],["T_WHITESPACE"," ",67],["T_STRING","hasChildren",67],"(",")",["T_WHITESPACE","\n    ",67],"{",["T_WHITESPACE","\n        ",68],["T_RETURN","return",69],["T_WHITESPACE"," ",69],["T_STRING","true",69],";",["T_WHITESPACE","\n    ",69],"}",["T_WHITESPACE","\n\n    ",70],["T_DOC_COMMENT","\/**\n     * Returns an iterator containing the items generated by transforming\n     * the current value with the callable function.\n     *\n     * @return \\RecursiveIterator\n     *\/",72],["T_WHITESPACE","\n    ",77],["T_PUBLIC","public",78],["T_WHITESPACE"," ",78],["T_FUNCTION","function",78],["T_WHITESPACE"," ",78],["T_STRING","getChildren",78],"(",")",["T_WHITESPACE","\n    ",78],"{",["T_WHITESPACE","\n        ",79],["T_VARIABLE","$current",80],["T_WHITESPACE"," ",80],"=",["T_WHITESPACE"," ",80],["T_VARIABLE","$this",80],["T_OBJECT_OPERATOR","->",80],["T_STRING","current",80],"(",")",";",["T_WHITESPACE","\n        ",80],["T_VARIABLE","$key",81],["T_WHITESPACE"," ",81],"=",["T_WHITESPACE"," ",81],["T_VARIABLE","$this",81],["T_OBJECT_OPERATOR","->",81],["T_STRING","key",81],"(",")",";",["T_WHITESPACE","\n        ",81],["T_VARIABLE","$unfolder",82],["T_WHITESPACE"," ",82],"=",["T_WHITESPACE"," ",82],["T_VARIABLE","$this",82],["T_OBJECT_OPERATOR","->",82],["T_STRING","_unfolder",82],";",["T_WHITESPACE","\n\n        ",82],["T_RETURN","return",84],["T_WHITESPACE"," ",84],["T_NEW","new",84],["T_WHITESPACE"," ",84],["T_STRING","NoChildrenIterator",84],"(",["T_VARIABLE","$unfolder",84],"(",["T_VARIABLE","$current",84],",",["T_WHITESPACE"," ",84],["T_VARIABLE","$key",84],",",["T_WHITESPACE"," ",84],["T_VARIABLE","$this",84],["T_OBJECT_OPERATOR","->",84],["T_STRING","_innerIterator",84],")",")",";",["T_WHITESPACE","\n    ",84],"}",["T_WHITESPACE","\n",85],"}",["T_WHITESPACE","\n",86]]