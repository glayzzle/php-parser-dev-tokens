[["T_OPEN_TAG","<?php\n",1],["T_DOC_COMMENT","\/**\n * CakePHP(tm) : Rapid Development Framework (http:\/\/cakephp.org)\n * Copyright (c) Cake Software Foundation, Inc. (http:\/\/cakefoundation.org)\n *\n * Licensed under The MIT License\n * For full copyright and license information, please see the LICENSE.txt\n * Redistributions of files must retain the above copyright notice.\n *\n * @copyright     Copyright (c) Cake Software Foundation, Inc. (http:\/\/cakefoundation.org)\n * @link          http:\/\/cakephp.org CakePHP(tm) Project\n * @since         3.0.0\n * @license       http:\/\/www.opensource.org\/licenses\/mit-license.php MIT License\n *\/",2],["T_WHITESPACE","\n",14],["T_NAMESPACE","namespace",15],["T_WHITESPACE"," ",15],["T_STRING","Cake",15],["T_NS_SEPARATOR","\\",15],["T_STRING","Collection",15],["T_NS_SEPARATOR","\\",15],["T_STRING","Iterator",15],";",["T_WHITESPACE","\n\n",15],["T_USE","use",17],["T_WHITESPACE"," ",17],["T_STRING","Cake",17],["T_NS_SEPARATOR","\\",17],["T_STRING","Collection",17],["T_NS_SEPARATOR","\\",17],["T_STRING","Collection",17],";",["T_WHITESPACE","\n",17],["T_USE","use",18],["T_WHITESPACE"," ",18],["T_STRING","CallbackFilterIterator",18],";",["T_WHITESPACE","\n",18],["T_USE","use",19],["T_WHITESPACE"," ",19],["T_STRING","Iterator",19],";",["T_WHITESPACE","\n\n",19],["T_DOC_COMMENT","\/**\n * Creates a filtered iterator from another iterator. The filtering is done by\n * passing a callback function to each of the elements and taking them out if\n * it does not return true.\n *\/",21],["T_WHITESPACE","\n",25],["T_CLASS","class",26],["T_WHITESPACE"," ",26],["T_STRING","FilterIterator",26],["T_WHITESPACE"," ",26],["T_EXTENDS","extends",26],["T_WHITESPACE"," ",26],["T_STRING","Collection",26],["T_WHITESPACE","\n",26],"{",["T_WHITESPACE","\n\n    ",27],["T_DOC_COMMENT","\/**\n     * Creates a filtered iterator using the callback to determine which items are\n     * accepted or rejected.\n     *\n     * Each time the callback is executed it will receive the value of the element\n     * in the current iteration, the key of the element and the passed $items iterator\n     * as arguments, in that order.\n     *\n     * @param \\Iterator $items The items to be filtered.\n     * @param callable $callback Callback.\n     *\/",29],["T_WHITESPACE","\n    ",39],["T_PUBLIC","public",40],["T_WHITESPACE"," ",40],["T_FUNCTION","function",40],["T_WHITESPACE"," ",40],["T_STRING","__construct",40],"(",["T_STRING","Iterator",40],["T_WHITESPACE"," ",40],["T_VARIABLE","$items",40],",",["T_WHITESPACE"," ",40],["T_CALLABLE","callable",40],["T_WHITESPACE"," ",40],["T_VARIABLE","$callback",40],")",["T_WHITESPACE","\n    ",40],"{",["T_WHITESPACE","\n        ",41],["T_VARIABLE","$wrapper",42],["T_WHITESPACE"," ",42],"=",["T_WHITESPACE"," ",42],["T_NEW","new",42],["T_WHITESPACE"," ",42],["T_STRING","CallbackFilterIterator",42],"(",["T_VARIABLE","$items",42],",",["T_WHITESPACE"," ",42],["T_VARIABLE","$callback",42],")",";",["T_WHITESPACE","\n        ",42],["T_STRING","parent",43],["T_DOUBLE_COLON","::",43],["T_STRING","__construct",43],"(",["T_VARIABLE","$wrapper",43],")",";",["T_WHITESPACE","\n    ",43],"}",["T_WHITESPACE","\n",44],"}",["T_WHITESPACE","\n",45]]