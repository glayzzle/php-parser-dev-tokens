[["T_OPEN_TAG","<?php\n",1],["T_DOC_COMMENT","\/**\n * CakePHP(tm) : Rapid Development Framework (http:\/\/cakephp.org)\n * Copyright (c) Cake Software Foundation, Inc. (http:\/\/cakefoundation.org)\n *\n * Licensed under The MIT License\n * For full copyright and license information, please see the LICENSE.txt\n * Redistributions of files must retain the above copyright notice.\n *\n * @copyright     Copyright (c) Cake Software Foundation, Inc. (http:\/\/cakefoundation.org)\n * @link          http:\/\/cakephp.org CakePHP(tm) Project\n * @since         3.0.0\n * @license       http:\/\/www.opensource.org\/licenses\/mit-license.php MIT License\n *\/",2],["T_WHITESPACE","\n",14],["T_NAMESPACE","namespace",15],["T_WHITESPACE"," ",15],["T_STRING","Cake",15],["T_NS_SEPARATOR","\\",15],["T_STRING","Collection",15],["T_NS_SEPARATOR","\\",15],["T_STRING","Iterator",15],";",["T_WHITESPACE","\n\n",15],["T_USE","use",17],["T_WHITESPACE"," ",17],["T_STRING","Cake",17],["T_NS_SEPARATOR","\\",17],["T_STRING","Collection",17],["T_NS_SEPARATOR","\\",17],["T_STRING","Collection",17],";",["T_WHITESPACE","\n\n",17],["T_DOC_COMMENT","\/**\n * Creates an iterator from another iterator that extract the requested column\n * or property based on a path\n *\/",19],["T_WHITESPACE","\n",22],["T_CLASS","class",23],["T_WHITESPACE"," ",23],["T_STRING","ExtractIterator",23],["T_WHITESPACE"," ",23],["T_EXTENDS","extends",23],["T_WHITESPACE"," ",23],["T_STRING","Collection",23],["T_WHITESPACE","\n",23],"{",["T_WHITESPACE","\n\n    ",24],["T_DOC_COMMENT","\/**\n     * A callable responsible for extracting a single value for each\n     * item in the collection.\n     *\n     * @var callable\n     *\/",26],["T_WHITESPACE","\n    ",31],["T_PROTECTED","protected",32],["T_WHITESPACE"," ",32],["T_VARIABLE","$_extractor",32],";",["T_WHITESPACE","\n\n    ",32],["T_DOC_COMMENT","\/**\n     * Creates the iterator that will return the requested property for each value\n     * in the collection expressed in $path\n     *\n     * ### Example:\n     *\n     * Extract the user name for all comments in the array:\n     *\n     * ```\n     * $items = [\n     *  ['comment' => ['body' => 'cool', 'user' => ['name' => 'Mark']],\n     *  ['comment' => ['body' => 'very cool', 'user' => ['name' => 'Renan']]\n     * ];\n     * $extractor = new ExtractIterator($items, 'comment.user.name'');\n     * ```\n     *\n     * @param array|\\Traversable $items The list of values to iterate\n     * @param string $path a dot separated string symbolizing the path to follow\n     * inside the hierarchy of each value so that the column can be extracted.\n     *\/",34],["T_WHITESPACE","\n    ",53],["T_PUBLIC","public",54],["T_WHITESPACE"," ",54],["T_FUNCTION","function",54],["T_WHITESPACE"," ",54],["T_STRING","__construct",54],"(",["T_VARIABLE","$items",54],",",["T_WHITESPACE"," ",54],["T_VARIABLE","$path",54],")",["T_WHITESPACE","\n    ",54],"{",["T_WHITESPACE","\n        ",55],["T_VARIABLE","$this",56],["T_OBJECT_OPERATOR","->",56],["T_STRING","_extractor",56],["T_WHITESPACE"," ",56],"=",["T_WHITESPACE"," ",56],["T_VARIABLE","$this",56],["T_OBJECT_OPERATOR","->",56],["T_STRING","_propertyExtractor",56],"(",["T_VARIABLE","$path",56],")",";",["T_WHITESPACE","\n        ",56],["T_STRING","parent",57],["T_DOUBLE_COLON","::",57],["T_STRING","__construct",57],"(",["T_VARIABLE","$items",57],")",";",["T_WHITESPACE","\n    ",57],"}",["T_WHITESPACE","\n\n    ",58],["T_DOC_COMMENT","\/**\n     * Returns the column value defined in $path or null if the path could not be\n     * followed\n     *\n     * @return mixed\n     *\/",60],["T_WHITESPACE","\n    ",65],["T_PUBLIC","public",66],["T_WHITESPACE"," ",66],["T_FUNCTION","function",66],["T_WHITESPACE"," ",66],["T_STRING","current",66],"(",")",["T_WHITESPACE","\n    ",66],"{",["T_WHITESPACE","\n        ",67],["T_VARIABLE","$extractor",68],["T_WHITESPACE"," ",68],"=",["T_WHITESPACE"," ",68],["T_VARIABLE","$this",68],["T_OBJECT_OPERATOR","->",68],["T_STRING","_extractor",68],";",["T_WHITESPACE","\n\n        ",68],["T_RETURN","return",70],["T_WHITESPACE"," ",70],["T_VARIABLE","$extractor",70],"(",["T_STRING","parent",70],["T_DOUBLE_COLON","::",70],["T_STRING","current",70],"(",")",")",";",["T_WHITESPACE","\n    ",70],"}",["T_WHITESPACE","\n",71],"}",["T_WHITESPACE","\n",72]]