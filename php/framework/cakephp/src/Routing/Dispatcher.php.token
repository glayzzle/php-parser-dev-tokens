[["T_OPEN_TAG","<?php\n",1],["T_DOC_COMMENT","\/**\n * CakePHP(tm) : Rapid Development Framework (http:\/\/cakephp.org)\n * Copyright (c) Cake Software Foundation, Inc. (http:\/\/cakefoundation.org)\n *\n * Licensed under The MIT License\n * For full copyright and license information, please see the LICENSE.txt\n * Redistributions of files must retain the above copyright notice.\n *\n * @copyright     Copyright (c) Cake Software Foundation, Inc. (http:\/\/cakefoundation.org)\n * @link          http:\/\/cakephp.org CakePHP(tm) Project\n * @since         0.2.9\n * @license       http:\/\/www.opensource.org\/licenses\/mit-license.php MIT License\n *\/",2],["T_WHITESPACE","\n",14],["T_NAMESPACE","namespace",15],["T_WHITESPACE"," ",15],["T_STRING","Cake",15],["T_NS_SEPARATOR","\\",15],["T_STRING","Routing",15],";",["T_WHITESPACE","\n\n",15],["T_USE","use",17],["T_WHITESPACE"," ",17],["T_STRING","Cake",17],["T_NS_SEPARATOR","\\",17],["T_STRING","Event",17],["T_NS_SEPARATOR","\\",17],["T_STRING","EventDispatcherTrait",17],";",["T_WHITESPACE","\n",17],["T_USE","use",18],["T_WHITESPACE"," ",18],["T_STRING","Cake",18],["T_NS_SEPARATOR","\\",18],["T_STRING","Event",18],["T_NS_SEPARATOR","\\",18],["T_STRING","EventListenerInterface",18],";",["T_WHITESPACE","\n",18],["T_USE","use",19],["T_WHITESPACE"," ",19],["T_STRING","Cake",19],["T_NS_SEPARATOR","\\",19],["T_STRING","Http",19],["T_NS_SEPARATOR","\\",19],["T_STRING","ActionDispatcher",19],";",["T_WHITESPACE","\n",19],["T_USE","use",20],["T_WHITESPACE"," ",20],["T_STRING","Cake",20],["T_NS_SEPARATOR","\\",20],["T_STRING","Network",20],["T_NS_SEPARATOR","\\",20],["T_STRING","Request",20],";",["T_WHITESPACE","\n",20],["T_USE","use",21],["T_WHITESPACE"," ",21],["T_STRING","Cake",21],["T_NS_SEPARATOR","\\",21],["T_STRING","Network",21],["T_NS_SEPARATOR","\\",21],["T_STRING","Response",21],";",["T_WHITESPACE","\n\n",21],["T_DOC_COMMENT","\/**\n * Dispatcher converts Requests into controller actions. It uses the dispatched Request\n * to locate and load the correct controller. If found, the requested action is called on\n * the controller\n *\/",23],["T_WHITESPACE","\n",27],["T_CLASS","class",28],["T_WHITESPACE"," ",28],["T_STRING","Dispatcher",28],["T_WHITESPACE","\n",28],"{",["T_WHITESPACE","\n\n    ",29],["T_USE","use",31],["T_WHITESPACE"," ",31],["T_STRING","EventDispatcherTrait",31],";",["T_WHITESPACE","\n\n    ",31],["T_DOC_COMMENT","\/**\n     * Connected filter objects\n     *\n     * @var array\n     *\/",33],["T_WHITESPACE","\n    ",37],["T_PROTECTED","protected",38],["T_WHITESPACE"," ",38],["T_VARIABLE","$_filters",38],["T_WHITESPACE"," ",38],"=",["T_WHITESPACE"," ",38],"[","]",";",["T_WHITESPACE","\n\n    ",38],["T_DOC_COMMENT","\/**\n     * Dispatches and invokes given Request, handing over control to the involved controller. If the controller is set\n     * to autoRender, via Controller::$autoRender, then Dispatcher will render the view.\n     *\n     * Actions in CakePHP can be any public method on a controller, that is not declared in Controller. If you\n     * want controller methods to be public and in-accessible by URL, then prefix them with a `_`.\n     * For example `public function _loadPosts() { }` would not be accessible via URL. Private and protected methods\n     * are also not accessible via URL.\n     *\n     * If no controller of given name can be found, invoke() will throw an exception.\n     * If the controller is found, and the action is not found an exception will be thrown.\n     *\n     * @param \\Cake\\Network\\Request $request Request object to dispatch.\n     * @param \\Cake\\Network\\Response $response Response object to put the results of the dispatch into.\n     * @return string|null if `$request['return']` is set then it returns response body, null otherwise\n     * @throws \\LogicException When the controller did not get created in the Dispatcher.beforeDispatch event.\n     *\/",40],["T_WHITESPACE","\n    ",56],["T_PUBLIC","public",57],["T_WHITESPACE"," ",57],["T_FUNCTION","function",57],["T_WHITESPACE"," ",57],["T_STRING","dispatch",57],"(",["T_STRING","Request",57],["T_WHITESPACE"," ",57],["T_VARIABLE","$request",57],",",["T_WHITESPACE"," ",57],["T_STRING","Response",57],["T_WHITESPACE"," ",57],["T_VARIABLE","$response",57],")",["T_WHITESPACE","\n    ",57],"{",["T_WHITESPACE","\n        ",58],["T_VARIABLE","$actionDispatcher",59],["T_WHITESPACE"," ",59],"=",["T_WHITESPACE"," ",59],["T_NEW","new",59],["T_WHITESPACE"," ",59],["T_STRING","ActionDispatcher",59],"(",["T_STRING","null",59],",",["T_WHITESPACE"," ",59],["T_VARIABLE","$this",59],["T_OBJECT_OPERATOR","->",59],["T_STRING","eventManager",59],"(",")",",",["T_WHITESPACE"," ",59],["T_VARIABLE","$this",59],["T_OBJECT_OPERATOR","->",59],["T_STRING","_filters",59],")",";",["T_WHITESPACE","\n        ",59],["T_VARIABLE","$response",60],["T_WHITESPACE"," ",60],"=",["T_WHITESPACE"," ",60],["T_VARIABLE","$actionDispatcher",60],["T_OBJECT_OPERATOR","->",60],["T_STRING","dispatch",60],"(",["T_VARIABLE","$request",60],",",["T_WHITESPACE"," ",60],["T_VARIABLE","$response",60],")",";",["T_WHITESPACE","\n        ",60],["T_IF","if",61],["T_WHITESPACE"," ",61],"(",["T_ISSET","isset",61],"(",["T_VARIABLE","$request",61],["T_OBJECT_OPERATOR","->",61],["T_STRING","params",61],"[",["T_CONSTANT_ENCAPSED_STRING","'return'",61],"]",")",")",["T_WHITESPACE"," ",61],"{",["T_WHITESPACE","\n            ",61],["T_RETURN","return",62],["T_WHITESPACE"," ",62],["T_VARIABLE","$response",62],["T_OBJECT_OPERATOR","->",62],["T_STRING","body",62],"(",")",";",["T_WHITESPACE","\n        ",62],"}",["T_WHITESPACE","\n\n        ",63],["T_RETURN","return",65],["T_WHITESPACE"," ",65],["T_VARIABLE","$response",65],["T_OBJECT_OPERATOR","->",65],["T_STRING","send",65],"(",")",";",["T_WHITESPACE","\n    ",65],"}",["T_WHITESPACE","\n\n    ",66],["T_DOC_COMMENT","\/**\n     * Add a filter to this dispatcher.\n     *\n     * The added filter will be attached to the event manager used\n     * by this dispatcher.\n     *\n     * @param \\Cake\\Event\\EventListenerInterface $filter The filter to connect. Can be\n     *   any EventListenerInterface. Typically an instance of \\Cake\\Routing\\DispatcherFilter.\n     * @return void\n     *\/",68],["T_WHITESPACE","\n    ",77],["T_PUBLIC","public",78],["T_WHITESPACE"," ",78],["T_FUNCTION","function",78],["T_WHITESPACE"," ",78],["T_STRING","addFilter",78],"(",["T_STRING","EventListenerInterface",78],["T_WHITESPACE"," ",78],["T_VARIABLE","$filter",78],")",["T_WHITESPACE","\n    ",78],"{",["T_WHITESPACE","\n        ",79],["T_VARIABLE","$this",80],["T_OBJECT_OPERATOR","->",80],["T_STRING","_filters",80],"[","]",["T_WHITESPACE"," ",80],"=",["T_WHITESPACE"," ",80],["T_VARIABLE","$filter",80],";",["T_WHITESPACE","\n    ",80],"}",["T_WHITESPACE","\n\n    ",81],["T_DOC_COMMENT","\/**\n     * Get the list of connected filters.\n     *\n     * @return array\n     *\/",83],["T_WHITESPACE","\n    ",87],["T_PUBLIC","public",88],["T_WHITESPACE"," ",88],["T_FUNCTION","function",88],["T_WHITESPACE"," ",88],["T_STRING","filters",88],"(",")",["T_WHITESPACE","\n    ",88],"{",["T_WHITESPACE","\n        ",89],["T_RETURN","return",90],["T_WHITESPACE"," ",90],["T_VARIABLE","$this",90],["T_OBJECT_OPERATOR","->",90],["T_STRING","_filters",90],";",["T_WHITESPACE","\n    ",90],"}",["T_WHITESPACE","\n",91],"}",["T_WHITESPACE","\n",92]]