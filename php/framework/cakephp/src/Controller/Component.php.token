[["T_OPEN_TAG","<?php\n",1],["T_DOC_COMMENT","\/**\n * CakePHP(tm) : Rapid Development Framework (http:\/\/cakephp.org)\n * Copyright (c) Cake Software Foundation, Inc. (http:\/\/cakefoundation.org)\n *\n * Licensed under The MIT License\n * For full copyright and license information, please see the LICENSE.txt\n * Redistributions of files must retain the above copyright notice.\n *\n * @copyright     Copyright (c) Cake Software Foundation, Inc. (http:\/\/cakefoundation.org)\n * @link          http:\/\/cakephp.org CakePHP(tm) Project\n * @since         1.2.0\n * @license       http:\/\/www.opensource.org\/licenses\/mit-license.php MIT License\n *\/",2],["T_WHITESPACE","\n",14],["T_NAMESPACE","namespace",15],["T_WHITESPACE"," ",15],["T_STRING","Cake",15],["T_NS_SEPARATOR","\\",15],["T_STRING","Controller",15],";",["T_WHITESPACE","\n\n",15],["T_USE","use",17],["T_WHITESPACE"," ",17],["T_STRING","Cake",17],["T_NS_SEPARATOR","\\",17],["T_STRING","Core",17],["T_NS_SEPARATOR","\\",17],["T_STRING","InstanceConfigTrait",17],";",["T_WHITESPACE","\n",17],["T_USE","use",18],["T_WHITESPACE"," ",18],["T_STRING","Cake",18],["T_NS_SEPARATOR","\\",18],["T_STRING","Event",18],["T_NS_SEPARATOR","\\",18],["T_STRING","EventListenerInterface",18],";",["T_WHITESPACE","\n",18],["T_USE","use",19],["T_WHITESPACE"," ",19],["T_STRING","Cake",19],["T_NS_SEPARATOR","\\",19],["T_STRING","Log",19],["T_NS_SEPARATOR","\\",19],["T_STRING","LogTrait",19],";",["T_WHITESPACE","\n\n",19],["T_DOC_COMMENT","\/**\n * Base class for an individual Component. Components provide reusable bits of\n * controller logic that can be composed into a controller. Components also\n * provide request life-cycle callbacks for injecting logic at specific points.\n *\n * ### Initialize hook\n *\n * Like Controller and Table, this class has an initialize() hook that you can use\n * to add custom 'constructor' logic. It is important to remember that each request\n * (and sub-request) will only make one instance of any given component.\n *\n * ### Life cycle callbacks\n *\n * Components can provide several callbacks that are fired at various stages of the request\n * cycle. The available callbacks are:\n *\n * - `beforeFilter(Event $event)`\n *   Called before the controller's beforeFilter method by default.\n * - `startup(Event $event)`\n *   Called after the controller's beforeFilter method, and before the\n *   controller action is called.\n * - `beforeRender(Event $event)`\n *   Called before the Controller beforeRender, and before the view class is loaded.\n * - `shutdown(Event $event)`\n *   Called after the action is complete and the view has been rendered but\n *   before Controller::afterFilter().\n * - `beforeRedirect(Event $event $url, Response $response)`\n *   Called before a redirect is done. Allows you to change the URL that will\n *   be redirected to by returning a Response instance with new URL set using\n *   Response::location(). Redirection can be prevented by stopping the event\n *   propagation.\n *\n * While the controller is not an explicit argument for the callback methods it\n * is the subject of each event and can be fetched using Event::subject().\n *\n * @link http:\/\/book.cakephp.org\/3.0\/en\/controllers\/components.html\n * @see \\Cake\\Controller\\Controller::$components\n *\/",21],["T_WHITESPACE","\n",58],["T_CLASS","class",59],["T_WHITESPACE"," ",59],["T_STRING","Component",59],["T_WHITESPACE"," ",59],["T_IMPLEMENTS","implements",59],["T_WHITESPACE"," ",59],["T_STRING","EventListenerInterface",59],["T_WHITESPACE","\n",59],"{",["T_WHITESPACE","\n\n    ",60],["T_USE","use",62],["T_WHITESPACE"," ",62],["T_STRING","InstanceConfigTrait",62],";",["T_WHITESPACE","\n    ",62],["T_USE","use",63],["T_WHITESPACE"," ",63],["T_STRING","LogTrait",63],";",["T_WHITESPACE","\n\n    ",63],["T_DOC_COMMENT","\/**\n     * Request object\n     *\n     * @var \\Cake\\Network\\Request\n     *\/",65],["T_WHITESPACE","\n    ",69],["T_PUBLIC","public",70],["T_WHITESPACE"," ",70],["T_VARIABLE","$request",70],";",["T_WHITESPACE","\n\n    ",70],["T_DOC_COMMENT","\/**\n     * Response object\n     *\n     * @var \\Cake\\Network\\Response\n     *\/",72],["T_WHITESPACE","\n    ",76],["T_PUBLIC","public",77],["T_WHITESPACE"," ",77],["T_VARIABLE","$response",77],";",["T_WHITESPACE","\n\n    ",77],["T_DOC_COMMENT","\/**\n     * Component registry class used to lazy load components.\n     *\n     * @var \\Cake\\Controller\\ComponentRegistry\n     *\/",79],["T_WHITESPACE","\n    ",83],["T_PROTECTED","protected",84],["T_WHITESPACE"," ",84],["T_VARIABLE","$_registry",84],";",["T_WHITESPACE","\n\n    ",84],["T_DOC_COMMENT","\/**\n     * Other Components this component uses.\n     *\n     * @var array\n     *\/",86],["T_WHITESPACE","\n    ",90],["T_PUBLIC","public",91],["T_WHITESPACE"," ",91],["T_VARIABLE","$components",91],["T_WHITESPACE"," ",91],"=",["T_WHITESPACE"," ",91],"[","]",";",["T_WHITESPACE","\n\n    ",91],["T_DOC_COMMENT","\/**\n     * Default config\n     *\n     * These are merged with user-provided config when the component is used.\n     *\n     * @var array\n     *\/",93],["T_WHITESPACE","\n    ",99],["T_PROTECTED","protected",100],["T_WHITESPACE"," ",100],["T_VARIABLE","$_defaultConfig",100],["T_WHITESPACE"," ",100],"=",["T_WHITESPACE"," ",100],"[","]",";",["T_WHITESPACE","\n\n    ",100],["T_DOC_COMMENT","\/**\n     * A component lookup table used to lazy load component objects.\n     *\n     * @var array\n     *\/",102],["T_WHITESPACE","\n    ",106],["T_PROTECTED","protected",107],["T_WHITESPACE"," ",107],["T_VARIABLE","$_componentMap",107],["T_WHITESPACE"," ",107],"=",["T_WHITESPACE"," ",107],"[","]",";",["T_WHITESPACE","\n\n    ",107],["T_DOC_COMMENT","\/**\n     * Constructor\n     *\n     * @param \\Cake\\Controller\\ComponentRegistry $registry A ComponentRegistry this component can use to lazy load its components\n     * @param array $config Array of configuration settings.\n     *\/",109],["T_WHITESPACE","\n    ",114],["T_PUBLIC","public",115],["T_WHITESPACE"," ",115],["T_FUNCTION","function",115],["T_WHITESPACE"," ",115],["T_STRING","__construct",115],"(",["T_STRING","ComponentRegistry",115],["T_WHITESPACE"," ",115],["T_VARIABLE","$registry",115],",",["T_WHITESPACE"," ",115],["T_ARRAY","array",115],["T_WHITESPACE"," ",115],["T_VARIABLE","$config",115],["T_WHITESPACE"," ",115],"=",["T_WHITESPACE"," ",115],"[","]",")",["T_WHITESPACE","\n    ",115],"{",["T_WHITESPACE","\n        ",116],["T_VARIABLE","$this",117],["T_OBJECT_OPERATOR","->",117],["T_STRING","_registry",117],["T_WHITESPACE"," ",117],"=",["T_WHITESPACE"," ",117],["T_VARIABLE","$registry",117],";",["T_WHITESPACE","\n        ",117],["T_VARIABLE","$controller",118],["T_WHITESPACE"," ",118],"=",["T_WHITESPACE"," ",118],["T_VARIABLE","$registry",118],["T_OBJECT_OPERATOR","->",118],["T_STRING","getController",118],"(",")",";",["T_WHITESPACE","\n        ",118],["T_IF","if",119],["T_WHITESPACE"," ",119],"(",["T_VARIABLE","$controller",119],")",["T_WHITESPACE"," ",119],"{",["T_WHITESPACE","\n            ",119],["T_VARIABLE","$this",120],["T_OBJECT_OPERATOR","->",120],["T_STRING","request",120],["T_WHITESPACE"," ",120],"=","&",["T_WHITESPACE"," ",120],["T_VARIABLE","$controller",120],["T_OBJECT_OPERATOR","->",120],["T_STRING","request",120],";",["T_WHITESPACE","\n            ",120],["T_VARIABLE","$this",121],["T_OBJECT_OPERATOR","->",121],["T_STRING","response",121],["T_WHITESPACE"," ",121],"=","&",["T_WHITESPACE"," ",121],["T_VARIABLE","$controller",121],["T_OBJECT_OPERATOR","->",121],["T_STRING","response",121],";",["T_WHITESPACE","\n        ",121],"}",["T_WHITESPACE","\n\n        ",122],["T_VARIABLE","$this",124],["T_OBJECT_OPERATOR","->",124],["T_STRING","config",124],"(",["T_VARIABLE","$config",124],")",";",["T_WHITESPACE","\n\n        ",124],["T_IF","if",126],["T_WHITESPACE"," ",126],"(","!",["T_EMPTY","empty",126],"(",["T_VARIABLE","$this",126],["T_OBJECT_OPERATOR","->",126],["T_STRING","components",126],")",")",["T_WHITESPACE"," ",126],"{",["T_WHITESPACE","\n            ",126],["T_VARIABLE","$this",127],["T_OBJECT_OPERATOR","->",127],["T_STRING","_componentMap",127],["T_WHITESPACE"," ",127],"=",["T_WHITESPACE"," ",127],["T_VARIABLE","$registry",127],["T_OBJECT_OPERATOR","->",127],["T_STRING","normalizeArray",127],"(",["T_VARIABLE","$this",127],["T_OBJECT_OPERATOR","->",127],["T_STRING","components",127],")",";",["T_WHITESPACE","\n        ",127],"}",["T_WHITESPACE","\n        ",128],["T_VARIABLE","$this",129],["T_OBJECT_OPERATOR","->",129],["T_STRING","initialize",129],"(",["T_VARIABLE","$config",129],")",";",["T_WHITESPACE","\n    ",129],"}",["T_WHITESPACE","\n\n    ",130],["T_DOC_COMMENT","\/**\n     * Constructor hook method.\n     *\n     * Implement this method to avoid having to overwrite\n     * the constructor and call parent.\n     *\n     * @param array $config The configuration settings provided to this component.\n     * @return void\n     *\/",132],["T_WHITESPACE","\n    ",140],["T_PUBLIC","public",141],["T_WHITESPACE"," ",141],["T_FUNCTION","function",141],["T_WHITESPACE"," ",141],["T_STRING","initialize",141],"(",["T_ARRAY","array",141],["T_WHITESPACE"," ",141],["T_VARIABLE","$config",141],")",["T_WHITESPACE","\n    ",141],"{",["T_WHITESPACE","\n    ",142],"}",["T_WHITESPACE","\n\n    ",143],["T_DOC_COMMENT","\/**\n     * Magic method for lazy loading $components.\n     *\n     * @param string $name Name of component to get.\n     * @return mixed A Component object or null.\n     *\/",145],["T_WHITESPACE","\n    ",150],["T_PUBLIC","public",151],["T_WHITESPACE"," ",151],["T_FUNCTION","function",151],["T_WHITESPACE"," ",151],["T_STRING","__get",151],"(",["T_VARIABLE","$name",151],")",["T_WHITESPACE","\n    ",151],"{",["T_WHITESPACE","\n        ",152],["T_IF","if",153],["T_WHITESPACE"," ",153],"(",["T_ISSET","isset",153],"(",["T_VARIABLE","$this",153],["T_OBJECT_OPERATOR","->",153],["T_STRING","_componentMap",153],"[",["T_VARIABLE","$name",153],"]",")",["T_WHITESPACE"," ",153],["T_BOOLEAN_AND","&&",153],["T_WHITESPACE"," ",153],"!",["T_ISSET","isset",153],"(",["T_VARIABLE","$this",153],["T_OBJECT_OPERATOR","->",153],"{",["T_VARIABLE","$name",153],"}",")",")",["T_WHITESPACE"," ",153],"{",["T_WHITESPACE","\n            ",153],["T_VARIABLE","$config",154],["T_WHITESPACE"," ",154],"=",["T_WHITESPACE"," ",154],["T_ARRAY_CAST","(array)",154],["T_VARIABLE","$this",154],["T_OBJECT_OPERATOR","->",154],["T_STRING","_componentMap",154],"[",["T_VARIABLE","$name",154],"]","[",["T_CONSTANT_ENCAPSED_STRING","'config'",154],"]",["T_WHITESPACE"," ",154],"+",["T_WHITESPACE"," ",154],"[",["T_CONSTANT_ENCAPSED_STRING","'enabled'",154],["T_WHITESPACE"," ",154],["T_DOUBLE_ARROW","=>",154],["T_WHITESPACE"," ",154],["T_STRING","false",154],"]",";",["T_WHITESPACE","\n            ",154],["T_VARIABLE","$this",155],["T_OBJECT_OPERATOR","->",155],"{",["T_VARIABLE","$name",155],"}",["T_WHITESPACE"," ",155],"=",["T_WHITESPACE"," ",155],["T_VARIABLE","$this",155],["T_OBJECT_OPERATOR","->",155],["T_STRING","_registry",155],["T_OBJECT_OPERATOR","->",155],["T_STRING","load",155],"(",["T_VARIABLE","$this",155],["T_OBJECT_OPERATOR","->",155],["T_STRING","_componentMap",155],"[",["T_VARIABLE","$name",155],"]","[",["T_CONSTANT_ENCAPSED_STRING","'class'",155],"]",",",["T_WHITESPACE"," ",155],["T_VARIABLE","$config",155],")",";",["T_WHITESPACE","\n        ",155],"}",["T_WHITESPACE","\n        ",156],["T_IF","if",157],["T_WHITESPACE"," ",157],"(","!",["T_ISSET","isset",157],"(",["T_VARIABLE","$this",157],["T_OBJECT_OPERATOR","->",157],"{",["T_VARIABLE","$name",157],"}",")",")",["T_WHITESPACE"," ",157],"{",["T_WHITESPACE","\n            ",157],["T_RETURN","return",158],["T_WHITESPACE"," ",158],["T_STRING","null",158],";",["T_WHITESPACE","\n        ",158],"}",["T_WHITESPACE","\n\n        ",159],["T_RETURN","return",161],["T_WHITESPACE"," ",161],["T_VARIABLE","$this",161],["T_OBJECT_OPERATOR","->",161],"{",["T_VARIABLE","$name",161],"}",";",["T_WHITESPACE","\n    ",161],"}",["T_WHITESPACE","\n\n    ",162],["T_DOC_COMMENT","\/**\n     * Get the Controller callbacks this Component is interested in.\n     *\n     * Uses Conventions to map controller events to standard component\n     * callback method names. By defining one of the callback methods a\n     * component is assumed to be interested in the related event.\n     *\n     * Override this method if you need to add non-conventional event listeners.\n     * Or if you want components to listen to non-standard events.\n     *\n     * @return array\n     *\/",164],["T_WHITESPACE","\n    ",175],["T_PUBLIC","public",176],["T_WHITESPACE"," ",176],["T_FUNCTION","function",176],["T_WHITESPACE"," ",176],["T_STRING","implementedEvents",176],"(",")",["T_WHITESPACE","\n    ",176],"{",["T_WHITESPACE","\n        ",177],["T_VARIABLE","$eventMap",178],["T_WHITESPACE"," ",178],"=",["T_WHITESPACE"," ",178],"[",["T_WHITESPACE","\n            ",178],["T_CONSTANT_ENCAPSED_STRING","'Controller.initialize'",179],["T_WHITESPACE"," ",179],["T_DOUBLE_ARROW","=>",179],["T_WHITESPACE"," ",179],["T_CONSTANT_ENCAPSED_STRING","'beforeFilter'",179],",",["T_WHITESPACE","\n            ",179],["T_CONSTANT_ENCAPSED_STRING","'Controller.startup'",180],["T_WHITESPACE"," ",180],["T_DOUBLE_ARROW","=>",180],["T_WHITESPACE"," ",180],["T_CONSTANT_ENCAPSED_STRING","'startup'",180],",",["T_WHITESPACE","\n            ",180],["T_CONSTANT_ENCAPSED_STRING","'Controller.beforeRender'",181],["T_WHITESPACE"," ",181],["T_DOUBLE_ARROW","=>",181],["T_WHITESPACE"," ",181],["T_CONSTANT_ENCAPSED_STRING","'beforeRender'",181],",",["T_WHITESPACE","\n            ",181],["T_CONSTANT_ENCAPSED_STRING","'Controller.beforeRedirect'",182],["T_WHITESPACE"," ",182],["T_DOUBLE_ARROW","=>",182],["T_WHITESPACE"," ",182],["T_CONSTANT_ENCAPSED_STRING","'beforeRedirect'",182],",",["T_WHITESPACE","\n            ",182],["T_CONSTANT_ENCAPSED_STRING","'Controller.shutdown'",183],["T_WHITESPACE"," ",183],["T_DOUBLE_ARROW","=>",183],["T_WHITESPACE"," ",183],["T_CONSTANT_ENCAPSED_STRING","'shutdown'",183],",",["T_WHITESPACE","\n        ",183],"]",";",["T_WHITESPACE","\n        ",184],["T_VARIABLE","$events",185],["T_WHITESPACE"," ",185],"=",["T_WHITESPACE"," ",185],"[","]",";",["T_WHITESPACE","\n        ",185],["T_FOREACH","foreach",186],["T_WHITESPACE"," ",186],"(",["T_VARIABLE","$eventMap",186],["T_WHITESPACE"," ",186],["T_AS","as",186],["T_WHITESPACE"," ",186],["T_VARIABLE","$event",186],["T_WHITESPACE"," ",186],["T_DOUBLE_ARROW","=>",186],["T_WHITESPACE"," ",186],["T_VARIABLE","$method",186],")",["T_WHITESPACE"," ",186],"{",["T_WHITESPACE","\n            ",186],["T_IF","if",187],["T_WHITESPACE"," ",187],"(",["T_STRING","method_exists",187],"(",["T_VARIABLE","$this",187],",",["T_WHITESPACE"," ",187],["T_VARIABLE","$method",187],")",")",["T_WHITESPACE"," ",187],"{",["T_WHITESPACE","\n                ",187],["T_VARIABLE","$events",188],"[",["T_VARIABLE","$event",188],"]",["T_WHITESPACE"," ",188],"=",["T_WHITESPACE"," ",188],["T_VARIABLE","$method",188],";",["T_WHITESPACE","\n            ",188],"}",["T_WHITESPACE","\n        ",189],"}",["T_WHITESPACE","\n\n        ",190],["T_RETURN","return",192],["T_WHITESPACE"," ",192],["T_VARIABLE","$events",192],";",["T_WHITESPACE","\n    ",192],"}",["T_WHITESPACE","\n\n    ",193],["T_DOC_COMMENT","\/**\n     * Returns an array that can be used to describe the internal state of this\n     * object.\n     *\n     * @return array\n     *\/",195],["T_WHITESPACE","\n    ",200],["T_PUBLIC","public",201],["T_WHITESPACE"," ",201],["T_FUNCTION","function",201],["T_WHITESPACE"," ",201],["T_STRING","__debugInfo",201],"(",")",["T_WHITESPACE","\n    ",201],"{",["T_WHITESPACE","\n        ",202],["T_RETURN","return",203],["T_WHITESPACE"," ",203],"[",["T_WHITESPACE","\n            ",203],["T_CONSTANT_ENCAPSED_STRING","'components'",204],["T_WHITESPACE"," ",204],["T_DOUBLE_ARROW","=>",204],["T_WHITESPACE"," ",204],["T_VARIABLE","$this",204],["T_OBJECT_OPERATOR","->",204],["T_STRING","components",204],",",["T_WHITESPACE","\n            ",204],["T_CONSTANT_ENCAPSED_STRING","'implementedEvents'",205],["T_WHITESPACE"," ",205],["T_DOUBLE_ARROW","=>",205],["T_WHITESPACE"," ",205],["T_VARIABLE","$this",205],["T_OBJECT_OPERATOR","->",205],["T_STRING","implementedEvents",205],"(",")",",",["T_WHITESPACE","\n            ",205],["T_CONSTANT_ENCAPSED_STRING","'_config'",206],["T_WHITESPACE"," ",206],["T_DOUBLE_ARROW","=>",206],["T_WHITESPACE"," ",206],["T_VARIABLE","$this",206],["T_OBJECT_OPERATOR","->",206],["T_STRING","config",206],"(",")",",",["T_WHITESPACE","\n        ",206],"]",";",["T_WHITESPACE","\n    ",207],"}",["T_WHITESPACE","\n",208],"}",["T_WHITESPACE","\n",209]]