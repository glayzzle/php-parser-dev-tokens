[["T_OPEN_TAG","<?php\n",1],["T_DOC_COMMENT","\/**\n * CakePHP(tm) : Rapid Development Framework (http:\/\/cakephp.org)\n * Copyright (c) Cake Software Foundation, Inc. (http:\/\/cakefoundation.org)\n *\n * Licensed under The MIT License\n * For full copyright and license information, please see the LICENSE.txt\n * Redistributions of files must retain the above copyright notice.\n *\n * @copyright     Copyright (c) Cake Software Foundation, Inc. (http:\/\/cakefoundation.org)\n * @link          http:\/\/cakephp.org CakePHP(tm) Project\n * @since         2.0.0\n * @license       http:\/\/www.opensource.org\/licenses\/mit-license.php MIT License\n *\/",2],["T_WHITESPACE","\n",14],["T_NAMESPACE","namespace",15],["T_WHITESPACE"," ",15],["T_STRING","Cake",15],["T_NS_SEPARATOR","\\",15],["T_STRING","Auth",15],";",["T_WHITESPACE","\n\n",15],["T_USE","use",17],["T_WHITESPACE"," ",17],["T_STRING","Cake",17],["T_NS_SEPARATOR","\\",17],["T_STRING","Controller",17],["T_NS_SEPARATOR","\\",17],["T_STRING","ComponentRegistry",17],";",["T_WHITESPACE","\n",17],["T_USE","use",18],["T_WHITESPACE"," ",18],["T_STRING","Cake",18],["T_NS_SEPARATOR","\\",18],["T_STRING","Controller",18],["T_NS_SEPARATOR","\\",18],["T_STRING","Controller",18],";",["T_WHITESPACE","\n",18],["T_USE","use",19],["T_WHITESPACE"," ",19],["T_STRING","Cake",19],["T_NS_SEPARATOR","\\",19],["T_STRING","Core",19],["T_NS_SEPARATOR","\\",19],["T_STRING","Exception",19],["T_NS_SEPARATOR","\\",19],["T_STRING","Exception",19],";",["T_WHITESPACE","\n",19],["T_USE","use",20],["T_WHITESPACE"," ",20],["T_STRING","Cake",20],["T_NS_SEPARATOR","\\",20],["T_STRING","Network",20],["T_NS_SEPARATOR","\\",20],["T_STRING","Request",20],";",["T_WHITESPACE","\n\n",20],["T_DOC_COMMENT","\/**\n * An authorization adapter for AuthComponent. Provides the ability to authorize\n * using a controller callback. Your controller's isAuthorized() method should\n * return a boolean to indicate whether or not the user is authorized.\n *\n * ```\n *  public function isAuthorized($user)\n *  {\n *      if ($this->request->param('admin')) {\n *          return $user['role'] === 'admin';\n *      }\n *      return !empty($user);\n *  }\n * ```\n *\n * The above is simple implementation that would only authorize users of the\n * 'admin' role to access admin routing.\n *\n * @see \\Cake\\Controller\\Component\\AuthComponent::$authenticate\n *\/",22],["T_WHITESPACE","\n",41],["T_CLASS","class",42],["T_WHITESPACE"," ",42],["T_STRING","ControllerAuthorize",42],["T_WHITESPACE"," ",42],["T_EXTENDS","extends",42],["T_WHITESPACE"," ",42],["T_STRING","BaseAuthorize",42],["T_WHITESPACE","\n",42],"{",["T_WHITESPACE","\n\n    ",43],["T_DOC_COMMENT","\/**\n     * Controller for the request.\n     *\n     * @var \\Cake\\Controller\\Controller\n     *\/",45],["T_WHITESPACE","\n    ",49],["T_PROTECTED","protected",50],["T_WHITESPACE"," ",50],["T_VARIABLE","$_Controller",50],["T_WHITESPACE"," ",50],"=",["T_WHITESPACE"," ",50],["T_STRING","null",50],";",["T_WHITESPACE","\n\n    ",50],["T_DOC_COMMENT","\/**\n     * {@inheritDoc}\n     *\/",52],["T_WHITESPACE","\n    ",54],["T_PUBLIC","public",55],["T_WHITESPACE"," ",55],["T_FUNCTION","function",55],["T_WHITESPACE"," ",55],["T_STRING","__construct",55],"(",["T_STRING","ComponentRegistry",55],["T_WHITESPACE"," ",55],["T_VARIABLE","$registry",55],",",["T_WHITESPACE"," ",55],["T_ARRAY","array",55],["T_WHITESPACE"," ",55],["T_VARIABLE","$config",55],["T_WHITESPACE"," ",55],"=",["T_WHITESPACE"," ",55],"[","]",")",["T_WHITESPACE","\n    ",55],"{",["T_WHITESPACE","\n        ",56],["T_STRING","parent",57],["T_DOUBLE_COLON","::",57],["T_STRING","__construct",57],"(",["T_VARIABLE","$registry",57],",",["T_WHITESPACE"," ",57],["T_VARIABLE","$config",57],")",";",["T_WHITESPACE","\n        ",57],["T_VARIABLE","$this",58],["T_OBJECT_OPERATOR","->",58],["T_STRING","controller",58],"(",["T_VARIABLE","$registry",58],["T_OBJECT_OPERATOR","->",58],["T_STRING","getController",58],"(",")",")",";",["T_WHITESPACE","\n    ",58],"}",["T_WHITESPACE","\n\n    ",59],["T_DOC_COMMENT","\/**\n     * Get\/set the controller this authorize object will be working with. Also\n     * checks that isAuthorized is implemented.\n     *\n     * @param \\Cake\\Controller\\Controller|null $controller null to get, a controller to set.\n     * @return \\Cake\\Controller\\Controller\n     * @throws \\Cake\\Core\\Exception\\Exception If controller does not have method `isAuthorized()`.\n     *\/",61],["T_WHITESPACE","\n    ",68],["T_PUBLIC","public",69],["T_WHITESPACE"," ",69],["T_FUNCTION","function",69],["T_WHITESPACE"," ",69],["T_STRING","controller",69],"(",["T_STRING","Controller",69],["T_WHITESPACE"," ",69],["T_VARIABLE","$controller",69],["T_WHITESPACE"," ",69],"=",["T_WHITESPACE"," ",69],["T_STRING","null",69],")",["T_WHITESPACE","\n    ",69],"{",["T_WHITESPACE","\n        ",70],["T_IF","if",71],["T_WHITESPACE"," ",71],"(",["T_VARIABLE","$controller",71],")",["T_WHITESPACE"," ",71],"{",["T_WHITESPACE","\n            ",71],["T_IF","if",72],["T_WHITESPACE"," ",72],"(","!",["T_STRING","method_exists",72],"(",["T_VARIABLE","$controller",72],",",["T_WHITESPACE"," ",72],["T_CONSTANT_ENCAPSED_STRING","'isAuthorized'",72],")",")",["T_WHITESPACE"," ",72],"{",["T_WHITESPACE","\n                ",72],["T_THROW","throw",73],["T_WHITESPACE"," ",73],["T_NEW","new",73],["T_WHITESPACE"," ",73],["T_STRING","Exception",73],"(",["T_STRING","sprintf",73],"(",["T_WHITESPACE","\n                    ",73],["T_CONSTANT_ENCAPSED_STRING","'%s does not implement an isAuthorized() method.'",74],",",["T_WHITESPACE","\n                    ",74],["T_STRING","get_class",75],"(",["T_VARIABLE","$controller",75],")",["T_WHITESPACE","\n                ",75],")",")",";",["T_WHITESPACE","\n            ",76],"}",["T_WHITESPACE","\n            ",77],["T_VARIABLE","$this",78],["T_OBJECT_OPERATOR","->",78],["T_STRING","_Controller",78],["T_WHITESPACE"," ",78],"=",["T_WHITESPACE"," ",78],["T_VARIABLE","$controller",78],";",["T_WHITESPACE","\n        ",78],"}",["T_WHITESPACE","\n\n        ",79],["T_RETURN","return",81],["T_WHITESPACE"," ",81],["T_VARIABLE","$this",81],["T_OBJECT_OPERATOR","->",81],["T_STRING","_Controller",81],";",["T_WHITESPACE","\n    ",81],"}",["T_WHITESPACE","\n\n    ",82],["T_DOC_COMMENT","\/**\n     * Checks user authorization using a controller callback.\n     *\n     * @param array|\\ArrayAccess $user Active user data\n     * @param \\Cake\\Network\\Request $request Request instance.\n     * @return bool\n     *\/",84],["T_WHITESPACE","\n    ",90],["T_PUBLIC","public",91],["T_WHITESPACE"," ",91],["T_FUNCTION","function",91],["T_WHITESPACE"," ",91],["T_STRING","authorize",91],"(",["T_VARIABLE","$user",91],",",["T_WHITESPACE"," ",91],["T_STRING","Request",91],["T_WHITESPACE"," ",91],["T_VARIABLE","$request",91],")",["T_WHITESPACE","\n    ",91],"{",["T_WHITESPACE","\n        ",92],["T_RETURN","return",93],["T_WHITESPACE"," ",93],["T_BOOL_CAST","(bool)",93],["T_VARIABLE","$this",93],["T_OBJECT_OPERATOR","->",93],["T_STRING","_Controller",93],["T_OBJECT_OPERATOR","->",93],["T_STRING","isAuthorized",93],"(",["T_VARIABLE","$user",93],")",";",["T_WHITESPACE","\n    ",93],"}",["T_WHITESPACE","\n",94],"}",["T_WHITESPACE","\n",95]]