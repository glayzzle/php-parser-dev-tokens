[["T_OPEN_TAG","<?php\n",1],["T_DOC_COMMENT","\/**\n * CakePHP(tm) : Rapid Development Framework (http:\/\/cakephp.org)\n * Copyright (c) Cake Software Foundation, Inc. (http:\/\/cakefoundation.org)\n *\n * Licensed under The MIT License\n * For full copyright and license information, please see the LICENSE.txt\n * Redistributions of files must retain the above copyright notice.\n *\n * @copyright     Copyright (c) Cake Software Foundation, Inc. (http:\/\/cakefoundation.org)\n * @link          http:\/\/cakephp.org CakePHP(tm) Project\n * @license       http:\/\/www.opensource.org\/licenses\/mit-license.php MIT License\n *\/",2],["T_WHITESPACE","\n",13],["T_NAMESPACE","namespace",14],["T_WHITESPACE"," ",14],["T_STRING","Cake",14],["T_NS_SEPARATOR","\\",14],["T_STRING","Auth",14],";",["T_WHITESPACE","\n\n",14],["T_USE","use",16],["T_WHITESPACE"," ",16],["T_STRING","Cake",16],["T_NS_SEPARATOR","\\",16],["T_STRING","Controller",16],["T_NS_SEPARATOR","\\",16],["T_STRING","ComponentRegistry",16],";",["T_WHITESPACE","\n",16],["T_USE","use",17],["T_WHITESPACE"," ",17],["T_STRING","Cake",17],["T_NS_SEPARATOR","\\",17],["T_STRING","Core",17],["T_NS_SEPARATOR","\\",17],["T_STRING","InstanceConfigTrait",17],";",["T_WHITESPACE","\n",17],["T_USE","use",18],["T_WHITESPACE"," ",18],["T_STRING","Cake",18],["T_NS_SEPARATOR","\\",18],["T_STRING","Event",18],["T_NS_SEPARATOR","\\",18],["T_STRING","EventListenerInterface",18],";",["T_WHITESPACE","\n",18],["T_USE","use",19],["T_WHITESPACE"," ",19],["T_STRING","Cake",19],["T_NS_SEPARATOR","\\",19],["T_STRING","Network",19],["T_NS_SEPARATOR","\\",19],["T_STRING","Request",19],";",["T_WHITESPACE","\n",19],["T_USE","use",20],["T_WHITESPACE"," ",20],["T_STRING","Cake",20],["T_NS_SEPARATOR","\\",20],["T_STRING","Network",20],["T_NS_SEPARATOR","\\",20],["T_STRING","Response",20],";",["T_WHITESPACE","\n",20],["T_USE","use",21],["T_WHITESPACE"," ",21],["T_STRING","Cake",21],["T_NS_SEPARATOR","\\",21],["T_STRING","ORM",21],["T_NS_SEPARATOR","\\",21],["T_STRING","TableRegistry",21],";",["T_WHITESPACE","\n\n",21],["T_DOC_COMMENT","\/**\n * Base Authentication class with common methods and properties.\n *\/",23],["T_WHITESPACE","\n",25],["T_ABSTRACT","abstract",26],["T_WHITESPACE"," ",26],["T_CLASS","class",26],["T_WHITESPACE"," ",26],["T_STRING","BaseAuthenticate",26],["T_WHITESPACE"," ",26],["T_IMPLEMENTS","implements",26],["T_WHITESPACE"," ",26],["T_STRING","EventListenerInterface",26],["T_WHITESPACE","\n",26],"{",["T_WHITESPACE","\n\n    ",27],["T_USE","use",29],["T_WHITESPACE"," ",29],["T_STRING","InstanceConfigTrait",29],";",["T_WHITESPACE","\n\n    ",29],["T_DOC_COMMENT","\/**\n     * Default config for this object.\n     *\n     * - `fields` The fields to use to identify a user by.\n     * - `userModel` The alias for users table, defaults to Users.\n     * - `finder` The finder method to use to fetch user record. Defaults to 'all'.\n     *   You can set finder name as string or an array where key is finder name and value\n     *   is an array passed to `Table::find()` options.\n     *   E.g. ['finderName' => ['some_finder_option' => 'some_value']]\n     * - `passwordHasher` Password hasher class. Can be a string specifying class name\n     *    or an array containing `className` key, any other keys will be passed as\n     *    config to the class. Defaults to 'Default'.\n     * - Options `scope` and `contain` have been deprecated since 3.1. Use custom\n     *   finder instead to modify the query to fetch user record.\n     *\n     * @var array\n     *\/",31],["T_WHITESPACE","\n    ",47],["T_PROTECTED","protected",48],["T_WHITESPACE"," ",48],["T_VARIABLE","$_defaultConfig",48],["T_WHITESPACE"," ",48],"=",["T_WHITESPACE"," ",48],"[",["T_WHITESPACE","\n        ",48],["T_CONSTANT_ENCAPSED_STRING","'fields'",49],["T_WHITESPACE"," ",49],["T_DOUBLE_ARROW","=>",49],["T_WHITESPACE"," ",49],"[",["T_WHITESPACE","\n            ",49],["T_CONSTANT_ENCAPSED_STRING","'username'",50],["T_WHITESPACE"," ",50],["T_DOUBLE_ARROW","=>",50],["T_WHITESPACE"," ",50],["T_CONSTANT_ENCAPSED_STRING","'username'",50],",",["T_WHITESPACE","\n            ",50],["T_CONSTANT_ENCAPSED_STRING","'password'",51],["T_WHITESPACE"," ",51],["T_DOUBLE_ARROW","=>",51],["T_WHITESPACE"," ",51],["T_CONSTANT_ENCAPSED_STRING","'password'",51],["T_WHITESPACE","\n        ",51],"]",",",["T_WHITESPACE","\n        ",52],["T_CONSTANT_ENCAPSED_STRING","'userModel'",53],["T_WHITESPACE"," ",53],["T_DOUBLE_ARROW","=>",53],["T_WHITESPACE"," ",53],["T_CONSTANT_ENCAPSED_STRING","'Users'",53],",",["T_WHITESPACE","\n        ",53],["T_CONSTANT_ENCAPSED_STRING","'scope'",54],["T_WHITESPACE"," ",54],["T_DOUBLE_ARROW","=>",54],["T_WHITESPACE"," ",54],"[","]",",",["T_WHITESPACE","\n        ",54],["T_CONSTANT_ENCAPSED_STRING","'finder'",55],["T_WHITESPACE"," ",55],["T_DOUBLE_ARROW","=>",55],["T_WHITESPACE"," ",55],["T_CONSTANT_ENCAPSED_STRING","'all'",55],",",["T_WHITESPACE","\n        ",55],["T_CONSTANT_ENCAPSED_STRING","'contain'",56],["T_WHITESPACE"," ",56],["T_DOUBLE_ARROW","=>",56],["T_WHITESPACE"," ",56],["T_STRING","null",56],",",["T_WHITESPACE","\n        ",56],["T_CONSTANT_ENCAPSED_STRING","'passwordHasher'",57],["T_WHITESPACE"," ",57],["T_DOUBLE_ARROW","=>",57],["T_WHITESPACE"," ",57],["T_CONSTANT_ENCAPSED_STRING","'Default'",57],["T_WHITESPACE","\n    ",57],"]",";",["T_WHITESPACE","\n\n    ",58],["T_DOC_COMMENT","\/**\n     * A Component registry, used to get more components.\n     *\n     * @var \\Cake\\Controller\\ComponentRegistry\n     *\/",60],["T_WHITESPACE","\n    ",64],["T_PROTECTED","protected",65],["T_WHITESPACE"," ",65],["T_VARIABLE","$_registry",65],";",["T_WHITESPACE","\n\n    ",65],["T_DOC_COMMENT","\/**\n     * Password hasher instance.\n     *\n     * @var \\Cake\\Auth\\AbstractPasswordHasher\n     *\/",67],["T_WHITESPACE","\n    ",71],["T_PROTECTED","protected",72],["T_WHITESPACE"," ",72],["T_VARIABLE","$_passwordHasher",72],";",["T_WHITESPACE","\n\n    ",72],["T_DOC_COMMENT","\/**\n     * Whether or not the user authenticated by this class\n     * requires their password to be rehashed with another algorithm.\n     *\n     * @var bool\n     *\/",74],["T_WHITESPACE","\n    ",79],["T_PROTECTED","protected",80],["T_WHITESPACE"," ",80],["T_VARIABLE","$_needsPasswordRehash",80],["T_WHITESPACE"," ",80],"=",["T_WHITESPACE"," ",80],["T_STRING","false",80],";",["T_WHITESPACE","\n\n    ",80],["T_DOC_COMMENT","\/**\n     * Constructor\n     *\n     * @param \\Cake\\Controller\\ComponentRegistry $registry The Component registry used on this request.\n     * @param array $config Array of config to use.\n     *\/",82],["T_WHITESPACE","\n    ",87],["T_PUBLIC","public",88],["T_WHITESPACE"," ",88],["T_FUNCTION","function",88],["T_WHITESPACE"," ",88],["T_STRING","__construct",88],"(",["T_STRING","ComponentRegistry",88],["T_WHITESPACE"," ",88],["T_VARIABLE","$registry",88],",",["T_WHITESPACE"," ",88],["T_ARRAY","array",88],["T_WHITESPACE"," ",88],["T_VARIABLE","$config",88],["T_WHITESPACE"," ",88],"=",["T_WHITESPACE"," ",88],"[","]",")",["T_WHITESPACE","\n    ",88],"{",["T_WHITESPACE","\n        ",89],["T_VARIABLE","$this",90],["T_OBJECT_OPERATOR","->",90],["T_STRING","_registry",90],["T_WHITESPACE"," ",90],"=",["T_WHITESPACE"," ",90],["T_VARIABLE","$registry",90],";",["T_WHITESPACE","\n        ",90],["T_VARIABLE","$this",91],["T_OBJECT_OPERATOR","->",91],["T_STRING","config",91],"(",["T_VARIABLE","$config",91],")",";",["T_WHITESPACE","\n    ",91],"}",["T_WHITESPACE","\n\n    ",92],["T_DOC_COMMENT","\/**\n     * Find a user record using the username and password provided.\n     *\n     * Input passwords will be hashed even when a user doesn't exist. This\n     * helps mitigate timing attacks that are attempting to find valid usernames.\n     *\n     * @param string $username The username\/identifier.\n     * @param string|null $password The password, if not provided password checking is skipped\n     *   and result of find is returned.\n     * @return bool|array Either false on failure, or an array of user data.\n     *\/",94],["T_WHITESPACE","\n    ",104],["T_PROTECTED","protected",105],["T_WHITESPACE"," ",105],["T_FUNCTION","function",105],["T_WHITESPACE"," ",105],["T_STRING","_findUser",105],"(",["T_VARIABLE","$username",105],",",["T_WHITESPACE"," ",105],["T_VARIABLE","$password",105],["T_WHITESPACE"," ",105],"=",["T_WHITESPACE"," ",105],["T_STRING","null",105],")",["T_WHITESPACE","\n    ",105],"{",["T_WHITESPACE","\n        ",106],["T_VARIABLE","$result",107],["T_WHITESPACE"," ",107],"=",["T_WHITESPACE"," ",107],["T_VARIABLE","$this",107],["T_OBJECT_OPERATOR","->",107],["T_STRING","_query",107],"(",["T_VARIABLE","$username",107],")",["T_OBJECT_OPERATOR","->",107],["T_STRING","first",107],"(",")",";",["T_WHITESPACE","\n\n        ",107],["T_IF","if",109],["T_WHITESPACE"," ",109],"(",["T_EMPTY","empty",109],"(",["T_VARIABLE","$result",109],")",")",["T_WHITESPACE"," ",109],"{",["T_WHITESPACE","\n            ",109],["T_RETURN","return",110],["T_WHITESPACE"," ",110],["T_STRING","false",110],";",["T_WHITESPACE","\n        ",110],"}",["T_WHITESPACE","\n\n        ",111],["T_IF","if",113],["T_WHITESPACE"," ",113],"(",["T_VARIABLE","$password",113],["T_WHITESPACE"," ",113],["T_IS_NOT_IDENTICAL","!==",113],["T_WHITESPACE"," ",113],["T_STRING","null",113],")",["T_WHITESPACE"," ",113],"{",["T_WHITESPACE","\n            ",113],["T_VARIABLE","$hasher",114],["T_WHITESPACE"," ",114],"=",["T_WHITESPACE"," ",114],["T_VARIABLE","$this",114],["T_OBJECT_OPERATOR","->",114],["T_STRING","passwordHasher",114],"(",")",";",["T_WHITESPACE","\n            ",114],["T_VARIABLE","$hashedPassword",115],["T_WHITESPACE"," ",115],"=",["T_WHITESPACE"," ",115],["T_VARIABLE","$result",115],["T_OBJECT_OPERATOR","->",115],["T_STRING","get",115],"(",["T_VARIABLE","$this",115],["T_OBJECT_OPERATOR","->",115],["T_STRING","_config",115],"[",["T_CONSTANT_ENCAPSED_STRING","'fields'",115],"]","[",["T_CONSTANT_ENCAPSED_STRING","'password'",115],"]",")",";",["T_WHITESPACE","\n            ",115],["T_IF","if",116],["T_WHITESPACE"," ",116],"(","!",["T_VARIABLE","$hasher",116],["T_OBJECT_OPERATOR","->",116],["T_STRING","check",116],"(",["T_VARIABLE","$password",116],",",["T_WHITESPACE"," ",116],["T_VARIABLE","$hashedPassword",116],")",")",["T_WHITESPACE"," ",116],"{",["T_WHITESPACE","\n                ",116],["T_RETURN","return",117],["T_WHITESPACE"," ",117],["T_STRING","false",117],";",["T_WHITESPACE","\n            ",117],"}",["T_WHITESPACE","\n\n            ",118],["T_VARIABLE","$this",120],["T_OBJECT_OPERATOR","->",120],["T_STRING","_needsPasswordRehash",120],["T_WHITESPACE"," ",120],"=",["T_WHITESPACE"," ",120],["T_VARIABLE","$hasher",120],["T_OBJECT_OPERATOR","->",120],["T_STRING","needsRehash",120],"(",["T_VARIABLE","$hashedPassword",120],")",";",["T_WHITESPACE","\n            ",120],["T_VARIABLE","$result",121],["T_OBJECT_OPERATOR","->",121],["T_STRING","unsetProperty",121],"(",["T_VARIABLE","$this",121],["T_OBJECT_OPERATOR","->",121],["T_STRING","_config",121],"[",["T_CONSTANT_ENCAPSED_STRING","'fields'",121],"]","[",["T_CONSTANT_ENCAPSED_STRING","'password'",121],"]",")",";",["T_WHITESPACE","\n        ",121],"}",["T_WHITESPACE","\n\n        ",122],["T_RETURN","return",124],["T_WHITESPACE"," ",124],["T_VARIABLE","$result",124],["T_OBJECT_OPERATOR","->",124],["T_STRING","toArray",124],"(",")",";",["T_WHITESPACE","\n    ",124],"}",["T_WHITESPACE","\n\n    ",125],["T_DOC_COMMENT","\/**\n     * Get query object for fetching user from database.\n     *\n     * @param string $username The username\/identifier.\n     * @return \\Cake\\ORM\\Query\n     *\/",127],["T_WHITESPACE","\n    ",132],["T_PROTECTED","protected",133],["T_WHITESPACE"," ",133],["T_FUNCTION","function",133],["T_WHITESPACE"," ",133],["T_STRING","_query",133],"(",["T_VARIABLE","$username",133],")",["T_WHITESPACE","\n    ",133],"{",["T_WHITESPACE","\n        ",134],["T_VARIABLE","$config",135],["T_WHITESPACE"," ",135],"=",["T_WHITESPACE"," ",135],["T_VARIABLE","$this",135],["T_OBJECT_OPERATOR","->",135],["T_STRING","_config",135],";",["T_WHITESPACE","\n        ",135],["T_VARIABLE","$table",136],["T_WHITESPACE"," ",136],"=",["T_WHITESPACE"," ",136],["T_STRING","TableRegistry",136],["T_DOUBLE_COLON","::",136],["T_STRING","get",136],"(",["T_VARIABLE","$config",136],"[",["T_CONSTANT_ENCAPSED_STRING","'userModel'",136],"]",")",";",["T_WHITESPACE","\n\n        ",136],["T_VARIABLE","$options",138],["T_WHITESPACE"," ",138],"=",["T_WHITESPACE"," ",138],"[",["T_WHITESPACE","\n            ",138],["T_CONSTANT_ENCAPSED_STRING","'conditions'",139],["T_WHITESPACE"," ",139],["T_DOUBLE_ARROW","=>",139],["T_WHITESPACE"," ",139],"[",["T_VARIABLE","$table",139],["T_OBJECT_OPERATOR","->",139],["T_STRING","aliasField",139],"(",["T_VARIABLE","$config",139],"[",["T_CONSTANT_ENCAPSED_STRING","'fields'",139],"]","[",["T_CONSTANT_ENCAPSED_STRING","'username'",139],"]",")",["T_WHITESPACE"," ",139],["T_DOUBLE_ARROW","=>",139],["T_WHITESPACE"," ",139],["T_VARIABLE","$username",139],"]",["T_WHITESPACE","\n        ",139],"]",";",["T_WHITESPACE","\n\n        ",140],["T_IF","if",142],["T_WHITESPACE"," ",142],"(","!",["T_EMPTY","empty",142],"(",["T_VARIABLE","$config",142],"[",["T_CONSTANT_ENCAPSED_STRING","'scope'",142],"]",")",")",["T_WHITESPACE"," ",142],"{",["T_WHITESPACE","\n            ",142],["T_VARIABLE","$options",143],"[",["T_CONSTANT_ENCAPSED_STRING","'conditions'",143],"]",["T_WHITESPACE"," ",143],"=",["T_WHITESPACE"," ",143],["T_STRING","array_merge",143],"(",["T_VARIABLE","$options",143],"[",["T_CONSTANT_ENCAPSED_STRING","'conditions'",143],"]",",",["T_WHITESPACE"," ",143],["T_VARIABLE","$config",143],"[",["T_CONSTANT_ENCAPSED_STRING","'scope'",143],"]",")",";",["T_WHITESPACE","\n        ",143],"}",["T_WHITESPACE","\n        ",144],["T_IF","if",145],["T_WHITESPACE"," ",145],"(","!",["T_EMPTY","empty",145],"(",["T_VARIABLE","$config",145],"[",["T_CONSTANT_ENCAPSED_STRING","'contain'",145],"]",")",")",["T_WHITESPACE"," ",145],"{",["T_WHITESPACE","\n            ",145],["T_VARIABLE","$options",146],"[",["T_CONSTANT_ENCAPSED_STRING","'contain'",146],"]",["T_WHITESPACE"," ",146],"=",["T_WHITESPACE"," ",146],["T_VARIABLE","$config",146],"[",["T_CONSTANT_ENCAPSED_STRING","'contain'",146],"]",";",["T_WHITESPACE","\n        ",146],"}",["T_WHITESPACE","\n\n        ",147],["T_VARIABLE","$finder",149],["T_WHITESPACE"," ",149],"=",["T_WHITESPACE"," ",149],["T_VARIABLE","$config",149],"[",["T_CONSTANT_ENCAPSED_STRING","'finder'",149],"]",";",["T_WHITESPACE","\n        ",149],["T_IF","if",150],["T_WHITESPACE"," ",150],"(",["T_STRING","is_array",150],"(",["T_VARIABLE","$finder",150],")",")",["T_WHITESPACE"," ",150],"{",["T_WHITESPACE","\n            ",150],["T_VARIABLE","$options",151],["T_WHITESPACE"," ",151],["T_PLUS_EQUAL","+=",151],["T_WHITESPACE"," ",151],["T_STRING","current",151],"(",["T_VARIABLE","$finder",151],")",";",["T_WHITESPACE","\n            ",151],["T_VARIABLE","$finder",152],["T_WHITESPACE"," ",152],"=",["T_WHITESPACE"," ",152],["T_STRING","key",152],"(",["T_VARIABLE","$finder",152],")",";",["T_WHITESPACE","\n        ",152],"}",["T_WHITESPACE","\n\n        ",153],["T_IF","if",155],["T_WHITESPACE"," ",155],"(","!",["T_ISSET","isset",155],"(",["T_VARIABLE","$options",155],"[",["T_CONSTANT_ENCAPSED_STRING","'username'",155],"]",")",")",["T_WHITESPACE"," ",155],"{",["T_WHITESPACE","\n            ",155],["T_VARIABLE","$options",156],"[",["T_CONSTANT_ENCAPSED_STRING","'username'",156],"]",["T_WHITESPACE"," ",156],"=",["T_WHITESPACE"," ",156],["T_VARIABLE","$username",156],";",["T_WHITESPACE","\n        ",156],"}",["T_WHITESPACE","\n\n        ",157],["T_VARIABLE","$query",159],["T_WHITESPACE"," ",159],"=",["T_WHITESPACE"," ",159],["T_VARIABLE","$table",159],["T_OBJECT_OPERATOR","->",159],["T_STRING","find",159],"(",["T_VARIABLE","$finder",159],",",["T_WHITESPACE"," ",159],["T_VARIABLE","$options",159],")",";",["T_WHITESPACE","\n\n        ",159],["T_RETURN","return",161],["T_WHITESPACE"," ",161],["T_VARIABLE","$query",161],";",["T_WHITESPACE","\n    ",161],"}",["T_WHITESPACE","\n\n    ",162],["T_DOC_COMMENT","\/**\n     * Return password hasher object\n     *\n     * @return \\Cake\\Auth\\AbstractPasswordHasher Password hasher instance\n     * @throws \\RuntimeException If password hasher class not found or\n     *   it does not extend AbstractPasswordHasher\n     *\/",164],["T_WHITESPACE","\n    ",170],["T_PUBLIC","public",171],["T_WHITESPACE"," ",171],["T_FUNCTION","function",171],["T_WHITESPACE"," ",171],["T_STRING","passwordHasher",171],"(",")",["T_WHITESPACE","\n    ",171],"{",["T_WHITESPACE","\n        ",172],["T_IF","if",173],["T_WHITESPACE"," ",173],"(",["T_VARIABLE","$this",173],["T_OBJECT_OPERATOR","->",173],["T_STRING","_passwordHasher",173],")",["T_WHITESPACE"," ",173],"{",["T_WHITESPACE","\n            ",173],["T_RETURN","return",174],["T_WHITESPACE"," ",174],["T_VARIABLE","$this",174],["T_OBJECT_OPERATOR","->",174],["T_STRING","_passwordHasher",174],";",["T_WHITESPACE","\n        ",174],"}",["T_WHITESPACE","\n\n        ",175],["T_VARIABLE","$passwordHasher",177],["T_WHITESPACE"," ",177],"=",["T_WHITESPACE"," ",177],["T_VARIABLE","$this",177],["T_OBJECT_OPERATOR","->",177],["T_STRING","_config",177],"[",["T_CONSTANT_ENCAPSED_STRING","'passwordHasher'",177],"]",";",["T_WHITESPACE","\n\n        ",177],["T_RETURN","return",179],["T_WHITESPACE"," ",179],["T_VARIABLE","$this",179],["T_OBJECT_OPERATOR","->",179],["T_STRING","_passwordHasher",179],["T_WHITESPACE"," ",179],"=",["T_WHITESPACE"," ",179],["T_STRING","PasswordHasherFactory",179],["T_DOUBLE_COLON","::",179],["T_STRING","build",179],"(",["T_VARIABLE","$passwordHasher",179],")",";",["T_WHITESPACE","\n    ",179],"}",["T_WHITESPACE","\n\n    ",180],["T_DOC_COMMENT","\/**\n     * Returns whether or not the password stored in the repository for the logged in user\n     * requires to be rehashed with another algorithm\n     *\n     * @return bool\n     *\/",182],["T_WHITESPACE","\n    ",187],["T_PUBLIC","public",188],["T_WHITESPACE"," ",188],["T_FUNCTION","function",188],["T_WHITESPACE"," ",188],["T_STRING","needsPasswordRehash",188],"(",")",["T_WHITESPACE","\n    ",188],"{",["T_WHITESPACE","\n        ",189],["T_RETURN","return",190],["T_WHITESPACE"," ",190],["T_VARIABLE","$this",190],["T_OBJECT_OPERATOR","->",190],["T_STRING","_needsPasswordRehash",190],";",["T_WHITESPACE","\n    ",190],"}",["T_WHITESPACE","\n\n    ",191],["T_DOC_COMMENT","\/**\n     * Authenticate a user based on the request information.\n     *\n     * @param \\Cake\\Network\\Request $request Request to get authentication information from.\n     * @param \\Cake\\Network\\Response $response A response object that can have headers added.\n     * @return mixed Either false on failure, or an array of user data on success.\n     *\/",193],["T_WHITESPACE","\n    ",199],["T_ABSTRACT","abstract",200],["T_WHITESPACE"," ",200],["T_PUBLIC","public",200],["T_WHITESPACE"," ",200],["T_FUNCTION","function",200],["T_WHITESPACE"," ",200],["T_STRING","authenticate",200],"(",["T_STRING","Request",200],["T_WHITESPACE"," ",200],["T_VARIABLE","$request",200],",",["T_WHITESPACE"," ",200],["T_STRING","Response",200],["T_WHITESPACE"," ",200],["T_VARIABLE","$response",200],")",";",["T_WHITESPACE","\n\n    ",200],["T_DOC_COMMENT","\/**\n     * Get a user based on information in the request. Primarily used by stateless authentication\n     * systems like basic and digest auth.\n     *\n     * @param \\Cake\\Network\\Request $request Request object.\n     * @return mixed Either false or an array of user information\n     *\/",202],["T_WHITESPACE","\n    ",208],["T_PUBLIC","public",209],["T_WHITESPACE"," ",209],["T_FUNCTION","function",209],["T_WHITESPACE"," ",209],["T_STRING","getUser",209],"(",["T_STRING","Request",209],["T_WHITESPACE"," ",209],["T_VARIABLE","$request",209],")",["T_WHITESPACE","\n    ",209],"{",["T_WHITESPACE","\n        ",210],["T_RETURN","return",211],["T_WHITESPACE"," ",211],["T_STRING","false",211],";",["T_WHITESPACE","\n    ",211],"}",["T_WHITESPACE","\n\n    ",212],["T_DOC_COMMENT","\/**\n     * Handle unauthenticated access attempt. In implementation valid return values\n     * can be:\n     *\n     * - Null - No action taken, AuthComponent should return appropriate response.\n     * - Cake\\Network\\Response - A response object, which will cause AuthComponent to\n     *   simply return that response.\n     *\n     * @param \\Cake\\Network\\Request $request A request object.\n     * @param \\Cake\\Network\\Response $response A response object.\n     * @return void\n     *\/",214],["T_WHITESPACE","\n    ",225],["T_PUBLIC","public",226],["T_WHITESPACE"," ",226],["T_FUNCTION","function",226],["T_WHITESPACE"," ",226],["T_STRING","unauthenticated",226],"(",["T_STRING","Request",226],["T_WHITESPACE"," ",226],["T_VARIABLE","$request",226],",",["T_WHITESPACE"," ",226],["T_STRING","Response",226],["T_WHITESPACE"," ",226],["T_VARIABLE","$response",226],")",["T_WHITESPACE","\n    ",226],"{",["T_WHITESPACE","\n    ",227],"}",["T_WHITESPACE","\n\n    ",228],["T_DOC_COMMENT","\/**\n     * Returns a list of all events that this authenticate class will listen to.\n     *\n     * An authenticate class can listen to following events fired by AuthComponent:\n     *\n     * - `Auth.afterIdentify` - Fired after a user has been identified using one of\n     *   configured authenticate class. The callback function should have signature\n     *   like `afterIdentify(Event $event, array $user)` when `$user` is the\n     *   identified user record.\n     *\n     * - `Auth.logout` - Fired when AuthComponent::logout() is called. The callback\n     *   function should have signature like `logout(Event $event, array $user)`\n     *   where `$user` is the user about to be logged out.\n     *\n     * @return array List of events this class listens to. Defaults to `[]`.\n     *\/",230],["T_WHITESPACE","\n    ",245],["T_PUBLIC","public",246],["T_WHITESPACE"," ",246],["T_FUNCTION","function",246],["T_WHITESPACE"," ",246],["T_STRING","implementedEvents",246],"(",")",["T_WHITESPACE","\n    ",246],"{",["T_WHITESPACE","\n        ",247],["T_RETURN","return",248],["T_WHITESPACE"," ",248],"[","]",";",["T_WHITESPACE","\n    ",248],"}",["T_WHITESPACE","\n",249],"}",["T_WHITESPACE","\n",250]]