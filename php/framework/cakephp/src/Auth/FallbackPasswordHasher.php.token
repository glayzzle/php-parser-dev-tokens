[["T_OPEN_TAG","<?php\n",1],["T_DOC_COMMENT","\/**\n * CakePHP(tm) : Rapid Development Framework (http:\/\/cakephp.org)\n * Copyright (c) Cake Software Foundation, Inc. (http:\/\/cakefoundation.org)\n *\n * Licensed under The MIT License\n * For full copyright and license information, please see the LICENSE.txt\n * Redistributions of files must retain the above copyright notice.\n *\n * @copyright     Copyright (c) Cake Software Foundation, Inc. (http:\/\/cakefoundation.org)\n * @link          http:\/\/cakephp.org CakePHP(tm) Project\n * @since         3.0.0\n * @license       http:\/\/www.opensource.org\/licenses\/mit-license.php MIT License\n *\/",2],["T_WHITESPACE","\n",14],["T_NAMESPACE","namespace",15],["T_WHITESPACE"," ",15],["T_STRING","Cake",15],["T_NS_SEPARATOR","\\",15],["T_STRING","Auth",15],";",["T_WHITESPACE","\n\n",15],["T_DOC_COMMENT","\/**\n * A password hasher that can use multiple different hashes where only\n * one is the preferred one. This is useful when trying to migrate an\n * existing database of users from one password type to another.\n *\/",17],["T_WHITESPACE","\n",21],["T_CLASS","class",22],["T_WHITESPACE"," ",22],["T_STRING","FallbackPasswordHasher",22],["T_WHITESPACE"," ",22],["T_EXTENDS","extends",22],["T_WHITESPACE"," ",22],["T_STRING","AbstractPasswordHasher",22],["T_WHITESPACE","\n",22],"{",["T_WHITESPACE","\n\n    ",23],["T_DOC_COMMENT","\/**\n     * Default config for this object.\n     *\n     * @var array\n     *\/",25],["T_WHITESPACE","\n    ",29],["T_PROTECTED","protected",30],["T_WHITESPACE"," ",30],["T_VARIABLE","$_defaultConfig",30],["T_WHITESPACE"," ",30],"=",["T_WHITESPACE"," ",30],"[",["T_WHITESPACE","\n        ",30],["T_CONSTANT_ENCAPSED_STRING","'hashers'",31],["T_WHITESPACE"," ",31],["T_DOUBLE_ARROW","=>",31],["T_WHITESPACE"," ",31],"[","]",["T_WHITESPACE","\n    ",31],"]",";",["T_WHITESPACE","\n\n    ",32],["T_DOC_COMMENT","\/**\n     * Holds the list of password hasher objects that will be used\n     *\n     * @var array\n     *\/",34],["T_WHITESPACE","\n    ",38],["T_PROTECTED","protected",39],["T_WHITESPACE"," ",39],["T_VARIABLE","$_hashers",39],["T_WHITESPACE"," ",39],"=",["T_WHITESPACE"," ",39],"[","]",";",["T_WHITESPACE","\n\n    ",39],["T_DOC_COMMENT","\/**\n     * Constructor\n     *\n     * @param array $config configuration options for this object. Requires the\n     * `hashers` key to be present in the array with a list of other hashers to be\n     * used\n     *\/",41],["T_WHITESPACE","\n    ",47],["T_PUBLIC","public",48],["T_WHITESPACE"," ",48],["T_FUNCTION","function",48],["T_WHITESPACE"," ",48],["T_STRING","__construct",48],"(",["T_ARRAY","array",48],["T_WHITESPACE"," ",48],["T_VARIABLE","$config",48],["T_WHITESPACE"," ",48],"=",["T_WHITESPACE"," ",48],"[","]",")",["T_WHITESPACE","\n    ",48],"{",["T_WHITESPACE","\n        ",49],["T_STRING","parent",50],["T_DOUBLE_COLON","::",50],["T_STRING","__construct",50],"(",["T_VARIABLE","$config",50],")",";",["T_WHITESPACE","\n        ",50],["T_FOREACH","foreach",51],["T_WHITESPACE"," ",51],"(",["T_VARIABLE","$this",51],["T_OBJECT_OPERATOR","->",51],["T_STRING","_config",51],"[",["T_CONSTANT_ENCAPSED_STRING","'hashers'",51],"]",["T_WHITESPACE"," ",51],["T_AS","as",51],["T_WHITESPACE"," ",51],["T_VARIABLE","$key",51],["T_WHITESPACE"," ",51],["T_DOUBLE_ARROW","=>",51],["T_WHITESPACE"," ",51],["T_VARIABLE","$hasher",51],")",["T_WHITESPACE"," ",51],"{",["T_WHITESPACE","\n            ",51],["T_IF","if",52],["T_WHITESPACE"," ",52],"(",["T_STRING","is_array",52],"(",["T_VARIABLE","$hasher",52],")",["T_WHITESPACE"," ",52],["T_BOOLEAN_AND","&&",52],["T_WHITESPACE"," ",52],"!",["T_ISSET","isset",52],"(",["T_VARIABLE","$hasher",52],"[",["T_CONSTANT_ENCAPSED_STRING","'className'",52],"]",")",")",["T_WHITESPACE"," ",52],"{",["T_WHITESPACE","\n                ",52],["T_VARIABLE","$hasher",53],"[",["T_CONSTANT_ENCAPSED_STRING","'className'",53],"]",["T_WHITESPACE"," ",53],"=",["T_WHITESPACE"," ",53],["T_VARIABLE","$key",53],";",["T_WHITESPACE","\n            ",53],"}",["T_WHITESPACE","\n            ",54],["T_VARIABLE","$this",55],["T_OBJECT_OPERATOR","->",55],["T_STRING","_hashers",55],"[","]",["T_WHITESPACE"," ",55],"=",["T_WHITESPACE"," ",55],["T_STRING","PasswordHasherFactory",55],["T_DOUBLE_COLON","::",55],["T_STRING","build",55],"(",["T_VARIABLE","$hasher",55],")",";",["T_WHITESPACE","\n        ",55],"}",["T_WHITESPACE","\n    ",56],"}",["T_WHITESPACE","\n\n    ",57],["T_DOC_COMMENT","\/**\n     * Generates password hash.\n     *\n     * Uses the first password hasher in the list to generate the hash\n     *\n     * @param string $password Plain text password to hash.\n     * @return string Password hash\n     *\/",59],["T_WHITESPACE","\n    ",66],["T_PUBLIC","public",67],["T_WHITESPACE"," ",67],["T_FUNCTION","function",67],["T_WHITESPACE"," ",67],["T_STRING","hash",67],"(",["T_VARIABLE","$password",67],")",["T_WHITESPACE","\n    ",67],"{",["T_WHITESPACE","\n        ",68],["T_RETURN","return",69],["T_WHITESPACE"," ",69],["T_VARIABLE","$this",69],["T_OBJECT_OPERATOR","->",69],["T_STRING","_hashers",69],"[",["T_LNUMBER","0",69],"]",["T_OBJECT_OPERATOR","->",69],["T_STRING","hash",69],"(",["T_VARIABLE","$password",69],")",";",["T_WHITESPACE","\n    ",69],"}",["T_WHITESPACE","\n\n    ",70],["T_DOC_COMMENT","\/**\n     * Verifies that the provided password corresponds to its hashed version\n     *\n     * This will iterate over all configured hashers until one of them returns\n     * true.\n     *\n     * @param string $password Plain text password to hash.\n     * @param string $hashedPassword Existing hashed password.\n     * @return bool True if hashes match else false.\n     *\/",72],["T_WHITESPACE","\n    ",81],["T_PUBLIC","public",82],["T_WHITESPACE"," ",82],["T_FUNCTION","function",82],["T_WHITESPACE"," ",82],["T_STRING","check",82],"(",["T_VARIABLE","$password",82],",",["T_WHITESPACE"," ",82],["T_VARIABLE","$hashedPassword",82],")",["T_WHITESPACE","\n    ",82],"{",["T_WHITESPACE","\n        ",83],["T_FOREACH","foreach",84],["T_WHITESPACE"," ",84],"(",["T_VARIABLE","$this",84],["T_OBJECT_OPERATOR","->",84],["T_STRING","_hashers",84],["T_WHITESPACE"," ",84],["T_AS","as",84],["T_WHITESPACE"," ",84],["T_VARIABLE","$hasher",84],")",["T_WHITESPACE"," ",84],"{",["T_WHITESPACE","\n            ",84],["T_IF","if",85],["T_WHITESPACE"," ",85],"(",["T_VARIABLE","$hasher",85],["T_OBJECT_OPERATOR","->",85],["T_STRING","check",85],"(",["T_VARIABLE","$password",85],",",["T_WHITESPACE"," ",85],["T_VARIABLE","$hashedPassword",85],")",")",["T_WHITESPACE"," ",85],"{",["T_WHITESPACE","\n                ",85],["T_RETURN","return",86],["T_WHITESPACE"," ",86],["T_STRING","true",86],";",["T_WHITESPACE","\n            ",86],"}",["T_WHITESPACE","\n        ",87],"}",["T_WHITESPACE","\n\n        ",88],["T_RETURN","return",90],["T_WHITESPACE"," ",90],["T_STRING","false",90],";",["T_WHITESPACE","\n    ",90],"}",["T_WHITESPACE","\n\n    ",91],["T_DOC_COMMENT","\/**\n     * Returns true if the password need to be rehashed, with the first hasher present\n     * in the list of hashers\n     *\n     * @param string $password The password to verify\n     * @return bool\n     *\/",93],["T_WHITESPACE","\n    ",99],["T_PUBLIC","public",100],["T_WHITESPACE"," ",100],["T_FUNCTION","function",100],["T_WHITESPACE"," ",100],["T_STRING","needsRehash",100],"(",["T_VARIABLE","$password",100],")",["T_WHITESPACE","\n    ",100],"{",["T_WHITESPACE","\n        ",101],["T_RETURN","return",102],["T_WHITESPACE"," ",102],["T_VARIABLE","$this",102],["T_OBJECT_OPERATOR","->",102],["T_STRING","_hashers",102],"[",["T_LNUMBER","0",102],"]",["T_OBJECT_OPERATOR","->",102],["T_STRING","needsRehash",102],"(",["T_VARIABLE","$password",102],")",";",["T_WHITESPACE","\n    ",102],"}",["T_WHITESPACE","\n",103],"}",["T_WHITESPACE","\n",104]]