[["T_OPEN_TAG","<?php\n",1],["T_DOC_COMMENT","\/**\n * CakePHP(tm) : Rapid Development Framework (http:\/\/cakephp.org)\n * Copyright (c) Cake Software Foundation, Inc. (http:\/\/cakefoundation.org)\n *\n * Licensed under The MIT License\n * For full copyright and license information, please see the LICENSE.txt\n * Redistributions of files must retain the above copyright notice.\n *\n * @copyright     Copyright (c) Cake Software Foundation, Inc. (http:\/\/cakefoundation.org)\n * @link          http:\/\/cakephp.org CakePHP(tm) Project\n * @since         0.10.0\n * @license       http:\/\/www.opensource.org\/licenses\/mit-license.php MIT License\n *\/",2],["T_WHITESPACE","\n",14],["T_NAMESPACE","namespace",15],["T_WHITESPACE"," ",15],["T_STRING","Cake",15],["T_NS_SEPARATOR","\\",15],["T_STRING","Datasource",15],";",["T_WHITESPACE","\n\n",15],["T_USE","use",17],["T_WHITESPACE"," ",17],["T_STRING","Cake",17],["T_NS_SEPARATOR","\\",17],["T_STRING","Core",17],["T_NS_SEPARATOR","\\",17],["T_STRING","StaticConfigTrait",17],";",["T_WHITESPACE","\n",17],["T_USE","use",18],["T_WHITESPACE"," ",18],["T_STRING","Cake",18],["T_NS_SEPARATOR","\\",18],["T_STRING","Datasource",18],["T_NS_SEPARATOR","\\",18],["T_STRING","Exception",18],["T_NS_SEPARATOR","\\",18],["T_STRING","MissingDatasourceConfigException",18],";",["T_WHITESPACE","\n\n",18],["T_DOC_COMMENT","\/**\n * Manages and loads instances of Connection\n *\n * Provides an interface to loading and creating connection objects. Acts as\n * a registry for the connections defined in an application.\n *\n * Provides an interface for loading and enumerating connections defined in\n * config\/app.php\n *\/",20],["T_WHITESPACE","\n",28],["T_CLASS","class",29],["T_WHITESPACE"," ",29],["T_STRING","ConnectionManager",29],["T_WHITESPACE","\n",29],"{",["T_WHITESPACE","\n\n    ",30],["T_USE","use",32],["T_WHITESPACE"," ",32],["T_STRING","StaticConfigTrait",32],["T_WHITESPACE"," ",32],"{",["T_WHITESPACE","\n        ",32],["T_STRING","config",33],["T_WHITESPACE"," ",33],["T_AS","as",33],["T_WHITESPACE"," ",33],["T_PROTECTED","protected",33],["T_WHITESPACE"," ",33],["T_STRING","_config",33],";",["T_WHITESPACE","\n        ",33],["T_STRING","parseDsn",34],["T_WHITESPACE"," ",34],["T_AS","as",34],["T_WHITESPACE"," ",34],["T_PROTECTED","protected",34],["T_WHITESPACE"," ",34],["T_STRING","_parseDsn",34],";",["T_WHITESPACE","\n    ",34],"}",["T_WHITESPACE","\n\n    ",35],["T_DOC_COMMENT","\/**\n     * A map of connection aliases.\n     *\n     * @var array\n     *\/",37],["T_WHITESPACE","\n    ",41],["T_PROTECTED","protected",42],["T_WHITESPACE"," ",42],["T_STATIC","static",42],["T_WHITESPACE"," ",42],["T_VARIABLE","$_aliasMap",42],["T_WHITESPACE"," ",42],"=",["T_WHITESPACE"," ",42],"[","]",";",["T_WHITESPACE","\n\n    ",42],["T_DOC_COMMENT","\/**\n     * An array mapping url schemes to fully qualified driver class names\n     *\n     * @return array\n     *\/",44],["T_WHITESPACE","\n    ",48],["T_PROTECTED","protected",49],["T_WHITESPACE"," ",49],["T_STATIC","static",49],["T_WHITESPACE"," ",49],["T_VARIABLE","$_dsnClassMap",49],["T_WHITESPACE"," ",49],"=",["T_WHITESPACE"," ",49],"[",["T_WHITESPACE","\n        ",49],["T_CONSTANT_ENCAPSED_STRING","'mysql'",50],["T_WHITESPACE"," ",50],["T_DOUBLE_ARROW","=>",50],["T_WHITESPACE"," ",50],["T_CONSTANT_ENCAPSED_STRING","'Cake\\Database\\Driver\\Mysql'",50],",",["T_WHITESPACE","\n        ",50],["T_CONSTANT_ENCAPSED_STRING","'postgres'",51],["T_WHITESPACE"," ",51],["T_DOUBLE_ARROW","=>",51],["T_WHITESPACE"," ",51],["T_CONSTANT_ENCAPSED_STRING","'Cake\\Database\\Driver\\Postgres'",51],",",["T_WHITESPACE","\n        ",51],["T_CONSTANT_ENCAPSED_STRING","'sqlite'",52],["T_WHITESPACE"," ",52],["T_DOUBLE_ARROW","=>",52],["T_WHITESPACE"," ",52],["T_CONSTANT_ENCAPSED_STRING","'Cake\\Database\\Driver\\Sqlite'",52],",",["T_WHITESPACE","\n        ",52],["T_CONSTANT_ENCAPSED_STRING","'sqlserver'",53],["T_WHITESPACE"," ",53],["T_DOUBLE_ARROW","=>",53],["T_WHITESPACE"," ",53],["T_CONSTANT_ENCAPSED_STRING","'Cake\\Database\\Driver\\Sqlserver'",53],",",["T_WHITESPACE","\n    ",53],"]",";",["T_WHITESPACE","\n\n    ",54],["T_DOC_COMMENT","\/**\n     * The ConnectionRegistry used by the manager.\n     *\n     * @var \\Cake\\Datasource\\ConnectionRegistry\n     *\/",56],["T_WHITESPACE","\n    ",60],["T_PROTECTED","protected",61],["T_WHITESPACE"," ",61],["T_STATIC","static",61],["T_WHITESPACE"," ",61],["T_VARIABLE","$_registry",61],["T_WHITESPACE"," ",61],"=",["T_WHITESPACE"," ",61],["T_STRING","null",61],";",["T_WHITESPACE","\n\n    ",61],["T_DOC_COMMENT","\/**\n     * Configure a new connection object.\n     *\n     * The connection will not be constructed until it is first used.\n     *\n     * @param string|array $key The name of the connection config, or an array of multiple configs.\n     * @param array|null $config An array of name => config data for adapter.\n     * @return array|null Null when adding configuration and an array of configuration data when reading.\n     * @throws \\Cake\\Core\\Exception\\Exception When trying to modify an existing config.\n     * @see \\Cake\\Core\\StaticConfigTrait::config()\n     *\/",63],["T_WHITESPACE","\n    ",73],["T_PUBLIC","public",74],["T_WHITESPACE"," ",74],["T_STATIC","static",74],["T_WHITESPACE"," ",74],["T_FUNCTION","function",74],["T_WHITESPACE"," ",74],["T_STRING","config",74],"(",["T_VARIABLE","$key",74],",",["T_WHITESPACE"," ",74],["T_VARIABLE","$config",74],["T_WHITESPACE"," ",74],"=",["T_WHITESPACE"," ",74],["T_STRING","null",74],")",["T_WHITESPACE","\n    ",74],"{",["T_WHITESPACE","\n        ",75],["T_IF","if",76],["T_WHITESPACE"," ",76],"(",["T_STRING","is_array",76],"(",["T_VARIABLE","$config",76],")",")",["T_WHITESPACE"," ",76],"{",["T_WHITESPACE","\n            ",76],["T_VARIABLE","$config",77],"[",["T_CONSTANT_ENCAPSED_STRING","'name'",77],"]",["T_WHITESPACE"," ",77],"=",["T_WHITESPACE"," ",77],["T_VARIABLE","$key",77],";",["T_WHITESPACE","\n        ",77],"}",["T_WHITESPACE","\n\n        ",78],["T_RETURN","return",80],["T_WHITESPACE"," ",80],["T_STATIC","static",80],["T_DOUBLE_COLON","::",80],["T_STRING","_config",80],"(",["T_VARIABLE","$key",80],",",["T_WHITESPACE"," ",80],["T_VARIABLE","$config",80],")",";",["T_WHITESPACE","\n    ",80],"}",["T_WHITESPACE","\n\n    ",81],["T_DOC_COMMENT","\/**\n     * Parses a DSN into a valid connection configuration\n     *\n     * This method allows setting a DSN using formatting similar to that used by PEAR::DB.\n     * The following is an example of its usage:\n     *\n     * ```\n     * $dsn = 'mysql:\/\/user:pass@localhost\/database';\n     * $config = ConnectionManager::parseDsn($dsn);\n     *\n     * $dsn = 'Cake\\Database\\Driver\\Mysql:\/\/localhost:3306\/database?className=Cake\\Database\\Connection';\n     * $config = ConnectionManager::parseDsn($dsn);\n     *\n     * $dsn = 'Cake\\Database\\Connection:\/\/localhost:3306\/database?driver=Cake\\Database\\Driver\\Mysql';\n     * $config = ConnectionManager::parseDsn($dsn);\n     * ```\n     *\n     * For all classes, the value of `scheme` is set as the value of both the `className` and `driver`\n     * unless they have been otherwise specified.\n     *\n     * Note that query-string arguments are also parsed and set as values in the returned configuration.\n     *\n     * @param string|null $config The DSN string to convert to a configuration array\n     * @return array The configuration array to be stored after parsing the DSN\n     *\/",83],["T_WHITESPACE","\n    ",107],["T_PUBLIC","public",108],["T_WHITESPACE"," ",108],["T_STATIC","static",108],["T_WHITESPACE"," ",108],["T_FUNCTION","function",108],["T_WHITESPACE"," ",108],["T_STRING","parseDsn",108],"(",["T_VARIABLE","$config",108],["T_WHITESPACE"," ",108],"=",["T_WHITESPACE"," ",108],["T_STRING","null",108],")",["T_WHITESPACE","\n    ",108],"{",["T_WHITESPACE","\n        ",109],["T_VARIABLE","$config",110],["T_WHITESPACE"," ",110],"=",["T_WHITESPACE"," ",110],["T_STATIC","static",110],["T_DOUBLE_COLON","::",110],["T_STRING","_parseDsn",110],"(",["T_VARIABLE","$config",110],")",";",["T_WHITESPACE","\n\n        ",110],["T_IF","if",112],["T_WHITESPACE"," ",112],"(",["T_ISSET","isset",112],"(",["T_VARIABLE","$config",112],"[",["T_CONSTANT_ENCAPSED_STRING","'path'",112],"]",")",["T_WHITESPACE"," ",112],["T_BOOLEAN_AND","&&",112],["T_WHITESPACE"," ",112],["T_EMPTY","empty",112],"(",["T_VARIABLE","$config",112],"[",["T_CONSTANT_ENCAPSED_STRING","'database'",112],"]",")",")",["T_WHITESPACE"," ",112],"{",["T_WHITESPACE","\n            ",112],["T_VARIABLE","$config",113],"[",["T_CONSTANT_ENCAPSED_STRING","'database'",113],"]",["T_WHITESPACE"," ",113],"=",["T_WHITESPACE"," ",113],["T_STRING","substr",113],"(",["T_VARIABLE","$config",113],"[",["T_CONSTANT_ENCAPSED_STRING","'path'",113],"]",",",["T_WHITESPACE"," ",113],["T_LNUMBER","1",113],")",";",["T_WHITESPACE","\n        ",113],"}",["T_WHITESPACE","\n\n        ",114],["T_IF","if",116],["T_WHITESPACE"," ",116],"(",["T_EMPTY","empty",116],"(",["T_VARIABLE","$config",116],"[",["T_CONSTANT_ENCAPSED_STRING","'driver'",116],"]",")",")",["T_WHITESPACE"," ",116],"{",["T_WHITESPACE","\n            ",116],["T_VARIABLE","$config",117],"[",["T_CONSTANT_ENCAPSED_STRING","'driver'",117],"]",["T_WHITESPACE"," ",117],"=",["T_WHITESPACE"," ",117],["T_VARIABLE","$config",117],"[",["T_CONSTANT_ENCAPSED_STRING","'className'",117],"]",";",["T_WHITESPACE","\n            ",117],["T_VARIABLE","$config",118],"[",["T_CONSTANT_ENCAPSED_STRING","'className'",118],"]",["T_WHITESPACE"," ",118],"=",["T_WHITESPACE"," ",118],["T_CONSTANT_ENCAPSED_STRING","'Cake\\Database\\Connection'",118],";",["T_WHITESPACE","\n        ",118],"}",["T_WHITESPACE","\n\n        ",119],["T_UNSET","unset",121],"(",["T_VARIABLE","$config",121],"[",["T_CONSTANT_ENCAPSED_STRING","'path'",121],"]",")",";",["T_WHITESPACE","\n\n        ",121],["T_RETURN","return",123],["T_WHITESPACE"," ",123],["T_VARIABLE","$config",123],";",["T_WHITESPACE","\n    ",123],"}",["T_WHITESPACE","\n\n    ",124],["T_DOC_COMMENT","\/**\n     * Set one or more connection aliases.\n     *\n     * Connection aliases allow you to rename active connections without overwriting\n     * the aliased connection. This is most useful in the test-suite for replacing\n     * connections with their test variant.\n     *\n     * Defined aliases will take precedence over normal connection names. For example,\n     * if you alias 'default' to 'test', fetching 'default' will always return the 'test'\n     * connection as long as the alias is defined.\n     *\n     * You can remove aliases with ConnectionManager::dropAlias().\n     *\n     * ### Usage\n     *\n     * ```\n     * \/\/ Make 'things' resolve to 'test_things' connection\n     * ConnectionManager::alias('test_things', 'things');\n     * ```\n     *\n     * @param string $alias The alias to add. Fetching $source will return $alias when loaded with get.\n     * @param string $source The connection to add an alias to.\n     * @return void\n     * @throws \\Cake\\Datasource\\Exception\\MissingDatasourceConfigException When aliasing a\n     * connection that does not exist.\n     *\/",126],["T_WHITESPACE","\n    ",151],["T_PUBLIC","public",152],["T_WHITESPACE"," ",152],["T_STATIC","static",152],["T_WHITESPACE"," ",152],["T_FUNCTION","function",152],["T_WHITESPACE"," ",152],["T_STRING","alias",152],"(",["T_VARIABLE","$alias",152],",",["T_WHITESPACE"," ",152],["T_VARIABLE","$source",152],")",["T_WHITESPACE","\n    ",152],"{",["T_WHITESPACE","\n        ",153],["T_IF","if",154],["T_WHITESPACE"," ",154],"(",["T_EMPTY","empty",154],"(",["T_STATIC","static",154],["T_DOUBLE_COLON","::",154],["T_VARIABLE","$_config",154],"[",["T_VARIABLE","$source",154],"]",")",["T_WHITESPACE"," ",154],["T_BOOLEAN_AND","&&",154],["T_WHITESPACE"," ",154],["T_EMPTY","empty",154],"(",["T_STATIC","static",154],["T_DOUBLE_COLON","::",154],["T_VARIABLE","$_config",154],"[",["T_VARIABLE","$alias",154],"]",")",")",["T_WHITESPACE"," ",154],"{",["T_WHITESPACE","\n            ",154],["T_THROW","throw",155],["T_WHITESPACE"," ",155],["T_NEW","new",155],["T_WHITESPACE"," ",155],["T_STRING","MissingDatasourceConfigException",155],"(",["T_WHITESPACE","\n                ",155],["T_STRING","sprintf",156],"(",["T_CONSTANT_ENCAPSED_STRING","'Cannot create alias of \"%s\" as it does not exist.'",156],",",["T_WHITESPACE"," ",156],["T_VARIABLE","$alias",156],")",["T_WHITESPACE","\n            ",156],")",";",["T_WHITESPACE","\n        ",157],"}",["T_WHITESPACE","\n        ",158],["T_STATIC","static",159],["T_DOUBLE_COLON","::",159],["T_VARIABLE","$_aliasMap",159],"[",["T_VARIABLE","$source",159],"]",["T_WHITESPACE"," ",159],"=",["T_WHITESPACE"," ",159],["T_VARIABLE","$alias",159],";",["T_WHITESPACE","\n    ",159],"}",["T_WHITESPACE","\n\n    ",160],["T_DOC_COMMENT","\/**\n     * Drop an alias.\n     *\n     * Removes an alias from ConnectionManager. Fetching the aliased\n     * connection may fail if there is no other connection with that name.\n     *\n     * @param string $name The connection name to remove aliases for.\n     * @return void\n     *\/",162],["T_WHITESPACE","\n    ",170],["T_PUBLIC","public",171],["T_WHITESPACE"," ",171],["T_STATIC","static",171],["T_WHITESPACE"," ",171],["T_FUNCTION","function",171],["T_WHITESPACE"," ",171],["T_STRING","dropAlias",171],"(",["T_VARIABLE","$name",171],")",["T_WHITESPACE","\n    ",171],"{",["T_WHITESPACE","\n        ",172],["T_UNSET","unset",173],"(",["T_STATIC","static",173],["T_DOUBLE_COLON","::",173],["T_VARIABLE","$_aliasMap",173],"[",["T_VARIABLE","$name",173],"]",")",";",["T_WHITESPACE","\n    ",173],"}",["T_WHITESPACE","\n\n    ",174],["T_DOC_COMMENT","\/**\n     * Get a connection.\n     *\n     * If the connection has not been constructed an instance will be added\n     * to the registry. This method will use any aliases that have been\n     * defined. If you want the original unaliased connections pass `false`\n     * as second parameter.\n     *\n     * @param string $name The connection name.\n     * @param bool $useAliases Set to false to not use aliased connections.\n     * @return \\Cake\\Datasource\\ConnectionInterface A connection object.\n     * @throws \\Cake\\Datasource\\Exception\\MissingDatasourceConfigException When config\n     * data is missing.\n     *\/",176],["T_WHITESPACE","\n    ",189],["T_PUBLIC","public",190],["T_WHITESPACE"," ",190],["T_STATIC","static",190],["T_WHITESPACE"," ",190],["T_FUNCTION","function",190],["T_WHITESPACE"," ",190],["T_STRING","get",190],"(",["T_VARIABLE","$name",190],",",["T_WHITESPACE"," ",190],["T_VARIABLE","$useAliases",190],["T_WHITESPACE"," ",190],"=",["T_WHITESPACE"," ",190],["T_STRING","true",190],")",["T_WHITESPACE","\n    ",190],"{",["T_WHITESPACE","\n        ",191],["T_IF","if",192],["T_WHITESPACE"," ",192],"(",["T_VARIABLE","$useAliases",192],["T_WHITESPACE"," ",192],["T_BOOLEAN_AND","&&",192],["T_WHITESPACE"," ",192],["T_ISSET","isset",192],"(",["T_STATIC","static",192],["T_DOUBLE_COLON","::",192],["T_VARIABLE","$_aliasMap",192],"[",["T_VARIABLE","$name",192],"]",")",")",["T_WHITESPACE"," ",192],"{",["T_WHITESPACE","\n            ",192],["T_VARIABLE","$name",193],["T_WHITESPACE"," ",193],"=",["T_WHITESPACE"," ",193],["T_STATIC","static",193],["T_DOUBLE_COLON","::",193],["T_VARIABLE","$_aliasMap",193],"[",["T_VARIABLE","$name",193],"]",";",["T_WHITESPACE","\n        ",193],"}",["T_WHITESPACE","\n        ",194],["T_IF","if",195],["T_WHITESPACE"," ",195],"(",["T_EMPTY","empty",195],"(",["T_STATIC","static",195],["T_DOUBLE_COLON","::",195],["T_VARIABLE","$_config",195],"[",["T_VARIABLE","$name",195],"]",")",")",["T_WHITESPACE"," ",195],"{",["T_WHITESPACE","\n            ",195],["T_THROW","throw",196],["T_WHITESPACE"," ",196],["T_NEW","new",196],["T_WHITESPACE"," ",196],["T_STRING","MissingDatasourceConfigException",196],"(","[",["T_CONSTANT_ENCAPSED_STRING","'name'",196],["T_WHITESPACE"," ",196],["T_DOUBLE_ARROW","=>",196],["T_WHITESPACE"," ",196],["T_VARIABLE","$name",196],"]",")",";",["T_WHITESPACE","\n        ",196],"}",["T_WHITESPACE","\n        ",197],["T_IF","if",198],["T_WHITESPACE"," ",198],"(",["T_EMPTY","empty",198],"(",["T_STATIC","static",198],["T_DOUBLE_COLON","::",198],["T_VARIABLE","$_registry",198],")",")",["T_WHITESPACE"," ",198],"{",["T_WHITESPACE","\n            ",198],["T_STATIC","static",199],["T_DOUBLE_COLON","::",199],["T_VARIABLE","$_registry",199],["T_WHITESPACE"," ",199],"=",["T_WHITESPACE"," ",199],["T_NEW","new",199],["T_WHITESPACE"," ",199],["T_STRING","ConnectionRegistry",199],"(",")",";",["T_WHITESPACE","\n        ",199],"}",["T_WHITESPACE","\n        ",200],["T_IF","if",201],["T_WHITESPACE"," ",201],"(",["T_ISSET","isset",201],"(",["T_STATIC","static",201],["T_DOUBLE_COLON","::",201],["T_VARIABLE","$_registry",201],["T_OBJECT_OPERATOR","->",201],"{",["T_VARIABLE","$name",201],"}",")",")",["T_WHITESPACE"," ",201],"{",["T_WHITESPACE","\n            ",201],["T_RETURN","return",202],["T_WHITESPACE"," ",202],["T_STATIC","static",202],["T_DOUBLE_COLON","::",202],["T_VARIABLE","$_registry",202],["T_OBJECT_OPERATOR","->",202],"{",["T_VARIABLE","$name",202],"}",";",["T_WHITESPACE","\n        ",202],"}",["T_WHITESPACE","\n\n        ",203],["T_RETURN","return",205],["T_WHITESPACE"," ",205],["T_STATIC","static",205],["T_DOUBLE_COLON","::",205],["T_VARIABLE","$_registry",205],["T_OBJECT_OPERATOR","->",205],["T_STRING","load",205],"(",["T_VARIABLE","$name",205],",",["T_WHITESPACE"," ",205],["T_STATIC","static",205],["T_DOUBLE_COLON","::",205],["T_VARIABLE","$_config",205],"[",["T_VARIABLE","$name",205],"]",")",";",["T_WHITESPACE","\n    ",205],"}",["T_WHITESPACE","\n",206],"}",["T_WHITESPACE","\n",207]]