[["T_OPEN_TAG","<?php\n",1],["T_DOC_COMMENT","\/**\n * CakePHP(tm) : Rapid Development Framework (http:\/\/cakephp.org)\n * Copyright (c) Cake Software Foundation, Inc. (http:\/\/cakefoundation.org)\n *\n * Licensed under The MIT License\n * For full copyright and license information, please see the LICENSE.txt\n * Redistributions of files must retain the above copyright notice.\n *\n * @copyright     Copyright (c) Cake Software Foundation, Inc. (http:\/\/cakefoundation.org)\n * @link          http:\/\/cakephp.org CakePHP(tm) Project\n * @since         3.0.0\n * @license       http:\/\/www.opensource.org\/licenses\/mit-license.php MIT License\n *\/",2],["T_WHITESPACE","\n",14],["T_NAMESPACE","namespace",15],["T_WHITESPACE"," ",15],["T_STRING","Cake",15],["T_NS_SEPARATOR","\\",15],["T_STRING","Datasource",15],";",["T_WHITESPACE","\n\n",15],["T_USE","use",17],["T_WHITESPACE"," ",17],["T_STRING","Cake",17],["T_NS_SEPARATOR","\\",17],["T_STRING","Datasource",17],["T_NS_SEPARATOR","\\",17],["T_STRING","Exception",17],["T_NS_SEPARATOR","\\",17],["T_STRING","MissingModelException",17],";",["T_WHITESPACE","\n",17],["T_USE","use",18],["T_WHITESPACE"," ",18],["T_STRING","UnexpectedValueException",18],";",["T_WHITESPACE","\n\n",18],["T_DOC_COMMENT","\/**\n * Provides functionality for loading table classes\n * and other repositories onto properties of the host object.\n *\n * Example users of this trait are Cake\\Controller\\Controller and\n * Cake\\Console\\Shell.\n *\/",20],["T_WHITESPACE","\n",26],["T_TRAIT","trait",27],["T_WHITESPACE"," ",27],["T_STRING","ModelAwareTrait",27],["T_WHITESPACE","\n",27],"{",["T_WHITESPACE","\n\n    ",28],["T_DOC_COMMENT","\/**\n     * This object's primary model class name. Should be a plural form.\n     * CakePHP will not inflect the name.\n     *\n     * Example: For an object named 'Comments', the modelClass would be 'Comments'.\n     * Plugin classes should use `Plugin.Comments` style names to correctly load\n     * models from the correct plugin.\n     *\n     * @var string\n     *\/",30],["T_WHITESPACE","\n    ",39],["T_PUBLIC","public",40],["T_WHITESPACE"," ",40],["T_VARIABLE","$modelClass",40],";",["T_WHITESPACE","\n\n    ",40],["T_DOC_COMMENT","\/**\n     * A list of overridden model factory functions.\n     *\n     * @var array\n     *\/",42],["T_WHITESPACE","\n    ",46],["T_PROTECTED","protected",47],["T_WHITESPACE"," ",47],["T_VARIABLE","$_modelFactories",47],["T_WHITESPACE"," ",47],"=",["T_WHITESPACE"," ",47],"[","]",";",["T_WHITESPACE","\n\n    ",47],["T_DOC_COMMENT","\/**\n     * The model type to use.\n     *\n     * @var string\n     *\/",49],["T_WHITESPACE","\n    ",53],["T_PROTECTED","protected",54],["T_WHITESPACE"," ",54],["T_VARIABLE","$_modelType",54],["T_WHITESPACE"," ",54],"=",["T_WHITESPACE"," ",54],["T_CONSTANT_ENCAPSED_STRING","'Table'",54],";",["T_WHITESPACE","\n\n    ",54],["T_DOC_COMMENT","\/**\n     * Set the modelClass and modelKey properties based on conventions.\n     *\n     * If the properties are already set they will not be overwritten\n     *\n     * @param string $name Class name.\n     * @return void\n     *\/",56],["T_WHITESPACE","\n    ",63],["T_PROTECTED","protected",64],["T_WHITESPACE"," ",64],["T_FUNCTION","function",64],["T_WHITESPACE"," ",64],["T_STRING","_setModelClass",64],"(",["T_VARIABLE","$name",64],")",["T_WHITESPACE","\n    ",64],"{",["T_WHITESPACE","\n        ",65],["T_IF","if",66],["T_WHITESPACE"," ",66],"(",["T_EMPTY","empty",66],"(",["T_VARIABLE","$this",66],["T_OBJECT_OPERATOR","->",66],["T_STRING","modelClass",66],")",")",["T_WHITESPACE"," ",66],"{",["T_WHITESPACE","\n            ",66],["T_VARIABLE","$this",67],["T_OBJECT_OPERATOR","->",67],["T_STRING","modelClass",67],["T_WHITESPACE"," ",67],"=",["T_WHITESPACE"," ",67],["T_VARIABLE","$name",67],";",["T_WHITESPACE","\n        ",67],"}",["T_WHITESPACE","\n    ",68],"}",["T_WHITESPACE","\n\n    ",69],["T_DOC_COMMENT","\/**\n     * Loads and constructs repository objects required by this object\n     *\n     * Typically used to load ORM Table objects as required. Can\n     * also be used to load other types of repository objects your application uses.\n     *\n     * If a repository provider does not return an object a MissingModelException will\n     * be thrown.\n     *\n     * @param string|null $modelClass Name of model class to load. Defaults to $this->modelClass\n     * @param string|null $modelType The type of repository to load. Defaults to the modelType() value.\n     * @return \\Cake\\Datasource\\RepositoryInterface The model instance created.\n     * @throws \\Cake\\Datasource\\Exception\\MissingModelException If the model class cannot be found.\n     * @throws \\InvalidArgumentException When using a type that has not been registered.\n     * @throws \\UnexpectedValueException If no model type has been defined\n     *\/",71],["T_WHITESPACE","\n    ",86],["T_PUBLIC","public",87],["T_WHITESPACE"," ",87],["T_FUNCTION","function",87],["T_WHITESPACE"," ",87],["T_STRING","loadModel",87],"(",["T_VARIABLE","$modelClass",87],["T_WHITESPACE"," ",87],"=",["T_WHITESPACE"," ",87],["T_STRING","null",87],",",["T_WHITESPACE"," ",87],["T_VARIABLE","$modelType",87],["T_WHITESPACE"," ",87],"=",["T_WHITESPACE"," ",87],["T_STRING","null",87],")",["T_WHITESPACE","\n    ",87],"{",["T_WHITESPACE","\n        ",88],["T_IF","if",89],["T_WHITESPACE"," ",89],"(",["T_VARIABLE","$modelClass",89],["T_WHITESPACE"," ",89],["T_IS_IDENTICAL","===",89],["T_WHITESPACE"," ",89],["T_STRING","null",89],")",["T_WHITESPACE"," ",89],"{",["T_WHITESPACE","\n            ",89],["T_VARIABLE","$modelClass",90],["T_WHITESPACE"," ",90],"=",["T_WHITESPACE"," ",90],["T_VARIABLE","$this",90],["T_OBJECT_OPERATOR","->",90],["T_STRING","modelClass",90],";",["T_WHITESPACE","\n        ",90],"}",["T_WHITESPACE","\n        ",91],["T_IF","if",92],["T_WHITESPACE"," ",92],"(",["T_VARIABLE","$modelType",92],["T_WHITESPACE"," ",92],["T_IS_IDENTICAL","===",92],["T_WHITESPACE"," ",92],["T_STRING","null",92],")",["T_WHITESPACE"," ",92],"{",["T_WHITESPACE","\n            ",92],["T_VARIABLE","$modelType",93],["T_WHITESPACE"," ",93],"=",["T_WHITESPACE"," ",93],["T_VARIABLE","$this",93],["T_OBJECT_OPERATOR","->",93],["T_STRING","modelType",93],"(",")",";",["T_WHITESPACE","\n\n            ",93],["T_IF","if",95],["T_WHITESPACE"," ",95],"(",["T_VARIABLE","$modelType",95],["T_WHITESPACE"," ",95],["T_IS_IDENTICAL","===",95],["T_WHITESPACE"," ",95],["T_STRING","null",95],")",["T_WHITESPACE"," ",95],"{",["T_WHITESPACE","\n                ",95],["T_THROW","throw",96],["T_WHITESPACE"," ",96],["T_NEW","new",96],["T_WHITESPACE"," ",96],["T_STRING","UnexpectedValueException",96],"(",["T_CONSTANT_ENCAPSED_STRING","'No model type has been defined'",96],")",";",["T_WHITESPACE","\n            ",96],"}",["T_WHITESPACE","\n        ",97],"}",["T_WHITESPACE","\n\n        ",98],["T_LIST","list",100],"(",",",["T_WHITESPACE"," ",100],["T_VARIABLE","$alias",100],")",["T_WHITESPACE"," ",100],"=",["T_WHITESPACE"," ",100],["T_STRING","pluginSplit",100],"(",["T_VARIABLE","$modelClass",100],",",["T_WHITESPACE"," ",100],["T_STRING","true",100],")",";",["T_WHITESPACE","\n\n        ",100],["T_IF","if",102],["T_WHITESPACE"," ",102],"(",["T_ISSET","isset",102],"(",["T_VARIABLE","$this",102],["T_OBJECT_OPERATOR","->",102],"{",["T_VARIABLE","$alias",102],"}",")",")",["T_WHITESPACE"," ",102],"{",["T_WHITESPACE","\n            ",102],["T_RETURN","return",103],["T_WHITESPACE"," ",103],["T_VARIABLE","$this",103],["T_OBJECT_OPERATOR","->",103],"{",["T_VARIABLE","$alias",103],"}",";",["T_WHITESPACE","\n        ",103],"}",["T_WHITESPACE","\n\n        ",104],["T_IF","if",106],["T_WHITESPACE"," ",106],"(",["T_ISSET","isset",106],"(",["T_VARIABLE","$this",106],["T_OBJECT_OPERATOR","->",106],["T_STRING","_modelFactories",106],"[",["T_VARIABLE","$modelType",106],"]",")",")",["T_WHITESPACE"," ",106],"{",["T_WHITESPACE","\n            ",106],["T_VARIABLE","$factory",107],["T_WHITESPACE"," ",107],"=",["T_WHITESPACE"," ",107],["T_VARIABLE","$this",107],["T_OBJECT_OPERATOR","->",107],["T_STRING","_modelFactories",107],"[",["T_VARIABLE","$modelType",107],"]",";",["T_WHITESPACE","\n        ",107],"}",["T_WHITESPACE","\n        ",108],["T_IF","if",109],["T_WHITESPACE"," ",109],"(","!",["T_ISSET","isset",109],"(",["T_VARIABLE","$factory",109],")",")",["T_WHITESPACE"," ",109],"{",["T_WHITESPACE","\n            ",109],["T_VARIABLE","$factory",110],["T_WHITESPACE"," ",110],"=",["T_WHITESPACE"," ",110],["T_STRING","FactoryLocator",110],["T_DOUBLE_COLON","::",110],["T_STRING","get",110],"(",["T_VARIABLE","$modelType",110],")",";",["T_WHITESPACE","\n        ",110],"}",["T_WHITESPACE","\n        ",111],["T_VARIABLE","$this",112],["T_OBJECT_OPERATOR","->",112],"{",["T_VARIABLE","$alias",112],"}",["T_WHITESPACE"," ",112],"=",["T_WHITESPACE"," ",112],["T_VARIABLE","$factory",112],"(",["T_VARIABLE","$modelClass",112],")",";",["T_WHITESPACE","\n        ",112],["T_IF","if",113],["T_WHITESPACE"," ",113],"(","!",["T_VARIABLE","$this",113],["T_OBJECT_OPERATOR","->",113],"{",["T_VARIABLE","$alias",113],"}",")",["T_WHITESPACE"," ",113],"{",["T_WHITESPACE","\n            ",113],["T_THROW","throw",114],["T_WHITESPACE"," ",114],["T_NEW","new",114],["T_WHITESPACE"," ",114],["T_STRING","MissingModelException",114],"(","[",["T_VARIABLE","$modelClass",114],",",["T_WHITESPACE"," ",114],["T_VARIABLE","$modelType",114],"]",")",";",["T_WHITESPACE","\n        ",114],"}",["T_WHITESPACE","\n\n        ",115],["T_RETURN","return",117],["T_WHITESPACE"," ",117],["T_VARIABLE","$this",117],["T_OBJECT_OPERATOR","->",117],"{",["T_VARIABLE","$alias",117],"}",";",["T_WHITESPACE","\n    ",117],"}",["T_WHITESPACE","\n\n    ",118],["T_DOC_COMMENT","\/**\n     * Override a existing callable to generate repositories of a given type.\n     *\n     * @param string $type The name of the repository type the factory function is for.\n     * @param callable $factory The factory function used to create instances.\n     * @return void\n     *\/",120],["T_WHITESPACE","\n    ",126],["T_PUBLIC","public",127],["T_WHITESPACE"," ",127],["T_FUNCTION","function",127],["T_WHITESPACE"," ",127],["T_STRING","modelFactory",127],"(",["T_VARIABLE","$type",127],",",["T_WHITESPACE"," ",127],["T_CALLABLE","callable",127],["T_WHITESPACE"," ",127],["T_VARIABLE","$factory",127],")",["T_WHITESPACE","\n    ",127],"{",["T_WHITESPACE","\n        ",128],["T_VARIABLE","$this",129],["T_OBJECT_OPERATOR","->",129],["T_STRING","_modelFactories",129],"[",["T_VARIABLE","$type",129],"]",["T_WHITESPACE"," ",129],"=",["T_WHITESPACE"," ",129],["T_VARIABLE","$factory",129],";",["T_WHITESPACE","\n    ",129],"}",["T_WHITESPACE","\n\n    ",130],["T_DOC_COMMENT","\/**\n     * Set or get the model type to be used by this class\n     *\n     * @param string|null $modelType The model type or null to retrieve the current\n     *\n     * @return string|$this\n     *\/",132],["T_WHITESPACE","\n    ",138],["T_PUBLIC","public",139],["T_WHITESPACE"," ",139],["T_FUNCTION","function",139],["T_WHITESPACE"," ",139],["T_STRING","modelType",139],"(",["T_VARIABLE","$modelType",139],["T_WHITESPACE"," ",139],"=",["T_WHITESPACE"," ",139],["T_STRING","null",139],")",["T_WHITESPACE","\n    ",139],"{",["T_WHITESPACE","\n        ",140],["T_IF","if",141],["T_WHITESPACE"," ",141],"(",["T_VARIABLE","$modelType",141],["T_WHITESPACE"," ",141],["T_IS_IDENTICAL","===",141],["T_WHITESPACE"," ",141],["T_STRING","null",141],")",["T_WHITESPACE"," ",141],"{",["T_WHITESPACE","\n            ",141],["T_RETURN","return",142],["T_WHITESPACE"," ",142],["T_VARIABLE","$this",142],["T_OBJECT_OPERATOR","->",142],["T_STRING","_modelType",142],";",["T_WHITESPACE","\n        ",142],"}",["T_WHITESPACE","\n\n        ",143],["T_VARIABLE","$this",145],["T_OBJECT_OPERATOR","->",145],["T_STRING","_modelType",145],["T_WHITESPACE"," ",145],"=",["T_WHITESPACE"," ",145],["T_VARIABLE","$modelType",145],";",["T_WHITESPACE","\n\n        ",145],["T_RETURN","return",147],["T_WHITESPACE"," ",147],["T_VARIABLE","$this",147],";",["T_WHITESPACE","\n    ",147],"}",["T_WHITESPACE","\n",148],"}",["T_WHITESPACE","\n",149]]