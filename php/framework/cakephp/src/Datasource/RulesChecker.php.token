[["T_OPEN_TAG","<?php\n",1],["T_DOC_COMMENT","\/**\n * CakePHP(tm) : Rapid Development Framework (http:\/\/cakephp.org)\n * Copyright (c) Cake Software Foundation, Inc. (http:\/\/cakefoundation.org)\n *\n * Licensed under The MIT License\n * For full copyright and license information, please see the LICENSE.txt\n * Redistributions of files must retain the above copyright notice.\n *\n * @copyright     Copyright (c) Cake Software Foundation, Inc. (http:\/\/cakefoundation.org)\n * @link          http:\/\/cakephp.org CakePHP(tm) Project\n * @since         3.0.7\n * @license       http:\/\/www.opensource.org\/licenses\/mit-license.php MIT License\n *\/",2],["T_WHITESPACE","\n",14],["T_NAMESPACE","namespace",15],["T_WHITESPACE"," ",15],["T_STRING","Cake",15],["T_NS_SEPARATOR","\\",15],["T_STRING","Datasource",15],";",["T_WHITESPACE","\n\n",15],["T_USE","use",17],["T_WHITESPACE"," ",17],["T_STRING","InvalidArgumentException",17],";",["T_WHITESPACE","\n\n",17],["T_DOC_COMMENT","\/**\n * Contains logic for storing and checking rules on entities\n *\n * RulesCheckers are used by Table classes to ensure that the\n * current entity state satisfies the application logic and business rules.\n *\n * RulesCheckers afford different rules to be applied in the create and update\n * scenario.\n *\n * ### Adding rules\n *\n * Rules must be callable objects that return true\/false depending on whether or\n * not the rule has been satisfied. You can use RulesChecker::add(), RulesChecker::addCreate(),\n * RulesChecker::addUpdate() and RulesChecker::addDelete to add rules to a checker.\n *\n * ### Running checks\n *\n * Generally a Table object will invoke the rules objects, but you can manually\n * invoke the checks by calling RulesChecker::checkCreate(), RulesChecker::checkUpdate() or\n * RulesChecker::checkDelete().\n *\/",19],["T_WHITESPACE","\n",39],["T_CLASS","class",40],["T_WHITESPACE"," ",40],["T_STRING","RulesChecker",40],["T_WHITESPACE","\n",40],"{",["T_WHITESPACE","\n    ",41],["T_DOC_COMMENT","\/**\n     * Indicates that the checking rules to apply are those used for creating entities\n     *\n     * @var string\n     *\/",42],["T_WHITESPACE","\n    ",46],["T_CONST","const",47],["T_WHITESPACE"," ",47],["T_STRING","CREATE",47],["T_WHITESPACE"," ",47],"=",["T_WHITESPACE"," ",47],["T_CONSTANT_ENCAPSED_STRING","'create'",47],";",["T_WHITESPACE","\n\n    ",47],["T_DOC_COMMENT","\/**\n     * Indicates that the checking rules to apply are those used for updating entities\n     *\n     * @var string\n     *\/",49],["T_WHITESPACE","\n    ",53],["T_CONST","const",54],["T_WHITESPACE"," ",54],["T_STRING","UPDATE",54],["T_WHITESPACE"," ",54],"=",["T_WHITESPACE"," ",54],["T_CONSTANT_ENCAPSED_STRING","'update'",54],";",["T_WHITESPACE","\n\n    ",54],["T_DOC_COMMENT","\/**\n     * Indicates that the checking rules to apply are those used for deleting entities\n     *\n     * @var string\n     *\/",56],["T_WHITESPACE","\n    ",60],["T_CONST","const",61],["T_WHITESPACE"," ",61],["T_STRING","DELETE",61],["T_WHITESPACE"," ",61],"=",["T_WHITESPACE"," ",61],["T_CONSTANT_ENCAPSED_STRING","'delete'",61],";",["T_WHITESPACE","\n\n    ",61],["T_DOC_COMMENT","\/**\n     * The list of rules to be checked on both create and update operations\n     *\n     * @var array\n     *\/",63],["T_WHITESPACE","\n    ",67],["T_PROTECTED","protected",68],["T_WHITESPACE"," ",68],["T_VARIABLE","$_rules",68],["T_WHITESPACE"," ",68],"=",["T_WHITESPACE"," ",68],"[","]",";",["T_WHITESPACE","\n\n    ",68],["T_DOC_COMMENT","\/**\n     * The list of rules to check during create operations\n     *\n     * @var array\n     *\/",70],["T_WHITESPACE","\n    ",74],["T_PROTECTED","protected",75],["T_WHITESPACE"," ",75],["T_VARIABLE","$_createRules",75],["T_WHITESPACE"," ",75],"=",["T_WHITESPACE"," ",75],"[","]",";",["T_WHITESPACE","\n\n    ",75],["T_DOC_COMMENT","\/**\n     * The list of rules to check during update operations\n     *\n     * @var array\n     *\/",77],["T_WHITESPACE","\n    ",81],["T_PROTECTED","protected",82],["T_WHITESPACE"," ",82],["T_VARIABLE","$_updateRules",82],["T_WHITESPACE"," ",82],"=",["T_WHITESPACE"," ",82],"[","]",";",["T_WHITESPACE","\n\n    ",82],["T_DOC_COMMENT","\/**\n     * The list of rules to check during delete operations\n     *\n     * @var array\n     *\/",84],["T_WHITESPACE","\n    ",88],["T_PROTECTED","protected",89],["T_WHITESPACE"," ",89],["T_VARIABLE","$_deleteRules",89],["T_WHITESPACE"," ",89],"=",["T_WHITESPACE"," ",89],"[","]",";",["T_WHITESPACE","\n\n    ",89],["T_DOC_COMMENT","\/**\n     * List of options to pass to every callable rule\n     *\n     * @var array\n     *\/",91],["T_WHITESPACE","\n    ",95],["T_PROTECTED","protected",96],["T_WHITESPACE"," ",96],["T_VARIABLE","$_options",96],["T_WHITESPACE"," ",96],"=",["T_WHITESPACE"," ",96],"[","]",";",["T_WHITESPACE","\n\n    ",96],["T_DOC_COMMENT","\/**\n     * Whether or not to use I18n functions for translating default error messages\n     *\n     * @var bool\n     *\/",98],["T_WHITESPACE","\n    ",102],["T_PROTECTED","protected",103],["T_WHITESPACE"," ",103],["T_VARIABLE","$_useI18n",103],["T_WHITESPACE"," ",103],"=",["T_WHITESPACE"," ",103],["T_STRING","false",103],";",["T_WHITESPACE","\n\n    ",103],["T_DOC_COMMENT","\/**\n     * Constructor. Takes the options to be passed to all rules.\n     *\n     * @param array $options The options to pass to every rule\n     *\/",105],["T_WHITESPACE","\n    ",109],["T_PUBLIC","public",110],["T_WHITESPACE"," ",110],["T_FUNCTION","function",110],["T_WHITESPACE"," ",110],["T_STRING","__construct",110],"(",["T_ARRAY","array",110],["T_WHITESPACE"," ",110],["T_VARIABLE","$options",110],["T_WHITESPACE"," ",110],"=",["T_WHITESPACE"," ",110],"[","]",")",["T_WHITESPACE","\n    ",110],"{",["T_WHITESPACE","\n        ",111],["T_VARIABLE","$this",112],["T_OBJECT_OPERATOR","->",112],["T_STRING","_options",112],["T_WHITESPACE"," ",112],"=",["T_WHITESPACE"," ",112],["T_VARIABLE","$options",112],";",["T_WHITESPACE","\n        ",112],["T_VARIABLE","$this",113],["T_OBJECT_OPERATOR","->",113],["T_STRING","_useI18n",113],["T_WHITESPACE"," ",113],"=",["T_WHITESPACE"," ",113],["T_STRING","function_exists",113],"(",["T_CONSTANT_ENCAPSED_STRING","'__d'",113],")",";",["T_WHITESPACE","\n    ",113],"}",["T_WHITESPACE","\n\n    ",114],["T_DOC_COMMENT","\/**\n     * Adds a rule that will be applied to the entity both on create and update\n     * operations.\n     *\n     * ### Options\n     *\n     * The options array accept the following special keys:\n     *\n     * - `errorField`: The name of the entity field that will be marked as invalid\n     *    if the rule does not pass.\n     * - `message`: The error message to set to `errorField` if the rule does not pass.\n     *\n     * @param callable $rule A callable function or object that will return whether\n     * the entity is valid or not.\n     * @param string|null $name The alias for a rule.\n     * @param array $options List of extra options to pass to the rule callable as\n     * second argument.\n     * @return $this\n     *\/",116],["T_WHITESPACE","\n    ",134],["T_PUBLIC","public",135],["T_WHITESPACE"," ",135],["T_FUNCTION","function",135],["T_WHITESPACE"," ",135],["T_STRING","add",135],"(",["T_CALLABLE","callable",135],["T_WHITESPACE"," ",135],["T_VARIABLE","$rule",135],",",["T_WHITESPACE"," ",135],["T_VARIABLE","$name",135],["T_WHITESPACE"," ",135],"=",["T_WHITESPACE"," ",135],["T_STRING","null",135],",",["T_WHITESPACE"," ",135],["T_ARRAY","array",135],["T_WHITESPACE"," ",135],["T_VARIABLE","$options",135],["T_WHITESPACE"," ",135],"=",["T_WHITESPACE"," ",135],"[","]",")",["T_WHITESPACE","\n    ",135],"{",["T_WHITESPACE","\n        ",136],["T_VARIABLE","$this",137],["T_OBJECT_OPERATOR","->",137],["T_STRING","_rules",137],"[","]",["T_WHITESPACE"," ",137],"=",["T_WHITESPACE"," ",137],["T_VARIABLE","$this",137],["T_OBJECT_OPERATOR","->",137],["T_STRING","_addError",137],"(",["T_VARIABLE","$rule",137],",",["T_WHITESPACE"," ",137],["T_VARIABLE","$name",137],",",["T_WHITESPACE"," ",137],["T_VARIABLE","$options",137],")",";",["T_WHITESPACE","\n\n        ",137],["T_RETURN","return",139],["T_WHITESPACE"," ",139],["T_VARIABLE","$this",139],";",["T_WHITESPACE","\n    ",139],"}",["T_WHITESPACE","\n\n    ",140],["T_DOC_COMMENT","\/**\n     * Adds a rule that will be applied to the entity on create operations.\n     *\n     * ### Options\n     *\n     * The options array accept the following special keys:\n     *\n     * - `errorField`: The name of the entity field that will be marked as invalid\n     *    if the rule does not pass.\n     * - `message`: The error message to set to `errorField` if the rule does not pass.\n     *\n     * @param callable $rule A callable function or object that will return whether\n     * the entity is valid or not.\n     * @param string|null $name The alias for a rule.\n     * @param array $options List of extra options to pass to the rule callable as\n     * second argument.\n     * @return $this\n     *\/",142],["T_WHITESPACE","\n    ",159],["T_PUBLIC","public",160],["T_WHITESPACE"," ",160],["T_FUNCTION","function",160],["T_WHITESPACE"," ",160],["T_STRING","addCreate",160],"(",["T_CALLABLE","callable",160],["T_WHITESPACE"," ",160],["T_VARIABLE","$rule",160],",",["T_WHITESPACE"," ",160],["T_VARIABLE","$name",160],["T_WHITESPACE"," ",160],"=",["T_WHITESPACE"," ",160],["T_STRING","null",160],",",["T_WHITESPACE"," ",160],["T_ARRAY","array",160],["T_WHITESPACE"," ",160],["T_VARIABLE","$options",160],["T_WHITESPACE"," ",160],"=",["T_WHITESPACE"," ",160],"[","]",")",["T_WHITESPACE","\n    ",160],"{",["T_WHITESPACE","\n        ",161],["T_VARIABLE","$this",162],["T_OBJECT_OPERATOR","->",162],["T_STRING","_createRules",162],"[","]",["T_WHITESPACE"," ",162],"=",["T_WHITESPACE"," ",162],["T_VARIABLE","$this",162],["T_OBJECT_OPERATOR","->",162],["T_STRING","_addError",162],"(",["T_VARIABLE","$rule",162],",",["T_WHITESPACE"," ",162],["T_VARIABLE","$name",162],",",["T_WHITESPACE"," ",162],["T_VARIABLE","$options",162],")",";",["T_WHITESPACE","\n\n        ",162],["T_RETURN","return",164],["T_WHITESPACE"," ",164],["T_VARIABLE","$this",164],";",["T_WHITESPACE","\n    ",164],"}",["T_WHITESPACE","\n\n    ",165],["T_DOC_COMMENT","\/**\n     * Adds a rule that will be applied to the entity on update operations.\n     *\n     * ### Options\n     *\n     * The options array accept the following special keys:\n     *\n     * - `errorField`: The name of the entity field that will be marked as invalid\n     *    if the rule does not pass.\n     * - `message`: The error message to set to `errorField` if the rule does not pass.\n     *\n     * @param callable $rule A callable function or object that will return whether\n     * the entity is valid or not.\n     * @param string|null $name The alias for a rule.\n     * @param array $options List of extra options to pass to the rule callable as\n     * second argument.\n     * @return $this\n     *\/",167],["T_WHITESPACE","\n    ",184],["T_PUBLIC","public",185],["T_WHITESPACE"," ",185],["T_FUNCTION","function",185],["T_WHITESPACE"," ",185],["T_STRING","addUpdate",185],"(",["T_CALLABLE","callable",185],["T_WHITESPACE"," ",185],["T_VARIABLE","$rule",185],",",["T_WHITESPACE"," ",185],["T_VARIABLE","$name",185],["T_WHITESPACE"," ",185],"=",["T_WHITESPACE"," ",185],["T_STRING","null",185],",",["T_WHITESPACE"," ",185],["T_ARRAY","array",185],["T_WHITESPACE"," ",185],["T_VARIABLE","$options",185],["T_WHITESPACE"," ",185],"=",["T_WHITESPACE"," ",185],"[","]",")",["T_WHITESPACE","\n    ",185],"{",["T_WHITESPACE","\n        ",186],["T_VARIABLE","$this",187],["T_OBJECT_OPERATOR","->",187],["T_STRING","_updateRules",187],"[","]",["T_WHITESPACE"," ",187],"=",["T_WHITESPACE"," ",187],["T_VARIABLE","$this",187],["T_OBJECT_OPERATOR","->",187],["T_STRING","_addError",187],"(",["T_VARIABLE","$rule",187],",",["T_WHITESPACE"," ",187],["T_VARIABLE","$name",187],",",["T_WHITESPACE"," ",187],["T_VARIABLE","$options",187],")",";",["T_WHITESPACE","\n\n        ",187],["T_RETURN","return",189],["T_WHITESPACE"," ",189],["T_VARIABLE","$this",189],";",["T_WHITESPACE","\n    ",189],"}",["T_WHITESPACE","\n\n    ",190],["T_DOC_COMMENT","\/**\n     * Adds a rule that will be applied to the entity on delete operations.\n     *\n     * ### Options\n     *\n     * The options array accept the following special keys:\n     *\n     * - `errorField`: The name of the entity field that will be marked as invalid\n     *    if the rule does not pass.\n     * - `message`: The error message to set to `errorField` if the rule does not pass.\n     *\n     * @param callable $rule A callable function or object that will return whether\n     * the entity is valid or not.\n     * @param string|null $name The alias for a rule.\n     * @param array $options List of extra options to pass to the rule callable as\n     * second argument.\n     * @return $this\n     *\/",192],["T_WHITESPACE","\n    ",209],["T_PUBLIC","public",210],["T_WHITESPACE"," ",210],["T_FUNCTION","function",210],["T_WHITESPACE"," ",210],["T_STRING","addDelete",210],"(",["T_CALLABLE","callable",210],["T_WHITESPACE"," ",210],["T_VARIABLE","$rule",210],",",["T_WHITESPACE"," ",210],["T_VARIABLE","$name",210],["T_WHITESPACE"," ",210],"=",["T_WHITESPACE"," ",210],["T_STRING","null",210],",",["T_WHITESPACE"," ",210],["T_ARRAY","array",210],["T_WHITESPACE"," ",210],["T_VARIABLE","$options",210],["T_WHITESPACE"," ",210],"=",["T_WHITESPACE"," ",210],"[","]",")",["T_WHITESPACE","\n    ",210],"{",["T_WHITESPACE","\n        ",211],["T_VARIABLE","$this",212],["T_OBJECT_OPERATOR","->",212],["T_STRING","_deleteRules",212],"[","]",["T_WHITESPACE"," ",212],"=",["T_WHITESPACE"," ",212],["T_VARIABLE","$this",212],["T_OBJECT_OPERATOR","->",212],["T_STRING","_addError",212],"(",["T_VARIABLE","$rule",212],",",["T_WHITESPACE"," ",212],["T_VARIABLE","$name",212],",",["T_WHITESPACE"," ",212],["T_VARIABLE","$options",212],")",";",["T_WHITESPACE","\n\n        ",212],["T_RETURN","return",214],["T_WHITESPACE"," ",214],["T_VARIABLE","$this",214],";",["T_WHITESPACE","\n    ",214],"}",["T_WHITESPACE","\n\n    ",215],["T_DOC_COMMENT","\/**\n     * Runs each of the rules by passing the provided entity and returns true if all\n     * of them pass. The rules to be applied are depended on the $mode parameter which\n     * can only be RulesChecker::CREATE, RulesChecker::UPDATE or RulesChecker::DELETE\n     *\n     * @param \\Cake\\Datasource\\EntityInterface $entity The entity to check for validity.\n     * @param string $mode Either 'create, 'update' or 'delete'.\n     * @param array $options Extra options to pass to checker functions.\n     * @return bool\n     * @throws \\InvalidArgumentException if an invalid mode is passed.\n     *\/",217],["T_WHITESPACE","\n    ",227],["T_PUBLIC","public",228],["T_WHITESPACE"," ",228],["T_FUNCTION","function",228],["T_WHITESPACE"," ",228],["T_STRING","check",228],"(",["T_STRING","EntityInterface",228],["T_WHITESPACE"," ",228],["T_VARIABLE","$entity",228],",",["T_WHITESPACE"," ",228],["T_VARIABLE","$mode",228],",",["T_WHITESPACE"," ",228],["T_ARRAY","array",228],["T_WHITESPACE"," ",228],["T_VARIABLE","$options",228],["T_WHITESPACE"," ",228],"=",["T_WHITESPACE"," ",228],"[","]",")",["T_WHITESPACE","\n    ",228],"{",["T_WHITESPACE","\n        ",229],["T_IF","if",230],["T_WHITESPACE"," ",230],"(",["T_VARIABLE","$mode",230],["T_WHITESPACE"," ",230],["T_IS_IDENTICAL","===",230],["T_WHITESPACE"," ",230],["T_STRING","self",230],["T_DOUBLE_COLON","::",230],["T_STRING","CREATE",230],")",["T_WHITESPACE"," ",230],"{",["T_WHITESPACE","\n            ",230],["T_RETURN","return",231],["T_WHITESPACE"," ",231],["T_VARIABLE","$this",231],["T_OBJECT_OPERATOR","->",231],["T_STRING","checkCreate",231],"(",["T_VARIABLE","$entity",231],",",["T_WHITESPACE"," ",231],["T_VARIABLE","$options",231],")",";",["T_WHITESPACE","\n        ",231],"}",["T_WHITESPACE","\n\n        ",232],["T_IF","if",234],["T_WHITESPACE"," ",234],"(",["T_VARIABLE","$mode",234],["T_WHITESPACE"," ",234],["T_IS_IDENTICAL","===",234],["T_WHITESPACE"," ",234],["T_STRING","self",234],["T_DOUBLE_COLON","::",234],["T_STRING","UPDATE",234],")",["T_WHITESPACE"," ",234],"{",["T_WHITESPACE","\n            ",234],["T_RETURN","return",235],["T_WHITESPACE"," ",235],["T_VARIABLE","$this",235],["T_OBJECT_OPERATOR","->",235],["T_STRING","checkUpdate",235],"(",["T_VARIABLE","$entity",235],",",["T_WHITESPACE"," ",235],["T_VARIABLE","$options",235],")",";",["T_WHITESPACE","\n        ",235],"}",["T_WHITESPACE","\n\n        ",236],["T_IF","if",238],["T_WHITESPACE"," ",238],"(",["T_VARIABLE","$mode",238],["T_WHITESPACE"," ",238],["T_IS_IDENTICAL","===",238],["T_WHITESPACE"," ",238],["T_STRING","self",238],["T_DOUBLE_COLON","::",238],["T_STRING","DELETE",238],")",["T_WHITESPACE"," ",238],"{",["T_WHITESPACE","\n            ",238],["T_RETURN","return",239],["T_WHITESPACE"," ",239],["T_VARIABLE","$this",239],["T_OBJECT_OPERATOR","->",239],["T_STRING","checkDelete",239],"(",["T_VARIABLE","$entity",239],",",["T_WHITESPACE"," ",239],["T_VARIABLE","$options",239],")",";",["T_WHITESPACE","\n        ",239],"}",["T_WHITESPACE","\n\n        ",240],["T_THROW","throw",242],["T_WHITESPACE"," ",242],["T_NEW","new",242],["T_WHITESPACE"," ",242],["T_STRING","InvalidArgumentException",242],"(",["T_CONSTANT_ENCAPSED_STRING","'Wrong checking mode: '",242],["T_WHITESPACE"," ",242],".",["T_WHITESPACE"," ",242],["T_VARIABLE","$mode",242],")",";",["T_WHITESPACE","\n    ",242],"}",["T_WHITESPACE","\n\n    ",243],["T_DOC_COMMENT","\/**\n     * Runs each of the rules by passing the provided entity and returns true if all\n     * of them pass. The rules selected will be only those specified to be run on 'create'\n     *\n     * @param \\Cake\\Datasource\\EntityInterface $entity The entity to check for validity.\n     * @param array $options Extra options to pass to checker functions.\n     * @return bool\n     *\/",245],["T_WHITESPACE","\n    ",252],["T_PUBLIC","public",253],["T_WHITESPACE"," ",253],["T_FUNCTION","function",253],["T_WHITESPACE"," ",253],["T_STRING","checkCreate",253],"(",["T_STRING","EntityInterface",253],["T_WHITESPACE"," ",253],["T_VARIABLE","$entity",253],",",["T_WHITESPACE"," ",253],["T_ARRAY","array",253],["T_WHITESPACE"," ",253],["T_VARIABLE","$options",253],["T_WHITESPACE"," ",253],"=",["T_WHITESPACE"," ",253],"[","]",")",["T_WHITESPACE","\n    ",253],"{",["T_WHITESPACE","\n        ",254],["T_RETURN","return",255],["T_WHITESPACE"," ",255],["T_VARIABLE","$this",255],["T_OBJECT_OPERATOR","->",255],["T_STRING","_checkRules",255],"(",["T_VARIABLE","$entity",255],",",["T_WHITESPACE"," ",255],["T_VARIABLE","$options",255],",",["T_WHITESPACE"," ",255],["T_STRING","array_merge",255],"(",["T_VARIABLE","$this",255],["T_OBJECT_OPERATOR","->",255],["T_STRING","_rules",255],",",["T_WHITESPACE"," ",255],["T_VARIABLE","$this",255],["T_OBJECT_OPERATOR","->",255],["T_STRING","_createRules",255],")",")",";",["T_WHITESPACE","\n    ",255],"}",["T_WHITESPACE","\n\n    ",256],["T_DOC_COMMENT","\/**\n     * Runs each of the rules by passing the provided entity and returns true if all\n     * of them pass. The rules selected will be only those specified to be run on 'update'\n     *\n     * @param \\Cake\\Datasource\\EntityInterface $entity The entity to check for validity.\n     * @param array $options Extra options to pass to checker functions.\n     * @return bool\n     *\/",258],["T_WHITESPACE","\n    ",265],["T_PUBLIC","public",266],["T_WHITESPACE"," ",266],["T_FUNCTION","function",266],["T_WHITESPACE"," ",266],["T_STRING","checkUpdate",266],"(",["T_STRING","EntityInterface",266],["T_WHITESPACE"," ",266],["T_VARIABLE","$entity",266],",",["T_WHITESPACE"," ",266],["T_ARRAY","array",266],["T_WHITESPACE"," ",266],["T_VARIABLE","$options",266],["T_WHITESPACE"," ",266],"=",["T_WHITESPACE"," ",266],"[","]",")",["T_WHITESPACE","\n    ",266],"{",["T_WHITESPACE","\n        ",267],["T_RETURN","return",268],["T_WHITESPACE"," ",268],["T_VARIABLE","$this",268],["T_OBJECT_OPERATOR","->",268],["T_STRING","_checkRules",268],"(",["T_VARIABLE","$entity",268],",",["T_WHITESPACE"," ",268],["T_VARIABLE","$options",268],",",["T_WHITESPACE"," ",268],["T_STRING","array_merge",268],"(",["T_VARIABLE","$this",268],["T_OBJECT_OPERATOR","->",268],["T_STRING","_rules",268],",",["T_WHITESPACE"," ",268],["T_VARIABLE","$this",268],["T_OBJECT_OPERATOR","->",268],["T_STRING","_updateRules",268],")",")",";",["T_WHITESPACE","\n    ",268],"}",["T_WHITESPACE","\n\n    ",269],["T_DOC_COMMENT","\/**\n     * Runs each of the rules by passing the provided entity and returns true if all\n     * of them pass. The rules selected will be only those specified to be run on 'delete'\n     *\n     * @param \\Cake\\Datasource\\EntityInterface $entity The entity to check for validity.\n     * @param array $options Extra options to pass to checker functions.\n     * @return bool\n     *\/",271],["T_WHITESPACE","\n    ",278],["T_PUBLIC","public",279],["T_WHITESPACE"," ",279],["T_FUNCTION","function",279],["T_WHITESPACE"," ",279],["T_STRING","checkDelete",279],"(",["T_STRING","EntityInterface",279],["T_WHITESPACE"," ",279],["T_VARIABLE","$entity",279],",",["T_WHITESPACE"," ",279],["T_ARRAY","array",279],["T_WHITESPACE"," ",279],["T_VARIABLE","$options",279],["T_WHITESPACE"," ",279],"=",["T_WHITESPACE"," ",279],"[","]",")",["T_WHITESPACE","\n    ",279],"{",["T_WHITESPACE","\n        ",280],["T_RETURN","return",281],["T_WHITESPACE"," ",281],["T_VARIABLE","$this",281],["T_OBJECT_OPERATOR","->",281],["T_STRING","_checkRules",281],"(",["T_VARIABLE","$entity",281],",",["T_WHITESPACE"," ",281],["T_VARIABLE","$options",281],",",["T_WHITESPACE"," ",281],["T_VARIABLE","$this",281],["T_OBJECT_OPERATOR","->",281],["T_STRING","_deleteRules",281],")",";",["T_WHITESPACE","\n    ",281],"}",["T_WHITESPACE","\n\n    ",282],["T_DOC_COMMENT","\/**\n     * Used by top level functions checkDelete, checkCreate and checkUpdate, this function\n     * iterates an array containing the rules to be checked and checks them all.\n     *\n     * @param \\Cake\\Datasource\\EntityInterface $entity The entity to check for validity.\n     * @param array $options Extra options to pass to checker functions.\n     * @param array $rules The list of rules that must be checked.\n     * @return bool\n     *\/",284],["T_WHITESPACE","\n    ",292],["T_PROTECTED","protected",293],["T_WHITESPACE"," ",293],["T_FUNCTION","function",293],["T_WHITESPACE"," ",293],["T_STRING","_checkRules",293],"(",["T_STRING","EntityInterface",293],["T_WHITESPACE"," ",293],["T_VARIABLE","$entity",293],",",["T_WHITESPACE"," ",293],["T_ARRAY","array",293],["T_WHITESPACE"," ",293],["T_VARIABLE","$options",293],["T_WHITESPACE"," ",293],"=",["T_WHITESPACE"," ",293],"[","]",",",["T_WHITESPACE"," ",293],["T_ARRAY","array",293],["T_WHITESPACE"," ",293],["T_VARIABLE","$rules",293],["T_WHITESPACE"," ",293],"=",["T_WHITESPACE"," ",293],"[","]",")",["T_WHITESPACE","\n    ",293],"{",["T_WHITESPACE","\n        ",294],["T_VARIABLE","$success",295],["T_WHITESPACE"," ",295],"=",["T_WHITESPACE"," ",295],["T_STRING","true",295],";",["T_WHITESPACE","\n        ",295],["T_VARIABLE","$options",296],["T_WHITESPACE"," ",296],"=",["T_WHITESPACE"," ",296],["T_VARIABLE","$options",296],["T_WHITESPACE"," ",296],"+",["T_WHITESPACE"," ",296],["T_VARIABLE","$this",296],["T_OBJECT_OPERATOR","->",296],["T_STRING","_options",296],";",["T_WHITESPACE","\n        ",296],["T_FOREACH","foreach",297],["T_WHITESPACE"," ",297],"(",["T_VARIABLE","$rules",297],["T_WHITESPACE"," ",297],["T_AS","as",297],["T_WHITESPACE"," ",297],["T_VARIABLE","$rule",297],")",["T_WHITESPACE"," ",297],"{",["T_WHITESPACE","\n            ",297],["T_VARIABLE","$success",298],["T_WHITESPACE"," ",298],"=",["T_WHITESPACE"," ",298],["T_VARIABLE","$rule",298],"(",["T_VARIABLE","$entity",298],",",["T_WHITESPACE"," ",298],["T_VARIABLE","$options",298],")",["T_WHITESPACE"," ",298],["T_BOOLEAN_AND","&&",298],["T_WHITESPACE"," ",298],["T_VARIABLE","$success",298],";",["T_WHITESPACE","\n        ",298],"}",["T_WHITESPACE","\n\n        ",299],["T_RETURN","return",301],["T_WHITESPACE"," ",301],["T_VARIABLE","$success",301],";",["T_WHITESPACE","\n    ",301],"}",["T_WHITESPACE","\n\n    ",302],["T_DOC_COMMENT","\/**\n     * Utility method for decorating any callable so that if it returns false, the correct\n     * property in the entity is marked as invalid.\n     *\n     * @param callable $rule The rule to decorate\n     * @param string $name The alias for a rule.\n     * @param array $options The options containing the error message and field.\n     * @return callable\n     *\/",304],["T_WHITESPACE","\n    ",312],["T_PROTECTED","protected",313],["T_WHITESPACE"," ",313],["T_FUNCTION","function",313],["T_WHITESPACE"," ",313],["T_STRING","_addError",313],"(",["T_VARIABLE","$rule",313],",",["T_WHITESPACE"," ",313],["T_VARIABLE","$name",313],",",["T_WHITESPACE"," ",313],["T_VARIABLE","$options",313],")",["T_WHITESPACE","\n    ",313],"{",["T_WHITESPACE","\n        ",314],["T_IF","if",315],["T_WHITESPACE"," ",315],"(",["T_STRING","is_array",315],"(",["T_VARIABLE","$name",315],")",")",["T_WHITESPACE"," ",315],"{",["T_WHITESPACE","\n            ",315],["T_VARIABLE","$options",316],["T_WHITESPACE"," ",316],"=",["T_WHITESPACE"," ",316],["T_VARIABLE","$name",316],";",["T_WHITESPACE","\n            ",316],["T_VARIABLE","$name",317],["T_WHITESPACE"," ",317],"=",["T_WHITESPACE"," ",317],["T_STRING","null",317],";",["T_WHITESPACE","\n        ",317],"}",["T_WHITESPACE","\n\n        ",318],["T_IF","if",320],["T_WHITESPACE"," ",320],"(","!","(",["T_VARIABLE","$rule",320],["T_WHITESPACE"," ",320],["T_INSTANCEOF","instanceof",320],["T_WHITESPACE"," ",320],["T_STRING","RuleInvoker",320],")",")",["T_WHITESPACE"," ",320],"{",["T_WHITESPACE","\n            ",320],["T_VARIABLE","$rule",321],["T_WHITESPACE"," ",321],"=",["T_WHITESPACE"," ",321],["T_NEW","new",321],["T_WHITESPACE"," ",321],["T_STRING","RuleInvoker",321],"(",["T_VARIABLE","$rule",321],",",["T_WHITESPACE"," ",321],["T_VARIABLE","$name",321],",",["T_WHITESPACE"," ",321],["T_VARIABLE","$options",321],")",";",["T_WHITESPACE","\n        ",321],"}",["T_WHITESPACE"," ",322],["T_ELSE","else",322],["T_WHITESPACE"," ",322],"{",["T_WHITESPACE","\n            ",322],["T_VARIABLE","$rule",323],["T_OBJECT_OPERATOR","->",323],["T_STRING","setOptions",323],"(",["T_VARIABLE","$options",323],")",["T_OBJECT_OPERATOR","->",323],["T_STRING","setName",323],"(",["T_VARIABLE","$name",323],")",";",["T_WHITESPACE","\n        ",323],"}",["T_WHITESPACE","\n\n        ",324],["T_RETURN","return",326],["T_WHITESPACE"," ",326],["T_VARIABLE","$rule",326],";",["T_WHITESPACE","\n    ",326],"}",["T_WHITESPACE","\n",327],"}",["T_WHITESPACE","\n",328]]