[["T_OPEN_TAG","<?php\n",1],["T_DOC_COMMENT","\/**\n * CakePHP(tm) : Rapid Development Framework (http:\/\/cakephp.org)\n * Copyright (c) Cake Software Foundation, Inc. (http:\/\/cakefoundation.org)\n *\n * Licensed under The MIT License\n * For full copyright and license information, please see the LICENSE.txt\n * Redistributions of files must retain the above copyright notice.\n *\n * @copyright     Copyright (c) Cake Software Foundation, Inc. (http:\/\/cakefoundation.org)\n * @link          http:\/\/cakephp.org CakePHP(tm) Project\n * @since         2.2.0\n * @license       http:\/\/www.opensource.org\/licenses\/mit-license.php MIT License\n *\/",2],["T_WHITESPACE","\n",14],["T_NAMESPACE","namespace",15],["T_WHITESPACE"," ",15],["T_STRING","Cake",15],["T_NS_SEPARATOR","\\",15],["T_STRING","Validation",15],";",["T_WHITESPACE","\n\n",15],["T_USE","use",17],["T_WHITESPACE"," ",17],["T_STRING","ArrayAccess",17],";",["T_WHITESPACE","\n",17],["T_USE","use",18],["T_WHITESPACE"," ",18],["T_STRING","ArrayIterator",18],";",["T_WHITESPACE","\n",18],["T_USE","use",19],["T_WHITESPACE"," ",19],["T_STRING","Countable",19],";",["T_WHITESPACE","\n",19],["T_USE","use",20],["T_WHITESPACE"," ",20],["T_STRING","InvalidArgumentException",20],";",["T_WHITESPACE","\n",20],["T_USE","use",21],["T_WHITESPACE"," ",21],["T_STRING","IteratorAggregate",21],";",["T_WHITESPACE","\n\n",21],["T_DOC_COMMENT","\/**\n * Validator object encapsulates all methods related to data validations for a model\n * It also provides an API to dynamically change validation rules for each model field.\n *\n * Implements ArrayAccess to easily modify rules in the set\n *\n * @link http:\/\/book.cakephp.org\/3.0\/en\/core-libraries\/validation.html\n *\/",23],["T_WHITESPACE","\n",30],["T_CLASS","class",31],["T_WHITESPACE"," ",31],["T_STRING","Validator",31],["T_WHITESPACE"," ",31],["T_IMPLEMENTS","implements",31],["T_WHITESPACE"," ",31],["T_STRING","ArrayAccess",31],",",["T_WHITESPACE"," ",31],["T_STRING","IteratorAggregate",31],",",["T_WHITESPACE"," ",31],["T_STRING","Countable",31],["T_WHITESPACE","\n",31],"{",["T_WHITESPACE","\n    ",32],["T_DOC_COMMENT","\/**\n     * Used to flag nested rules created with addNested() and addNestedMany()\n     *\n     * @var string\n     *\/",33],["T_WHITESPACE","\n    ",37],["T_CONST","const",38],["T_WHITESPACE"," ",38],["T_STRING","NESTED",38],["T_WHITESPACE"," ",38],"=",["T_WHITESPACE"," ",38],["T_CONSTANT_ENCAPSED_STRING","'_nested'",38],";",["T_WHITESPACE","\n\n    ",38],["T_DOC_COMMENT","\/**\n     * Holds the ValidationSet objects array\n     *\n     * @var array\n     *\/",40],["T_WHITESPACE","\n    ",44],["T_PROTECTED","protected",45],["T_WHITESPACE"," ",45],["T_VARIABLE","$_fields",45],["T_WHITESPACE"," ",45],"=",["T_WHITESPACE"," ",45],"[","]",";",["T_WHITESPACE","\n\n    ",45],["T_DOC_COMMENT","\/**\n     * An associative array of objects or classes containing methods\n     * used for validation\n     *\n     * @var array\n     *\/",47],["T_WHITESPACE","\n    ",52],["T_PROTECTED","protected",53],["T_WHITESPACE"," ",53],["T_VARIABLE","$_providers",53],["T_WHITESPACE"," ",53],"=",["T_WHITESPACE"," ",53],"[","]",";",["T_WHITESPACE","\n\n    ",53],["T_DOC_COMMENT","\/**\n     * Contains the validation messages associated with checking the presence\n     * for each corresponding field.\n     *\n     * @var array\n     *\/",55],["T_WHITESPACE","\n    ",60],["T_PROTECTED","protected",61],["T_WHITESPACE"," ",61],["T_VARIABLE","$_presenceMessages",61],["T_WHITESPACE"," ",61],"=",["T_WHITESPACE"," ",61],"[","]",";",["T_WHITESPACE","\n\n    ",61],["T_DOC_COMMENT","\/**\n     * Whether or not to use I18n functions for translating default error messages\n     *\n     * @var bool\n     *\/",63],["T_WHITESPACE","\n    ",67],["T_PROTECTED","protected",68],["T_WHITESPACE"," ",68],["T_VARIABLE","$_useI18n",68],["T_WHITESPACE"," ",68],"=",["T_WHITESPACE"," ",68],["T_STRING","false",68],";",["T_WHITESPACE","\n\n    ",68],["T_DOC_COMMENT","\/**\n     * Contains the validation messages associated with checking the emptiness\n     * for each corresponding field.\n     *\n     * @var array\n     *\/",70],["T_WHITESPACE","\n    ",75],["T_PROTECTED","protected",76],["T_WHITESPACE"," ",76],["T_VARIABLE","$_allowEmptyMessages",76],["T_WHITESPACE"," ",76],"=",["T_WHITESPACE"," ",76],"[","]",";",["T_WHITESPACE","\n\n    ",76],["T_DOC_COMMENT","\/**\n     * Constructor\n     *\n     *\/",78],["T_WHITESPACE","\n    ",81],["T_PUBLIC","public",82],["T_WHITESPACE"," ",82],["T_FUNCTION","function",82],["T_WHITESPACE"," ",82],["T_STRING","__construct",82],"(",")",["T_WHITESPACE","\n    ",82],"{",["T_WHITESPACE","\n        ",83],["T_VARIABLE","$this",84],["T_OBJECT_OPERATOR","->",84],["T_STRING","_useI18n",84],["T_WHITESPACE"," ",84],"=",["T_WHITESPACE"," ",84],["T_STRING","function_exists",84],"(",["T_CONSTANT_ENCAPSED_STRING","'__d'",84],")",";",["T_WHITESPACE","\n    ",84],"}",["T_WHITESPACE","\n\n    ",85],["T_DOC_COMMENT","\/**\n     * Returns an array of fields that have failed validation. On the current model. This method will\n     * actually run validation rules over data, not just return the messages.\n     *\n     * @param array $data The data to be checked for errors\n     * @param bool $newRecord whether the data to be validated is new or to be updated.\n     * @return array Array of invalid fields\n     *\/",87],["T_WHITESPACE","\n    ",94],["T_PUBLIC","public",95],["T_WHITESPACE"," ",95],["T_FUNCTION","function",95],["T_WHITESPACE"," ",95],["T_STRING","errors",95],"(",["T_ARRAY","array",95],["T_WHITESPACE"," ",95],["T_VARIABLE","$data",95],",",["T_WHITESPACE"," ",95],["T_VARIABLE","$newRecord",95],["T_WHITESPACE"," ",95],"=",["T_WHITESPACE"," ",95],["T_STRING","true",95],")",["T_WHITESPACE","\n    ",95],"{",["T_WHITESPACE","\n        ",96],["T_VARIABLE","$errors",97],["T_WHITESPACE"," ",97],"=",["T_WHITESPACE"," ",97],"[","]",";",["T_WHITESPACE","\n\n        ",97],["T_VARIABLE","$requiredMessage",99],["T_WHITESPACE"," ",99],"=",["T_WHITESPACE"," ",99],["T_CONSTANT_ENCAPSED_STRING","'This field is required'",99],";",["T_WHITESPACE","\n        ",99],["T_VARIABLE","$emptyMessage",100],["T_WHITESPACE"," ",100],"=",["T_WHITESPACE"," ",100],["T_CONSTANT_ENCAPSED_STRING","'This field cannot be left empty'",100],";",["T_WHITESPACE","\n\n        ",100],["T_IF","if",102],["T_WHITESPACE"," ",102],"(",["T_VARIABLE","$this",102],["T_OBJECT_OPERATOR","->",102],["T_STRING","_useI18n",102],")",["T_WHITESPACE"," ",102],"{",["T_WHITESPACE","\n            ",102],["T_VARIABLE","$requiredMessage",103],["T_WHITESPACE"," ",103],"=",["T_WHITESPACE"," ",103],["T_STRING","__d",103],"(",["T_CONSTANT_ENCAPSED_STRING","'cake'",103],",",["T_WHITESPACE"," ",103],["T_CONSTANT_ENCAPSED_STRING","'This field is required'",103],")",";",["T_WHITESPACE","\n            ",103],["T_VARIABLE","$emptyMessage",104],["T_WHITESPACE"," ",104],"=",["T_WHITESPACE"," ",104],["T_STRING","__d",104],"(",["T_CONSTANT_ENCAPSED_STRING","'cake'",104],",",["T_WHITESPACE"," ",104],["T_CONSTANT_ENCAPSED_STRING","'This field cannot be left empty'",104],")",";",["T_WHITESPACE","\n        ",104],"}",["T_WHITESPACE","\n\n        ",105],["T_FOREACH","foreach",107],["T_WHITESPACE"," ",107],"(",["T_VARIABLE","$this",107],["T_OBJECT_OPERATOR","->",107],["T_STRING","_fields",107],["T_WHITESPACE"," ",107],["T_AS","as",107],["T_WHITESPACE"," ",107],["T_VARIABLE","$name",107],["T_WHITESPACE"," ",107],["T_DOUBLE_ARROW","=>",107],["T_WHITESPACE"," ",107],["T_VARIABLE","$field",107],")",["T_WHITESPACE"," ",107],"{",["T_WHITESPACE","\n            ",107],["T_VARIABLE","$keyPresent",108],["T_WHITESPACE"," ",108],"=",["T_WHITESPACE"," ",108],["T_STRING","array_key_exists",108],"(",["T_VARIABLE","$name",108],",",["T_WHITESPACE"," ",108],["T_VARIABLE","$data",108],")",";",["T_WHITESPACE","\n\n            ",108],["T_VARIABLE","$providers",110],["T_WHITESPACE"," ",110],"=",["T_WHITESPACE"," ",110],["T_VARIABLE","$this",110],["T_OBJECT_OPERATOR","->",110],["T_STRING","_providers",110],";",["T_WHITESPACE","\n            ",110],["T_VARIABLE","$context",111],["T_WHITESPACE"," ",111],"=",["T_WHITESPACE"," ",111],["T_STRING","compact",111],"(",["T_CONSTANT_ENCAPSED_STRING","'data'",111],",",["T_WHITESPACE"," ",111],["T_CONSTANT_ENCAPSED_STRING","'newRecord'",111],",",["T_WHITESPACE"," ",111],["T_CONSTANT_ENCAPSED_STRING","'field'",111],",",["T_WHITESPACE"," ",111],["T_CONSTANT_ENCAPSED_STRING","'providers'",111],")",";",["T_WHITESPACE","\n\n            ",111],["T_IF","if",113],["T_WHITESPACE"," ",113],"(","!",["T_VARIABLE","$keyPresent",113],["T_WHITESPACE"," ",113],["T_BOOLEAN_AND","&&",113],["T_WHITESPACE"," ",113],"!",["T_VARIABLE","$this",113],["T_OBJECT_OPERATOR","->",113],["T_STRING","_checkPresence",113],"(",["T_VARIABLE","$field",113],",",["T_WHITESPACE"," ",113],["T_VARIABLE","$context",113],")",")",["T_WHITESPACE"," ",113],"{",["T_WHITESPACE","\n                ",113],["T_VARIABLE","$errors",114],"[",["T_VARIABLE","$name",114],"]","[",["T_CONSTANT_ENCAPSED_STRING","'_required'",114],"]",["T_WHITESPACE"," ",114],"=",["T_WHITESPACE"," ",114],["T_ISSET","isset",114],"(",["T_VARIABLE","$this",114],["T_OBJECT_OPERATOR","->",114],["T_STRING","_presenceMessages",114],"[",["T_VARIABLE","$name",114],"]",")",["T_WHITESPACE","\n                    ",114],"?",["T_WHITESPACE"," ",115],["T_VARIABLE","$this",115],["T_OBJECT_OPERATOR","->",115],["T_STRING","_presenceMessages",115],"[",["T_VARIABLE","$name",115],"]",["T_WHITESPACE","\n                    ",115],":",["T_WHITESPACE"," ",116],["T_VARIABLE","$requiredMessage",116],";",["T_WHITESPACE","\n                ",116],["T_CONTINUE","continue",117],";",["T_WHITESPACE","\n            ",117],"}",["T_WHITESPACE","\n            ",118],["T_IF","if",119],["T_WHITESPACE"," ",119],"(","!",["T_VARIABLE","$keyPresent",119],")",["T_WHITESPACE"," ",119],"{",["T_WHITESPACE","\n                ",119],["T_CONTINUE","continue",120],";",["T_WHITESPACE","\n            ",120],"}",["T_WHITESPACE","\n\n            ",121],["T_VARIABLE","$canBeEmpty",123],["T_WHITESPACE"," ",123],"=",["T_WHITESPACE"," ",123],["T_VARIABLE","$this",123],["T_OBJECT_OPERATOR","->",123],["T_STRING","_canBeEmpty",123],"(",["T_VARIABLE","$field",123],",",["T_WHITESPACE"," ",123],["T_VARIABLE","$context",123],")",";",["T_WHITESPACE","\n            ",123],["T_VARIABLE","$isEmpty",124],["T_WHITESPACE"," ",124],"=",["T_WHITESPACE"," ",124],["T_VARIABLE","$this",124],["T_OBJECT_OPERATOR","->",124],["T_STRING","_fieldIsEmpty",124],"(",["T_VARIABLE","$data",124],"[",["T_VARIABLE","$name",124],"]",")",";",["T_WHITESPACE","\n\n            ",124],["T_IF","if",126],["T_WHITESPACE"," ",126],"(","!",["T_VARIABLE","$canBeEmpty",126],["T_WHITESPACE"," ",126],["T_BOOLEAN_AND","&&",126],["T_WHITESPACE"," ",126],["T_VARIABLE","$isEmpty",126],")",["T_WHITESPACE"," ",126],"{",["T_WHITESPACE","\n                ",126],["T_VARIABLE","$errors",127],"[",["T_VARIABLE","$name",127],"]","[",["T_CONSTANT_ENCAPSED_STRING","'_empty'",127],"]",["T_WHITESPACE"," ",127],"=",["T_WHITESPACE"," ",127],["T_ISSET","isset",127],"(",["T_VARIABLE","$this",127],["T_OBJECT_OPERATOR","->",127],["T_STRING","_allowEmptyMessages",127],"[",["T_VARIABLE","$name",127],"]",")",["T_WHITESPACE","\n                    ",127],"?",["T_WHITESPACE"," ",128],["T_VARIABLE","$this",128],["T_OBJECT_OPERATOR","->",128],["T_STRING","_allowEmptyMessages",128],"[",["T_VARIABLE","$name",128],"]",["T_WHITESPACE","\n                    ",128],":",["T_WHITESPACE"," ",129],["T_VARIABLE","$emptyMessage",129],";",["T_WHITESPACE","\n                ",129],["T_CONTINUE","continue",130],";",["T_WHITESPACE","\n            ",130],"}",["T_WHITESPACE","\n\n            ",131],["T_IF","if",133],["T_WHITESPACE"," ",133],"(",["T_VARIABLE","$isEmpty",133],")",["T_WHITESPACE"," ",133],"{",["T_WHITESPACE","\n                ",133],["T_CONTINUE","continue",134],";",["T_WHITESPACE","\n            ",134],"}",["T_WHITESPACE","\n\n            ",135],["T_VARIABLE","$result",137],["T_WHITESPACE"," ",137],"=",["T_WHITESPACE"," ",137],["T_VARIABLE","$this",137],["T_OBJECT_OPERATOR","->",137],["T_STRING","_processRules",137],"(",["T_VARIABLE","$name",137],",",["T_WHITESPACE"," ",137],["T_VARIABLE","$field",137],",",["T_WHITESPACE"," ",137],["T_VARIABLE","$data",137],",",["T_WHITESPACE"," ",137],["T_VARIABLE","$newRecord",137],")",";",["T_WHITESPACE","\n            ",137],["T_IF","if",138],["T_WHITESPACE"," ",138],"(",["T_VARIABLE","$result",138],")",["T_WHITESPACE"," ",138],"{",["T_WHITESPACE","\n                ",138],["T_VARIABLE","$errors",139],"[",["T_VARIABLE","$name",139],"]",["T_WHITESPACE"," ",139],"=",["T_WHITESPACE"," ",139],["T_VARIABLE","$result",139],";",["T_WHITESPACE","\n            ",139],"}",["T_WHITESPACE","\n        ",140],"}",["T_WHITESPACE","\n\n        ",141],["T_RETURN","return",143],["T_WHITESPACE"," ",143],["T_VARIABLE","$errors",143],";",["T_WHITESPACE","\n    ",143],"}",["T_WHITESPACE","\n\n    ",144],["T_DOC_COMMENT","\/**\n     * Returns a ValidationSet object containing all validation rules for a field, if\n     * passed a ValidationSet as second argument, it will replace any other rule set defined\n     * before\n     *\n     * @param string $name [optional] The fieldname to fetch.\n     * @param \\Cake\\Validation\\ValidationSet|null $set The set of rules for field\n     * @return \\Cake\\Validation\\ValidationSet\n     *\/",146],["T_WHITESPACE","\n    ",154],["T_PUBLIC","public",155],["T_WHITESPACE"," ",155],["T_FUNCTION","function",155],["T_WHITESPACE"," ",155],["T_STRING","field",155],"(",["T_VARIABLE","$name",155],",",["T_WHITESPACE"," ",155],["T_STRING","ValidationSet",155],["T_WHITESPACE"," ",155],["T_VARIABLE","$set",155],["T_WHITESPACE"," ",155],"=",["T_WHITESPACE"," ",155],["T_STRING","null",155],")",["T_WHITESPACE","\n    ",155],"{",["T_WHITESPACE","\n        ",156],["T_IF","if",157],["T_WHITESPACE"," ",157],"(",["T_EMPTY","empty",157],"(",["T_VARIABLE","$this",157],["T_OBJECT_OPERATOR","->",157],["T_STRING","_fields",157],"[",["T_VARIABLE","$name",157],"]",")",")",["T_WHITESPACE"," ",157],"{",["T_WHITESPACE","\n            ",157],["T_VARIABLE","$set",158],["T_WHITESPACE"," ",158],"=",["T_WHITESPACE"," ",158],["T_VARIABLE","$set",158],["T_WHITESPACE"," ",158],"?",":",["T_WHITESPACE"," ",158],["T_NEW","new",158],["T_WHITESPACE"," ",158],["T_STRING","ValidationSet",158],"(",")",";",["T_WHITESPACE","\n            ",158],["T_VARIABLE","$this",159],["T_OBJECT_OPERATOR","->",159],["T_STRING","_fields",159],"[",["T_VARIABLE","$name",159],"]",["T_WHITESPACE"," ",159],"=",["T_WHITESPACE"," ",159],["T_VARIABLE","$set",159],";",["T_WHITESPACE","\n        ",159],"}",["T_WHITESPACE","\n\n        ",160],["T_RETURN","return",162],["T_WHITESPACE"," ",162],["T_VARIABLE","$this",162],["T_OBJECT_OPERATOR","->",162],["T_STRING","_fields",162],"[",["T_VARIABLE","$name",162],"]",";",["T_WHITESPACE","\n    ",162],"}",["T_WHITESPACE","\n\n    ",163],["T_DOC_COMMENT","\/**\n     * Check whether or not a validator contains any rules for the given field.\n     *\n     * @param string $name The field name to check.\n     * @return bool\n     *\/",165],["T_WHITESPACE","\n    ",170],["T_PUBLIC","public",171],["T_WHITESPACE"," ",171],["T_FUNCTION","function",171],["T_WHITESPACE"," ",171],["T_STRING","hasField",171],"(",["T_VARIABLE","$name",171],")",["T_WHITESPACE","\n    ",171],"{",["T_WHITESPACE","\n        ",172],["T_RETURN","return",173],["T_WHITESPACE"," ",173],["T_ISSET","isset",173],"(",["T_VARIABLE","$this",173],["T_OBJECT_OPERATOR","->",173],["T_STRING","_fields",173],"[",["T_VARIABLE","$name",173],"]",")",";",["T_WHITESPACE","\n    ",173],"}",["T_WHITESPACE","\n\n    ",174],["T_DOC_COMMENT","\/**\n     * Associates an object to a name so it can be used as a provider. Providers are\n     * objects or class names that can contain methods used during validation of for\n     * deciding whether a validation rule can be applied. All validation methods,\n     * when called will receive the full list of providers stored in this validator.\n     *\n     * If called with no arguments, it will return the provider stored under that name if\n     * it exists, otherwise it returns this instance of chaining.\n     *\n     * @param string $name The name under which the provider should be set.\n     * @param null|object|string $object Provider object or class name.\n     * @return $this|object|string|null\n     *\/",176],["T_WHITESPACE","\n    ",188],["T_PUBLIC","public",189],["T_WHITESPACE"," ",189],["T_FUNCTION","function",189],["T_WHITESPACE"," ",189],["T_STRING","provider",189],"(",["T_VARIABLE","$name",189],",",["T_WHITESPACE"," ",189],["T_VARIABLE","$object",189],["T_WHITESPACE"," ",189],"=",["T_WHITESPACE"," ",189],["T_STRING","null",189],")",["T_WHITESPACE","\n    ",189],"{",["T_WHITESPACE","\n        ",190],["T_IF","if",191],["T_WHITESPACE"," ",191],"(",["T_VARIABLE","$object",191],["T_WHITESPACE"," ",191],["T_IS_IDENTICAL","===",191],["T_WHITESPACE"," ",191],["T_STRING","null",191],")",["T_WHITESPACE"," ",191],"{",["T_WHITESPACE","\n            ",191],["T_IF","if",192],["T_WHITESPACE"," ",192],"(",["T_ISSET","isset",192],"(",["T_VARIABLE","$this",192],["T_OBJECT_OPERATOR","->",192],["T_STRING","_providers",192],"[",["T_VARIABLE","$name",192],"]",")",")",["T_WHITESPACE"," ",192],"{",["T_WHITESPACE","\n                ",192],["T_RETURN","return",193],["T_WHITESPACE"," ",193],["T_VARIABLE","$this",193],["T_OBJECT_OPERATOR","->",193],["T_STRING","_providers",193],"[",["T_VARIABLE","$name",193],"]",";",["T_WHITESPACE","\n            ",193],"}",["T_WHITESPACE","\n            ",194],["T_IF","if",195],["T_WHITESPACE"," ",195],"(",["T_VARIABLE","$name",195],["T_WHITESPACE"," ",195],["T_IS_IDENTICAL","===",195],["T_WHITESPACE"," ",195],["T_CONSTANT_ENCAPSED_STRING","'default'",195],")",["T_WHITESPACE"," ",195],"{",["T_WHITESPACE","\n                ",195],["T_RETURN","return",196],["T_WHITESPACE"," ",196],["T_VARIABLE","$this",196],["T_OBJECT_OPERATOR","->",196],["T_STRING","_providers",196],"[",["T_VARIABLE","$name",196],"]",["T_WHITESPACE"," ",196],"=",["T_WHITESPACE"," ",196],["T_NEW","new",196],["T_WHITESPACE"," ",196],["T_STRING","RulesProvider",196],"(",")",";",["T_WHITESPACE","\n            ",196],"}",["T_WHITESPACE","\n\n            ",197],["T_RETURN","return",199],["T_WHITESPACE"," ",199],["T_STRING","null",199],";",["T_WHITESPACE","\n        ",199],"}",["T_WHITESPACE","\n        ",200],["T_VARIABLE","$this",201],["T_OBJECT_OPERATOR","->",201],["T_STRING","_providers",201],"[",["T_VARIABLE","$name",201],"]",["T_WHITESPACE"," ",201],"=",["T_WHITESPACE"," ",201],["T_VARIABLE","$object",201],";",["T_WHITESPACE","\n\n        ",201],["T_RETURN","return",203],["T_WHITESPACE"," ",203],["T_VARIABLE","$this",203],";",["T_WHITESPACE","\n    ",203],"}",["T_WHITESPACE","\n\n    ",204],["T_DOC_COMMENT","\/**\n     * Get the list of providers in this validator.\n     *\n     * @return array\n     *\/",206],["T_WHITESPACE","\n    ",210],["T_PUBLIC","public",211],["T_WHITESPACE"," ",211],["T_FUNCTION","function",211],["T_WHITESPACE"," ",211],["T_STRING","providers",211],"(",")",["T_WHITESPACE","\n    ",211],"{",["T_WHITESPACE","\n        ",212],["T_RETURN","return",213],["T_WHITESPACE"," ",213],["T_STRING","array_keys",213],"(",["T_VARIABLE","$this",213],["T_OBJECT_OPERATOR","->",213],["T_STRING","_providers",213],")",";",["T_WHITESPACE","\n    ",213],"}",["T_WHITESPACE","\n\n    ",214],["T_DOC_COMMENT","\/**\n     * Returns whether a rule set is defined for a field or not\n     *\n     * @param string $field name of the field to check\n     * @return bool\n     *\/",216],["T_WHITESPACE","\n    ",221],["T_PUBLIC","public",222],["T_WHITESPACE"," ",222],["T_FUNCTION","function",222],["T_WHITESPACE"," ",222],["T_STRING","offsetExists",222],"(",["T_VARIABLE","$field",222],")",["T_WHITESPACE","\n    ",222],"{",["T_WHITESPACE","\n        ",223],["T_RETURN","return",224],["T_WHITESPACE"," ",224],["T_ISSET","isset",224],"(",["T_VARIABLE","$this",224],["T_OBJECT_OPERATOR","->",224],["T_STRING","_fields",224],"[",["T_VARIABLE","$field",224],"]",")",";",["T_WHITESPACE","\n    ",224],"}",["T_WHITESPACE","\n\n    ",225],["T_DOC_COMMENT","\/**\n     * Returns the rule set for a field\n     *\n     * @param string $field name of the field to check\n     * @return \\Cake\\Validation\\ValidationSet\n     *\/",227],["T_WHITESPACE","\n    ",232],["T_PUBLIC","public",233],["T_WHITESPACE"," ",233],["T_FUNCTION","function",233],["T_WHITESPACE"," ",233],["T_STRING","offsetGet",233],"(",["T_VARIABLE","$field",233],")",["T_WHITESPACE","\n    ",233],"{",["T_WHITESPACE","\n        ",234],["T_RETURN","return",235],["T_WHITESPACE"," ",235],["T_VARIABLE","$this",235],["T_OBJECT_OPERATOR","->",235],["T_STRING","field",235],"(",["T_VARIABLE","$field",235],")",";",["T_WHITESPACE","\n    ",235],"}",["T_WHITESPACE","\n\n    ",236],["T_DOC_COMMENT","\/**\n     * Sets the rule set for a field\n     *\n     * @param string $field name of the field to set\n     * @param array|\\Cake\\Validation\\ValidationSet $rules set of rules to apply to field\n     * @return void\n     *\/",238],["T_WHITESPACE","\n    ",244],["T_PUBLIC","public",245],["T_WHITESPACE"," ",245],["T_FUNCTION","function",245],["T_WHITESPACE"," ",245],["T_STRING","offsetSet",245],"(",["T_VARIABLE","$field",245],",",["T_WHITESPACE"," ",245],["T_VARIABLE","$rules",245],")",["T_WHITESPACE","\n    ",245],"{",["T_WHITESPACE","\n        ",246],["T_IF","if",247],["T_WHITESPACE"," ",247],"(","!",["T_VARIABLE","$rules",247],["T_WHITESPACE"," ",247],["T_INSTANCEOF","instanceof",247],["T_WHITESPACE"," ",247],["T_STRING","ValidationSet",247],")",["T_WHITESPACE"," ",247],"{",["T_WHITESPACE","\n            ",247],["T_VARIABLE","$set",248],["T_WHITESPACE"," ",248],"=",["T_WHITESPACE"," ",248],["T_NEW","new",248],["T_WHITESPACE"," ",248],["T_STRING","ValidationSet",248],"(",")",";",["T_WHITESPACE","\n            ",248],["T_FOREACH","foreach",249],["T_WHITESPACE"," ",249],"(",["T_ARRAY_CAST","(array)",249],["T_VARIABLE","$rules",249],["T_WHITESPACE"," ",249],["T_AS","as",249],["T_WHITESPACE"," ",249],["T_VARIABLE","$name",249],["T_WHITESPACE"," ",249],["T_DOUBLE_ARROW","=>",249],["T_WHITESPACE"," ",249],["T_VARIABLE","$rule",249],")",["T_WHITESPACE"," ",249],"{",["T_WHITESPACE","\n                ",249],["T_VARIABLE","$set",250],["T_OBJECT_OPERATOR","->",250],["T_STRING","add",250],"(",["T_VARIABLE","$name",250],",",["T_WHITESPACE"," ",250],["T_VARIABLE","$rule",250],")",";",["T_WHITESPACE","\n            ",250],"}",["T_WHITESPACE","\n        ",251],"}",["T_WHITESPACE","\n        ",252],["T_VARIABLE","$this",253],["T_OBJECT_OPERATOR","->",253],["T_STRING","_fields",253],"[",["T_VARIABLE","$field",253],"]",["T_WHITESPACE"," ",253],"=",["T_WHITESPACE"," ",253],["T_VARIABLE","$rules",253],";",["T_WHITESPACE","\n    ",253],"}",["T_WHITESPACE","\n\n    ",254],["T_DOC_COMMENT","\/**\n     * Unsets the rule set for a field\n     *\n     * @param string $field name of the field to unset\n     * @return void\n     *\/",256],["T_WHITESPACE","\n    ",261],["T_PUBLIC","public",262],["T_WHITESPACE"," ",262],["T_FUNCTION","function",262],["T_WHITESPACE"," ",262],["T_STRING","offsetUnset",262],"(",["T_VARIABLE","$field",262],")",["T_WHITESPACE","\n    ",262],"{",["T_WHITESPACE","\n        ",263],["T_UNSET","unset",264],"(",["T_VARIABLE","$this",264],["T_OBJECT_OPERATOR","->",264],["T_STRING","_fields",264],"[",["T_VARIABLE","$field",264],"]",")",";",["T_WHITESPACE","\n    ",264],"}",["T_WHITESPACE","\n\n    ",265],["T_DOC_COMMENT","\/**\n     * Returns an iterator for each of the fields to be validated\n     *\n     * @return \\ArrayIterator\n     *\/",267],["T_WHITESPACE","\n    ",271],["T_PUBLIC","public",272],["T_WHITESPACE"," ",272],["T_FUNCTION","function",272],["T_WHITESPACE"," ",272],["T_STRING","getIterator",272],"(",")",["T_WHITESPACE","\n    ",272],"{",["T_WHITESPACE","\n        ",273],["T_RETURN","return",274],["T_WHITESPACE"," ",274],["T_NEW","new",274],["T_WHITESPACE"," ",274],["T_STRING","ArrayIterator",274],"(",["T_VARIABLE","$this",274],["T_OBJECT_OPERATOR","->",274],["T_STRING","_fields",274],")",";",["T_WHITESPACE","\n    ",274],"}",["T_WHITESPACE","\n\n    ",275],["T_DOC_COMMENT","\/**\n     * Returns the number of fields having validation rules\n     *\n     * @return int\n     *\/",277],["T_WHITESPACE","\n    ",281],["T_PUBLIC","public",282],["T_WHITESPACE"," ",282],["T_FUNCTION","function",282],["T_WHITESPACE"," ",282],["T_STRING","count",282],"(",")",["T_WHITESPACE","\n    ",282],"{",["T_WHITESPACE","\n        ",283],["T_RETURN","return",284],["T_WHITESPACE"," ",284],["T_STRING","count",284],"(",["T_VARIABLE","$this",284],["T_OBJECT_OPERATOR","->",284],["T_STRING","_fields",284],")",";",["T_WHITESPACE","\n    ",284],"}",["T_WHITESPACE","\n\n    ",285],["T_DOC_COMMENT","\/**\n     * Adds a new rule to a field's rule set. If second argument is an array\n     * then rules list for the field will be replaced with second argument and\n     * third argument will be ignored.\n     *\n     * ### Example:\n     *\n     * ```\n     *      $validator\n     *          ->add('title', 'required', ['rule' => 'notBlank'])\n     *          ->add('user_id', 'valid', ['rule' => 'numeric', 'message' => 'Invalid User'])\n     *\n     *      $validator->add('password', [\n     *          'size' => ['rule' => ['lengthBetween', 8, 20]],\n     *          'hasSpecialCharacter' => ['rule' => 'validateSpecialchar', 'message' => 'not valid']\n     *      ]);\n     * ```\n     *\n     * @param string $field The name of the field from which the rule will be added\n     * @param array|string $name The alias for a single rule or multiple rules array\n     * @param array|\\Cake\\Validation\\ValidationRule $rule the rule to add\n     * @return $this\n     *\/",287],["T_WHITESPACE","\n    ",309],["T_PUBLIC","public",310],["T_WHITESPACE"," ",310],["T_FUNCTION","function",310],["T_WHITESPACE"," ",310],["T_STRING","add",310],"(",["T_VARIABLE","$field",310],",",["T_WHITESPACE"," ",310],["T_VARIABLE","$name",310],",",["T_WHITESPACE"," ",310],["T_VARIABLE","$rule",310],["T_WHITESPACE"," ",310],"=",["T_WHITESPACE"," ",310],"[","]",")",["T_WHITESPACE","\n    ",310],"{",["T_WHITESPACE","\n        ",311],["T_VARIABLE","$field",312],["T_WHITESPACE"," ",312],"=",["T_WHITESPACE"," ",312],["T_VARIABLE","$this",312],["T_OBJECT_OPERATOR","->",312],["T_STRING","field",312],"(",["T_VARIABLE","$field",312],")",";",["T_WHITESPACE","\n\n        ",312],["T_IF","if",314],["T_WHITESPACE"," ",314],"(","!",["T_STRING","is_array",314],"(",["T_VARIABLE","$name",314],")",")",["T_WHITESPACE"," ",314],"{",["T_WHITESPACE","\n            ",314],["T_VARIABLE","$rules",315],["T_WHITESPACE"," ",315],"=",["T_WHITESPACE"," ",315],"[",["T_VARIABLE","$name",315],["T_WHITESPACE"," ",315],["T_DOUBLE_ARROW","=>",315],["T_WHITESPACE"," ",315],["T_VARIABLE","$rule",315],"]",";",["T_WHITESPACE","\n        ",315],"}",["T_WHITESPACE"," ",316],["T_ELSE","else",316],["T_WHITESPACE"," ",316],"{",["T_WHITESPACE","\n            ",316],["T_VARIABLE","$rules",317],["T_WHITESPACE"," ",317],"=",["T_WHITESPACE"," ",317],["T_VARIABLE","$name",317],";",["T_WHITESPACE","\n        ",317],"}",["T_WHITESPACE","\n\n        ",318],["T_FOREACH","foreach",320],["T_WHITESPACE"," ",320],"(",["T_VARIABLE","$rules",320],["T_WHITESPACE"," ",320],["T_AS","as",320],["T_WHITESPACE"," ",320],["T_VARIABLE","$name",320],["T_WHITESPACE"," ",320],["T_DOUBLE_ARROW","=>",320],["T_WHITESPACE"," ",320],["T_VARIABLE","$rule",320],")",["T_WHITESPACE"," ",320],"{",["T_WHITESPACE","\n            ",320],["T_VARIABLE","$field",321],["T_OBJECT_OPERATOR","->",321],["T_STRING","add",321],"(",["T_VARIABLE","$name",321],",",["T_WHITESPACE"," ",321],["T_VARIABLE","$rule",321],")",";",["T_WHITESPACE","\n        ",321],"}",["T_WHITESPACE","\n\n        ",322],["T_RETURN","return",324],["T_WHITESPACE"," ",324],["T_VARIABLE","$this",324],";",["T_WHITESPACE","\n    ",324],"}",["T_WHITESPACE","\n\n    ",325],["T_DOC_COMMENT","\/**\n     * Adds a nested validator.\n     *\n     * Nesting validators allows you to define validators for array\n     * types. For example, nested validators are ideal when you want to validate a\n     * sub-document, or complex array type.\n     *\n     * This method assumes that the sub-document has a 1:1 relationship with the parent.\n     *\n     * The providers of the parent validator will be synced into the nested validator, when\n     * errors are checked. This ensures that any validation rule providers connected\n     * in the parent will have the same values in the nested validator when rules are evaluated.\n     *\n     * @param string $field The root field for the nested validator.\n     * @param \\Cake\\Validation\\Validator $validator The nested validator.\n     * @return $this\n     *\/",327],["T_WHITESPACE","\n    ",343],["T_PUBLIC","public",344],["T_WHITESPACE"," ",344],["T_FUNCTION","function",344],["T_WHITESPACE"," ",344],["T_STRING","addNested",344],"(",["T_VARIABLE","$field",344],",",["T_WHITESPACE"," ",344],["T_STRING","Validator",344],["T_WHITESPACE"," ",344],["T_VARIABLE","$validator",344],")",["T_WHITESPACE","\n    ",344],"{",["T_WHITESPACE","\n        ",345],["T_VARIABLE","$field",346],["T_WHITESPACE"," ",346],"=",["T_WHITESPACE"," ",346],["T_VARIABLE","$this",346],["T_OBJECT_OPERATOR","->",346],["T_STRING","field",346],"(",["T_VARIABLE","$field",346],")",";",["T_WHITESPACE","\n        ",346],["T_VARIABLE","$field",347],["T_OBJECT_OPERATOR","->",347],["T_STRING","add",347],"(",["T_STATIC","static",347],["T_DOUBLE_COLON","::",347],["T_STRING","NESTED",347],",",["T_WHITESPACE"," ",347],"[",["T_CONSTANT_ENCAPSED_STRING","'rule'",347],["T_WHITESPACE"," ",347],["T_DOUBLE_ARROW","=>",347],["T_WHITESPACE"," ",347],["T_FUNCTION","function",347],["T_WHITESPACE"," ",347],"(",["T_VARIABLE","$value",347],",",["T_WHITESPACE"," ",347],["T_VARIABLE","$context",347],")",["T_WHITESPACE"," ",347],["T_USE","use",347],["T_WHITESPACE"," ",347],"(",["T_VARIABLE","$validator",347],")",["T_WHITESPACE"," ",347],"{",["T_WHITESPACE","\n            ",347],["T_IF","if",348],["T_WHITESPACE"," ",348],"(","!",["T_STRING","is_array",348],"(",["T_VARIABLE","$value",348],")",")",["T_WHITESPACE"," ",348],"{",["T_WHITESPACE","\n                ",348],["T_RETURN","return",349],["T_WHITESPACE"," ",349],["T_STRING","false",349],";",["T_WHITESPACE","\n            ",349],"}",["T_WHITESPACE","\n            ",350],["T_FOREACH","foreach",351],["T_WHITESPACE"," ",351],"(",["T_VARIABLE","$this",351],["T_OBJECT_OPERATOR","->",351],["T_STRING","providers",351],"(",")",["T_WHITESPACE"," ",351],["T_AS","as",351],["T_WHITESPACE"," ",351],["T_VARIABLE","$provider",351],")",["T_WHITESPACE"," ",351],"{",["T_WHITESPACE","\n                ",351],["T_VARIABLE","$validator",352],["T_OBJECT_OPERATOR","->",352],["T_STRING","provider",352],"(",["T_VARIABLE","$provider",352],",",["T_WHITESPACE"," ",352],["T_VARIABLE","$this",352],["T_OBJECT_OPERATOR","->",352],["T_STRING","provider",352],"(",["T_VARIABLE","$provider",352],")",")",";",["T_WHITESPACE","\n            ",352],"}",["T_WHITESPACE","\n            ",353],["T_VARIABLE","$errors",354],["T_WHITESPACE"," ",354],"=",["T_WHITESPACE"," ",354],["T_VARIABLE","$validator",354],["T_OBJECT_OPERATOR","->",354],["T_STRING","errors",354],"(",["T_VARIABLE","$value",354],",",["T_WHITESPACE"," ",354],["T_VARIABLE","$context",354],"[",["T_CONSTANT_ENCAPSED_STRING","'newRecord'",354],"]",")",";",["T_WHITESPACE","\n\n            ",354],["T_RETURN","return",356],["T_WHITESPACE"," ",356],["T_EMPTY","empty",356],"(",["T_VARIABLE","$errors",356],")",["T_WHITESPACE"," ",356],"?",["T_WHITESPACE"," ",356],["T_STRING","true",356],["T_WHITESPACE"," ",356],":",["T_WHITESPACE"," ",356],["T_VARIABLE","$errors",356],";",["T_WHITESPACE","\n        ",356],"}","]",")",";",["T_WHITESPACE","\n\n        ",357],["T_RETURN","return",359],["T_WHITESPACE"," ",359],["T_VARIABLE","$this",359],";",["T_WHITESPACE","\n    ",359],"}",["T_WHITESPACE","\n\n    ",360],["T_DOC_COMMENT","\/**\n     * Adds a nested validator.\n     *\n     * Nesting validators allows you to define validators for array\n     * types. For example, nested validators are ideal when you want to validate many\n     * similar sub-documents or complex array types.\n     *\n     * This method assumes that the sub-document has a 1:N relationship with the parent.\n     *\n     * The providers of the parent validator will be synced into the nested validator, when\n     * errors are checked. This ensures that any validation rule providers connected\n     * in the parent will have the same values in the nested validator when rules are evaluated.\n     *\n     * @param string $field The root field for the nested validator.\n     * @param \\Cake\\Validation\\Validator $validator The nested validator.\n     * @return $this\n     *\/",362],["T_WHITESPACE","\n    ",378],["T_PUBLIC","public",379],["T_WHITESPACE"," ",379],["T_FUNCTION","function",379],["T_WHITESPACE"," ",379],["T_STRING","addNestedMany",379],"(",["T_VARIABLE","$field",379],",",["T_WHITESPACE"," ",379],["T_STRING","Validator",379],["T_WHITESPACE"," ",379],["T_VARIABLE","$validator",379],")",["T_WHITESPACE","\n    ",379],"{",["T_WHITESPACE","\n        ",380],["T_VARIABLE","$field",381],["T_WHITESPACE"," ",381],"=",["T_WHITESPACE"," ",381],["T_VARIABLE","$this",381],["T_OBJECT_OPERATOR","->",381],["T_STRING","field",381],"(",["T_VARIABLE","$field",381],")",";",["T_WHITESPACE","\n        ",381],["T_VARIABLE","$field",382],["T_OBJECT_OPERATOR","->",382],["T_STRING","add",382],"(",["T_STATIC","static",382],["T_DOUBLE_COLON","::",382],["T_STRING","NESTED",382],",",["T_WHITESPACE"," ",382],"[",["T_CONSTANT_ENCAPSED_STRING","'rule'",382],["T_WHITESPACE"," ",382],["T_DOUBLE_ARROW","=>",382],["T_WHITESPACE"," ",382],["T_FUNCTION","function",382],["T_WHITESPACE"," ",382],"(",["T_VARIABLE","$value",382],",",["T_WHITESPACE"," ",382],["T_VARIABLE","$context",382],")",["T_WHITESPACE"," ",382],["T_USE","use",382],["T_WHITESPACE"," ",382],"(",["T_VARIABLE","$validator",382],")",["T_WHITESPACE"," ",382],"{",["T_WHITESPACE","\n            ",382],["T_IF","if",383],["T_WHITESPACE"," ",383],"(","!",["T_STRING","is_array",383],"(",["T_VARIABLE","$value",383],")",")",["T_WHITESPACE"," ",383],"{",["T_WHITESPACE","\n                ",383],["T_RETURN","return",384],["T_WHITESPACE"," ",384],["T_STRING","false",384],";",["T_WHITESPACE","\n            ",384],"}",["T_WHITESPACE","\n            ",385],["T_FOREACH","foreach",386],["T_WHITESPACE"," ",386],"(",["T_VARIABLE","$this",386],["T_OBJECT_OPERATOR","->",386],["T_STRING","providers",386],"(",")",["T_WHITESPACE"," ",386],["T_AS","as",386],["T_WHITESPACE"," ",386],["T_VARIABLE","$provider",386],")",["T_WHITESPACE"," ",386],"{",["T_WHITESPACE","\n                ",386],["T_VARIABLE","$validator",387],["T_OBJECT_OPERATOR","->",387],["T_STRING","provider",387],"(",["T_VARIABLE","$provider",387],",",["T_WHITESPACE"," ",387],["T_VARIABLE","$this",387],["T_OBJECT_OPERATOR","->",387],["T_STRING","provider",387],"(",["T_VARIABLE","$provider",387],")",")",";",["T_WHITESPACE","\n            ",387],"}",["T_WHITESPACE","\n            ",388],["T_VARIABLE","$errors",389],["T_WHITESPACE"," ",389],"=",["T_WHITESPACE"," ",389],"[","]",";",["T_WHITESPACE","\n            ",389],["T_FOREACH","foreach",390],["T_WHITESPACE"," ",390],"(",["T_VARIABLE","$value",390],["T_WHITESPACE"," ",390],["T_AS","as",390],["T_WHITESPACE"," ",390],["T_VARIABLE","$i",390],["T_WHITESPACE"," ",390],["T_DOUBLE_ARROW","=>",390],["T_WHITESPACE"," ",390],["T_VARIABLE","$row",390],")",["T_WHITESPACE"," ",390],"{",["T_WHITESPACE","\n                ",390],["T_IF","if",391],["T_WHITESPACE"," ",391],"(","!",["T_STRING","is_array",391],"(",["T_VARIABLE","$row",391],")",")",["T_WHITESPACE"," ",391],"{",["T_WHITESPACE","\n                    ",391],["T_RETURN","return",392],["T_WHITESPACE"," ",392],["T_STRING","false",392],";",["T_WHITESPACE","\n                ",392],"}",["T_WHITESPACE","\n                ",393],["T_VARIABLE","$check",394],["T_WHITESPACE"," ",394],"=",["T_WHITESPACE"," ",394],["T_VARIABLE","$validator",394],["T_OBJECT_OPERATOR","->",394],["T_STRING","errors",394],"(",["T_VARIABLE","$row",394],",",["T_WHITESPACE"," ",394],["T_VARIABLE","$context",394],"[",["T_CONSTANT_ENCAPSED_STRING","'newRecord'",394],"]",")",";",["T_WHITESPACE","\n                ",394],["T_IF","if",395],["T_WHITESPACE"," ",395],"(","!",["T_EMPTY","empty",395],"(",["T_VARIABLE","$check",395],")",")",["T_WHITESPACE"," ",395],"{",["T_WHITESPACE","\n                    ",395],["T_VARIABLE","$errors",396],"[",["T_VARIABLE","$i",396],"]",["T_WHITESPACE"," ",396],"=",["T_WHITESPACE"," ",396],["T_VARIABLE","$check",396],";",["T_WHITESPACE","\n                ",396],"}",["T_WHITESPACE","\n            ",397],"}",["T_WHITESPACE","\n\n            ",398],["T_RETURN","return",400],["T_WHITESPACE"," ",400],["T_EMPTY","empty",400],"(",["T_VARIABLE","$errors",400],")",["T_WHITESPACE"," ",400],"?",["T_WHITESPACE"," ",400],["T_STRING","true",400],["T_WHITESPACE"," ",400],":",["T_WHITESPACE"," ",400],["T_VARIABLE","$errors",400],";",["T_WHITESPACE","\n        ",400],"}","]",")",";",["T_WHITESPACE","\n\n        ",401],["T_RETURN","return",403],["T_WHITESPACE"," ",403],["T_VARIABLE","$this",403],";",["T_WHITESPACE","\n    ",403],"}",["T_WHITESPACE","\n\n    ",404],["T_DOC_COMMENT","\/**\n     * Removes a rule from the set by its name\n     *\n     * ### Example:\n     *\n     * ```\n     *      $validator\n     *          ->remove('title', 'required')\n     *          ->remove('user_id')\n     * ```\n     *\n     * @param string $field The name of the field from which the rule will be removed\n     * @param string|null $rule the name of the rule to be removed\n     * @return $this\n     *\/",406],["T_WHITESPACE","\n    ",420],["T_PUBLIC","public",421],["T_WHITESPACE"," ",421],["T_FUNCTION","function",421],["T_WHITESPACE"," ",421],["T_STRING","remove",421],"(",["T_VARIABLE","$field",421],",",["T_WHITESPACE"," ",421],["T_VARIABLE","$rule",421],["T_WHITESPACE"," ",421],"=",["T_WHITESPACE"," ",421],["T_STRING","null",421],")",["T_WHITESPACE","\n    ",421],"{",["T_WHITESPACE","\n        ",422],["T_IF","if",423],["T_WHITESPACE"," ",423],"(",["T_VARIABLE","$rule",423],["T_WHITESPACE"," ",423],["T_IS_IDENTICAL","===",423],["T_WHITESPACE"," ",423],["T_STRING","null",423],")",["T_WHITESPACE"," ",423],"{",["T_WHITESPACE","\n            ",423],["T_UNSET","unset",424],"(",["T_VARIABLE","$this",424],["T_OBJECT_OPERATOR","->",424],["T_STRING","_fields",424],"[",["T_VARIABLE","$field",424],"]",")",";",["T_WHITESPACE","\n        ",424],"}",["T_WHITESPACE"," ",425],["T_ELSE","else",425],["T_WHITESPACE"," ",425],"{",["T_WHITESPACE","\n            ",425],["T_VARIABLE","$this",426],["T_OBJECT_OPERATOR","->",426],["T_STRING","field",426],"(",["T_VARIABLE","$field",426],")",["T_OBJECT_OPERATOR","->",426],["T_STRING","remove",426],"(",["T_VARIABLE","$rule",426],")",";",["T_WHITESPACE","\n        ",426],"}",["T_WHITESPACE","\n\n        ",427],["T_RETURN","return",429],["T_WHITESPACE"," ",429],["T_VARIABLE","$this",429],";",["T_WHITESPACE","\n    ",429],"}",["T_WHITESPACE","\n\n    ",430],["T_DOC_COMMENT","\/**\n     * Sets whether a field is required to be present in data array.\n     * You can also pass array. Using an array will let you provide  the following\n     * keys:\n     *\n     * - `mode` individual mode for field\n     * - `message` individual error message for field\n     *\n     * You can also set mode and message for all passed fields, the individual\n     * setting takes precedence over group settings.\n     *\n     * @param string|array $field the name of the field or list of fields.\n     * @param bool|string|callable $mode Valid values are true, false, 'create', 'update'.\n     *   If a callable is passed then the field will be required only when the callback\n     *   returns true.\n     * @param string|null $message The message to show if the field presence validation fails.\n     * @return $this\n     *\/",432],["T_WHITESPACE","\n    ",449],["T_PUBLIC","public",450],["T_WHITESPACE"," ",450],["T_FUNCTION","function",450],["T_WHITESPACE"," ",450],["T_STRING","requirePresence",450],"(",["T_VARIABLE","$field",450],",",["T_WHITESPACE"," ",450],["T_VARIABLE","$mode",450],["T_WHITESPACE"," ",450],"=",["T_WHITESPACE"," ",450],["T_STRING","true",450],",",["T_WHITESPACE"," ",450],["T_VARIABLE","$message",450],["T_WHITESPACE"," ",450],"=",["T_WHITESPACE"," ",450],["T_STRING","null",450],")",["T_WHITESPACE","\n    ",450],"{",["T_WHITESPACE","\n        ",451],["T_VARIABLE","$defaults",452],["T_WHITESPACE"," ",452],"=",["T_WHITESPACE"," ",452],"[",["T_WHITESPACE","\n            ",452],["T_CONSTANT_ENCAPSED_STRING","'mode'",453],["T_WHITESPACE"," ",453],["T_DOUBLE_ARROW","=>",453],["T_WHITESPACE"," ",453],["T_VARIABLE","$mode",453],",",["T_WHITESPACE","\n            ",453],["T_CONSTANT_ENCAPSED_STRING","'message'",454],["T_WHITESPACE"," ",454],["T_DOUBLE_ARROW","=>",454],["T_WHITESPACE"," ",454],["T_VARIABLE","$message",454],["T_WHITESPACE","\n        ",454],"]",";",["T_WHITESPACE","\n\n        ",455],["T_IF","if",457],["T_WHITESPACE"," ",457],"(","!",["T_STRING","is_array",457],"(",["T_VARIABLE","$field",457],")",")",["T_WHITESPACE"," ",457],"{",["T_WHITESPACE","\n            ",457],["T_VARIABLE","$field",458],["T_WHITESPACE"," ",458],"=",["T_WHITESPACE"," ",458],["T_VARIABLE","$this",458],["T_OBJECT_OPERATOR","->",458],["T_STRING","_convertValidatorToArray",458],"(",["T_VARIABLE","$field",458],",",["T_WHITESPACE"," ",458],["T_VARIABLE","$defaults",458],")",";",["T_WHITESPACE","\n        ",458],"}",["T_WHITESPACE","\n\n        ",459],["T_FOREACH","foreach",461],["T_WHITESPACE"," ",461],"(",["T_VARIABLE","$field",461],["T_WHITESPACE"," ",461],["T_AS","as",461],["T_WHITESPACE"," ",461],["T_VARIABLE","$fieldName",461],["T_WHITESPACE"," ",461],["T_DOUBLE_ARROW","=>",461],["T_WHITESPACE"," ",461],["T_VARIABLE","$setting",461],")",["T_WHITESPACE"," ",461],"{",["T_WHITESPACE","\n            ",461],["T_VARIABLE","$settings",462],["T_WHITESPACE"," ",462],"=",["T_WHITESPACE"," ",462],["T_VARIABLE","$this",462],["T_OBJECT_OPERATOR","->",462],["T_STRING","_convertValidatorToArray",462],"(",["T_VARIABLE","$fieldName",462],",",["T_WHITESPACE"," ",462],["T_VARIABLE","$defaults",462],",",["T_WHITESPACE"," ",462],["T_VARIABLE","$setting",462],")",";",["T_WHITESPACE","\n            ",462],["T_VARIABLE","$fieldName",463],["T_WHITESPACE"," ",463],"=",["T_WHITESPACE"," ",463],["T_STRING","current",463],"(",["T_STRING","array_keys",463],"(",["T_VARIABLE","$settings",463],")",")",";",["T_WHITESPACE","\n\n            ",463],["T_VARIABLE","$this",465],["T_OBJECT_OPERATOR","->",465],["T_STRING","field",465],"(",["T_VARIABLE","$fieldName",465],")",["T_OBJECT_OPERATOR","->",465],["T_STRING","isPresenceRequired",465],"(",["T_VARIABLE","$settings",465],"[",["T_VARIABLE","$fieldName",465],"]","[",["T_CONSTANT_ENCAPSED_STRING","'mode'",465],"]",")",";",["T_WHITESPACE","\n            ",465],["T_IF","if",466],["T_WHITESPACE"," ",466],"(",["T_VARIABLE","$settings",466],"[",["T_VARIABLE","$fieldName",466],"]","[",["T_CONSTANT_ENCAPSED_STRING","'message'",466],"]",")",["T_WHITESPACE"," ",466],"{",["T_WHITESPACE","\n                ",466],["T_VARIABLE","$this",467],["T_OBJECT_OPERATOR","->",467],["T_STRING","_presenceMessages",467],"[",["T_VARIABLE","$fieldName",467],"]",["T_WHITESPACE"," ",467],"=",["T_WHITESPACE"," ",467],["T_VARIABLE","$settings",467],"[",["T_VARIABLE","$fieldName",467],"]","[",["T_CONSTANT_ENCAPSED_STRING","'message'",467],"]",";",["T_WHITESPACE","\n            ",467],"}",["T_WHITESPACE","\n        ",468],"}",["T_WHITESPACE","\n\n        ",469],["T_RETURN","return",471],["T_WHITESPACE"," ",471],["T_VARIABLE","$this",471],";",["T_WHITESPACE","\n    ",471],"}",["T_WHITESPACE","\n\n    ",472],["T_DOC_COMMENT","\/**\n     * Allows a field to be empty. You can also pass array.\n     * Using an array will let you provide the following keys:\n     *\n     * - `when` individual when condition for field\n     * - 'message' individual message for field\n     *\n     * You can also set when and message for all passed fields, the individual setting\n     * takes precedence over group settings.\n     *\n     * This is the opposite of notEmpty() which requires a field to not be empty.\n     * By using $mode equal to 'create' or 'update', you can allow fields to be empty\n     * when records are first created, or when they are updated.\n     *\n     * ### Example:\n     *\n     * ```\n     * \/\/ Email can be empty\n     * $validator->allowEmpty('email');\n     *\n     * \/\/ Email can be empty on create\n     * $validator->allowEmpty('email', 'create');\n     *\n     * \/\/ Email can be empty on update\n     * $validator->allowEmpty('email', 'update');\n     *\n     * \/\/ Email and subject can be empty on update\n     * $validator->allowEmpty(['email', 'subject'], 'update');\n     *\n     * \/\/ Email can be always empty, subject and content can be empty on update.\n     * $validator->allowEmpty(\n     *      [\n     *          'email' => [\n     *              'when' => true\n     *          ],\n     *          'content' => [\n     *              'message' => 'Content cannot be empty'\n     *          ],\n     *          'subject'\n     *      ],\n     *      'update'\n     * );\n     * ```\n     *\n     * It is possible to conditionally allow emptiness on a field by passing a callback\n     * as a second argument. The callback will receive the validation context array as\n     * argument:\n     *\n     * ```\n     * $validator->allowEmpty('email', function ($context) {\n     *  return !$context['newRecord'] || $context['data']['role'] === 'admin';\n     * });\n     * ```\n     *\n     * This method will correctly detect empty file uploads and date\/time\/datetime fields.\n     *\n     * Because this and `notEmpty()` modify the same internal state, the last\n     * method called will take precedence.\n     *\n     * @param string|array $field the name of the field or a list of fields\n     * @param bool|string|callable $when Indicates when the field is allowed to be empty\n     * Valid values are true (always), 'create', 'update'. If a callable is passed then\n     * the field will allowed to be empty only when the callback returns true.\n     * @param string|null $message The message to show if the field is not\n     * @return $this\n     *\/",474],["T_WHITESPACE","\n    ",539],["T_PUBLIC","public",540],["T_WHITESPACE"," ",540],["T_FUNCTION","function",540],["T_WHITESPACE"," ",540],["T_STRING","allowEmpty",540],"(",["T_VARIABLE","$field",540],",",["T_WHITESPACE"," ",540],["T_VARIABLE","$when",540],["T_WHITESPACE"," ",540],"=",["T_WHITESPACE"," ",540],["T_STRING","true",540],",",["T_WHITESPACE"," ",540],["T_VARIABLE","$message",540],["T_WHITESPACE"," ",540],"=",["T_WHITESPACE"," ",540],["T_STRING","null",540],")",["T_WHITESPACE","\n    ",540],"{",["T_WHITESPACE","\n        ",541],["T_VARIABLE","$settingsDefault",542],["T_WHITESPACE"," ",542],"=",["T_WHITESPACE"," ",542],"[",["T_WHITESPACE","\n            ",542],["T_CONSTANT_ENCAPSED_STRING","'when'",543],["T_WHITESPACE"," ",543],["T_DOUBLE_ARROW","=>",543],["T_WHITESPACE"," ",543],["T_VARIABLE","$when",543],",",["T_WHITESPACE","\n            ",543],["T_CONSTANT_ENCAPSED_STRING","'message'",544],["T_WHITESPACE"," ",544],["T_DOUBLE_ARROW","=>",544],["T_WHITESPACE"," ",544],["T_VARIABLE","$message",544],["T_WHITESPACE","\n        ",544],"]",";",["T_WHITESPACE","\n\n        ",545],["T_IF","if",547],["T_WHITESPACE"," ",547],"(","!",["T_STRING","is_array",547],"(",["T_VARIABLE","$field",547],")",")",["T_WHITESPACE"," ",547],"{",["T_WHITESPACE","\n            ",547],["T_VARIABLE","$field",548],["T_WHITESPACE"," ",548],"=",["T_WHITESPACE"," ",548],["T_VARIABLE","$this",548],["T_OBJECT_OPERATOR","->",548],["T_STRING","_convertValidatorToArray",548],"(",["T_VARIABLE","$field",548],",",["T_WHITESPACE"," ",548],["T_VARIABLE","$settingsDefault",548],")",";",["T_WHITESPACE","\n        ",548],"}",["T_WHITESPACE","\n\n        ",549],["T_FOREACH","foreach",551],["T_WHITESPACE"," ",551],"(",["T_VARIABLE","$field",551],["T_WHITESPACE"," ",551],["T_AS","as",551],["T_WHITESPACE"," ",551],["T_VARIABLE","$fieldName",551],["T_WHITESPACE"," ",551],["T_DOUBLE_ARROW","=>",551],["T_WHITESPACE"," ",551],["T_VARIABLE","$setting",551],")",["T_WHITESPACE"," ",551],"{",["T_WHITESPACE","\n            ",551],["T_VARIABLE","$settings",552],["T_WHITESPACE"," ",552],"=",["T_WHITESPACE"," ",552],["T_VARIABLE","$this",552],["T_OBJECT_OPERATOR","->",552],["T_STRING","_convertValidatorToArray",552],"(",["T_VARIABLE","$fieldName",552],",",["T_WHITESPACE"," ",552],["T_VARIABLE","$settingsDefault",552],",",["T_WHITESPACE"," ",552],["T_VARIABLE","$setting",552],")",";",["T_WHITESPACE","\n            ",552],["T_VARIABLE","$fieldName",553],["T_WHITESPACE"," ",553],"=",["T_WHITESPACE"," ",553],["T_STRING","current",553],"(",["T_STRING","array_keys",553],"(",["T_VARIABLE","$settings",553],")",")",";",["T_WHITESPACE","\n\n            ",553],["T_VARIABLE","$this",555],["T_OBJECT_OPERATOR","->",555],["T_STRING","field",555],"(",["T_VARIABLE","$fieldName",555],")",["T_OBJECT_OPERATOR","->",555],["T_STRING","isEmptyAllowed",555],"(",["T_VARIABLE","$settings",555],"[",["T_VARIABLE","$fieldName",555],"]","[",["T_CONSTANT_ENCAPSED_STRING","'when'",555],"]",")",";",["T_WHITESPACE","\n            ",555],["T_IF","if",556],["T_WHITESPACE"," ",556],"(",["T_VARIABLE","$settings",556],"[",["T_VARIABLE","$fieldName",556],"]","[",["T_CONSTANT_ENCAPSED_STRING","'message'",556],"]",")",["T_WHITESPACE"," ",556],"{",["T_WHITESPACE","\n                ",556],["T_VARIABLE","$this",557],["T_OBJECT_OPERATOR","->",557],["T_STRING","_allowEmptyMessages",557],"[",["T_VARIABLE","$fieldName",557],"]",["T_WHITESPACE"," ",557],"=",["T_WHITESPACE"," ",557],["T_VARIABLE","$settings",557],"[",["T_VARIABLE","$fieldName",557],"]","[",["T_CONSTANT_ENCAPSED_STRING","'message'",557],"]",";",["T_WHITESPACE","\n            ",557],"}",["T_WHITESPACE","\n        ",558],"}",["T_WHITESPACE","\n\n        ",559],["T_RETURN","return",561],["T_WHITESPACE"," ",561],["T_VARIABLE","$this",561],";",["T_WHITESPACE","\n    ",561],"}",["T_WHITESPACE","\n\n    ",562],["T_DOC_COMMENT","\/**\n     * Converts validator to fieldName => $settings array\n     *\n     * @param int|string $fieldName name of field\n     * @param array $defaults default settings\n     * @param string|array $settings settings from data\n     * @return array\n     *\/",564],["T_WHITESPACE","\n    ",571],["T_PROTECTED","protected",572],["T_WHITESPACE"," ",572],["T_FUNCTION","function",572],["T_WHITESPACE"," ",572],["T_STRING","_convertValidatorToArray",572],"(",["T_VARIABLE","$fieldName",572],",",["T_WHITESPACE"," ",572],["T_VARIABLE","$defaults",572],["T_WHITESPACE"," ",572],"=",["T_WHITESPACE"," ",572],"[","]",",",["T_WHITESPACE"," ",572],["T_VARIABLE","$settings",572],["T_WHITESPACE"," ",572],"=",["T_WHITESPACE"," ",572],"[","]",")",["T_WHITESPACE","\n    ",572],"{",["T_WHITESPACE","\n        ",573],["T_IF","if",574],["T_WHITESPACE"," ",574],"(",["T_STRING","is_string",574],"(",["T_VARIABLE","$settings",574],")",")",["T_WHITESPACE"," ",574],"{",["T_WHITESPACE","\n            ",574],["T_VARIABLE","$fieldName",575],["T_WHITESPACE"," ",575],"=",["T_WHITESPACE"," ",575],["T_VARIABLE","$settings",575],";",["T_WHITESPACE","\n            ",575],["T_VARIABLE","$settings",576],["T_WHITESPACE"," ",576],"=",["T_WHITESPACE"," ",576],"[","]",";",["T_WHITESPACE","\n        ",576],"}",["T_WHITESPACE","\n        ",577],["T_IF","if",578],["T_WHITESPACE"," ",578],"(","!",["T_STRING","is_array",578],"(",["T_VARIABLE","$settings",578],")",")",["T_WHITESPACE"," ",578],"{",["T_WHITESPACE","\n            ",578],["T_THROW","throw",579],["T_WHITESPACE"," ",579],["T_NEW","new",579],["T_WHITESPACE"," ",579],["T_STRING","InvalidArgumentException",579],"(",["T_WHITESPACE","\n                ",579],["T_STRING","sprintf",580],"(",["T_CONSTANT_ENCAPSED_STRING","'Invalid settings for \"%s\". Settings must be an array.'",580],",",["T_WHITESPACE"," ",580],["T_VARIABLE","$fieldName",580],")",["T_WHITESPACE","\n            ",580],")",";",["T_WHITESPACE","\n        ",581],"}",["T_WHITESPACE","\n        ",582],["T_VARIABLE","$settings",583],["T_WHITESPACE"," ",583],["T_PLUS_EQUAL","+=",583],["T_WHITESPACE"," ",583],["T_VARIABLE","$defaults",583],";",["T_WHITESPACE","\n\n        ",583],["T_RETURN","return",585],["T_WHITESPACE"," ",585],"[",["T_VARIABLE","$fieldName",585],["T_WHITESPACE"," ",585],["T_DOUBLE_ARROW","=>",585],["T_WHITESPACE"," ",585],["T_VARIABLE","$settings",585],"]",";",["T_WHITESPACE","\n    ",585],"}",["T_WHITESPACE","\n\n    ",586],["T_DOC_COMMENT","\/**\n     * Sets a field to require a non-empty value. You can also pass array.\n     * Using an array will let you provide the following keys:\n     *\n     * - `when` individual when condition for field\n     * - `message` individual error message for field\n     *\n     * You can also set `when` and `message` for all passed fields, the individual setting\n     * takes precedence over group settings.\n     *\n     * This is the opposite of `allowEmpty()` which allows a field to be empty.\n     * By using $mode equal to 'create' or 'update', you can make fields required\n     * when records are first created, or when they are updated.\n     *\n     * ### Example:\n     *\n     * ```\n     * $message = 'This field cannot be empty';\n     *\n     * \/\/ Email cannot be empty\n     * $validator->notEmpty('email');\n     *\n     * \/\/ Email can be empty on update, but not create\n     * $validator->notEmpty('email', $message, 'create');\n     *\n     * \/\/ Email can be empty on create, but required on update.\n     * $validator->notEmpty('email', $message, 'update');\n     *\n     * \/\/ Email and title can be empty on create, but are required on update.\n     * $validator->notEmpty(['email', 'title'], $message, 'update');\n     *\n     * \/\/ Email can be empty on create, title must always be not empty\n     * $validator->notEmpty(\n     *      [\n     *          'email',\n     *          'title' => [\n     *              'when' => true,\n     *              'message' => 'Title cannot be empty'\n     *          ]\n     *      ],\n     *      $message,\n     *      'update'\n     * );\n     * ```\n     *\n     * It is possible to conditionally disallow emptiness on a field by passing a callback\n     * as the third argument. The callback will receive the validation context array as\n     * argument:\n     *\n     * ```\n     * $validator->notEmpty('email', 'Email is required', function ($context) {\n     *   return $context['newRecord'] && $context['data']['role'] !== 'admin';\n     * });\n     * ```\n     *\n     * Because this and `allowEmpty()` modify the same internal state, the last\n     * method called will take precedence.\n     *\n     * @param string|array $field the name of the field or list of fields\n     * @param string|null $message The message to show if the field is not\n     * @param bool|string|callable $when Indicates when the field is not allowed\n     *   to be empty. Valid values are true (always), 'create', 'update'. If a\n     *   callable is passed then the field will allowed to be empty only when\n     *   the callback returns false.\n     * @return $this\n     *\/",588],["T_WHITESPACE","\n    ",653],["T_PUBLIC","public",654],["T_WHITESPACE"," ",654],["T_FUNCTION","function",654],["T_WHITESPACE"," ",654],["T_STRING","notEmpty",654],"(",["T_VARIABLE","$field",654],",",["T_WHITESPACE"," ",654],["T_VARIABLE","$message",654],["T_WHITESPACE"," ",654],"=",["T_WHITESPACE"," ",654],["T_STRING","null",654],",",["T_WHITESPACE"," ",654],["T_VARIABLE","$when",654],["T_WHITESPACE"," ",654],"=",["T_WHITESPACE"," ",654],["T_STRING","false",654],")",["T_WHITESPACE","\n    ",654],"{",["T_WHITESPACE","\n        ",655],["T_VARIABLE","$defaults",656],["T_WHITESPACE"," ",656],"=",["T_WHITESPACE"," ",656],"[",["T_WHITESPACE","\n            ",656],["T_CONSTANT_ENCAPSED_STRING","'when'",657],["T_WHITESPACE"," ",657],["T_DOUBLE_ARROW","=>",657],["T_WHITESPACE"," ",657],["T_VARIABLE","$when",657],",",["T_WHITESPACE","\n            ",657],["T_CONSTANT_ENCAPSED_STRING","'message'",658],["T_WHITESPACE"," ",658],["T_DOUBLE_ARROW","=>",658],["T_WHITESPACE"," ",658],["T_VARIABLE","$message",658],["T_WHITESPACE","\n        ",658],"]",";",["T_WHITESPACE","\n\n        ",659],["T_IF","if",661],["T_WHITESPACE"," ",661],"(","!",["T_STRING","is_array",661],"(",["T_VARIABLE","$field",661],")",")",["T_WHITESPACE"," ",661],"{",["T_WHITESPACE","\n            ",661],["T_VARIABLE","$field",662],["T_WHITESPACE"," ",662],"=",["T_WHITESPACE"," ",662],["T_VARIABLE","$this",662],["T_OBJECT_OPERATOR","->",662],["T_STRING","_convertValidatorToArray",662],"(",["T_VARIABLE","$field",662],",",["T_WHITESPACE"," ",662],["T_VARIABLE","$defaults",662],")",";",["T_WHITESPACE","\n        ",662],"}",["T_WHITESPACE","\n\n        ",663],["T_FOREACH","foreach",665],["T_WHITESPACE"," ",665],"(",["T_VARIABLE","$field",665],["T_WHITESPACE"," ",665],["T_AS","as",665],["T_WHITESPACE"," ",665],["T_VARIABLE","$fieldName",665],["T_WHITESPACE"," ",665],["T_DOUBLE_ARROW","=>",665],["T_WHITESPACE"," ",665],["T_VARIABLE","$setting",665],")",["T_WHITESPACE"," ",665],"{",["T_WHITESPACE","\n            ",665],["T_VARIABLE","$settings",666],["T_WHITESPACE"," ",666],"=",["T_WHITESPACE"," ",666],["T_VARIABLE","$this",666],["T_OBJECT_OPERATOR","->",666],["T_STRING","_convertValidatorToArray",666],"(",["T_VARIABLE","$fieldName",666],",",["T_WHITESPACE"," ",666],["T_VARIABLE","$defaults",666],",",["T_WHITESPACE"," ",666],["T_VARIABLE","$setting",666],")",";",["T_WHITESPACE","\n            ",666],["T_VARIABLE","$fieldName",667],["T_WHITESPACE"," ",667],"=",["T_WHITESPACE"," ",667],["T_STRING","current",667],"(",["T_STRING","array_keys",667],"(",["T_VARIABLE","$settings",667],")",")",";",["T_WHITESPACE","\n            ",667],["T_VARIABLE","$whenSetting",668],["T_WHITESPACE"," ",668],"=",["T_WHITESPACE"," ",668],["T_VARIABLE","$settings",668],"[",["T_VARIABLE","$fieldName",668],"]","[",["T_CONSTANT_ENCAPSED_STRING","'when'",668],"]",";",["T_WHITESPACE","\n\n            ",668],["T_IF","if",670],["T_WHITESPACE"," ",670],"(",["T_VARIABLE","$whenSetting",670],["T_WHITESPACE"," ",670],["T_IS_IDENTICAL","===",670],["T_WHITESPACE"," ",670],["T_CONSTANT_ENCAPSED_STRING","'create'",670],["T_WHITESPACE"," ",670],["T_BOOLEAN_OR","||",670],["T_WHITESPACE"," ",670],["T_VARIABLE","$whenSetting",670],["T_WHITESPACE"," ",670],["T_IS_IDENTICAL","===",670],["T_WHITESPACE"," ",670],["T_CONSTANT_ENCAPSED_STRING","'update'",670],")",["T_WHITESPACE"," ",670],"{",["T_WHITESPACE","\n                ",670],["T_VARIABLE","$whenSetting",671],["T_WHITESPACE"," ",671],"=",["T_WHITESPACE"," ",671],["T_VARIABLE","$whenSetting",671],["T_WHITESPACE"," ",671],["T_IS_IDENTICAL","===",671],["T_WHITESPACE"," ",671],["T_CONSTANT_ENCAPSED_STRING","'create'",671],["T_WHITESPACE"," ",671],"?",["T_WHITESPACE"," ",671],["T_CONSTANT_ENCAPSED_STRING","'update'",671],["T_WHITESPACE"," ",671],":",["T_WHITESPACE"," ",671],["T_CONSTANT_ENCAPSED_STRING","'create'",671],";",["T_WHITESPACE","\n            ",671],"}",["T_WHITESPACE"," ",672],["T_ELSEIF","elseif",672],["T_WHITESPACE"," ",672],"(",["T_STRING","is_callable",672],"(",["T_VARIABLE","$whenSetting",672],")",")",["T_WHITESPACE"," ",672],"{",["T_WHITESPACE","\n                ",672],["T_VARIABLE","$whenSetting",673],["T_WHITESPACE"," ",673],"=",["T_WHITESPACE"," ",673],["T_FUNCTION","function",673],["T_WHITESPACE"," ",673],"(",["T_VARIABLE","$context",673],")",["T_WHITESPACE"," ",673],["T_USE","use",673],["T_WHITESPACE"," ",673],"(",["T_VARIABLE","$whenSetting",673],")",["T_WHITESPACE"," ",673],"{",["T_WHITESPACE","\n                    ",673],["T_RETURN","return",674],["T_WHITESPACE"," ",674],"!",["T_VARIABLE","$whenSetting",674],"(",["T_VARIABLE","$context",674],")",";",["T_WHITESPACE","\n                ",674],"}",";",["T_WHITESPACE","\n            ",675],"}",["T_WHITESPACE","\n\n            ",676],["T_VARIABLE","$this",678],["T_OBJECT_OPERATOR","->",678],["T_STRING","field",678],"(",["T_VARIABLE","$fieldName",678],")",["T_OBJECT_OPERATOR","->",678],["T_STRING","isEmptyAllowed",678],"(",["T_VARIABLE","$whenSetting",678],")",";",["T_WHITESPACE","\n            ",678],["T_IF","if",679],["T_WHITESPACE"," ",679],"(",["T_VARIABLE","$settings",679],"[",["T_VARIABLE","$fieldName",679],"]","[",["T_CONSTANT_ENCAPSED_STRING","'message'",679],"]",")",["T_WHITESPACE"," ",679],"{",["T_WHITESPACE","\n                ",679],["T_VARIABLE","$this",680],["T_OBJECT_OPERATOR","->",680],["T_STRING","_allowEmptyMessages",680],"[",["T_VARIABLE","$fieldName",680],"]",["T_WHITESPACE"," ",680],"=",["T_WHITESPACE"," ",680],["T_VARIABLE","$settings",680],"[",["T_VARIABLE","$fieldName",680],"]","[",["T_CONSTANT_ENCAPSED_STRING","'message'",680],"]",";",["T_WHITESPACE","\n            ",680],"}",["T_WHITESPACE","\n        ",681],"}",["T_WHITESPACE","\n\n        ",682],["T_RETURN","return",684],["T_WHITESPACE"," ",684],["T_VARIABLE","$this",684],";",["T_WHITESPACE","\n    ",684],"}",["T_WHITESPACE","\n\n    ",685],["T_DOC_COMMENT","\/**\n     * Add a notBlank rule to a field.\n     *\n     * @param string $field The field you want to apply the rule to.\n     * @param string|null $message The error message when the rule fails.\n     * @param string|callable|null $when Either 'create' or 'update' or a callable that returns\n     *   true when the validation rule should be applied.\n     * @see \\Cake\\Validation\\Validation::notBlank()\n     * @return $this\n     *\/",687],["T_WHITESPACE","\n    ",696],["T_PUBLIC","public",697],["T_WHITESPACE"," ",697],["T_FUNCTION","function",697],["T_WHITESPACE"," ",697],["T_STRING","notBlank",697],"(",["T_VARIABLE","$field",697],",",["T_WHITESPACE"," ",697],["T_VARIABLE","$message",697],["T_WHITESPACE"," ",697],"=",["T_WHITESPACE"," ",697],["T_STRING","null",697],",",["T_WHITESPACE"," ",697],["T_VARIABLE","$when",697],["T_WHITESPACE"," ",697],"=",["T_WHITESPACE"," ",697],["T_STRING","null",697],")",["T_WHITESPACE","\n    ",697],"{",["T_WHITESPACE","\n        ",698],["T_VARIABLE","$extra",699],["T_WHITESPACE"," ",699],"=",["T_WHITESPACE"," ",699],["T_STRING","array_filter",699],"(","[",["T_CONSTANT_ENCAPSED_STRING","'on'",699],["T_WHITESPACE"," ",699],["T_DOUBLE_ARROW","=>",699],["T_WHITESPACE"," ",699],["T_VARIABLE","$when",699],",",["T_WHITESPACE"," ",699],["T_CONSTANT_ENCAPSED_STRING","'message'",699],["T_WHITESPACE"," ",699],["T_DOUBLE_ARROW","=>",699],["T_WHITESPACE"," ",699],["T_VARIABLE","$message",699],"]",")",";",["T_WHITESPACE","\n\n        ",699],["T_RETURN","return",701],["T_WHITESPACE"," ",701],["T_VARIABLE","$this",701],["T_OBJECT_OPERATOR","->",701],["T_STRING","add",701],"(",["T_VARIABLE","$field",701],",",["T_WHITESPACE"," ",701],["T_CONSTANT_ENCAPSED_STRING","'notBlank'",701],",",["T_WHITESPACE"," ",701],["T_VARIABLE","$extra",701],["T_WHITESPACE"," ",701],"+",["T_WHITESPACE"," ",701],"[",["T_WHITESPACE","\n            ",701],["T_CONSTANT_ENCAPSED_STRING","'rule'",702],["T_WHITESPACE"," ",702],["T_DOUBLE_ARROW","=>",702],["T_WHITESPACE"," ",702],["T_CONSTANT_ENCAPSED_STRING","'notBlank'",702],",",["T_WHITESPACE","\n        ",702],"]",")",";",["T_WHITESPACE","\n    ",703],"}",["T_WHITESPACE","\n\n    ",704],["T_DOC_COMMENT","\/**\n     * Add an alphanumeric rule to a field.\n     *\n     * @param string $field The field you want to apply the rule to.\n     * @param string|null $message The error message when the rule fails.\n     * @param string|callable|null $when Either 'create' or 'update' or a callable that returns\n     *   true when the validation rule should be applied.\n     * @see \\Cake\\Validation\\Validation::alphaNumeric()\n     * @return $this\n     *\/",706],["T_WHITESPACE","\n    ",715],["T_PUBLIC","public",716],["T_WHITESPACE"," ",716],["T_FUNCTION","function",716],["T_WHITESPACE"," ",716],["T_STRING","alphaNumeric",716],"(",["T_VARIABLE","$field",716],",",["T_WHITESPACE"," ",716],["T_VARIABLE","$message",716],["T_WHITESPACE"," ",716],"=",["T_WHITESPACE"," ",716],["T_STRING","null",716],",",["T_WHITESPACE"," ",716],["T_VARIABLE","$when",716],["T_WHITESPACE"," ",716],"=",["T_WHITESPACE"," ",716],["T_STRING","null",716],")",["T_WHITESPACE","\n    ",716],"{",["T_WHITESPACE","\n        ",717],["T_VARIABLE","$extra",718],["T_WHITESPACE"," ",718],"=",["T_WHITESPACE"," ",718],["T_STRING","array_filter",718],"(","[",["T_CONSTANT_ENCAPSED_STRING","'on'",718],["T_WHITESPACE"," ",718],["T_DOUBLE_ARROW","=>",718],["T_WHITESPACE"," ",718],["T_VARIABLE","$when",718],",",["T_WHITESPACE"," ",718],["T_CONSTANT_ENCAPSED_STRING","'message'",718],["T_WHITESPACE"," ",718],["T_DOUBLE_ARROW","=>",718],["T_WHITESPACE"," ",718],["T_VARIABLE","$message",718],"]",")",";",["T_WHITESPACE","\n\n        ",718],["T_RETURN","return",720],["T_WHITESPACE"," ",720],["T_VARIABLE","$this",720],["T_OBJECT_OPERATOR","->",720],["T_STRING","add",720],"(",["T_VARIABLE","$field",720],",",["T_WHITESPACE"," ",720],["T_CONSTANT_ENCAPSED_STRING","'alphaNumeric'",720],",",["T_WHITESPACE"," ",720],["T_VARIABLE","$extra",720],["T_WHITESPACE"," ",720],"+",["T_WHITESPACE"," ",720],"[",["T_WHITESPACE","\n            ",720],["T_CONSTANT_ENCAPSED_STRING","'rule'",721],["T_WHITESPACE"," ",721],["T_DOUBLE_ARROW","=>",721],["T_WHITESPACE"," ",721],["T_CONSTANT_ENCAPSED_STRING","'alphaNumeric'",721],",",["T_WHITESPACE","\n        ",721],"]",")",";",["T_WHITESPACE","\n    ",722],"}",["T_WHITESPACE","\n\n    ",723],["T_DOC_COMMENT","\/**\n     * Add an rule that ensures a string length is within a range.\n     *\n     * @param string $field The field you want to apply the rule to.\n     * @param array $range The inclusive minimum and maximum length you want permitted.\n     * @param string|null $message The error message when the rule fails.\n     * @param string|callable|null $when Either 'create' or 'update' or a callable that returns\n     *   true when the validation rule should be applied.\n     * @see \\Cake\\Validation\\Validation::alphaNumeric()\n     * @return $this\n     *\/",725],["T_WHITESPACE","\n    ",735],["T_PUBLIC","public",736],["T_WHITESPACE"," ",736],["T_FUNCTION","function",736],["T_WHITESPACE"," ",736],["T_STRING","lengthBetween",736],"(",["T_VARIABLE","$field",736],",",["T_WHITESPACE"," ",736],["T_ARRAY","array",736],["T_WHITESPACE"," ",736],["T_VARIABLE","$range",736],",",["T_WHITESPACE"," ",736],["T_VARIABLE","$message",736],["T_WHITESPACE"," ",736],"=",["T_WHITESPACE"," ",736],["T_STRING","null",736],",",["T_WHITESPACE"," ",736],["T_VARIABLE","$when",736],["T_WHITESPACE"," ",736],"=",["T_WHITESPACE"," ",736],["T_STRING","null",736],")",["T_WHITESPACE","\n    ",736],"{",["T_WHITESPACE","\n        ",737],["T_IF","if",738],["T_WHITESPACE"," ",738],"(",["T_STRING","count",738],"(",["T_VARIABLE","$range",738],")",["T_WHITESPACE"," ",738],["T_IS_NOT_IDENTICAL","!==",738],["T_WHITESPACE"," ",738],["T_LNUMBER","2",738],")",["T_WHITESPACE"," ",738],"{",["T_WHITESPACE","\n            ",738],["T_THROW","throw",739],["T_WHITESPACE"," ",739],["T_NEW","new",739],["T_WHITESPACE"," ",739],["T_STRING","InvalidArgumentException",739],"(",["T_CONSTANT_ENCAPSED_STRING","'The $range argument requires 2 numbers'",739],")",";",["T_WHITESPACE","\n        ",739],"}",["T_WHITESPACE","\n        ",740],["T_VARIABLE","$extra",741],["T_WHITESPACE"," ",741],"=",["T_WHITESPACE"," ",741],["T_STRING","array_filter",741],"(","[",["T_CONSTANT_ENCAPSED_STRING","'on'",741],["T_WHITESPACE"," ",741],["T_DOUBLE_ARROW","=>",741],["T_WHITESPACE"," ",741],["T_VARIABLE","$when",741],",",["T_WHITESPACE"," ",741],["T_CONSTANT_ENCAPSED_STRING","'message'",741],["T_WHITESPACE"," ",741],["T_DOUBLE_ARROW","=>",741],["T_WHITESPACE"," ",741],["T_VARIABLE","$message",741],"]",")",";",["T_WHITESPACE","\n\n        ",741],["T_RETURN","return",743],["T_WHITESPACE"," ",743],["T_VARIABLE","$this",743],["T_OBJECT_OPERATOR","->",743],["T_STRING","add",743],"(",["T_VARIABLE","$field",743],",",["T_WHITESPACE"," ",743],["T_CONSTANT_ENCAPSED_STRING","'lengthBetween'",743],",",["T_WHITESPACE"," ",743],["T_VARIABLE","$extra",743],["T_WHITESPACE"," ",743],"+",["T_WHITESPACE"," ",743],"[",["T_WHITESPACE","\n            ",743],["T_CONSTANT_ENCAPSED_STRING","'rule'",744],["T_WHITESPACE"," ",744],["T_DOUBLE_ARROW","=>",744],["T_WHITESPACE"," ",744],"[",["T_CONSTANT_ENCAPSED_STRING","'lengthBetween'",744],",",["T_WHITESPACE"," ",744],["T_STRING","array_shift",744],"(",["T_VARIABLE","$range",744],")",",",["T_WHITESPACE"," ",744],["T_STRING","array_shift",744],"(",["T_VARIABLE","$range",744],")","]",",",["T_WHITESPACE","\n        ",744],"]",")",";",["T_WHITESPACE","\n    ",745],"}",["T_WHITESPACE","\n\n    ",746],["T_DOC_COMMENT","\/**\n     * Add a credit card rule to a field.\n     *\n     * @param string $field The field you want to apply the rule to.\n     * @param string $type The type of cards you want to allow. Defaults to 'all'.\n     *   You can also supply an array of accepted card types. e.g `['mastercard', 'visa', 'amex']`\n     * @param string|null $message The error message when the rule fails.\n     * @param string|callable|null $when Either 'create' or 'update' or a callable that returns\n     *   true when the validation rule should be applied.\n     * @see \\Cake\\Validation\\Validation::cc()\n     * @return $this\n     *\/",748],["T_WHITESPACE","\n    ",759],["T_PUBLIC","public",760],["T_WHITESPACE"," ",760],["T_FUNCTION","function",760],["T_WHITESPACE"," ",760],["T_STRING","creditCard",760],"(",["T_VARIABLE","$field",760],",",["T_WHITESPACE"," ",760],["T_VARIABLE","$type",760],["T_WHITESPACE"," ",760],"=",["T_WHITESPACE"," ",760],["T_CONSTANT_ENCAPSED_STRING","'all'",760],",",["T_WHITESPACE"," ",760],["T_VARIABLE","$message",760],["T_WHITESPACE"," ",760],"=",["T_WHITESPACE"," ",760],["T_STRING","null",760],",",["T_WHITESPACE"," ",760],["T_VARIABLE","$when",760],["T_WHITESPACE"," ",760],"=",["T_WHITESPACE"," ",760],["T_STRING","null",760],")",["T_WHITESPACE","\n    ",760],"{",["T_WHITESPACE","\n        ",761],["T_VARIABLE","$extra",762],["T_WHITESPACE"," ",762],"=",["T_WHITESPACE"," ",762],["T_STRING","array_filter",762],"(","[",["T_CONSTANT_ENCAPSED_STRING","'on'",762],["T_WHITESPACE"," ",762],["T_DOUBLE_ARROW","=>",762],["T_WHITESPACE"," ",762],["T_VARIABLE","$when",762],",",["T_WHITESPACE"," ",762],["T_CONSTANT_ENCAPSED_STRING","'message'",762],["T_WHITESPACE"," ",762],["T_DOUBLE_ARROW","=>",762],["T_WHITESPACE"," ",762],["T_VARIABLE","$message",762],"]",")",";",["T_WHITESPACE","\n\n        ",762],["T_RETURN","return",764],["T_WHITESPACE"," ",764],["T_VARIABLE","$this",764],["T_OBJECT_OPERATOR","->",764],["T_STRING","add",764],"(",["T_VARIABLE","$field",764],",",["T_WHITESPACE"," ",764],["T_CONSTANT_ENCAPSED_STRING","'creditCard'",764],",",["T_WHITESPACE"," ",764],["T_VARIABLE","$extra",764],["T_WHITESPACE"," ",764],"+",["T_WHITESPACE"," ",764],"[",["T_WHITESPACE","\n            ",764],["T_CONSTANT_ENCAPSED_STRING","'rule'",765],["T_WHITESPACE"," ",765],["T_DOUBLE_ARROW","=>",765],["T_WHITESPACE"," ",765],"[",["T_CONSTANT_ENCAPSED_STRING","'cc'",765],",",["T_WHITESPACE"," ",765],["T_VARIABLE","$type",765],",",["T_WHITESPACE"," ",765],["T_STRING","true",765],"]",",",["T_WHITESPACE","\n        ",765],"]",")",";",["T_WHITESPACE","\n    ",766],"}",["T_WHITESPACE","\n\n    ",767],["T_DOC_COMMENT","\/**\n     * Add a greater than comparison rule to a field.\n     *\n     * @param string $field The field you want to apply the rule to.\n     * @param int|float $value The value user data must be greater than.\n     * @param string|null $message The error message when the rule fails.\n     * @param string|callable|null $when Either 'create' or 'update' or a callable that returns\n     *   true when the validation rule should be applied.\n     * @see \\Cake\\Validation\\Validation::comparison()\n     * @return $this\n     *\/",769],["T_WHITESPACE","\n    ",779],["T_PUBLIC","public",780],["T_WHITESPACE"," ",780],["T_FUNCTION","function",780],["T_WHITESPACE"," ",780],["T_STRING","greaterThan",780],"(",["T_VARIABLE","$field",780],",",["T_WHITESPACE"," ",780],["T_VARIABLE","$value",780],",",["T_WHITESPACE"," ",780],["T_VARIABLE","$message",780],["T_WHITESPACE"," ",780],"=",["T_WHITESPACE"," ",780],["T_STRING","null",780],",",["T_WHITESPACE"," ",780],["T_VARIABLE","$when",780],["T_WHITESPACE"," ",780],"=",["T_WHITESPACE"," ",780],["T_STRING","null",780],")",["T_WHITESPACE","\n    ",780],"{",["T_WHITESPACE","\n        ",781],["T_VARIABLE","$extra",782],["T_WHITESPACE"," ",782],"=",["T_WHITESPACE"," ",782],["T_STRING","array_filter",782],"(","[",["T_CONSTANT_ENCAPSED_STRING","'on'",782],["T_WHITESPACE"," ",782],["T_DOUBLE_ARROW","=>",782],["T_WHITESPACE"," ",782],["T_VARIABLE","$when",782],",",["T_WHITESPACE"," ",782],["T_CONSTANT_ENCAPSED_STRING","'message'",782],["T_WHITESPACE"," ",782],["T_DOUBLE_ARROW","=>",782],["T_WHITESPACE"," ",782],["T_VARIABLE","$message",782],"]",")",";",["T_WHITESPACE","\n\n        ",782],["T_RETURN","return",784],["T_WHITESPACE"," ",784],["T_VARIABLE","$this",784],["T_OBJECT_OPERATOR","->",784],["T_STRING","add",784],"(",["T_VARIABLE","$field",784],",",["T_WHITESPACE"," ",784],["T_CONSTANT_ENCAPSED_STRING","'greaterThan'",784],",",["T_WHITESPACE"," ",784],["T_VARIABLE","$extra",784],["T_WHITESPACE"," ",784],"+",["T_WHITESPACE"," ",784],"[",["T_WHITESPACE","\n            ",784],["T_CONSTANT_ENCAPSED_STRING","'rule'",785],["T_WHITESPACE"," ",785],["T_DOUBLE_ARROW","=>",785],["T_WHITESPACE"," ",785],"[",["T_CONSTANT_ENCAPSED_STRING","'comparison'",785],",",["T_WHITESPACE"," ",785],["T_CONSTANT_ENCAPSED_STRING","'>'",785],",",["T_WHITESPACE"," ",785],["T_VARIABLE","$value",785],"]",["T_WHITESPACE","\n        ",785],"]",")",";",["T_WHITESPACE","\n    ",786],"}",["T_WHITESPACE","\n\n    ",787],["T_DOC_COMMENT","\/**\n     * Add a greater than or equal to comparison rule to a field.\n     *\n     * @param string $field The field you want to apply the rule to.\n     * @param int|float $value The value user data must be greater than or equal to.\n     * @param string|null $message The error message when the rule fails.\n     * @param string|callable|null $when Either 'create' or 'update' or a callable that returns\n     *   true when the validation rule should be applied.\n     * @see \\Cake\\Validation\\Validation::comparison()\n     * @return $this\n     *\/",789],["T_WHITESPACE","\n    ",799],["T_PUBLIC","public",800],["T_WHITESPACE"," ",800],["T_FUNCTION","function",800],["T_WHITESPACE"," ",800],["T_STRING","greaterThanOrEqual",800],"(",["T_VARIABLE","$field",800],",",["T_WHITESPACE"," ",800],["T_VARIABLE","$value",800],",",["T_WHITESPACE"," ",800],["T_VARIABLE","$message",800],["T_WHITESPACE"," ",800],"=",["T_WHITESPACE"," ",800],["T_STRING","null",800],",",["T_WHITESPACE"," ",800],["T_VARIABLE","$when",800],["T_WHITESPACE"," ",800],"=",["T_WHITESPACE"," ",800],["T_STRING","null",800],")",["T_WHITESPACE","\n    ",800],"{",["T_WHITESPACE","\n        ",801],["T_VARIABLE","$extra",802],["T_WHITESPACE"," ",802],"=",["T_WHITESPACE"," ",802],["T_STRING","array_filter",802],"(","[",["T_CONSTANT_ENCAPSED_STRING","'on'",802],["T_WHITESPACE"," ",802],["T_DOUBLE_ARROW","=>",802],["T_WHITESPACE"," ",802],["T_VARIABLE","$when",802],",",["T_WHITESPACE"," ",802],["T_CONSTANT_ENCAPSED_STRING","'message'",802],["T_WHITESPACE"," ",802],["T_DOUBLE_ARROW","=>",802],["T_WHITESPACE"," ",802],["T_VARIABLE","$message",802],"]",")",";",["T_WHITESPACE","\n\n        ",802],["T_RETURN","return",804],["T_WHITESPACE"," ",804],["T_VARIABLE","$this",804],["T_OBJECT_OPERATOR","->",804],["T_STRING","add",804],"(",["T_VARIABLE","$field",804],",",["T_WHITESPACE"," ",804],["T_CONSTANT_ENCAPSED_STRING","'greaterThanOrEqual'",804],",",["T_WHITESPACE"," ",804],["T_VARIABLE","$extra",804],["T_WHITESPACE"," ",804],"+",["T_WHITESPACE"," ",804],"[",["T_WHITESPACE","\n            ",804],["T_CONSTANT_ENCAPSED_STRING","'rule'",805],["T_WHITESPACE"," ",805],["T_DOUBLE_ARROW","=>",805],["T_WHITESPACE"," ",805],"[",["T_CONSTANT_ENCAPSED_STRING","'comparison'",805],",",["T_WHITESPACE"," ",805],["T_CONSTANT_ENCAPSED_STRING","'>='",805],",",["T_WHITESPACE"," ",805],["T_VARIABLE","$value",805],"]",["T_WHITESPACE","\n        ",805],"]",")",";",["T_WHITESPACE","\n    ",806],"}",["T_WHITESPACE","\n\n    ",807],["T_DOC_COMMENT","\/**\n     * Add a less than comparison rule to a field.\n     *\n     * @param string $field The field you want to apply the rule to.\n     * @param int|float $value The value user data must be less than.\n     * @param string|null $message The error message when the rule fails.\n     * @param string|callable|null $when Either 'create' or 'update' or a callable that returns\n     *   true when the validation rule should be applied.\n     * @see \\Cake\\Validation\\Validation::comparison()\n     * @return $this\n     *\/",809],["T_WHITESPACE","\n    ",819],["T_PUBLIC","public",820],["T_WHITESPACE"," ",820],["T_FUNCTION","function",820],["T_WHITESPACE"," ",820],["T_STRING","lessThan",820],"(",["T_VARIABLE","$field",820],",",["T_WHITESPACE"," ",820],["T_VARIABLE","$value",820],",",["T_WHITESPACE"," ",820],["T_VARIABLE","$message",820],["T_WHITESPACE"," ",820],"=",["T_WHITESPACE"," ",820],["T_STRING","null",820],",",["T_WHITESPACE"," ",820],["T_VARIABLE","$when",820],["T_WHITESPACE"," ",820],"=",["T_WHITESPACE"," ",820],["T_STRING","null",820],")",["T_WHITESPACE","\n    ",820],"{",["T_WHITESPACE","\n        ",821],["T_VARIABLE","$extra",822],["T_WHITESPACE"," ",822],"=",["T_WHITESPACE"," ",822],["T_STRING","array_filter",822],"(","[",["T_CONSTANT_ENCAPSED_STRING","'on'",822],["T_WHITESPACE"," ",822],["T_DOUBLE_ARROW","=>",822],["T_WHITESPACE"," ",822],["T_VARIABLE","$when",822],",",["T_WHITESPACE"," ",822],["T_CONSTANT_ENCAPSED_STRING","'message'",822],["T_WHITESPACE"," ",822],["T_DOUBLE_ARROW","=>",822],["T_WHITESPACE"," ",822],["T_VARIABLE","$message",822],"]",")",";",["T_WHITESPACE","\n\n        ",822],["T_RETURN","return",824],["T_WHITESPACE"," ",824],["T_VARIABLE","$this",824],["T_OBJECT_OPERATOR","->",824],["T_STRING","add",824],"(",["T_VARIABLE","$field",824],",",["T_WHITESPACE"," ",824],["T_CONSTANT_ENCAPSED_STRING","'lessThan'",824],",",["T_WHITESPACE"," ",824],["T_VARIABLE","$extra",824],["T_WHITESPACE"," ",824],"+",["T_WHITESPACE"," ",824],"[",["T_WHITESPACE","\n            ",824],["T_CONSTANT_ENCAPSED_STRING","'rule'",825],["T_WHITESPACE"," ",825],["T_DOUBLE_ARROW","=>",825],["T_WHITESPACE"," ",825],"[",["T_CONSTANT_ENCAPSED_STRING","'comparison'",825],",",["T_WHITESPACE"," ",825],["T_CONSTANT_ENCAPSED_STRING","'<'",825],",",["T_WHITESPACE"," ",825],["T_VARIABLE","$value",825],"]",["T_WHITESPACE","\n        ",825],"]",")",";",["T_WHITESPACE","\n    ",826],"}",["T_WHITESPACE","\n\n    ",827],["T_DOC_COMMENT","\/**\n     * Add a less than or equal comparison rule to a field.\n     *\n     * @param string $field The field you want to apply the rule to.\n     * @param int|float $value The value user data must be less than or equal to.\n     * @param string|null $message The error message when the rule fails.\n     * @param string|callable|null $when Either 'create' or 'update' or a callable that returns\n     *   true when the validation rule should be applied.\n     * @see \\Cake\\Validation\\Validation::comparison()\n     * @return $this\n     *\/",829],["T_WHITESPACE","\n    ",839],["T_PUBLIC","public",840],["T_WHITESPACE"," ",840],["T_FUNCTION","function",840],["T_WHITESPACE"," ",840],["T_STRING","lessThanOrEqual",840],"(",["T_VARIABLE","$field",840],",",["T_WHITESPACE"," ",840],["T_VARIABLE","$value",840],",",["T_WHITESPACE"," ",840],["T_VARIABLE","$message",840],["T_WHITESPACE"," ",840],"=",["T_WHITESPACE"," ",840],["T_STRING","null",840],",",["T_WHITESPACE"," ",840],["T_VARIABLE","$when",840],["T_WHITESPACE"," ",840],"=",["T_WHITESPACE"," ",840],["T_STRING","null",840],")",["T_WHITESPACE","\n    ",840],"{",["T_WHITESPACE","\n        ",841],["T_VARIABLE","$extra",842],["T_WHITESPACE"," ",842],"=",["T_WHITESPACE"," ",842],["T_STRING","array_filter",842],"(","[",["T_CONSTANT_ENCAPSED_STRING","'on'",842],["T_WHITESPACE"," ",842],["T_DOUBLE_ARROW","=>",842],["T_WHITESPACE"," ",842],["T_VARIABLE","$when",842],",",["T_WHITESPACE"," ",842],["T_CONSTANT_ENCAPSED_STRING","'message'",842],["T_WHITESPACE"," ",842],["T_DOUBLE_ARROW","=>",842],["T_WHITESPACE"," ",842],["T_VARIABLE","$message",842],"]",")",";",["T_WHITESPACE","\n\n        ",842],["T_RETURN","return",844],["T_WHITESPACE"," ",844],["T_VARIABLE","$this",844],["T_OBJECT_OPERATOR","->",844],["T_STRING","add",844],"(",["T_VARIABLE","$field",844],",",["T_WHITESPACE"," ",844],["T_CONSTANT_ENCAPSED_STRING","'lessThanOrEqual'",844],",",["T_WHITESPACE"," ",844],["T_VARIABLE","$extra",844],["T_WHITESPACE"," ",844],"+",["T_WHITESPACE"," ",844],"[",["T_WHITESPACE","\n            ",844],["T_CONSTANT_ENCAPSED_STRING","'rule'",845],["T_WHITESPACE"," ",845],["T_DOUBLE_ARROW","=>",845],["T_WHITESPACE"," ",845],"[",["T_CONSTANT_ENCAPSED_STRING","'comparison'",845],",",["T_WHITESPACE"," ",845],["T_CONSTANT_ENCAPSED_STRING","'<='",845],",",["T_WHITESPACE"," ",845],["T_VARIABLE","$value",845],"]",["T_WHITESPACE","\n        ",845],"]",")",";",["T_WHITESPACE","\n    ",846],"}",["T_WHITESPACE","\n\n    ",847],["T_DOC_COMMENT","\/**\n     * Add a equal to comparison rule to a field.\n     *\n     * @param string $field The field you want to apply the rule to.\n     * @param int|float $value The value user data must be equal to.\n     * @param string|null $message The error message when the rule fails.\n     * @param string|callable|null $when Either 'create' or 'update' or a callable that returns\n     *   true when the validation rule should be applied.\n     * @see \\Cake\\Validation\\Validation::comparison()\n     * @return $this\n     *\/",849],["T_WHITESPACE","\n    ",859],["T_PUBLIC","public",860],["T_WHITESPACE"," ",860],["T_FUNCTION","function",860],["T_WHITESPACE"," ",860],["T_STRING","equals",860],"(",["T_VARIABLE","$field",860],",",["T_WHITESPACE"," ",860],["T_VARIABLE","$value",860],",",["T_WHITESPACE"," ",860],["T_VARIABLE","$message",860],["T_WHITESPACE"," ",860],"=",["T_WHITESPACE"," ",860],["T_STRING","null",860],",",["T_WHITESPACE"," ",860],["T_VARIABLE","$when",860],["T_WHITESPACE"," ",860],"=",["T_WHITESPACE"," ",860],["T_STRING","null",860],")",["T_WHITESPACE","\n    ",860],"{",["T_WHITESPACE","\n        ",861],["T_VARIABLE","$extra",862],["T_WHITESPACE"," ",862],"=",["T_WHITESPACE"," ",862],["T_STRING","array_filter",862],"(","[",["T_CONSTANT_ENCAPSED_STRING","'on'",862],["T_WHITESPACE"," ",862],["T_DOUBLE_ARROW","=>",862],["T_WHITESPACE"," ",862],["T_VARIABLE","$when",862],",",["T_WHITESPACE"," ",862],["T_CONSTANT_ENCAPSED_STRING","'message'",862],["T_WHITESPACE"," ",862],["T_DOUBLE_ARROW","=>",862],["T_WHITESPACE"," ",862],["T_VARIABLE","$message",862],"]",")",";",["T_WHITESPACE","\n\n        ",862],["T_RETURN","return",864],["T_WHITESPACE"," ",864],["T_VARIABLE","$this",864],["T_OBJECT_OPERATOR","->",864],["T_STRING","add",864],"(",["T_VARIABLE","$field",864],",",["T_WHITESPACE"," ",864],["T_CONSTANT_ENCAPSED_STRING","'equals'",864],",",["T_WHITESPACE"," ",864],["T_VARIABLE","$extra",864],["T_WHITESPACE"," ",864],"+",["T_WHITESPACE"," ",864],"[",["T_WHITESPACE","\n            ",864],["T_CONSTANT_ENCAPSED_STRING","'rule'",865],["T_WHITESPACE"," ",865],["T_DOUBLE_ARROW","=>",865],["T_WHITESPACE"," ",865],"[",["T_CONSTANT_ENCAPSED_STRING","'comparison'",865],",",["T_WHITESPACE"," ",865],["T_CONSTANT_ENCAPSED_STRING","'=='",865],",",["T_WHITESPACE"," ",865],["T_VARIABLE","$value",865],"]",["T_WHITESPACE","\n        ",865],"]",")",";",["T_WHITESPACE","\n    ",866],"}",["T_WHITESPACE","\n\n    ",867],["T_DOC_COMMENT","\/**\n     * Add a not equal to comparison rule to a field.\n     *\n     * @param string $field The field you want to apply the rule to.\n     * @param int|float $value The value user data must be not be equal to.\n     * @param string|null $message The error message when the rule fails.\n     * @param string|callable|null $when Either 'create' or 'update' or a callable that returns\n     *   true when the validation rule should be applied.\n     * @see \\Cake\\Validation\\Validation::comparison()\n     * @return $this\n     *\/",869],["T_WHITESPACE","\n    ",879],["T_PUBLIC","public",880],["T_WHITESPACE"," ",880],["T_FUNCTION","function",880],["T_WHITESPACE"," ",880],["T_STRING","notEquals",880],"(",["T_VARIABLE","$field",880],",",["T_WHITESPACE"," ",880],["T_VARIABLE","$value",880],",",["T_WHITESPACE"," ",880],["T_VARIABLE","$message",880],["T_WHITESPACE"," ",880],"=",["T_WHITESPACE"," ",880],["T_STRING","null",880],",",["T_WHITESPACE"," ",880],["T_VARIABLE","$when",880],["T_WHITESPACE"," ",880],"=",["T_WHITESPACE"," ",880],["T_STRING","null",880],")",["T_WHITESPACE","\n    ",880],"{",["T_WHITESPACE","\n        ",881],["T_VARIABLE","$extra",882],["T_WHITESPACE"," ",882],"=",["T_WHITESPACE"," ",882],["T_STRING","array_filter",882],"(","[",["T_CONSTANT_ENCAPSED_STRING","'on'",882],["T_WHITESPACE"," ",882],["T_DOUBLE_ARROW","=>",882],["T_WHITESPACE"," ",882],["T_VARIABLE","$when",882],",",["T_WHITESPACE"," ",882],["T_CONSTANT_ENCAPSED_STRING","'message'",882],["T_WHITESPACE"," ",882],["T_DOUBLE_ARROW","=>",882],["T_WHITESPACE"," ",882],["T_VARIABLE","$message",882],"]",")",";",["T_WHITESPACE","\n\n        ",882],["T_RETURN","return",884],["T_WHITESPACE"," ",884],["T_VARIABLE","$this",884],["T_OBJECT_OPERATOR","->",884],["T_STRING","add",884],"(",["T_VARIABLE","$field",884],",",["T_WHITESPACE"," ",884],["T_CONSTANT_ENCAPSED_STRING","'notEquals'",884],",",["T_WHITESPACE"," ",884],["T_VARIABLE","$extra",884],["T_WHITESPACE"," ",884],"+",["T_WHITESPACE"," ",884],"[",["T_WHITESPACE","\n            ",884],["T_CONSTANT_ENCAPSED_STRING","'rule'",885],["T_WHITESPACE"," ",885],["T_DOUBLE_ARROW","=>",885],["T_WHITESPACE"," ",885],"[",["T_CONSTANT_ENCAPSED_STRING","'comparison'",885],",",["T_WHITESPACE"," ",885],["T_CONSTANT_ENCAPSED_STRING","'!='",885],",",["T_WHITESPACE"," ",885],["T_VARIABLE","$value",885],"]",["T_WHITESPACE","\n        ",885],"]",")",";",["T_WHITESPACE","\n    ",886],"}",["T_WHITESPACE","\n\n    ",887],["T_DOC_COMMENT","\/**\n     * Add a rule to compare two fields to each other.\n     *\n     * If both fields have the exact same value the rule will pass.\n     *\n     * @param mixed $field The field you want to apply the rule to.\n     * @param mixed $secondField The field you want to compare against.\n     * @param string|null $message The error message when the rule fails.\n     * @param string|callable|null $when Either 'create' or 'update' or a callable that returns\n     *   true when the validation rule should be applied.\n     * @see \\Cake\\Validation\\Validation::compareWith()\n     * @return $this\n     *\/",889],["T_WHITESPACE","\n    ",901],["T_PUBLIC","public",902],["T_WHITESPACE"," ",902],["T_FUNCTION","function",902],["T_WHITESPACE"," ",902],["T_STRING","sameAs",902],"(",["T_VARIABLE","$field",902],",",["T_WHITESPACE"," ",902],["T_VARIABLE","$secondField",902],",",["T_WHITESPACE"," ",902],["T_VARIABLE","$message",902],["T_WHITESPACE"," ",902],"=",["T_WHITESPACE"," ",902],["T_STRING","null",902],",",["T_WHITESPACE"," ",902],["T_VARIABLE","$when",902],["T_WHITESPACE"," ",902],"=",["T_WHITESPACE"," ",902],["T_STRING","null",902],")",["T_WHITESPACE","\n    ",902],"{",["T_WHITESPACE","\n        ",903],["T_VARIABLE","$extra",904],["T_WHITESPACE"," ",904],"=",["T_WHITESPACE"," ",904],["T_STRING","array_filter",904],"(","[",["T_CONSTANT_ENCAPSED_STRING","'on'",904],["T_WHITESPACE"," ",904],["T_DOUBLE_ARROW","=>",904],["T_WHITESPACE"," ",904],["T_VARIABLE","$when",904],",",["T_WHITESPACE"," ",904],["T_CONSTANT_ENCAPSED_STRING","'message'",904],["T_WHITESPACE"," ",904],["T_DOUBLE_ARROW","=>",904],["T_WHITESPACE"," ",904],["T_VARIABLE","$message",904],"]",")",";",["T_WHITESPACE","\n\n        ",904],["T_RETURN","return",906],["T_WHITESPACE"," ",906],["T_VARIABLE","$this",906],["T_OBJECT_OPERATOR","->",906],["T_STRING","add",906],"(",["T_VARIABLE","$field",906],",",["T_WHITESPACE"," ",906],["T_CONSTANT_ENCAPSED_STRING","'sameAs'",906],",",["T_WHITESPACE"," ",906],["T_VARIABLE","$extra",906],["T_WHITESPACE"," ",906],"+",["T_WHITESPACE"," ",906],"[",["T_WHITESPACE","\n            ",906],["T_CONSTANT_ENCAPSED_STRING","'rule'",907],["T_WHITESPACE"," ",907],["T_DOUBLE_ARROW","=>",907],["T_WHITESPACE"," ",907],"[",["T_CONSTANT_ENCAPSED_STRING","'compareWith'",907],",",["T_WHITESPACE"," ",907],["T_VARIABLE","$secondField",907],"]",["T_WHITESPACE","\n        ",907],"]",")",";",["T_WHITESPACE","\n    ",908],"}",["T_WHITESPACE","\n\n    ",909],["T_DOC_COMMENT","\/**\n     * Add a rule to check if a field contains non alpha numeric characters.\n     *\n     * @param string $field The field you want to apply the rule to.\n     * @param int $limit The minimum number of non-alphanumeric fields required.\n     * @param string|null $message The error message when the rule fails.\n     * @param string|callable|null $when Either 'create' or 'update' or a callable that returns\n     *   true when the validation rule should be applied.\n     * @see \\Cake\\Validation\\Validation::containsNonAlphaNumeric()\n     * @return $this\n     *\/",911],["T_WHITESPACE","\n    ",921],["T_PUBLIC","public",922],["T_WHITESPACE"," ",922],["T_FUNCTION","function",922],["T_WHITESPACE"," ",922],["T_STRING","containsNonAlphaNumeric",922],"(",["T_VARIABLE","$field",922],",",["T_WHITESPACE"," ",922],["T_VARIABLE","$limit",922],["T_WHITESPACE"," ",922],"=",["T_WHITESPACE"," ",922],["T_LNUMBER","1",922],",",["T_WHITESPACE"," ",922],["T_VARIABLE","$message",922],["T_WHITESPACE"," ",922],"=",["T_WHITESPACE"," ",922],["T_STRING","null",922],",",["T_WHITESPACE"," ",922],["T_VARIABLE","$when",922],["T_WHITESPACE"," ",922],"=",["T_WHITESPACE"," ",922],["T_STRING","null",922],")",["T_WHITESPACE","\n    ",922],"{",["T_WHITESPACE","\n        ",923],["T_VARIABLE","$extra",924],["T_WHITESPACE"," ",924],"=",["T_WHITESPACE"," ",924],["T_STRING","array_filter",924],"(","[",["T_CONSTANT_ENCAPSED_STRING","'on'",924],["T_WHITESPACE"," ",924],["T_DOUBLE_ARROW","=>",924],["T_WHITESPACE"," ",924],["T_VARIABLE","$when",924],",",["T_WHITESPACE"," ",924],["T_CONSTANT_ENCAPSED_STRING","'message'",924],["T_WHITESPACE"," ",924],["T_DOUBLE_ARROW","=>",924],["T_WHITESPACE"," ",924],["T_VARIABLE","$message",924],"]",")",";",["T_WHITESPACE","\n\n        ",924],["T_RETURN","return",926],["T_WHITESPACE"," ",926],["T_VARIABLE","$this",926],["T_OBJECT_OPERATOR","->",926],["T_STRING","add",926],"(",["T_VARIABLE","$field",926],",",["T_WHITESPACE"," ",926],["T_CONSTANT_ENCAPSED_STRING","'containsNonAlphaNumeric'",926],",",["T_WHITESPACE"," ",926],["T_VARIABLE","$extra",926],["T_WHITESPACE"," ",926],"+",["T_WHITESPACE"," ",926],"[",["T_WHITESPACE","\n            ",926],["T_CONSTANT_ENCAPSED_STRING","'rule'",927],["T_WHITESPACE"," ",927],["T_DOUBLE_ARROW","=>",927],["T_WHITESPACE"," ",927],"[",["T_CONSTANT_ENCAPSED_STRING","'containsNonAlphaNumeric'",927],",",["T_WHITESPACE"," ",927],["T_VARIABLE","$limit",927],"]",["T_WHITESPACE","\n        ",927],"]",")",";",["T_WHITESPACE","\n    ",928],"}",["T_WHITESPACE","\n\n    ",929],["T_DOC_COMMENT","\/**\n     * Add a date format validation rule to a field.\n     *\n     * @param string $field The field you want to apply the rule to.\n     * @param array $formats A list of accepted date formats.\n     * @param string|null $message The error message when the rule fails.\n     * @param string|callable|null $when Either 'create' or 'update' or a callable that returns\n     *   true when the validation rule should be applied.\n     * @see \\Cake\\Validation\\Validation::date()\n     * @return $this\n     *\/",931],["T_WHITESPACE","\n    ",941],["T_PUBLIC","public",942],["T_WHITESPACE"," ",942],["T_FUNCTION","function",942],["T_WHITESPACE"," ",942],["T_STRING","date",942],"(",["T_VARIABLE","$field",942],",",["T_WHITESPACE"," ",942],["T_VARIABLE","$formats",942],["T_WHITESPACE"," ",942],"=",["T_WHITESPACE"," ",942],"[",["T_CONSTANT_ENCAPSED_STRING","'ymd'",942],"]",",",["T_WHITESPACE"," ",942],["T_VARIABLE","$message",942],["T_WHITESPACE"," ",942],"=",["T_WHITESPACE"," ",942],["T_STRING","null",942],",",["T_WHITESPACE"," ",942],["T_VARIABLE","$when",942],["T_WHITESPACE"," ",942],"=",["T_WHITESPACE"," ",942],["T_STRING","null",942],")",["T_WHITESPACE","\n    ",942],"{",["T_WHITESPACE","\n        ",943],["T_VARIABLE","$extra",944],["T_WHITESPACE"," ",944],"=",["T_WHITESPACE"," ",944],["T_STRING","array_filter",944],"(","[",["T_CONSTANT_ENCAPSED_STRING","'on'",944],["T_WHITESPACE"," ",944],["T_DOUBLE_ARROW","=>",944],["T_WHITESPACE"," ",944],["T_VARIABLE","$when",944],",",["T_WHITESPACE"," ",944],["T_CONSTANT_ENCAPSED_STRING","'message'",944],["T_WHITESPACE"," ",944],["T_DOUBLE_ARROW","=>",944],["T_WHITESPACE"," ",944],["T_VARIABLE","$message",944],"]",")",";",["T_WHITESPACE","\n\n        ",944],["T_RETURN","return",946],["T_WHITESPACE"," ",946],["T_VARIABLE","$this",946],["T_OBJECT_OPERATOR","->",946],["T_STRING","add",946],"(",["T_VARIABLE","$field",946],",",["T_WHITESPACE"," ",946],["T_CONSTANT_ENCAPSED_STRING","'date'",946],",",["T_WHITESPACE"," ",946],["T_VARIABLE","$extra",946],["T_WHITESPACE"," ",946],"+",["T_WHITESPACE"," ",946],"[",["T_WHITESPACE","\n            ",946],["T_CONSTANT_ENCAPSED_STRING","'rule'",947],["T_WHITESPACE"," ",947],["T_DOUBLE_ARROW","=>",947],["T_WHITESPACE"," ",947],"[",["T_CONSTANT_ENCAPSED_STRING","'date'",947],",",["T_WHITESPACE"," ",947],["T_VARIABLE","$formats",947],"]",["T_WHITESPACE","\n        ",947],"]",")",";",["T_WHITESPACE","\n    ",948],"}",["T_WHITESPACE","\n\n    ",949],["T_DOC_COMMENT","\/**\n     * Add a date time format validation rule to a field.\n     *\n     * @param string $field The field you want to apply the rule to.\n     * @param array $formats A list of accepted date formats.\n     * @param string|null $message The error message when the rule fails.\n     * @param string|callable|null $when Either 'create' or 'update' or a callable that returns\n     *   true when the validation rule should be applied.\n     * @see \\Cake\\Validation\\Validation::datetime()\n     * @return $this\n     *\/",951],["T_WHITESPACE","\n    ",961],["T_PUBLIC","public",962],["T_WHITESPACE"," ",962],["T_FUNCTION","function",962],["T_WHITESPACE"," ",962],["T_STRING","dateTime",962],"(",["T_VARIABLE","$field",962],",",["T_WHITESPACE"," ",962],["T_VARIABLE","$formats",962],["T_WHITESPACE"," ",962],"=",["T_WHITESPACE"," ",962],"[",["T_CONSTANT_ENCAPSED_STRING","'ymd'",962],"]",",",["T_WHITESPACE"," ",962],["T_VARIABLE","$message",962],["T_WHITESPACE"," ",962],"=",["T_WHITESPACE"," ",962],["T_STRING","null",962],",",["T_WHITESPACE"," ",962],["T_VARIABLE","$when",962],["T_WHITESPACE"," ",962],"=",["T_WHITESPACE"," ",962],["T_STRING","null",962],")",["T_WHITESPACE","\n    ",962],"{",["T_WHITESPACE","\n        ",963],["T_VARIABLE","$extra",964],["T_WHITESPACE"," ",964],"=",["T_WHITESPACE"," ",964],["T_STRING","array_filter",964],"(","[",["T_CONSTANT_ENCAPSED_STRING","'on'",964],["T_WHITESPACE"," ",964],["T_DOUBLE_ARROW","=>",964],["T_WHITESPACE"," ",964],["T_VARIABLE","$when",964],",",["T_WHITESPACE"," ",964],["T_CONSTANT_ENCAPSED_STRING","'message'",964],["T_WHITESPACE"," ",964],["T_DOUBLE_ARROW","=>",964],["T_WHITESPACE"," ",964],["T_VARIABLE","$message",964],"]",")",";",["T_WHITESPACE","\n\n        ",964],["T_RETURN","return",966],["T_WHITESPACE"," ",966],["T_VARIABLE","$this",966],["T_OBJECT_OPERATOR","->",966],["T_STRING","add",966],"(",["T_VARIABLE","$field",966],",",["T_WHITESPACE"," ",966],["T_CONSTANT_ENCAPSED_STRING","'dateTime'",966],",",["T_WHITESPACE"," ",966],["T_VARIABLE","$extra",966],["T_WHITESPACE"," ",966],"+",["T_WHITESPACE"," ",966],"[",["T_WHITESPACE","\n            ",966],["T_CONSTANT_ENCAPSED_STRING","'rule'",967],["T_WHITESPACE"," ",967],["T_DOUBLE_ARROW","=>",967],["T_WHITESPACE"," ",967],"[",["T_CONSTANT_ENCAPSED_STRING","'datetime'",967],",",["T_WHITESPACE"," ",967],["T_VARIABLE","$formats",967],"]",["T_WHITESPACE","\n        ",967],"]",")",";",["T_WHITESPACE","\n    ",968],"}",["T_WHITESPACE","\n\n    ",969],["T_DOC_COMMENT","\/**\n     * Add a time format validation rule to a field.\n     *\n     * @param string $field The field you want to apply the rule to.\n     * @param string|null $message The error message when the rule fails.\n     * @param string|callable|null $when Either 'create' or 'update' or a callable that returns\n     *   true when the validation rule should be applied.\n     * @see \\Cake\\Validation\\Validation::time()\n     * @return $this\n     *\/",971],["T_WHITESPACE","\n    ",980],["T_PUBLIC","public",981],["T_WHITESPACE"," ",981],["T_FUNCTION","function",981],["T_WHITESPACE"," ",981],["T_STRING","time",981],"(",["T_VARIABLE","$field",981],",",["T_WHITESPACE"," ",981],["T_VARIABLE","$message",981],["T_WHITESPACE"," ",981],"=",["T_WHITESPACE"," ",981],["T_STRING","null",981],",",["T_WHITESPACE"," ",981],["T_VARIABLE","$when",981],["T_WHITESPACE"," ",981],"=",["T_WHITESPACE"," ",981],["T_STRING","null",981],")",["T_WHITESPACE","\n    ",981],"{",["T_WHITESPACE","\n        ",982],["T_VARIABLE","$extra",983],["T_WHITESPACE"," ",983],"=",["T_WHITESPACE"," ",983],["T_STRING","array_filter",983],"(","[",["T_CONSTANT_ENCAPSED_STRING","'on'",983],["T_WHITESPACE"," ",983],["T_DOUBLE_ARROW","=>",983],["T_WHITESPACE"," ",983],["T_VARIABLE","$when",983],",",["T_WHITESPACE"," ",983],["T_CONSTANT_ENCAPSED_STRING","'message'",983],["T_WHITESPACE"," ",983],["T_DOUBLE_ARROW","=>",983],["T_WHITESPACE"," ",983],["T_VARIABLE","$message",983],"]",")",";",["T_WHITESPACE","\n\n        ",983],["T_RETURN","return",985],["T_WHITESPACE"," ",985],["T_VARIABLE","$this",985],["T_OBJECT_OPERATOR","->",985],["T_STRING","add",985],"(",["T_VARIABLE","$field",985],",",["T_WHITESPACE"," ",985],["T_CONSTANT_ENCAPSED_STRING","'time'",985],",",["T_WHITESPACE"," ",985],["T_VARIABLE","$extra",985],["T_WHITESPACE"," ",985],"+",["T_WHITESPACE"," ",985],"[",["T_WHITESPACE","\n            ",985],["T_CONSTANT_ENCAPSED_STRING","'rule'",986],["T_WHITESPACE"," ",986],["T_DOUBLE_ARROW","=>",986],["T_WHITESPACE"," ",986],["T_CONSTANT_ENCAPSED_STRING","'time'",986],["T_WHITESPACE","\n        ",986],"]",")",";",["T_WHITESPACE","\n    ",987],"}",["T_WHITESPACE","\n\n    ",988],["T_DOC_COMMENT","\/**\n     * Add a localized time, date or datetime format validation rule to a field.\n     *\n     * @param string $field The field you want to apply the rule to.\n     * @param string $type Parser type, one out of 'date', 'time', and 'datetime'\n     * @param string|null $message The error message when the rule fails.\n     * @param string|callable|null $when Either 'create' or 'update' or a callable that returns\n     *   true when the validation rule should be applied.\n     * @see \\Cake\\Validation\\Validation::localizedTime()\n     * @return $this\n     *\/",990],["T_WHITESPACE","\n    ",1000],["T_PUBLIC","public",1001],["T_WHITESPACE"," ",1001],["T_FUNCTION","function",1001],["T_WHITESPACE"," ",1001],["T_STRING","localizedTime",1001],"(",["T_VARIABLE","$field",1001],",",["T_WHITESPACE"," ",1001],["T_VARIABLE","$type",1001],["T_WHITESPACE"," ",1001],"=",["T_WHITESPACE"," ",1001],["T_CONSTANT_ENCAPSED_STRING","'datetime'",1001],",",["T_WHITESPACE"," ",1001],["T_VARIABLE","$message",1001],["T_WHITESPACE"," ",1001],"=",["T_WHITESPACE"," ",1001],["T_STRING","null",1001],",",["T_WHITESPACE"," ",1001],["T_VARIABLE","$when",1001],["T_WHITESPACE"," ",1001],"=",["T_WHITESPACE"," ",1001],["T_STRING","null",1001],")",["T_WHITESPACE","\n    ",1001],"{",["T_WHITESPACE","\n        ",1002],["T_VARIABLE","$extra",1003],["T_WHITESPACE"," ",1003],"=",["T_WHITESPACE"," ",1003],["T_STRING","array_filter",1003],"(","[",["T_CONSTANT_ENCAPSED_STRING","'on'",1003],["T_WHITESPACE"," ",1003],["T_DOUBLE_ARROW","=>",1003],["T_WHITESPACE"," ",1003],["T_VARIABLE","$when",1003],",",["T_WHITESPACE"," ",1003],["T_CONSTANT_ENCAPSED_STRING","'message'",1003],["T_WHITESPACE"," ",1003],["T_DOUBLE_ARROW","=>",1003],["T_WHITESPACE"," ",1003],["T_VARIABLE","$message",1003],"]",")",";",["T_WHITESPACE","\n\n        ",1003],["T_RETURN","return",1005],["T_WHITESPACE"," ",1005],["T_VARIABLE","$this",1005],["T_OBJECT_OPERATOR","->",1005],["T_STRING","add",1005],"(",["T_VARIABLE","$field",1005],",",["T_WHITESPACE"," ",1005],["T_CONSTANT_ENCAPSED_STRING","'localizedTime'",1005],",",["T_WHITESPACE"," ",1005],["T_VARIABLE","$extra",1005],["T_WHITESPACE"," ",1005],"+",["T_WHITESPACE"," ",1005],"[",["T_WHITESPACE","\n            ",1005],["T_CONSTANT_ENCAPSED_STRING","'rule'",1006],["T_WHITESPACE"," ",1006],["T_DOUBLE_ARROW","=>",1006],["T_WHITESPACE"," ",1006],"[",["T_CONSTANT_ENCAPSED_STRING","'localizedTime'",1006],",",["T_WHITESPACE"," ",1006],["T_VARIABLE","$type",1006],"]",["T_WHITESPACE","\n        ",1006],"]",")",";",["T_WHITESPACE","\n    ",1007],"}",["T_WHITESPACE","\n\n    ",1008],["T_DOC_COMMENT","\/**\n     * Add a boolean validation rule to a field.\n     *\n     * @param string $field The field you want to apply the rule to.\n     * @param string|null $message The error message when the rule fails.\n     * @param string|callable|null $when Either 'create' or 'update' or a callable that returns\n     *   true when the validation rule should be applied.\n     * @see \\Cake\\Validation\\Validation::boolean()\n     * @return $this\n     *\/",1010],["T_WHITESPACE","\n    ",1019],["T_PUBLIC","public",1020],["T_WHITESPACE"," ",1020],["T_FUNCTION","function",1020],["T_WHITESPACE"," ",1020],["T_STRING","boolean",1020],"(",["T_VARIABLE","$field",1020],",",["T_WHITESPACE"," ",1020],["T_VARIABLE","$message",1020],["T_WHITESPACE"," ",1020],"=",["T_WHITESPACE"," ",1020],["T_STRING","null",1020],",",["T_WHITESPACE"," ",1020],["T_VARIABLE","$when",1020],["T_WHITESPACE"," ",1020],"=",["T_WHITESPACE"," ",1020],["T_STRING","null",1020],")",["T_WHITESPACE","\n    ",1020],"{",["T_WHITESPACE","\n        ",1021],["T_VARIABLE","$extra",1022],["T_WHITESPACE"," ",1022],"=",["T_WHITESPACE"," ",1022],["T_STRING","array_filter",1022],"(","[",["T_CONSTANT_ENCAPSED_STRING","'on'",1022],["T_WHITESPACE"," ",1022],["T_DOUBLE_ARROW","=>",1022],["T_WHITESPACE"," ",1022],["T_VARIABLE","$when",1022],",",["T_WHITESPACE"," ",1022],["T_CONSTANT_ENCAPSED_STRING","'message'",1022],["T_WHITESPACE"," ",1022],["T_DOUBLE_ARROW","=>",1022],["T_WHITESPACE"," ",1022],["T_VARIABLE","$message",1022],"]",")",";",["T_WHITESPACE","\n\n        ",1022],["T_RETURN","return",1024],["T_WHITESPACE"," ",1024],["T_VARIABLE","$this",1024],["T_OBJECT_OPERATOR","->",1024],["T_STRING","add",1024],"(",["T_VARIABLE","$field",1024],",",["T_WHITESPACE"," ",1024],["T_CONSTANT_ENCAPSED_STRING","'boolean'",1024],",",["T_WHITESPACE"," ",1024],["T_VARIABLE","$extra",1024],["T_WHITESPACE"," ",1024],"+",["T_WHITESPACE"," ",1024],"[",["T_WHITESPACE","\n            ",1024],["T_CONSTANT_ENCAPSED_STRING","'rule'",1025],["T_WHITESPACE"," ",1025],["T_DOUBLE_ARROW","=>",1025],["T_WHITESPACE"," ",1025],["T_CONSTANT_ENCAPSED_STRING","'boolean'",1025],["T_WHITESPACE","\n        ",1025],"]",")",";",["T_WHITESPACE","\n    ",1026],"}",["T_WHITESPACE","\n\n    ",1027],["T_DOC_COMMENT","\/**\n     * Add a decimal validation rule to a field.\n     *\n     * @param string $field The field you want to apply the rule to.\n     * @param int|null $places The number of decimal places to require.\n     * @param string|null $message The error message when the rule fails.\n     * @param string|callable|null $when Either 'create' or 'update' or a callable that returns\n     *   true when the validation rule should be applied.\n     * @see \\Cake\\Validation\\Validation::decimal()\n     * @return $this\n     *\/",1029],["T_WHITESPACE","\n    ",1039],["T_PUBLIC","public",1040],["T_WHITESPACE"," ",1040],["T_FUNCTION","function",1040],["T_WHITESPACE"," ",1040],["T_STRING","decimal",1040],"(",["T_VARIABLE","$field",1040],",",["T_WHITESPACE"," ",1040],["T_VARIABLE","$places",1040],["T_WHITESPACE"," ",1040],"=",["T_WHITESPACE"," ",1040],["T_STRING","null",1040],",",["T_WHITESPACE"," ",1040],["T_VARIABLE","$message",1040],["T_WHITESPACE"," ",1040],"=",["T_WHITESPACE"," ",1040],["T_STRING","null",1040],",",["T_WHITESPACE"," ",1040],["T_VARIABLE","$when",1040],["T_WHITESPACE"," ",1040],"=",["T_WHITESPACE"," ",1040],["T_STRING","null",1040],")",["T_WHITESPACE","\n    ",1040],"{",["T_WHITESPACE","\n        ",1041],["T_VARIABLE","$extra",1042],["T_WHITESPACE"," ",1042],"=",["T_WHITESPACE"," ",1042],["T_STRING","array_filter",1042],"(","[",["T_CONSTANT_ENCAPSED_STRING","'on'",1042],["T_WHITESPACE"," ",1042],["T_DOUBLE_ARROW","=>",1042],["T_WHITESPACE"," ",1042],["T_VARIABLE","$when",1042],",",["T_WHITESPACE"," ",1042],["T_CONSTANT_ENCAPSED_STRING","'message'",1042],["T_WHITESPACE"," ",1042],["T_DOUBLE_ARROW","=>",1042],["T_WHITESPACE"," ",1042],["T_VARIABLE","$message",1042],"]",")",";",["T_WHITESPACE","\n\n        ",1042],["T_RETURN","return",1044],["T_WHITESPACE"," ",1044],["T_VARIABLE","$this",1044],["T_OBJECT_OPERATOR","->",1044],["T_STRING","add",1044],"(",["T_VARIABLE","$field",1044],",",["T_WHITESPACE"," ",1044],["T_CONSTANT_ENCAPSED_STRING","'decimal'",1044],",",["T_WHITESPACE"," ",1044],["T_VARIABLE","$extra",1044],["T_WHITESPACE"," ",1044],"+",["T_WHITESPACE"," ",1044],"[",["T_WHITESPACE","\n            ",1044],["T_CONSTANT_ENCAPSED_STRING","'rule'",1045],["T_WHITESPACE"," ",1045],["T_DOUBLE_ARROW","=>",1045],["T_WHITESPACE"," ",1045],"[",["T_CONSTANT_ENCAPSED_STRING","'decimal'",1045],",",["T_WHITESPACE"," ",1045],["T_VARIABLE","$places",1045],"]",["T_WHITESPACE","\n        ",1045],"]",")",";",["T_WHITESPACE","\n    ",1046],"}",["T_WHITESPACE","\n\n    ",1047],["T_DOC_COMMENT","\/**\n     * Add an email validation rule to a field.\n     *\n     * @param string $field The field you want to apply the rule to.\n     * @param bool $checkMX Whether or not to check the MX records.\n     * @param string|null $message The error message when the rule fails.\n     * @param string|callable|null $when Either 'create' or 'update' or a callable that returns\n     *   true when the validation rule should be applied.\n     * @see \\Cake\\Validation\\Validation::email()\n     * @return $this\n     *\/",1049],["T_WHITESPACE","\n    ",1059],["T_PUBLIC","public",1060],["T_WHITESPACE"," ",1060],["T_FUNCTION","function",1060],["T_WHITESPACE"," ",1060],["T_STRING","email",1060],"(",["T_VARIABLE","$field",1060],",",["T_WHITESPACE"," ",1060],["T_VARIABLE","$checkMX",1060],["T_WHITESPACE"," ",1060],"=",["T_WHITESPACE"," ",1060],["T_STRING","false",1060],",",["T_WHITESPACE"," ",1060],["T_VARIABLE","$message",1060],["T_WHITESPACE"," ",1060],"=",["T_WHITESPACE"," ",1060],["T_STRING","null",1060],",",["T_WHITESPACE"," ",1060],["T_VARIABLE","$when",1060],["T_WHITESPACE"," ",1060],"=",["T_WHITESPACE"," ",1060],["T_STRING","null",1060],")",["T_WHITESPACE","\n    ",1060],"{",["T_WHITESPACE","\n        ",1061],["T_VARIABLE","$extra",1062],["T_WHITESPACE"," ",1062],"=",["T_WHITESPACE"," ",1062],["T_STRING","array_filter",1062],"(","[",["T_CONSTANT_ENCAPSED_STRING","'on'",1062],["T_WHITESPACE"," ",1062],["T_DOUBLE_ARROW","=>",1062],["T_WHITESPACE"," ",1062],["T_VARIABLE","$when",1062],",",["T_WHITESPACE"," ",1062],["T_CONSTANT_ENCAPSED_STRING","'message'",1062],["T_WHITESPACE"," ",1062],["T_DOUBLE_ARROW","=>",1062],["T_WHITESPACE"," ",1062],["T_VARIABLE","$message",1062],"]",")",";",["T_WHITESPACE","\n\n        ",1062],["T_RETURN","return",1064],["T_WHITESPACE"," ",1064],["T_VARIABLE","$this",1064],["T_OBJECT_OPERATOR","->",1064],["T_STRING","add",1064],"(",["T_VARIABLE","$field",1064],",",["T_WHITESPACE"," ",1064],["T_CONSTANT_ENCAPSED_STRING","'email'",1064],",",["T_WHITESPACE"," ",1064],["T_VARIABLE","$extra",1064],["T_WHITESPACE"," ",1064],"+",["T_WHITESPACE"," ",1064],"[",["T_WHITESPACE","\n            ",1064],["T_CONSTANT_ENCAPSED_STRING","'rule'",1065],["T_WHITESPACE"," ",1065],["T_DOUBLE_ARROW","=>",1065],["T_WHITESPACE"," ",1065],"[",["T_CONSTANT_ENCAPSED_STRING","'email'",1065],",",["T_WHITESPACE"," ",1065],["T_VARIABLE","$checkMX",1065],"]",["T_WHITESPACE","\n        ",1065],"]",")",";",["T_WHITESPACE","\n    ",1066],"}",["T_WHITESPACE","\n\n    ",1067],["T_DOC_COMMENT","\/**\n     * Add an IP validation rule to a field.\n     *\n     * This rule will accept both IPv4 and IPv6 addresses.\n     *\n     * @param string $field The field you want to apply the rule to.\n     * @param string|null $message The error message when the rule fails.\n     * @param string|callable|null $when Either 'create' or 'update' or a callable that returns\n     *   true when the validation rule should be applied.\n     * @see \\Cake\\Validation\\Validation::ip()\n     * @return $this\n     *\/",1069],["T_WHITESPACE","\n    ",1080],["T_PUBLIC","public",1081],["T_WHITESPACE"," ",1081],["T_FUNCTION","function",1081],["T_WHITESPACE"," ",1081],["T_STRING","ip",1081],"(",["T_VARIABLE","$field",1081],",",["T_WHITESPACE"," ",1081],["T_VARIABLE","$message",1081],["T_WHITESPACE"," ",1081],"=",["T_WHITESPACE"," ",1081],["T_STRING","null",1081],",",["T_WHITESPACE"," ",1081],["T_VARIABLE","$when",1081],["T_WHITESPACE"," ",1081],"=",["T_WHITESPACE"," ",1081],["T_STRING","null",1081],")",["T_WHITESPACE","\n    ",1081],"{",["T_WHITESPACE","\n        ",1082],["T_VARIABLE","$extra",1083],["T_WHITESPACE"," ",1083],"=",["T_WHITESPACE"," ",1083],["T_STRING","array_filter",1083],"(","[",["T_CONSTANT_ENCAPSED_STRING","'on'",1083],["T_WHITESPACE"," ",1083],["T_DOUBLE_ARROW","=>",1083],["T_WHITESPACE"," ",1083],["T_VARIABLE","$when",1083],",",["T_WHITESPACE"," ",1083],["T_CONSTANT_ENCAPSED_STRING","'message'",1083],["T_WHITESPACE"," ",1083],["T_DOUBLE_ARROW","=>",1083],["T_WHITESPACE"," ",1083],["T_VARIABLE","$message",1083],"]",")",";",["T_WHITESPACE","\n\n        ",1083],["T_RETURN","return",1085],["T_WHITESPACE"," ",1085],["T_VARIABLE","$this",1085],["T_OBJECT_OPERATOR","->",1085],["T_STRING","add",1085],"(",["T_VARIABLE","$field",1085],",",["T_WHITESPACE"," ",1085],["T_CONSTANT_ENCAPSED_STRING","'ip'",1085],",",["T_WHITESPACE"," ",1085],["T_VARIABLE","$extra",1085],["T_WHITESPACE"," ",1085],"+",["T_WHITESPACE"," ",1085],"[",["T_WHITESPACE","\n            ",1085],["T_CONSTANT_ENCAPSED_STRING","'rule'",1086],["T_WHITESPACE"," ",1086],["T_DOUBLE_ARROW","=>",1086],["T_WHITESPACE"," ",1086],["T_CONSTANT_ENCAPSED_STRING","'ip'",1086],["T_WHITESPACE","\n        ",1086],"]",")",";",["T_WHITESPACE","\n    ",1087],"}",["T_WHITESPACE","\n\n    ",1088],["T_DOC_COMMENT","\/**\n     * Add an IPv4 validation rule to a field.\n     *\n     * @param string $field The field you want to apply the rule to.\n     * @param string|null $message The error message when the rule fails.\n     * @param string|callable|null $when Either 'create' or 'update' or a callable that returns\n     *   true when the validation rule should be applied.\n     * @see \\Cake\\Validation\\Validation::ip()\n     * @return $this\n     *\/",1090],["T_WHITESPACE","\n    ",1099],["T_PUBLIC","public",1100],["T_WHITESPACE"," ",1100],["T_FUNCTION","function",1100],["T_WHITESPACE"," ",1100],["T_STRING","ipv4",1100],"(",["T_VARIABLE","$field",1100],",",["T_WHITESPACE"," ",1100],["T_VARIABLE","$message",1100],["T_WHITESPACE"," ",1100],"=",["T_WHITESPACE"," ",1100],["T_STRING","null",1100],",",["T_WHITESPACE"," ",1100],["T_VARIABLE","$when",1100],["T_WHITESPACE"," ",1100],"=",["T_WHITESPACE"," ",1100],["T_STRING","null",1100],")",["T_WHITESPACE","\n    ",1100],"{",["T_WHITESPACE","\n        ",1101],["T_VARIABLE","$extra",1102],["T_WHITESPACE"," ",1102],"=",["T_WHITESPACE"," ",1102],["T_STRING","array_filter",1102],"(","[",["T_CONSTANT_ENCAPSED_STRING","'on'",1102],["T_WHITESPACE"," ",1102],["T_DOUBLE_ARROW","=>",1102],["T_WHITESPACE"," ",1102],["T_VARIABLE","$when",1102],",",["T_WHITESPACE"," ",1102],["T_CONSTANT_ENCAPSED_STRING","'message'",1102],["T_WHITESPACE"," ",1102],["T_DOUBLE_ARROW","=>",1102],["T_WHITESPACE"," ",1102],["T_VARIABLE","$message",1102],"]",")",";",["T_WHITESPACE","\n\n        ",1102],["T_RETURN","return",1104],["T_WHITESPACE"," ",1104],["T_VARIABLE","$this",1104],["T_OBJECT_OPERATOR","->",1104],["T_STRING","add",1104],"(",["T_VARIABLE","$field",1104],",",["T_WHITESPACE"," ",1104],["T_CONSTANT_ENCAPSED_STRING","'ipv4'",1104],",",["T_WHITESPACE"," ",1104],["T_VARIABLE","$extra",1104],["T_WHITESPACE"," ",1104],"+",["T_WHITESPACE"," ",1104],"[",["T_WHITESPACE","\n            ",1104],["T_CONSTANT_ENCAPSED_STRING","'rule'",1105],["T_WHITESPACE"," ",1105],["T_DOUBLE_ARROW","=>",1105],["T_WHITESPACE"," ",1105],"[",["T_CONSTANT_ENCAPSED_STRING","'ip'",1105],",",["T_WHITESPACE"," ",1105],["T_CONSTANT_ENCAPSED_STRING","'ipv4'",1105],"]",["T_WHITESPACE","\n        ",1105],"]",")",";",["T_WHITESPACE","\n    ",1106],"}",["T_WHITESPACE","\n\n    ",1107],["T_DOC_COMMENT","\/**\n     * Add an IPv6 validation rule to a field.\n     *\n     * @param string $field The field you want to apply the rule to.\n     * @param string|null $message The error message when the rule fails.\n     * @param string|callable|null $when Either 'create' or 'update' or a callable that returns\n     *   true when the validation rule should be applied.\n     * @see \\Cake\\Validation\\Validation::ip()\n     * @return $this\n     *\/",1109],["T_WHITESPACE","\n    ",1118],["T_PUBLIC","public",1119],["T_WHITESPACE"," ",1119],["T_FUNCTION","function",1119],["T_WHITESPACE"," ",1119],["T_STRING","ipv6",1119],"(",["T_VARIABLE","$field",1119],",",["T_WHITESPACE"," ",1119],["T_VARIABLE","$message",1119],["T_WHITESPACE"," ",1119],"=",["T_WHITESPACE"," ",1119],["T_STRING","null",1119],",",["T_WHITESPACE"," ",1119],["T_VARIABLE","$when",1119],["T_WHITESPACE"," ",1119],"=",["T_WHITESPACE"," ",1119],["T_STRING","null",1119],")",["T_WHITESPACE","\n    ",1119],"{",["T_WHITESPACE","\n        ",1120],["T_VARIABLE","$extra",1121],["T_WHITESPACE"," ",1121],"=",["T_WHITESPACE"," ",1121],["T_STRING","array_filter",1121],"(","[",["T_CONSTANT_ENCAPSED_STRING","'on'",1121],["T_WHITESPACE"," ",1121],["T_DOUBLE_ARROW","=>",1121],["T_WHITESPACE"," ",1121],["T_VARIABLE","$when",1121],",",["T_WHITESPACE"," ",1121],["T_CONSTANT_ENCAPSED_STRING","'message'",1121],["T_WHITESPACE"," ",1121],["T_DOUBLE_ARROW","=>",1121],["T_WHITESPACE"," ",1121],["T_VARIABLE","$message",1121],"]",")",";",["T_WHITESPACE","\n\n        ",1121],["T_RETURN","return",1123],["T_WHITESPACE"," ",1123],["T_VARIABLE","$this",1123],["T_OBJECT_OPERATOR","->",1123],["T_STRING","add",1123],"(",["T_VARIABLE","$field",1123],",",["T_WHITESPACE"," ",1123],["T_CONSTANT_ENCAPSED_STRING","'ipv6'",1123],",",["T_WHITESPACE"," ",1123],["T_VARIABLE","$extra",1123],["T_WHITESPACE"," ",1123],"+",["T_WHITESPACE"," ",1123],"[",["T_WHITESPACE","\n            ",1123],["T_CONSTANT_ENCAPSED_STRING","'rule'",1124],["T_WHITESPACE"," ",1124],["T_DOUBLE_ARROW","=>",1124],["T_WHITESPACE"," ",1124],"[",["T_CONSTANT_ENCAPSED_STRING","'ip'",1124],",",["T_WHITESPACE"," ",1124],["T_CONSTANT_ENCAPSED_STRING","'ipv6'",1124],"]",["T_WHITESPACE","\n        ",1124],"]",")",";",["T_WHITESPACE","\n    ",1125],"}",["T_WHITESPACE","\n\n    ",1126],["T_DOC_COMMENT","\/**\n     * Add a string length validation rule to a field.\n     *\n     * @param string $field The field you want to apply the rule to.\n     * @param int $min The minimum length required.\n     * @param string|null $message The error message when the rule fails.\n     * @param string|callable|null $when Either 'create' or 'update' or a callable that returns\n     *   true when the validation rule should be applied.\n     * @see \\Cake\\Validation\\Validation::minLength()\n     * @return $this\n     *\/",1128],["T_WHITESPACE","\n    ",1138],["T_PUBLIC","public",1139],["T_WHITESPACE"," ",1139],["T_FUNCTION","function",1139],["T_WHITESPACE"," ",1139],["T_STRING","minLength",1139],"(",["T_VARIABLE","$field",1139],",",["T_WHITESPACE"," ",1139],["T_VARIABLE","$min",1139],",",["T_WHITESPACE"," ",1139],["T_VARIABLE","$message",1139],["T_WHITESPACE"," ",1139],"=",["T_WHITESPACE"," ",1139],["T_STRING","null",1139],",",["T_WHITESPACE"," ",1139],["T_VARIABLE","$when",1139],["T_WHITESPACE"," ",1139],"=",["T_WHITESPACE"," ",1139],["T_STRING","null",1139],")",["T_WHITESPACE","\n    ",1139],"{",["T_WHITESPACE","\n        ",1140],["T_VARIABLE","$extra",1141],["T_WHITESPACE"," ",1141],"=",["T_WHITESPACE"," ",1141],["T_STRING","array_filter",1141],"(","[",["T_CONSTANT_ENCAPSED_STRING","'on'",1141],["T_WHITESPACE"," ",1141],["T_DOUBLE_ARROW","=>",1141],["T_WHITESPACE"," ",1141],["T_VARIABLE","$when",1141],",",["T_WHITESPACE"," ",1141],["T_CONSTANT_ENCAPSED_STRING","'message'",1141],["T_WHITESPACE"," ",1141],["T_DOUBLE_ARROW","=>",1141],["T_WHITESPACE"," ",1141],["T_VARIABLE","$message",1141],"]",")",";",["T_WHITESPACE","\n\n        ",1141],["T_RETURN","return",1143],["T_WHITESPACE"," ",1143],["T_VARIABLE","$this",1143],["T_OBJECT_OPERATOR","->",1143],["T_STRING","add",1143],"(",["T_VARIABLE","$field",1143],",",["T_WHITESPACE"," ",1143],["T_CONSTANT_ENCAPSED_STRING","'minLength'",1143],",",["T_WHITESPACE"," ",1143],["T_VARIABLE","$extra",1143],["T_WHITESPACE"," ",1143],"+",["T_WHITESPACE"," ",1143],"[",["T_WHITESPACE","\n            ",1143],["T_CONSTANT_ENCAPSED_STRING","'rule'",1144],["T_WHITESPACE"," ",1144],["T_DOUBLE_ARROW","=>",1144],["T_WHITESPACE"," ",1144],"[",["T_CONSTANT_ENCAPSED_STRING","'minLength'",1144],",",["T_WHITESPACE"," ",1144],["T_VARIABLE","$min",1144],"]",["T_WHITESPACE","\n        ",1144],"]",")",";",["T_WHITESPACE","\n    ",1145],"}",["T_WHITESPACE","\n\n    ",1146],["T_DOC_COMMENT","\/**\n     * Add a string length validation rule to a field.\n     *\n     * @param string $field The field you want to apply the rule to.\n     * @param int $min The minimum length required.\n     * @param string|null $message The error message when the rule fails.\n     * @param string|callable|null $when Either 'create' or 'update' or a callable that returns\n     *   true when the validation rule should be applied.\n     * @see \\Cake\\Validation\\Validation::minLengthBytes()\n     * @return $this\n     *\/",1148],["T_WHITESPACE","\n    ",1158],["T_PUBLIC","public",1159],["T_WHITESPACE"," ",1159],["T_FUNCTION","function",1159],["T_WHITESPACE"," ",1159],["T_STRING","minLengthBytes",1159],"(",["T_VARIABLE","$field",1159],",",["T_WHITESPACE"," ",1159],["T_VARIABLE","$min",1159],",",["T_WHITESPACE"," ",1159],["T_VARIABLE","$message",1159],["T_WHITESPACE"," ",1159],"=",["T_WHITESPACE"," ",1159],["T_STRING","null",1159],",",["T_WHITESPACE"," ",1159],["T_VARIABLE","$when",1159],["T_WHITESPACE"," ",1159],"=",["T_WHITESPACE"," ",1159],["T_STRING","null",1159],")",["T_WHITESPACE","\n    ",1159],"{",["T_WHITESPACE","\n        ",1160],["T_VARIABLE","$extra",1161],["T_WHITESPACE"," ",1161],"=",["T_WHITESPACE"," ",1161],["T_STRING","array_filter",1161],"(","[",["T_CONSTANT_ENCAPSED_STRING","'on'",1161],["T_WHITESPACE"," ",1161],["T_DOUBLE_ARROW","=>",1161],["T_WHITESPACE"," ",1161],["T_VARIABLE","$when",1161],",",["T_WHITESPACE"," ",1161],["T_CONSTANT_ENCAPSED_STRING","'message'",1161],["T_WHITESPACE"," ",1161],["T_DOUBLE_ARROW","=>",1161],["T_WHITESPACE"," ",1161],["T_VARIABLE","$message",1161],"]",")",";",["T_WHITESPACE","\n\n        ",1161],["T_RETURN","return",1163],["T_WHITESPACE"," ",1163],["T_VARIABLE","$this",1163],["T_OBJECT_OPERATOR","->",1163],["T_STRING","add",1163],"(",["T_VARIABLE","$field",1163],",",["T_WHITESPACE"," ",1163],["T_CONSTANT_ENCAPSED_STRING","'minLengthBytes'",1163],",",["T_WHITESPACE"," ",1163],["T_VARIABLE","$extra",1163],["T_WHITESPACE"," ",1163],"+",["T_WHITESPACE"," ",1163],"[",["T_WHITESPACE","\n            ",1163],["T_CONSTANT_ENCAPSED_STRING","'rule'",1164],["T_WHITESPACE"," ",1164],["T_DOUBLE_ARROW","=>",1164],["T_WHITESPACE"," ",1164],"[",["T_CONSTANT_ENCAPSED_STRING","'minLengthBytes'",1164],",",["T_WHITESPACE"," ",1164],["T_VARIABLE","$min",1164],"]",["T_WHITESPACE","\n        ",1164],"]",")",";",["T_WHITESPACE","\n    ",1165],"}",["T_WHITESPACE","\n\n    ",1166],["T_DOC_COMMENT","\/**\n     * Add a string length validation rule to a field.\n     *\n     * @param string $field The field you want to apply the rule to.\n     * @param int $max The maximum length allowed.\n     * @param string|null $message The error message when the rule fails.\n     * @param string|callable|null $when Either 'create' or 'update' or a callable that returns\n     *   true when the validation rule should be applied.\n     * @see \\Cake\\Validation\\Validation::maxLength()\n     * @return $this\n     *\/",1168],["T_WHITESPACE","\n    ",1178],["T_PUBLIC","public",1179],["T_WHITESPACE"," ",1179],["T_FUNCTION","function",1179],["T_WHITESPACE"," ",1179],["T_STRING","maxLength",1179],"(",["T_VARIABLE","$field",1179],",",["T_WHITESPACE"," ",1179],["T_VARIABLE","$max",1179],",",["T_WHITESPACE"," ",1179],["T_VARIABLE","$message",1179],["T_WHITESPACE"," ",1179],"=",["T_WHITESPACE"," ",1179],["T_STRING","null",1179],",",["T_WHITESPACE"," ",1179],["T_VARIABLE","$when",1179],["T_WHITESPACE"," ",1179],"=",["T_WHITESPACE"," ",1179],["T_STRING","null",1179],")",["T_WHITESPACE","\n    ",1179],"{",["T_WHITESPACE","\n        ",1180],["T_VARIABLE","$extra",1181],["T_WHITESPACE"," ",1181],"=",["T_WHITESPACE"," ",1181],["T_STRING","array_filter",1181],"(","[",["T_CONSTANT_ENCAPSED_STRING","'on'",1181],["T_WHITESPACE"," ",1181],["T_DOUBLE_ARROW","=>",1181],["T_WHITESPACE"," ",1181],["T_VARIABLE","$when",1181],",",["T_WHITESPACE"," ",1181],["T_CONSTANT_ENCAPSED_STRING","'message'",1181],["T_WHITESPACE"," ",1181],["T_DOUBLE_ARROW","=>",1181],["T_WHITESPACE"," ",1181],["T_VARIABLE","$message",1181],"]",")",";",["T_WHITESPACE","\n\n        ",1181],["T_RETURN","return",1183],["T_WHITESPACE"," ",1183],["T_VARIABLE","$this",1183],["T_OBJECT_OPERATOR","->",1183],["T_STRING","add",1183],"(",["T_VARIABLE","$field",1183],",",["T_WHITESPACE"," ",1183],["T_CONSTANT_ENCAPSED_STRING","'maxLength'",1183],",",["T_WHITESPACE"," ",1183],["T_VARIABLE","$extra",1183],["T_WHITESPACE"," ",1183],"+",["T_WHITESPACE"," ",1183],"[",["T_WHITESPACE","\n            ",1183],["T_CONSTANT_ENCAPSED_STRING","'rule'",1184],["T_WHITESPACE"," ",1184],["T_DOUBLE_ARROW","=>",1184],["T_WHITESPACE"," ",1184],"[",["T_CONSTANT_ENCAPSED_STRING","'maxLength'",1184],",",["T_WHITESPACE"," ",1184],["T_VARIABLE","$max",1184],"]",["T_WHITESPACE","\n        ",1184],"]",")",";",["T_WHITESPACE","\n    ",1185],"}",["T_WHITESPACE","\n\n    ",1186],["T_DOC_COMMENT","\/**\n     * Add a string length validation rule to a field.\n     *\n     * @param string $field The field you want to apply the rule to.\n     * @param int $max The maximum length allowed.\n     * @param string|null $message The error message when the rule fails.\n     * @param string|callable|null $when Either 'create' or 'update' or a callable that returns\n     *   true when the validation rule should be applied.\n     * @see \\Cake\\Validation\\Validation::maxLengthBytes()\n     * @return $this\n     *\/",1188],["T_WHITESPACE","\n    ",1198],["T_PUBLIC","public",1199],["T_WHITESPACE"," ",1199],["T_FUNCTION","function",1199],["T_WHITESPACE"," ",1199],["T_STRING","maxLengthBytes",1199],"(",["T_VARIABLE","$field",1199],",",["T_WHITESPACE"," ",1199],["T_VARIABLE","$max",1199],",",["T_WHITESPACE"," ",1199],["T_VARIABLE","$message",1199],["T_WHITESPACE"," ",1199],"=",["T_WHITESPACE"," ",1199],["T_STRING","null",1199],",",["T_WHITESPACE"," ",1199],["T_VARIABLE","$when",1199],["T_WHITESPACE"," ",1199],"=",["T_WHITESPACE"," ",1199],["T_STRING","null",1199],")",["T_WHITESPACE","\n    ",1199],"{",["T_WHITESPACE","\n        ",1200],["T_VARIABLE","$extra",1201],["T_WHITESPACE"," ",1201],"=",["T_WHITESPACE"," ",1201],["T_STRING","array_filter",1201],"(","[",["T_CONSTANT_ENCAPSED_STRING","'on'",1201],["T_WHITESPACE"," ",1201],["T_DOUBLE_ARROW","=>",1201],["T_WHITESPACE"," ",1201],["T_VARIABLE","$when",1201],",",["T_WHITESPACE"," ",1201],["T_CONSTANT_ENCAPSED_STRING","'message'",1201],["T_WHITESPACE"," ",1201],["T_DOUBLE_ARROW","=>",1201],["T_WHITESPACE"," ",1201],["T_VARIABLE","$message",1201],"]",")",";",["T_WHITESPACE","\n\n        ",1201],["T_RETURN","return",1203],["T_WHITESPACE"," ",1203],["T_VARIABLE","$this",1203],["T_OBJECT_OPERATOR","->",1203],["T_STRING","add",1203],"(",["T_VARIABLE","$field",1203],",",["T_WHITESPACE"," ",1203],["T_CONSTANT_ENCAPSED_STRING","'maxLengthBytes'",1203],",",["T_WHITESPACE"," ",1203],["T_VARIABLE","$extra",1203],["T_WHITESPACE"," ",1203],"+",["T_WHITESPACE"," ",1203],"[",["T_WHITESPACE","\n            ",1203],["T_CONSTANT_ENCAPSED_STRING","'rule'",1204],["T_WHITESPACE"," ",1204],["T_DOUBLE_ARROW","=>",1204],["T_WHITESPACE"," ",1204],"[",["T_CONSTANT_ENCAPSED_STRING","'maxLengthBytes'",1204],",",["T_WHITESPACE"," ",1204],["T_VARIABLE","$max",1204],"]",["T_WHITESPACE","\n        ",1204],"]",")",";",["T_WHITESPACE","\n    ",1205],"}",["T_WHITESPACE","\n\n    ",1206],["T_DOC_COMMENT","\/**\n     * Add a numeric value validation rule to a field.\n     *\n     * @param string $field The field you want to apply the rule to.\n     * @param string|null $message The error message when the rule fails.\n     * @param string|callable|null $when Either 'create' or 'update' or a callable that returns\n     *   true when the validation rule should be applied.\n     * @see \\Cake\\Validation\\Validation::numeric()\n     * @return $this\n     *\/",1208],["T_WHITESPACE","\n    ",1217],["T_PUBLIC","public",1218],["T_WHITESPACE"," ",1218],["T_FUNCTION","function",1218],["T_WHITESPACE"," ",1218],["T_STRING","numeric",1218],"(",["T_VARIABLE","$field",1218],",",["T_WHITESPACE"," ",1218],["T_VARIABLE","$message",1218],["T_WHITESPACE"," ",1218],"=",["T_WHITESPACE"," ",1218],["T_STRING","null",1218],",",["T_WHITESPACE"," ",1218],["T_VARIABLE","$when",1218],["T_WHITESPACE"," ",1218],"=",["T_WHITESPACE"," ",1218],["T_STRING","null",1218],")",["T_WHITESPACE","\n    ",1218],"{",["T_WHITESPACE","\n        ",1219],["T_VARIABLE","$extra",1220],["T_WHITESPACE"," ",1220],"=",["T_WHITESPACE"," ",1220],["T_STRING","array_filter",1220],"(","[",["T_CONSTANT_ENCAPSED_STRING","'on'",1220],["T_WHITESPACE"," ",1220],["T_DOUBLE_ARROW","=>",1220],["T_WHITESPACE"," ",1220],["T_VARIABLE","$when",1220],",",["T_WHITESPACE"," ",1220],["T_CONSTANT_ENCAPSED_STRING","'message'",1220],["T_WHITESPACE"," ",1220],["T_DOUBLE_ARROW","=>",1220],["T_WHITESPACE"," ",1220],["T_VARIABLE","$message",1220],"]",")",";",["T_WHITESPACE","\n\n        ",1220],["T_RETURN","return",1222],["T_WHITESPACE"," ",1222],["T_VARIABLE","$this",1222],["T_OBJECT_OPERATOR","->",1222],["T_STRING","add",1222],"(",["T_VARIABLE","$field",1222],",",["T_WHITESPACE"," ",1222],["T_CONSTANT_ENCAPSED_STRING","'numeric'",1222],",",["T_WHITESPACE"," ",1222],["T_VARIABLE","$extra",1222],["T_WHITESPACE"," ",1222],"+",["T_WHITESPACE"," ",1222],"[",["T_WHITESPACE","\n            ",1222],["T_CONSTANT_ENCAPSED_STRING","'rule'",1223],["T_WHITESPACE"," ",1223],["T_DOUBLE_ARROW","=>",1223],["T_WHITESPACE"," ",1223],["T_CONSTANT_ENCAPSED_STRING","'numeric'",1223],["T_WHITESPACE","\n        ",1223],"]",")",";",["T_WHITESPACE","\n    ",1224],"}",["T_WHITESPACE","\n\n    ",1225],["T_DOC_COMMENT","\/**\n     * Add a natural number validation rule to a field.\n     *\n     * @param string $field The field you want to apply the rule to.\n     * @param string|null $message The error message when the rule fails.\n     * @param string|callable|null $when Either 'create' or 'update' or a callable that returns\n     *   true when the validation rule should be applied.\n     * @see \\Cake\\Validation\\Validation::naturalNumber()\n     * @return $this\n     *\/",1227],["T_WHITESPACE","\n    ",1236],["T_PUBLIC","public",1237],["T_WHITESPACE"," ",1237],["T_FUNCTION","function",1237],["T_WHITESPACE"," ",1237],["T_STRING","naturalNumber",1237],"(",["T_VARIABLE","$field",1237],",",["T_WHITESPACE"," ",1237],["T_VARIABLE","$message",1237],["T_WHITESPACE"," ",1237],"=",["T_WHITESPACE"," ",1237],["T_STRING","null",1237],",",["T_WHITESPACE"," ",1237],["T_VARIABLE","$when",1237],["T_WHITESPACE"," ",1237],"=",["T_WHITESPACE"," ",1237],["T_STRING","null",1237],")",["T_WHITESPACE","\n    ",1237],"{",["T_WHITESPACE","\n        ",1238],["T_VARIABLE","$extra",1239],["T_WHITESPACE"," ",1239],"=",["T_WHITESPACE"," ",1239],["T_STRING","array_filter",1239],"(","[",["T_CONSTANT_ENCAPSED_STRING","'on'",1239],["T_WHITESPACE"," ",1239],["T_DOUBLE_ARROW","=>",1239],["T_WHITESPACE"," ",1239],["T_VARIABLE","$when",1239],",",["T_WHITESPACE"," ",1239],["T_CONSTANT_ENCAPSED_STRING","'message'",1239],["T_WHITESPACE"," ",1239],["T_DOUBLE_ARROW","=>",1239],["T_WHITESPACE"," ",1239],["T_VARIABLE","$message",1239],"]",")",";",["T_WHITESPACE","\n\n        ",1239],["T_RETURN","return",1241],["T_WHITESPACE"," ",1241],["T_VARIABLE","$this",1241],["T_OBJECT_OPERATOR","->",1241],["T_STRING","add",1241],"(",["T_VARIABLE","$field",1241],",",["T_WHITESPACE"," ",1241],["T_CONSTANT_ENCAPSED_STRING","'naturalNumber'",1241],",",["T_WHITESPACE"," ",1241],["T_VARIABLE","$extra",1241],["T_WHITESPACE"," ",1241],"+",["T_WHITESPACE"," ",1241],"[",["T_WHITESPACE","\n            ",1241],["T_CONSTANT_ENCAPSED_STRING","'rule'",1242],["T_WHITESPACE"," ",1242],["T_DOUBLE_ARROW","=>",1242],["T_WHITESPACE"," ",1242],"[",["T_CONSTANT_ENCAPSED_STRING","'naturalNumber'",1242],",",["T_WHITESPACE"," ",1242],["T_STRING","false",1242],"]",["T_WHITESPACE","\n        ",1242],"]",")",";",["T_WHITESPACE","\n    ",1243],"}",["T_WHITESPACE","\n\n    ",1244],["T_DOC_COMMENT","\/**\n     * Add a validation rule to ensure a field is a non negative integer.\n     *\n     * @param string $field The field you want to apply the rule to.\n     * @param string|null $message The error message when the rule fails.\n     * @param string|callable|null $when Either 'create' or 'update' or a callable that returns\n     *   true when the validation rule should be applied.\n     * @see \\Cake\\Validation\\Validation::naturalNumber()\n     * @return $this\n     *\/",1246],["T_WHITESPACE","\n    ",1255],["T_PUBLIC","public",1256],["T_WHITESPACE"," ",1256],["T_FUNCTION","function",1256],["T_WHITESPACE"," ",1256],["T_STRING","nonNegativeInteger",1256],"(",["T_VARIABLE","$field",1256],",",["T_WHITESPACE"," ",1256],["T_VARIABLE","$message",1256],["T_WHITESPACE"," ",1256],"=",["T_WHITESPACE"," ",1256],["T_STRING","null",1256],",",["T_WHITESPACE"," ",1256],["T_VARIABLE","$when",1256],["T_WHITESPACE"," ",1256],"=",["T_WHITESPACE"," ",1256],["T_STRING","null",1256],")",["T_WHITESPACE","\n    ",1256],"{",["T_WHITESPACE","\n        ",1257],["T_VARIABLE","$extra",1258],["T_WHITESPACE"," ",1258],"=",["T_WHITESPACE"," ",1258],["T_STRING","array_filter",1258],"(","[",["T_CONSTANT_ENCAPSED_STRING","'on'",1258],["T_WHITESPACE"," ",1258],["T_DOUBLE_ARROW","=>",1258],["T_WHITESPACE"," ",1258],["T_VARIABLE","$when",1258],",",["T_WHITESPACE"," ",1258],["T_CONSTANT_ENCAPSED_STRING","'message'",1258],["T_WHITESPACE"," ",1258],["T_DOUBLE_ARROW","=>",1258],["T_WHITESPACE"," ",1258],["T_VARIABLE","$message",1258],"]",")",";",["T_WHITESPACE","\n\n        ",1258],["T_RETURN","return",1260],["T_WHITESPACE"," ",1260],["T_VARIABLE","$this",1260],["T_OBJECT_OPERATOR","->",1260],["T_STRING","add",1260],"(",["T_VARIABLE","$field",1260],",",["T_WHITESPACE"," ",1260],["T_CONSTANT_ENCAPSED_STRING","'nonNegativeInteger'",1260],",",["T_WHITESPACE"," ",1260],["T_VARIABLE","$extra",1260],["T_WHITESPACE"," ",1260],"+",["T_WHITESPACE"," ",1260],"[",["T_WHITESPACE","\n            ",1260],["T_CONSTANT_ENCAPSED_STRING","'rule'",1261],["T_WHITESPACE"," ",1261],["T_DOUBLE_ARROW","=>",1261],["T_WHITESPACE"," ",1261],"[",["T_CONSTANT_ENCAPSED_STRING","'naturalNumber'",1261],",",["T_WHITESPACE"," ",1261],["T_STRING","true",1261],"]",["T_WHITESPACE","\n        ",1261],"]",")",";",["T_WHITESPACE","\n    ",1262],"}",["T_WHITESPACE","\n\n    ",1263],["T_DOC_COMMENT","\/**\n     * Add a validation rule to ensure a field is within a numeric range\n     *\n     * @param string $field The field you want to apply the rule to.\n     * @param array $range The inclusive upper and lower bounds of the valid range.\n     * @param string|null $message The error message when the rule fails.\n     * @param string|callable|null $when Either 'create' or 'update' or a callable that returns\n     *   true when the validation rule should be applied.\n     * @see \\Cake\\Validation\\Validation::range()\n     * @return $this\n     *\/",1265],["T_WHITESPACE","\n    ",1275],["T_PUBLIC","public",1276],["T_WHITESPACE"," ",1276],["T_FUNCTION","function",1276],["T_WHITESPACE"," ",1276],["T_STRING","range",1276],"(",["T_VARIABLE","$field",1276],",",["T_WHITESPACE"," ",1276],["T_ARRAY","array",1276],["T_WHITESPACE"," ",1276],["T_VARIABLE","$range",1276],",",["T_WHITESPACE"," ",1276],["T_VARIABLE","$message",1276],["T_WHITESPACE"," ",1276],"=",["T_WHITESPACE"," ",1276],["T_STRING","null",1276],",",["T_WHITESPACE"," ",1276],["T_VARIABLE","$when",1276],["T_WHITESPACE"," ",1276],"=",["T_WHITESPACE"," ",1276],["T_STRING","null",1276],")",["T_WHITESPACE","\n    ",1276],"{",["T_WHITESPACE","\n        ",1277],["T_IF","if",1278],["T_WHITESPACE"," ",1278],"(",["T_STRING","count",1278],"(",["T_VARIABLE","$range",1278],")",["T_WHITESPACE"," ",1278],["T_IS_NOT_IDENTICAL","!==",1278],["T_WHITESPACE"," ",1278],["T_LNUMBER","2",1278],")",["T_WHITESPACE"," ",1278],"{",["T_WHITESPACE","\n            ",1278],["T_THROW","throw",1279],["T_WHITESPACE"," ",1279],["T_NEW","new",1279],["T_WHITESPACE"," ",1279],["T_STRING","InvalidArgumentException",1279],"(",["T_CONSTANT_ENCAPSED_STRING","'The $range argument requires 2 numbers'",1279],")",";",["T_WHITESPACE","\n        ",1279],"}",["T_WHITESPACE","\n        ",1280],["T_VARIABLE","$extra",1281],["T_WHITESPACE"," ",1281],"=",["T_WHITESPACE"," ",1281],["T_STRING","array_filter",1281],"(","[",["T_CONSTANT_ENCAPSED_STRING","'on'",1281],["T_WHITESPACE"," ",1281],["T_DOUBLE_ARROW","=>",1281],["T_WHITESPACE"," ",1281],["T_VARIABLE","$when",1281],",",["T_WHITESPACE"," ",1281],["T_CONSTANT_ENCAPSED_STRING","'message'",1281],["T_WHITESPACE"," ",1281],["T_DOUBLE_ARROW","=>",1281],["T_WHITESPACE"," ",1281],["T_VARIABLE","$message",1281],"]",")",";",["T_WHITESPACE","\n\n        ",1281],["T_RETURN","return",1283],["T_WHITESPACE"," ",1283],["T_VARIABLE","$this",1283],["T_OBJECT_OPERATOR","->",1283],["T_STRING","add",1283],"(",["T_VARIABLE","$field",1283],",",["T_WHITESPACE"," ",1283],["T_CONSTANT_ENCAPSED_STRING","'range'",1283],",",["T_WHITESPACE"," ",1283],["T_VARIABLE","$extra",1283],["T_WHITESPACE"," ",1283],"+",["T_WHITESPACE"," ",1283],"[",["T_WHITESPACE","\n            ",1283],["T_CONSTANT_ENCAPSED_STRING","'rule'",1284],["T_WHITESPACE"," ",1284],["T_DOUBLE_ARROW","=>",1284],["T_WHITESPACE"," ",1284],"[",["T_CONSTANT_ENCAPSED_STRING","'range'",1284],",",["T_WHITESPACE"," ",1284],["T_STRING","array_shift",1284],"(",["T_VARIABLE","$range",1284],")",",",["T_WHITESPACE"," ",1284],["T_STRING","array_shift",1284],"(",["T_VARIABLE","$range",1284],")","]",["T_WHITESPACE","\n        ",1284],"]",")",";",["T_WHITESPACE","\n    ",1285],"}",["T_WHITESPACE","\n\n    ",1286],["T_DOC_COMMENT","\/**\n     * Add a validation rule to ensure a field is a URL.\n     *\n     * This validator does not require a protocol.\n     *\n     * @param string $field The field you want to apply the rule to.\n     * @param string|null $message The error message when the rule fails.\n     * @param string|callable|null $when Either 'create' or 'update' or a callable that returns\n     *   true when the validation rule should be applied.\n     * @see \\Cake\\Validation\\Validation::url()\n     * @return $this\n     *\/",1288],["T_WHITESPACE","\n    ",1299],["T_PUBLIC","public",1300],["T_WHITESPACE"," ",1300],["T_FUNCTION","function",1300],["T_WHITESPACE"," ",1300],["T_STRING","url",1300],"(",["T_VARIABLE","$field",1300],",",["T_WHITESPACE"," ",1300],["T_VARIABLE","$message",1300],["T_WHITESPACE"," ",1300],"=",["T_WHITESPACE"," ",1300],["T_STRING","null",1300],",",["T_WHITESPACE"," ",1300],["T_VARIABLE","$when",1300],["T_WHITESPACE"," ",1300],"=",["T_WHITESPACE"," ",1300],["T_STRING","null",1300],")",["T_WHITESPACE","\n    ",1300],"{",["T_WHITESPACE","\n        ",1301],["T_VARIABLE","$extra",1302],["T_WHITESPACE"," ",1302],"=",["T_WHITESPACE"," ",1302],["T_STRING","array_filter",1302],"(","[",["T_CONSTANT_ENCAPSED_STRING","'on'",1302],["T_WHITESPACE"," ",1302],["T_DOUBLE_ARROW","=>",1302],["T_WHITESPACE"," ",1302],["T_VARIABLE","$when",1302],",",["T_WHITESPACE"," ",1302],["T_CONSTANT_ENCAPSED_STRING","'message'",1302],["T_WHITESPACE"," ",1302],["T_DOUBLE_ARROW","=>",1302],["T_WHITESPACE"," ",1302],["T_VARIABLE","$message",1302],"]",")",";",["T_WHITESPACE","\n\n        ",1302],["T_RETURN","return",1304],["T_WHITESPACE"," ",1304],["T_VARIABLE","$this",1304],["T_OBJECT_OPERATOR","->",1304],["T_STRING","add",1304],"(",["T_VARIABLE","$field",1304],",",["T_WHITESPACE"," ",1304],["T_CONSTANT_ENCAPSED_STRING","'url'",1304],",",["T_WHITESPACE"," ",1304],["T_VARIABLE","$extra",1304],["T_WHITESPACE"," ",1304],"+",["T_WHITESPACE"," ",1304],"[",["T_WHITESPACE","\n            ",1304],["T_CONSTANT_ENCAPSED_STRING","'rule'",1305],["T_WHITESPACE"," ",1305],["T_DOUBLE_ARROW","=>",1305],["T_WHITESPACE"," ",1305],"[",["T_CONSTANT_ENCAPSED_STRING","'url'",1305],",",["T_WHITESPACE"," ",1305],["T_STRING","false",1305],"]",["T_WHITESPACE","\n        ",1305],"]",")",";",["T_WHITESPACE","\n    ",1306],"}",["T_WHITESPACE","\n\n    ",1307],["T_DOC_COMMENT","\/**\n     * Add a validation rule to ensure a field is a URL.\n     *\n     * This validator requires the URL to have a protocol.\n     *\n     * @param string $field The field you want to apply the rule to.\n     * @param string|null $message The error message when the rule fails.\n     * @param string|callable|null $when Either 'create' or 'update' or a callable that returns\n     *   true when the validation rule should be applied.\n     * @see \\Cake\\Validation\\Validation::url()\n     * @return $this\n     *\/",1309],["T_WHITESPACE","\n    ",1320],["T_PUBLIC","public",1321],["T_WHITESPACE"," ",1321],["T_FUNCTION","function",1321],["T_WHITESPACE"," ",1321],["T_STRING","urlWithProtocol",1321],"(",["T_VARIABLE","$field",1321],",",["T_WHITESPACE"," ",1321],["T_VARIABLE","$message",1321],["T_WHITESPACE"," ",1321],"=",["T_WHITESPACE"," ",1321],["T_STRING","null",1321],",",["T_WHITESPACE"," ",1321],["T_VARIABLE","$when",1321],["T_WHITESPACE"," ",1321],"=",["T_WHITESPACE"," ",1321],["T_STRING","null",1321],")",["T_WHITESPACE","\n    ",1321],"{",["T_WHITESPACE","\n        ",1322],["T_VARIABLE","$extra",1323],["T_WHITESPACE"," ",1323],"=",["T_WHITESPACE"," ",1323],["T_STRING","array_filter",1323],"(","[",["T_CONSTANT_ENCAPSED_STRING","'on'",1323],["T_WHITESPACE"," ",1323],["T_DOUBLE_ARROW","=>",1323],["T_WHITESPACE"," ",1323],["T_VARIABLE","$when",1323],",",["T_WHITESPACE"," ",1323],["T_CONSTANT_ENCAPSED_STRING","'message'",1323],["T_WHITESPACE"," ",1323],["T_DOUBLE_ARROW","=>",1323],["T_WHITESPACE"," ",1323],["T_VARIABLE","$message",1323],"]",")",";",["T_WHITESPACE","\n\n        ",1323],["T_RETURN","return",1325],["T_WHITESPACE"," ",1325],["T_VARIABLE","$this",1325],["T_OBJECT_OPERATOR","->",1325],["T_STRING","add",1325],"(",["T_VARIABLE","$field",1325],",",["T_WHITESPACE"," ",1325],["T_CONSTANT_ENCAPSED_STRING","'urlWithProtocol'",1325],",",["T_WHITESPACE"," ",1325],["T_VARIABLE","$extra",1325],["T_WHITESPACE"," ",1325],"+",["T_WHITESPACE"," ",1325],"[",["T_WHITESPACE","\n            ",1325],["T_CONSTANT_ENCAPSED_STRING","'rule'",1326],["T_WHITESPACE"," ",1326],["T_DOUBLE_ARROW","=>",1326],["T_WHITESPACE"," ",1326],"[",["T_CONSTANT_ENCAPSED_STRING","'url'",1326],",",["T_WHITESPACE"," ",1326],["T_STRING","true",1326],"]",["T_WHITESPACE","\n        ",1326],"]",")",";",["T_WHITESPACE","\n    ",1327],"}",["T_WHITESPACE","\n\n    ",1328],["T_DOC_COMMENT","\/**\n     * Add a validation rule to ensure the field value is within a whitelist.\n     *\n     * @param string $field The field you want to apply the rule to.\n     * @param array $list The list of valid options.\n     * @param string|null $message The error message when the rule fails.\n     * @param string|callable|null $when Either 'create' or 'update' or a callable that returns\n     *   true when the validation rule should be applied.\n     * @see \\Cake\\Validation\\Validation::inList()\n     * @return $this\n     *\/",1330],["T_WHITESPACE","\n    ",1340],["T_PUBLIC","public",1341],["T_WHITESPACE"," ",1341],["T_FUNCTION","function",1341],["T_WHITESPACE"," ",1341],["T_STRING","inList",1341],"(",["T_VARIABLE","$field",1341],",",["T_WHITESPACE"," ",1341],["T_ARRAY","array",1341],["T_WHITESPACE"," ",1341],["T_VARIABLE","$list",1341],",",["T_WHITESPACE"," ",1341],["T_VARIABLE","$message",1341],["T_WHITESPACE"," ",1341],"=",["T_WHITESPACE"," ",1341],["T_STRING","null",1341],",",["T_WHITESPACE"," ",1341],["T_VARIABLE","$when",1341],["T_WHITESPACE"," ",1341],"=",["T_WHITESPACE"," ",1341],["T_STRING","null",1341],")",["T_WHITESPACE","\n    ",1341],"{",["T_WHITESPACE","\n        ",1342],["T_VARIABLE","$extra",1343],["T_WHITESPACE"," ",1343],"=",["T_WHITESPACE"," ",1343],["T_STRING","array_filter",1343],"(","[",["T_CONSTANT_ENCAPSED_STRING","'on'",1343],["T_WHITESPACE"," ",1343],["T_DOUBLE_ARROW","=>",1343],["T_WHITESPACE"," ",1343],["T_VARIABLE","$when",1343],",",["T_WHITESPACE"," ",1343],["T_CONSTANT_ENCAPSED_STRING","'message'",1343],["T_WHITESPACE"," ",1343],["T_DOUBLE_ARROW","=>",1343],["T_WHITESPACE"," ",1343],["T_VARIABLE","$message",1343],"]",")",";",["T_WHITESPACE","\n\n        ",1343],["T_RETURN","return",1345],["T_WHITESPACE"," ",1345],["T_VARIABLE","$this",1345],["T_OBJECT_OPERATOR","->",1345],["T_STRING","add",1345],"(",["T_VARIABLE","$field",1345],",",["T_WHITESPACE"," ",1345],["T_CONSTANT_ENCAPSED_STRING","'inList'",1345],",",["T_WHITESPACE"," ",1345],["T_VARIABLE","$extra",1345],["T_WHITESPACE"," ",1345],"+",["T_WHITESPACE"," ",1345],"[",["T_WHITESPACE","\n            ",1345],["T_CONSTANT_ENCAPSED_STRING","'rule'",1346],["T_WHITESPACE"," ",1346],["T_DOUBLE_ARROW","=>",1346],["T_WHITESPACE"," ",1346],"[",["T_CONSTANT_ENCAPSED_STRING","'inList'",1346],",",["T_WHITESPACE"," ",1346],["T_VARIABLE","$list",1346],"]",["T_WHITESPACE","\n        ",1346],"]",")",";",["T_WHITESPACE","\n    ",1347],"}",["T_WHITESPACE","\n\n    ",1348],["T_DOC_COMMENT","\/**\n     * Add a validation rule to ensure the field is a UUID\n     *\n     * @param string $field The field you want to apply the rule to.\n     * @param string|null $message The error message when the rule fails.\n     * @param string|callable|null $when Either 'create' or 'update' or a callable that returns\n     *   true when the validation rule should be applied.\n     * @see \\Cake\\Validation\\Validation::uuid()\n     * @return $this\n     *\/",1350],["T_WHITESPACE","\n    ",1359],["T_PUBLIC","public",1360],["T_WHITESPACE"," ",1360],["T_FUNCTION","function",1360],["T_WHITESPACE"," ",1360],["T_STRING","uuid",1360],"(",["T_VARIABLE","$field",1360],",",["T_WHITESPACE"," ",1360],["T_VARIABLE","$message",1360],["T_WHITESPACE"," ",1360],"=",["T_WHITESPACE"," ",1360],["T_STRING","null",1360],",",["T_WHITESPACE"," ",1360],["T_VARIABLE","$when",1360],["T_WHITESPACE"," ",1360],"=",["T_WHITESPACE"," ",1360],["T_STRING","null",1360],")",["T_WHITESPACE","\n    ",1360],"{",["T_WHITESPACE","\n        ",1361],["T_VARIABLE","$extra",1362],["T_WHITESPACE"," ",1362],"=",["T_WHITESPACE"," ",1362],["T_STRING","array_filter",1362],"(","[",["T_CONSTANT_ENCAPSED_STRING","'on'",1362],["T_WHITESPACE"," ",1362],["T_DOUBLE_ARROW","=>",1362],["T_WHITESPACE"," ",1362],["T_VARIABLE","$when",1362],",",["T_WHITESPACE"," ",1362],["T_CONSTANT_ENCAPSED_STRING","'message'",1362],["T_WHITESPACE"," ",1362],["T_DOUBLE_ARROW","=>",1362],["T_WHITESPACE"," ",1362],["T_VARIABLE","$message",1362],"]",")",";",["T_WHITESPACE","\n\n        ",1362],["T_RETURN","return",1364],["T_WHITESPACE"," ",1364],["T_VARIABLE","$this",1364],["T_OBJECT_OPERATOR","->",1364],["T_STRING","add",1364],"(",["T_VARIABLE","$field",1364],",",["T_WHITESPACE"," ",1364],["T_CONSTANT_ENCAPSED_STRING","'uuid'",1364],",",["T_WHITESPACE"," ",1364],["T_VARIABLE","$extra",1364],["T_WHITESPACE"," ",1364],"+",["T_WHITESPACE"," ",1364],"[",["T_WHITESPACE","\n            ",1364],["T_CONSTANT_ENCAPSED_STRING","'rule'",1365],["T_WHITESPACE"," ",1365],["T_DOUBLE_ARROW","=>",1365],["T_WHITESPACE"," ",1365],["T_CONSTANT_ENCAPSED_STRING","'uuid'",1365],["T_WHITESPACE","\n        ",1365],"]",")",";",["T_WHITESPACE","\n    ",1366],"}",["T_WHITESPACE","\n\n    ",1367],["T_DOC_COMMENT","\/**\n     * Add a validation rule to ensure the field is an uploaded file\n     *\n     * For options see Cake\\Validation\\Validation::uploadedFile()\n     *\n     * @param string $field The field you want to apply the rule to.\n     * @param array $options An array of options.\n     * @param string|null $message The error message when the rule fails.\n     * @param string|callable|null $when Either 'create' or 'update' or a callable that returns\n     *   true when the validation rule should be applied.\n     * @see \\Cake\\Validation\\Validation::uploadedFile()\n     * @return $this\n     *\/",1369],["T_WHITESPACE","\n    ",1381],["T_PUBLIC","public",1382],["T_WHITESPACE"," ",1382],["T_FUNCTION","function",1382],["T_WHITESPACE"," ",1382],["T_STRING","uploadedFile",1382],"(",["T_VARIABLE","$field",1382],",",["T_WHITESPACE"," ",1382],["T_ARRAY","array",1382],["T_WHITESPACE"," ",1382],["T_VARIABLE","$options",1382],",",["T_WHITESPACE"," ",1382],["T_VARIABLE","$message",1382],["T_WHITESPACE"," ",1382],"=",["T_WHITESPACE"," ",1382],["T_STRING","null",1382],",",["T_WHITESPACE"," ",1382],["T_VARIABLE","$when",1382],["T_WHITESPACE"," ",1382],"=",["T_WHITESPACE"," ",1382],["T_STRING","null",1382],")",["T_WHITESPACE","\n    ",1382],"{",["T_WHITESPACE","\n        ",1383],["T_VARIABLE","$extra",1384],["T_WHITESPACE"," ",1384],"=",["T_WHITESPACE"," ",1384],["T_STRING","array_filter",1384],"(","[",["T_CONSTANT_ENCAPSED_STRING","'on'",1384],["T_WHITESPACE"," ",1384],["T_DOUBLE_ARROW","=>",1384],["T_WHITESPACE"," ",1384],["T_VARIABLE","$when",1384],",",["T_WHITESPACE"," ",1384],["T_CONSTANT_ENCAPSED_STRING","'message'",1384],["T_WHITESPACE"," ",1384],["T_DOUBLE_ARROW","=>",1384],["T_WHITESPACE"," ",1384],["T_VARIABLE","$message",1384],"]",")",";",["T_WHITESPACE","\n\n        ",1384],["T_RETURN","return",1386],["T_WHITESPACE"," ",1386],["T_VARIABLE","$this",1386],["T_OBJECT_OPERATOR","->",1386],["T_STRING","add",1386],"(",["T_VARIABLE","$field",1386],",",["T_WHITESPACE"," ",1386],["T_CONSTANT_ENCAPSED_STRING","'uploadedFile'",1386],",",["T_WHITESPACE"," ",1386],["T_VARIABLE","$extra",1386],["T_WHITESPACE"," ",1386],"+",["T_WHITESPACE"," ",1386],"[",["T_WHITESPACE","\n            ",1386],["T_CONSTANT_ENCAPSED_STRING","'rule'",1387],["T_WHITESPACE"," ",1387],["T_DOUBLE_ARROW","=>",1387],["T_WHITESPACE"," ",1387],"[",["T_CONSTANT_ENCAPSED_STRING","'uploadedFile'",1387],",",["T_WHITESPACE"," ",1387],["T_VARIABLE","$options",1387],"]",["T_WHITESPACE","\n        ",1387],"]",")",";",["T_WHITESPACE","\n    ",1388],"}",["T_WHITESPACE","\n\n    ",1389],["T_DOC_COMMENT","\/**\n     * Add a validation rule to ensure the field is a lat\/long tuple.\n     *\n     * e.g. `<lat>, <lng>`\n     *\n     * @param string $field The field you want to apply the rule to.\n     * @param string|null $message The error message when the rule fails.\n     * @param string|callable|null $when Either 'create' or 'update' or a callable that returns\n     *   true when the validation rule should be applied.\n     * @see \\Cake\\Validation\\Validation::uuid()\n     * @return $this\n     *\/",1391],["T_WHITESPACE","\n    ",1402],["T_PUBLIC","public",1403],["T_WHITESPACE"," ",1403],["T_FUNCTION","function",1403],["T_WHITESPACE"," ",1403],["T_STRING","latLong",1403],"(",["T_VARIABLE","$field",1403],",",["T_WHITESPACE"," ",1403],["T_VARIABLE","$message",1403],["T_WHITESPACE"," ",1403],"=",["T_WHITESPACE"," ",1403],["T_STRING","null",1403],",",["T_WHITESPACE"," ",1403],["T_VARIABLE","$when",1403],["T_WHITESPACE"," ",1403],"=",["T_WHITESPACE"," ",1403],["T_STRING","null",1403],")",["T_WHITESPACE","\n    ",1403],"{",["T_WHITESPACE","\n        ",1404],["T_VARIABLE","$extra",1405],["T_WHITESPACE"," ",1405],"=",["T_WHITESPACE"," ",1405],["T_STRING","array_filter",1405],"(","[",["T_CONSTANT_ENCAPSED_STRING","'on'",1405],["T_WHITESPACE"," ",1405],["T_DOUBLE_ARROW","=>",1405],["T_WHITESPACE"," ",1405],["T_VARIABLE","$when",1405],",",["T_WHITESPACE"," ",1405],["T_CONSTANT_ENCAPSED_STRING","'message'",1405],["T_WHITESPACE"," ",1405],["T_DOUBLE_ARROW","=>",1405],["T_WHITESPACE"," ",1405],["T_VARIABLE","$message",1405],"]",")",";",["T_WHITESPACE","\n\n        ",1405],["T_RETURN","return",1407],["T_WHITESPACE"," ",1407],["T_VARIABLE","$this",1407],["T_OBJECT_OPERATOR","->",1407],["T_STRING","add",1407],"(",["T_VARIABLE","$field",1407],",",["T_WHITESPACE"," ",1407],["T_CONSTANT_ENCAPSED_STRING","'latLong'",1407],",",["T_WHITESPACE"," ",1407],["T_VARIABLE","$extra",1407],["T_WHITESPACE"," ",1407],"+",["T_WHITESPACE"," ",1407],"[",["T_WHITESPACE","\n            ",1407],["T_CONSTANT_ENCAPSED_STRING","'rule'",1408],["T_WHITESPACE"," ",1408],["T_DOUBLE_ARROW","=>",1408],["T_WHITESPACE"," ",1408],["T_CONSTANT_ENCAPSED_STRING","'geoCoordinate'",1408],["T_WHITESPACE","\n        ",1408],"]",")",";",["T_WHITESPACE","\n    ",1409],"}",["T_WHITESPACE","\n\n    ",1410],["T_DOC_COMMENT","\/**\n     * Add a validation rule to ensure the field is a latitude.\n     *\n     * @param string $field The field you want to apply the rule to.\n     * @param string|null $message The error message when the rule fails.\n     * @param string|callable|null $when Either 'create' or 'update' or a callable that returns\n     *   true when the validation rule should be applied.\n     * @see \\Cake\\Validation\\Validation::latitude()\n     * @return $this\n     *\/",1412],["T_WHITESPACE","\n    ",1421],["T_PUBLIC","public",1422],["T_WHITESPACE"," ",1422],["T_FUNCTION","function",1422],["T_WHITESPACE"," ",1422],["T_STRING","latitude",1422],"(",["T_VARIABLE","$field",1422],",",["T_WHITESPACE"," ",1422],["T_VARIABLE","$message",1422],["T_WHITESPACE"," ",1422],"=",["T_WHITESPACE"," ",1422],["T_STRING","null",1422],",",["T_WHITESPACE"," ",1422],["T_VARIABLE","$when",1422],["T_WHITESPACE"," ",1422],"=",["T_WHITESPACE"," ",1422],["T_STRING","null",1422],")",["T_WHITESPACE","\n    ",1422],"{",["T_WHITESPACE","\n        ",1423],["T_VARIABLE","$extra",1424],["T_WHITESPACE"," ",1424],"=",["T_WHITESPACE"," ",1424],["T_STRING","array_filter",1424],"(","[",["T_CONSTANT_ENCAPSED_STRING","'on'",1424],["T_WHITESPACE"," ",1424],["T_DOUBLE_ARROW","=>",1424],["T_WHITESPACE"," ",1424],["T_VARIABLE","$when",1424],",",["T_WHITESPACE"," ",1424],["T_CONSTANT_ENCAPSED_STRING","'message'",1424],["T_WHITESPACE"," ",1424],["T_DOUBLE_ARROW","=>",1424],["T_WHITESPACE"," ",1424],["T_VARIABLE","$message",1424],"]",")",";",["T_WHITESPACE","\n\n        ",1424],["T_RETURN","return",1426],["T_WHITESPACE"," ",1426],["T_VARIABLE","$this",1426],["T_OBJECT_OPERATOR","->",1426],["T_STRING","add",1426],"(",["T_VARIABLE","$field",1426],",",["T_WHITESPACE"," ",1426],["T_CONSTANT_ENCAPSED_STRING","'latitude'",1426],",",["T_WHITESPACE"," ",1426],["T_VARIABLE","$extra",1426],["T_WHITESPACE"," ",1426],"+",["T_WHITESPACE"," ",1426],"[",["T_WHITESPACE","\n            ",1426],["T_CONSTANT_ENCAPSED_STRING","'rule'",1427],["T_WHITESPACE"," ",1427],["T_DOUBLE_ARROW","=>",1427],["T_WHITESPACE"," ",1427],["T_CONSTANT_ENCAPSED_STRING","'latitude'",1427],["T_WHITESPACE","\n        ",1427],"]",")",";",["T_WHITESPACE","\n    ",1428],"}",["T_WHITESPACE","\n\n    ",1429],["T_DOC_COMMENT","\/**\n     * Add a validation rule to ensure the field is a longitude.\n     *\n     * @param string $field The field you want to apply the rule to.\n     * @param string|null $message The error message when the rule fails.\n     * @param string|callable|null $when Either 'create' or 'update' or a callable that returns\n     *   true when the validation rule should be applied.\n     * @see \\Cake\\Validation\\Validation::longitude()\n     * @return $this\n     *\/",1431],["T_WHITESPACE","\n    ",1440],["T_PUBLIC","public",1441],["T_WHITESPACE"," ",1441],["T_FUNCTION","function",1441],["T_WHITESPACE"," ",1441],["T_STRING","longitude",1441],"(",["T_VARIABLE","$field",1441],",",["T_WHITESPACE"," ",1441],["T_VARIABLE","$message",1441],["T_WHITESPACE"," ",1441],"=",["T_WHITESPACE"," ",1441],["T_STRING","null",1441],",",["T_WHITESPACE"," ",1441],["T_VARIABLE","$when",1441],["T_WHITESPACE"," ",1441],"=",["T_WHITESPACE"," ",1441],["T_STRING","null",1441],")",["T_WHITESPACE","\n    ",1441],"{",["T_WHITESPACE","\n        ",1442],["T_VARIABLE","$extra",1443],["T_WHITESPACE"," ",1443],"=",["T_WHITESPACE"," ",1443],["T_STRING","array_filter",1443],"(","[",["T_CONSTANT_ENCAPSED_STRING","'on'",1443],["T_WHITESPACE"," ",1443],["T_DOUBLE_ARROW","=>",1443],["T_WHITESPACE"," ",1443],["T_VARIABLE","$when",1443],",",["T_WHITESPACE"," ",1443],["T_CONSTANT_ENCAPSED_STRING","'message'",1443],["T_WHITESPACE"," ",1443],["T_DOUBLE_ARROW","=>",1443],["T_WHITESPACE"," ",1443],["T_VARIABLE","$message",1443],"]",")",";",["T_WHITESPACE","\n\n        ",1443],["T_RETURN","return",1445],["T_WHITESPACE"," ",1445],["T_VARIABLE","$this",1445],["T_OBJECT_OPERATOR","->",1445],["T_STRING","add",1445],"(",["T_VARIABLE","$field",1445],",",["T_WHITESPACE"," ",1445],["T_CONSTANT_ENCAPSED_STRING","'longitude'",1445],",",["T_WHITESPACE"," ",1445],["T_VARIABLE","$extra",1445],["T_WHITESPACE"," ",1445],"+",["T_WHITESPACE"," ",1445],"[",["T_WHITESPACE","\n            ",1445],["T_CONSTANT_ENCAPSED_STRING","'rule'",1446],["T_WHITESPACE"," ",1446],["T_DOUBLE_ARROW","=>",1446],["T_WHITESPACE"," ",1446],["T_CONSTANT_ENCAPSED_STRING","'longitude'",1446],["T_WHITESPACE","\n        ",1446],"]",")",";",["T_WHITESPACE","\n    ",1447],"}",["T_WHITESPACE","\n\n    ",1448],["T_DOC_COMMENT","\/**\n     * Add a validation rule to ensure a field contains only ascii bytes\n     *\n     * @param string $field The field you want to apply the rule to.\n     * @param string|null $message The error message when the rule fails.\n     * @param string|callable|null $when Either 'create' or 'update' or a callable that returns\n     *   true when the validation rule should be applied.\n     * @see \\Cake\\Validation\\Validation::ascii()\n     * @return $this\n     *\/",1450],["T_WHITESPACE","\n    ",1459],["T_PUBLIC","public",1460],["T_WHITESPACE"," ",1460],["T_FUNCTION","function",1460],["T_WHITESPACE"," ",1460],["T_STRING","ascii",1460],"(",["T_VARIABLE","$field",1460],",",["T_WHITESPACE"," ",1460],["T_VARIABLE","$message",1460],["T_WHITESPACE"," ",1460],"=",["T_WHITESPACE"," ",1460],["T_STRING","null",1460],",",["T_WHITESPACE"," ",1460],["T_VARIABLE","$when",1460],["T_WHITESPACE"," ",1460],"=",["T_WHITESPACE"," ",1460],["T_STRING","null",1460],")",["T_WHITESPACE","\n    ",1460],"{",["T_WHITESPACE","\n        ",1461],["T_VARIABLE","$extra",1462],["T_WHITESPACE"," ",1462],"=",["T_WHITESPACE"," ",1462],["T_STRING","array_filter",1462],"(","[",["T_CONSTANT_ENCAPSED_STRING","'on'",1462],["T_WHITESPACE"," ",1462],["T_DOUBLE_ARROW","=>",1462],["T_WHITESPACE"," ",1462],["T_VARIABLE","$when",1462],",",["T_WHITESPACE"," ",1462],["T_CONSTANT_ENCAPSED_STRING","'message'",1462],["T_WHITESPACE"," ",1462],["T_DOUBLE_ARROW","=>",1462],["T_WHITESPACE"," ",1462],["T_VARIABLE","$message",1462],"]",")",";",["T_WHITESPACE","\n\n        ",1462],["T_RETURN","return",1464],["T_WHITESPACE"," ",1464],["T_VARIABLE","$this",1464],["T_OBJECT_OPERATOR","->",1464],["T_STRING","add",1464],"(",["T_VARIABLE","$field",1464],",",["T_WHITESPACE"," ",1464],["T_CONSTANT_ENCAPSED_STRING","'ascii'",1464],",",["T_WHITESPACE"," ",1464],["T_VARIABLE","$extra",1464],["T_WHITESPACE"," ",1464],"+",["T_WHITESPACE"," ",1464],"[",["T_WHITESPACE","\n            ",1464],["T_CONSTANT_ENCAPSED_STRING","'rule'",1465],["T_WHITESPACE"," ",1465],["T_DOUBLE_ARROW","=>",1465],["T_WHITESPACE"," ",1465],["T_CONSTANT_ENCAPSED_STRING","'ascii'",1465],["T_WHITESPACE","\n        ",1465],"]",")",";",["T_WHITESPACE","\n    ",1466],"}",["T_WHITESPACE","\n\n    ",1467],["T_DOC_COMMENT","\/**\n     * Add a validation rule to ensure a field contains only BMP utf8 bytes\n     *\n     * @param string $field The field you want to apply the rule to.\n     * @param string|null $message The error message when the rule fails.\n     * @param string|callable|null $when Either 'create' or 'update' or a callable that returns\n     *   true when the validation rule should be applied.\n     * @see \\Cake\\Validation\\Validation::utf8()\n     * @return $this\n     *\/",1469],["T_WHITESPACE","\n    ",1478],["T_PUBLIC","public",1479],["T_WHITESPACE"," ",1479],["T_FUNCTION","function",1479],["T_WHITESPACE"," ",1479],["T_STRING","utf8",1479],"(",["T_VARIABLE","$field",1479],",",["T_WHITESPACE"," ",1479],["T_VARIABLE","$message",1479],["T_WHITESPACE"," ",1479],"=",["T_WHITESPACE"," ",1479],["T_STRING","null",1479],",",["T_WHITESPACE"," ",1479],["T_VARIABLE","$when",1479],["T_WHITESPACE"," ",1479],"=",["T_WHITESPACE"," ",1479],["T_STRING","null",1479],")",["T_WHITESPACE","\n    ",1479],"{",["T_WHITESPACE","\n        ",1480],["T_VARIABLE","$extra",1481],["T_WHITESPACE"," ",1481],"=",["T_WHITESPACE"," ",1481],["T_STRING","array_filter",1481],"(","[",["T_CONSTANT_ENCAPSED_STRING","'on'",1481],["T_WHITESPACE"," ",1481],["T_DOUBLE_ARROW","=>",1481],["T_WHITESPACE"," ",1481],["T_VARIABLE","$when",1481],",",["T_WHITESPACE"," ",1481],["T_CONSTANT_ENCAPSED_STRING","'message'",1481],["T_WHITESPACE"," ",1481],["T_DOUBLE_ARROW","=>",1481],["T_WHITESPACE"," ",1481],["T_VARIABLE","$message",1481],"]",")",";",["T_WHITESPACE","\n\n        ",1481],["T_RETURN","return",1483],["T_WHITESPACE"," ",1483],["T_VARIABLE","$this",1483],["T_OBJECT_OPERATOR","->",1483],["T_STRING","add",1483],"(",["T_VARIABLE","$field",1483],",",["T_WHITESPACE"," ",1483],["T_CONSTANT_ENCAPSED_STRING","'utf8'",1483],",",["T_WHITESPACE"," ",1483],["T_VARIABLE","$extra",1483],["T_WHITESPACE"," ",1483],"+",["T_WHITESPACE"," ",1483],"[",["T_WHITESPACE","\n            ",1483],["T_CONSTANT_ENCAPSED_STRING","'rule'",1484],["T_WHITESPACE"," ",1484],["T_DOUBLE_ARROW","=>",1484],["T_WHITESPACE"," ",1484],"[",["T_CONSTANT_ENCAPSED_STRING","'utf8'",1484],",",["T_WHITESPACE"," ",1484],"[",["T_CONSTANT_ENCAPSED_STRING","'extended'",1484],["T_WHITESPACE"," ",1484],["T_DOUBLE_ARROW","=>",1484],["T_WHITESPACE"," ",1484],["T_STRING","false",1484],"]","]",["T_WHITESPACE","\n        ",1484],"]",")",";",["T_WHITESPACE","\n    ",1485],"}",["T_WHITESPACE","\n\n    ",1486],["T_DOC_COMMENT","\/**\n     * Add a validation rule to ensure a field contains only utf8 bytes.\n     *\n     * This rule will accept 3 and 4 byte UTF8 sequences, which are necessary for emoji.\n     *\n     * @param string $field The field you want to apply the rule to.\n     * @param string|null $message The error message when the rule fails.\n     * @param string|callable|null $when Either 'create' or 'update' or a callable that returns\n     *   true when the validation rule should be applied.\n     * @see \\Cake\\Validation\\Validation::utf8()\n     * @return $this\n     *\/",1488],["T_WHITESPACE","\n    ",1499],["T_PUBLIC","public",1500],["T_WHITESPACE"," ",1500],["T_FUNCTION","function",1500],["T_WHITESPACE"," ",1500],["T_STRING","utf8Extended",1500],"(",["T_VARIABLE","$field",1500],",",["T_WHITESPACE"," ",1500],["T_VARIABLE","$message",1500],["T_WHITESPACE"," ",1500],"=",["T_WHITESPACE"," ",1500],["T_STRING","null",1500],",",["T_WHITESPACE"," ",1500],["T_VARIABLE","$when",1500],["T_WHITESPACE"," ",1500],"=",["T_WHITESPACE"," ",1500],["T_STRING","null",1500],")",["T_WHITESPACE","\n    ",1500],"{",["T_WHITESPACE","\n        ",1501],["T_VARIABLE","$extra",1502],["T_WHITESPACE"," ",1502],"=",["T_WHITESPACE"," ",1502],["T_STRING","array_filter",1502],"(","[",["T_CONSTANT_ENCAPSED_STRING","'on'",1502],["T_WHITESPACE"," ",1502],["T_DOUBLE_ARROW","=>",1502],["T_WHITESPACE"," ",1502],["T_VARIABLE","$when",1502],",",["T_WHITESPACE"," ",1502],["T_CONSTANT_ENCAPSED_STRING","'message'",1502],["T_WHITESPACE"," ",1502],["T_DOUBLE_ARROW","=>",1502],["T_WHITESPACE"," ",1502],["T_VARIABLE","$message",1502],"]",")",";",["T_WHITESPACE","\n\n        ",1502],["T_RETURN","return",1504],["T_WHITESPACE"," ",1504],["T_VARIABLE","$this",1504],["T_OBJECT_OPERATOR","->",1504],["T_STRING","add",1504],"(",["T_VARIABLE","$field",1504],",",["T_WHITESPACE"," ",1504],["T_CONSTANT_ENCAPSED_STRING","'utf8Extended'",1504],",",["T_WHITESPACE"," ",1504],["T_VARIABLE","$extra",1504],["T_WHITESPACE"," ",1504],"+",["T_WHITESPACE"," ",1504],"[",["T_WHITESPACE","\n            ",1504],["T_CONSTANT_ENCAPSED_STRING","'rule'",1505],["T_WHITESPACE"," ",1505],["T_DOUBLE_ARROW","=>",1505],["T_WHITESPACE"," ",1505],"[",["T_CONSTANT_ENCAPSED_STRING","'utf8'",1505],",",["T_WHITESPACE"," ",1505],"[",["T_CONSTANT_ENCAPSED_STRING","'extended'",1505],["T_WHITESPACE"," ",1505],["T_DOUBLE_ARROW","=>",1505],["T_WHITESPACE"," ",1505],["T_STRING","true",1505],"]","]",["T_WHITESPACE","\n        ",1505],"]",")",";",["T_WHITESPACE","\n    ",1506],"}",["T_WHITESPACE","\n\n    ",1507],["T_DOC_COMMENT","\/**\n     * Add a validation rule to ensure a field is an integer value.\n     *\n     * @param string $field The field you want to apply the rule to.\n     * @param string|null $message The error message when the rule fails.\n     * @param string|callable|null $when Either 'create' or 'update' or a callable that returns\n     *   true when the validation rule should be applied.\n     * @see \\Cake\\Validation\\Validation::isInteger()\n     * @return $this\n     *\/",1509],["T_WHITESPACE","\n    ",1518],["T_PUBLIC","public",1519],["T_WHITESPACE"," ",1519],["T_FUNCTION","function",1519],["T_WHITESPACE"," ",1519],["T_STRING","integer",1519],"(",["T_VARIABLE","$field",1519],",",["T_WHITESPACE"," ",1519],["T_VARIABLE","$message",1519],["T_WHITESPACE"," ",1519],"=",["T_WHITESPACE"," ",1519],["T_STRING","null",1519],",",["T_WHITESPACE"," ",1519],["T_VARIABLE","$when",1519],["T_WHITESPACE"," ",1519],"=",["T_WHITESPACE"," ",1519],["T_STRING","null",1519],")",["T_WHITESPACE","\n    ",1519],"{",["T_WHITESPACE","\n        ",1520],["T_VARIABLE","$extra",1521],["T_WHITESPACE"," ",1521],"=",["T_WHITESPACE"," ",1521],["T_STRING","array_filter",1521],"(","[",["T_CONSTANT_ENCAPSED_STRING","'on'",1521],["T_WHITESPACE"," ",1521],["T_DOUBLE_ARROW","=>",1521],["T_WHITESPACE"," ",1521],["T_VARIABLE","$when",1521],",",["T_WHITESPACE"," ",1521],["T_CONSTANT_ENCAPSED_STRING","'message'",1521],["T_WHITESPACE"," ",1521],["T_DOUBLE_ARROW","=>",1521],["T_WHITESPACE"," ",1521],["T_VARIABLE","$message",1521],"]",")",";",["T_WHITESPACE","\n\n        ",1521],["T_RETURN","return",1523],["T_WHITESPACE"," ",1523],["T_VARIABLE","$this",1523],["T_OBJECT_OPERATOR","->",1523],["T_STRING","add",1523],"(",["T_VARIABLE","$field",1523],",",["T_WHITESPACE"," ",1523],["T_CONSTANT_ENCAPSED_STRING","'integer'",1523],",",["T_WHITESPACE"," ",1523],["T_VARIABLE","$extra",1523],["T_WHITESPACE"," ",1523],"+",["T_WHITESPACE"," ",1523],"[",["T_WHITESPACE","\n            ",1523],["T_CONSTANT_ENCAPSED_STRING","'rule'",1524],["T_WHITESPACE"," ",1524],["T_DOUBLE_ARROW","=>",1524],["T_WHITESPACE"," ",1524],["T_CONSTANT_ENCAPSED_STRING","'isInteger'",1524],["T_WHITESPACE","\n        ",1524],"]",")",";",["T_WHITESPACE","\n    ",1525],"}",["T_WHITESPACE","\n\n    ",1526],["T_DOC_COMMENT","\/**\n     * Add a validation rule to ensure that a field contains an array.\n     *\n     * @param string $field The field you want to apply the rule to.\n     * @param string|null $message The error message when the rule fails.\n     * @param string|callable|null $when Either 'create' or 'update' or a callable that returns\n     *   true when the validation rule should be applied.\n     * @return $this\n     *\/",1528],["T_WHITESPACE","\n    ",1536],["T_PUBLIC","public",1537],["T_WHITESPACE"," ",1537],["T_FUNCTION","function",1537],["T_WHITESPACE"," ",1537],["T_STRING","isArray",1537],"(",["T_VARIABLE","$field",1537],",",["T_WHITESPACE"," ",1537],["T_VARIABLE","$message",1537],["T_WHITESPACE"," ",1537],"=",["T_WHITESPACE"," ",1537],["T_STRING","null",1537],",",["T_WHITESPACE"," ",1537],["T_VARIABLE","$when",1537],["T_WHITESPACE"," ",1537],"=",["T_WHITESPACE"," ",1537],["T_STRING","null",1537],")",["T_WHITESPACE","\n    ",1537],"{",["T_WHITESPACE","\n        ",1538],["T_VARIABLE","$extra",1539],["T_WHITESPACE"," ",1539],"=",["T_WHITESPACE"," ",1539],["T_STRING","array_filter",1539],"(","[",["T_CONSTANT_ENCAPSED_STRING","'on'",1539],["T_WHITESPACE"," ",1539],["T_DOUBLE_ARROW","=>",1539],["T_WHITESPACE"," ",1539],["T_VARIABLE","$when",1539],",",["T_WHITESPACE"," ",1539],["T_CONSTANT_ENCAPSED_STRING","'message'",1539],["T_WHITESPACE"," ",1539],["T_DOUBLE_ARROW","=>",1539],["T_WHITESPACE"," ",1539],["T_VARIABLE","$message",1539],"]",")",";",["T_WHITESPACE","\n\n        ",1539],["T_RETURN","return",1541],["T_WHITESPACE"," ",1541],["T_VARIABLE","$this",1541],["T_OBJECT_OPERATOR","->",1541],["T_STRING","add",1541],"(",["T_VARIABLE","$field",1541],",",["T_WHITESPACE"," ",1541],["T_CONSTANT_ENCAPSED_STRING","'isArray'",1541],",",["T_WHITESPACE"," ",1541],["T_VARIABLE","$extra",1541],["T_WHITESPACE"," ",1541],"+",["T_WHITESPACE"," ",1541],"[",["T_WHITESPACE","\n                ",1541],["T_CONSTANT_ENCAPSED_STRING","'rule'",1542],["T_WHITESPACE"," ",1542],["T_DOUBLE_ARROW","=>",1542],["T_WHITESPACE"," ",1542],["T_CONSTANT_ENCAPSED_STRING","'isArray'",1542],["T_WHITESPACE","\n            ",1542],"]",")",";",["T_WHITESPACE","\n    ",1543],"}",["T_WHITESPACE","\n\n    ",1544],["T_DOC_COMMENT","\/**\n     * Add a validation rule for a multiple select. Comparison is case sensitive by default.\n     *\n     * @param string $field The field you want to apply the rule to.\n     * @param array $options The options for the validator. Includes the options defined in\n     *   \\Cake\\Validation\\Validation::multiple() and the `caseInsensitive` parameter.\n     * @param string|null $message The error message when the rule fails.\n     * @param string|callable|null $when Either 'create' or 'update' or a callable that returns\n     *   true when the validation rule should be applied.\n     * @see \\Cake\\Validation\\Validation::multiple()\n     * @return $this\n     *\/",1546],["T_WHITESPACE","\n    ",1557],["T_PUBLIC","public",1558],["T_WHITESPACE"," ",1558],["T_FUNCTION","function",1558],["T_WHITESPACE"," ",1558],["T_STRING","multipleOptions",1558],"(",["T_VARIABLE","$field",1558],",",["T_WHITESPACE"," ",1558],["T_ARRAY","array",1558],["T_WHITESPACE"," ",1558],["T_VARIABLE","$options",1558],["T_WHITESPACE"," ",1558],"=",["T_WHITESPACE"," ",1558],"[","]",",",["T_WHITESPACE"," ",1558],["T_VARIABLE","$message",1558],["T_WHITESPACE"," ",1558],"=",["T_WHITESPACE"," ",1558],["T_STRING","null",1558],",",["T_WHITESPACE"," ",1558],["T_VARIABLE","$when",1558],["T_WHITESPACE"," ",1558],"=",["T_WHITESPACE"," ",1558],["T_STRING","null",1558],")",["T_WHITESPACE","\n    ",1558],"{",["T_WHITESPACE","\n        ",1559],["T_VARIABLE","$extra",1560],["T_WHITESPACE"," ",1560],"=",["T_WHITESPACE"," ",1560],["T_STRING","array_filter",1560],"(","[",["T_CONSTANT_ENCAPSED_STRING","'on'",1560],["T_WHITESPACE"," ",1560],["T_DOUBLE_ARROW","=>",1560],["T_WHITESPACE"," ",1560],["T_VARIABLE","$when",1560],",",["T_WHITESPACE"," ",1560],["T_CONSTANT_ENCAPSED_STRING","'message'",1560],["T_WHITESPACE"," ",1560],["T_DOUBLE_ARROW","=>",1560],["T_WHITESPACE"," ",1560],["T_VARIABLE","$message",1560],"]",")",";",["T_WHITESPACE","\n        ",1560],["T_VARIABLE","$caseInsensitive",1561],["T_WHITESPACE"," ",1561],"=",["T_WHITESPACE"," ",1561],["T_ISSET","isset",1561],"(",["T_VARIABLE","$options",1561],"[",["T_CONSTANT_ENCAPSED_STRING","'caseInsensitive'",1561],"]",")",["T_WHITESPACE"," ",1561],"?",["T_WHITESPACE"," ",1561],["T_VARIABLE","$options",1561],"[",["T_CONSTANT_ENCAPSED_STRING","'caseInsensitive'",1561],"]",["T_WHITESPACE"," ",1561],":",["T_WHITESPACE"," ",1561],["T_STRING","false",1561],";",["T_WHITESPACE","\n        ",1561],["T_UNSET","unset",1562],"(",["T_VARIABLE","$options",1562],"[",["T_CONSTANT_ENCAPSED_STRING","'caseInsensitive'",1562],"]",")",";",["T_WHITESPACE","\n\n        ",1562],["T_RETURN","return",1564],["T_WHITESPACE"," ",1564],["T_VARIABLE","$this",1564],["T_OBJECT_OPERATOR","->",1564],["T_STRING","add",1564],"(",["T_VARIABLE","$field",1564],",",["T_WHITESPACE"," ",1564],["T_CONSTANT_ENCAPSED_STRING","'multipleOptions'",1564],",",["T_WHITESPACE"," ",1564],["T_VARIABLE","$extra",1564],["T_WHITESPACE"," ",1564],"+",["T_WHITESPACE"," ",1564],"[",["T_WHITESPACE","\n            ",1564],["T_CONSTANT_ENCAPSED_STRING","'rule'",1565],["T_WHITESPACE"," ",1565],["T_DOUBLE_ARROW","=>",1565],["T_WHITESPACE"," ",1565],"[",["T_CONSTANT_ENCAPSED_STRING","'multiple'",1565],",",["T_WHITESPACE"," ",1565],["T_VARIABLE","$options",1565],",",["T_WHITESPACE"," ",1565],["T_VARIABLE","$caseInsensitive",1565],"]",["T_WHITESPACE","\n        ",1565],"]",")",";",["T_WHITESPACE","\n    ",1566],"}",["T_WHITESPACE","\n\n    ",1567],["T_DOC_COMMENT","\/**\n     * Add a validation rule to ensure that a field is an array containing at least\n     * the specified amount of elements\n     *\n     * @param string $field The field you want to apply the rule to.\n     * @param int $count The number of elements the array should at least have\n     * @param string|null $message The error message when the rule fails.\n     * @param string|callable|null $when Either 'create' or 'update' or a callable that returns\n     *   true when the validation rule should be applied.\n     * @see \\Cake\\Validation\\Validation::numElements()\n     * @return $this\n     *\/",1569],["T_WHITESPACE","\n    ",1580],["T_PUBLIC","public",1581],["T_WHITESPACE"," ",1581],["T_FUNCTION","function",1581],["T_WHITESPACE"," ",1581],["T_STRING","hasAtLeast",1581],"(",["T_VARIABLE","$field",1581],",",["T_WHITESPACE"," ",1581],["T_VARIABLE","$count",1581],",",["T_WHITESPACE"," ",1581],["T_VARIABLE","$message",1581],["T_WHITESPACE"," ",1581],"=",["T_WHITESPACE"," ",1581],["T_STRING","null",1581],",",["T_WHITESPACE"," ",1581],["T_VARIABLE","$when",1581],["T_WHITESPACE"," ",1581],"=",["T_WHITESPACE"," ",1581],["T_STRING","null",1581],")",["T_WHITESPACE","\n    ",1581],"{",["T_WHITESPACE","\n        ",1582],["T_VARIABLE","$extra",1583],["T_WHITESPACE"," ",1583],"=",["T_WHITESPACE"," ",1583],["T_STRING","array_filter",1583],"(","[",["T_CONSTANT_ENCAPSED_STRING","'on'",1583],["T_WHITESPACE"," ",1583],["T_DOUBLE_ARROW","=>",1583],["T_WHITESPACE"," ",1583],["T_VARIABLE","$when",1583],",",["T_WHITESPACE"," ",1583],["T_CONSTANT_ENCAPSED_STRING","'message'",1583],["T_WHITESPACE"," ",1583],["T_DOUBLE_ARROW","=>",1583],["T_WHITESPACE"," ",1583],["T_VARIABLE","$message",1583],"]",")",";",["T_WHITESPACE","\n\n        ",1583],["T_RETURN","return",1585],["T_WHITESPACE"," ",1585],["T_VARIABLE","$this",1585],["T_OBJECT_OPERATOR","->",1585],["T_STRING","add",1585],"(",["T_VARIABLE","$field",1585],",",["T_WHITESPACE"," ",1585],["T_CONSTANT_ENCAPSED_STRING","'hasAtLeast'",1585],",",["T_WHITESPACE"," ",1585],["T_VARIABLE","$extra",1585],["T_WHITESPACE"," ",1585],"+",["T_WHITESPACE"," ",1585],"[",["T_WHITESPACE","\n            ",1585],["T_CONSTANT_ENCAPSED_STRING","'rule'",1586],["T_WHITESPACE"," ",1586],["T_DOUBLE_ARROW","=>",1586],["T_WHITESPACE"," ",1586],["T_FUNCTION","function",1586],["T_WHITESPACE"," ",1586],"(",["T_VARIABLE","$value",1586],")",["T_WHITESPACE"," ",1586],["T_USE","use",1586],["T_WHITESPACE"," ",1586],"(",["T_VARIABLE","$count",1586],")",["T_WHITESPACE"," ",1586],"{",["T_WHITESPACE","\n                ",1586],["T_IF","if",1587],["T_WHITESPACE"," ",1587],"(",["T_STRING","is_array",1587],"(",["T_VARIABLE","$value",1587],")",["T_WHITESPACE"," ",1587],["T_BOOLEAN_AND","&&",1587],["T_WHITESPACE"," ",1587],["T_ISSET","isset",1587],"(",["T_VARIABLE","$value",1587],"[",["T_CONSTANT_ENCAPSED_STRING","'_ids'",1587],"]",")",")",["T_WHITESPACE"," ",1587],"{",["T_WHITESPACE","\n                    ",1587],["T_VARIABLE","$value",1588],["T_WHITESPACE"," ",1588],"=",["T_WHITESPACE"," ",1588],["T_VARIABLE","$value",1588],"[",["T_CONSTANT_ENCAPSED_STRING","'_ids'",1588],"]",";",["T_WHITESPACE","\n                ",1588],"}",["T_WHITESPACE","\n\n                ",1589],["T_RETURN","return",1591],["T_WHITESPACE"," ",1591],["T_STRING","Validation",1591],["T_DOUBLE_COLON","::",1591],["T_STRING","numElements",1591],"(",["T_VARIABLE","$value",1591],",",["T_WHITESPACE"," ",1591],["T_CONSTANT_ENCAPSED_STRING","'>='",1591],",",["T_WHITESPACE"," ",1591],["T_VARIABLE","$count",1591],")",";",["T_WHITESPACE","\n            ",1591],"}",["T_WHITESPACE","\n        ",1592],"]",")",";",["T_WHITESPACE","\n    ",1593],"}",["T_WHITESPACE","\n\n    ",1594],["T_DOC_COMMENT","\/**\n     * Add a validation rule to ensure that a field is an array containing at most\n     * the specified amount of elements\n     *\n     * @param string $field The field you want to apply the rule to.\n     * @param int $count The number maximum amount of elements the field should have\n     * @param string|null $message The error message when the rule fails.\n     * @param string|callable|null $when Either 'create' or 'update' or a callable that returns\n     *   true when the validation rule should be applied.\n     * @see \\Cake\\Validation\\Validation::numElements()\n     * @return $this\n     *\/",1596],["T_WHITESPACE","\n    ",1607],["T_PUBLIC","public",1608],["T_WHITESPACE"," ",1608],["T_FUNCTION","function",1608],["T_WHITESPACE"," ",1608],["T_STRING","hasAtMost",1608],"(",["T_VARIABLE","$field",1608],",",["T_WHITESPACE"," ",1608],["T_VARIABLE","$count",1608],",",["T_WHITESPACE"," ",1608],["T_VARIABLE","$message",1608],["T_WHITESPACE"," ",1608],"=",["T_WHITESPACE"," ",1608],["T_STRING","null",1608],",",["T_WHITESPACE"," ",1608],["T_VARIABLE","$when",1608],["T_WHITESPACE"," ",1608],"=",["T_WHITESPACE"," ",1608],["T_STRING","null",1608],")",["T_WHITESPACE","\n    ",1608],"{",["T_WHITESPACE","\n        ",1609],["T_VARIABLE","$extra",1610],["T_WHITESPACE"," ",1610],"=",["T_WHITESPACE"," ",1610],["T_STRING","array_filter",1610],"(","[",["T_CONSTANT_ENCAPSED_STRING","'on'",1610],["T_WHITESPACE"," ",1610],["T_DOUBLE_ARROW","=>",1610],["T_WHITESPACE"," ",1610],["T_VARIABLE","$when",1610],",",["T_WHITESPACE"," ",1610],["T_CONSTANT_ENCAPSED_STRING","'message'",1610],["T_WHITESPACE"," ",1610],["T_DOUBLE_ARROW","=>",1610],["T_WHITESPACE"," ",1610],["T_VARIABLE","$message",1610],"]",")",";",["T_WHITESPACE","\n\n        ",1610],["T_RETURN","return",1612],["T_WHITESPACE"," ",1612],["T_VARIABLE","$this",1612],["T_OBJECT_OPERATOR","->",1612],["T_STRING","add",1612],"(",["T_VARIABLE","$field",1612],",",["T_WHITESPACE"," ",1612],["T_CONSTANT_ENCAPSED_STRING","'hasAtMost'",1612],",",["T_WHITESPACE"," ",1612],["T_VARIABLE","$extra",1612],["T_WHITESPACE"," ",1612],"+",["T_WHITESPACE"," ",1612],"[",["T_WHITESPACE","\n            ",1612],["T_CONSTANT_ENCAPSED_STRING","'rule'",1613],["T_WHITESPACE"," ",1613],["T_DOUBLE_ARROW","=>",1613],["T_WHITESPACE"," ",1613],["T_FUNCTION","function",1613],["T_WHITESPACE"," ",1613],"(",["T_VARIABLE","$value",1613],")",["T_WHITESPACE"," ",1613],["T_USE","use",1613],["T_WHITESPACE"," ",1613],"(",["T_VARIABLE","$count",1613],")",["T_WHITESPACE"," ",1613],"{",["T_WHITESPACE","\n                ",1613],["T_IF","if",1614],["T_WHITESPACE"," ",1614],"(",["T_STRING","is_array",1614],"(",["T_VARIABLE","$value",1614],")",["T_WHITESPACE"," ",1614],["T_BOOLEAN_AND","&&",1614],["T_WHITESPACE"," ",1614],["T_ISSET","isset",1614],"(",["T_VARIABLE","$value",1614],"[",["T_CONSTANT_ENCAPSED_STRING","'_ids'",1614],"]",")",")",["T_WHITESPACE"," ",1614],"{",["T_WHITESPACE","\n                    ",1614],["T_VARIABLE","$value",1615],["T_WHITESPACE"," ",1615],"=",["T_WHITESPACE"," ",1615],["T_VARIABLE","$value",1615],"[",["T_CONSTANT_ENCAPSED_STRING","'_ids'",1615],"]",";",["T_WHITESPACE","\n                ",1615],"}",["T_WHITESPACE","\n\n                ",1616],["T_RETURN","return",1618],["T_WHITESPACE"," ",1618],["T_STRING","Validation",1618],["T_DOUBLE_COLON","::",1618],["T_STRING","numElements",1618],"(",["T_VARIABLE","$value",1618],",",["T_WHITESPACE"," ",1618],["T_CONSTANT_ENCAPSED_STRING","'<='",1618],",",["T_WHITESPACE"," ",1618],["T_VARIABLE","$count",1618],")",";",["T_WHITESPACE","\n            ",1618],"}",["T_WHITESPACE","\n        ",1619],"]",")",";",["T_WHITESPACE","\n    ",1620],"}",["T_WHITESPACE","\n\n    ",1621],["T_DOC_COMMENT","\/**\n     * Returns whether or not a field can be left empty for a new or already existing\n     * record.\n     *\n     * @param string $field Field name.\n     * @param bool $newRecord whether the data to be validated is new or to be updated.\n     * @return bool\n     *\/",1623],["T_WHITESPACE","\n    ",1630],["T_PUBLIC","public",1631],["T_WHITESPACE"," ",1631],["T_FUNCTION","function",1631],["T_WHITESPACE"," ",1631],["T_STRING","isEmptyAllowed",1631],"(",["T_VARIABLE","$field",1631],",",["T_WHITESPACE"," ",1631],["T_VARIABLE","$newRecord",1631],")",["T_WHITESPACE","\n    ",1631],"{",["T_WHITESPACE","\n        ",1632],["T_VARIABLE","$providers",1633],["T_WHITESPACE"," ",1633],"=",["T_WHITESPACE"," ",1633],["T_VARIABLE","$this",1633],["T_OBJECT_OPERATOR","->",1633],["T_STRING","_providers",1633],";",["T_WHITESPACE","\n        ",1633],["T_VARIABLE","$data",1634],["T_WHITESPACE"," ",1634],"=",["T_WHITESPACE"," ",1634],"[","]",";",["T_WHITESPACE","\n        ",1634],["T_VARIABLE","$context",1635],["T_WHITESPACE"," ",1635],"=",["T_WHITESPACE"," ",1635],["T_STRING","compact",1635],"(",["T_CONSTANT_ENCAPSED_STRING","'data'",1635],",",["T_WHITESPACE"," ",1635],["T_CONSTANT_ENCAPSED_STRING","'newRecord'",1635],",",["T_WHITESPACE"," ",1635],["T_CONSTANT_ENCAPSED_STRING","'field'",1635],",",["T_WHITESPACE"," ",1635],["T_CONSTANT_ENCAPSED_STRING","'providers'",1635],")",";",["T_WHITESPACE","\n\n        ",1635],["T_RETURN","return",1637],["T_WHITESPACE"," ",1637],["T_VARIABLE","$this",1637],["T_OBJECT_OPERATOR","->",1637],["T_STRING","_canBeEmpty",1637],"(",["T_VARIABLE","$this",1637],["T_OBJECT_OPERATOR","->",1637],["T_STRING","field",1637],"(",["T_VARIABLE","$field",1637],")",",",["T_WHITESPACE"," ",1637],["T_VARIABLE","$context",1637],")",";",["T_WHITESPACE","\n    ",1637],"}",["T_WHITESPACE","\n\n    ",1638],["T_DOC_COMMENT","\/**\n     * Returns whether or not a field can be left out for a new or already existing\n     * record.\n     *\n     * @param string $field Field name.\n     * @param bool $newRecord Whether the data to be validated is new or to be updated.\n     * @return bool\n     *\/",1640],["T_WHITESPACE","\n    ",1647],["T_PUBLIC","public",1648],["T_WHITESPACE"," ",1648],["T_FUNCTION","function",1648],["T_WHITESPACE"," ",1648],["T_STRING","isPresenceRequired",1648],"(",["T_VARIABLE","$field",1648],",",["T_WHITESPACE"," ",1648],["T_VARIABLE","$newRecord",1648],")",["T_WHITESPACE","\n    ",1648],"{",["T_WHITESPACE","\n        ",1649],["T_VARIABLE","$providers",1650],["T_WHITESPACE"," ",1650],"=",["T_WHITESPACE"," ",1650],["T_VARIABLE","$this",1650],["T_OBJECT_OPERATOR","->",1650],["T_STRING","_providers",1650],";",["T_WHITESPACE","\n        ",1650],["T_VARIABLE","$data",1651],["T_WHITESPACE"," ",1651],"=",["T_WHITESPACE"," ",1651],"[","]",";",["T_WHITESPACE","\n        ",1651],["T_VARIABLE","$context",1652],["T_WHITESPACE"," ",1652],"=",["T_WHITESPACE"," ",1652],["T_STRING","compact",1652],"(",["T_CONSTANT_ENCAPSED_STRING","'data'",1652],",",["T_WHITESPACE"," ",1652],["T_CONSTANT_ENCAPSED_STRING","'newRecord'",1652],",",["T_WHITESPACE"," ",1652],["T_CONSTANT_ENCAPSED_STRING","'field'",1652],",",["T_WHITESPACE"," ",1652],["T_CONSTANT_ENCAPSED_STRING","'providers'",1652],")",";",["T_WHITESPACE","\n\n        ",1652],["T_RETURN","return",1654],["T_WHITESPACE"," ",1654],"!",["T_VARIABLE","$this",1654],["T_OBJECT_OPERATOR","->",1654],["T_STRING","_checkPresence",1654],"(",["T_VARIABLE","$this",1654],["T_OBJECT_OPERATOR","->",1654],["T_STRING","field",1654],"(",["T_VARIABLE","$field",1654],")",",",["T_WHITESPACE"," ",1654],["T_VARIABLE","$context",1654],")",";",["T_WHITESPACE","\n    ",1654],"}",["T_WHITESPACE","\n\n    ",1655],["T_DOC_COMMENT","\/**\n     * Returns false if any validation for the passed rule set should be stopped\n     * due to the field missing in the data array\n     *\n     * @param \\Cake\\Validation\\ValidationSet $field The set of rules for a field.\n     * @param array $context A key value list of data containing the validation context.\n     * @return bool\n     *\/",1657],["T_WHITESPACE","\n    ",1664],["T_PROTECTED","protected",1665],["T_WHITESPACE"," ",1665],["T_FUNCTION","function",1665],["T_WHITESPACE"," ",1665],["T_STRING","_checkPresence",1665],"(",["T_VARIABLE","$field",1665],",",["T_WHITESPACE"," ",1665],["T_VARIABLE","$context",1665],")",["T_WHITESPACE","\n    ",1665],"{",["T_WHITESPACE","\n        ",1666],["T_VARIABLE","$required",1667],["T_WHITESPACE"," ",1667],"=",["T_WHITESPACE"," ",1667],["T_VARIABLE","$field",1667],["T_OBJECT_OPERATOR","->",1667],["T_STRING","isPresenceRequired",1667],"(",")",";",["T_WHITESPACE","\n\n        ",1667],["T_IF","if",1669],["T_WHITESPACE"," ",1669],"(","!",["T_STRING","is_string",1669],"(",["T_VARIABLE","$required",1669],")",["T_WHITESPACE"," ",1669],["T_BOOLEAN_AND","&&",1669],["T_WHITESPACE"," ",1669],["T_STRING","is_callable",1669],"(",["T_VARIABLE","$required",1669],")",")",["T_WHITESPACE"," ",1669],"{",["T_WHITESPACE","\n            ",1669],["T_RETURN","return",1670],["T_WHITESPACE"," ",1670],"!",["T_VARIABLE","$required",1670],"(",["T_VARIABLE","$context",1670],")",";",["T_WHITESPACE","\n        ",1670],"}",["T_WHITESPACE","\n\n        ",1671],["T_VARIABLE","$newRecord",1673],["T_WHITESPACE"," ",1673],"=",["T_WHITESPACE"," ",1673],["T_VARIABLE","$context",1673],"[",["T_CONSTANT_ENCAPSED_STRING","'newRecord'",1673],"]",";",["T_WHITESPACE","\n        ",1673],["T_IF","if",1674],["T_WHITESPACE"," ",1674],"(",["T_STRING","in_array",1674],"(",["T_VARIABLE","$required",1674],",",["T_WHITESPACE"," ",1674],"[",["T_CONSTANT_ENCAPSED_STRING","'create'",1674],",",["T_WHITESPACE"," ",1674],["T_CONSTANT_ENCAPSED_STRING","'update'",1674],"]",",",["T_WHITESPACE"," ",1674],["T_STRING","true",1674],")",")",["T_WHITESPACE"," ",1674],"{",["T_WHITESPACE","\n            ",1674],["T_RETURN","return",1675],["T_WHITESPACE"," ",1675],"(",["T_WHITESPACE","\n                ",1675],"(",["T_VARIABLE","$required",1676],["T_WHITESPACE"," ",1676],["T_IS_IDENTICAL","===",1676],["T_WHITESPACE"," ",1676],["T_CONSTANT_ENCAPSED_STRING","'create'",1676],["T_WHITESPACE"," ",1676],["T_BOOLEAN_AND","&&",1676],["T_WHITESPACE"," ",1676],"!",["T_VARIABLE","$newRecord",1676],")",["T_WHITESPACE"," ",1676],["T_BOOLEAN_OR","||",1676],["T_WHITESPACE","\n                ",1676],"(",["T_VARIABLE","$required",1677],["T_WHITESPACE"," ",1677],["T_IS_IDENTICAL","===",1677],["T_WHITESPACE"," ",1677],["T_CONSTANT_ENCAPSED_STRING","'update'",1677],["T_WHITESPACE"," ",1677],["T_BOOLEAN_AND","&&",1677],["T_WHITESPACE"," ",1677],["T_VARIABLE","$newRecord",1677],")",["T_WHITESPACE","\n            ",1677],")",";",["T_WHITESPACE","\n        ",1678],"}",["T_WHITESPACE","\n\n        ",1679],["T_RETURN","return",1681],["T_WHITESPACE"," ",1681],"!",["T_VARIABLE","$required",1681],";",["T_WHITESPACE","\n    ",1681],"}",["T_WHITESPACE","\n\n    ",1682],["T_DOC_COMMENT","\/**\n     * Returns whether the field can be left blank according to `allowEmpty`\n     *\n     * @param \\Cake\\Validation\\ValidationSet $field the set of rules for a field\n     * @param array $context a key value list of data containing the validation context.\n     * @return bool\n     *\/",1684],["T_WHITESPACE","\n    ",1690],["T_PROTECTED","protected",1691],["T_WHITESPACE"," ",1691],["T_FUNCTION","function",1691],["T_WHITESPACE"," ",1691],["T_STRING","_canBeEmpty",1691],"(",["T_VARIABLE","$field",1691],",",["T_WHITESPACE"," ",1691],["T_VARIABLE","$context",1691],")",["T_WHITESPACE","\n    ",1691],"{",["T_WHITESPACE","\n        ",1692],["T_VARIABLE","$allowed",1693],["T_WHITESPACE"," ",1693],"=",["T_WHITESPACE"," ",1693],["T_VARIABLE","$field",1693],["T_OBJECT_OPERATOR","->",1693],["T_STRING","isEmptyAllowed",1693],"(",")",";",["T_WHITESPACE","\n\n        ",1693],["T_IF","if",1695],["T_WHITESPACE"," ",1695],"(","!",["T_STRING","is_string",1695],"(",["T_VARIABLE","$allowed",1695],")",["T_WHITESPACE"," ",1695],["T_BOOLEAN_AND","&&",1695],["T_WHITESPACE"," ",1695],["T_STRING","is_callable",1695],"(",["T_VARIABLE","$allowed",1695],")",")",["T_WHITESPACE"," ",1695],"{",["T_WHITESPACE","\n            ",1695],["T_RETURN","return",1696],["T_WHITESPACE"," ",1696],["T_VARIABLE","$allowed",1696],"(",["T_VARIABLE","$context",1696],")",";",["T_WHITESPACE","\n        ",1696],"}",["T_WHITESPACE","\n\n        ",1697],["T_VARIABLE","$newRecord",1699],["T_WHITESPACE"," ",1699],"=",["T_WHITESPACE"," ",1699],["T_VARIABLE","$context",1699],"[",["T_CONSTANT_ENCAPSED_STRING","'newRecord'",1699],"]",";",["T_WHITESPACE","\n        ",1699],["T_IF","if",1700],["T_WHITESPACE"," ",1700],"(",["T_STRING","in_array",1700],"(",["T_VARIABLE","$allowed",1700],",",["T_WHITESPACE"," ",1700],"[",["T_CONSTANT_ENCAPSED_STRING","'create'",1700],",",["T_WHITESPACE"," ",1700],["T_CONSTANT_ENCAPSED_STRING","'update'",1700],"]",",",["T_WHITESPACE"," ",1700],["T_STRING","true",1700],")",")",["T_WHITESPACE"," ",1700],"{",["T_WHITESPACE","\n            ",1700],["T_VARIABLE","$allowed",1701],["T_WHITESPACE"," ",1701],"=",["T_WHITESPACE"," ",1701],"(",["T_WHITESPACE","\n                ",1701],"(",["T_VARIABLE","$allowed",1702],["T_WHITESPACE"," ",1702],["T_IS_IDENTICAL","===",1702],["T_WHITESPACE"," ",1702],["T_CONSTANT_ENCAPSED_STRING","'create'",1702],["T_WHITESPACE"," ",1702],["T_BOOLEAN_AND","&&",1702],["T_WHITESPACE"," ",1702],["T_VARIABLE","$newRecord",1702],")",["T_WHITESPACE"," ",1702],["T_BOOLEAN_OR","||",1702],["T_WHITESPACE","\n                ",1702],"(",["T_VARIABLE","$allowed",1703],["T_WHITESPACE"," ",1703],["T_IS_IDENTICAL","===",1703],["T_WHITESPACE"," ",1703],["T_CONSTANT_ENCAPSED_STRING","'update'",1703],["T_WHITESPACE"," ",1703],["T_BOOLEAN_AND","&&",1703],["T_WHITESPACE"," ",1703],"!",["T_VARIABLE","$newRecord",1703],")",["T_WHITESPACE","\n            ",1703],")",";",["T_WHITESPACE","\n        ",1704],"}",["T_WHITESPACE","\n\n        ",1705],["T_RETURN","return",1707],["T_WHITESPACE"," ",1707],["T_VARIABLE","$allowed",1707],";",["T_WHITESPACE","\n    ",1707],"}",["T_WHITESPACE","\n\n    ",1708],["T_DOC_COMMENT","\/**\n     * Returns true if the field is empty in the passed data array\n     *\n     * @param mixed $data value to check against\n     * @return bool\n     *\/",1710],["T_WHITESPACE","\n    ",1715],["T_PROTECTED","protected",1716],["T_WHITESPACE"," ",1716],["T_FUNCTION","function",1716],["T_WHITESPACE"," ",1716],["T_STRING","_fieldIsEmpty",1716],"(",["T_VARIABLE","$data",1716],")",["T_WHITESPACE","\n    ",1716],"{",["T_WHITESPACE","\n        ",1717],["T_IF","if",1718],["T_WHITESPACE"," ",1718],"(",["T_EMPTY","empty",1718],"(",["T_VARIABLE","$data",1718],")",["T_WHITESPACE"," ",1718],["T_BOOLEAN_AND","&&",1718],["T_WHITESPACE"," ",1718],["T_VARIABLE","$data",1718],["T_WHITESPACE"," ",1718],["T_IS_NOT_IDENTICAL","!==",1718],["T_WHITESPACE"," ",1718],["T_CONSTANT_ENCAPSED_STRING","'0'",1718],["T_WHITESPACE"," ",1718],["T_BOOLEAN_AND","&&",1718],["T_WHITESPACE"," ",1718],["T_VARIABLE","$data",1718],["T_WHITESPACE"," ",1718],["T_IS_NOT_IDENTICAL","!==",1718],["T_WHITESPACE"," ",1718],["T_STRING","false",1718],["T_WHITESPACE"," ",1718],["T_BOOLEAN_AND","&&",1718],["T_WHITESPACE"," ",1718],["T_VARIABLE","$data",1718],["T_WHITESPACE"," ",1718],["T_IS_NOT_IDENTICAL","!==",1718],["T_WHITESPACE"," ",1718],["T_LNUMBER","0",1718],["T_WHITESPACE"," ",1718],["T_BOOLEAN_AND","&&",1718],["T_WHITESPACE"," ",1718],["T_VARIABLE","$data",1718],["T_WHITESPACE"," ",1718],["T_IS_NOT_IDENTICAL","!==",1718],["T_WHITESPACE"," ",1718],["T_DNUMBER","0.0",1718],")",["T_WHITESPACE"," ",1718],"{",["T_WHITESPACE","\n            ",1718],["T_RETURN","return",1719],["T_WHITESPACE"," ",1719],["T_STRING","true",1719],";",["T_WHITESPACE","\n        ",1719],"}",["T_WHITESPACE","\n        ",1720],["T_VARIABLE","$isArray",1721],["T_WHITESPACE"," ",1721],"=",["T_WHITESPACE"," ",1721],["T_STRING","is_array",1721],"(",["T_VARIABLE","$data",1721],")",";",["T_WHITESPACE","\n        ",1721],["T_IF","if",1722],["T_WHITESPACE"," ",1722],"(",["T_VARIABLE","$isArray",1722],["T_WHITESPACE"," ",1722],["T_BOOLEAN_AND","&&",1722],["T_WHITESPACE"," ",1722],"(",["T_ISSET","isset",1722],"(",["T_VARIABLE","$data",1722],"[",["T_CONSTANT_ENCAPSED_STRING","'year'",1722],"]",")",["T_WHITESPACE"," ",1722],["T_BOOLEAN_OR","||",1722],["T_WHITESPACE"," ",1722],["T_ISSET","isset",1722],"(",["T_VARIABLE","$data",1722],"[",["T_CONSTANT_ENCAPSED_STRING","'hour'",1722],"]",")",")",")",["T_WHITESPACE"," ",1722],"{",["T_WHITESPACE","\n            ",1722],["T_VARIABLE","$value",1723],["T_WHITESPACE"," ",1723],"=",["T_WHITESPACE"," ",1723],["T_STRING","implode",1723],"(",["T_CONSTANT_ENCAPSED_STRING","''",1723],",",["T_WHITESPACE"," ",1723],["T_VARIABLE","$data",1723],")",";",["T_WHITESPACE","\n\n            ",1723],["T_RETURN","return",1725],["T_WHITESPACE"," ",1725],["T_STRING","strlen",1725],"(",["T_VARIABLE","$value",1725],")",["T_WHITESPACE"," ",1725],["T_IS_IDENTICAL","===",1725],["T_WHITESPACE"," ",1725],["T_LNUMBER","0",1725],";",["T_WHITESPACE","\n        ",1725],"}",["T_WHITESPACE","\n        ",1726],["T_IF","if",1727],["T_WHITESPACE"," ",1727],"(",["T_VARIABLE","$isArray",1727],["T_WHITESPACE"," ",1727],["T_BOOLEAN_AND","&&",1727],["T_WHITESPACE"," ",1727],["T_ISSET","isset",1727],"(",["T_VARIABLE","$data",1727],"[",["T_CONSTANT_ENCAPSED_STRING","'name'",1727],"]",",",["T_WHITESPACE"," ",1727],["T_VARIABLE","$data",1727],"[",["T_CONSTANT_ENCAPSED_STRING","'type'",1727],"]",",",["T_WHITESPACE"," ",1727],["T_VARIABLE","$data",1727],"[",["T_CONSTANT_ENCAPSED_STRING","'tmp_name'",1727],"]",",",["T_WHITESPACE"," ",1727],["T_VARIABLE","$data",1727],"[",["T_CONSTANT_ENCAPSED_STRING","'error'",1727],"]",")",")",["T_WHITESPACE"," ",1727],"{",["T_WHITESPACE","\n            ",1727],["T_RETURN","return",1728],["T_WHITESPACE"," ",1728],["T_INT_CAST","(int)",1728],["T_VARIABLE","$data",1728],"[",["T_CONSTANT_ENCAPSED_STRING","'error'",1728],"]",["T_WHITESPACE"," ",1728],["T_IS_IDENTICAL","===",1728],["T_WHITESPACE"," ",1728],["T_STRING","UPLOAD_ERR_NO_FILE",1728],";",["T_WHITESPACE","\n        ",1728],"}",["T_WHITESPACE","\n\n        ",1729],["T_RETURN","return",1731],["T_WHITESPACE"," ",1731],["T_STRING","false",1731],";",["T_WHITESPACE","\n    ",1731],"}",["T_WHITESPACE","\n\n    ",1732],["T_DOC_COMMENT","\/**\n     * Iterates over each rule in the validation set and collects the errors resulting\n     * from executing them\n     *\n     * @param string $field The name of the field that is being processed\n     * @param \\Cake\\Validation\\ValidationSet $rules the list of rules for a field\n     * @param array $data the full data passed to the validator\n     * @param bool $newRecord whether is it a new record or an existing one\n     * @return array\n     *\/",1734],["T_WHITESPACE","\n    ",1743],["T_PROTECTED","protected",1744],["T_WHITESPACE"," ",1744],["T_FUNCTION","function",1744],["T_WHITESPACE"," ",1744],["T_STRING","_processRules",1744],"(",["T_VARIABLE","$field",1744],",",["T_WHITESPACE"," ",1744],["T_STRING","ValidationSet",1744],["T_WHITESPACE"," ",1744],["T_VARIABLE","$rules",1744],",",["T_WHITESPACE"," ",1744],["T_VARIABLE","$data",1744],",",["T_WHITESPACE"," ",1744],["T_VARIABLE","$newRecord",1744],")",["T_WHITESPACE","\n    ",1744],"{",["T_WHITESPACE","\n        ",1745],["T_VARIABLE","$errors",1746],["T_WHITESPACE"," ",1746],"=",["T_WHITESPACE"," ",1746],"[","]",";",["T_WHITESPACE","\n        ",1746],["T_COMMENT","\/\/ Loading default provider in case there is none\n",1747],["T_WHITESPACE","        ",1748],["T_VARIABLE","$this",1748],["T_OBJECT_OPERATOR","->",1748],["T_STRING","provider",1748],"(",["T_CONSTANT_ENCAPSED_STRING","'default'",1748],")",";",["T_WHITESPACE","\n        ",1748],["T_VARIABLE","$message",1749],["T_WHITESPACE"," ",1749],"=",["T_WHITESPACE"," ",1749],["T_CONSTANT_ENCAPSED_STRING","'The provided value is invalid'",1749],";",["T_WHITESPACE","\n\n        ",1749],["T_IF","if",1751],["T_WHITESPACE"," ",1751],"(",["T_VARIABLE","$this",1751],["T_OBJECT_OPERATOR","->",1751],["T_STRING","_useI18n",1751],")",["T_WHITESPACE"," ",1751],"{",["T_WHITESPACE","\n            ",1751],["T_VARIABLE","$message",1752],["T_WHITESPACE"," ",1752],"=",["T_WHITESPACE"," ",1752],["T_STRING","__d",1752],"(",["T_CONSTANT_ENCAPSED_STRING","'cake'",1752],",",["T_WHITESPACE"," ",1752],["T_CONSTANT_ENCAPSED_STRING","'The provided value is invalid'",1752],")",";",["T_WHITESPACE","\n        ",1752],"}",["T_WHITESPACE","\n\n        ",1753],["T_FOREACH","foreach",1755],["T_WHITESPACE"," ",1755],"(",["T_VARIABLE","$rules",1755],["T_WHITESPACE"," ",1755],["T_AS","as",1755],["T_WHITESPACE"," ",1755],["T_VARIABLE","$name",1755],["T_WHITESPACE"," ",1755],["T_DOUBLE_ARROW","=>",1755],["T_WHITESPACE"," ",1755],["T_VARIABLE","$rule",1755],")",["T_WHITESPACE"," ",1755],"{",["T_WHITESPACE","\n            ",1755],["T_VARIABLE","$result",1756],["T_WHITESPACE"," ",1756],"=",["T_WHITESPACE"," ",1756],["T_VARIABLE","$rule",1756],["T_OBJECT_OPERATOR","->",1756],["T_STRING","process",1756],"(",["T_VARIABLE","$data",1756],"[",["T_VARIABLE","$field",1756],"]",",",["T_WHITESPACE"," ",1756],["T_VARIABLE","$this",1756],["T_OBJECT_OPERATOR","->",1756],["T_STRING","_providers",1756],",",["T_WHITESPACE"," ",1756],["T_STRING","compact",1756],"(",["T_CONSTANT_ENCAPSED_STRING","'newRecord'",1756],",",["T_WHITESPACE"," ",1756],["T_CONSTANT_ENCAPSED_STRING","'data'",1756],",",["T_WHITESPACE"," ",1756],["T_CONSTANT_ENCAPSED_STRING","'field'",1756],")",")",";",["T_WHITESPACE","\n            ",1756],["T_IF","if",1757],["T_WHITESPACE"," ",1757],"(",["T_VARIABLE","$result",1757],["T_WHITESPACE"," ",1757],["T_IS_IDENTICAL","===",1757],["T_WHITESPACE"," ",1757],["T_STRING","true",1757],")",["T_WHITESPACE"," ",1757],"{",["T_WHITESPACE","\n                ",1757],["T_CONTINUE","continue",1758],";",["T_WHITESPACE","\n            ",1758],"}",["T_WHITESPACE","\n\n            ",1759],["T_VARIABLE","$errors",1761],"[",["T_VARIABLE","$name",1761],"]",["T_WHITESPACE"," ",1761],"=",["T_WHITESPACE"," ",1761],["T_VARIABLE","$message",1761],";",["T_WHITESPACE","\n            ",1761],["T_IF","if",1762],["T_WHITESPACE"," ",1762],"(",["T_STRING","is_array",1762],"(",["T_VARIABLE","$result",1762],")",["T_WHITESPACE"," ",1762],["T_BOOLEAN_AND","&&",1762],["T_WHITESPACE"," ",1762],["T_VARIABLE","$name",1762],["T_WHITESPACE"," ",1762],["T_IS_IDENTICAL","===",1762],["T_WHITESPACE"," ",1762],["T_STATIC","static",1762],["T_DOUBLE_COLON","::",1762],["T_STRING","NESTED",1762],")",["T_WHITESPACE"," ",1762],"{",["T_WHITESPACE","\n                ",1762],["T_VARIABLE","$errors",1763],["T_WHITESPACE"," ",1763],"=",["T_WHITESPACE"," ",1763],["T_VARIABLE","$result",1763],";",["T_WHITESPACE","\n            ",1763],"}",["T_WHITESPACE","\n            ",1764],["T_IF","if",1765],["T_WHITESPACE"," ",1765],"(",["T_STRING","is_string",1765],"(",["T_VARIABLE","$result",1765],")",")",["T_WHITESPACE"," ",1765],"{",["T_WHITESPACE","\n                ",1765],["T_VARIABLE","$errors",1766],"[",["T_VARIABLE","$name",1766],"]",["T_WHITESPACE"," ",1766],"=",["T_WHITESPACE"," ",1766],["T_VARIABLE","$result",1766],";",["T_WHITESPACE","\n            ",1766],"}",["T_WHITESPACE","\n\n            ",1767],["T_IF","if",1769],["T_WHITESPACE"," ",1769],"(",["T_VARIABLE","$rule",1769],["T_OBJECT_OPERATOR","->",1769],["T_STRING","isLast",1769],"(",")",")",["T_WHITESPACE"," ",1769],"{",["T_WHITESPACE","\n                ",1769],["T_BREAK","break",1770],";",["T_WHITESPACE","\n            ",1770],"}",["T_WHITESPACE","\n        ",1771],"}",["T_WHITESPACE","\n\n        ",1772],["T_RETURN","return",1774],["T_WHITESPACE"," ",1774],["T_VARIABLE","$errors",1774],";",["T_WHITESPACE","\n    ",1774],"}",["T_WHITESPACE","\n\n    ",1775],["T_DOC_COMMENT","\/**\n     * Get the printable version of this object.\n     *\n     * @return array\n     *\/",1777],["T_WHITESPACE","\n    ",1781],["T_PUBLIC","public",1782],["T_WHITESPACE"," ",1782],["T_FUNCTION","function",1782],["T_WHITESPACE"," ",1782],["T_STRING","__debugInfo",1782],"(",")",["T_WHITESPACE","\n    ",1782],"{",["T_WHITESPACE","\n        ",1783],["T_VARIABLE","$fields",1784],["T_WHITESPACE"," ",1784],"=",["T_WHITESPACE"," ",1784],"[","]",";",["T_WHITESPACE","\n        ",1784],["T_FOREACH","foreach",1785],["T_WHITESPACE"," ",1785],"(",["T_VARIABLE","$this",1785],["T_OBJECT_OPERATOR","->",1785],["T_STRING","_fields",1785],["T_WHITESPACE"," ",1785],["T_AS","as",1785],["T_WHITESPACE"," ",1785],["T_VARIABLE","$name",1785],["T_WHITESPACE"," ",1785],["T_DOUBLE_ARROW","=>",1785],["T_WHITESPACE"," ",1785],["T_VARIABLE","$fieldSet",1785],")",["T_WHITESPACE"," ",1785],"{",["T_WHITESPACE","\n            ",1785],["T_VARIABLE","$fields",1786],"[",["T_VARIABLE","$name",1786],"]",["T_WHITESPACE"," ",1786],"=",["T_WHITESPACE"," ",1786],"[",["T_WHITESPACE","\n                ",1786],["T_CONSTANT_ENCAPSED_STRING","'isPresenceRequired'",1787],["T_WHITESPACE"," ",1787],["T_DOUBLE_ARROW","=>",1787],["T_WHITESPACE"," ",1787],["T_VARIABLE","$fieldSet",1787],["T_OBJECT_OPERATOR","->",1787],["T_STRING","isPresenceRequired",1787],"(",")",",",["T_WHITESPACE","\n                ",1787],["T_CONSTANT_ENCAPSED_STRING","'isEmptyAllowed'",1788],["T_WHITESPACE"," ",1788],["T_DOUBLE_ARROW","=>",1788],["T_WHITESPACE"," ",1788],["T_VARIABLE","$fieldSet",1788],["T_OBJECT_OPERATOR","->",1788],["T_STRING","isEmptyAllowed",1788],"(",")",",",["T_WHITESPACE","\n                ",1788],["T_CONSTANT_ENCAPSED_STRING","'rules'",1789],["T_WHITESPACE"," ",1789],["T_DOUBLE_ARROW","=>",1789],["T_WHITESPACE"," ",1789],["T_STRING","array_keys",1789],"(",["T_VARIABLE","$fieldSet",1789],["T_OBJECT_OPERATOR","->",1789],["T_STRING","rules",1789],"(",")",")",",",["T_WHITESPACE","\n            ",1789],"]",";",["T_WHITESPACE","\n        ",1790],"}",["T_WHITESPACE","\n\n        ",1791],["T_RETURN","return",1793],["T_WHITESPACE"," ",1793],"[",["T_WHITESPACE","\n            ",1793],["T_CONSTANT_ENCAPSED_STRING","'_presenceMessages'",1794],["T_WHITESPACE"," ",1794],["T_DOUBLE_ARROW","=>",1794],["T_WHITESPACE"," ",1794],["T_VARIABLE","$this",1794],["T_OBJECT_OPERATOR","->",1794],["T_STRING","_presenceMessages",1794],",",["T_WHITESPACE","\n            ",1794],["T_CONSTANT_ENCAPSED_STRING","'_allowEmptyMessages'",1795],["T_WHITESPACE"," ",1795],["T_DOUBLE_ARROW","=>",1795],["T_WHITESPACE"," ",1795],["T_VARIABLE","$this",1795],["T_OBJECT_OPERATOR","->",1795],["T_STRING","_allowEmptyMessages",1795],",",["T_WHITESPACE","\n            ",1795],["T_CONSTANT_ENCAPSED_STRING","'_useI18n'",1796],["T_WHITESPACE"," ",1796],["T_DOUBLE_ARROW","=>",1796],["T_WHITESPACE"," ",1796],["T_VARIABLE","$this",1796],["T_OBJECT_OPERATOR","->",1796],["T_STRING","_useI18n",1796],",",["T_WHITESPACE","\n            ",1796],["T_CONSTANT_ENCAPSED_STRING","'_providers'",1797],["T_WHITESPACE"," ",1797],["T_DOUBLE_ARROW","=>",1797],["T_WHITESPACE"," ",1797],["T_STRING","array_keys",1797],"(",["T_VARIABLE","$this",1797],["T_OBJECT_OPERATOR","->",1797],["T_STRING","_providers",1797],")",",",["T_WHITESPACE","\n            ",1797],["T_CONSTANT_ENCAPSED_STRING","'_fields'",1798],["T_WHITESPACE"," ",1798],["T_DOUBLE_ARROW","=>",1798],["T_WHITESPACE"," ",1798],["T_VARIABLE","$fields",1798],["T_WHITESPACE","\n        ",1798],"]",";",["T_WHITESPACE","\n    ",1799],"}",["T_WHITESPACE","\n",1800],"}",["T_WHITESPACE","\n",1801]]