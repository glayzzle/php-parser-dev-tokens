[["T_OPEN_TAG","<?php\n",1],["T_DOC_COMMENT","\/**\n * CakePHP(tm) : Rapid Development Framework (http:\/\/cakephp.org)\n * Copyright (c) Cake Software Foundation, Inc. (http:\/\/cakefoundation.org)\n *\n * Licensed under The MIT License\n * For full copyright and license information, please see the LICENSE.txt\n * Redistributions of files must retain the above copyright notice.\n *\n * @copyright     Copyright (c) Cake Software Foundation, Inc. (http:\/\/cakefoundation.org)\n * @link          http:\/\/cakephp.org CakePHP(tm) Project\n * @since         3.0.0\n * @license       http:\/\/www.opensource.org\/licenses\/mit-license.php MIT License\n *\/",2],["T_WHITESPACE","\n",14],["T_NAMESPACE","namespace",15],["T_WHITESPACE"," ",15],["T_STRING","Cake",15],["T_NS_SEPARATOR","\\",15],["T_STRING","Validation",15],";",["T_WHITESPACE","\n\n",15],["T_USE","use",17],["T_WHITESPACE"," ",17],["T_STRING","ReflectionClass",17],";",["T_WHITESPACE","\n\n",17],["T_DOC_COMMENT","\/**\n * A Proxy class used to remove any extra arguments when the user intended to call\n * a method in another class that is not aware of validation providers signature\n *\/",19],["T_WHITESPACE","\n",22],["T_CLASS","class",23],["T_WHITESPACE"," ",23],["T_STRING","RulesProvider",23],["T_WHITESPACE","\n",23],"{",["T_WHITESPACE","\n\n    ",24],["T_DOC_COMMENT","\/**\n     * The class\/object to proxy.\n     *\n     * @var mixed\n     *\/",26],["T_WHITESPACE","\n    ",30],["T_PROTECTED","protected",31],["T_WHITESPACE"," ",31],["T_VARIABLE","$_class",31],";",["T_WHITESPACE","\n\n    ",31],["T_DOC_COMMENT","\/**\n     * The proxied class' reflection\n     *\n     * @var \\ReflectionClass\n     *\/",33],["T_WHITESPACE","\n    ",37],["T_PROTECTED","protected",38],["T_WHITESPACE"," ",38],["T_VARIABLE","$_reflection",38],";",["T_WHITESPACE","\n\n    ",38],["T_DOC_COMMENT","\/**\n     * Constructor, sets the default class to use for calling methods\n     *\n     * @param string $class the default class to proxy\n     *\/",40],["T_WHITESPACE","\n    ",44],["T_PUBLIC","public",45],["T_WHITESPACE"," ",45],["T_FUNCTION","function",45],["T_WHITESPACE"," ",45],["T_STRING","__construct",45],"(",["T_VARIABLE","$class",45],["T_WHITESPACE"," ",45],"=",["T_WHITESPACE"," ",45],["T_CONSTANT_ENCAPSED_STRING","'\\Cake\\Validation\\Validation'",45],")",["T_WHITESPACE","\n    ",45],"{",["T_WHITESPACE","\n        ",46],["T_VARIABLE","$this",47],["T_OBJECT_OPERATOR","->",47],["T_STRING","_class",47],["T_WHITESPACE"," ",47],"=",["T_WHITESPACE"," ",47],["T_VARIABLE","$class",47],";",["T_WHITESPACE","\n        ",47],["T_VARIABLE","$this",48],["T_OBJECT_OPERATOR","->",48],["T_STRING","_reflection",48],["T_WHITESPACE"," ",48],"=",["T_WHITESPACE"," ",48],["T_NEW","new",48],["T_WHITESPACE"," ",48],["T_STRING","ReflectionClass",48],"(",["T_VARIABLE","$class",48],")",";",["T_WHITESPACE","\n    ",48],"}",["T_WHITESPACE","\n\n    ",49],["T_DOC_COMMENT","\/**\n     * Proxies validation method calls to the Validation class.\n     *\n     * The last argument (context) will be sliced off, if the validation\n     * method's last parameter is not named 'context'. This lets\n     * the various wrapped validation methods to not receive the validation\n     * context unless they need it.\n     *\n     * @param string $method the validation method to call\n     * @param array $arguments the list of arguments to pass to the method\n     * @return bool whether or not the validation rule passed\n     *\/",51],["T_WHITESPACE","\n    ",62],["T_PUBLIC","public",63],["T_WHITESPACE"," ",63],["T_FUNCTION","function",63],["T_WHITESPACE"," ",63],["T_STRING","__call",63],"(",["T_VARIABLE","$method",63],",",["T_WHITESPACE"," ",63],["T_VARIABLE","$arguments",63],")",["T_WHITESPACE","\n    ",63],"{",["T_WHITESPACE","\n        ",64],["T_VARIABLE","$method",65],["T_WHITESPACE"," ",65],"=",["T_WHITESPACE"," ",65],["T_VARIABLE","$this",65],["T_OBJECT_OPERATOR","->",65],["T_STRING","_reflection",65],["T_OBJECT_OPERATOR","->",65],["T_STRING","getMethod",65],"(",["T_VARIABLE","$method",65],")",";",["T_WHITESPACE","\n        ",65],["T_VARIABLE","$argumentList",66],["T_WHITESPACE"," ",66],"=",["T_WHITESPACE"," ",66],["T_VARIABLE","$method",66],["T_OBJECT_OPERATOR","->",66],["T_STRING","getParameters",66],"(",")",";",["T_WHITESPACE","\n        ",66],["T_IF","if",67],["T_WHITESPACE"," ",67],"(",["T_STRING","array_pop",67],"(",["T_VARIABLE","$argumentList",67],")",["T_OBJECT_OPERATOR","->",67],["T_STRING","getName",67],"(",")",["T_WHITESPACE"," ",67],["T_IS_NOT_IDENTICAL","!==",67],["T_WHITESPACE"," ",67],["T_CONSTANT_ENCAPSED_STRING","'context'",67],")",["T_WHITESPACE"," ",67],"{",["T_WHITESPACE","\n            ",67],["T_VARIABLE","$arguments",68],["T_WHITESPACE"," ",68],"=",["T_WHITESPACE"," ",68],["T_STRING","array_slice",68],"(",["T_VARIABLE","$arguments",68],",",["T_WHITESPACE"," ",68],["T_LNUMBER","0",68],",",["T_WHITESPACE"," ",68],"-",["T_LNUMBER","1",68],")",";",["T_WHITESPACE","\n        ",68],"}",["T_WHITESPACE","\n        ",69],["T_VARIABLE","$object",70],["T_WHITESPACE"," ",70],"=",["T_WHITESPACE"," ",70],["T_STRING","is_string",70],"(",["T_VARIABLE","$this",70],["T_OBJECT_OPERATOR","->",70],["T_STRING","_class",70],")",["T_WHITESPACE"," ",70],"?",["T_WHITESPACE"," ",70],["T_STRING","null",70],["T_WHITESPACE"," ",70],":",["T_WHITESPACE"," ",70],["T_VARIABLE","$this",70],["T_OBJECT_OPERATOR","->",70],["T_STRING","_class",70],";",["T_WHITESPACE","\n\n        ",70],["T_RETURN","return",72],["T_WHITESPACE"," ",72],["T_VARIABLE","$method",72],["T_OBJECT_OPERATOR","->",72],["T_STRING","invokeArgs",72],"(",["T_VARIABLE","$object",72],",",["T_WHITESPACE"," ",72],["T_VARIABLE","$arguments",72],")",";",["T_WHITESPACE","\n    ",72],"}",["T_WHITESPACE","\n",73],"}",["T_WHITESPACE","\n",74]]