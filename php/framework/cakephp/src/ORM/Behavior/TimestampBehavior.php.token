[["T_OPEN_TAG","<?php\n",1],["T_DOC_COMMENT","\/**\n * CakePHP(tm) : Rapid Development Framework (http:\/\/cakephp.org)\n * Copyright (c) Cake Software Foundation, Inc. (http:\/\/cakefoundation.org)\n *\n * Licensed under The MIT License\n * For full copyright and license information, please see the LICENSE.txt\n * Redistributions of files must retain the above copyright notice.\n *\n * @copyright     Copyright (c) Cake Software Foundation, Inc. (http:\/\/cakefoundation.org)\n * @link          http:\/\/cakephp.org CakePHP(tm) Project\n * @since         3.0.0\n * @license       http:\/\/www.opensource.org\/licenses\/mit-license.php MIT License\n *\/",2],["T_WHITESPACE","\n",14],["T_NAMESPACE","namespace",15],["T_WHITESPACE"," ",15],["T_STRING","Cake",15],["T_NS_SEPARATOR","\\",15],["T_STRING","ORM",15],["T_NS_SEPARATOR","\\",15],["T_STRING","Behavior",15],";",["T_WHITESPACE","\n\n",15],["T_USE","use",17],["T_WHITESPACE"," ",17],["T_STRING","Cake",17],["T_NS_SEPARATOR","\\",17],["T_STRING","Datasource",17],["T_NS_SEPARATOR","\\",17],["T_STRING","EntityInterface",17],";",["T_WHITESPACE","\n",17],["T_USE","use",18],["T_WHITESPACE"," ",18],["T_STRING","Cake",18],["T_NS_SEPARATOR","\\",18],["T_STRING","Event",18],["T_NS_SEPARATOR","\\",18],["T_STRING","Event",18],";",["T_WHITESPACE","\n",18],["T_USE","use",19],["T_WHITESPACE"," ",19],["T_STRING","Cake",19],["T_NS_SEPARATOR","\\",19],["T_STRING","I18n",19],["T_NS_SEPARATOR","\\",19],["T_STRING","Time",19],";",["T_WHITESPACE","\n",19],["T_USE","use",20],["T_WHITESPACE"," ",20],["T_STRING","Cake",20],["T_NS_SEPARATOR","\\",20],["T_STRING","ORM",20],["T_NS_SEPARATOR","\\",20],["T_STRING","Behavior",20],";",["T_WHITESPACE","\n",20],["T_USE","use",21],["T_WHITESPACE"," ",21],["T_STRING","DateTime",21],";",["T_WHITESPACE","\n",21],["T_USE","use",22],["T_WHITESPACE"," ",22],["T_STRING","UnexpectedValueException",22],";",["T_WHITESPACE","\n\n",22],["T_CLASS","class",24],["T_WHITESPACE"," ",24],["T_STRING","TimestampBehavior",24],["T_WHITESPACE"," ",24],["T_EXTENDS","extends",24],["T_WHITESPACE"," ",24],["T_STRING","Behavior",24],["T_WHITESPACE","\n",24],"{",["T_WHITESPACE","\n\n    ",25],["T_DOC_COMMENT","\/**\n     * Default config\n     *\n     * These are merged with user-provided config when the behavior is used.\n     *\n     * events - an event-name keyed array of which fields to update, and when, for a given event\n     * possible values for when a field will be updated are \"always\", \"new\" or \"existing\", to set\n     * the field value always, only when a new record or only when an existing record.\n     *\n     * refreshTimestamp - if true (the default) the timestamp used will be the current time when\n     * the code is executed, to set to an explicit date time value - set refreshTimetamp to false\n     * and call setTimestamp() on the behavior class before use.\n     *\n     * @var array\n     *\/",27],["T_WHITESPACE","\n    ",41],["T_PROTECTED","protected",42],["T_WHITESPACE"," ",42],["T_VARIABLE","$_defaultConfig",42],["T_WHITESPACE"," ",42],"=",["T_WHITESPACE"," ",42],"[",["T_WHITESPACE","\n        ",42],["T_CONSTANT_ENCAPSED_STRING","'implementedFinders'",43],["T_WHITESPACE"," ",43],["T_DOUBLE_ARROW","=>",43],["T_WHITESPACE"," ",43],"[","]",",",["T_WHITESPACE","\n        ",43],["T_CONSTANT_ENCAPSED_STRING","'implementedMethods'",44],["T_WHITESPACE"," ",44],["T_DOUBLE_ARROW","=>",44],["T_WHITESPACE"," ",44],"[",["T_WHITESPACE","\n            ",44],["T_CONSTANT_ENCAPSED_STRING","'timestamp'",45],["T_WHITESPACE"," ",45],["T_DOUBLE_ARROW","=>",45],["T_WHITESPACE"," ",45],["T_CONSTANT_ENCAPSED_STRING","'timestamp'",45],",",["T_WHITESPACE","\n            ",45],["T_CONSTANT_ENCAPSED_STRING","'touch'",46],["T_WHITESPACE"," ",46],["T_DOUBLE_ARROW","=>",46],["T_WHITESPACE"," ",46],["T_CONSTANT_ENCAPSED_STRING","'touch'",46],["T_WHITESPACE","\n        ",46],"]",",",["T_WHITESPACE","\n        ",47],["T_CONSTANT_ENCAPSED_STRING","'events'",48],["T_WHITESPACE"," ",48],["T_DOUBLE_ARROW","=>",48],["T_WHITESPACE"," ",48],"[",["T_WHITESPACE","\n            ",48],["T_CONSTANT_ENCAPSED_STRING","'Model.beforeSave'",49],["T_WHITESPACE"," ",49],["T_DOUBLE_ARROW","=>",49],["T_WHITESPACE"," ",49],"[",["T_WHITESPACE","\n                ",49],["T_CONSTANT_ENCAPSED_STRING","'created'",50],["T_WHITESPACE"," ",50],["T_DOUBLE_ARROW","=>",50],["T_WHITESPACE"," ",50],["T_CONSTANT_ENCAPSED_STRING","'new'",50],",",["T_WHITESPACE","\n                ",50],["T_CONSTANT_ENCAPSED_STRING","'modified'",51],["T_WHITESPACE"," ",51],["T_DOUBLE_ARROW","=>",51],["T_WHITESPACE"," ",51],["T_CONSTANT_ENCAPSED_STRING","'always'",51],["T_WHITESPACE","\n            ",51],"]",["T_WHITESPACE","\n        ",52],"]",",",["T_WHITESPACE","\n        ",53],["T_CONSTANT_ENCAPSED_STRING","'refreshTimestamp'",54],["T_WHITESPACE"," ",54],["T_DOUBLE_ARROW","=>",54],["T_WHITESPACE"," ",54],["T_STRING","true",54],["T_WHITESPACE","\n    ",54],"]",";",["T_WHITESPACE","\n\n    ",55],["T_DOC_COMMENT","\/**\n     * Current timestamp\n     *\n     * @var \\DateTime\n     *\/",57],["T_WHITESPACE","\n    ",61],["T_PROTECTED","protected",62],["T_WHITESPACE"," ",62],["T_VARIABLE","$_ts",62],";",["T_WHITESPACE","\n\n    ",62],["T_DOC_COMMENT","\/**\n     * Initialize hook\n     *\n     * If events are specified - do *not* merge them with existing events,\n     * overwrite the events to listen on\n     *\n     * @param array $config The config for this behavior.\n     * @return void\n     *\/",64],["T_WHITESPACE","\n    ",72],["T_PUBLIC","public",73],["T_WHITESPACE"," ",73],["T_FUNCTION","function",73],["T_WHITESPACE"," ",73],["T_STRING","initialize",73],"(",["T_ARRAY","array",73],["T_WHITESPACE"," ",73],["T_VARIABLE","$config",73],")",["T_WHITESPACE","\n    ",73],"{",["T_WHITESPACE","\n        ",74],["T_IF","if",75],["T_WHITESPACE"," ",75],"(",["T_ISSET","isset",75],"(",["T_VARIABLE","$config",75],"[",["T_CONSTANT_ENCAPSED_STRING","'events'",75],"]",")",")",["T_WHITESPACE"," ",75],"{",["T_WHITESPACE","\n            ",75],["T_VARIABLE","$this",76],["T_OBJECT_OPERATOR","->",76],["T_STRING","config",76],"(",["T_CONSTANT_ENCAPSED_STRING","'events'",76],",",["T_WHITESPACE"," ",76],["T_VARIABLE","$config",76],"[",["T_CONSTANT_ENCAPSED_STRING","'events'",76],"]",",",["T_WHITESPACE"," ",76],["T_STRING","false",76],")",";",["T_WHITESPACE","\n        ",76],"}",["T_WHITESPACE","\n    ",77],"}",["T_WHITESPACE","\n\n    ",78],["T_DOC_COMMENT","\/**\n     * There is only one event handler, it can be configured to be called for any event\n     *\n     * @param \\Cake\\Event\\Event $event Event instance.\n     * @param \\Cake\\Datasource\\EntityInterface $entity Entity instance.\n     * @throws \\UnexpectedValueException if a field's value is incorrectly defined\n     * @return true (irrespective of the behavior logic, the save will not be prevented)\n     * @throws \\UnexpectedValueException When the value for an event is not 'always', 'new' or 'existing'\n     *\/",80],["T_WHITESPACE","\n    ",88],["T_PUBLIC","public",89],["T_WHITESPACE"," ",89],["T_FUNCTION","function",89],["T_WHITESPACE"," ",89],["T_STRING","handleEvent",89],"(",["T_STRING","Event",89],["T_WHITESPACE"," ",89],["T_VARIABLE","$event",89],",",["T_WHITESPACE"," ",89],["T_STRING","EntityInterface",89],["T_WHITESPACE"," ",89],["T_VARIABLE","$entity",89],")",["T_WHITESPACE","\n    ",89],"{",["T_WHITESPACE","\n        ",90],["T_VARIABLE","$eventName",91],["T_WHITESPACE"," ",91],"=",["T_WHITESPACE"," ",91],["T_VARIABLE","$event",91],["T_OBJECT_OPERATOR","->",91],["T_STRING","name",91],"(",")",";",["T_WHITESPACE","\n        ",91],["T_VARIABLE","$events",92],["T_WHITESPACE"," ",92],"=",["T_WHITESPACE"," ",92],["T_VARIABLE","$this",92],["T_OBJECT_OPERATOR","->",92],["T_STRING","_config",92],"[",["T_CONSTANT_ENCAPSED_STRING","'events'",92],"]",";",["T_WHITESPACE","\n\n        ",92],["T_VARIABLE","$new",94],["T_WHITESPACE"," ",94],"=",["T_WHITESPACE"," ",94],["T_VARIABLE","$entity",94],["T_OBJECT_OPERATOR","->",94],["T_STRING","isNew",94],"(",")",["T_WHITESPACE"," ",94],["T_IS_NOT_IDENTICAL","!==",94],["T_WHITESPACE"," ",94],["T_STRING","false",94],";",["T_WHITESPACE","\n        ",94],["T_VARIABLE","$refresh",95],["T_WHITESPACE"," ",95],"=",["T_WHITESPACE"," ",95],["T_VARIABLE","$this",95],["T_OBJECT_OPERATOR","->",95],["T_STRING","_config",95],"[",["T_CONSTANT_ENCAPSED_STRING","'refreshTimestamp'",95],"]",";",["T_WHITESPACE","\n\n        ",95],["T_FOREACH","foreach",97],["T_WHITESPACE"," ",97],"(",["T_VARIABLE","$events",97],"[",["T_VARIABLE","$eventName",97],"]",["T_WHITESPACE"," ",97],["T_AS","as",97],["T_WHITESPACE"," ",97],["T_VARIABLE","$field",97],["T_WHITESPACE"," ",97],["T_DOUBLE_ARROW","=>",97],["T_WHITESPACE"," ",97],["T_VARIABLE","$when",97],")",["T_WHITESPACE"," ",97],"{",["T_WHITESPACE","\n            ",97],["T_IF","if",98],["T_WHITESPACE"," ",98],"(","!",["T_STRING","in_array",98],"(",["T_VARIABLE","$when",98],",",["T_WHITESPACE"," ",98],"[",["T_CONSTANT_ENCAPSED_STRING","'always'",98],",",["T_WHITESPACE"," ",98],["T_CONSTANT_ENCAPSED_STRING","'new'",98],",",["T_WHITESPACE"," ",98],["T_CONSTANT_ENCAPSED_STRING","'existing'",98],"]",")",")",["T_WHITESPACE"," ",98],"{",["T_WHITESPACE","\n                ",98],["T_THROW","throw",99],["T_WHITESPACE"," ",99],["T_NEW","new",99],["T_WHITESPACE"," ",99],["T_STRING","UnexpectedValueException",99],"(",["T_WHITESPACE","\n                    ",99],["T_STRING","sprintf",100],"(",["T_CONSTANT_ENCAPSED_STRING","'When should be one of \"always\", \"new\" or \"existing\". The passed value \"%s\" is invalid'",100],",",["T_WHITESPACE"," ",100],["T_VARIABLE","$when",100],")",["T_WHITESPACE","\n                ",100],")",";",["T_WHITESPACE","\n            ",101],"}",["T_WHITESPACE","\n            ",102],["T_IF","if",103],["T_WHITESPACE"," ",103],"(",["T_VARIABLE","$when",103],["T_WHITESPACE"," ",103],["T_IS_IDENTICAL","===",103],["T_WHITESPACE"," ",103],["T_CONSTANT_ENCAPSED_STRING","'always'",103],["T_WHITESPACE"," ",103],["T_BOOLEAN_OR","||",103],["T_WHITESPACE","\n                ",103],"(",["T_VARIABLE","$when",104],["T_WHITESPACE"," ",104],["T_IS_IDENTICAL","===",104],["T_WHITESPACE"," ",104],["T_CONSTANT_ENCAPSED_STRING","'new'",104],["T_WHITESPACE"," ",104],["T_BOOLEAN_AND","&&",104],["T_WHITESPACE"," ",104],["T_VARIABLE","$new",104],")",["T_WHITESPACE"," ",104],["T_BOOLEAN_OR","||",104],["T_WHITESPACE","\n                ",104],"(",["T_VARIABLE","$when",105],["T_WHITESPACE"," ",105],["T_IS_IDENTICAL","===",105],["T_WHITESPACE"," ",105],["T_CONSTANT_ENCAPSED_STRING","'existing'",105],["T_WHITESPACE"," ",105],["T_BOOLEAN_AND","&&",105],["T_WHITESPACE"," ",105],"!",["T_VARIABLE","$new",105],")",["T_WHITESPACE","\n            ",105],")",["T_WHITESPACE"," ",106],"{",["T_WHITESPACE","\n                ",106],["T_VARIABLE","$this",107],["T_OBJECT_OPERATOR","->",107],["T_STRING","_updateField",107],"(",["T_VARIABLE","$entity",107],",",["T_WHITESPACE"," ",107],["T_VARIABLE","$field",107],",",["T_WHITESPACE"," ",107],["T_VARIABLE","$refresh",107],")",";",["T_WHITESPACE","\n            ",107],"}",["T_WHITESPACE","\n        ",108],"}",["T_WHITESPACE","\n\n        ",109],["T_RETURN","return",111],["T_WHITESPACE"," ",111],["T_STRING","true",111],";",["T_WHITESPACE","\n    ",111],"}",["T_WHITESPACE","\n\n    ",112],["T_DOC_COMMENT","\/**\n     * implementedEvents\n     *\n     * The implemented events of this behavior depend on configuration\n     *\n     * @return array\n     *\/",114],["T_WHITESPACE","\n    ",120],["T_PUBLIC","public",121],["T_WHITESPACE"," ",121],["T_FUNCTION","function",121],["T_WHITESPACE"," ",121],["T_STRING","implementedEvents",121],"(",")",["T_WHITESPACE","\n    ",121],"{",["T_WHITESPACE","\n        ",122],["T_RETURN","return",123],["T_WHITESPACE"," ",123],["T_STRING","array_fill_keys",123],"(",["T_STRING","array_keys",123],"(",["T_VARIABLE","$this",123],["T_OBJECT_OPERATOR","->",123],["T_STRING","_config",123],"[",["T_CONSTANT_ENCAPSED_STRING","'events'",123],"]",")",",",["T_WHITESPACE"," ",123],["T_CONSTANT_ENCAPSED_STRING","'handleEvent'",123],")",";",["T_WHITESPACE","\n    ",123],"}",["T_WHITESPACE","\n\n    ",124],["T_DOC_COMMENT","\/**\n     * Get or set the timestamp to be used\n     *\n     * Set the timestamp to the given DateTime object, or if not passed a new DateTime object\n     * If an explicit date time is passed, the config option `refreshTimestamp` is\n     * automatically set to false.\n     *\n     * @param \\DateTime|null $ts Timestamp\n     * @param bool $refreshTimestamp If true timestamp is refreshed.\n     * @return \\Cake\\I18n\\Time\n     *\/",126],["T_WHITESPACE","\n    ",136],["T_PUBLIC","public",137],["T_WHITESPACE"," ",137],["T_FUNCTION","function",137],["T_WHITESPACE"," ",137],["T_STRING","timestamp",137],"(",["T_STRING","DateTime",137],["T_WHITESPACE"," ",137],["T_VARIABLE","$ts",137],["T_WHITESPACE"," ",137],"=",["T_WHITESPACE"," ",137],["T_STRING","null",137],",",["T_WHITESPACE"," ",137],["T_VARIABLE","$refreshTimestamp",137],["T_WHITESPACE"," ",137],"=",["T_WHITESPACE"," ",137],["T_STRING","false",137],")",["T_WHITESPACE","\n    ",137],"{",["T_WHITESPACE","\n        ",138],["T_IF","if",139],["T_WHITESPACE"," ",139],"(",["T_VARIABLE","$ts",139],")",["T_WHITESPACE"," ",139],"{",["T_WHITESPACE","\n            ",139],["T_IF","if",140],["T_WHITESPACE"," ",140],"(",["T_VARIABLE","$this",140],["T_OBJECT_OPERATOR","->",140],["T_STRING","_config",140],"[",["T_CONSTANT_ENCAPSED_STRING","'refreshTimestamp'",140],"]",")",["T_WHITESPACE"," ",140],"{",["T_WHITESPACE","\n                ",140],["T_VARIABLE","$this",141],["T_OBJECT_OPERATOR","->",141],["T_STRING","_config",141],"[",["T_CONSTANT_ENCAPSED_STRING","'refreshTimestamp'",141],"]",["T_WHITESPACE"," ",141],"=",["T_WHITESPACE"," ",141],["T_STRING","false",141],";",["T_WHITESPACE","\n            ",141],"}",["T_WHITESPACE","\n            ",142],["T_VARIABLE","$this",143],["T_OBJECT_OPERATOR","->",143],["T_STRING","_ts",143],["T_WHITESPACE"," ",143],"=",["T_WHITESPACE"," ",143],["T_NEW","new",143],["T_WHITESPACE"," ",143],["T_STRING","Time",143],"(",["T_VARIABLE","$ts",143],")",";",["T_WHITESPACE","\n        ",143],"}",["T_WHITESPACE"," ",144],["T_ELSEIF","elseif",144],["T_WHITESPACE"," ",144],"(",["T_VARIABLE","$this",144],["T_OBJECT_OPERATOR","->",144],["T_STRING","_ts",144],["T_WHITESPACE"," ",144],["T_IS_IDENTICAL","===",144],["T_WHITESPACE"," ",144],["T_STRING","null",144],["T_WHITESPACE"," ",144],["T_BOOLEAN_OR","||",144],["T_WHITESPACE"," ",144],["T_VARIABLE","$refreshTimestamp",144],")",["T_WHITESPACE"," ",144],"{",["T_WHITESPACE","\n            ",144],["T_VARIABLE","$this",145],["T_OBJECT_OPERATOR","->",145],["T_STRING","_ts",145],["T_WHITESPACE"," ",145],"=",["T_WHITESPACE"," ",145],["T_NEW","new",145],["T_WHITESPACE"," ",145],["T_STRING","Time",145],"(",")",";",["T_WHITESPACE","\n        ",145],"}",["T_WHITESPACE","\n\n        ",146],["T_RETURN","return",148],["T_WHITESPACE"," ",148],["T_VARIABLE","$this",148],["T_OBJECT_OPERATOR","->",148],["T_STRING","_ts",148],";",["T_WHITESPACE","\n    ",148],"}",["T_WHITESPACE","\n\n    ",149],["T_DOC_COMMENT","\/**\n     * Touch an entity\n     *\n     * Bumps timestamp fields for an entity. For any fields configured to be updated\n     * \"always\" or \"existing\", update the timestamp value. This method will overwrite\n     * any pre-existing value.\n     *\n     * @param \\Cake\\Datasource\\EntityInterface $entity Entity instance.\n     * @param string $eventName Event name.\n     * @return bool true if a field is updated, false if no action performed\n     *\/",151],["T_WHITESPACE","\n    ",161],["T_PUBLIC","public",162],["T_WHITESPACE"," ",162],["T_FUNCTION","function",162],["T_WHITESPACE"," ",162],["T_STRING","touch",162],"(",["T_STRING","EntityInterface",162],["T_WHITESPACE"," ",162],["T_VARIABLE","$entity",162],",",["T_WHITESPACE"," ",162],["T_VARIABLE","$eventName",162],["T_WHITESPACE"," ",162],"=",["T_WHITESPACE"," ",162],["T_CONSTANT_ENCAPSED_STRING","'Model.beforeSave'",162],")",["T_WHITESPACE","\n    ",162],"{",["T_WHITESPACE","\n        ",163],["T_VARIABLE","$events",164],["T_WHITESPACE"," ",164],"=",["T_WHITESPACE"," ",164],["T_VARIABLE","$this",164],["T_OBJECT_OPERATOR","->",164],["T_STRING","_config",164],"[",["T_CONSTANT_ENCAPSED_STRING","'events'",164],"]",";",["T_WHITESPACE","\n        ",164],["T_IF","if",165],["T_WHITESPACE"," ",165],"(",["T_EMPTY","empty",165],"(",["T_VARIABLE","$events",165],"[",["T_VARIABLE","$eventName",165],"]",")",")",["T_WHITESPACE"," ",165],"{",["T_WHITESPACE","\n            ",165],["T_RETURN","return",166],["T_WHITESPACE"," ",166],["T_STRING","false",166],";",["T_WHITESPACE","\n        ",166],"}",["T_WHITESPACE","\n\n        ",167],["T_VARIABLE","$return",169],["T_WHITESPACE"," ",169],"=",["T_WHITESPACE"," ",169],["T_STRING","false",169],";",["T_WHITESPACE","\n        ",169],["T_VARIABLE","$refresh",170],["T_WHITESPACE"," ",170],"=",["T_WHITESPACE"," ",170],["T_VARIABLE","$this",170],["T_OBJECT_OPERATOR","->",170],["T_STRING","_config",170],"[",["T_CONSTANT_ENCAPSED_STRING","'refreshTimestamp'",170],"]",";",["T_WHITESPACE","\n\n        ",170],["T_FOREACH","foreach",172],["T_WHITESPACE"," ",172],"(",["T_VARIABLE","$events",172],"[",["T_VARIABLE","$eventName",172],"]",["T_WHITESPACE"," ",172],["T_AS","as",172],["T_WHITESPACE"," ",172],["T_VARIABLE","$field",172],["T_WHITESPACE"," ",172],["T_DOUBLE_ARROW","=>",172],["T_WHITESPACE"," ",172],["T_VARIABLE","$when",172],")",["T_WHITESPACE"," ",172],"{",["T_WHITESPACE","\n            ",172],["T_IF","if",173],["T_WHITESPACE"," ",173],"(",["T_STRING","in_array",173],"(",["T_VARIABLE","$when",173],",",["T_WHITESPACE"," ",173],"[",["T_CONSTANT_ENCAPSED_STRING","'always'",173],",",["T_WHITESPACE"," ",173],["T_CONSTANT_ENCAPSED_STRING","'existing'",173],"]",")",")",["T_WHITESPACE"," ",173],"{",["T_WHITESPACE","\n                ",173],["T_VARIABLE","$return",174],["T_WHITESPACE"," ",174],"=",["T_WHITESPACE"," ",174],["T_STRING","true",174],";",["T_WHITESPACE","\n                ",174],["T_VARIABLE","$entity",175],["T_OBJECT_OPERATOR","->",175],["T_STRING","dirty",175],"(",["T_VARIABLE","$field",175],",",["T_WHITESPACE"," ",175],["T_STRING","false",175],")",";",["T_WHITESPACE","\n                ",175],["T_VARIABLE","$this",176],["T_OBJECT_OPERATOR","->",176],["T_STRING","_updateField",176],"(",["T_VARIABLE","$entity",176],",",["T_WHITESPACE"," ",176],["T_VARIABLE","$field",176],",",["T_WHITESPACE"," ",176],["T_VARIABLE","$refresh",176],")",";",["T_WHITESPACE","\n            ",176],"}",["T_WHITESPACE","\n        ",177],"}",["T_WHITESPACE","\n\n        ",178],["T_RETURN","return",180],["T_WHITESPACE"," ",180],["T_VARIABLE","$return",180],";",["T_WHITESPACE","\n    ",180],"}",["T_WHITESPACE","\n\n    ",181],["T_DOC_COMMENT","\/**\n     * Update a field, if it hasn't been updated already\n     *\n     * @param \\Cake\\Datasource\\EntityInterface $entity Entity instance.\n     * @param string $field Field name\n     * @param bool $refreshTimestamp Whether to refresh timestamp.\n     * @return void\n     *\/",183],["T_WHITESPACE","\n    ",190],["T_PROTECTED","protected",191],["T_WHITESPACE"," ",191],["T_FUNCTION","function",191],["T_WHITESPACE"," ",191],["T_STRING","_updateField",191],"(",["T_VARIABLE","$entity",191],",",["T_WHITESPACE"," ",191],["T_VARIABLE","$field",191],",",["T_WHITESPACE"," ",191],["T_VARIABLE","$refreshTimestamp",191],")",["T_WHITESPACE","\n    ",191],"{",["T_WHITESPACE","\n        ",192],["T_IF","if",193],["T_WHITESPACE"," ",193],"(",["T_VARIABLE","$entity",193],["T_OBJECT_OPERATOR","->",193],["T_STRING","dirty",193],"(",["T_VARIABLE","$field",193],")",")",["T_WHITESPACE"," ",193],"{",["T_WHITESPACE","\n            ",193],["T_RETURN","return",194],";",["T_WHITESPACE","\n        ",194],"}",["T_WHITESPACE","\n        ",195],["T_VARIABLE","$entity",196],["T_OBJECT_OPERATOR","->",196],["T_STRING","set",196],"(",["T_VARIABLE","$field",196],",",["T_WHITESPACE"," ",196],["T_VARIABLE","$this",196],["T_OBJECT_OPERATOR","->",196],["T_STRING","timestamp",196],"(",["T_STRING","null",196],",",["T_WHITESPACE"," ",196],["T_VARIABLE","$refreshTimestamp",196],")",")",";",["T_WHITESPACE","\n    ",196],"}",["T_WHITESPACE","\n",197],"}",["T_WHITESPACE","\n",198]]