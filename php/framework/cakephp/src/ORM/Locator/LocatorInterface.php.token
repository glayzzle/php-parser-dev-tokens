[["T_OPEN_TAG","<?php\n",1],["T_DOC_COMMENT","\/**\n * CakePHP(tm) : Rapid Development Framework (http:\/\/cakephp.org)\n * Copyright (c) Cake Software Foundation, Inc. (http:\/\/cakefoundation.org)\n *\n * Licensed under The MIT License\n * For full copyright and license information, please see the LICENSE.txt\n * Redistributions of files must retain the above copyright notice.\n *\n * @copyright     Copyright (c) Cake Software Foundation, Inc. (http:\/\/cakefoundation.org)\n * @link          http:\/\/cakephp.org CakePHP(tm) Project\n * @since         3.1.0\n * @license       http:\/\/www.opensource.org\/licenses\/mit-license.php MIT License\n *\/",2],["T_WHITESPACE","\n",14],["T_NAMESPACE","namespace",15],["T_WHITESPACE"," ",15],["T_STRING","Cake",15],["T_NS_SEPARATOR","\\",15],["T_STRING","ORM",15],["T_NS_SEPARATOR","\\",15],["T_STRING","Locator",15],";",["T_WHITESPACE","\n\n",15],["T_USE","use",17],["T_WHITESPACE"," ",17],["T_STRING","Cake",17],["T_NS_SEPARATOR","\\",17],["T_STRING","ORM",17],["T_NS_SEPARATOR","\\",17],["T_STRING","Table",17],";",["T_WHITESPACE","\n\n",17],["T_DOC_COMMENT","\/**\n * Registries for Table objects should implement this interface.\n *\/",19],["T_WHITESPACE","\n",21],["T_INTERFACE","interface",22],["T_WHITESPACE"," ",22],["T_STRING","LocatorInterface",22],["T_WHITESPACE","\n",22],"{",["T_WHITESPACE","\n\n    ",23],["T_DOC_COMMENT","\/**\n     * Stores a list of options to be used when instantiating an object\n     * with a matching alias.\n     *\n     * @param string|null $alias Name of the alias\n     * @param array|null $options list of options for the alias\n     * @return array The config data.\n     *\/",25],["T_WHITESPACE","\n    ",32],["T_PUBLIC","public",33],["T_WHITESPACE"," ",33],["T_FUNCTION","function",33],["T_WHITESPACE"," ",33],["T_STRING","config",33],"(",["T_VARIABLE","$alias",33],["T_WHITESPACE"," ",33],"=",["T_WHITESPACE"," ",33],["T_STRING","null",33],",",["T_WHITESPACE"," ",33],["T_VARIABLE","$options",33],["T_WHITESPACE"," ",33],"=",["T_WHITESPACE"," ",33],["T_STRING","null",33],")",";",["T_WHITESPACE","\n\n    ",33],["T_DOC_COMMENT","\/**\n     * Get a table instance from the registry.\n     *\n     * @param string $alias The alias name you want to get.\n     * @param array $options The options you want to build the table with.\n     * @return \\Cake\\ORM\\Table\n     *\/",35],["T_WHITESPACE","\n    ",41],["T_PUBLIC","public",42],["T_WHITESPACE"," ",42],["T_FUNCTION","function",42],["T_WHITESPACE"," ",42],["T_STRING","get",42],"(",["T_VARIABLE","$alias",42],",",["T_WHITESPACE"," ",42],["T_ARRAY","array",42],["T_WHITESPACE"," ",42],["T_VARIABLE","$options",42],["T_WHITESPACE"," ",42],"=",["T_WHITESPACE"," ",42],"[","]",")",";",["T_WHITESPACE","\n\n    ",42],["T_DOC_COMMENT","\/**\n     * Check to see if an instance exists in the registry.\n     *\n     * @param string $alias The alias to check for.\n     * @return bool\n     *\/",44],["T_WHITESPACE","\n    ",49],["T_PUBLIC","public",50],["T_WHITESPACE"," ",50],["T_FUNCTION","function",50],["T_WHITESPACE"," ",50],["T_STRING","exists",50],"(",["T_VARIABLE","$alias",50],")",";",["T_WHITESPACE","\n\n    ",50],["T_DOC_COMMENT","\/**\n     * Set an instance.\n     *\n     * @param string $alias The alias to set.\n     * @param \\Cake\\ORM\\Table $object The table to set.\n     * @return \\Cake\\ORM\\Table\n     *\/",52],["T_WHITESPACE","\n    ",58],["T_PUBLIC","public",59],["T_WHITESPACE"," ",59],["T_FUNCTION","function",59],["T_WHITESPACE"," ",59],["T_STRING","set",59],"(",["T_VARIABLE","$alias",59],",",["T_WHITESPACE"," ",59],["T_STRING","Table",59],["T_WHITESPACE"," ",59],["T_VARIABLE","$object",59],")",";",["T_WHITESPACE","\n\n    ",59],["T_DOC_COMMENT","\/**\n     * Clears the registry of configuration and instances.\n     *\n     * @return void\n     *\/",61],["T_WHITESPACE","\n    ",65],["T_PUBLIC","public",66],["T_WHITESPACE"," ",66],["T_FUNCTION","function",66],["T_WHITESPACE"," ",66],["T_STRING","clear",66],"(",")",";",["T_WHITESPACE","\n\n    ",66],["T_DOC_COMMENT","\/**\n     * Removes an instance from the registry.\n     *\n     * @param string $alias The alias to remove.\n     * @return void\n     *\/",68],["T_WHITESPACE","\n    ",73],["T_PUBLIC","public",74],["T_WHITESPACE"," ",74],["T_FUNCTION","function",74],["T_WHITESPACE"," ",74],["T_STRING","remove",74],"(",["T_VARIABLE","$alias",74],")",";",["T_WHITESPACE","\n",74],"}",["T_WHITESPACE","\n",75]]