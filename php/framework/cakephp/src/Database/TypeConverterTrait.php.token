[["T_OPEN_TAG","<?php\n",1],["T_DOC_COMMENT","\/**\n * CakePHP(tm) : Rapid Development Framework (http:\/\/cakephp.org)\n * Copyright (c) Cake Software Foundation, Inc. (http:\/\/cakefoundation.org)\n *\n * Licensed under The MIT License\n * For full copyright and license information, please see the LICENSE.txt\n * Redistributions of files must retain the above copyright notice.\n *\n * @copyright     Copyright (c) Cake Software Foundation, Inc. (http:\/\/cakefoundation.org)\n * @link          http:\/\/cakephp.org CakePHP(tm) Project\n * @since         3.0.0\n * @license       http:\/\/www.opensource.org\/licenses\/mit-license.php MIT License\n *\/",2],["T_WHITESPACE","\n",14],["T_NAMESPACE","namespace",15],["T_WHITESPACE"," ",15],["T_STRING","Cake",15],["T_NS_SEPARATOR","\\",15],["T_STRING","Database",15],";",["T_WHITESPACE","\n\n",15],["T_DOC_COMMENT","\/**\n * Type converter trait\n *\/",17],["T_WHITESPACE","\n",19],["T_TRAIT","trait",20],["T_WHITESPACE"," ",20],["T_STRING","TypeConverterTrait",20],["T_WHITESPACE","\n",20],"{",["T_WHITESPACE","\n\n    ",21],["T_DOC_COMMENT","\/**\n     * Converts a give value to a suitable database value based on type\n     * and return relevant internal statement type\n     *\n     * @param mixed $value The value to cast\n     * @param \\Cake\\Database\\Type|string $type The type name or type instance to use.\n     * @return array list containing converted value and internal type\n     *\/",23],["T_WHITESPACE","\n    ",30],["T_PUBLIC","public",31],["T_WHITESPACE"," ",31],["T_FUNCTION","function",31],["T_WHITESPACE"," ",31],["T_STRING","cast",31],"(",["T_VARIABLE","$value",31],",",["T_WHITESPACE"," ",31],["T_VARIABLE","$type",31],")",["T_WHITESPACE","\n    ",31],"{",["T_WHITESPACE","\n        ",32],["T_IF","if",33],["T_WHITESPACE"," ",33],"(",["T_STRING","is_string",33],"(",["T_VARIABLE","$type",33],")",")",["T_WHITESPACE"," ",33],"{",["T_WHITESPACE","\n            ",33],["T_VARIABLE","$type",34],["T_WHITESPACE"," ",34],"=",["T_WHITESPACE"," ",34],["T_STRING","Type",34],["T_DOUBLE_COLON","::",34],["T_STRING","build",34],"(",["T_VARIABLE","$type",34],")",";",["T_WHITESPACE","\n        ",34],"}",["T_WHITESPACE","\n        ",35],["T_IF","if",36],["T_WHITESPACE"," ",36],"(",["T_VARIABLE","$type",36],["T_WHITESPACE"," ",36],["T_INSTANCEOF","instanceof",36],["T_WHITESPACE"," ",36],["T_STRING","TypeInterface",36],")",["T_WHITESPACE"," ",36],"{",["T_WHITESPACE","\n            ",36],["T_VARIABLE","$value",37],["T_WHITESPACE"," ",37],"=",["T_WHITESPACE"," ",37],["T_VARIABLE","$type",37],["T_OBJECT_OPERATOR","->",37],["T_STRING","toDatabase",37],"(",["T_VARIABLE","$value",37],",",["T_WHITESPACE"," ",37],["T_VARIABLE","$this",37],["T_OBJECT_OPERATOR","->",37],["T_STRING","_driver",37],")",";",["T_WHITESPACE","\n            ",37],["T_VARIABLE","$type",38],["T_WHITESPACE"," ",38],"=",["T_WHITESPACE"," ",38],["T_VARIABLE","$type",38],["T_OBJECT_OPERATOR","->",38],["T_STRING","toStatement",38],"(",["T_VARIABLE","$value",38],",",["T_WHITESPACE"," ",38],["T_VARIABLE","$this",38],["T_OBJECT_OPERATOR","->",38],["T_STRING","_driver",38],")",";",["T_WHITESPACE","\n        ",38],"}",["T_WHITESPACE","\n\n        ",39],["T_RETURN","return",41],["T_WHITESPACE"," ",41],"[",["T_VARIABLE","$value",41],",",["T_WHITESPACE"," ",41],["T_VARIABLE","$type",41],"]",";",["T_WHITESPACE","\n    ",41],"}",["T_WHITESPACE","\n\n    ",42],["T_DOC_COMMENT","\/**\n     * Matches columns to corresponding types\n     *\n     * Both $columns and $types should either be numeric based or string key based at\n     * the same time.\n     *\n     * @param array $columns list or associative array of columns and parameters to be bound with types\n     * @param array $types list or associative array of types\n     * @return array\n     *\/",44],["T_WHITESPACE","\n    ",53],["T_PUBLIC","public",54],["T_WHITESPACE"," ",54],["T_FUNCTION","function",54],["T_WHITESPACE"," ",54],["T_STRING","matchTypes",54],"(",["T_VARIABLE","$columns",54],",",["T_WHITESPACE"," ",54],["T_VARIABLE","$types",54],")",["T_WHITESPACE","\n    ",54],"{",["T_WHITESPACE","\n        ",55],["T_IF","if",56],["T_WHITESPACE"," ",56],"(","!",["T_STRING","is_int",56],"(",["T_STRING","key",56],"(",["T_VARIABLE","$types",56],")",")",")",["T_WHITESPACE"," ",56],"{",["T_WHITESPACE","\n            ",56],["T_VARIABLE","$positions",57],["T_WHITESPACE"," ",57],"=",["T_WHITESPACE"," ",57],["T_STRING","array_intersect_key",57],"(",["T_STRING","array_flip",57],"(",["T_VARIABLE","$columns",57],")",",",["T_WHITESPACE"," ",57],["T_VARIABLE","$types",57],")",";",["T_WHITESPACE","\n            ",57],["T_VARIABLE","$types",58],["T_WHITESPACE"," ",58],"=",["T_WHITESPACE"," ",58],["T_STRING","array_intersect_key",58],"(",["T_VARIABLE","$types",58],",",["T_WHITESPACE"," ",58],["T_VARIABLE","$positions",58],")",";",["T_WHITESPACE","\n            ",58],["T_VARIABLE","$types",59],["T_WHITESPACE"," ",59],"=",["T_WHITESPACE"," ",59],["T_STRING","array_combine",59],"(",["T_VARIABLE","$positions",59],",",["T_WHITESPACE"," ",59],["T_VARIABLE","$types",59],")",";",["T_WHITESPACE","\n        ",59],"}",["T_WHITESPACE","\n\n        ",60],["T_RETURN","return",62],["T_WHITESPACE"," ",62],["T_VARIABLE","$types",62],";",["T_WHITESPACE","\n    ",62],"}",["T_WHITESPACE","\n",63],"}",["T_WHITESPACE","\n",64]]