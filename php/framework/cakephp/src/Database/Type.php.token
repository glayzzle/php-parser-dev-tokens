[["T_OPEN_TAG","<?php\n",1],["T_DOC_COMMENT","\/**\n * CakePHP(tm) : Rapid Development Framework (http:\/\/cakephp.org)\n * Copyright (c) Cake Software Foundation, Inc. (http:\/\/cakefoundation.org)\n *\n * Licensed under The MIT License\n * For full copyright and license information, please see the LICENSE.txt\n * Redistributions of files must retain the above copyright notice.\n *\n * @copyright     Copyright (c) Cake Software Foundation, Inc. (http:\/\/cakefoundation.org)\n * @link          http:\/\/cakephp.org CakePHP(tm) Project\n * @since         3.0.0\n * @license       http:\/\/www.opensource.org\/licenses\/mit-license.php MIT License\n *\/",2],["T_WHITESPACE","\n",14],["T_NAMESPACE","namespace",15],["T_WHITESPACE"," ",15],["T_STRING","Cake",15],["T_NS_SEPARATOR","\\",15],["T_STRING","Database",15],";",["T_WHITESPACE","\n\n",15],["T_USE","use",17],["T_WHITESPACE"," ",17],["T_STRING","InvalidArgumentException",17],";",["T_WHITESPACE","\n",17],["T_USE","use",18],["T_WHITESPACE"," ",18],["T_STRING","PDO",18],";",["T_WHITESPACE","\n\n",18],["T_DOC_COMMENT","\/**\n * Encapsulates all conversion functions for values coming from database into PHP and\n * going from PHP into database.\n *\/",20],["T_WHITESPACE","\n",23],["T_CLASS","class",24],["T_WHITESPACE"," ",24],["T_STRING","Type",24],["T_WHITESPACE"," ",24],["T_IMPLEMENTS","implements",24],["T_WHITESPACE"," ",24],["T_STRING","TypeInterface",24],["T_WHITESPACE","\n",24],"{",["T_WHITESPACE","\n\n    ",25],["T_DOC_COMMENT","\/**\n     * List of supported database types. A human readable\n     * identifier is used as key and a complete namespaced class name as value\n     * representing the class that will do actual type conversions.\n     *\n     * @var array\n     *\/",27],["T_WHITESPACE","\n    ",33],["T_PROTECTED","protected",34],["T_WHITESPACE"," ",34],["T_STATIC","static",34],["T_WHITESPACE"," ",34],["T_VARIABLE","$_types",34],["T_WHITESPACE"," ",34],"=",["T_WHITESPACE"," ",34],"[",["T_WHITESPACE","\n        ",34],["T_CONSTANT_ENCAPSED_STRING","'biginteger'",35],["T_WHITESPACE"," ",35],["T_DOUBLE_ARROW","=>",35],["T_WHITESPACE"," ",35],["T_CONSTANT_ENCAPSED_STRING","'Cake\\Database\\Type\\IntegerType'",35],",",["T_WHITESPACE","\n        ",35],["T_CONSTANT_ENCAPSED_STRING","'binary'",36],["T_WHITESPACE"," ",36],["T_DOUBLE_ARROW","=>",36],["T_WHITESPACE"," ",36],["T_CONSTANT_ENCAPSED_STRING","'Cake\\Database\\Type\\BinaryType'",36],",",["T_WHITESPACE","\n        ",36],["T_CONSTANT_ENCAPSED_STRING","'boolean'",37],["T_WHITESPACE"," ",37],["T_DOUBLE_ARROW","=>",37],["T_WHITESPACE"," ",37],["T_CONSTANT_ENCAPSED_STRING","'Cake\\Database\\Type\\BoolType'",37],",",["T_WHITESPACE","\n        ",37],["T_CONSTANT_ENCAPSED_STRING","'date'",38],["T_WHITESPACE"," ",38],["T_DOUBLE_ARROW","=>",38],["T_WHITESPACE"," ",38],["T_CONSTANT_ENCAPSED_STRING","'Cake\\Database\\Type\\DateType'",38],",",["T_WHITESPACE","\n        ",38],["T_CONSTANT_ENCAPSED_STRING","'datetime'",39],["T_WHITESPACE"," ",39],["T_DOUBLE_ARROW","=>",39],["T_WHITESPACE"," ",39],["T_CONSTANT_ENCAPSED_STRING","'Cake\\Database\\Type\\DateTimeType'",39],",",["T_WHITESPACE","\n        ",39],["T_CONSTANT_ENCAPSED_STRING","'decimal'",40],["T_WHITESPACE"," ",40],["T_DOUBLE_ARROW","=>",40],["T_WHITESPACE"," ",40],["T_CONSTANT_ENCAPSED_STRING","'Cake\\Database\\Type\\DecimalType'",40],",",["T_WHITESPACE","\n        ",40],["T_CONSTANT_ENCAPSED_STRING","'float'",41],["T_WHITESPACE"," ",41],["T_DOUBLE_ARROW","=>",41],["T_WHITESPACE"," ",41],["T_CONSTANT_ENCAPSED_STRING","'Cake\\Database\\Type\\FloatType'",41],",",["T_WHITESPACE","\n        ",41],["T_CONSTANT_ENCAPSED_STRING","'integer'",42],["T_WHITESPACE"," ",42],["T_DOUBLE_ARROW","=>",42],["T_WHITESPACE"," ",42],["T_CONSTANT_ENCAPSED_STRING","'Cake\\Database\\Type\\IntegerType'",42],",",["T_WHITESPACE","\n        ",42],["T_CONSTANT_ENCAPSED_STRING","'json'",43],["T_WHITESPACE"," ",43],["T_DOUBLE_ARROW","=>",43],["T_WHITESPACE"," ",43],["T_CONSTANT_ENCAPSED_STRING","'Cake\\Database\\Type\\JsonType'",43],",",["T_WHITESPACE","\n        ",43],["T_CONSTANT_ENCAPSED_STRING","'string'",44],["T_WHITESPACE"," ",44],["T_DOUBLE_ARROW","=>",44],["T_WHITESPACE"," ",44],["T_CONSTANT_ENCAPSED_STRING","'Cake\\Database\\Type\\StringType'",44],",",["T_WHITESPACE","\n        ",44],["T_CONSTANT_ENCAPSED_STRING","'text'",45],["T_WHITESPACE"," ",45],["T_DOUBLE_ARROW","=>",45],["T_WHITESPACE"," ",45],["T_CONSTANT_ENCAPSED_STRING","'Cake\\Database\\Type\\StringType'",45],",",["T_WHITESPACE","\n        ",45],["T_CONSTANT_ENCAPSED_STRING","'time'",46],["T_WHITESPACE"," ",46],["T_DOUBLE_ARROW","=>",46],["T_WHITESPACE"," ",46],["T_CONSTANT_ENCAPSED_STRING","'Cake\\Database\\Type\\TimeType'",46],",",["T_WHITESPACE","\n        ",46],["T_CONSTANT_ENCAPSED_STRING","'timestamp'",47],["T_WHITESPACE"," ",47],["T_DOUBLE_ARROW","=>",47],["T_WHITESPACE"," ",47],["T_CONSTANT_ENCAPSED_STRING","'Cake\\Database\\Type\\DateTimeType'",47],",",["T_WHITESPACE","\n        ",47],["T_CONSTANT_ENCAPSED_STRING","'uuid'",48],["T_WHITESPACE"," ",48],["T_DOUBLE_ARROW","=>",48],["T_WHITESPACE"," ",48],["T_CONSTANT_ENCAPSED_STRING","'Cake\\Database\\Type\\UuidType'",48],",",["T_WHITESPACE","\n    ",48],"]",";",["T_WHITESPACE","\n\n    ",49],["T_DOC_COMMENT","\/**\n     * List of basic type mappings, used to avoid having to instantiate a class\n     * for doing conversion on these\n     *\n     * @var array\n     * @deprecated 3.1 All types will now use a specific class\n     *\/",51],["T_WHITESPACE","\n    ",57],["T_PROTECTED","protected",58],["T_WHITESPACE"," ",58],["T_STATIC","static",58],["T_WHITESPACE"," ",58],["T_VARIABLE","$_basicTypes",58],["T_WHITESPACE"," ",58],"=",["T_WHITESPACE"," ",58],"[",["T_WHITESPACE","\n        ",58],["T_CONSTANT_ENCAPSED_STRING","'string'",59],["T_WHITESPACE"," ",59],["T_DOUBLE_ARROW","=>",59],["T_WHITESPACE"," ",59],"[",["T_CONSTANT_ENCAPSED_STRING","'callback'",59],["T_WHITESPACE"," ",59],["T_DOUBLE_ARROW","=>",59],["T_WHITESPACE"," ",59],"[",["T_CONSTANT_ENCAPSED_STRING","'\\Cake\\Database\\Type'",59],",",["T_WHITESPACE"," ",59],["T_CONSTANT_ENCAPSED_STRING","'strval'",59],"]","]",",",["T_WHITESPACE","\n        ",59],["T_CONSTANT_ENCAPSED_STRING","'text'",60],["T_WHITESPACE"," ",60],["T_DOUBLE_ARROW","=>",60],["T_WHITESPACE"," ",60],"[",["T_CONSTANT_ENCAPSED_STRING","'callback'",60],["T_WHITESPACE"," ",60],["T_DOUBLE_ARROW","=>",60],["T_WHITESPACE"," ",60],"[",["T_CONSTANT_ENCAPSED_STRING","'\\Cake\\Database\\Type'",60],",",["T_WHITESPACE"," ",60],["T_CONSTANT_ENCAPSED_STRING","'strval'",60],"]","]",",",["T_WHITESPACE","\n        ",60],["T_CONSTANT_ENCAPSED_STRING","'boolean'",61],["T_WHITESPACE"," ",61],["T_DOUBLE_ARROW","=>",61],["T_WHITESPACE"," ",61],"[",["T_WHITESPACE","\n            ",61],["T_CONSTANT_ENCAPSED_STRING","'callback'",62],["T_WHITESPACE"," ",62],["T_DOUBLE_ARROW","=>",62],["T_WHITESPACE"," ",62],"[",["T_CONSTANT_ENCAPSED_STRING","'\\Cake\\Database\\Type'",62],",",["T_WHITESPACE"," ",62],["T_CONSTANT_ENCAPSED_STRING","'boolval'",62],"]",",",["T_WHITESPACE","\n            ",62],["T_CONSTANT_ENCAPSED_STRING","'pdo'",63],["T_WHITESPACE"," ",63],["T_DOUBLE_ARROW","=>",63],["T_WHITESPACE"," ",63],["T_STRING","PDO",63],["T_DOUBLE_COLON","::",63],["T_STRING","PARAM_BOOL",63],["T_WHITESPACE","\n        ",63],"]",",",["T_WHITESPACE","\n    ",64],"]",";",["T_WHITESPACE","\n\n    ",65],["T_DOC_COMMENT","\/**\n     * Contains a map of type object instances to be reused if needed\n     *\n     * @var array\n     *\/",67],["T_WHITESPACE","\n    ",71],["T_PROTECTED","protected",72],["T_WHITESPACE"," ",72],["T_STATIC","static",72],["T_WHITESPACE"," ",72],["T_VARIABLE","$_builtTypes",72],["T_WHITESPACE"," ",72],"=",["T_WHITESPACE"," ",72],"[","]",";",["T_WHITESPACE","\n\n    ",72],["T_DOC_COMMENT","\/**\n     * Identifier name for this type\n     *\n     * @var string\n     *\/",74],["T_WHITESPACE","\n    ",78],["T_PROTECTED","protected",79],["T_WHITESPACE"," ",79],["T_VARIABLE","$_name",79],["T_WHITESPACE"," ",79],"=",["T_WHITESPACE"," ",79],["T_STRING","null",79],";",["T_WHITESPACE","\n\n    ",79],["T_DOC_COMMENT","\/**\n     * Constructor\n     *\n     * @param string|null $name The name identifying this type\n     *\/",81],["T_WHITESPACE","\n    ",85],["T_PUBLIC","public",86],["T_WHITESPACE"," ",86],["T_FUNCTION","function",86],["T_WHITESPACE"," ",86],["T_STRING","__construct",86],"(",["T_VARIABLE","$name",86],["T_WHITESPACE"," ",86],"=",["T_WHITESPACE"," ",86],["T_STRING","null",86],")",["T_WHITESPACE","\n    ",86],"{",["T_WHITESPACE","\n        ",87],["T_VARIABLE","$this",88],["T_OBJECT_OPERATOR","->",88],["T_STRING","_name",88],["T_WHITESPACE"," ",88],"=",["T_WHITESPACE"," ",88],["T_VARIABLE","$name",88],";",["T_WHITESPACE","\n    ",88],"}",["T_WHITESPACE","\n\n    ",89],["T_DOC_COMMENT","\/**\n     * Returns a Type object capable of converting a type identified by $name\n     *\n     * @param string $name type identifier\n     * @throws \\InvalidArgumentException If type identifier is unknown\n     * @return \\Cake\\Database\\Type\n     *\/",91],["T_WHITESPACE","\n    ",97],["T_PUBLIC","public",98],["T_WHITESPACE"," ",98],["T_STATIC","static",98],["T_WHITESPACE"," ",98],["T_FUNCTION","function",98],["T_WHITESPACE"," ",98],["T_STRING","build",98],"(",["T_VARIABLE","$name",98],")",["T_WHITESPACE","\n    ",98],"{",["T_WHITESPACE","\n        ",99],["T_IF","if",100],["T_WHITESPACE"," ",100],"(",["T_ISSET","isset",100],"(",["T_STATIC","static",100],["T_DOUBLE_COLON","::",100],["T_VARIABLE","$_builtTypes",100],"[",["T_VARIABLE","$name",100],"]",")",")",["T_WHITESPACE"," ",100],"{",["T_WHITESPACE","\n            ",100],["T_RETURN","return",101],["T_WHITESPACE"," ",101],["T_STATIC","static",101],["T_DOUBLE_COLON","::",101],["T_VARIABLE","$_builtTypes",101],"[",["T_VARIABLE","$name",101],"]",";",["T_WHITESPACE","\n        ",101],"}",["T_WHITESPACE","\n        ",102],["T_IF","if",103],["T_WHITESPACE"," ",103],"(","!",["T_ISSET","isset",103],"(",["T_STATIC","static",103],["T_DOUBLE_COLON","::",103],["T_VARIABLE","$_types",103],"[",["T_VARIABLE","$name",103],"]",")",")",["T_WHITESPACE"," ",103],"{",["T_WHITESPACE","\n            ",103],["T_THROW","throw",104],["T_WHITESPACE"," ",104],["T_NEW","new",104],["T_WHITESPACE"," ",104],["T_STRING","InvalidArgumentException",104],"(",["T_STRING","sprintf",104],"(",["T_CONSTANT_ENCAPSED_STRING","'Unknown type \"%s\"'",104],",",["T_WHITESPACE"," ",104],["T_VARIABLE","$name",104],")",")",";",["T_WHITESPACE","\n        ",104],"}",["T_WHITESPACE","\n        ",105],["T_IF","if",106],["T_WHITESPACE"," ",106],"(",["T_STRING","is_string",106],"(",["T_STATIC","static",106],["T_DOUBLE_COLON","::",106],["T_VARIABLE","$_types",106],"[",["T_VARIABLE","$name",106],"]",")",")",["T_WHITESPACE"," ",106],"{",["T_WHITESPACE","\n            ",106],["T_RETURN","return",107],["T_WHITESPACE"," ",107],["T_STATIC","static",107],["T_DOUBLE_COLON","::",107],["T_VARIABLE","$_builtTypes",107],"[",["T_VARIABLE","$name",107],"]",["T_WHITESPACE"," ",107],"=",["T_WHITESPACE"," ",107],["T_NEW","new",107],["T_WHITESPACE"," ",107],["T_STATIC","static",107],["T_DOUBLE_COLON","::",107],["T_VARIABLE","$_types",107],"[",["T_VARIABLE","$name",107],"]","(",["T_VARIABLE","$name",107],")",";",["T_WHITESPACE","\n        ",107],"}",["T_WHITESPACE","\n\n        ",108],["T_RETURN","return",110],["T_WHITESPACE"," ",110],["T_STATIC","static",110],["T_DOUBLE_COLON","::",110],["T_VARIABLE","$_builtTypes",110],"[",["T_VARIABLE","$name",110],"]",["T_WHITESPACE"," ",110],"=",["T_WHITESPACE"," ",110],["T_STATIC","static",110],["T_DOUBLE_COLON","::",110],["T_VARIABLE","$_types",110],"[",["T_VARIABLE","$name",110],"]",";",["T_WHITESPACE","\n    ",110],"}",["T_WHITESPACE","\n\n    ",111],["T_DOC_COMMENT","\/**\n     * Returns an arrays with all the mapped type objects, indexed by name\n     *\n     * @return array\n     *\/",113],["T_WHITESPACE","\n    ",117],["T_PUBLIC","public",118],["T_WHITESPACE"," ",118],["T_STATIC","static",118],["T_WHITESPACE"," ",118],["T_FUNCTION","function",118],["T_WHITESPACE"," ",118],["T_STRING","buildAll",118],"(",")",["T_WHITESPACE","\n    ",118],"{",["T_WHITESPACE","\n        ",119],["T_VARIABLE","$result",120],["T_WHITESPACE"," ",120],"=",["T_WHITESPACE"," ",120],"[","]",";",["T_WHITESPACE","\n        ",120],["T_FOREACH","foreach",121],["T_WHITESPACE"," ",121],"(",["T_STRING","self",121],["T_DOUBLE_COLON","::",121],["T_VARIABLE","$_types",121],["T_WHITESPACE"," ",121],["T_AS","as",121],["T_WHITESPACE"," ",121],["T_VARIABLE","$name",121],["T_WHITESPACE"," ",121],["T_DOUBLE_ARROW","=>",121],["T_WHITESPACE"," ",121],["T_VARIABLE","$type",121],")",["T_WHITESPACE"," ",121],"{",["T_WHITESPACE","\n            ",121],["T_VARIABLE","$result",122],"[",["T_VARIABLE","$name",122],"]",["T_WHITESPACE"," ",122],"=",["T_WHITESPACE"," ",122],["T_ISSET","isset",122],"(",["T_STATIC","static",122],["T_DOUBLE_COLON","::",122],["T_VARIABLE","$_builtTypes",122],"[",["T_VARIABLE","$name",122],"]",")",["T_WHITESPACE"," ",122],"?",["T_WHITESPACE"," ",122],["T_STATIC","static",122],["T_DOUBLE_COLON","::",122],["T_VARIABLE","$_builtTypes",122],"[",["T_VARIABLE","$name",122],"]",["T_WHITESPACE"," ",122],":",["T_WHITESPACE"," ",122],["T_STATIC","static",122],["T_DOUBLE_COLON","::",122],["T_STRING","build",122],"(",["T_VARIABLE","$name",122],")",";",["T_WHITESPACE","\n        ",122],"}",["T_WHITESPACE","\n\n        ",123],["T_RETURN","return",125],["T_WHITESPACE"," ",125],["T_VARIABLE","$result",125],";",["T_WHITESPACE","\n    ",125],"}",["T_WHITESPACE","\n\n    ",126],["T_DOC_COMMENT","\/**\n     * Returns a Type object capable of converting a type identified by $name\n     *\n     * @param string $name The type identifier you want to set.\n     * @param \\Cake\\Database\\Type $instance The type instance you want to set.\n     * @return void\n     *\/",128],["T_WHITESPACE","\n    ",134],["T_PUBLIC","public",135],["T_WHITESPACE"," ",135],["T_STATIC","static",135],["T_WHITESPACE"," ",135],["T_FUNCTION","function",135],["T_WHITESPACE"," ",135],["T_STRING","set",135],"(",["T_VARIABLE","$name",135],",",["T_WHITESPACE"," ",135],["T_STRING","Type",135],["T_WHITESPACE"," ",135],["T_VARIABLE","$instance",135],")",["T_WHITESPACE","\n    ",135],"{",["T_WHITESPACE","\n        ",136],["T_STATIC","static",137],["T_DOUBLE_COLON","::",137],["T_VARIABLE","$_builtTypes",137],"[",["T_VARIABLE","$name",137],"]",["T_WHITESPACE"," ",137],"=",["T_WHITESPACE"," ",137],["T_VARIABLE","$instance",137],";",["T_WHITESPACE","\n    ",137],"}",["T_WHITESPACE","\n\n    ",138],["T_DOC_COMMENT","\/**\n     * Registers a new type identifier and maps it to a fully namespaced classname,\n     * If called with no arguments it will return current types map array\n     * If $className is omitted it will return mapped class for $type\n     *\n     * @param string|array|\\Cake\\Database\\Type|null $type if string name of type to map, if array list of arrays to be mapped\n     * @param string|null $className The classname to register.\n     * @return array|string|null if $type is null then array with current map, if $className is null string\n     * configured class name for give $type, null otherwise\n     *\/",140],["T_WHITESPACE","\n    ",149],["T_PUBLIC","public",150],["T_WHITESPACE"," ",150],["T_STATIC","static",150],["T_WHITESPACE"," ",150],["T_FUNCTION","function",150],["T_WHITESPACE"," ",150],["T_STRING","map",150],"(",["T_VARIABLE","$type",150],["T_WHITESPACE"," ",150],"=",["T_WHITESPACE"," ",150],["T_STRING","null",150],",",["T_WHITESPACE"," ",150],["T_VARIABLE","$className",150],["T_WHITESPACE"," ",150],"=",["T_WHITESPACE"," ",150],["T_STRING","null",150],")",["T_WHITESPACE","\n    ",150],"{",["T_WHITESPACE","\n        ",151],["T_IF","if",152],["T_WHITESPACE"," ",152],"(",["T_VARIABLE","$type",152],["T_WHITESPACE"," ",152],["T_IS_IDENTICAL","===",152],["T_WHITESPACE"," ",152],["T_STRING","null",152],")",["T_WHITESPACE"," ",152],"{",["T_WHITESPACE","\n            ",152],["T_RETURN","return",153],["T_WHITESPACE"," ",153],["T_STRING","self",153],["T_DOUBLE_COLON","::",153],["T_VARIABLE","$_types",153],";",["T_WHITESPACE","\n        ",153],"}",["T_WHITESPACE","\n        ",154],["T_IF","if",155],["T_WHITESPACE"," ",155],"(",["T_STRING","is_array",155],"(",["T_VARIABLE","$type",155],")",")",["T_WHITESPACE"," ",155],"{",["T_WHITESPACE","\n            ",155],["T_STRING","self",156],["T_DOUBLE_COLON","::",156],["T_VARIABLE","$_types",156],["T_WHITESPACE"," ",156],"=",["T_WHITESPACE"," ",156],["T_VARIABLE","$type",156],";",["T_WHITESPACE","\n\n            ",156],["T_RETURN","return",158],["T_WHITESPACE"," ",158],["T_STRING","null",158],";",["T_WHITESPACE","\n        ",158],"}",["T_WHITESPACE","\n        ",159],["T_IF","if",160],["T_WHITESPACE"," ",160],"(",["T_VARIABLE","$className",160],["T_WHITESPACE"," ",160],["T_IS_IDENTICAL","===",160],["T_WHITESPACE"," ",160],["T_STRING","null",160],")",["T_WHITESPACE"," ",160],"{",["T_WHITESPACE","\n            ",160],["T_RETURN","return",161],["T_WHITESPACE"," ",161],["T_ISSET","isset",161],"(",["T_STRING","self",161],["T_DOUBLE_COLON","::",161],["T_VARIABLE","$_types",161],"[",["T_VARIABLE","$type",161],"]",")",["T_WHITESPACE"," ",161],"?",["T_WHITESPACE"," ",161],["T_STRING","self",161],["T_DOUBLE_COLON","::",161],["T_VARIABLE","$_types",161],"[",["T_VARIABLE","$type",161],"]",["T_WHITESPACE"," ",161],":",["T_WHITESPACE"," ",161],["T_STRING","null",161],";",["T_WHITESPACE","\n        ",161],"}",["T_WHITESPACE","\n        ",162],["T_STRING","self",163],["T_DOUBLE_COLON","::",163],["T_VARIABLE","$_types",163],"[",["T_VARIABLE","$type",163],"]",["T_WHITESPACE"," ",163],"=",["T_WHITESPACE"," ",163],["T_VARIABLE","$className",163],";",["T_WHITESPACE","\n    ",163],"}",["T_WHITESPACE","\n\n    ",164],["T_DOC_COMMENT","\/**\n     * Clears out all created instances and mapped types classes, useful for testing\n     *\n     * @return void\n     *\/",166],["T_WHITESPACE","\n    ",170],["T_PUBLIC","public",171],["T_WHITESPACE"," ",171],["T_STATIC","static",171],["T_WHITESPACE"," ",171],["T_FUNCTION","function",171],["T_WHITESPACE"," ",171],["T_STRING","clear",171],"(",")",["T_WHITESPACE","\n    ",171],"{",["T_WHITESPACE","\n        ",172],["T_STRING","self",173],["T_DOUBLE_COLON","::",173],["T_VARIABLE","$_types",173],["T_WHITESPACE"," ",173],"=",["T_WHITESPACE"," ",173],"[","]",";",["T_WHITESPACE","\n        ",173],["T_STRING","self",174],["T_DOUBLE_COLON","::",174],["T_VARIABLE","$_builtTypes",174],["T_WHITESPACE"," ",174],"=",["T_WHITESPACE"," ",174],"[","]",";",["T_WHITESPACE","\n    ",174],"}",["T_WHITESPACE","\n\n    ",175],["T_DOC_COMMENT","\/**\n     * {@inheritDoc}\n     *\/",177],["T_WHITESPACE","\n    ",179],["T_PUBLIC","public",180],["T_WHITESPACE"," ",180],["T_FUNCTION","function",180],["T_WHITESPACE"," ",180],["T_STRING","getName",180],"(",")",["T_WHITESPACE","\n    ",180],"{",["T_WHITESPACE","\n        ",181],["T_RETURN","return",182],["T_WHITESPACE"," ",182],["T_VARIABLE","$this",182],["T_OBJECT_OPERATOR","->",182],["T_STRING","_name",182],";",["T_WHITESPACE","\n    ",182],"}",["T_WHITESPACE","\n\n    ",183],["T_DOC_COMMENT","\/**\n     * {@inheritDoc}\n     *\/",185],["T_WHITESPACE","\n    ",187],["T_PUBLIC","public",188],["T_WHITESPACE"," ",188],["T_FUNCTION","function",188],["T_WHITESPACE"," ",188],["T_STRING","getBaseType",188],"(",")",["T_WHITESPACE","\n    ",188],"{",["T_WHITESPACE","\n        ",189],["T_RETURN","return",190],["T_WHITESPACE"," ",190],["T_VARIABLE","$this",190],["T_OBJECT_OPERATOR","->",190],["T_STRING","_name",190],";",["T_WHITESPACE","\n    ",190],"}",["T_WHITESPACE","\n\n    ",191],["T_DOC_COMMENT","\/**\n     * {@inheritDoc}\n     *\/",193],["T_WHITESPACE","\n    ",195],["T_PUBLIC","public",196],["T_WHITESPACE"," ",196],["T_FUNCTION","function",196],["T_WHITESPACE"," ",196],["T_STRING","toDatabase",196],"(",["T_VARIABLE","$value",196],",",["T_WHITESPACE"," ",196],["T_STRING","Driver",196],["T_WHITESPACE"," ",196],["T_VARIABLE","$driver",196],")",["T_WHITESPACE","\n    ",196],"{",["T_WHITESPACE","\n        ",197],["T_RETURN","return",198],["T_WHITESPACE"," ",198],["T_VARIABLE","$this",198],["T_OBJECT_OPERATOR","->",198],["T_STRING","_basicTypeCast",198],"(",["T_VARIABLE","$value",198],")",";",["T_WHITESPACE","\n    ",198],"}",["T_WHITESPACE","\n\n    ",199],["T_DOC_COMMENT","\/**\n     * Casts given value from a database type to PHP equivalent\n     *\n     * @param mixed $value value to be converted to PHP equivalent\n     * @param \\Cake\\Database\\Driver $driver object from which database preferences and configuration will be extracted\n     * @return mixed\n     *\/",201],["T_WHITESPACE","\n    ",207],["T_PUBLIC","public",208],["T_WHITESPACE"," ",208],["T_FUNCTION","function",208],["T_WHITESPACE"," ",208],["T_STRING","toPHP",208],"(",["T_VARIABLE","$value",208],",",["T_WHITESPACE"," ",208],["T_STRING","Driver",208],["T_WHITESPACE"," ",208],["T_VARIABLE","$driver",208],")",["T_WHITESPACE","\n    ",208],"{",["T_WHITESPACE","\n        ",209],["T_RETURN","return",210],["T_WHITESPACE"," ",210],["T_VARIABLE","$this",210],["T_OBJECT_OPERATOR","->",210],["T_STRING","_basicTypeCast",210],"(",["T_VARIABLE","$value",210],")",";",["T_WHITESPACE","\n    ",210],"}",["T_WHITESPACE","\n\n    ",211],["T_DOC_COMMENT","\/**\n     * Checks whether this type is a basic one and can be converted using a callback\n     * If it is, returns converted value\n     *\n     * @param mixed $value value to be converted to PHP equivalent\n     * @return mixed\n     * @deprecated 3.1 All types should now be a specific class\n     *\/",213],["T_WHITESPACE","\n    ",220],["T_PROTECTED","protected",221],["T_WHITESPACE"," ",221],["T_FUNCTION","function",221],["T_WHITESPACE"," ",221],["T_STRING","_basicTypeCast",221],"(",["T_VARIABLE","$value",221],")",["T_WHITESPACE","\n    ",221],"{",["T_WHITESPACE","\n        ",222],["T_IF","if",223],["T_WHITESPACE"," ",223],"(",["T_VARIABLE","$value",223],["T_WHITESPACE"," ",223],["T_IS_IDENTICAL","===",223],["T_WHITESPACE"," ",223],["T_STRING","null",223],")",["T_WHITESPACE"," ",223],"{",["T_WHITESPACE","\n            ",223],["T_RETURN","return",224],["T_WHITESPACE"," ",224],["T_STRING","null",224],";",["T_WHITESPACE","\n        ",224],"}",["T_WHITESPACE","\n        ",225],["T_IF","if",226],["T_WHITESPACE"," ",226],"(","!",["T_EMPTY","empty",226],"(",["T_STRING","self",226],["T_DOUBLE_COLON","::",226],["T_VARIABLE","$_basicTypes",226],"[",["T_VARIABLE","$this",226],["T_OBJECT_OPERATOR","->",226],["T_STRING","_name",226],"]",")",")",["T_WHITESPACE"," ",226],"{",["T_WHITESPACE","\n            ",226],["T_VARIABLE","$typeInfo",227],["T_WHITESPACE"," ",227],"=",["T_WHITESPACE"," ",227],["T_STRING","self",227],["T_DOUBLE_COLON","::",227],["T_VARIABLE","$_basicTypes",227],"[",["T_VARIABLE","$this",227],["T_OBJECT_OPERATOR","->",227],["T_STRING","_name",227],"]",";",["T_WHITESPACE","\n            ",227],["T_IF","if",228],["T_WHITESPACE"," ",228],"(",["T_ISSET","isset",228],"(",["T_VARIABLE","$typeInfo",228],"[",["T_CONSTANT_ENCAPSED_STRING","'callback'",228],"]",")",")",["T_WHITESPACE"," ",228],"{",["T_WHITESPACE","\n                ",228],["T_RETURN","return",229],["T_WHITESPACE"," ",229],["T_VARIABLE","$typeInfo",229],"[",["T_CONSTANT_ENCAPSED_STRING","'callback'",229],"]","(",["T_VARIABLE","$value",229],")",";",["T_WHITESPACE","\n            ",229],"}",["T_WHITESPACE","\n        ",230],"}",["T_WHITESPACE","\n\n        ",231],["T_RETURN","return",233],["T_WHITESPACE"," ",233],["T_VARIABLE","$value",233],";",["T_WHITESPACE","\n    ",233],"}",["T_WHITESPACE","\n\n    ",234],["T_DOC_COMMENT","\/**\n     * {@inheritDoc}\n     *\/",236],["T_WHITESPACE","\n    ",238],["T_PUBLIC","public",239],["T_WHITESPACE"," ",239],["T_FUNCTION","function",239],["T_WHITESPACE"," ",239],["T_STRING","toStatement",239],"(",["T_VARIABLE","$value",239],",",["T_WHITESPACE"," ",239],["T_STRING","Driver",239],["T_WHITESPACE"," ",239],["T_VARIABLE","$driver",239],")",["T_WHITESPACE","\n    ",239],"{",["T_WHITESPACE","\n        ",240],["T_IF","if",241],["T_WHITESPACE"," ",241],"(",["T_VARIABLE","$value",241],["T_WHITESPACE"," ",241],["T_IS_IDENTICAL","===",241],["T_WHITESPACE"," ",241],["T_STRING","null",241],")",["T_WHITESPACE"," ",241],"{",["T_WHITESPACE","\n            ",241],["T_RETURN","return",242],["T_WHITESPACE"," ",242],["T_STRING","PDO",242],["T_DOUBLE_COLON","::",242],["T_STRING","PARAM_NULL",242],";",["T_WHITESPACE","\n        ",242],"}",["T_WHITESPACE","\n\n        ",243],["T_RETURN","return",245],["T_WHITESPACE"," ",245],["T_STRING","PDO",245],["T_DOUBLE_COLON","::",245],["T_STRING","PARAM_STR",245],";",["T_WHITESPACE","\n    ",245],"}",["T_WHITESPACE","\n\n    ",246],["T_DOC_COMMENT","\/**\n     * Type converter for boolean values.\n     *\n     * Will convert string true\/false into booleans.\n     *\n     * @param mixed $value The value to convert to a boolean.\n     * @return bool\n     * @deprecated 3.1.8 This method is now unused.\n     *\/",248],["T_WHITESPACE","\n    ",256],["T_PUBLIC","public",257],["T_WHITESPACE"," ",257],["T_STATIC","static",257],["T_WHITESPACE"," ",257],["T_FUNCTION","function",257],["T_WHITESPACE"," ",257],["T_STRING","boolval",257],"(",["T_VARIABLE","$value",257],")",["T_WHITESPACE","\n    ",257],"{",["T_WHITESPACE","\n        ",258],["T_IF","if",259],["T_WHITESPACE"," ",259],"(",["T_STRING","is_string",259],"(",["T_VARIABLE","$value",259],")",["T_WHITESPACE"," ",259],["T_BOOLEAN_AND","&&",259],["T_WHITESPACE"," ",259],"!",["T_STRING","is_numeric",259],"(",["T_VARIABLE","$value",259],")",")",["T_WHITESPACE"," ",259],"{",["T_WHITESPACE","\n            ",259],["T_RETURN","return",260],["T_WHITESPACE"," ",260],["T_STRING","strtolower",260],"(",["T_VARIABLE","$value",260],")",["T_WHITESPACE"," ",260],["T_IS_IDENTICAL","===",260],["T_WHITESPACE"," ",260],["T_CONSTANT_ENCAPSED_STRING","'true'",260],["T_WHITESPACE"," ",260],"?",["T_WHITESPACE"," ",260],["T_STRING","true",260],["T_WHITESPACE"," ",260],":",["T_WHITESPACE"," ",260],["T_STRING","false",260],";",["T_WHITESPACE","\n        ",260],"}",["T_WHITESPACE","\n\n        ",261],["T_RETURN","return",263],["T_WHITESPACE"," ",263],"!",["T_EMPTY","empty",263],"(",["T_VARIABLE","$value",263],")",";",["T_WHITESPACE","\n    ",263],"}",["T_WHITESPACE","\n\n    ",264],["T_DOC_COMMENT","\/**\n     * Type converter for string values.\n     *\n     * Will convert values into strings\n     *\n     * @param mixed $value The value to convert to a string.\n     * @return bool\n     * @deprecated 3.1.8 This method is now unused.\n     *\/",266],["T_WHITESPACE","\n    ",274],["T_PUBLIC","public",275],["T_WHITESPACE"," ",275],["T_STATIC","static",275],["T_WHITESPACE"," ",275],["T_FUNCTION","function",275],["T_WHITESPACE"," ",275],["T_STRING","strval",275],"(",["T_VARIABLE","$value",275],")",["T_WHITESPACE","\n    ",275],"{",["T_WHITESPACE","\n        ",276],["T_IF","if",277],["T_WHITESPACE"," ",277],"(",["T_STRING","is_array",277],"(",["T_VARIABLE","$value",277],")",")",["T_WHITESPACE"," ",277],"{",["T_WHITESPACE","\n            ",277],["T_VARIABLE","$value",278],["T_WHITESPACE"," ",278],"=",["T_WHITESPACE"," ",278],["T_CONSTANT_ENCAPSED_STRING","''",278],";",["T_WHITESPACE","\n        ",278],"}",["T_WHITESPACE","\n\n        ",279],["T_RETURN","return",281],["T_WHITESPACE"," ",281],["T_STRING_CAST","(string)",281],["T_VARIABLE","$value",281],";",["T_WHITESPACE","\n    ",281],"}",["T_WHITESPACE","\n\n    ",282],["T_DOC_COMMENT","\/**\n     * {@inheritDoc}\n     *\/",284],["T_WHITESPACE","\n    ",286],["T_PUBLIC","public",287],["T_WHITESPACE"," ",287],["T_FUNCTION","function",287],["T_WHITESPACE"," ",287],["T_STRING","newId",287],"(",")",["T_WHITESPACE","\n    ",287],"{",["T_WHITESPACE","\n        ",288],["T_RETURN","return",289],["T_WHITESPACE"," ",289],["T_STRING","null",289],";",["T_WHITESPACE","\n    ",289],"}",["T_WHITESPACE","\n\n    ",290],["T_DOC_COMMENT","\/**\n     * {@inheritDoc}\n     *\/",292],["T_WHITESPACE","\n    ",294],["T_PUBLIC","public",295],["T_WHITESPACE"," ",295],["T_FUNCTION","function",295],["T_WHITESPACE"," ",295],["T_STRING","marshal",295],"(",["T_VARIABLE","$value",295],")",["T_WHITESPACE","\n    ",295],"{",["T_WHITESPACE","\n        ",296],["T_RETURN","return",297],["T_WHITESPACE"," ",297],["T_VARIABLE","$this",297],["T_OBJECT_OPERATOR","->",297],["T_STRING","_basicTypeCast",297],"(",["T_VARIABLE","$value",297],")",";",["T_WHITESPACE","\n    ",297],"}",["T_WHITESPACE","\n",298],"}",["T_WHITESPACE","\n",299]]