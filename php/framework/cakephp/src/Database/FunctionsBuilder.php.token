[["T_OPEN_TAG","<?php\n",1],["T_DOC_COMMENT","\/**\n * CakePHP(tm) : Rapid Development Framework (http:\/\/cakephp.org)\n * Copyright (c) Cake Software Foundation, Inc. (http:\/\/cakefoundation.org)\n *\n * Licensed under The MIT License\n * For full copyright and license information, please see the LICENSE.txt\n * Redistributions of files must retain the above copyright notice.\n *\n * @copyright     Copyright (c) Cake Software Foundation, Inc. (http:\/\/cakefoundation.org)\n * @link          http:\/\/cakephp.org CakePHP(tm) Project\n * @since         3.0.0\n * @license       http:\/\/www.opensource.org\/licenses\/mit-license.php MIT License\n *\/",2],["T_WHITESPACE","\n",14],["T_NAMESPACE","namespace",15],["T_WHITESPACE"," ",15],["T_STRING","Cake",15],["T_NS_SEPARATOR","\\",15],["T_STRING","Database",15],";",["T_WHITESPACE","\n\n",15],["T_USE","use",17],["T_WHITESPACE"," ",17],["T_STRING","Cake",17],["T_NS_SEPARATOR","\\",17],["T_STRING","Database",17],["T_NS_SEPARATOR","\\",17],["T_STRING","Expression",17],["T_NS_SEPARATOR","\\",17],["T_STRING","FunctionExpression",17],";",["T_WHITESPACE","\n\n",17],["T_DOC_COMMENT","\/**\n * Contains methods related to generating FunctionExpression objects\n * with most commonly used SQL functions.\n * This acts as a factory for FunctionExpression objects.\n *\/",19],["T_WHITESPACE","\n",23],["T_CLASS","class",24],["T_WHITESPACE"," ",24],["T_STRING","FunctionsBuilder",24],["T_WHITESPACE","\n",24],"{",["T_WHITESPACE","\n\n    ",25],["T_DOC_COMMENT","\/**\n     * Returns a new instance of a FunctionExpression. This is used for generating\n     * arbitrary function calls in the final SQL string.\n     *\n     * @param string $name the name of the SQL function to constructed\n     * @param array $params list of params to be passed to the function\n     * @param array $types list of types for each function param\n     * @param string $return The return type of the function expression\n     * @return \\Cake\\Database\\Expression\\FunctionExpression\n     *\/",27],["T_WHITESPACE","\n    ",36],["T_PROTECTED","protected",37],["T_WHITESPACE"," ",37],["T_FUNCTION","function",37],["T_WHITESPACE"," ",37],["T_STRING","_build",37],"(",["T_VARIABLE","$name",37],",",["T_WHITESPACE"," ",37],["T_VARIABLE","$params",37],["T_WHITESPACE"," ",37],"=",["T_WHITESPACE"," ",37],"[","]",",",["T_WHITESPACE"," ",37],["T_VARIABLE","$types",37],["T_WHITESPACE"," ",37],"=",["T_WHITESPACE"," ",37],"[","]",",",["T_WHITESPACE"," ",37],["T_VARIABLE","$return",37],["T_WHITESPACE"," ",37],"=",["T_WHITESPACE"," ",37],["T_CONSTANT_ENCAPSED_STRING","'string'",37],")",["T_WHITESPACE","\n    ",37],"{",["T_WHITESPACE","\n        ",38],["T_RETURN","return",39],["T_WHITESPACE"," ",39],["T_NEW","new",39],["T_WHITESPACE"," ",39],["T_STRING","FunctionExpression",39],"(",["T_VARIABLE","$name",39],",",["T_WHITESPACE"," ",39],["T_VARIABLE","$params",39],",",["T_WHITESPACE"," ",39],["T_VARIABLE","$types",39],",",["T_WHITESPACE"," ",39],["T_VARIABLE","$return",39],")",";",["T_WHITESPACE","\n    ",39],"}",["T_WHITESPACE","\n\n    ",40],["T_DOC_COMMENT","\/**\n     * Helper function to build a function expression that only takes one literal\n     * argument.\n     *\n     * @param string $name name of the function to build\n     * @param mixed $expression the function argument\n     * @param array $types list of types to bind to the arguments\n     * @param string $return The return type for the function\n     * @return \\Cake\\Database\\Expression\\FunctionExpression\n     *\/",42],["T_WHITESPACE","\n    ",51],["T_PROTECTED","protected",52],["T_WHITESPACE"," ",52],["T_FUNCTION","function",52],["T_WHITESPACE"," ",52],["T_STRING","_literalArgumentFunction",52],"(",["T_VARIABLE","$name",52],",",["T_WHITESPACE"," ",52],["T_VARIABLE","$expression",52],",",["T_WHITESPACE"," ",52],["T_VARIABLE","$types",52],["T_WHITESPACE"," ",52],"=",["T_WHITESPACE"," ",52],"[","]",",",["T_WHITESPACE"," ",52],["T_VARIABLE","$return",52],["T_WHITESPACE"," ",52],"=",["T_WHITESPACE"," ",52],["T_CONSTANT_ENCAPSED_STRING","'string'",52],")",["T_WHITESPACE","\n    ",52],"{",["T_WHITESPACE","\n        ",53],["T_IF","if",54],["T_WHITESPACE"," ",54],"(","!",["T_STRING","is_string",54],"(",["T_VARIABLE","$expression",54],")",")",["T_WHITESPACE"," ",54],"{",["T_WHITESPACE","\n            ",54],["T_VARIABLE","$expression",55],["T_WHITESPACE"," ",55],"=",["T_WHITESPACE"," ",55],"[",["T_VARIABLE","$expression",55],"]",";",["T_WHITESPACE","\n        ",55],"}",["T_WHITESPACE"," ",56],["T_ELSE","else",56],["T_WHITESPACE"," ",56],"{",["T_WHITESPACE","\n            ",56],["T_VARIABLE","$expression",57],["T_WHITESPACE"," ",57],"=",["T_WHITESPACE"," ",57],"[",["T_VARIABLE","$expression",57],["T_WHITESPACE"," ",57],["T_DOUBLE_ARROW","=>",57],["T_WHITESPACE"," ",57],["T_CONSTANT_ENCAPSED_STRING","'literal'",57],"]",";",["T_WHITESPACE","\n        ",57],"}",["T_WHITESPACE","\n\n        ",58],["T_RETURN","return",60],["T_WHITESPACE"," ",60],["T_VARIABLE","$this",60],["T_OBJECT_OPERATOR","->",60],["T_STRING","_build",60],"(",["T_VARIABLE","$name",60],",",["T_WHITESPACE"," ",60],["T_VARIABLE","$expression",60],",",["T_WHITESPACE"," ",60],["T_VARIABLE","$types",60],",",["T_WHITESPACE"," ",60],["T_VARIABLE","$return",60],")",";",["T_WHITESPACE","\n    ",60],"}",["T_WHITESPACE","\n\n    ",61],["T_DOC_COMMENT","\/**\n     * Returns a FunctionExpression representing a call to SQL SUM function.\n     *\n     * @param mixed $expression the function argument\n     * @param array $types list of types to bind to the arguments\n     * @return \\Cake\\Database\\Expression\\FunctionExpression\n     *\/",63],["T_WHITESPACE","\n    ",69],["T_PUBLIC","public",70],["T_WHITESPACE"," ",70],["T_FUNCTION","function",70],["T_WHITESPACE"," ",70],["T_STRING","sum",70],"(",["T_VARIABLE","$expression",70],",",["T_WHITESPACE"," ",70],["T_VARIABLE","$types",70],["T_WHITESPACE"," ",70],"=",["T_WHITESPACE"," ",70],"[","]",")",["T_WHITESPACE","\n    ",70],"{",["T_WHITESPACE","\n        ",71],["T_VARIABLE","$returnType",72],["T_WHITESPACE"," ",72],"=",["T_WHITESPACE"," ",72],["T_CONSTANT_ENCAPSED_STRING","'float'",72],";",["T_WHITESPACE","\n        ",72],["T_IF","if",73],["T_WHITESPACE"," ",73],"(",["T_STRING","current",73],"(",["T_VARIABLE","$types",73],")",["T_WHITESPACE"," ",73],["T_IS_IDENTICAL","===",73],["T_WHITESPACE"," ",73],["T_CONSTANT_ENCAPSED_STRING","'integer'",73],")",["T_WHITESPACE"," ",73],"{",["T_WHITESPACE","\n            ",73],["T_VARIABLE","$returnType",74],["T_WHITESPACE"," ",74],"=",["T_WHITESPACE"," ",74],["T_CONSTANT_ENCAPSED_STRING","'integer'",74],";",["T_WHITESPACE","\n        ",74],"}",["T_WHITESPACE","\n\n        ",75],["T_RETURN","return",77],["T_WHITESPACE"," ",77],["T_VARIABLE","$this",77],["T_OBJECT_OPERATOR","->",77],["T_STRING","_literalArgumentFunction",77],"(",["T_CONSTANT_ENCAPSED_STRING","'SUM'",77],",",["T_WHITESPACE"," ",77],["T_VARIABLE","$expression",77],",",["T_WHITESPACE"," ",77],["T_VARIABLE","$types",77],",",["T_WHITESPACE"," ",77],["T_VARIABLE","$returnType",77],")",";",["T_WHITESPACE","\n    ",77],"}",["T_WHITESPACE","\n\n    ",78],["T_DOC_COMMENT","\/**\n     * Returns a FunctionExpression representing a call to SQL AVG function.\n     *\n     * @param mixed $expression the function argument\n     * @param array $types list of types to bind to the arguments\n     * @return \\Cake\\Database\\Expression\\FunctionExpression\n     *\/",80],["T_WHITESPACE","\n    ",86],["T_PUBLIC","public",87],["T_WHITESPACE"," ",87],["T_FUNCTION","function",87],["T_WHITESPACE"," ",87],["T_STRING","avg",87],"(",["T_VARIABLE","$expression",87],",",["T_WHITESPACE"," ",87],["T_VARIABLE","$types",87],["T_WHITESPACE"," ",87],"=",["T_WHITESPACE"," ",87],"[","]",")",["T_WHITESPACE","\n    ",87],"{",["T_WHITESPACE","\n        ",88],["T_RETURN","return",89],["T_WHITESPACE"," ",89],["T_VARIABLE","$this",89],["T_OBJECT_OPERATOR","->",89],["T_STRING","_literalArgumentFunction",89],"(",["T_CONSTANT_ENCAPSED_STRING","'AVG'",89],",",["T_WHITESPACE"," ",89],["T_VARIABLE","$expression",89],",",["T_WHITESPACE"," ",89],["T_VARIABLE","$types",89],",",["T_WHITESPACE"," ",89],["T_CONSTANT_ENCAPSED_STRING","'float'",89],")",";",["T_WHITESPACE","\n    ",89],"}",["T_WHITESPACE","\n\n    ",90],["T_DOC_COMMENT","\/**\n     * Returns a FunctionExpression representing a call to SQL MAX function.\n     *\n     * @param mixed $expression the function argument\n     * @param array $types list of types to bind to the arguments\n     * @return \\Cake\\Database\\Expression\\FunctionExpression\n     *\/",92],["T_WHITESPACE","\n    ",98],["T_PUBLIC","public",99],["T_WHITESPACE"," ",99],["T_FUNCTION","function",99],["T_WHITESPACE"," ",99],["T_STRING","max",99],"(",["T_VARIABLE","$expression",99],",",["T_WHITESPACE"," ",99],["T_VARIABLE","$types",99],["T_WHITESPACE"," ",99],"=",["T_WHITESPACE"," ",99],"[","]",")",["T_WHITESPACE","\n    ",99],"{",["T_WHITESPACE","\n        ",100],["T_RETURN","return",101],["T_WHITESPACE"," ",101],["T_VARIABLE","$this",101],["T_OBJECT_OPERATOR","->",101],["T_STRING","_literalArgumentFunction",101],"(",["T_CONSTANT_ENCAPSED_STRING","'MAX'",101],",",["T_WHITESPACE"," ",101],["T_VARIABLE","$expression",101],",",["T_WHITESPACE"," ",101],["T_VARIABLE","$types",101],",",["T_WHITESPACE"," ",101],["T_STRING","current",101],"(",["T_VARIABLE","$types",101],")",["T_WHITESPACE"," ",101],"?",":",["T_WHITESPACE"," ",101],["T_CONSTANT_ENCAPSED_STRING","'string'",101],")",";",["T_WHITESPACE","\n    ",101],"}",["T_WHITESPACE","\n\n    ",102],["T_DOC_COMMENT","\/**\n     * Returns a FunctionExpression representing a call to SQL MIN function.\n     *\n     * @param mixed $expression the function argument\n     * @param array $types list of types to bind to the arguments\n     * @return \\Cake\\Database\\Expression\\FunctionExpression\n     *\/",104],["T_WHITESPACE","\n    ",110],["T_PUBLIC","public",111],["T_WHITESPACE"," ",111],["T_FUNCTION","function",111],["T_WHITESPACE"," ",111],["T_STRING","min",111],"(",["T_VARIABLE","$expression",111],",",["T_WHITESPACE"," ",111],["T_VARIABLE","$types",111],["T_WHITESPACE"," ",111],"=",["T_WHITESPACE"," ",111],"[","]",")",["T_WHITESPACE","\n    ",111],"{",["T_WHITESPACE","\n        ",112],["T_RETURN","return",113],["T_WHITESPACE"," ",113],["T_VARIABLE","$this",113],["T_OBJECT_OPERATOR","->",113],["T_STRING","_literalArgumentFunction",113],"(",["T_CONSTANT_ENCAPSED_STRING","'MIN'",113],",",["T_WHITESPACE"," ",113],["T_VARIABLE","$expression",113],",",["T_WHITESPACE"," ",113],["T_VARIABLE","$types",113],",",["T_WHITESPACE"," ",113],["T_STRING","current",113],"(",["T_VARIABLE","$types",113],")",["T_WHITESPACE"," ",113],"?",":",["T_WHITESPACE"," ",113],["T_CONSTANT_ENCAPSED_STRING","'string'",113],")",";",["T_WHITESPACE","\n    ",113],"}",["T_WHITESPACE","\n\n    ",114],["T_DOC_COMMENT","\/**\n     * Returns a FunctionExpression representing a call to SQL COUNT function.\n     *\n     * @param mixed $expression the function argument\n     * @param array $types list of types to bind to the arguments\n     * @return \\Cake\\Database\\Expression\\FunctionExpression\n     *\/",116],["T_WHITESPACE","\n    ",122],["T_PUBLIC","public",123],["T_WHITESPACE"," ",123],["T_FUNCTION","function",123],["T_WHITESPACE"," ",123],["T_STRING","count",123],"(",["T_VARIABLE","$expression",123],",",["T_WHITESPACE"," ",123],["T_VARIABLE","$types",123],["T_WHITESPACE"," ",123],"=",["T_WHITESPACE"," ",123],"[","]",")",["T_WHITESPACE","\n    ",123],"{",["T_WHITESPACE","\n        ",124],["T_RETURN","return",125],["T_WHITESPACE"," ",125],["T_VARIABLE","$this",125],["T_OBJECT_OPERATOR","->",125],["T_STRING","_literalArgumentFunction",125],"(",["T_CONSTANT_ENCAPSED_STRING","'COUNT'",125],",",["T_WHITESPACE"," ",125],["T_VARIABLE","$expression",125],",",["T_WHITESPACE"," ",125],["T_VARIABLE","$types",125],",",["T_WHITESPACE"," ",125],["T_CONSTANT_ENCAPSED_STRING","'integer'",125],")",";",["T_WHITESPACE","\n    ",125],"}",["T_WHITESPACE","\n\n    ",126],["T_DOC_COMMENT","\/**\n     * Returns a FunctionExpression representing a string concatenation\n     *\n     * @param array $args List of strings or expressions to concatenate\n     * @param array $types list of types to bind to the arguments\n     * @return \\Cake\\Database\\Expression\\FunctionExpression\n     *\/",128],["T_WHITESPACE","\n    ",134],["T_PUBLIC","public",135],["T_WHITESPACE"," ",135],["T_FUNCTION","function",135],["T_WHITESPACE"," ",135],["T_STRING","concat",135],"(",["T_VARIABLE","$args",135],",",["T_WHITESPACE"," ",135],["T_VARIABLE","$types",135],["T_WHITESPACE"," ",135],"=",["T_WHITESPACE"," ",135],"[","]",")",["T_WHITESPACE","\n    ",135],"{",["T_WHITESPACE","\n        ",136],["T_RETURN","return",137],["T_WHITESPACE"," ",137],["T_VARIABLE","$this",137],["T_OBJECT_OPERATOR","->",137],["T_STRING","_build",137],"(",["T_CONSTANT_ENCAPSED_STRING","'CONCAT'",137],",",["T_WHITESPACE"," ",137],["T_VARIABLE","$args",137],",",["T_WHITESPACE"," ",137],["T_VARIABLE","$types",137],",",["T_WHITESPACE"," ",137],["T_CONSTANT_ENCAPSED_STRING","'string'",137],")",";",["T_WHITESPACE","\n    ",137],"}",["T_WHITESPACE","\n\n    ",138],["T_DOC_COMMENT","\/**\n     * Returns a FunctionExpression representing a call to SQL COALESCE function.\n     *\n     * @param array $args List of expressions to evaluate as function parameters\n     * @param array $types list of types to bind to the arguments\n     * @return \\Cake\\Database\\Expression\\FunctionExpression\n     *\/",140],["T_WHITESPACE","\n    ",146],["T_PUBLIC","public",147],["T_WHITESPACE"," ",147],["T_FUNCTION","function",147],["T_WHITESPACE"," ",147],["T_STRING","coalesce",147],"(",["T_VARIABLE","$args",147],",",["T_WHITESPACE"," ",147],["T_VARIABLE","$types",147],["T_WHITESPACE"," ",147],"=",["T_WHITESPACE"," ",147],"[","]",")",["T_WHITESPACE","\n    ",147],"{",["T_WHITESPACE","\n        ",148],["T_RETURN","return",149],["T_WHITESPACE"," ",149],["T_VARIABLE","$this",149],["T_OBJECT_OPERATOR","->",149],["T_STRING","_build",149],"(",["T_CONSTANT_ENCAPSED_STRING","'COALESCE'",149],",",["T_WHITESPACE"," ",149],["T_VARIABLE","$args",149],",",["T_WHITESPACE"," ",149],["T_VARIABLE","$types",149],",",["T_WHITESPACE"," ",149],["T_STRING","current",149],"(",["T_VARIABLE","$types",149],")",["T_WHITESPACE"," ",149],"?",":",["T_WHITESPACE"," ",149],["T_CONSTANT_ENCAPSED_STRING","'string'",149],")",";",["T_WHITESPACE","\n    ",149],"}",["T_WHITESPACE","\n\n    ",150],["T_DOC_COMMENT","\/**\n     * Returns a FunctionExpression representing the difference in days between\n     * two dates.\n     *\n     * @param array $args List of expressions to obtain the difference in days.\n     * @param array $types list of types to bind to the arguments\n     * @return \\Cake\\Database\\Expression\\FunctionExpression\n     *\/",152],["T_WHITESPACE","\n    ",159],["T_PUBLIC","public",160],["T_WHITESPACE"," ",160],["T_FUNCTION","function",160],["T_WHITESPACE"," ",160],["T_STRING","dateDiff",160],"(",["T_VARIABLE","$args",160],",",["T_WHITESPACE"," ",160],["T_VARIABLE","$types",160],["T_WHITESPACE"," ",160],"=",["T_WHITESPACE"," ",160],"[","]",")",["T_WHITESPACE","\n    ",160],"{",["T_WHITESPACE","\n        ",161],["T_RETURN","return",162],["T_WHITESPACE"," ",162],["T_VARIABLE","$this",162],["T_OBJECT_OPERATOR","->",162],["T_STRING","_build",162],"(",["T_CONSTANT_ENCAPSED_STRING","'DATEDIFF'",162],",",["T_WHITESPACE"," ",162],["T_VARIABLE","$args",162],",",["T_WHITESPACE"," ",162],["T_VARIABLE","$types",162],",",["T_WHITESPACE"," ",162],["T_CONSTANT_ENCAPSED_STRING","'integer'",162],")",";",["T_WHITESPACE","\n    ",162],"}",["T_WHITESPACE","\n\n    ",163],["T_DOC_COMMENT","\/**\n     * Returns the specified date part from the SQL expression.\n     *\n     * @param string $part Part of the date to return.\n     * @param string $expression Expression to obtain the date part from.\n     * @param array $types list of types to bind to the arguments\n     * @return \\Cake\\Database\\Expression\\FunctionExpression\n     *\/",165],["T_WHITESPACE","\n    ",172],["T_PUBLIC","public",173],["T_WHITESPACE"," ",173],["T_FUNCTION","function",173],["T_WHITESPACE"," ",173],["T_STRING","datePart",173],"(",["T_VARIABLE","$part",173],",",["T_WHITESPACE"," ",173],["T_VARIABLE","$expression",173],",",["T_WHITESPACE"," ",173],["T_VARIABLE","$types",173],["T_WHITESPACE"," ",173],"=",["T_WHITESPACE"," ",173],"[","]",")",["T_WHITESPACE","\n    ",173],"{",["T_WHITESPACE","\n        ",174],["T_RETURN","return",175],["T_WHITESPACE"," ",175],["T_VARIABLE","$this",175],["T_OBJECT_OPERATOR","->",175],["T_STRING","extract",175],"(",["T_VARIABLE","$part",175],",",["T_WHITESPACE"," ",175],["T_VARIABLE","$expression",175],")",";",["T_WHITESPACE","\n    ",175],"}",["T_WHITESPACE","\n\n    ",176],["T_DOC_COMMENT","\/**\n     * Returns the specified date part from the SQL expression.\n     *\n     * @param string $part Part of the date to return.\n     * @param string $expression Expression to obtain the date part from.\n     * @param array $types list of types to bind to the arguments\n     * @return \\Cake\\Database\\Expression\\FunctionExpression\n     *\/",178],["T_WHITESPACE","\n    ",185],["T_PUBLIC","public",186],["T_WHITESPACE"," ",186],["T_FUNCTION","function",186],["T_WHITESPACE"," ",186],["T_STRING","extract",186],"(",["T_VARIABLE","$part",186],",",["T_WHITESPACE"," ",186],["T_VARIABLE","$expression",186],",",["T_WHITESPACE"," ",186],["T_VARIABLE","$types",186],["T_WHITESPACE"," ",186],"=",["T_WHITESPACE"," ",186],"[","]",")",["T_WHITESPACE","\n    ",186],"{",["T_WHITESPACE","\n        ",187],["T_VARIABLE","$expression",188],["T_WHITESPACE"," ",188],"=",["T_WHITESPACE"," ",188],["T_VARIABLE","$this",188],["T_OBJECT_OPERATOR","->",188],["T_STRING","_literalArgumentFunction",188],"(",["T_CONSTANT_ENCAPSED_STRING","'EXTRACT'",188],",",["T_WHITESPACE"," ",188],["T_VARIABLE","$expression",188],",",["T_WHITESPACE"," ",188],["T_VARIABLE","$types",188],",",["T_WHITESPACE"," ",188],["T_CONSTANT_ENCAPSED_STRING","'integer'",188],")",";",["T_WHITESPACE","\n        ",188],["T_VARIABLE","$expression",189],["T_OBJECT_OPERATOR","->",189],["T_STRING","tieWith",189],"(",["T_CONSTANT_ENCAPSED_STRING","' FROM'",189],")",["T_OBJECT_OPERATOR","->",189],["T_STRING","add",189],"(","[",["T_VARIABLE","$part",189],["T_WHITESPACE"," ",189],["T_DOUBLE_ARROW","=>",189],["T_WHITESPACE"," ",189],["T_CONSTANT_ENCAPSED_STRING","'literal'",189],"]",",",["T_WHITESPACE"," ",189],"[","]",",",["T_WHITESPACE"," ",189],["T_STRING","true",189],")",";",["T_WHITESPACE","\n\n        ",189],["T_RETURN","return",191],["T_WHITESPACE"," ",191],["T_VARIABLE","$expression",191],";",["T_WHITESPACE","\n    ",191],"}",["T_WHITESPACE","\n\n    ",192],["T_DOC_COMMENT","\/**\n     * Add the time unit to the date expression\n     *\n     * @param string $expression Expression to obtain the date part from.\n     * @param string $value Value to be added. Use negative to substract.\n     * @param string $unit Unit of the value e.g. hour or day.\n     * @param array $types list of types to bind to the arguments\n     * @return \\Cake\\Database\\Expression\\FunctionExpression\n     *\/",194],["T_WHITESPACE","\n    ",202],["T_PUBLIC","public",203],["T_WHITESPACE"," ",203],["T_FUNCTION","function",203],["T_WHITESPACE"," ",203],["T_STRING","dateAdd",203],"(",["T_VARIABLE","$expression",203],",",["T_WHITESPACE"," ",203],["T_VARIABLE","$value",203],",",["T_WHITESPACE"," ",203],["T_VARIABLE","$unit",203],",",["T_WHITESPACE"," ",203],["T_VARIABLE","$types",203],["T_WHITESPACE"," ",203],"=",["T_WHITESPACE"," ",203],"[","]",")",["T_WHITESPACE","\n    ",203],"{",["T_WHITESPACE","\n        ",204],["T_IF","if",205],["T_WHITESPACE"," ",205],"(","!",["T_STRING","is_numeric",205],"(",["T_VARIABLE","$value",205],")",")",["T_WHITESPACE"," ",205],"{",["T_WHITESPACE","\n            ",205],["T_VARIABLE","$value",206],["T_WHITESPACE"," ",206],"=",["T_WHITESPACE"," ",206],["T_LNUMBER","0",206],";",["T_WHITESPACE","\n        ",206],"}",["T_WHITESPACE","\n        ",207],["T_VARIABLE","$interval",208],["T_WHITESPACE"," ",208],"=",["T_WHITESPACE"," ",208],["T_VARIABLE","$value",208],["T_WHITESPACE"," ",208],".",["T_WHITESPACE"," ",208],["T_CONSTANT_ENCAPSED_STRING","' '",208],["T_WHITESPACE"," ",208],".",["T_WHITESPACE"," ",208],["T_VARIABLE","$unit",208],";",["T_WHITESPACE","\n        ",208],["T_VARIABLE","$expression",209],["T_WHITESPACE"," ",209],"=",["T_WHITESPACE"," ",209],["T_VARIABLE","$this",209],["T_OBJECT_OPERATOR","->",209],["T_STRING","_literalArgumentFunction",209],"(",["T_CONSTANT_ENCAPSED_STRING","'DATE_ADD'",209],",",["T_WHITESPACE"," ",209],["T_VARIABLE","$expression",209],",",["T_WHITESPACE"," ",209],["T_VARIABLE","$types",209],",",["T_WHITESPACE"," ",209],["T_CONSTANT_ENCAPSED_STRING","'datetime'",209],")",";",["T_WHITESPACE","\n        ",209],["T_VARIABLE","$expression",210],["T_OBJECT_OPERATOR","->",210],["T_STRING","tieWith",210],"(",["T_CONSTANT_ENCAPSED_STRING","', INTERVAL'",210],")",["T_OBJECT_OPERATOR","->",210],["T_STRING","add",210],"(","[",["T_VARIABLE","$interval",210],["T_WHITESPACE"," ",210],["T_DOUBLE_ARROW","=>",210],["T_WHITESPACE"," ",210],["T_CONSTANT_ENCAPSED_STRING","'literal'",210],"]",")",";",["T_WHITESPACE","\n\n        ",210],["T_RETURN","return",212],["T_WHITESPACE"," ",212],["T_VARIABLE","$expression",212],";",["T_WHITESPACE","\n    ",212],"}",["T_WHITESPACE","\n\n    ",213],["T_DOC_COMMENT","\/**\n     * Returns a FunctionExpression representing a call to SQL WEEKDAY function.\n     * 1 - Sunday, 2 - Monday, 3 - Tuesday...\n     *\n     * @param mixed $expression the function argument\n     * @param array $types list of types to bind to the arguments\n     * @return \\Cake\\Database\\Expression\\FunctionExpression\n     *\/",215],["T_WHITESPACE","\n    ",222],["T_PUBLIC","public",223],["T_WHITESPACE"," ",223],["T_FUNCTION","function",223],["T_WHITESPACE"," ",223],["T_STRING","dayOfWeek",223],"(",["T_VARIABLE","$expression",223],",",["T_WHITESPACE"," ",223],["T_VARIABLE","$types",223],["T_WHITESPACE"," ",223],"=",["T_WHITESPACE"," ",223],"[","]",")",["T_WHITESPACE","\n    ",223],"{",["T_WHITESPACE","\n        ",224],["T_RETURN","return",225],["T_WHITESPACE"," ",225],["T_VARIABLE","$this",225],["T_OBJECT_OPERATOR","->",225],["T_STRING","_literalArgumentFunction",225],"(",["T_CONSTANT_ENCAPSED_STRING","'DAYOFWEEK'",225],",",["T_WHITESPACE"," ",225],["T_VARIABLE","$expression",225],",",["T_WHITESPACE"," ",225],["T_VARIABLE","$types",225],",",["T_WHITESPACE"," ",225],["T_CONSTANT_ENCAPSED_STRING","'integer'",225],")",";",["T_WHITESPACE","\n    ",225],"}",["T_WHITESPACE","\n\n    ",226],["T_DOC_COMMENT","\/**\n     * Returns a FunctionExpression representing a call to SQL WEEKDAY function.\n     * 1 - Sunday, 2 - Monday, 3 - Tuesday...\n     *\n     * @param mixed $expression the function argument\n     * @param array $types list of types to bind to the arguments\n     * @return \\Cake\\Database\\Expression\\FunctionExpression\n     *\/",228],["T_WHITESPACE","\n    ",235],["T_PUBLIC","public",236],["T_WHITESPACE"," ",236],["T_FUNCTION","function",236],["T_WHITESPACE"," ",236],["T_STRING","weekday",236],"(",["T_VARIABLE","$expression",236],",",["T_WHITESPACE"," ",236],["T_VARIABLE","$types",236],["T_WHITESPACE"," ",236],"=",["T_WHITESPACE"," ",236],"[","]",")",["T_WHITESPACE","\n    ",236],"{",["T_WHITESPACE","\n        ",237],["T_RETURN","return",238],["T_WHITESPACE"," ",238],["T_VARIABLE","$this",238],["T_OBJECT_OPERATOR","->",238],["T_STRING","dayOfWeek",238],"(",["T_VARIABLE","$expression",238],",",["T_WHITESPACE"," ",238],["T_VARIABLE","$types",238],")",";",["T_WHITESPACE","\n    ",238],"}",["T_WHITESPACE","\n\n    ",239],["T_DOC_COMMENT","\/**\n     * Returns a FunctionExpression representing a call that will return the current\n     * date and time. By default it returns both date and time, but you can also\n     * make it generate only the date or only the time.\n     *\n     * @param string $type (datetime|date|time)\n     * @return \\Cake\\Database\\Expression\\FunctionExpression\n     *\/",241],["T_WHITESPACE","\n    ",248],["T_PUBLIC","public",249],["T_WHITESPACE"," ",249],["T_FUNCTION","function",249],["T_WHITESPACE"," ",249],["T_STRING","now",249],"(",["T_VARIABLE","$type",249],["T_WHITESPACE"," ",249],"=",["T_WHITESPACE"," ",249],["T_CONSTANT_ENCAPSED_STRING","'datetime'",249],")",["T_WHITESPACE","\n    ",249],"{",["T_WHITESPACE","\n        ",250],["T_IF","if",251],["T_WHITESPACE"," ",251],"(",["T_VARIABLE","$type",251],["T_WHITESPACE"," ",251],["T_IS_IDENTICAL","===",251],["T_WHITESPACE"," ",251],["T_CONSTANT_ENCAPSED_STRING","'datetime'",251],")",["T_WHITESPACE"," ",251],"{",["T_WHITESPACE","\n            ",251],["T_RETURN","return",252],["T_WHITESPACE"," ",252],["T_VARIABLE","$this",252],["T_OBJECT_OPERATOR","->",252],["T_STRING","_build",252],"(",["T_CONSTANT_ENCAPSED_STRING","'NOW'",252],")",["T_OBJECT_OPERATOR","->",252],["T_STRING","returnType",252],"(",["T_CONSTANT_ENCAPSED_STRING","'datetime'",252],")",";",["T_WHITESPACE","\n        ",252],"}",["T_WHITESPACE","\n        ",253],["T_IF","if",254],["T_WHITESPACE"," ",254],"(",["T_VARIABLE","$type",254],["T_WHITESPACE"," ",254],["T_IS_IDENTICAL","===",254],["T_WHITESPACE"," ",254],["T_CONSTANT_ENCAPSED_STRING","'date'",254],")",["T_WHITESPACE"," ",254],"{",["T_WHITESPACE","\n            ",254],["T_RETURN","return",255],["T_WHITESPACE"," ",255],["T_VARIABLE","$this",255],["T_OBJECT_OPERATOR","->",255],["T_STRING","_build",255],"(",["T_CONSTANT_ENCAPSED_STRING","'CURRENT_DATE'",255],")",["T_OBJECT_OPERATOR","->",255],["T_STRING","returnType",255],"(",["T_CONSTANT_ENCAPSED_STRING","'date'",255],")",";",["T_WHITESPACE","\n        ",255],"}",["T_WHITESPACE","\n        ",256],["T_IF","if",257],["T_WHITESPACE"," ",257],"(",["T_VARIABLE","$type",257],["T_WHITESPACE"," ",257],["T_IS_IDENTICAL","===",257],["T_WHITESPACE"," ",257],["T_CONSTANT_ENCAPSED_STRING","'time'",257],")",["T_WHITESPACE"," ",257],"{",["T_WHITESPACE","\n            ",257],["T_RETURN","return",258],["T_WHITESPACE"," ",258],["T_VARIABLE","$this",258],["T_OBJECT_OPERATOR","->",258],["T_STRING","_build",258],"(",["T_CONSTANT_ENCAPSED_STRING","'CURRENT_TIME'",258],")",["T_OBJECT_OPERATOR","->",258],["T_STRING","returnType",258],"(",["T_CONSTANT_ENCAPSED_STRING","'time'",258],")",";",["T_WHITESPACE","\n        ",258],"}",["T_WHITESPACE","\n    ",259],"}",["T_WHITESPACE","\n\n    ",260],["T_DOC_COMMENT","\/**\n     * Magic method dispatcher to create custom SQL function calls\n     *\n     * @param string $name the SQL function name to construct\n     * @param array $args list with up to 3 arguments, first one being an array with\n     * parameters for the SQL function, the second one a list of types to bind to those\n     * params, and the third one the return type of the function\n     * @return \\Cake\\Database\\Expression\\FunctionExpression\n     *\/",262],["T_WHITESPACE","\n    ",270],["T_PUBLIC","public",271],["T_WHITESPACE"," ",271],["T_FUNCTION","function",271],["T_WHITESPACE"," ",271],["T_STRING","__call",271],"(",["T_VARIABLE","$name",271],",",["T_WHITESPACE"," ",271],["T_VARIABLE","$args",271],")",["T_WHITESPACE","\n    ",271],"{",["T_WHITESPACE","\n        ",272],["T_SWITCH","switch",273],["T_WHITESPACE"," ",273],"(",["T_STRING","count",273],"(",["T_VARIABLE","$args",273],")",")",["T_WHITESPACE"," ",273],"{",["T_WHITESPACE","\n            ",273],["T_CASE","case",274],["T_WHITESPACE"," ",274],["T_LNUMBER","0",274],":",["T_WHITESPACE","\n                ",274],["T_RETURN","return",275],["T_WHITESPACE"," ",275],["T_VARIABLE","$this",275],["T_OBJECT_OPERATOR","->",275],["T_STRING","_build",275],"(",["T_VARIABLE","$name",275],")",";",["T_WHITESPACE","\n            ",275],["T_CASE","case",276],["T_WHITESPACE"," ",276],["T_LNUMBER","1",276],":",["T_WHITESPACE","\n                ",276],["T_RETURN","return",277],["T_WHITESPACE"," ",277],["T_VARIABLE","$this",277],["T_OBJECT_OPERATOR","->",277],["T_STRING","_build",277],"(",["T_VARIABLE","$name",277],",",["T_WHITESPACE"," ",277],["T_VARIABLE","$args",277],"[",["T_LNUMBER","0",277],"]",")",";",["T_WHITESPACE","\n            ",277],["T_CASE","case",278],["T_WHITESPACE"," ",278],["T_LNUMBER","2",278],":",["T_WHITESPACE","\n                ",278],["T_RETURN","return",279],["T_WHITESPACE"," ",279],["T_VARIABLE","$this",279],["T_OBJECT_OPERATOR","->",279],["T_STRING","_build",279],"(",["T_VARIABLE","$name",279],",",["T_WHITESPACE"," ",279],["T_VARIABLE","$args",279],"[",["T_LNUMBER","0",279],"]",",",["T_WHITESPACE"," ",279],["T_VARIABLE","$args",279],"[",["T_LNUMBER","1",279],"]",")",";",["T_WHITESPACE","\n            ",279],["T_DEFAULT","default",280],":",["T_WHITESPACE","\n                ",280],["T_RETURN","return",281],["T_WHITESPACE"," ",281],["T_VARIABLE","$this",281],["T_OBJECT_OPERATOR","->",281],["T_STRING","_build",281],"(",["T_VARIABLE","$name",281],",",["T_WHITESPACE"," ",281],["T_VARIABLE","$args",281],"[",["T_LNUMBER","0",281],"]",",",["T_WHITESPACE"," ",281],["T_VARIABLE","$args",281],"[",["T_LNUMBER","1",281],"]",",",["T_WHITESPACE"," ",281],["T_VARIABLE","$args",281],"[",["T_LNUMBER","2",281],"]",")",";",["T_WHITESPACE","\n        ",281],"}",["T_WHITESPACE","\n    ",282],"}",["T_WHITESPACE","\n",283],"}",["T_WHITESPACE","\n",284]]