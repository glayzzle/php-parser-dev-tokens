[["T_OPEN_TAG","<?php\n",1],["T_DOC_COMMENT","\/**\n * CakePHP(tm) : Rapid Development Framework (http:\/\/cakephp.org)\n * Copyright (c) Cake Software Foundation, Inc. (http:\/\/cakefoundation.org)\n *\n * Licensed under The MIT License\n * For full copyright and license information, please see the LICENSE.txt\n * Redistributions of files must retain the above copyright notice.\n *\n * @copyright     Copyright (c) Cake Software Foundation, Inc. (http:\/\/cakefoundation.org)\n * @link          http:\/\/cakephp.org CakePHP(tm) Project\n * @since         3.0.0\n * @license       http:\/\/www.opensource.org\/licenses\/mit-license.php MIT License\n *\/",2],["T_WHITESPACE","\n",14],["T_NAMESPACE","namespace",15],["T_WHITESPACE"," ",15],["T_STRING","Cake",15],["T_NS_SEPARATOR","\\",15],["T_STRING","Database",15],["T_NS_SEPARATOR","\\",15],["T_STRING","Log",15],";",["T_WHITESPACE","\n\n",15],["T_USE","use",17],["T_WHITESPACE"," ",17],["T_STRING","Cake",17],["T_NS_SEPARATOR","\\",17],["T_STRING","Log",17],["T_NS_SEPARATOR","\\",17],["T_STRING","Log",17],";",["T_WHITESPACE","\n\n",17],["T_DOC_COMMENT","\/**\n * This class is a bridge used to write LoggedQuery objects into a real log.\n * by default this class use the built-in CakePHP Log class to accomplish this\n *\n * @internal\n *\/",19],["T_WHITESPACE","\n",24],["T_CLASS","class",25],["T_WHITESPACE"," ",25],["T_STRING","QueryLogger",25],["T_WHITESPACE","\n",25],"{",["T_WHITESPACE","\n\n    ",26],["T_DOC_COMMENT","\/**\n     * Writes a LoggedQuery into a log\n     *\n     * @param \\Cake\\Database\\Log\\LoggedQuery $query to be written in log\n     * @return void\n     *\/",28],["T_WHITESPACE","\n    ",33],["T_PUBLIC","public",34],["T_WHITESPACE"," ",34],["T_FUNCTION","function",34],["T_WHITESPACE"," ",34],["T_STRING","log",34],"(",["T_STRING","LoggedQuery",34],["T_WHITESPACE"," ",34],["T_VARIABLE","$query",34],")",["T_WHITESPACE","\n    ",34],"{",["T_WHITESPACE","\n        ",35],["T_IF","if",36],["T_WHITESPACE"," ",36],"(","!",["T_EMPTY","empty",36],"(",["T_VARIABLE","$query",36],["T_OBJECT_OPERATOR","->",36],["T_STRING","params",36],")",")",["T_WHITESPACE"," ",36],"{",["T_WHITESPACE","\n            ",36],["T_VARIABLE","$query",37],["T_OBJECT_OPERATOR","->",37],["T_STRING","query",37],["T_WHITESPACE"," ",37],"=",["T_WHITESPACE"," ",37],["T_VARIABLE","$this",37],["T_OBJECT_OPERATOR","->",37],["T_STRING","_interpolate",37],"(",["T_VARIABLE","$query",37],")",";",["T_WHITESPACE","\n        ",37],"}",["T_WHITESPACE","\n        ",38],["T_VARIABLE","$this",39],["T_OBJECT_OPERATOR","->",39],["T_STRING","_log",39],"(",["T_VARIABLE","$query",39],")",";",["T_WHITESPACE","\n    ",39],"}",["T_WHITESPACE","\n\n    ",40],["T_DOC_COMMENT","\/**\n     * Wrapper function for the logger object, useful for unit testing\n     * or for overriding in subclasses.\n     *\n     * @param \\Cake\\Database\\Log\\LoggedQuery $query to be written in log\n     * @return void\n     *\/",42],["T_WHITESPACE","\n    ",48],["T_PROTECTED","protected",49],["T_WHITESPACE"," ",49],["T_FUNCTION","function",49],["T_WHITESPACE"," ",49],["T_STRING","_log",49],"(",["T_VARIABLE","$query",49],")",["T_WHITESPACE","\n    ",49],"{",["T_WHITESPACE","\n        ",50],["T_STRING","Log",51],["T_DOUBLE_COLON","::",51],["T_STRING","write",51],"(",["T_CONSTANT_ENCAPSED_STRING","'debug'",51],",",["T_WHITESPACE"," ",51],["T_VARIABLE","$query",51],",",["T_WHITESPACE"," ",51],"[",["T_CONSTANT_ENCAPSED_STRING","'queriesLog'",51],"]",")",";",["T_WHITESPACE","\n    ",51],"}",["T_WHITESPACE","\n\n    ",52],["T_DOC_COMMENT","\/**\n     * Helper function used to replace query placeholders by the real\n     * params used to execute the query\n     *\n     * @param \\Cake\\Database\\Log\\LoggedQuery $query The query to log\n     * @return string\n     *\/",54],["T_WHITESPACE","\n    ",60],["T_PROTECTED","protected",61],["T_WHITESPACE"," ",61],["T_FUNCTION","function",61],["T_WHITESPACE"," ",61],["T_STRING","_interpolate",61],"(",["T_VARIABLE","$query",61],")",["T_WHITESPACE","\n    ",61],"{",["T_WHITESPACE","\n        ",62],["T_VARIABLE","$params",63],["T_WHITESPACE"," ",63],"=",["T_WHITESPACE"," ",63],["T_STRING","array_map",63],"(",["T_FUNCTION","function",63],["T_WHITESPACE"," ",63],"(",["T_VARIABLE","$p",63],")",["T_WHITESPACE"," ",63],"{",["T_WHITESPACE","\n            ",63],["T_IF","if",64],["T_WHITESPACE"," ",64],"(",["T_VARIABLE","$p",64],["T_WHITESPACE"," ",64],["T_IS_IDENTICAL","===",64],["T_WHITESPACE"," ",64],["T_STRING","null",64],")",["T_WHITESPACE"," ",64],"{",["T_WHITESPACE","\n                ",64],["T_RETURN","return",65],["T_WHITESPACE"," ",65],["T_CONSTANT_ENCAPSED_STRING","'NULL'",65],";",["T_WHITESPACE","\n            ",65],"}",["T_WHITESPACE","\n            ",66],["T_IF","if",67],["T_WHITESPACE"," ",67],"(",["T_STRING","is_bool",67],"(",["T_VARIABLE","$p",67],")",")",["T_WHITESPACE"," ",67],"{",["T_WHITESPACE","\n                ",67],["T_RETURN","return",68],["T_WHITESPACE"," ",68],["T_VARIABLE","$p",68],["T_WHITESPACE"," ",68],"?",["T_WHITESPACE"," ",68],["T_CONSTANT_ENCAPSED_STRING","'1'",68],["T_WHITESPACE"," ",68],":",["T_WHITESPACE"," ",68],["T_CONSTANT_ENCAPSED_STRING","'0'",68],";",["T_WHITESPACE","\n            ",68],"}",["T_WHITESPACE","\n\n            ",69],["T_RETURN","return",71],["T_WHITESPACE"," ",71],["T_STRING","is_string",71],"(",["T_VARIABLE","$p",71],")",["T_WHITESPACE"," ",71],"?",["T_WHITESPACE"," ",71],"\"",["T_ENCAPSED_AND_WHITESPACE","'",71],["T_VARIABLE","$p",71],["T_ENCAPSED_AND_WHITESPACE","'",71],"\"",["T_WHITESPACE"," ",71],":",["T_WHITESPACE"," ",71],["T_VARIABLE","$p",71],";",["T_WHITESPACE","\n        ",71],"}",",",["T_WHITESPACE"," ",72],["T_VARIABLE","$query",72],["T_OBJECT_OPERATOR","->",72],["T_STRING","params",72],")",";",["T_WHITESPACE","\n\n        ",72],["T_VARIABLE","$keys",74],["T_WHITESPACE"," ",74],"=",["T_WHITESPACE"," ",74],"[","]",";",["T_WHITESPACE","\n        ",74],["T_VARIABLE","$limit",75],["T_WHITESPACE"," ",75],"=",["T_WHITESPACE"," ",75],["T_STRING","is_int",75],"(",["T_STRING","key",75],"(",["T_VARIABLE","$params",75],")",")",["T_WHITESPACE"," ",75],"?",["T_WHITESPACE"," ",75],["T_LNUMBER","1",75],["T_WHITESPACE"," ",75],":",["T_WHITESPACE"," ",75],"-",["T_LNUMBER","1",75],";",["T_WHITESPACE","\n        ",75],["T_FOREACH","foreach",76],["T_WHITESPACE"," ",76],"(",["T_VARIABLE","$params",76],["T_WHITESPACE"," ",76],["T_AS","as",76],["T_WHITESPACE"," ",76],["T_VARIABLE","$key",76],["T_WHITESPACE"," ",76],["T_DOUBLE_ARROW","=>",76],["T_WHITESPACE"," ",76],["T_VARIABLE","$param",76],")",["T_WHITESPACE"," ",76],"{",["T_WHITESPACE","\n            ",76],["T_VARIABLE","$keys",77],"[","]",["T_WHITESPACE"," ",77],"=",["T_WHITESPACE"," ",77],["T_STRING","is_string",77],"(",["T_VARIABLE","$key",77],")",["T_WHITESPACE"," ",77],"?",["T_WHITESPACE"," ",77],"\"",["T_ENCAPSED_AND_WHITESPACE","\/:",77],["T_VARIABLE","$key",77],["T_ENCAPSED_AND_WHITESPACE","\\b\/",77],"\"",["T_WHITESPACE"," ",77],":",["T_WHITESPACE"," ",77],["T_CONSTANT_ENCAPSED_STRING","'\/[?]\/'",77],";",["T_WHITESPACE","\n        ",77],"}",["T_WHITESPACE","\n\n        ",78],["T_RETURN","return",80],["T_WHITESPACE"," ",80],["T_STRING","preg_replace",80],"(",["T_VARIABLE","$keys",80],",",["T_WHITESPACE"," ",80],["T_VARIABLE","$params",80],",",["T_WHITESPACE"," ",80],["T_VARIABLE","$query",80],["T_OBJECT_OPERATOR","->",80],["T_STRING","query",80],",",["T_WHITESPACE"," ",80],["T_VARIABLE","$limit",80],")",";",["T_WHITESPACE","\n    ",80],"}",["T_WHITESPACE","\n",81],"}",["T_WHITESPACE","\n",82]]