[["T_OPEN_TAG","<?php\n",1],["T_DOC_COMMENT","\/**\n * CakePHP(tm) : Rapid Development Framework (http:\/\/cakephp.org)\n * Copyright (c) Cake Software Foundation, Inc. (http:\/\/cakefoundation.org)\n *\n * Licensed under The MIT License\n * For full copyright and license information, please see the LICENSE.txt\n * Redistributions of files must retain the above copyright notice.\n *\n * @copyright     Copyright (c) Cake Software Foundation, Inc. (http:\/\/cakefoundation.org)\n * @link          http:\/\/cakephp.org CakePHP(tm) Project\n * @since         3.0.0\n * @license       http:\/\/www.opensource.org\/licenses\/mit-license.php MIT License\n *\/",2],["T_WHITESPACE","\n",14],["T_NAMESPACE","namespace",15],["T_WHITESPACE"," ",15],["T_STRING","Cake",15],["T_NS_SEPARATOR","\\",15],["T_STRING","Database",15],["T_NS_SEPARATOR","\\",15],["T_STRING","Schema",15],";",["T_WHITESPACE","\n\n",15],["T_USE","use",17],["T_WHITESPACE"," ",17],["T_STRING","Cake",17],["T_NS_SEPARATOR","\\",17],["T_STRING","Database",17],["T_NS_SEPARATOR","\\",17],["T_STRING","Driver",17],";",["T_WHITESPACE","\n\n",17],["T_DOC_COMMENT","\/**\n * Base class for schema implementations.\n *\n * This class contains methods that are common across\n * the various SQL dialects.\n *\/",19],["T_WHITESPACE","\n",24],["T_ABSTRACT","abstract",25],["T_WHITESPACE"," ",25],["T_CLASS","class",25],["T_WHITESPACE"," ",25],["T_STRING","BaseSchema",25],["T_WHITESPACE","\n",25],"{",["T_WHITESPACE","\n\n    ",26],["T_DOC_COMMENT","\/**\n     * The driver instance being used.\n     *\n     * @var \\Cake\\Database\\Driver\n     *\/",28],["T_WHITESPACE","\n    ",32],["T_PROTECTED","protected",33],["T_WHITESPACE"," ",33],["T_VARIABLE","$_driver",33],";",["T_WHITESPACE","\n\n    ",33],["T_DOC_COMMENT","\/**\n     * Constructor\n     *\n     * This constructor will connect the driver so that methods like columnSql() and others\n     * will fail when the driver has not been connected.\n     *\n     * @param \\Cake\\Database\\Driver $driver The driver to use.\n     *\/",35],["T_WHITESPACE","\n    ",42],["T_PUBLIC","public",43],["T_WHITESPACE"," ",43],["T_FUNCTION","function",43],["T_WHITESPACE"," ",43],["T_STRING","__construct",43],"(",["T_STRING","Driver",43],["T_WHITESPACE"," ",43],["T_VARIABLE","$driver",43],")",["T_WHITESPACE","\n    ",43],"{",["T_WHITESPACE","\n        ",44],["T_VARIABLE","$driver",45],["T_OBJECT_OPERATOR","->",45],["T_STRING","connect",45],"(",")",";",["T_WHITESPACE","\n        ",45],["T_VARIABLE","$this",46],["T_OBJECT_OPERATOR","->",46],["T_STRING","_driver",46],["T_WHITESPACE"," ",46],"=",["T_WHITESPACE"," ",46],["T_VARIABLE","$driver",46],";",["T_WHITESPACE","\n    ",46],"}",["T_WHITESPACE","\n\n    ",47],["T_DOC_COMMENT","\/**\n     * Generate an ON clause for a foreign key.\n     *\n     * @param string|null $on The on clause\n     * @return string\n     *\/",49],["T_WHITESPACE","\n    ",54],["T_PROTECTED","protected",55],["T_WHITESPACE"," ",55],["T_FUNCTION","function",55],["T_WHITESPACE"," ",55],["T_STRING","_foreignOnClause",55],"(",["T_VARIABLE","$on",55],")",["T_WHITESPACE","\n    ",55],"{",["T_WHITESPACE","\n        ",56],["T_IF","if",57],["T_WHITESPACE"," ",57],"(",["T_VARIABLE","$on",57],["T_WHITESPACE"," ",57],["T_IS_IDENTICAL","===",57],["T_WHITESPACE"," ",57],["T_STRING","Table",57],["T_DOUBLE_COLON","::",57],["T_STRING","ACTION_SET_NULL",57],")",["T_WHITESPACE"," ",57],"{",["T_WHITESPACE","\n            ",57],["T_RETURN","return",58],["T_WHITESPACE"," ",58],["T_CONSTANT_ENCAPSED_STRING","'SET NULL'",58],";",["T_WHITESPACE","\n        ",58],"}",["T_WHITESPACE","\n        ",59],["T_IF","if",60],["T_WHITESPACE"," ",60],"(",["T_VARIABLE","$on",60],["T_WHITESPACE"," ",60],["T_IS_IDENTICAL","===",60],["T_WHITESPACE"," ",60],["T_STRING","Table",60],["T_DOUBLE_COLON","::",60],["T_STRING","ACTION_SET_DEFAULT",60],")",["T_WHITESPACE"," ",60],"{",["T_WHITESPACE","\n            ",60],["T_RETURN","return",61],["T_WHITESPACE"," ",61],["T_CONSTANT_ENCAPSED_STRING","'SET DEFAULT'",61],";",["T_WHITESPACE","\n        ",61],"}",["T_WHITESPACE","\n        ",62],["T_IF","if",63],["T_WHITESPACE"," ",63],"(",["T_VARIABLE","$on",63],["T_WHITESPACE"," ",63],["T_IS_IDENTICAL","===",63],["T_WHITESPACE"," ",63],["T_STRING","Table",63],["T_DOUBLE_COLON","::",63],["T_STRING","ACTION_CASCADE",63],")",["T_WHITESPACE"," ",63],"{",["T_WHITESPACE","\n            ",63],["T_RETURN","return",64],["T_WHITESPACE"," ",64],["T_CONSTANT_ENCAPSED_STRING","'CASCADE'",64],";",["T_WHITESPACE","\n        ",64],"}",["T_WHITESPACE","\n        ",65],["T_IF","if",66],["T_WHITESPACE"," ",66],"(",["T_VARIABLE","$on",66],["T_WHITESPACE"," ",66],["T_IS_IDENTICAL","===",66],["T_WHITESPACE"," ",66],["T_STRING","Table",66],["T_DOUBLE_COLON","::",66],["T_STRING","ACTION_RESTRICT",66],")",["T_WHITESPACE"," ",66],"{",["T_WHITESPACE","\n            ",66],["T_RETURN","return",67],["T_WHITESPACE"," ",67],["T_CONSTANT_ENCAPSED_STRING","'RESTRICT'",67],";",["T_WHITESPACE","\n        ",67],"}",["T_WHITESPACE","\n        ",68],["T_IF","if",69],["T_WHITESPACE"," ",69],"(",["T_VARIABLE","$on",69],["T_WHITESPACE"," ",69],["T_IS_IDENTICAL","===",69],["T_WHITESPACE"," ",69],["T_STRING","Table",69],["T_DOUBLE_COLON","::",69],["T_STRING","ACTION_NO_ACTION",69],")",["T_WHITESPACE"," ",69],"{",["T_WHITESPACE","\n            ",69],["T_RETURN","return",70],["T_WHITESPACE"," ",70],["T_CONSTANT_ENCAPSED_STRING","'NO ACTION'",70],";",["T_WHITESPACE","\n        ",70],"}",["T_WHITESPACE","\n    ",71],"}",["T_WHITESPACE","\n\n    ",72],["T_DOC_COMMENT","\/**\n     * Convert string on clauses to the abstract ones.\n     *\n     * @param string $clause The on clause to convert.\n     * @return string|null\n     *\/",74],["T_WHITESPACE","\n    ",79],["T_PROTECTED","protected",80],["T_WHITESPACE"," ",80],["T_FUNCTION","function",80],["T_WHITESPACE"," ",80],["T_STRING","_convertOnClause",80],"(",["T_VARIABLE","$clause",80],")",["T_WHITESPACE","\n    ",80],"{",["T_WHITESPACE","\n        ",81],["T_IF","if",82],["T_WHITESPACE"," ",82],"(",["T_VARIABLE","$clause",82],["T_WHITESPACE"," ",82],["T_IS_IDENTICAL","===",82],["T_WHITESPACE"," ",82],["T_CONSTANT_ENCAPSED_STRING","'CASCADE'",82],["T_WHITESPACE"," ",82],["T_BOOLEAN_OR","||",82],["T_WHITESPACE"," ",82],["T_VARIABLE","$clause",82],["T_WHITESPACE"," ",82],["T_IS_IDENTICAL","===",82],["T_WHITESPACE"," ",82],["T_CONSTANT_ENCAPSED_STRING","'RESTRICT'",82],")",["T_WHITESPACE"," ",82],"{",["T_WHITESPACE","\n            ",82],["T_RETURN","return",83],["T_WHITESPACE"," ",83],["T_STRING","strtolower",83],"(",["T_VARIABLE","$clause",83],")",";",["T_WHITESPACE","\n        ",83],"}",["T_WHITESPACE","\n        ",84],["T_IF","if",85],["T_WHITESPACE"," ",85],"(",["T_VARIABLE","$clause",85],["T_WHITESPACE"," ",85],["T_IS_IDENTICAL","===",85],["T_WHITESPACE"," ",85],["T_CONSTANT_ENCAPSED_STRING","'NO ACTION'",85],")",["T_WHITESPACE"," ",85],"{",["T_WHITESPACE","\n            ",85],["T_RETURN","return",86],["T_WHITESPACE"," ",86],["T_STRING","Table",86],["T_DOUBLE_COLON","::",86],["T_STRING","ACTION_NO_ACTION",86],";",["T_WHITESPACE","\n        ",86],"}",["T_WHITESPACE","\n\n        ",87],["T_RETURN","return",89],["T_WHITESPACE"," ",89],["T_STRING","Table",89],["T_DOUBLE_COLON","::",89],["T_STRING","ACTION_SET_NULL",89],";",["T_WHITESPACE","\n    ",89],"}",["T_WHITESPACE","\n\n    ",90],["T_DOC_COMMENT","\/**\n     * Convert foreign key constraints references to a valid\n     * stringified list\n     *\n     * @param string|array $references The referenced columns of a foreign key constraint statement\n     * @return string\n     *\/",92],["T_WHITESPACE","\n    ",98],["T_PROTECTED","protected",99],["T_WHITESPACE"," ",99],["T_FUNCTION","function",99],["T_WHITESPACE"," ",99],["T_STRING","_convertConstraintColumns",99],"(",["T_VARIABLE","$references",99],")",["T_WHITESPACE","\n    ",99],"{",["T_WHITESPACE","\n        ",100],["T_IF","if",101],["T_WHITESPACE"," ",101],"(",["T_STRING","is_string",101],"(",["T_VARIABLE","$references",101],")",")",["T_WHITESPACE"," ",101],"{",["T_WHITESPACE","\n            ",101],["T_RETURN","return",102],["T_WHITESPACE"," ",102],["T_VARIABLE","$this",102],["T_OBJECT_OPERATOR","->",102],["T_STRING","_driver",102],["T_OBJECT_OPERATOR","->",102],["T_STRING","quoteIdentifier",102],"(",["T_VARIABLE","$references",102],")",";",["T_WHITESPACE","\n        ",102],"}",["T_WHITESPACE","\n\n        ",103],["T_RETURN","return",105],["T_WHITESPACE"," ",105],["T_STRING","implode",105],"(",["T_CONSTANT_ENCAPSED_STRING","', '",105],",",["T_WHITESPACE"," ",105],["T_STRING","array_map",105],"(",["T_WHITESPACE","\n            ",105],"[",["T_VARIABLE","$this",106],["T_OBJECT_OPERATOR","->",106],["T_STRING","_driver",106],",",["T_WHITESPACE"," ",106],["T_CONSTANT_ENCAPSED_STRING","'quoteIdentifier'",106],"]",",",["T_WHITESPACE","\n            ",106],["T_VARIABLE","$references",107],["T_WHITESPACE","\n        ",107],")",")",";",["T_WHITESPACE","\n    ",108],"}",["T_WHITESPACE","\n\n    ",109],["T_DOC_COMMENT","\/**\n     * Generate the SQL to drop a table.\n     *\n     * @param \\Cake\\Database\\Schema\\Table $table Table instance\n     * @return array SQL statements to drop a table.\n     *\/",111],["T_WHITESPACE","\n    ",116],["T_PUBLIC","public",117],["T_WHITESPACE"," ",117],["T_FUNCTION","function",117],["T_WHITESPACE"," ",117],["T_STRING","dropTableSql",117],"(",["T_STRING","Table",117],["T_WHITESPACE"," ",117],["T_VARIABLE","$table",117],")",["T_WHITESPACE","\n    ",117],"{",["T_WHITESPACE","\n        ",118],["T_VARIABLE","$sql",119],["T_WHITESPACE"," ",119],"=",["T_WHITESPACE"," ",119],["T_STRING","sprintf",119],"(",["T_WHITESPACE","\n            ",119],["T_CONSTANT_ENCAPSED_STRING","'DROP TABLE %s'",120],",",["T_WHITESPACE","\n            ",120],["T_VARIABLE","$this",121],["T_OBJECT_OPERATOR","->",121],["T_STRING","_driver",121],["T_OBJECT_OPERATOR","->",121],["T_STRING","quoteIdentifier",121],"(",["T_VARIABLE","$table",121],["T_OBJECT_OPERATOR","->",121],["T_STRING","name",121],"(",")",")",["T_WHITESPACE","\n        ",121],")",";",["T_WHITESPACE","\n\n        ",122],["T_RETURN","return",124],["T_WHITESPACE"," ",124],"[",["T_VARIABLE","$sql",124],"]",";",["T_WHITESPACE","\n    ",124],"}",["T_WHITESPACE","\n\n    ",125],["T_DOC_COMMENT","\/**\n     * Generate the SQL to list the tables.\n     *\n     * @param array $config The connection configuration to use for\n     *    getting tables from.\n     * @return array An array of (sql, params) to execute.\n     *\/",127],["T_WHITESPACE","\n    ",133],["T_ABSTRACT","abstract",134],["T_WHITESPACE"," ",134],["T_PUBLIC","public",134],["T_WHITESPACE"," ",134],["T_FUNCTION","function",134],["T_WHITESPACE"," ",134],["T_STRING","listTablesSql",134],"(",["T_VARIABLE","$config",134],")",";",["T_WHITESPACE","\n\n    ",134],["T_DOC_COMMENT","\/**\n     * Generate the SQL to describe a table.\n     *\n     * @param string $tableName The table name to get information on.\n     * @param array $config The connection configuration.\n     * @return array An array of (sql, params) to execute.\n     *\/",136],["T_WHITESPACE","\n    ",142],["T_ABSTRACT","abstract",143],["T_WHITESPACE"," ",143],["T_PUBLIC","public",143],["T_WHITESPACE"," ",143],["T_FUNCTION","function",143],["T_WHITESPACE"," ",143],["T_STRING","describeColumnSql",143],"(",["T_VARIABLE","$tableName",143],",",["T_WHITESPACE"," ",143],["T_VARIABLE","$config",143],")",";",["T_WHITESPACE","\n\n    ",143],["T_DOC_COMMENT","\/**\n     * Generate the SQL to describe the indexes in a table.\n     *\n     * @param string $tableName The table name to get information on.\n     * @param array $config The connection configuration.\n     * @return array An array of (sql, params) to execute.\n     *\/",145],["T_WHITESPACE","\n    ",151],["T_ABSTRACT","abstract",152],["T_WHITESPACE"," ",152],["T_PUBLIC","public",152],["T_WHITESPACE"," ",152],["T_FUNCTION","function",152],["T_WHITESPACE"," ",152],["T_STRING","describeIndexSql",152],"(",["T_VARIABLE","$tableName",152],",",["T_WHITESPACE"," ",152],["T_VARIABLE","$config",152],")",";",["T_WHITESPACE","\n\n    ",152],["T_DOC_COMMENT","\/**\n     * Generate the SQL to describe the foreign keys in a table.\n     *\n     * @param string $tableName The table name to get information on.\n     * @param array $config The connection configuration.\n     * @return array An array of (sql, params) to execute.\n     *\/",154],["T_WHITESPACE","\n    ",160],["T_ABSTRACT","abstract",161],["T_WHITESPACE"," ",161],["T_PUBLIC","public",161],["T_WHITESPACE"," ",161],["T_FUNCTION","function",161],["T_WHITESPACE"," ",161],["T_STRING","describeForeignKeySql",161],"(",["T_VARIABLE","$tableName",161],",",["T_WHITESPACE"," ",161],["T_VARIABLE","$config",161],")",";",["T_WHITESPACE","\n\n    ",161],["T_DOC_COMMENT","\/**\n     * Generate the SQL to describe table options\n     *\n     * @param string $tableName Table name.\n     * @param array $config The connection configuration.\n     * @return array SQL statements to get options for a table.\n     *\/",163],["T_WHITESPACE","\n    ",169],["T_PUBLIC","public",170],["T_WHITESPACE"," ",170],["T_FUNCTION","function",170],["T_WHITESPACE"," ",170],["T_STRING","describeOptionsSql",170],"(",["T_VARIABLE","$tableName",170],",",["T_WHITESPACE"," ",170],["T_VARIABLE","$config",170],")",["T_WHITESPACE","\n    ",170],"{",["T_WHITESPACE","\n        ",171],["T_RETURN","return",172],["T_WHITESPACE"," ",172],"[",["T_CONSTANT_ENCAPSED_STRING","''",172],",",["T_WHITESPACE"," ",172],["T_CONSTANT_ENCAPSED_STRING","''",172],"]",";",["T_WHITESPACE","\n    ",172],"}",["T_WHITESPACE","\n\n    ",173],["T_DOC_COMMENT","\/**\n     * Convert field description results into abstract schema fields.\n     *\n     * @param \\Cake\\Database\\Schema\\Table $table The table object to append fields to.\n     * @param array $row The row data from `describeColumnSql`.\n     * @return void\n     *\/",175],["T_WHITESPACE","\n    ",181],["T_ABSTRACT","abstract",182],["T_WHITESPACE"," ",182],["T_PUBLIC","public",182],["T_WHITESPACE"," ",182],["T_FUNCTION","function",182],["T_WHITESPACE"," ",182],["T_STRING","convertColumnDescription",182],"(",["T_STRING","Table",182],["T_WHITESPACE"," ",182],["T_VARIABLE","$table",182],",",["T_WHITESPACE"," ",182],["T_VARIABLE","$row",182],")",";",["T_WHITESPACE","\n\n    ",182],["T_DOC_COMMENT","\/**\n     * Convert an index description results into abstract schema indexes or constraints.\n     *\n     * @param \\Cake\\Database\\Schema\\Table $table The table object to append\n     *    an index or constraint to.\n     * @param array $row The row data from `describeIndexSql`.\n     * @return void\n     *\/",184],["T_WHITESPACE","\n    ",191],["T_ABSTRACT","abstract",192],["T_WHITESPACE"," ",192],["T_PUBLIC","public",192],["T_WHITESPACE"," ",192],["T_FUNCTION","function",192],["T_WHITESPACE"," ",192],["T_STRING","convertIndexDescription",192],"(",["T_STRING","Table",192],["T_WHITESPACE"," ",192],["T_VARIABLE","$table",192],",",["T_WHITESPACE"," ",192],["T_VARIABLE","$row",192],")",";",["T_WHITESPACE","\n\n    ",192],["T_DOC_COMMENT","\/**\n     * Convert a foreign key description into constraints on the Table object.\n     *\n     * @param \\Cake\\Database\\Schema\\Table $table The table object to append\n     *    a constraint to.\n     * @param array $row The row data from `describeForeignKeySql`.\n     * @return void\n     *\/",194],["T_WHITESPACE","\n    ",201],["T_ABSTRACT","abstract",202],["T_WHITESPACE"," ",202],["T_PUBLIC","public",202],["T_WHITESPACE"," ",202],["T_FUNCTION","function",202],["T_WHITESPACE"," ",202],["T_STRING","convertForeignKeyDescription",202],"(",["T_STRING","Table",202],["T_WHITESPACE"," ",202],["T_VARIABLE","$table",202],",",["T_WHITESPACE"," ",202],["T_VARIABLE","$row",202],")",";",["T_WHITESPACE","\n\n    ",202],["T_DOC_COMMENT","\/**\n     * Convert options data into table options.\n     *\n     * @param \\Cake\\Database\\Schema\\Table $table Table instance.\n     * @param array $row The row of data.\n     * @return void\n     *\/",204],["T_WHITESPACE","\n    ",210],["T_PUBLIC","public",211],["T_WHITESPACE"," ",211],["T_FUNCTION","function",211],["T_WHITESPACE"," ",211],["T_STRING","convertOptionsDescription",211],"(",["T_STRING","Table",211],["T_WHITESPACE"," ",211],["T_VARIABLE","$table",211],",",["T_WHITESPACE"," ",211],["T_VARIABLE","$row",211],")",["T_WHITESPACE","\n    ",211],"{",["T_WHITESPACE","\n    ",212],"}",["T_WHITESPACE","\n\n    ",213],["T_DOC_COMMENT","\/**\n     * Generate the SQL to create a table.\n     *\n     * @param \\Cake\\Database\\Schema\\Table $table Table instance.\n     * @param array $columns The columns to go inside the table.\n     * @param array $constraints The constraints for the table.\n     * @param array $indexes The indexes for the table.\n     * @return array SQL statements to create a table.\n     *\/",215],["T_WHITESPACE","\n    ",223],["T_ABSTRACT","abstract",224],["T_WHITESPACE"," ",224],["T_PUBLIC","public",224],["T_WHITESPACE"," ",224],["T_FUNCTION","function",224],["T_WHITESPACE"," ",224],["T_STRING","createTableSql",224],"(",["T_STRING","Table",224],["T_WHITESPACE"," ",224],["T_VARIABLE","$table",224],",",["T_WHITESPACE"," ",224],["T_VARIABLE","$columns",224],",",["T_WHITESPACE"," ",224],["T_VARIABLE","$constraints",224],",",["T_WHITESPACE"," ",224],["T_VARIABLE","$indexes",224],")",";",["T_WHITESPACE","\n\n    ",224],["T_DOC_COMMENT","\/**\n     * Generate the SQL fragment for a single column in a table.\n     *\n     * @param \\Cake\\Database\\Schema\\Table $table The table instance the column is in.\n     * @param string $name The name of the column.\n     * @return string SQL fragment.\n     *\/",226],["T_WHITESPACE","\n    ",232],["T_ABSTRACT","abstract",233],["T_WHITESPACE"," ",233],["T_PUBLIC","public",233],["T_WHITESPACE"," ",233],["T_FUNCTION","function",233],["T_WHITESPACE"," ",233],["T_STRING","columnSql",233],"(",["T_STRING","Table",233],["T_WHITESPACE"," ",233],["T_VARIABLE","$table",233],",",["T_WHITESPACE"," ",233],["T_VARIABLE","$name",233],")",";",["T_WHITESPACE","\n\n    ",233],["T_DOC_COMMENT","\/**\n     * Generate the SQL queries needed to add foreign key constraints to the table\n     *\n     * @param \\Cake\\Database\\Schema\\Table $table The table instance the foreign key constraints are.\n     * @return array SQL fragment.\n     *\/",235],["T_WHITESPACE","\n    ",240],["T_ABSTRACT","abstract",241],["T_WHITESPACE"," ",241],["T_PUBLIC","public",241],["T_WHITESPACE"," ",241],["T_FUNCTION","function",241],["T_WHITESPACE"," ",241],["T_STRING","addConstraintSql",241],"(",["T_STRING","Table",241],["T_WHITESPACE"," ",241],["T_VARIABLE","$table",241],")",";",["T_WHITESPACE","\n\n    ",241],["T_DOC_COMMENT","\/**\n     * Generate the SQL queries needed to drop foreign key constraints from the table\n     *\n     * @param \\Cake\\Database\\Schema\\Table $table The table instance the foreign key constraints are.\n     * @return array SQL fragment.\n     *\/",243],["T_WHITESPACE","\n    ",248],["T_ABSTRACT","abstract",249],["T_WHITESPACE"," ",249],["T_PUBLIC","public",249],["T_WHITESPACE"," ",249],["T_FUNCTION","function",249],["T_WHITESPACE"," ",249],["T_STRING","dropConstraintSql",249],"(",["T_STRING","Table",249],["T_WHITESPACE"," ",249],["T_VARIABLE","$table",249],")",";",["T_WHITESPACE","\n\n    ",249],["T_DOC_COMMENT","\/**\n     * Generate the SQL fragments for defining table constraints.\n     *\n     * @param \\Cake\\Database\\Schema\\Table $table The table instance the column is in.\n     * @param string $name The name of the column.\n     * @return string SQL fragment.\n     *\/",251],["T_WHITESPACE","\n    ",257],["T_ABSTRACT","abstract",258],["T_WHITESPACE"," ",258],["T_PUBLIC","public",258],["T_WHITESPACE"," ",258],["T_FUNCTION","function",258],["T_WHITESPACE"," ",258],["T_STRING","constraintSql",258],"(",["T_STRING","Table",258],["T_WHITESPACE"," ",258],["T_VARIABLE","$table",258],",",["T_WHITESPACE"," ",258],["T_VARIABLE","$name",258],")",";",["T_WHITESPACE","\n\n    ",258],["T_DOC_COMMENT","\/**\n     * Generate the SQL fragment for a single index in a table.\n     *\n     * @param \\Cake\\Database\\Schema\\Table $table The table object the column is in.\n     * @param string $name The name of the column.\n     * @return string SQL fragment.\n     *\/",260],["T_WHITESPACE","\n    ",266],["T_ABSTRACT","abstract",267],["T_WHITESPACE"," ",267],["T_PUBLIC","public",267],["T_WHITESPACE"," ",267],["T_FUNCTION","function",267],["T_WHITESPACE"," ",267],["T_STRING","indexSql",267],"(",["T_STRING","Table",267],["T_WHITESPACE"," ",267],["T_VARIABLE","$table",267],",",["T_WHITESPACE"," ",267],["T_VARIABLE","$name",267],")",";",["T_WHITESPACE","\n\n    ",267],["T_DOC_COMMENT","\/**\n     * Generate the SQL to truncate a table.\n     *\n     * @param \\Cake\\Database\\Schema\\Table $table Table instance.\n     * @return array SQL statements to truncate a table.\n     *\/",269],["T_WHITESPACE","\n    ",274],["T_ABSTRACT","abstract",275],["T_WHITESPACE"," ",275],["T_PUBLIC","public",275],["T_WHITESPACE"," ",275],["T_FUNCTION","function",275],["T_WHITESPACE"," ",275],["T_STRING","truncateTableSql",275],"(",["T_STRING","Table",275],["T_WHITESPACE"," ",275],["T_VARIABLE","$table",275],")",";",["T_WHITESPACE","\n",275],"}",["T_WHITESPACE","\n",276]]