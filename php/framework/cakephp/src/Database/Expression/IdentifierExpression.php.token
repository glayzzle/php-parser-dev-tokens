[["T_OPEN_TAG","<?php\n",1],["T_DOC_COMMENT","\/**\n * CakePHP(tm) : Rapid Development Framework (http:\/\/cakephp.org)\n * Copyright (c) Cake Software Foundation, Inc. (http:\/\/cakefoundation.org)\n *\n * Licensed under The MIT License\n * For full copyright and license information, please see the LICENSE.txt\n * Redistributions of files must retain the above copyright notice.\n *\n * @copyright     Copyright (c) Cake Software Foundation, Inc. (http:\/\/cakefoundation.org)\n * @link          http:\/\/cakephp.org CakePHP(tm) Project\n * @since         3.0.0\n * @license       http:\/\/www.opensource.org\/licenses\/mit-license.php MIT License\n *\/",2],["T_WHITESPACE","\n",14],["T_NAMESPACE","namespace",15],["T_WHITESPACE"," ",15],["T_STRING","Cake",15],["T_NS_SEPARATOR","\\",15],["T_STRING","Database",15],["T_NS_SEPARATOR","\\",15],["T_STRING","Expression",15],";",["T_WHITESPACE","\n\n",15],["T_USE","use",17],["T_WHITESPACE"," ",17],["T_STRING","Cake",17],["T_NS_SEPARATOR","\\",17],["T_STRING","Database",17],["T_NS_SEPARATOR","\\",17],["T_STRING","ExpressionInterface",17],";",["T_WHITESPACE","\n",17],["T_USE","use",18],["T_WHITESPACE"," ",18],["T_STRING","Cake",18],["T_NS_SEPARATOR","\\",18],["T_STRING","Database",18],["T_NS_SEPARATOR","\\",18],["T_STRING","ValueBinder",18],";",["T_WHITESPACE","\n\n",18],["T_DOC_COMMENT","\/**\n * Represents a single identifier name in the database\n *\n * @internal\n *\/",20],["T_WHITESPACE","\n",24],["T_CLASS","class",25],["T_WHITESPACE"," ",25],["T_STRING","IdentifierExpression",25],["T_WHITESPACE"," ",25],["T_IMPLEMENTS","implements",25],["T_WHITESPACE"," ",25],["T_STRING","ExpressionInterface",25],["T_WHITESPACE","\n",25],"{",["T_WHITESPACE","\n\n    ",26],["T_DOC_COMMENT","\/**\n     * Holds the identifier string\n     *\n     * @var string\n     *\/",28],["T_WHITESPACE","\n    ",32],["T_PROTECTED","protected",33],["T_WHITESPACE"," ",33],["T_VARIABLE","$_identifier",33],";",["T_WHITESPACE","\n\n    ",33],["T_DOC_COMMENT","\/**\n     * Constructor\n     *\n     * @param string $identifier The identifier this expression represents\n     *\/",35],["T_WHITESPACE","\n    ",39],["T_PUBLIC","public",40],["T_WHITESPACE"," ",40],["T_FUNCTION","function",40],["T_WHITESPACE"," ",40],["T_STRING","__construct",40],"(",["T_VARIABLE","$identifier",40],")",["T_WHITESPACE","\n    ",40],"{",["T_WHITESPACE","\n        ",41],["T_VARIABLE","$this",42],["T_OBJECT_OPERATOR","->",42],["T_STRING","_identifier",42],["T_WHITESPACE"," ",42],"=",["T_WHITESPACE"," ",42],["T_VARIABLE","$identifier",42],";",["T_WHITESPACE","\n    ",42],"}",["T_WHITESPACE","\n\n    ",43],["T_DOC_COMMENT","\/**\n     * Sets the identifier this expression represents\n     *\n     * @param string $identifier The identifier\n     * @return void\n     *\/",45],["T_WHITESPACE","\n    ",50],["T_PUBLIC","public",51],["T_WHITESPACE"," ",51],["T_FUNCTION","function",51],["T_WHITESPACE"," ",51],["T_STRING","setIdentifier",51],"(",["T_VARIABLE","$identifier",51],")",["T_WHITESPACE","\n    ",51],"{",["T_WHITESPACE","\n        ",52],["T_VARIABLE","$this",53],["T_OBJECT_OPERATOR","->",53],["T_STRING","_identifier",53],["T_WHITESPACE"," ",53],"=",["T_WHITESPACE"," ",53],["T_VARIABLE","$identifier",53],";",["T_WHITESPACE","\n    ",53],"}",["T_WHITESPACE","\n\n    ",54],["T_DOC_COMMENT","\/**\n     * Returns the identifier this expression represents\n     *\n     * @return string\n     *\/",56],["T_WHITESPACE","\n    ",60],["T_PUBLIC","public",61],["T_WHITESPACE"," ",61],["T_FUNCTION","function",61],["T_WHITESPACE"," ",61],["T_STRING","getIdentifier",61],"(",")",["T_WHITESPACE","\n    ",61],"{",["T_WHITESPACE","\n        ",62],["T_RETURN","return",63],["T_WHITESPACE"," ",63],["T_VARIABLE","$this",63],["T_OBJECT_OPERATOR","->",63],["T_STRING","_identifier",63],";",["T_WHITESPACE","\n    ",63],"}",["T_WHITESPACE","\n\n    ",64],["T_DOC_COMMENT","\/**\n     * Converts the expression to its string representation\n     *\n     * @param \\Cake\\Database\\ValueBinder $generator Placeholder generator object\n     * @return string\n     *\/",66],["T_WHITESPACE","\n    ",71],["T_PUBLIC","public",72],["T_WHITESPACE"," ",72],["T_FUNCTION","function",72],["T_WHITESPACE"," ",72],["T_STRING","sql",72],"(",["T_STRING","ValueBinder",72],["T_WHITESPACE"," ",72],["T_VARIABLE","$generator",72],")",["T_WHITESPACE","\n    ",72],"{",["T_WHITESPACE","\n        ",73],["T_RETURN","return",74],["T_WHITESPACE"," ",74],["T_VARIABLE","$this",74],["T_OBJECT_OPERATOR","->",74],["T_STRING","_identifier",74],";",["T_WHITESPACE","\n    ",74],"}",["T_WHITESPACE","\n\n    ",75],["T_DOC_COMMENT","\/**\n     * This method is a no-op, this is a leaf type of expression,\n     * hence there is nothing to traverse\n     *\n     * @param callable $callable The callable to traverse with.\n     * @return void\n     *\/",77],["T_WHITESPACE","\n    ",83],["T_PUBLIC","public",84],["T_WHITESPACE"," ",84],["T_FUNCTION","function",84],["T_WHITESPACE"," ",84],["T_STRING","traverse",84],"(",["T_CALLABLE","callable",84],["T_WHITESPACE"," ",84],["T_VARIABLE","$callable",84],")",["T_WHITESPACE","\n    ",84],"{",["T_WHITESPACE","\n    ",85],"}",["T_WHITESPACE","\n",86],"}",["T_WHITESPACE","\n",87]]