[["T_OPEN_TAG","<?php\n",1],["T_DOC_COMMENT","\/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n *\/",2],["T_WHITESPACE","\n\n",5],["T_COMMENT","\/\/ @codingStandardsIgnoreFile\n",7],["T_WHITESPACE","\n",8],["T_CLOSE_TAG","?>\n",9],["T_OPEN_TAG","<?php\n",10],["T_DOC_COMMENT","\/**\n * @var $block \\Magento\\Catalog\\Block\\Adminhtml\\Product\\Edit\n *\/",11],["T_WHITESPACE","\n",13],["T_CLOSE_TAG","?>\n",14],["T_INLINE_HTML","<div class=\"admin__scope-old\">\n    <div class=\"product-actions\">\n        <div id=\"product-template-suggest-container\" class=\"suggest-expandable\">\n            <div class=\"action-dropdown\">\n                <button type=\"button\" class=\"action-toggle\" data-mage-init='{\"dropdown\":{}}' data-toggle=\"dropdown\">\n                    <span>",15],["T_OPEN_TAG","<?php ",20],["T_COMMENT","\/* @escapeNotVerified *\/",20],["T_WHITESPACE"," ",20],["T_ECHO","echo",20],["T_WHITESPACE"," ",20],["T_VARIABLE","$block",20],["T_OBJECT_OPERATOR","->",20],["T_STRING","getAttributeSetName",20],"(",")",["T_CLOSE_TAG","?>",20],["T_INLINE_HTML","<\/span>\n                <\/button>\n                <ul class=\"dropdown-menu\">\n                    <li><input type=\"text\" id=\"product-template-suggest\" class=\"search\"\n                           placeholder=\"",20],["T_OPEN_TAG","<?php ",24],["T_COMMENT","\/* @noEscape *\/",24],["T_WHITESPACE"," ",24],["T_ECHO","echo",24],["T_WHITESPACE"," ",24],["T_STRING","__",24],"(",["T_CONSTANT_ENCAPSED_STRING","'start typing to search template'",24],")",";",["T_WHITESPACE"," ",24],["T_CLOSE_TAG","?>",24],["T_INLINE_HTML","\"\/><\/li>\n                <\/ul>\n            <\/div>\n        <\/div>\n\n        <div class=\"switcher\" onselectstart='return false;'>\n            <input type=\"checkbox\" id=\"product-online-switcher\" name=\"product-online-switcher\" \/>\n            <label class=\"switcher-label\"\n                   for=\"product-online-switcher\"\n                   data-text-on=\"",24],["T_OPEN_TAG","<?php ",33],["T_COMMENT","\/* @escapeNotVerified *\/",33],["T_WHITESPACE"," ",33],["T_ECHO","echo",33],["T_WHITESPACE"," ",33],["T_STRING","__",33],"(",["T_CONSTANT_ENCAPSED_STRING","'Product online'",33],")",";",["T_WHITESPACE"," ",33],["T_CLOSE_TAG","?>",33],["T_INLINE_HTML","\"\n                   data-text-off=\"",33],["T_OPEN_TAG","<?php ",34],["T_COMMENT","\/* @escapeNotVerified *\/",34],["T_WHITESPACE"," ",34],["T_ECHO","echo",34],["T_WHITESPACE"," ",34],["T_STRING","__",34],"(",["T_CONSTANT_ENCAPSED_STRING","'Product offline'",34],")",";",["T_WHITESPACE"," ",34],["T_CLOSE_TAG","?>",34],["T_INLINE_HTML","\"\n                   title=\"",34],["T_OPEN_TAG","<?php ",35],["T_COMMENT","\/* @escapeNotVerified *\/",35],["T_WHITESPACE"," ",35],["T_ECHO","echo",35],["T_WHITESPACE"," ",35],["T_STRING","__",35],"(",["T_CONSTANT_ENCAPSED_STRING","'Product online status'",35],")",";",["T_WHITESPACE"," ",35],["T_CLOSE_TAG","?>",35],["T_INLINE_HTML","\"><\/label>\n        <\/div>\n\n        ",35],["T_OPEN_TAG","<?php ",38],["T_IF","if",38],["T_WHITESPACE"," ",38],"(",["T_VARIABLE","$block",38],["T_OBJECT_OPERATOR","->",38],["T_STRING","getProductId",38],"(",")",")",":",["T_WHITESPACE"," ",38],["T_CLOSE_TAG","?>\n",38],["T_INLINE_HTML","            ",39],["T_OPEN_TAG","<?php ",39],["T_ECHO","echo",39],["T_WHITESPACE"," ",39],["T_VARIABLE","$block",39],["T_OBJECT_OPERATOR","->",39],["T_STRING","getDeleteButtonHtml",39],"(",")",["T_WHITESPACE"," ",39],["T_CLOSE_TAG","?>\n",39],["T_INLINE_HTML","        ",40],["T_OPEN_TAG","<?php ",40],["T_ENDIF","endif",40],";",["T_WHITESPACE"," ",40],["T_CLOSE_TAG","?>\n",40],["T_INLINE_HTML","        ",41],["T_OPEN_TAG","<?php ",41],["T_IF","if",41],["T_WHITESPACE"," ",41],"(",["T_VARIABLE","$block",41],["T_OBJECT_OPERATOR","->",41],["T_STRING","getProductSetId",41],"(",")",")",":",["T_WHITESPACE"," ",41],["T_CLOSE_TAG","?>\n",41],["T_INLINE_HTML","            ",42],["T_OPEN_TAG","<?php ",42],["T_ECHO","echo",42],["T_WHITESPACE"," ",42],["T_VARIABLE","$block",42],["T_OBJECT_OPERATOR","->",42],["T_STRING","getChangeAttributeSetButtonHtml",42],"(",")",["T_WHITESPACE"," ",42],["T_CLOSE_TAG","?>\n",42],["T_INLINE_HTML","            ",43],["T_OPEN_TAG","<?php ",43],["T_ECHO","echo",43],["T_WHITESPACE"," ",43],["T_VARIABLE","$block",43],["T_OBJECT_OPERATOR","->",43],["T_STRING","getSaveSplitButtonHtml",43],"(",")",";",["T_WHITESPACE"," ",43],["T_CLOSE_TAG","?>\n",43],["T_INLINE_HTML","        ",44],["T_OPEN_TAG","<?php ",44],["T_ENDIF","endif",44],";",["T_WHITESPACE"," ",44],["T_CLOSE_TAG","?>\n",44],["T_INLINE_HTML","        ",45],["T_OPEN_TAG","<?php ",45],["T_ECHO","echo",45],["T_WHITESPACE"," ",45],["T_VARIABLE","$block",45],["T_OBJECT_OPERATOR","->",45],["T_STRING","getBackButtonHtml",45],"(",")",["T_WHITESPACE"," ",45],["T_CLOSE_TAG","?>\n",45],["T_INLINE_HTML","    <\/div>\n<\/div>\n",46],["T_OPEN_TAG","<?php ",48],["T_IF","if",48],["T_WHITESPACE"," ",48],"(",["T_VARIABLE","$block",48],["T_OBJECT_OPERATOR","->",48],["T_STRING","getUseContainer",48],"(",")",")",":",["T_WHITESPACE"," ",48],["T_CLOSE_TAG","?>\n",48],["T_INLINE_HTML","<form action=\"",49],["T_OPEN_TAG","<?php ",49],["T_COMMENT","\/* @escapeNotVerified *\/",49],["T_WHITESPACE"," ",49],["T_ECHO","echo",49],["T_WHITESPACE"," ",49],["T_VARIABLE","$block",49],["T_OBJECT_OPERATOR","->",49],["T_STRING","getSaveUrl",49],"(",")",["T_WHITESPACE"," ",49],["T_CLOSE_TAG","?>",49],["T_INLINE_HTML","\" method=\"post\" enctype=\"multipart\/form-data\"\n      data-form=\"edit-product\" data-product-id=\"",49],["T_OPEN_TAG","<?php ",50],["T_COMMENT","\/* @escapeNotVerified *\/",50],["T_WHITESPACE"," ",50],["T_ECHO","echo",50],["T_WHITESPACE"," ",50],["T_VARIABLE","$block",50],["T_OBJECT_OPERATOR","->",50],["T_STRING","getProduct",50],"(",")",["T_OBJECT_OPERATOR","->",50],["T_STRING","getId",50],"(",")",["T_CLOSE_TAG","?>",50],["T_INLINE_HTML","\">\n",50],["T_OPEN_TAG","<?php ",51],["T_ENDIF","endif",51],";",["T_WHITESPACE"," ",51],["T_CLOSE_TAG","?>\n",51],["T_INLINE_HTML","    ",52],["T_OPEN_TAG","<?php ",52],["T_ECHO","echo",52],["T_WHITESPACE"," ",52],["T_VARIABLE","$block",52],["T_OBJECT_OPERATOR","->",52],["T_STRING","getBlockHtml",52],"(",["T_CONSTANT_ENCAPSED_STRING","'formkey'",52],")",["T_CLOSE_TAG","?>\n",52],["T_INLINE_HTML","    <div data-role=\"tabs\" id=\"product-edit-form-tabs\"><\/div> ",53],["T_OPEN_TAG","<?php ",53],["T_COMMENT","\/* @TODO: remove id after elimination of setDestElementId('product-edit-form-tabs') *\/",53],["T_CLOSE_TAG","?>\n",53],["T_INLINE_HTML","    ",54],["T_OPEN_TAG","<?php ",54],["T_ECHO","echo",54],["T_WHITESPACE"," ",54],["T_VARIABLE","$block",54],["T_OBJECT_OPERATOR","->",54],["T_STRING","getChildHtml",54],"(",["T_CONSTANT_ENCAPSED_STRING","'product-type-tabs'",54],")",["T_WHITESPACE"," ",54],["T_CLOSE_TAG","?>\n",54],["T_INLINE_HTML","    <input type=\"hidden\" id=\"product_type_id\" value=\"",55],["T_OPEN_TAG","<?php ",55],["T_COMMENT","\/* @escapeNotVerified *\/",55],["T_WHITESPACE"," ",55],["T_ECHO","echo",55],["T_WHITESPACE"," ",55],["T_VARIABLE","$block",55],["T_OBJECT_OPERATOR","->",55],["T_STRING","getProduct",55],"(",")",["T_OBJECT_OPERATOR","->",55],["T_STRING","getTypeId",55],"(",")",["T_CLOSE_TAG","?>",55],["T_INLINE_HTML","\"\/>\n    <input type=\"hidden\" id=\"attribute_set_id\" value=\"",55],["T_OPEN_TAG","<?php ",56],["T_COMMENT","\/* @escapeNotVerified *\/",56],["T_WHITESPACE"," ",56],["T_ECHO","echo",56],["T_WHITESPACE"," ",56],["T_VARIABLE","$block",56],["T_OBJECT_OPERATOR","->",56],["T_STRING","getProduct",56],"(",")",["T_OBJECT_OPERATOR","->",56],["T_STRING","getAttributeSetId",56],"(",")",["T_CLOSE_TAG","?>",56],["T_INLINE_HTML","\"\/>\n    <button type=\"submit\" class=\"hidden\"><\/button>\n",56],["T_OPEN_TAG","<?php ",58],["T_IF","if",58],["T_WHITESPACE"," ",58],"(",["T_VARIABLE","$block",58],["T_OBJECT_OPERATOR","->",58],["T_STRING","getUseContainer",58],"(",")",")",":",["T_WHITESPACE"," ",58],["T_CLOSE_TAG","?>\n",58],["T_INLINE_HTML","<\/form>\n",59],["T_OPEN_TAG","<?php ",60],["T_ENDIF","endif",60],";",["T_WHITESPACE"," ",60],["T_CLOSE_TAG","?>\n",60],["T_INLINE_HTML","<script>\nrequire([\n    \"jquery\",\n    \"Magento_Catalog\/catalog\/type-events\",\n    \"underscore\",\n    \"mage\/mage\",\n    \"mage\/backend\/tabs\",\n    \"domReady!\"\n], function($, TypeSwitcher){\n    var $form = $('[data-form=edit-product]');\n    $form.data('typeSwitcher', TypeSwitcher.init());\n\n    var scriptTagManager = (function($) {\n        var hiddenPrefix = 'hidden',\n            scriptTypeRegExp = \/((java|ecma)script)\/gi,\n            hiddenScriptType = 'text\/' + hiddenPrefix + 'javascript',\n            changeScriptsType = function(source, callback) {\n                var isString = (typeof source === 'string'),\n                    div = document.createElement('div'),\n                    scripts,\n                    scriptsLength;\n                div.innerHTML = isString ? source : $(source).clone().wrap('<p>').parent().html();\n                scripts = div.getElementsByTagName('script');\n                scriptsLength = scripts.length;\n                for (var i = 0; i < scriptsLength; i++) {\n                    scripts[i].type = callback(scripts[i].type);\n                }\n                return isString ? div.innerHTML : $(div.innerHTML);\n            },\n            disableScripts = function(source) {\n                enableScripts(source);\n                return changeScriptsType(source, function(type) {\n                    return type ? type.replace(scriptTypeRegExp, hiddenPrefix + '$1') : hiddenScriptType;\n                });\n            },\n            enableScripts = function(source) {\n                return changeScriptsType(source, function(type) {\n                    return type.replace(hiddenPrefix, '');\n                });\n            };\n        return {\n            'disableScripts' : disableScripts,\n            'enableScripts' : enableScripts\n        }\n    })($);\n\n    $('#meta_description').on('change keyup paste', function () {\n        var maxLength = $(this).data('maxLength') || 255;\n        if ($(this).val().length >= maxLength) {\n            $(this).val($(this).val().substr(0, maxLength));\n        }\n    });\n    $form.mage('form', {\n        handlersData: {\n            save: {},\n            saveAndContinueEdit: {\n                action: {\n                    args: {back: 'edit'}\n                }\n            },\n            saveAndNew: {\n                action: {\n                    args: {back: 'new'}\n                }\n            },\n            saveAndDuplicate: {\n                action: {\n                    args: {back: 'duplicate'}\n                }\n            }\n        }\n    });\n    $form.mage('validation', {validationUrl: '",61],["T_OPEN_TAG","<?php ",133],["T_COMMENT","\/* @escapeNotVerified *\/",133],["T_WHITESPACE"," ",133],["T_ECHO","echo",133],["T_WHITESPACE"," ",133],["T_VARIABLE","$block",133],["T_OBJECT_OPERATOR","->",133],["T_STRING","getValidationUrl",133],"(",")",["T_WHITESPACE"," ",133],["T_CLOSE_TAG","?>",133],["T_INLINE_HTML","'});\n\n    var masks = ",133],["T_OPEN_TAG","<?php ",135],["T_COMMENT","\/* @escapeNotVerified *\/",135],["T_WHITESPACE"," ",135],["T_ECHO","echo",135],["T_WHITESPACE"," ",135],["T_VARIABLE","$this",135],["T_OBJECT_OPERATOR","->",135],["T_STRING","helper",135],"(",["T_CONSTANT_ENCAPSED_STRING","'Magento\\Framework\\Json\\Helper\\Data'",135],")",["T_OBJECT_OPERATOR","->",135],["T_STRING","jsonEncode",135],"(",["T_VARIABLE","$block",135],["T_OBJECT_OPERATOR","->",135],["T_STRING","getFieldsAutogenerationMasks",135],"(",")",")",["T_CLOSE_TAG","?>",135],["T_INLINE_HTML",";\n    var availablePlaceholders = ",135],["T_OPEN_TAG","<?php ",136],["T_COMMENT","\/* @escapeNotVerified *\/",136],["T_WHITESPACE"," ",136],["T_ECHO","echo",136],["T_WHITESPACE"," ",136],["T_VARIABLE","$this",136],["T_OBJECT_OPERATOR","->",136],["T_STRING","helper",136],"(",["T_CONSTANT_ENCAPSED_STRING","'Magento\\Framework\\Json\\Helper\\Data'",136],")",["T_OBJECT_OPERATOR","->",136],["T_STRING","jsonEncode",136],"(",["T_VARIABLE","$block",136],["T_OBJECT_OPERATOR","->",136],["T_STRING","getAttributesAllowedForAutogeneration",136],"(",")",")",["T_CLOSE_TAG","?>",136],["T_INLINE_HTML",";\n    var Autogenerator = function(masks) {\n        this._masks = masks || {};\n        this._fieldReverseIndex = this._buildReverseIndex(this._masks);\n        this.form = $('[data-form=edit-product], #drawer-form');\n    };\n\n    $.extend(Autogenerator.prototype, {\n        varRegexp: \/{{([\\w_]+?)}}\/,\n        varsRegexp: new RegExp('{{(' + availablePlaceholders.join('|') + ')}}', 'g'),\n        data: {\n            disabled: 'autogenerator-disabled'\n        },\n        bindAll: function(events) {\n            var self = this;\n            var elementSelector = _(this._masks).keys().map(function(key) {\n                return '#' + key;\n            }).join(',');\n            var disabler = function() {\n                this.form.on(\n                    'change init',\n                    elementSelector,\n                    $.proxy(function(event) {\n                        var $element = $(event.target);\n                        if (event.type == 'init' && $element.data('disablerInited')) {\n                            return;\n                        } else {\n                            $element.data('disablerInited', true);\n                        }\n                        $element.data(this.data.disabled, $element.val().replace(\/\\s\/g, '') != '');\n                    }, this)\n                ).find(elementSelector).trigger('init');\n            };\n            disabler.call(this);\n            $(\"#product_info_tabs\").on(\"tabscreate tabsactivate\", $.proxy(disabler, this));\n\n            $.each(this._masks, function(field, mask) {\n                var $field = $('#' + field);\n                if (!$field.val() && mask && mask.length > 0 && !self.varRegexp.test(mask)) {\n                    $field.val(mask);\n                }\n                $field.trigger('change');\n            });\n\n            $.each(self._fieldReverseIndex, function(field) {\n                var fields = this, $field = $('#' + field);\n                var filler = function(onlyText) {\n                    $.each(fields, function() {\n                        var $el = $('#' + this);\n                        if ($el.data(self.data.disabled)) {\n                            return;\n                        }\n                        if (onlyText === true && self.varRegexp.test(self._masks[this])) {\n                            return;\n                        }\n                        var value = self._masks[this].replace(self.varsRegexp, function(maskfieldName) {\n                            return $('#' + maskfieldName.slice(2, -2)).val();\n                        });\n                        $el.val(value);\n                    });\n                };\n                if ($field.length) {\n                    self.form.on('keyup change blur click paste', '#' + field, filler);\n                    $field.trigger('change');\n                }\n            });\n        },\n        _buildReverseIndex: function(masks) {\n            var self = this;\n            var fieldReverseIndex = {};\n            $.each(masks, function(field, mask) {\n                if (mask) {\n                    $.each(mask.toString().match(self.varsRegexp) || [], function (key, maskName) {\n                        var fieldName = maskName.slice(2, -2);\n                        if (!(fieldName in fieldReverseIndex)) {\n                            fieldReverseIndex[fieldName] = [];\n                        }\n                        fieldReverseIndex[fieldName].push(field);\n                    })\n                }\n            });\n            return fieldReverseIndex;\n        }\n    });\n\n    $form.data('autogenerator', new Autogenerator(masks).bindAll());\n\n    $('.widget-button-save .item-default').parent().hide();\n\n    $('#product-online-switcher')\n        .prop('checked', $('#status').val() == '1')\n        .trigger('change');\n\n    $('#product-online-switcher').on('change', function(event) {\n        $('#status').val($(this).prop('checked') ? '1' : '2');\n    });\n\n    $form.on('changeAttributeSet', function(event, data) {\n        if (data.label) {\n            $('#product-template-suggest-container .action-toggle>span').text(data.label);\n            $('[data-role=affected-attribute-set-selector] [data-role=name-container]').text(data.label);\n        }\n        $('#product-template-suggest').suggest('option', \"currentlySelected\", data.id).val('');\n\n        var uri = document.location.href.replace(\/(\\\/|&|\\?)?\\bset(\\\/|=)\\d+\/g, '').replace(\/#[^#]*$\/, '');\n        uri += \/\\?\/.test(uri) ? '&' : '?';\n        uri += 'set=' + window.encodeURIComponent(data.id);\n\n        var $form = $('[data-form=edit-product]');\n        $form.attr('action', $form.attr('action').replace(\/(\\\/|&|\\?)?\\bset(\\\/|=)\\d+\/g, ''));\n        $form.find('#attribute_set_id').attr('name', 'set').val(data.id);\n        $.ajax({\n            url: uri.replace('\/edit\/', '\/new\/') + '&popup=1',\n            type: 'post',\n            data: $form.serializeArray(),\n            dataType: 'html',\n            context: $('body'),\n            showLoader: true\n        }).done(function(data) {\n            \/\/Hide all js scripts to prevent removing them during jQuery object creation\n            data = scriptTagManager.disableScripts(data);\n            var removedElementClass = 'removed';\n\n            var $page = $('body');\n            var $newPage = $(data);\n\n            var nameMapper = function() {\n                return $(this).attr('name');\n            };\n            var activeTabId = $('.ui-tabs-active>a').attr('id');\n            \/\/add new tab tabs or reorder\n            $page.find('#product_info_tabs .tabs').each(function(i, tabContainer) {\n                $newPage.find('#product_info_tabs .tabs').each(function(j, newTabContainer) {\n                    if (i != j) {\n                        return;\n                    }\n                    var $tabContainer = $(tabContainer);\n                    $(tabContainer).find('li').removeClass(removedElementClass);\n                    var $tabs = $(tabContainer)\n                        .find('li:not(.' + removedElementClass + ')  .tab-item-link.user-defined:not(.ajax)');\n                    var $newTabs = $(newTabContainer).find('.tab-item-link.user-defined:not(.ajax)'),\n                        tabsNames = $tabs.map(nameMapper).toArray();\n\n                    \/\/hide not exists elements\n                    $.each(\n                        _.difference(tabsNames, $newTabs.map(nameMapper).toArray()),\n                        function(index, tabName) {\n                            $tabContainer.find('[name=' + tabName + ']').closest('li')\n                                .addClass(removedElementClass);\n                            $page.find('#' + tabName)\n                                .addClass(removedElementClass)\n                                .addClass('ignore-validate');\n                        }\n                    );\n\n                    $(newTabContainer).find('.tab-item-link.user-defined:not(.ajax)').each(function(index, tab) {\n                        var $tab = $(tab),\n                            tabName = nameMapper.apply($tab),\n                            $tabsContent = $tab.closest('li').clone();\n                        $tabsContent.find('.fieldset>.field').remove();\n                        if (nameMapper.apply($tabs.eq(index)) == tabName) {\n                            return true;\n                        }\n                        var $tabToMove = $.inArray(tabName, tabsNames) !== -1\n                            ? $tabs.filter(function() {\n                            return nameMapper.apply(this) === tabName;\n                        }).closest('li')\n                            : $tabsContent;\n                        if (index === 0) {\n                            $tabToMove.prependTo($tabContainer);\n                        } else {\n                            $tabToMove.insertAfter($tabs.eq(index - 1).closest('li'));\n                        }\n                        $tabToMove.removeClass(removedElementClass).removeClass('ignore-validate');\n                        $tabs = $tabContainer.find('li:not(.' + removedElementClass + ')  .tab-item-link.user-defined:not(.ajax)');\n                    });\n                });\n            });\n\n            \/\/add new fieldsets or reorder\n            $newPage.find('#product_info_tabs .fieldset.user-defined').each(function(index, newFieldset) {\n                var fieldsetContainer, newFieldsetContainer, sourceContainer, destinationContainer;\n                newFieldsetContainer = $(newFieldset).parents('[data-ui-id*=-tab-content-]').first();\n                if ($page.find('[data-ui-id=' + newFieldsetContainer.data('uiId') + ']').length === 0) {\n                    fieldsetContainer = newFieldsetContainer\n                        .clone()\n                        .removeClass(removedElementClass)\n                        .removeClass('ignore-validate');\n                    \/\/Enable hidden js scripts in node. These scripts will be performed after inserting into page\n                    fieldsetContainer = scriptTagManager.enableScripts(fieldsetContainer);\n                } else {\n                    fieldsetContainer = $page.find('[data-ui-id=' + newFieldsetContainer.data('uiId') + ']').first();\n                }\n                sourceContainer = newFieldsetContainer.parents('[data-ui-id*=-tab-content-]').first();\n                destinationContainer = $page.find('[data-ui-id=' + sourceContainer.data('uiId') + ']').first();\n                fieldsetContainer.appendTo(destinationContainer);\n            });\n\n            var nameDataMapper = function() {\n                return $(this).data('attributeCode');\n            };\n            \/\/add new element elements or reorder\n            $page.find('[data-form=edit-product] [data-role=tabs] .fieldset, #product_info_tabs .fieldset')\n                .removeClass('ignore-validate')\n                .removeClass(removedElementClass)\n                .each(function(i, fieldSet) {\n                var updateFieldsetElements = function(index, newFieldSet) {\n                    if ($(fieldSet).attr('id') != $(newFieldSet).attr('id')) {\n                        return\n                    }\n                    var $elements = $(fieldSet).find('>.field:not(.' + removedElementClass + ')');\n                    var $newFieldSet = $(newFieldSet);\n                    var $newElements = $newFieldSet.find('>.field');\n\n                    $elements.removeClass(removedElementClass);\n\n                    var elementNames = $elements.map(nameDataMapper).toArray();\n\n                    \/\/hide not exists elements\n                    $.each(\n                        _.difference(elementNames, $newElements.map(nameDataMapper).toArray()),\n                        function(index, elementId) {\n                            $page.find('#attribute-' + elementId + '-container')\n                                .addClass(removedElementClass)\n                                .addClass('ignore-validate');\n                        }\n                    );\n\n                    $newElements.each(function(index, element) {\n                        var $element = $(element),\n                            elementId = nameDataMapper.apply($element);\n                        if (nameDataMapper.apply($elements.get(index)) == elementId) {\n                            return true;\n                        }\n                        var $elementToMove = $('.fieldset>.field[data-attribute-code=\"' + elementId + '\"]');\n                        if ($elementToMove.length === 0) {\n                            $elementToMove = $element.clone();\n                        }\n                        if (index === 0) {\n                            $elementToMove.prependTo(fieldSet);\n                        } else {\n                            $elementToMove.insertAfter($elements.get(index - 1))\n                        }\n                        $elementToMove.trigger('contentUpdated');\n                        $elementToMove.removeClass(removedElementClass).removeClass('.ignore-validate');\n                        $elements = $(fieldSet).find('>.field:not(.' + removedElementClass + ')');\n                    });\n                };\n\n                $newPage.find('#product_info_tabs .fieldset').each(updateFieldsetElements);\n\n                fieldsetContainer = $(fieldSet).parents('[data-ui-id*=-tab-content-]').first();\n                var newFieldsetContainer = $newPage.find('[data-ui-id=' + $(fieldsetContainer).data('uiId') + ']');\n                if (newFieldsetContainer.length == 0) {\n                    $(fieldsetContainer).find('fieldset .field')\n                        .addClass('ignore-validate')\n                        .addClass(removedElementClass);\n                    $(fieldsetContainer).addClass(removedElementClass);\n                } else {\n                    $(newFieldsetContainer).find('fieldset').each(updateFieldsetElements);\n                    $(fieldsetContainer).removeClass(removedElementClass);\n                }\n            });\n            $('#product_info_tabs').tabs('refresh');\n            if (!$('#' + activeTabId).closest('li').hasClass(removedElementClass)) {\n                $('#' + activeTabId).trigger('click');\n            } else {\n                $('#product_info_tabs').tabs(\"option\", \"active\", 0);\n            }\n        });\n\n    });\n});\n<\/script>\n<script type=\"text\/x-magento-init\">\n    {\n        \"*\": {\n            \"Magento_Catalog\/js\/product\/weight-handler\": {},\n            \"Magento_Catalog\/catalog\/apply-to-type-switcher\": {}\n        }\n    }\n<\/script>\n",136]]