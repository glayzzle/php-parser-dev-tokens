[["T_OPEN_TAG","<?php\n",1],["T_DOC_COMMENT","\/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n *\/",2],["T_WHITESPACE","\n\n",5],["T_NAMESPACE","namespace",7],["T_WHITESPACE"," ",7],["T_STRING","Magento",7],["T_NS_SEPARATOR","\\",7],["T_STRING","Framework",7],["T_NS_SEPARATOR","\\",7],["T_STRING","Webapi",7],["T_NS_SEPARATOR","\\",7],["T_STRING","Rest",7],["T_NS_SEPARATOR","\\",7],["T_STRING","Request",7],";",["T_WHITESPACE","\n\n",7],["T_DOC_COMMENT","\/**\n * Override parameter values\n *\n * Parameters in the webapi.xml can be forced. This ensures that on specific routes, a specific value is always used.\n * For instance, if there is a \"...\/me\/...\" route, the route should use only user information specific to the\n * currently logged in user. More specifically, if there was a \"\/customers\/me\/addresses\" route, the service method\n * invoked could have a signature of \"getAddresses($customerId)\", but in the webapi.xml, the $customerId parameter\n * would be forced to be the customer id of the current authenticated user.\n *\n * The forced override parameter configuration is in the webapi.xml. \n *\n * <data>\n *   <parameter name=\"customer.id\" force=\"true\">%customer_id%<\/parameter>\n * <\/data>\n *\n * Classes which implement ParamOverriderInterface would return the real value for the parameter, so a\n * ParamOverriderCustomerId would return the current authenticated user's customer id. If you\n * create new ParamOverriderInterface implementations, you can register new implementations by\n * adding to the parameter list for ParamsOverrider's dependency injection configuration.\n *\/",9],["T_WHITESPACE","\n",28],["T_INTERFACE","interface",29],["T_WHITESPACE"," ",29],["T_STRING","ParamOverriderInterface",29],["T_WHITESPACE","\n",29],"{",["T_WHITESPACE","\n    ",30],["T_DOC_COMMENT","\/**\n     * Returns the overridden value to use.\n     *\n     * @return string|int|null\n     *\/",31],["T_WHITESPACE","\n    ",35],["T_PUBLIC","public",36],["T_WHITESPACE"," ",36],["T_FUNCTION","function",36],["T_WHITESPACE"," ",36],["T_STRING","getOverriddenValue",36],"(",")",";",["T_WHITESPACE","\n",36],"}",["T_WHITESPACE","\n",37]]