[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_COMMENT","\/*\n * This file is part of the Symfony package.\n *\n * (c) Fabien Potencier <fabien@symfony.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\/",3],["T_WHITESPACE","\n\n",10],["T_NAMESPACE","namespace",12],["T_WHITESPACE"," ",12],["T_STRING","Symfony",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Component",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Console",12],";",["T_WHITESPACE","\n\n",12],["T_DOC_COMMENT","\/**\n * Contains all events dispatched by an Application.\n *\n * @author Francesco Levorato <git@flevour.net>\n *\/",14],["T_WHITESPACE","\n",18],["T_FINAL","final",19],["T_WHITESPACE"," ",19],["T_CLASS","class",19],["T_WHITESPACE"," ",19],["T_STRING","ConsoleEvents",19],["T_WHITESPACE","\n",19],"{",["T_WHITESPACE","\n    ",20],["T_DOC_COMMENT","\/**\n     * The COMMAND event allows you to attach listeners before any command is\n     * executed by the console. It also allows you to modify the command, input and output\n     * before they are handled to the command.\n     *\n     * @Event(\"Symfony\\Component\\Console\\Event\\ConsoleCommandEvent\")\n     *\n     * @var string\n     *\/",21],["T_WHITESPACE","\n    ",29],["T_CONST","const",30],["T_WHITESPACE"," ",30],["T_STRING","COMMAND",30],["T_WHITESPACE"," ",30],"=",["T_WHITESPACE"," ",30],["T_CONSTANT_ENCAPSED_STRING","'console.command'",30],";",["T_WHITESPACE","\n\n    ",30],["T_DOC_COMMENT","\/**\n     * The TERMINATE event allows you to attach listeners after a command is\n     * executed by the console.\n     *\n     * @Event(\"Symfony\\Component\\Console\\Event\\ConsoleTerminateEvent\")\n     *\n     * @var string\n     *\/",32],["T_WHITESPACE","\n    ",39],["T_CONST","const",40],["T_WHITESPACE"," ",40],["T_STRING","TERMINATE",40],["T_WHITESPACE"," ",40],"=",["T_WHITESPACE"," ",40],["T_CONSTANT_ENCAPSED_STRING","'console.terminate'",40],";",["T_WHITESPACE","\n\n    ",40],["T_DOC_COMMENT","\/**\n     * The EXCEPTION event occurs when an uncaught exception appears.\n     *\n     * This event allows you to deal with the exception or\n     * to modify the thrown exception.\n     *\n     * @Event(\"Symfony\\Component\\Console\\Event\\ConsoleExceptionEvent\")\n     *\n     * @var string\n     *\/",42],["T_WHITESPACE","\n    ",51],["T_CONST","const",52],["T_WHITESPACE"," ",52],["T_STRING","EXCEPTION",52],["T_WHITESPACE"," ",52],"=",["T_WHITESPACE"," ",52],["T_CONSTANT_ENCAPSED_STRING","'console.exception'",52],";",["T_WHITESPACE","\n",52],"}",["T_WHITESPACE","\n",53]]