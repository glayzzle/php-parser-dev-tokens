[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_COMMENT","\/*\n * This file is part of the Symfony package.\n *\n * (c) Fabien Potencier <fabien@symfony.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\/",3],["T_WHITESPACE","\n\n",10],["T_NAMESPACE","namespace",12],["T_WHITESPACE"," ",12],["T_STRING","Symfony",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Component",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Finder",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Iterator",12],";",["T_WHITESPACE","\n\n",12],["T_USE","use",14],["T_WHITESPACE"," ",14],["T_STRING","Symfony",14],["T_NS_SEPARATOR","\\",14],["T_STRING","Component",14],["T_NS_SEPARATOR","\\",14],["T_STRING","Finder",14],["T_NS_SEPARATOR","\\",14],["T_STRING","Glob",14],";",["T_WHITESPACE","\n\n",14],["T_DOC_COMMENT","\/**\n * FilenameFilterIterator filters files by patterns (a regexp, a glob, or a string).\n *\n * @author Fabien Potencier <fabien@symfony.com>\n *\/",16],["T_WHITESPACE","\n",20],["T_CLASS","class",21],["T_WHITESPACE"," ",21],["T_STRING","FilenameFilterIterator",21],["T_WHITESPACE"," ",21],["T_EXTENDS","extends",21],["T_WHITESPACE"," ",21],["T_STRING","MultiplePcreFilterIterator",21],["T_WHITESPACE","\n",21],"{",["T_WHITESPACE","\n    ",22],["T_DOC_COMMENT","\/**\n     * Filters the iterator values.\n     *\n     * @return bool true if the value should be kept, false otherwise\n     *\/",23],["T_WHITESPACE","\n    ",27],["T_PUBLIC","public",28],["T_WHITESPACE"," ",28],["T_FUNCTION","function",28],["T_WHITESPACE"," ",28],["T_STRING","accept",28],"(",")",["T_WHITESPACE","\n    ",28],"{",["T_WHITESPACE","\n        ",29],["T_RETURN","return",30],["T_WHITESPACE"," ",30],["T_VARIABLE","$this",30],["T_OBJECT_OPERATOR","->",30],["T_STRING","isAccepted",30],"(",["T_VARIABLE","$this",30],["T_OBJECT_OPERATOR","->",30],["T_STRING","current",30],"(",")",["T_OBJECT_OPERATOR","->",30],["T_STRING","getFilename",30],"(",")",")",";",["T_WHITESPACE","\n    ",30],"}",["T_WHITESPACE","\n\n    ",31],["T_DOC_COMMENT","\/**\n     * Converts glob to regexp.\n     *\n     * PCRE patterns are left unchanged.\n     * Glob strings are transformed with Glob::toRegex().\n     *\n     * @param string $str Pattern: glob or regexp\n     *\n     * @return string regexp corresponding to a given glob or regexp\n     *\/",33],["T_WHITESPACE","\n    ",42],["T_PROTECTED","protected",43],["T_WHITESPACE"," ",43],["T_FUNCTION","function",43],["T_WHITESPACE"," ",43],["T_STRING","toRegex",43],"(",["T_VARIABLE","$str",43],")",["T_WHITESPACE","\n    ",43],"{",["T_WHITESPACE","\n        ",44],["T_RETURN","return",45],["T_WHITESPACE"," ",45],["T_VARIABLE","$this",45],["T_OBJECT_OPERATOR","->",45],["T_STRING","isRegex",45],"(",["T_VARIABLE","$str",45],")",["T_WHITESPACE"," ",45],"?",["T_WHITESPACE"," ",45],["T_VARIABLE","$str",45],["T_WHITESPACE"," ",45],":",["T_WHITESPACE"," ",45],["T_STRING","Glob",45],["T_DOUBLE_COLON","::",45],["T_STRING","toRegex",45],"(",["T_VARIABLE","$str",45],")",";",["T_WHITESPACE","\n    ",45],"}",["T_WHITESPACE","\n",46],"}",["T_WHITESPACE","\n",47]]