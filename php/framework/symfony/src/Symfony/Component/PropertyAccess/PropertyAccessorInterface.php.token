[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_COMMENT","\/*\n * This file is part of the Symfony package.\n *\n * (c) Fabien Potencier <fabien@symfony.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\/",3],["T_WHITESPACE","\n\n",10],["T_NAMESPACE","namespace",12],["T_WHITESPACE"," ",12],["T_STRING","Symfony",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Component",12],["T_NS_SEPARATOR","\\",12],["T_STRING","PropertyAccess",12],";",["T_WHITESPACE","\n\n",12],["T_DOC_COMMENT","\/**\n * Writes and reads values to\/from an object\/array graph.\n *\n * @author Bernhard Schussek <bschussek@gmail.com>\n *\/",14],["T_WHITESPACE","\n",18],["T_INTERFACE","interface",19],["T_WHITESPACE"," ",19],["T_STRING","PropertyAccessorInterface",19],["T_WHITESPACE","\n",19],"{",["T_WHITESPACE","\n    ",20],["T_DOC_COMMENT","\/**\n     * Sets the value at the end of the property path of the object graph.\n     *\n     * Example:\n     *\n     *     use Symfony\\Component\\PropertyAccess\\PropertyAccess;\n     *\n     *     $propertyAccessor = PropertyAccess::createPropertyAccessor();\n     *\n     *     echo $propertyAccessor->setValue($object, 'child.name', 'Fabien');\n     *     \/\/ equals echo $object->getChild()->setName('Fabien');\n     *\n     * This method first tries to find a public setter for each property in the\n     * path. The name of the setter must be the camel-cased property name\n     * prefixed with \"set\".\n     *\n     * If the setter does not exist, this method tries to find a public\n     * property. The value of the property is then changed.\n     *\n     * If neither is found, an exception is thrown.\n     *\n     * @param object|array                 $objectOrArray The object or array to modify\n     * @param string|PropertyPathInterface $propertyPath  The property path to modify\n     * @param mixed                        $value         The value to set at the end of the property path\n     *\n     * @throws Exception\\InvalidArgumentException If the property path is invalid\n     * @throws Exception\\AccessException          If a property\/index does not exist or is not public\n     * @throws Exception\\UnexpectedTypeException  If a value within the path is neither object nor array\n     *\/",21],["T_WHITESPACE","\n    ",49],["T_PUBLIC","public",50],["T_WHITESPACE"," ",50],["T_FUNCTION","function",50],["T_WHITESPACE"," ",50],["T_STRING","setValue",50],"(","&",["T_VARIABLE","$objectOrArray",50],",",["T_WHITESPACE"," ",50],["T_VARIABLE","$propertyPath",50],",",["T_WHITESPACE"," ",50],["T_VARIABLE","$value",50],")",";",["T_WHITESPACE","\n\n    ",50],["T_DOC_COMMENT","\/**\n     * Returns the value at the end of the property path of the object graph.\n     *\n     * Example:\n     *\n     *     use Symfony\\Component\\PropertyAccess\\PropertyAccess;\n     *\n     *     $propertyAccessor = PropertyAccess::createPropertyAccessor();\n     *\n     *     echo $propertyAccessor->getValue($object, 'child.name);\n     *     \/\/ equals echo $object->getChild()->getName();\n     *\n     * This method first tries to find a public getter for each property in the\n     * path. The name of the getter must be the camel-cased property name\n     * prefixed with \"get\", \"is\", or \"has\".\n     *\n     * If the getter does not exist, this method tries to find a public\n     * property. The value of the property is then returned.\n     *\n     * If none of them are found, an exception is thrown.\n     *\n     * @param object|array                 $objectOrArray The object or array to traverse\n     * @param string|PropertyPathInterface $propertyPath  The property path to read\n     *\n     * @return mixed The value at the end of the property path\n     *\n     * @throws Exception\\InvalidArgumentException If the property path is invalid\n     * @throws Exception\\AccessException          If a property\/index does not exist or is not public\n     * @throws Exception\\UnexpectedTypeException  If a value within the path is neither object\n     *                                            nor array\n     *\/",52],["T_WHITESPACE","\n    ",82],["T_PUBLIC","public",83],["T_WHITESPACE"," ",83],["T_FUNCTION","function",83],["T_WHITESPACE"," ",83],["T_STRING","getValue",83],"(",["T_VARIABLE","$objectOrArray",83],",",["T_WHITESPACE"," ",83],["T_VARIABLE","$propertyPath",83],")",";",["T_WHITESPACE","\n\n    ",83],["T_DOC_COMMENT","\/**\n     * Returns whether a value can be written at a given property path.\n     *\n     * Whenever this method returns true, {@link setValue()} is guaranteed not\n     * to throw an exception when called with the same arguments.\n     *\n     * @param object|array                 $objectOrArray The object or array to check\n     * @param string|PropertyPathInterface $propertyPath  The property path to check\n     *\n     * @return bool Whether the value can be set\n     *\n     * @throws Exception\\InvalidArgumentException If the property path is invalid\n     *\/",85],["T_WHITESPACE","\n    ",97],["T_PUBLIC","public",98],["T_WHITESPACE"," ",98],["T_FUNCTION","function",98],["T_WHITESPACE"," ",98],["T_STRING","isWritable",98],"(",["T_VARIABLE","$objectOrArray",98],",",["T_WHITESPACE"," ",98],["T_VARIABLE","$propertyPath",98],")",";",["T_WHITESPACE","\n\n    ",98],["T_DOC_COMMENT","\/**\n     * Returns whether a property path can be read from an object graph.\n     *\n     * Whenever this method returns true, {@link getValue()} is guaranteed not\n     * to throw an exception when called with the same arguments.\n     *\n     * @param object|array                 $objectOrArray The object or array to check\n     * @param string|PropertyPathInterface $propertyPath  The property path to check\n     *\n     * @return bool Whether the property path can be read\n     *\n     * @throws Exception\\InvalidArgumentException If the property path is invalid\n     *\/",100],["T_WHITESPACE","\n    ",112],["T_PUBLIC","public",113],["T_WHITESPACE"," ",113],["T_FUNCTION","function",113],["T_WHITESPACE"," ",113],["T_STRING","isReadable",113],"(",["T_VARIABLE","$objectOrArray",113],",",["T_WHITESPACE"," ",113],["T_VARIABLE","$propertyPath",113],")",";",["T_WHITESPACE","\n",113],"}",["T_WHITESPACE","\n",114]]