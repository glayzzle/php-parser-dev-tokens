[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_COMMENT","\/*\n * This file is part of the Symfony package.\n *\n * (c) Fabien Potencier <fabien@symfony.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\/",3],["T_WHITESPACE","\n\n",10],["T_NAMESPACE","namespace",12],["T_WHITESPACE"," ",12],["T_STRING","Symfony",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Component",12],["T_NS_SEPARATOR","\\",12],["T_STRING","PropertyAccess",12],";",["T_WHITESPACE","\n\n",12],["T_USE","use",14],["T_WHITESPACE"," ",14],["T_STRING","Symfony",14],["T_NS_SEPARATOR","\\",14],["T_STRING","Component",14],["T_NS_SEPARATOR","\\",14],["T_STRING","Inflector",14],["T_NS_SEPARATOR","\\",14],["T_STRING","Inflector",14],";",["T_WHITESPACE","\n\n",14],["T_DOC_COMMENT","\/**\n * Creates singulars from plurals.\n *\n * @author Bernhard Schussek <bschussek@gmail.com>\n *\n * @deprecated since version 3.1, to be removed in 4.0. Use {@see Symfony\\Component\\Inflector\\Inflector} instead.\n *\/",16],["T_WHITESPACE","\n",22],["T_CLASS","class",23],["T_WHITESPACE"," ",23],["T_STRING","StringUtil",23],["T_WHITESPACE","\n",23],"{",["T_WHITESPACE","\n    ",24],["T_DOC_COMMENT","\/**\n     * This class should not be instantiated.\n     *\/",25],["T_WHITESPACE","\n    ",27],["T_PRIVATE","private",28],["T_WHITESPACE"," ",28],["T_FUNCTION","function",28],["T_WHITESPACE"," ",28],["T_STRING","__construct",28],"(",")",["T_WHITESPACE","\n    ",28],"{",["T_WHITESPACE","\n    ",29],"}",["T_WHITESPACE","\n\n    ",30],["T_DOC_COMMENT","\/**\n     * Returns the singular form of a word.\n     *\n     * If the method can't determine the form with certainty, an array of the\n     * possible singulars is returned.\n     *\n     * @param string $plural A word in plural form\n     *\n     * @return string|array The singular form or an array of possible singular\n     *                      forms\n     *\n     * @deprecated since version 3.1, to be removed in 4.0. Use {@see Symfony\\Component\\Inflector\\Inflector::singularize} instead.\n     *\/",32],["T_WHITESPACE","\n    ",44],["T_PUBLIC","public",45],["T_WHITESPACE"," ",45],["T_STATIC","static",45],["T_WHITESPACE"," ",45],["T_FUNCTION","function",45],["T_WHITESPACE"," ",45],["T_STRING","singularify",45],"(",["T_VARIABLE","$plural",45],")",["T_WHITESPACE","\n    ",45],"{",["T_WHITESPACE","\n        ",46],"@",["T_STRING","trigger_error",47],"(",["T_CONSTANT_ENCAPSED_STRING","'StringUtil::singularify() is deprecated since version 3.1 and will be removed in 4.0. Use Symfony\\Component\\Inflector\\Inflector::singularize instead.'",47],",",["T_WHITESPACE"," ",47],["T_STRING","E_USER_DEPRECATED",47],")",";",["T_WHITESPACE","\n\n        ",47],["T_RETURN","return",49],["T_WHITESPACE"," ",49],["T_STRING","Inflector",49],["T_DOUBLE_COLON","::",49],["T_STRING","singularize",49],"(",["T_VARIABLE","$plural",49],")",";",["T_WHITESPACE","\n    ",49],"}",["T_WHITESPACE","\n",50],"}",["T_WHITESPACE","\n",51]]