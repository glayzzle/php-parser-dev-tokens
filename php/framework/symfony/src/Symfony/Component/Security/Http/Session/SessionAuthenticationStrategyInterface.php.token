[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_COMMENT","\/*\n * This file is part of the Symfony package.\n *\n * (c) Fabien Potencier <fabien@symfony.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\/",3],["T_WHITESPACE","\n\n",10],["T_NAMESPACE","namespace",12],["T_WHITESPACE"," ",12],["T_STRING","Symfony",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Component",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Security",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Http",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Session",12],";",["T_WHITESPACE","\n\n",12],["T_USE","use",14],["T_WHITESPACE"," ",14],["T_STRING","Symfony",14],["T_NS_SEPARATOR","\\",14],["T_STRING","Component",14],["T_NS_SEPARATOR","\\",14],["T_STRING","Security",14],["T_NS_SEPARATOR","\\",14],["T_STRING","Core",14],["T_NS_SEPARATOR","\\",14],["T_STRING","Authentication",14],["T_NS_SEPARATOR","\\",14],["T_STRING","Token",14],["T_NS_SEPARATOR","\\",14],["T_STRING","TokenInterface",14],";",["T_WHITESPACE","\n",14],["T_USE","use",15],["T_WHITESPACE"," ",15],["T_STRING","Symfony",15],["T_NS_SEPARATOR","\\",15],["T_STRING","Component",15],["T_NS_SEPARATOR","\\",15],["T_STRING","HttpFoundation",15],["T_NS_SEPARATOR","\\",15],["T_STRING","Request",15],";",["T_WHITESPACE","\n\n",15],["T_DOC_COMMENT","\/**\n * SessionAuthenticationStrategyInterface.\n *\n * Implementation are responsible for updating the session after an interactive\n * authentication attempt was successful.\n *\n * @author Johannes M. Schmitt <schmittjoh@gmail.com>\n *\/",17],["T_WHITESPACE","\n",24],["T_INTERFACE","interface",25],["T_WHITESPACE"," ",25],["T_STRING","SessionAuthenticationStrategyInterface",25],["T_WHITESPACE","\n",25],"{",["T_WHITESPACE","\n    ",26],["T_DOC_COMMENT","\/**\n     * This performs any necessary changes to the session.\n     *\n     * This method is called before the TokenStorage is populated with a\n     * Token, and only by classes inheriting from AbstractAuthenticationListener.\n     *\n     * @param Request        $request\n     * @param TokenInterface $token\n     *\/",27],["T_WHITESPACE","\n    ",35],["T_PUBLIC","public",36],["T_WHITESPACE"," ",36],["T_FUNCTION","function",36],["T_WHITESPACE"," ",36],["T_STRING","onAuthentication",36],"(",["T_STRING","Request",36],["T_WHITESPACE"," ",36],["T_VARIABLE","$request",36],",",["T_WHITESPACE"," ",36],["T_STRING","TokenInterface",36],["T_WHITESPACE"," ",36],["T_VARIABLE","$token",36],")",";",["T_WHITESPACE","\n",36],"}",["T_WHITESPACE","\n",37]]