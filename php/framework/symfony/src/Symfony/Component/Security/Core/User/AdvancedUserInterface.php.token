[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_COMMENT","\/*\n * This file is part of the Symfony package.\n *\n * (c) Fabien Potencier <fabien@symfony.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\/",3],["T_WHITESPACE","\n\n",10],["T_NAMESPACE","namespace",12],["T_WHITESPACE"," ",12],["T_STRING","Symfony",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Component",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Security",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Core",12],["T_NS_SEPARATOR","\\",12],["T_STRING","User",12],";",["T_WHITESPACE","\n\n",12],["T_USE","use",14],["T_WHITESPACE"," ",14],["T_STRING","Symfony",14],["T_NS_SEPARATOR","\\",14],["T_STRING","Component",14],["T_NS_SEPARATOR","\\",14],["T_STRING","Security",14],["T_NS_SEPARATOR","\\",14],["T_STRING","Core",14],["T_NS_SEPARATOR","\\",14],["T_STRING","Exception",14],["T_NS_SEPARATOR","\\",14],["T_STRING","AccountStatusException",14],";",["T_WHITESPACE","\n",14],["T_USE","use",15],["T_WHITESPACE"," ",15],["T_STRING","Symfony",15],["T_NS_SEPARATOR","\\",15],["T_STRING","Component",15],["T_NS_SEPARATOR","\\",15],["T_STRING","Security",15],["T_NS_SEPARATOR","\\",15],["T_STRING","Core",15],["T_NS_SEPARATOR","\\",15],["T_STRING","Exception",15],["T_NS_SEPARATOR","\\",15],["T_STRING","AccountExpiredException",15],";",["T_WHITESPACE","\n",15],["T_USE","use",16],["T_WHITESPACE"," ",16],["T_STRING","Symfony",16],["T_NS_SEPARATOR","\\",16],["T_STRING","Component",16],["T_NS_SEPARATOR","\\",16],["T_STRING","Security",16],["T_NS_SEPARATOR","\\",16],["T_STRING","Core",16],["T_NS_SEPARATOR","\\",16],["T_STRING","Exception",16],["T_NS_SEPARATOR","\\",16],["T_STRING","LockedException",16],";",["T_WHITESPACE","\n",16],["T_USE","use",17],["T_WHITESPACE"," ",17],["T_STRING","Symfony",17],["T_NS_SEPARATOR","\\",17],["T_STRING","Component",17],["T_NS_SEPARATOR","\\",17],["T_STRING","Security",17],["T_NS_SEPARATOR","\\",17],["T_STRING","Core",17],["T_NS_SEPARATOR","\\",17],["T_STRING","Exception",17],["T_NS_SEPARATOR","\\",17],["T_STRING","CredentialsExpiredException",17],";",["T_WHITESPACE","\n",17],["T_USE","use",18],["T_WHITESPACE"," ",18],["T_STRING","Symfony",18],["T_NS_SEPARATOR","\\",18],["T_STRING","Component",18],["T_NS_SEPARATOR","\\",18],["T_STRING","Security",18],["T_NS_SEPARATOR","\\",18],["T_STRING","Core",18],["T_NS_SEPARATOR","\\",18],["T_STRING","Exception",18],["T_NS_SEPARATOR","\\",18],["T_STRING","DisabledException",18],";",["T_WHITESPACE","\n\n",18],["T_DOC_COMMENT","\/**\n * Adds extra features to a user class related to account status flags.\n *\n * This interface can be implemented in place of UserInterface if you'd like\n * the authentication system to consider different account status flags\n * during authentication. If any of the methods in this interface return\n * false, authentication will fail.\n *\n * If you need to perform custom logic for any of these situations, then\n * you will need to register an exception listener and watch for the specific\n * exception instances thrown in each case. All exceptions are a subclass\n * of AccountStatusException\n *\n * @see UserInterface\n * @see AccountStatusException\n *\n * @author Fabien Potencier <fabien@symfony.com>\n *\/",20],["T_WHITESPACE","\n",37],["T_INTERFACE","interface",38],["T_WHITESPACE"," ",38],["T_STRING","AdvancedUserInterface",38],["T_WHITESPACE"," ",38],["T_EXTENDS","extends",38],["T_WHITESPACE"," ",38],["T_STRING","UserInterface",38],["T_WHITESPACE","\n",38],"{",["T_WHITESPACE","\n    ",39],["T_DOC_COMMENT","\/**\n     * Checks whether the user's account has expired.\n     *\n     * Internally, if this method returns false, the authentication system\n     * will throw an AccountExpiredException and prevent login.\n     *\n     * @return bool true if the user's account is non expired, false otherwise\n     *\n     * @see AccountExpiredException\n     *\/",40],["T_WHITESPACE","\n    ",49],["T_PUBLIC","public",50],["T_WHITESPACE"," ",50],["T_FUNCTION","function",50],["T_WHITESPACE"," ",50],["T_STRING","isAccountNonExpired",50],"(",")",";",["T_WHITESPACE","\n\n    ",50],["T_DOC_COMMENT","\/**\n     * Checks whether the user is locked.\n     *\n     * Internally, if this method returns false, the authentication system\n     * will throw a LockedException and prevent login.\n     *\n     * @return bool true if the user is not locked, false otherwise\n     *\n     * @see LockedException\n     *\/",52],["T_WHITESPACE","\n    ",61],["T_PUBLIC","public",62],["T_WHITESPACE"," ",62],["T_FUNCTION","function",62],["T_WHITESPACE"," ",62],["T_STRING","isAccountNonLocked",62],"(",")",";",["T_WHITESPACE","\n\n    ",62],["T_DOC_COMMENT","\/**\n     * Checks whether the user's credentials (password) has expired.\n     *\n     * Internally, if this method returns false, the authentication system\n     * will throw a CredentialsExpiredException and prevent login.\n     *\n     * @return bool true if the user's credentials are non expired, false otherwise\n     *\n     * @see CredentialsExpiredException\n     *\/",64],["T_WHITESPACE","\n    ",73],["T_PUBLIC","public",74],["T_WHITESPACE"," ",74],["T_FUNCTION","function",74],["T_WHITESPACE"," ",74],["T_STRING","isCredentialsNonExpired",74],"(",")",";",["T_WHITESPACE","\n\n    ",74],["T_DOC_COMMENT","\/**\n     * Checks whether the user is enabled.\n     *\n     * Internally, if this method returns false, the authentication system\n     * will throw a DisabledException and prevent login.\n     *\n     * @return bool true if the user is enabled, false otherwise\n     *\n     * @see DisabledException\n     *\/",76],["T_WHITESPACE","\n    ",85],["T_PUBLIC","public",86],["T_WHITESPACE"," ",86],["T_FUNCTION","function",86],["T_WHITESPACE"," ",86],["T_STRING","isEnabled",86],"(",")",";",["T_WHITESPACE","\n",86],"}",["T_WHITESPACE","\n",87]]