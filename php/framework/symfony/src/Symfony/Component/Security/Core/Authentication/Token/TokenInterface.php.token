[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_COMMENT","\/*\n * This file is part of the Symfony package.\n *\n * (c) Fabien Potencier <fabien@symfony.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\/",3],["T_WHITESPACE","\n\n",10],["T_NAMESPACE","namespace",12],["T_WHITESPACE"," ",12],["T_STRING","Symfony",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Component",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Security",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Core",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Authentication",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Token",12],";",["T_WHITESPACE","\n\n",12],["T_USE","use",14],["T_WHITESPACE"," ",14],["T_STRING","Symfony",14],["T_NS_SEPARATOR","\\",14],["T_STRING","Component",14],["T_NS_SEPARATOR","\\",14],["T_STRING","Security",14],["T_NS_SEPARATOR","\\",14],["T_STRING","Core",14],["T_NS_SEPARATOR","\\",14],["T_STRING","Role",14],["T_NS_SEPARATOR","\\",14],["T_STRING","RoleInterface",14],";",["T_WHITESPACE","\n\n",14],["T_DOC_COMMENT","\/**\n * TokenInterface is the interface for the user authentication information.\n *\n * @author Fabien Potencier <fabien@symfony.com>\n * @author Johannes M. Schmitt <schmittjoh@gmail.com>\n *\/",16],["T_WHITESPACE","\n",21],["T_INTERFACE","interface",22],["T_WHITESPACE"," ",22],["T_STRING","TokenInterface",22],["T_WHITESPACE"," ",22],["T_EXTENDS","extends",22],["T_WHITESPACE"," ",22],["T_NS_SEPARATOR","\\",22],["T_STRING","Serializable",22],["T_WHITESPACE","\n",22],"{",["T_WHITESPACE","\n    ",23],["T_DOC_COMMENT","\/**\n     * Returns a string representation of the Token.\n     *\n     * This is only to be used for debugging purposes.\n     *\n     * @return string\n     *\/",24],["T_WHITESPACE","\n    ",30],["T_PUBLIC","public",31],["T_WHITESPACE"," ",31],["T_FUNCTION","function",31],["T_WHITESPACE"," ",31],["T_STRING","__toString",31],"(",")",";",["T_WHITESPACE","\n\n    ",31],["T_DOC_COMMENT","\/**\n     * Returns the user roles.\n     *\n     * @return RoleInterface[] An array of RoleInterface instances\n     *\/",33],["T_WHITESPACE","\n    ",37],["T_PUBLIC","public",38],["T_WHITESPACE"," ",38],["T_FUNCTION","function",38],["T_WHITESPACE"," ",38],["T_STRING","getRoles",38],"(",")",";",["T_WHITESPACE","\n\n    ",38],["T_DOC_COMMENT","\/**\n     * Returns the user credentials.\n     *\n     * @return mixed The user credentials\n     *\/",40],["T_WHITESPACE","\n    ",44],["T_PUBLIC","public",45],["T_WHITESPACE"," ",45],["T_FUNCTION","function",45],["T_WHITESPACE"," ",45],["T_STRING","getCredentials",45],"(",")",";",["T_WHITESPACE","\n\n    ",45],["T_DOC_COMMENT","\/**\n     * Returns a user representation.\n     *\n     * @return mixed Can be a UserInterface instance, an object implementing a __toString method,\n     *               or the username as a regular string\n     *\n     * @see AbstractToken::setUser()\n     *\/",47],["T_WHITESPACE","\n    ",54],["T_PUBLIC","public",55],["T_WHITESPACE"," ",55],["T_FUNCTION","function",55],["T_WHITESPACE"," ",55],["T_STRING","getUser",55],"(",")",";",["T_WHITESPACE","\n\n    ",55],["T_DOC_COMMENT","\/**\n     * Sets a user.\n     *\n     * @param mixed $user\n     *\/",57],["T_WHITESPACE","\n    ",61],["T_PUBLIC","public",62],["T_WHITESPACE"," ",62],["T_FUNCTION","function",62],["T_WHITESPACE"," ",62],["T_STRING","setUser",62],"(",["T_VARIABLE","$user",62],")",";",["T_WHITESPACE","\n\n    ",62],["T_DOC_COMMENT","\/**\n     * Returns the username.\n     *\n     * @return string\n     *\/",64],["T_WHITESPACE","\n    ",68],["T_PUBLIC","public",69],["T_WHITESPACE"," ",69],["T_FUNCTION","function",69],["T_WHITESPACE"," ",69],["T_STRING","getUsername",69],"(",")",";",["T_WHITESPACE","\n\n    ",69],["T_DOC_COMMENT","\/**\n     * Returns whether the user is authenticated or not.\n     *\n     * @return bool true if the token has been authenticated, false otherwise\n     *\/",71],["T_WHITESPACE","\n    ",75],["T_PUBLIC","public",76],["T_WHITESPACE"," ",76],["T_FUNCTION","function",76],["T_WHITESPACE"," ",76],["T_STRING","isAuthenticated",76],"(",")",";",["T_WHITESPACE","\n\n    ",76],["T_DOC_COMMENT","\/**\n     * Sets the authenticated flag.\n     *\n     * @param bool $isAuthenticated The authenticated flag\n     *\/",78],["T_WHITESPACE","\n    ",82],["T_PUBLIC","public",83],["T_WHITESPACE"," ",83],["T_FUNCTION","function",83],["T_WHITESPACE"," ",83],["T_STRING","setAuthenticated",83],"(",["T_VARIABLE","$isAuthenticated",83],")",";",["T_WHITESPACE","\n\n    ",83],["T_DOC_COMMENT","\/**\n     * Removes sensitive information from the token.\n     *\/",85],["T_WHITESPACE","\n    ",87],["T_PUBLIC","public",88],["T_WHITESPACE"," ",88],["T_FUNCTION","function",88],["T_WHITESPACE"," ",88],["T_STRING","eraseCredentials",88],"(",")",";",["T_WHITESPACE","\n\n    ",88],["T_DOC_COMMENT","\/**\n     * Returns the token attributes.\n     *\n     * @return array The token attributes\n     *\/",90],["T_WHITESPACE","\n    ",94],["T_PUBLIC","public",95],["T_WHITESPACE"," ",95],["T_FUNCTION","function",95],["T_WHITESPACE"," ",95],["T_STRING","getAttributes",95],"(",")",";",["T_WHITESPACE","\n\n    ",95],["T_DOC_COMMENT","\/**\n     * Sets the token attributes.\n     *\n     * @param array $attributes The token attributes\n     *\/",97],["T_WHITESPACE","\n    ",101],["T_PUBLIC","public",102],["T_WHITESPACE"," ",102],["T_FUNCTION","function",102],["T_WHITESPACE"," ",102],["T_STRING","setAttributes",102],"(",["T_ARRAY","array",102],["T_WHITESPACE"," ",102],["T_VARIABLE","$attributes",102],")",";",["T_WHITESPACE","\n\n    ",102],["T_DOC_COMMENT","\/**\n     * Returns true if the attribute exists.\n     *\n     * @param string $name The attribute name\n     *\n     * @return bool true if the attribute exists, false otherwise\n     *\/",104],["T_WHITESPACE","\n    ",110],["T_PUBLIC","public",111],["T_WHITESPACE"," ",111],["T_FUNCTION","function",111],["T_WHITESPACE"," ",111],["T_STRING","hasAttribute",111],"(",["T_VARIABLE","$name",111],")",";",["T_WHITESPACE","\n\n    ",111],["T_DOC_COMMENT","\/**\n     * Returns an attribute value.\n     *\n     * @param string $name The attribute name\n     *\n     * @return mixed The attribute value\n     *\n     * @throws \\InvalidArgumentException When attribute doesn't exist for this token\n     *\/",113],["T_WHITESPACE","\n    ",121],["T_PUBLIC","public",122],["T_WHITESPACE"," ",122],["T_FUNCTION","function",122],["T_WHITESPACE"," ",122],["T_STRING","getAttribute",122],"(",["T_VARIABLE","$name",122],")",";",["T_WHITESPACE","\n\n    ",122],["T_DOC_COMMENT","\/**\n     * Sets an attribute.\n     *\n     * @param string $name  The attribute name\n     * @param mixed  $value The attribute value\n     *\/",124],["T_WHITESPACE","\n    ",129],["T_PUBLIC","public",130],["T_WHITESPACE"," ",130],["T_FUNCTION","function",130],["T_WHITESPACE"," ",130],["T_STRING","setAttribute",130],"(",["T_VARIABLE","$name",130],",",["T_WHITESPACE"," ",130],["T_VARIABLE","$value",130],")",";",["T_WHITESPACE","\n",130],"}",["T_WHITESPACE","\n",131]]