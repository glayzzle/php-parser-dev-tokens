[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_COMMENT","\/*\n * This file is part of the Symfony package.\n *\n * (c) Fabien Potencier <fabien@symfony.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\/",3],["T_WHITESPACE","\n\n",10],["T_NAMESPACE","namespace",12],["T_WHITESPACE"," ",12],["T_STRING","Symfony",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Component",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Security",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Core",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Authentication",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Provider",12],";",["T_WHITESPACE","\n\n",12],["T_USE","use",14],["T_WHITESPACE"," ",14],["T_STRING","Symfony",14],["T_NS_SEPARATOR","\\",14],["T_STRING","Component",14],["T_NS_SEPARATOR","\\",14],["T_STRING","Security",14],["T_NS_SEPARATOR","\\",14],["T_STRING","Core",14],["T_NS_SEPARATOR","\\",14],["T_STRING","Authentication",14],["T_NS_SEPARATOR","\\",14],["T_STRING","Token",14],["T_NS_SEPARATOR","\\",14],["T_STRING","TokenInterface",14],";",["T_WHITESPACE","\n",14],["T_USE","use",15],["T_WHITESPACE"," ",15],["T_STRING","Symfony",15],["T_NS_SEPARATOR","\\",15],["T_STRING","Component",15],["T_NS_SEPARATOR","\\",15],["T_STRING","Security",15],["T_NS_SEPARATOR","\\",15],["T_STRING","Core",15],["T_NS_SEPARATOR","\\",15],["T_STRING","Authentication",15],["T_NS_SEPARATOR","\\",15],["T_STRING","AuthenticationManagerInterface",15],";",["T_WHITESPACE","\n\n",15],["T_DOC_COMMENT","\/**\n * AuthenticationProviderInterface is the interface for all authentication\n * providers.\n *\n * Concrete implementations processes specific Token instances.\n *\n * @author Fabien Potencier <fabien@symfony.com>\n *\/",17],["T_WHITESPACE","\n",24],["T_INTERFACE","interface",25],["T_WHITESPACE"," ",25],["T_STRING","AuthenticationProviderInterface",25],["T_WHITESPACE"," ",25],["T_EXTENDS","extends",25],["T_WHITESPACE"," ",25],["T_STRING","AuthenticationManagerInterface",25],["T_WHITESPACE","\n",25],"{",["T_WHITESPACE","\n    ",26],["T_DOC_COMMENT","\/**\n     * Use this constant for not provided username.\n     *\n     * @var string\n     *\/",27],["T_WHITESPACE","\n    ",31],["T_CONST","const",32],["T_WHITESPACE"," ",32],["T_STRING","USERNAME_NONE_PROVIDED",32],["T_WHITESPACE"," ",32],"=",["T_WHITESPACE"," ",32],["T_CONSTANT_ENCAPSED_STRING","'NONE_PROVIDED'",32],";",["T_WHITESPACE","\n\n    ",32],["T_DOC_COMMENT","\/**\n     * Checks whether this provider supports the given token.\n     *\n     * @param TokenInterface $token A TokenInterface instance\n     *\n     * @return bool true if the implementation supports the Token, false otherwise\n     *\/",34],["T_WHITESPACE","\n    ",40],["T_PUBLIC","public",41],["T_WHITESPACE"," ",41],["T_FUNCTION","function",41],["T_WHITESPACE"," ",41],["T_STRING","supports",41],"(",["T_STRING","TokenInterface",41],["T_WHITESPACE"," ",41],["T_VARIABLE","$token",41],")",";",["T_WHITESPACE","\n",41],"}",["T_WHITESPACE","\n",42]]