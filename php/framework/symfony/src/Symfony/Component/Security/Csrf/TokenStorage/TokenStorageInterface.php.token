[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_COMMENT","\/*\n * This file is part of the Symfony package.\n *\n * (c) Fabien Potencier <fabien@symfony.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\/",3],["T_WHITESPACE","\n\n",10],["T_NAMESPACE","namespace",12],["T_WHITESPACE"," ",12],["T_STRING","Symfony",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Component",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Security",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Csrf",12],["T_NS_SEPARATOR","\\",12],["T_STRING","TokenStorage",12],";",["T_WHITESPACE","\n\n",12],["T_DOC_COMMENT","\/**\n * Stores CSRF tokens.\n *\n * @author Bernhard Schussek <bschussek@gmail.com>\n *\/",14],["T_WHITESPACE","\n",18],["T_INTERFACE","interface",19],["T_WHITESPACE"," ",19],["T_STRING","TokenStorageInterface",19],["T_WHITESPACE","\n",19],"{",["T_WHITESPACE","\n    ",20],["T_DOC_COMMENT","\/**\n     * Reads a stored CSRF token.\n     *\n     * @param string $tokenId The token ID\n     *\n     * @return string The stored token\n     *\n     * @throws \\Symfony\\Component\\Security\\Csrf\\Exception\\TokenNotFoundException If the token ID does not exist\n     *\/",21],["T_WHITESPACE","\n    ",29],["T_PUBLIC","public",30],["T_WHITESPACE"," ",30],["T_FUNCTION","function",30],["T_WHITESPACE"," ",30],["T_STRING","getToken",30],"(",["T_VARIABLE","$tokenId",30],")",";",["T_WHITESPACE","\n\n    ",30],["T_DOC_COMMENT","\/**\n     * Stores a CSRF token.\n     *\n     * @param string $tokenId The token ID\n     * @param string $token   The CSRF token\n     *\/",32],["T_WHITESPACE","\n    ",37],["T_PUBLIC","public",38],["T_WHITESPACE"," ",38],["T_FUNCTION","function",38],["T_WHITESPACE"," ",38],["T_STRING","setToken",38],"(",["T_VARIABLE","$tokenId",38],",",["T_WHITESPACE"," ",38],["T_VARIABLE","$token",38],")",";",["T_WHITESPACE","\n\n    ",38],["T_DOC_COMMENT","\/**\n     * Removes a CSRF token.\n     *\n     * @param string $tokenId The token ID\n     *\n     * @return string|null Returns the removed token if one existed, NULL\n     *                     otherwise\n     *\/",40],["T_WHITESPACE","\n    ",47],["T_PUBLIC","public",48],["T_WHITESPACE"," ",48],["T_FUNCTION","function",48],["T_WHITESPACE"," ",48],["T_STRING","removeToken",48],"(",["T_VARIABLE","$tokenId",48],")",";",["T_WHITESPACE","\n\n    ",48],["T_DOC_COMMENT","\/**\n     * Checks whether a token with the given token ID exists.\n     *\n     * @param string $tokenId The token ID\n     *\n     * @return bool Whether a token exists with the given ID\n     *\/",50],["T_WHITESPACE","\n    ",56],["T_PUBLIC","public",57],["T_WHITESPACE"," ",57],["T_FUNCTION","function",57],["T_WHITESPACE"," ",57],["T_STRING","hasToken",57],"(",["T_VARIABLE","$tokenId",57],")",";",["T_WHITESPACE","\n",57],"}",["T_WHITESPACE","\n",58]]