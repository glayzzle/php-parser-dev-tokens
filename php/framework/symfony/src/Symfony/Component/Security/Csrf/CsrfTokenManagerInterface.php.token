[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_COMMENT","\/*\n * This file is part of the Symfony package.\n *\n * (c) Fabien Potencier <fabien@symfony.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\/",3],["T_WHITESPACE","\n\n",10],["T_NAMESPACE","namespace",12],["T_WHITESPACE"," ",12],["T_STRING","Symfony",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Component",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Security",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Csrf",12],";",["T_WHITESPACE","\n\n",12],["T_DOC_COMMENT","\/**\n * Manages CSRF tokens.\n *\n * @author Bernhard Schussek <bschussek@gmail.com>\n *\/",14],["T_WHITESPACE","\n",18],["T_INTERFACE","interface",19],["T_WHITESPACE"," ",19],["T_STRING","CsrfTokenManagerInterface",19],["T_WHITESPACE","\n",19],"{",["T_WHITESPACE","\n    ",20],["T_DOC_COMMENT","\/**\n     * Returns a CSRF token for the given ID.\n     *\n     * If previously no token existed for the given ID, a new token is\n     * generated. Otherwise the existing token is returned (with the same value,\n     * not the same instance).\n     *\n     * @param string $tokenId The token ID. You may choose an arbitrary value\n     *                        for the ID\n     *\n     * @return CsrfToken The CSRF token\n     *\/",21],["T_WHITESPACE","\n    ",32],["T_PUBLIC","public",33],["T_WHITESPACE"," ",33],["T_FUNCTION","function",33],["T_WHITESPACE"," ",33],["T_STRING","getToken",33],"(",["T_VARIABLE","$tokenId",33],")",";",["T_WHITESPACE","\n\n    ",33],["T_DOC_COMMENT","\/**\n     * Generates a new token value for the given ID.\n     *\n     * This method will generate a new token for the given token ID, independent\n     * of whether a token value previously existed or not. It can be used to\n     * enforce once-only tokens in environments with high security needs.\n     *\n     * @param string $tokenId The token ID. You may choose an arbitrary value\n     *                        for the ID\n     *\n     * @return CsrfToken The CSRF token\n     *\/",35],["T_WHITESPACE","\n    ",46],["T_PUBLIC","public",47],["T_WHITESPACE"," ",47],["T_FUNCTION","function",47],["T_WHITESPACE"," ",47],["T_STRING","refreshToken",47],"(",["T_VARIABLE","$tokenId",47],")",";",["T_WHITESPACE","\n\n    ",47],["T_DOC_COMMENT","\/**\n     * Invalidates the CSRF token with the given ID, if one exists.\n     *\n     * @param string $tokenId The token ID\n     *\n     * @return string|null Returns the removed token value if one existed, NULL\n     *                     otherwise\n     *\/",49],["T_WHITESPACE","\n    ",56],["T_PUBLIC","public",57],["T_WHITESPACE"," ",57],["T_FUNCTION","function",57],["T_WHITESPACE"," ",57],["T_STRING","removeToken",57],"(",["T_VARIABLE","$tokenId",57],")",";",["T_WHITESPACE","\n\n    ",57],["T_DOC_COMMENT","\/**\n     * Returns whether the given CSRF token is valid.\n     *\n     * @param CsrfToken $token A CSRF token\n     *\n     * @return bool Returns true if the token is valid, false otherwise\n     *\/",59],["T_WHITESPACE","\n    ",65],["T_PUBLIC","public",66],["T_WHITESPACE"," ",66],["T_FUNCTION","function",66],["T_WHITESPACE"," ",66],["T_STRING","isTokenValid",66],"(",["T_STRING","CsrfToken",66],["T_WHITESPACE"," ",66],["T_VARIABLE","$token",66],")",";",["T_WHITESPACE","\n",66],"}",["T_WHITESPACE","\n",67]]