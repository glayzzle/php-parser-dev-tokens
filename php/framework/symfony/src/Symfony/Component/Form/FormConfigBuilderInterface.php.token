[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_COMMENT","\/*\n * This file is part of the Symfony package.\n *\n * (c) Fabien Potencier <fabien@symfony.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\/",3],["T_WHITESPACE","\n\n",10],["T_NAMESPACE","namespace",12],["T_WHITESPACE"," ",12],["T_STRING","Symfony",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Component",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Form",12],";",["T_WHITESPACE","\n\n",12],["T_USE","use",14],["T_WHITESPACE"," ",14],["T_STRING","Symfony",14],["T_NS_SEPARATOR","\\",14],["T_STRING","Component",14],["T_NS_SEPARATOR","\\",14],["T_STRING","EventDispatcher",14],["T_NS_SEPARATOR","\\",14],["T_STRING","EventSubscriberInterface",14],";",["T_WHITESPACE","\n",14],["T_USE","use",15],["T_WHITESPACE"," ",15],["T_STRING","Symfony",15],["T_NS_SEPARATOR","\\",15],["T_STRING","Component",15],["T_NS_SEPARATOR","\\",15],["T_STRING","PropertyAccess",15],["T_NS_SEPARATOR","\\",15],["T_STRING","PropertyPathInterface",15],";",["T_WHITESPACE","\n\n",15],["T_DOC_COMMENT","\/**\n * @author Bernhard Schussek <bschussek@gmail.com>\n *\/",17],["T_WHITESPACE","\n",19],["T_INTERFACE","interface",20],["T_WHITESPACE"," ",20],["T_STRING","FormConfigBuilderInterface",20],["T_WHITESPACE"," ",20],["T_EXTENDS","extends",20],["T_WHITESPACE"," ",20],["T_STRING","FormConfigInterface",20],["T_WHITESPACE","\n",20],"{",["T_WHITESPACE","\n    ",21],["T_DOC_COMMENT","\/**\n     * Adds an event listener to an event on this form.\n     *\n     * @param string   $eventName The name of the event to listen to\n     * @param callable $listener  The listener to execute\n     * @param int      $priority  The priority of the listener. Listeners\n     *                            with a higher priority are called before\n     *                            listeners with a lower priority.\n     *\n     * @return $this The configuration object\n     *\/",22],["T_WHITESPACE","\n    ",32],["T_PUBLIC","public",33],["T_WHITESPACE"," ",33],["T_FUNCTION","function",33],["T_WHITESPACE"," ",33],["T_STRING","addEventListener",33],"(",["T_VARIABLE","$eventName",33],",",["T_WHITESPACE"," ",33],["T_VARIABLE","$listener",33],",",["T_WHITESPACE"," ",33],["T_VARIABLE","$priority",33],["T_WHITESPACE"," ",33],"=",["T_WHITESPACE"," ",33],["T_LNUMBER","0",33],")",";",["T_WHITESPACE","\n\n    ",33],["T_DOC_COMMENT","\/**\n     * Adds an event subscriber for events on this form.\n     *\n     * @param EventSubscriberInterface $subscriber The subscriber to attach\n     *\n     * @return $this The configuration object\n     *\/",35],["T_WHITESPACE","\n    ",41],["T_PUBLIC","public",42],["T_WHITESPACE"," ",42],["T_FUNCTION","function",42],["T_WHITESPACE"," ",42],["T_STRING","addEventSubscriber",42],"(",["T_STRING","EventSubscriberInterface",42],["T_WHITESPACE"," ",42],["T_VARIABLE","$subscriber",42],")",";",["T_WHITESPACE","\n\n    ",42],["T_DOC_COMMENT","\/**\n     * Appends \/ prepends a transformer to the view transformer chain.\n     *\n     * The transform method of the transformer is used to convert data from the\n     * normalized to the view format.\n     * The reverseTransform method of the transformer is used to convert from the\n     * view to the normalized format.\n     *\n     * @param DataTransformerInterface $viewTransformer\n     * @param bool                     $forcePrepend    if set to true, prepend instead of appending\n     *\n     * @return $this The configuration object\n     *\/",44],["T_WHITESPACE","\n    ",56],["T_PUBLIC","public",57],["T_WHITESPACE"," ",57],["T_FUNCTION","function",57],["T_WHITESPACE"," ",57],["T_STRING","addViewTransformer",57],"(",["T_STRING","DataTransformerInterface",57],["T_WHITESPACE"," ",57],["T_VARIABLE","$viewTransformer",57],",",["T_WHITESPACE"," ",57],["T_VARIABLE","$forcePrepend",57],["T_WHITESPACE"," ",57],"=",["T_WHITESPACE"," ",57],["T_STRING","false",57],")",";",["T_WHITESPACE","\n\n    ",57],["T_DOC_COMMENT","\/**\n     * Clears the view transformers.\n     *\n     * @return $this The configuration object\n     *\/",59],["T_WHITESPACE","\n    ",63],["T_PUBLIC","public",64],["T_WHITESPACE"," ",64],["T_FUNCTION","function",64],["T_WHITESPACE"," ",64],["T_STRING","resetViewTransformers",64],"(",")",";",["T_WHITESPACE","\n\n    ",64],["T_DOC_COMMENT","\/**\n     * Prepends \/ appends a transformer to the normalization transformer chain.\n     *\n     * The transform method of the transformer is used to convert data from the\n     * model to the normalized format.\n     * The reverseTransform method of the transformer is used to convert from the\n     * normalized to the model format.\n     *\n     * @param DataTransformerInterface $modelTransformer\n     * @param bool                     $forceAppend      if set to true, append instead of prepending\n     *\n     * @return $this The configuration object\n     *\/",66],["T_WHITESPACE","\n    ",78],["T_PUBLIC","public",79],["T_WHITESPACE"," ",79],["T_FUNCTION","function",79],["T_WHITESPACE"," ",79],["T_STRING","addModelTransformer",79],"(",["T_STRING","DataTransformerInterface",79],["T_WHITESPACE"," ",79],["T_VARIABLE","$modelTransformer",79],",",["T_WHITESPACE"," ",79],["T_VARIABLE","$forceAppend",79],["T_WHITESPACE"," ",79],"=",["T_WHITESPACE"," ",79],["T_STRING","false",79],")",";",["T_WHITESPACE","\n\n    ",79],["T_DOC_COMMENT","\/**\n     * Clears the normalization transformers.\n     *\n     * @return $this The configuration object\n     *\/",81],["T_WHITESPACE","\n    ",85],["T_PUBLIC","public",86],["T_WHITESPACE"," ",86],["T_FUNCTION","function",86],["T_WHITESPACE"," ",86],["T_STRING","resetModelTransformers",86],"(",")",";",["T_WHITESPACE","\n\n    ",86],["T_DOC_COMMENT","\/**\n     * Sets the value for an attribute.\n     *\n     * @param string $name  The name of the attribute\n     * @param mixed  $value The value of the attribute\n     *\n     * @return $this The configuration object\n     *\/",88],["T_WHITESPACE","\n    ",95],["T_PUBLIC","public",96],["T_WHITESPACE"," ",96],["T_FUNCTION","function",96],["T_WHITESPACE"," ",96],["T_STRING","setAttribute",96],"(",["T_VARIABLE","$name",96],",",["T_WHITESPACE"," ",96],["T_VARIABLE","$value",96],")",";",["T_WHITESPACE","\n\n    ",96],["T_DOC_COMMENT","\/**\n     * Sets the attributes.\n     *\n     * @param array $attributes The attributes\n     *\n     * @return $this The configuration object\n     *\/",98],["T_WHITESPACE","\n    ",104],["T_PUBLIC","public",105],["T_WHITESPACE"," ",105],["T_FUNCTION","function",105],["T_WHITESPACE"," ",105],["T_STRING","setAttributes",105],"(",["T_ARRAY","array",105],["T_WHITESPACE"," ",105],["T_VARIABLE","$attributes",105],")",";",["T_WHITESPACE","\n\n    ",105],["T_DOC_COMMENT","\/**\n     * Sets the data mapper used by the form.\n     *\n     * @param DataMapperInterface $dataMapper\n     *\n     * @return $this The configuration object\n     *\/",107],["T_WHITESPACE","\n    ",113],["T_PUBLIC","public",114],["T_WHITESPACE"," ",114],["T_FUNCTION","function",114],["T_WHITESPACE"," ",114],["T_STRING","setDataMapper",114],"(",["T_STRING","DataMapperInterface",114],["T_WHITESPACE"," ",114],["T_VARIABLE","$dataMapper",114],["T_WHITESPACE"," ",114],"=",["T_WHITESPACE"," ",114],["T_STRING","null",114],")",";",["T_WHITESPACE","\n\n    ",114],["T_DOC_COMMENT","\/**\n     * Set whether the form is disabled.\n     *\n     * @param bool $disabled Whether the form is disabled\n     *\n     * @return $this The configuration object\n     *\/",116],["T_WHITESPACE","\n    ",122],["T_PUBLIC","public",123],["T_WHITESPACE"," ",123],["T_FUNCTION","function",123],["T_WHITESPACE"," ",123],["T_STRING","setDisabled",123],"(",["T_VARIABLE","$disabled",123],")",";",["T_WHITESPACE","\n\n    ",123],["T_DOC_COMMENT","\/**\n     * Sets the data used for the client data when no value is submitted.\n     *\n     * @param mixed $emptyData The empty data\n     *\n     * @return $this The configuration object\n     *\/",125],["T_WHITESPACE","\n    ",131],["T_PUBLIC","public",132],["T_WHITESPACE"," ",132],["T_FUNCTION","function",132],["T_WHITESPACE"," ",132],["T_STRING","setEmptyData",132],"(",["T_VARIABLE","$emptyData",132],")",";",["T_WHITESPACE","\n\n    ",132],["T_DOC_COMMENT","\/**\n     * Sets whether errors bubble up to the parent.\n     *\n     * @param bool $errorBubbling\n     *\n     * @return $this The configuration object\n     *\/",134],["T_WHITESPACE","\n    ",140],["T_PUBLIC","public",141],["T_WHITESPACE"," ",141],["T_FUNCTION","function",141],["T_WHITESPACE"," ",141],["T_STRING","setErrorBubbling",141],"(",["T_VARIABLE","$errorBubbling",141],")",";",["T_WHITESPACE","\n\n    ",141],["T_DOC_COMMENT","\/**\n     * Sets whether this field is required to be filled out when submitted.\n     *\n     * @param bool $required\n     *\n     * @return $this The configuration object\n     *\/",143],["T_WHITESPACE","\n    ",149],["T_PUBLIC","public",150],["T_WHITESPACE"," ",150],["T_FUNCTION","function",150],["T_WHITESPACE"," ",150],["T_STRING","setRequired",150],"(",["T_VARIABLE","$required",150],")",";",["T_WHITESPACE","\n\n    ",150],["T_DOC_COMMENT","\/**\n     * Sets the property path that the form should be mapped to.\n     *\n     * @param null|string|PropertyPathInterface $propertyPath\n     *                                                        The property path or null if the path should be set\n     *                                                        automatically based on the form's name.\n     *\n     * @return $this The configuration object\n     *\/",152],["T_WHITESPACE","\n    ",160],["T_PUBLIC","public",161],["T_WHITESPACE"," ",161],["T_FUNCTION","function",161],["T_WHITESPACE"," ",161],["T_STRING","setPropertyPath",161],"(",["T_VARIABLE","$propertyPath",161],")",";",["T_WHITESPACE","\n\n    ",161],["T_DOC_COMMENT","\/**\n     * Sets whether the form should be mapped to an element of its\n     * parent's data.\n     *\n     * @param bool $mapped Whether the form should be mapped\n     *\n     * @return $this The configuration object\n     *\/",163],["T_WHITESPACE","\n    ",170],["T_PUBLIC","public",171],["T_WHITESPACE"," ",171],["T_FUNCTION","function",171],["T_WHITESPACE"," ",171],["T_STRING","setMapped",171],"(",["T_VARIABLE","$mapped",171],")",";",["T_WHITESPACE","\n\n    ",171],["T_DOC_COMMENT","\/**\n     * Sets whether the form's data should be modified by reference.\n     *\n     * @param bool $byReference Whether the data should be\n     *                          modified by reference.\n     *\n     * @return $this The configuration object\n     *\/",173],["T_WHITESPACE","\n    ",180],["T_PUBLIC","public",181],["T_WHITESPACE"," ",181],["T_FUNCTION","function",181],["T_WHITESPACE"," ",181],["T_STRING","setByReference",181],"(",["T_VARIABLE","$byReference",181],")",";",["T_WHITESPACE","\n\n    ",181],["T_DOC_COMMENT","\/**\n     * Sets whether the form should read and write the data of its parent.\n     *\n     * @param bool $inheritData Whether the form should inherit its parent's data\n     *\n     * @return $this The configuration object\n     *\/",183],["T_WHITESPACE","\n    ",189],["T_PUBLIC","public",190],["T_WHITESPACE"," ",190],["T_FUNCTION","function",190],["T_WHITESPACE"," ",190],["T_STRING","setInheritData",190],"(",["T_VARIABLE","$inheritData",190],")",";",["T_WHITESPACE","\n\n    ",190],["T_DOC_COMMENT","\/**\n     * Sets whether the form should be compound.\n     *\n     * @param bool $compound Whether the form should be compound\n     *\n     * @return $this The configuration object\n     *\n     * @see FormConfigInterface::getCompound()\n     *\/",192],["T_WHITESPACE","\n    ",200],["T_PUBLIC","public",201],["T_WHITESPACE"," ",201],["T_FUNCTION","function",201],["T_WHITESPACE"," ",201],["T_STRING","setCompound",201],"(",["T_VARIABLE","$compound",201],")",";",["T_WHITESPACE","\n\n    ",201],["T_DOC_COMMENT","\/**\n     * Set the types.\n     *\n     * @param ResolvedFormTypeInterface $type The type of the form\n     *\n     * @return $this The configuration object\n     *\/",203],["T_WHITESPACE","\n    ",209],["T_PUBLIC","public",210],["T_WHITESPACE"," ",210],["T_FUNCTION","function",210],["T_WHITESPACE"," ",210],["T_STRING","setType",210],"(",["T_STRING","ResolvedFormTypeInterface",210],["T_WHITESPACE"," ",210],["T_VARIABLE","$type",210],")",";",["T_WHITESPACE","\n\n    ",210],["T_DOC_COMMENT","\/**\n     * Sets the initial data of the form.\n     *\n     * @param mixed $data The data of the form in application format\n     *\n     * @return $this The configuration object\n     *\/",212],["T_WHITESPACE","\n    ",218],["T_PUBLIC","public",219],["T_WHITESPACE"," ",219],["T_FUNCTION","function",219],["T_WHITESPACE"," ",219],["T_STRING","setData",219],"(",["T_VARIABLE","$data",219],")",";",["T_WHITESPACE","\n\n    ",219],["T_DOC_COMMENT","\/**\n     * Locks the form's data to the data passed in the configuration.\n     *\n     * A form with locked data is restricted to the data passed in\n     * this configuration. The data can only be modified then by\n     * submitting the form.\n     *\n     * @param bool $locked Whether to lock the default data\n     *\n     * @return $this The configuration object\n     *\/",221],["T_WHITESPACE","\n    ",231],["T_PUBLIC","public",232],["T_WHITESPACE"," ",232],["T_FUNCTION","function",232],["T_WHITESPACE"," ",232],["T_STRING","setDataLocked",232],"(",["T_VARIABLE","$locked",232],")",";",["T_WHITESPACE","\n\n    ",232],["T_DOC_COMMENT","\/**\n     * Sets the form factory used for creating new forms.\n     *\n     * @param FormFactoryInterface $formFactory The form factory\n     *\/",234],["T_WHITESPACE","\n    ",238],["T_PUBLIC","public",239],["T_WHITESPACE"," ",239],["T_FUNCTION","function",239],["T_WHITESPACE"," ",239],["T_STRING","setFormFactory",239],"(",["T_STRING","FormFactoryInterface",239],["T_WHITESPACE"," ",239],["T_VARIABLE","$formFactory",239],")",";",["T_WHITESPACE","\n\n    ",239],["T_DOC_COMMENT","\/**\n     * Sets the target URL of the form.\n     *\n     * @param string $action The target URL of the form\n     *\n     * @return $this The configuration object\n     *\/",241],["T_WHITESPACE","\n    ",247],["T_PUBLIC","public",248],["T_WHITESPACE"," ",248],["T_FUNCTION","function",248],["T_WHITESPACE"," ",248],["T_STRING","setAction",248],"(",["T_VARIABLE","$action",248],")",";",["T_WHITESPACE","\n\n    ",248],["T_DOC_COMMENT","\/**\n     * Sets the HTTP method used by the form.\n     *\n     * @param string $method The HTTP method of the form\n     *\n     * @return $this The configuration object\n     *\/",250],["T_WHITESPACE","\n    ",256],["T_PUBLIC","public",257],["T_WHITESPACE"," ",257],["T_FUNCTION","function",257],["T_WHITESPACE"," ",257],["T_STRING","setMethod",257],"(",["T_VARIABLE","$method",257],")",";",["T_WHITESPACE","\n\n    ",257],["T_DOC_COMMENT","\/**\n     * Sets the request handler used by the form.\n     *\n     * @param RequestHandlerInterface $requestHandler\n     *\n     * @return $this The configuration object\n     *\/",259],["T_WHITESPACE","\n    ",265],["T_PUBLIC","public",266],["T_WHITESPACE"," ",266],["T_FUNCTION","function",266],["T_WHITESPACE"," ",266],["T_STRING","setRequestHandler",266],"(",["T_STRING","RequestHandlerInterface",266],["T_WHITESPACE"," ",266],["T_VARIABLE","$requestHandler",266],")",";",["T_WHITESPACE","\n\n    ",266],["T_DOC_COMMENT","\/**\n     * Sets whether the form should be initialized automatically.\n     *\n     * Should be set to true only for root forms.\n     *\n     * @param bool $initialize True to initialize the form automatically,\n     *                         false to suppress automatic initialization.\n     *                         In the second case, you need to call\n     *                         {@link FormInterface::initialize()} manually.\n     *\n     * @return $this The configuration object\n     *\/",268],["T_WHITESPACE","\n    ",279],["T_PUBLIC","public",280],["T_WHITESPACE"," ",280],["T_FUNCTION","function",280],["T_WHITESPACE"," ",280],["T_STRING","setAutoInitialize",280],"(",["T_VARIABLE","$initialize",280],")",";",["T_WHITESPACE","\n\n    ",280],["T_DOC_COMMENT","\/**\n     * Builds and returns the form configuration.\n     *\n     * @return FormConfigInterface\n     *\/",282],["T_WHITESPACE","\n    ",286],["T_PUBLIC","public",287],["T_WHITESPACE"," ",287],["T_FUNCTION","function",287],["T_WHITESPACE"," ",287],["T_STRING","getFormConfig",287],"(",")",";",["T_WHITESPACE","\n",287],"}",["T_WHITESPACE","\n",288]]