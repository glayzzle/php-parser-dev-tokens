[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_COMMENT","\/*\n * This file is part of the Symfony package.\n *\n * (c) Fabien Potencier <fabien@symfony.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\/",3],["T_WHITESPACE","\n\n",10],["T_NAMESPACE","namespace",12],["T_WHITESPACE"," ",12],["T_STRING","Symfony",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Component",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Form",12],";",["T_WHITESPACE","\n\n",12],["T_DOC_COMMENT","\/**\n * The central registry of the Form component.\n *\n * @author Bernhard Schussek <bschussek@gmail.com>\n *\/",14],["T_WHITESPACE","\n",18],["T_INTERFACE","interface",19],["T_WHITESPACE"," ",19],["T_STRING","FormRegistryInterface",19],["T_WHITESPACE","\n",19],"{",["T_WHITESPACE","\n    ",20],["T_DOC_COMMENT","\/**\n     * Returns a form type by name.\n     *\n     * This methods registers the type extensions from the form extensions.\n     *\n     * @param string $name The name of the type\n     *\n     * @return ResolvedFormTypeInterface The type\n     *\n     * @throws Exception\\InvalidArgumentException if the type can not be retrieved from any extension\n     *\/",21],["T_WHITESPACE","\n    ",31],["T_PUBLIC","public",32],["T_WHITESPACE"," ",32],["T_FUNCTION","function",32],["T_WHITESPACE"," ",32],["T_STRING","getType",32],"(",["T_VARIABLE","$name",32],")",";",["T_WHITESPACE","\n\n    ",32],["T_DOC_COMMENT","\/**\n     * Returns whether the given form type is supported.\n     *\n     * @param string $name The name of the type\n     *\n     * @return bool Whether the type is supported\n     *\/",34],["T_WHITESPACE","\n    ",40],["T_PUBLIC","public",41],["T_WHITESPACE"," ",41],["T_FUNCTION","function",41],["T_WHITESPACE"," ",41],["T_STRING","hasType",41],"(",["T_VARIABLE","$name",41],")",";",["T_WHITESPACE","\n\n    ",41],["T_DOC_COMMENT","\/**\n     * Returns the guesser responsible for guessing types.\n     *\n     * @return FormTypeGuesserInterface|null\n     *\/",43],["T_WHITESPACE","\n    ",47],["T_PUBLIC","public",48],["T_WHITESPACE"," ",48],["T_FUNCTION","function",48],["T_WHITESPACE"," ",48],["T_STRING","getTypeGuesser",48],"(",")",";",["T_WHITESPACE","\n\n    ",48],["T_DOC_COMMENT","\/**\n     * Returns the extensions loaded by the framework.\n     *\n     * @return FormExtensionInterface[]\n     *\/",50],["T_WHITESPACE","\n    ",54],["T_PUBLIC","public",55],["T_WHITESPACE"," ",55],["T_FUNCTION","function",55],["T_WHITESPACE"," ",55],["T_STRING","getExtensions",55],"(",")",";",["T_WHITESPACE","\n",55],"}",["T_WHITESPACE","\n",56]]