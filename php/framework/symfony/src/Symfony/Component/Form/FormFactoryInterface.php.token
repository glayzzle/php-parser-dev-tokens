[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_COMMENT","\/*\n * This file is part of the Symfony package.\n *\n * (c) Fabien Potencier <fabien@symfony.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\/",3],["T_WHITESPACE","\n\n",10],["T_NAMESPACE","namespace",12],["T_WHITESPACE"," ",12],["T_STRING","Symfony",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Component",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Form",12],";",["T_WHITESPACE","\n\n",12],["T_DOC_COMMENT","\/**\n * @author Bernhard Schussek <bschussek@gmail.com>\n *\/",14],["T_WHITESPACE","\n",16],["T_INTERFACE","interface",17],["T_WHITESPACE"," ",17],["T_STRING","FormFactoryInterface",17],["T_WHITESPACE","\n",17],"{",["T_WHITESPACE","\n    ",18],["T_DOC_COMMENT","\/**\n     * Returns a form.\n     *\n     * @see createBuilder()\n     *\n     * @param string $type    The type of the form\n     * @param mixed  $data    The initial data\n     * @param array  $options The options\n     *\n     * @return FormInterface The form named after the type\n     *\n     * @throws \\Symfony\\Component\\OptionsResolver\\Exception\\InvalidOptionsException if any given option is not applicable to the given type\n     *\/",19],["T_WHITESPACE","\n    ",31],["T_PUBLIC","public",32],["T_WHITESPACE"," ",32],["T_FUNCTION","function",32],["T_WHITESPACE"," ",32],["T_STRING","create",32],"(",["T_VARIABLE","$type",32],["T_WHITESPACE"," ",32],"=",["T_WHITESPACE"," ",32],["T_CONSTANT_ENCAPSED_STRING","'Symfony\\Component\\Form\\Extension\\Core\\Type\\FormType'",32],",",["T_WHITESPACE"," ",32],["T_VARIABLE","$data",32],["T_WHITESPACE"," ",32],"=",["T_WHITESPACE"," ",32],["T_STRING","null",32],",",["T_WHITESPACE"," ",32],["T_ARRAY","array",32],["T_WHITESPACE"," ",32],["T_VARIABLE","$options",32],["T_WHITESPACE"," ",32],"=",["T_WHITESPACE"," ",32],["T_ARRAY","array",32],"(",")",")",";",["T_WHITESPACE","\n\n    ",32],["T_DOC_COMMENT","\/**\n     * Returns a form.\n     *\n     * @see createNamedBuilder()\n     *\n     * @param string|int $name    The name of the form\n     * @param string     $type    The type of the form\n     * @param mixed      $data    The initial data\n     * @param array      $options The options\n     *\n     * @return FormInterface The form\n     *\n     * @throws \\Symfony\\Component\\OptionsResolver\\Exception\\InvalidOptionsException if any given option is not applicable to the given type\n     *\/",34],["T_WHITESPACE","\n    ",47],["T_PUBLIC","public",48],["T_WHITESPACE"," ",48],["T_FUNCTION","function",48],["T_WHITESPACE"," ",48],["T_STRING","createNamed",48],"(",["T_VARIABLE","$name",48],",",["T_WHITESPACE"," ",48],["T_VARIABLE","$type",48],["T_WHITESPACE"," ",48],"=",["T_WHITESPACE"," ",48],["T_CONSTANT_ENCAPSED_STRING","'Symfony\\Component\\Form\\Extension\\Core\\Type\\FormType'",48],",",["T_WHITESPACE"," ",48],["T_VARIABLE","$data",48],["T_WHITESPACE"," ",48],"=",["T_WHITESPACE"," ",48],["T_STRING","null",48],",",["T_WHITESPACE"," ",48],["T_ARRAY","array",48],["T_WHITESPACE"," ",48],["T_VARIABLE","$options",48],["T_WHITESPACE"," ",48],"=",["T_WHITESPACE"," ",48],["T_ARRAY","array",48],"(",")",")",";",["T_WHITESPACE","\n\n    ",48],["T_DOC_COMMENT","\/**\n     * Returns a form for a property of a class.\n     *\n     * @see createBuilderForProperty()\n     *\n     * @param string $class    The fully qualified class name\n     * @param string $property The name of the property to guess for\n     * @param mixed  $data     The initial data\n     * @param array  $options  The options for the builder\n     *\n     * @return FormInterface The form named after the property\n     *\n     * @throws \\Symfony\\Component\\OptionsResolver\\Exception\\InvalidOptionsException if any given option is not applicable to the form type\n     *\/",50],["T_WHITESPACE","\n    ",63],["T_PUBLIC","public",64],["T_WHITESPACE"," ",64],["T_FUNCTION","function",64],["T_WHITESPACE"," ",64],["T_STRING","createForProperty",64],"(",["T_VARIABLE","$class",64],",",["T_WHITESPACE"," ",64],["T_VARIABLE","$property",64],",",["T_WHITESPACE"," ",64],["T_VARIABLE","$data",64],["T_WHITESPACE"," ",64],"=",["T_WHITESPACE"," ",64],["T_STRING","null",64],",",["T_WHITESPACE"," ",64],["T_ARRAY","array",64],["T_WHITESPACE"," ",64],["T_VARIABLE","$options",64],["T_WHITESPACE"," ",64],"=",["T_WHITESPACE"," ",64],["T_ARRAY","array",64],"(",")",")",";",["T_WHITESPACE","\n\n    ",64],["T_DOC_COMMENT","\/**\n     * Returns a form builder.\n     *\n     * @param string $type    The type of the form\n     * @param mixed  $data    The initial data\n     * @param array  $options The options\n     *\n     * @return FormBuilderInterface The form builder\n     *\n     * @throws \\Symfony\\Component\\OptionsResolver\\Exception\\InvalidOptionsException if any given option is not applicable to the given type\n     *\/",66],["T_WHITESPACE","\n    ",76],["T_PUBLIC","public",77],["T_WHITESPACE"," ",77],["T_FUNCTION","function",77],["T_WHITESPACE"," ",77],["T_STRING","createBuilder",77],"(",["T_VARIABLE","$type",77],["T_WHITESPACE"," ",77],"=",["T_WHITESPACE"," ",77],["T_CONSTANT_ENCAPSED_STRING","'Symfony\\Component\\Form\\Extension\\Core\\Type\\FormType'",77],",",["T_WHITESPACE"," ",77],["T_VARIABLE","$data",77],["T_WHITESPACE"," ",77],"=",["T_WHITESPACE"," ",77],["T_STRING","null",77],",",["T_WHITESPACE"," ",77],["T_ARRAY","array",77],["T_WHITESPACE"," ",77],["T_VARIABLE","$options",77],["T_WHITESPACE"," ",77],"=",["T_WHITESPACE"," ",77],["T_ARRAY","array",77],"(",")",")",";",["T_WHITESPACE","\n\n    ",77],["T_DOC_COMMENT","\/**\n     * Returns a form builder.\n     *\n     * @param string|int $name    The name of the form\n     * @param string     $type    The type of the form\n     * @param mixed      $data    The initial data\n     * @param array      $options The options\n     *\n     * @return FormBuilderInterface The form builder\n     *\n     * @throws \\Symfony\\Component\\OptionsResolver\\Exception\\InvalidOptionsException if any given option is not applicable to the given type\n     *\/",79],["T_WHITESPACE","\n    ",90],["T_PUBLIC","public",91],["T_WHITESPACE"," ",91],["T_FUNCTION","function",91],["T_WHITESPACE"," ",91],["T_STRING","createNamedBuilder",91],"(",["T_VARIABLE","$name",91],",",["T_WHITESPACE"," ",91],["T_VARIABLE","$type",91],["T_WHITESPACE"," ",91],"=",["T_WHITESPACE"," ",91],["T_CONSTANT_ENCAPSED_STRING","'Symfony\\Component\\Form\\Extension\\Core\\Type\\FormType'",91],",",["T_WHITESPACE"," ",91],["T_VARIABLE","$data",91],["T_WHITESPACE"," ",91],"=",["T_WHITESPACE"," ",91],["T_STRING","null",91],",",["T_WHITESPACE"," ",91],["T_ARRAY","array",91],["T_WHITESPACE"," ",91],["T_VARIABLE","$options",91],["T_WHITESPACE"," ",91],"=",["T_WHITESPACE"," ",91],["T_ARRAY","array",91],"(",")",")",";",["T_WHITESPACE","\n\n    ",91],["T_DOC_COMMENT","\/**\n     * Returns a form builder for a property of a class.\n     *\n     * If any of the 'required' and type options can be guessed,\n     * and are not provided in the options argument, the guessed value is used.\n     *\n     * @param string $class    The fully qualified class name\n     * @param string $property The name of the property to guess for\n     * @param mixed  $data     The initial data\n     * @param array  $options  The options for the builder\n     *\n     * @return FormBuilderInterface The form builder named after the property\n     *\n     * @throws \\Symfony\\Component\\OptionsResolver\\Exception\\InvalidOptionsException if any given option is not applicable to the form type\n     *\/",93],["T_WHITESPACE","\n    ",107],["T_PUBLIC","public",108],["T_WHITESPACE"," ",108],["T_FUNCTION","function",108],["T_WHITESPACE"," ",108],["T_STRING","createBuilderForProperty",108],"(",["T_VARIABLE","$class",108],",",["T_WHITESPACE"," ",108],["T_VARIABLE","$property",108],",",["T_WHITESPACE"," ",108],["T_VARIABLE","$data",108],["T_WHITESPACE"," ",108],"=",["T_WHITESPACE"," ",108],["T_STRING","null",108],",",["T_WHITESPACE"," ",108],["T_ARRAY","array",108],["T_WHITESPACE"," ",108],["T_VARIABLE","$options",108],["T_WHITESPACE"," ",108],"=",["T_WHITESPACE"," ",108],["T_ARRAY","array",108],"(",")",")",";",["T_WHITESPACE","\n",108],"}",["T_WHITESPACE","\n",109]]