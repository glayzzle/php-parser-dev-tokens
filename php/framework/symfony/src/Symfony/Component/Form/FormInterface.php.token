[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_COMMENT","\/*\n * This file is part of the Symfony package.\n *\n * (c) Fabien Potencier <fabien@symfony.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\/",3],["T_WHITESPACE","\n\n",10],["T_NAMESPACE","namespace",12],["T_WHITESPACE"," ",12],["T_STRING","Symfony",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Component",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Form",12],";",["T_WHITESPACE","\n\n",12],["T_USE","use",14],["T_WHITESPACE"," ",14],["T_STRING","Symfony",14],["T_NS_SEPARATOR","\\",14],["T_STRING","Component",14],["T_NS_SEPARATOR","\\",14],["T_STRING","Form",14],["T_NS_SEPARATOR","\\",14],["T_STRING","Exception",14],["T_NS_SEPARATOR","\\",14],["T_STRING","TransformationFailedException",14],";",["T_WHITESPACE","\n\n",14],["T_DOC_COMMENT","\/**\n * A form group bundling multiple forms in a hierarchical structure.\n *\n * @author Bernhard Schussek <bschussek@gmail.com>\n *\/",16],["T_WHITESPACE","\n",20],["T_INTERFACE","interface",21],["T_WHITESPACE"," ",21],["T_STRING","FormInterface",21],["T_WHITESPACE"," ",21],["T_EXTENDS","extends",21],["T_WHITESPACE"," ",21],["T_NS_SEPARATOR","\\",21],["T_STRING","ArrayAccess",21],",",["T_WHITESPACE"," ",21],["T_NS_SEPARATOR","\\",21],["T_STRING","Traversable",21],",",["T_WHITESPACE"," ",21],["T_NS_SEPARATOR","\\",21],["T_STRING","Countable",21],["T_WHITESPACE","\n",21],"{",["T_WHITESPACE","\n    ",22],["T_DOC_COMMENT","\/**\n     * Sets the parent form.\n     *\n     * @param FormInterface|null $parent The parent form or null if it's the root\n     *\n     * @return self\n     *\n     * @throws Exception\\AlreadySubmittedException If the form has already been submitted.\n     * @throws Exception\\LogicException            When trying to set a parent for a form with\n     *                                             an empty name.\n     *\/",23],["T_WHITESPACE","\n    ",33],["T_PUBLIC","public",34],["T_WHITESPACE"," ",34],["T_FUNCTION","function",34],["T_WHITESPACE"," ",34],["T_STRING","setParent",34],"(",["T_STRING","FormInterface",34],["T_WHITESPACE"," ",34],["T_VARIABLE","$parent",34],["T_WHITESPACE"," ",34],"=",["T_WHITESPACE"," ",34],["T_STRING","null",34],")",";",["T_WHITESPACE","\n\n    ",34],["T_DOC_COMMENT","\/**\n     * Returns the parent form.\n     *\n     * @return self|null The parent form or null if there is none\n     *\/",36],["T_WHITESPACE","\n    ",40],["T_PUBLIC","public",41],["T_WHITESPACE"," ",41],["T_FUNCTION","function",41],["T_WHITESPACE"," ",41],["T_STRING","getParent",41],"(",")",";",["T_WHITESPACE","\n\n    ",41],["T_DOC_COMMENT","\/**\n     * Adds or replaces a child to the form.\n     *\n     * @param FormInterface|string|int $child   The FormInterface instance or the name of the child\n     * @param string|null              $type    The child's type, if a name was passed\n     * @param array                    $options The child's options, if a name was passed\n     *\n     * @return self\n     *\n     * @throws Exception\\AlreadySubmittedException If the form has already been submitted.\n     * @throws Exception\\LogicException            When trying to add a child to a non-compound form.\n     * @throws Exception\\UnexpectedTypeException   If $child or $type has an unexpected type.\n     *\/",43],["T_WHITESPACE","\n    ",55],["T_PUBLIC","public",56],["T_WHITESPACE"," ",56],["T_FUNCTION","function",56],["T_WHITESPACE"," ",56],["T_STRING","add",56],"(",["T_VARIABLE","$child",56],",",["T_WHITESPACE"," ",56],["T_VARIABLE","$type",56],["T_WHITESPACE"," ",56],"=",["T_WHITESPACE"," ",56],["T_STRING","null",56],",",["T_WHITESPACE"," ",56],["T_ARRAY","array",56],["T_WHITESPACE"," ",56],["T_VARIABLE","$options",56],["T_WHITESPACE"," ",56],"=",["T_WHITESPACE"," ",56],["T_ARRAY","array",56],"(",")",")",";",["T_WHITESPACE","\n\n    ",56],["T_DOC_COMMENT","\/**\n     * Returns the child with the given name.\n     *\n     * @param string $name The name of the child\n     *\n     * @return self\n     *\n     * @throws \\OutOfBoundsException If the named child does not exist.\n     *\/",58],["T_WHITESPACE","\n    ",66],["T_PUBLIC","public",67],["T_WHITESPACE"," ",67],["T_FUNCTION","function",67],["T_WHITESPACE"," ",67],["T_STRING","get",67],"(",["T_VARIABLE","$name",67],")",";",["T_WHITESPACE","\n\n    ",67],["T_DOC_COMMENT","\/**\n     * Returns whether a child with the given name exists.\n     *\n     * @param string $name The name of the child\n     *\n     * @return bool\n     *\/",69],["T_WHITESPACE","\n    ",75],["T_PUBLIC","public",76],["T_WHITESPACE"," ",76],["T_FUNCTION","function",76],["T_WHITESPACE"," ",76],["T_STRING","has",76],"(",["T_VARIABLE","$name",76],")",";",["T_WHITESPACE","\n\n    ",76],["T_DOC_COMMENT","\/**\n     * Removes a child from the form.\n     *\n     * @param string $name The name of the child to remove\n     *\n     * @return $this\n     *\n     * @throws Exception\\AlreadySubmittedException If the form has already been submitted.\n     *\/",78],["T_WHITESPACE","\n    ",86],["T_PUBLIC","public",87],["T_WHITESPACE"," ",87],["T_FUNCTION","function",87],["T_WHITESPACE"," ",87],["T_STRING","remove",87],"(",["T_VARIABLE","$name",87],")",";",["T_WHITESPACE","\n\n    ",87],["T_DOC_COMMENT","\/**\n     * Returns all children in this group.\n     *\n     * @return self[]\n     *\/",89],["T_WHITESPACE","\n    ",93],["T_PUBLIC","public",94],["T_WHITESPACE"," ",94],["T_FUNCTION","function",94],["T_WHITESPACE"," ",94],["T_STRING","all",94],"(",")",";",["T_WHITESPACE","\n\n    ",94],["T_DOC_COMMENT","\/**\n     * Returns the errors of this form.\n     *\n     * @param bool $deep    Whether to include errors of child forms as well\n     * @param bool $flatten Whether to flatten the list of errors in case\n     *                      $deep is set to true\n     *\n     * @return FormErrorIterator An iterator over the {@link FormError}\n     *                           instances that where added to this form\n     *\/",96],["T_WHITESPACE","\n    ",105],["T_PUBLIC","public",106],["T_WHITESPACE"," ",106],["T_FUNCTION","function",106],["T_WHITESPACE"," ",106],["T_STRING","getErrors",106],"(",["T_VARIABLE","$deep",106],["T_WHITESPACE"," ",106],"=",["T_WHITESPACE"," ",106],["T_STRING","false",106],",",["T_WHITESPACE"," ",106],["T_VARIABLE","$flatten",106],["T_WHITESPACE"," ",106],"=",["T_WHITESPACE"," ",106],["T_STRING","true",106],")",";",["T_WHITESPACE","\n\n    ",106],["T_DOC_COMMENT","\/**\n     * Updates the form with default data.\n     *\n     * @param mixed $modelData The data formatted as expected for the underlying object\n     *\n     * @return $this\n     *\n     * @throws Exception\\AlreadySubmittedException If the form has already been submitted.\n     * @throws Exception\\LogicException            If listeners try to call setData in a cycle. Or if\n     *                                             the view data does not match the expected type\n     *                                             according to {@link FormConfigInterface::getDataClass}.\n     *\/",108],["T_WHITESPACE","\n    ",119],["T_PUBLIC","public",120],["T_WHITESPACE"," ",120],["T_FUNCTION","function",120],["T_WHITESPACE"," ",120],["T_STRING","setData",120],"(",["T_VARIABLE","$modelData",120],")",";",["T_WHITESPACE","\n\n    ",120],["T_DOC_COMMENT","\/**\n     * Returns the data in the format needed for the underlying object.\n     *\n     * @return mixed\n     *\/",122],["T_WHITESPACE","\n    ",126],["T_PUBLIC","public",127],["T_WHITESPACE"," ",127],["T_FUNCTION","function",127],["T_WHITESPACE"," ",127],["T_STRING","getData",127],"(",")",";",["T_WHITESPACE","\n\n    ",127],["T_DOC_COMMENT","\/**\n     * Returns the normalized data of the field.\n     *\n     * @return mixed When the field is not submitted, the default data is returned\n     *               When the field is submitted, the normalized submitted data is\n     *               returned if the field is valid, null otherwise.\n     *\/",129],["T_WHITESPACE","\n    ",135],["T_PUBLIC","public",136],["T_WHITESPACE"," ",136],["T_FUNCTION","function",136],["T_WHITESPACE"," ",136],["T_STRING","getNormData",136],"(",")",";",["T_WHITESPACE","\n\n    ",136],["T_DOC_COMMENT","\/**\n     * Returns the data transformed by the value transformer.\n     *\n     * @return mixed\n     *\/",138],["T_WHITESPACE","\n    ",142],["T_PUBLIC","public",143],["T_WHITESPACE"," ",143],["T_FUNCTION","function",143],["T_WHITESPACE"," ",143],["T_STRING","getViewData",143],"(",")",";",["T_WHITESPACE","\n\n    ",143],["T_DOC_COMMENT","\/**\n     * Returns the extra data.\n     *\n     * @return array The submitted data which do not belong to a child\n     *\/",145],["T_WHITESPACE","\n    ",149],["T_PUBLIC","public",150],["T_WHITESPACE"," ",150],["T_FUNCTION","function",150],["T_WHITESPACE"," ",150],["T_STRING","getExtraData",150],"(",")",";",["T_WHITESPACE","\n\n    ",150],["T_DOC_COMMENT","\/**\n     * Returns the form's configuration.\n     *\n     * @return FormConfigInterface The configuration\n     *\/",152],["T_WHITESPACE","\n    ",156],["T_PUBLIC","public",157],["T_WHITESPACE"," ",157],["T_FUNCTION","function",157],["T_WHITESPACE"," ",157],["T_STRING","getConfig",157],"(",")",";",["T_WHITESPACE","\n\n    ",157],["T_DOC_COMMENT","\/**\n     * Returns whether the form is submitted.\n     *\n     * @return bool true if the form is submitted, false otherwise\n     *\/",159],["T_WHITESPACE","\n    ",163],["T_PUBLIC","public",164],["T_WHITESPACE"," ",164],["T_FUNCTION","function",164],["T_WHITESPACE"," ",164],["T_STRING","isSubmitted",164],"(",")",";",["T_WHITESPACE","\n\n    ",164],["T_DOC_COMMENT","\/**\n     * Returns the name by which the form is identified in forms.\n     *\n     * @return string The name of the form\n     *\/",166],["T_WHITESPACE","\n    ",170],["T_PUBLIC","public",171],["T_WHITESPACE"," ",171],["T_FUNCTION","function",171],["T_WHITESPACE"," ",171],["T_STRING","getName",171],"(",")",";",["T_WHITESPACE","\n\n    ",171],["T_DOC_COMMENT","\/**\n     * Returns the property path that the form is mapped to.\n     *\n     * @return \\Symfony\\Component\\PropertyAccess\\PropertyPathInterface The property path\n     *\/",173],["T_WHITESPACE","\n    ",177],["T_PUBLIC","public",178],["T_WHITESPACE"," ",178],["T_FUNCTION","function",178],["T_WHITESPACE"," ",178],["T_STRING","getPropertyPath",178],"(",")",";",["T_WHITESPACE","\n\n    ",178],["T_DOC_COMMENT","\/**\n     * Adds an error to this form.\n     *\n     * @param FormError $error\n     *\n     * @return $this\n     *\/",180],["T_WHITESPACE","\n    ",186],["T_PUBLIC","public",187],["T_WHITESPACE"," ",187],["T_FUNCTION","function",187],["T_WHITESPACE"," ",187],["T_STRING","addError",187],"(",["T_STRING","FormError",187],["T_WHITESPACE"," ",187],["T_VARIABLE","$error",187],")",";",["T_WHITESPACE","\n\n    ",187],["T_DOC_COMMENT","\/**\n     * Returns whether the form and all children are valid.\n     *\n     * If the form is not submitted, this method always returns false (but will throw an exception in 4.0).\n     *\n     * @return bool\n     *\/",189],["T_WHITESPACE","\n    ",195],["T_PUBLIC","public",196],["T_WHITESPACE"," ",196],["T_FUNCTION","function",196],["T_WHITESPACE"," ",196],["T_STRING","isValid",196],"(",")",";",["T_WHITESPACE","\n\n    ",196],["T_DOC_COMMENT","\/**\n     * Returns whether the form is required to be filled out.\n     *\n     * If the form has a parent and the parent is not required, this method\n     * will always return false. Otherwise the value set with setRequired()\n     * is returned.\n     *\n     * @return bool\n     *\/",198],["T_WHITESPACE","\n    ",206],["T_PUBLIC","public",207],["T_WHITESPACE"," ",207],["T_FUNCTION","function",207],["T_WHITESPACE"," ",207],["T_STRING","isRequired",207],"(",")",";",["T_WHITESPACE","\n\n    ",207],["T_DOC_COMMENT","\/**\n     * Returns whether this form is disabled.\n     *\n     * The content of a disabled form is displayed, but not allowed to be\n     * modified. The validation of modified disabled forms should fail.\n     *\n     * Forms whose parents are disabled are considered disabled regardless of\n     * their own state.\n     *\n     * @return bool\n     *\/",209],["T_WHITESPACE","\n    ",219],["T_PUBLIC","public",220],["T_WHITESPACE"," ",220],["T_FUNCTION","function",220],["T_WHITESPACE"," ",220],["T_STRING","isDisabled",220],"(",")",";",["T_WHITESPACE","\n\n    ",220],["T_DOC_COMMENT","\/**\n     * Returns whether the form is empty.\n     *\n     * @return bool\n     *\/",222],["T_WHITESPACE","\n    ",226],["T_PUBLIC","public",227],["T_WHITESPACE"," ",227],["T_FUNCTION","function",227],["T_WHITESPACE"," ",227],["T_STRING","isEmpty",227],"(",")",";",["T_WHITESPACE","\n\n    ",227],["T_DOC_COMMENT","\/**\n     * Returns whether the data in the different formats is synchronized.\n     *\n     * If the data is not synchronized, you can get the transformation failure\n     * by calling {@link getTransformationFailure()}.\n     *\n     * @return bool\n     *\/",229],["T_WHITESPACE","\n    ",236],["T_PUBLIC","public",237],["T_WHITESPACE"," ",237],["T_FUNCTION","function",237],["T_WHITESPACE"," ",237],["T_STRING","isSynchronized",237],"(",")",";",["T_WHITESPACE","\n\n    ",237],["T_DOC_COMMENT","\/**\n     * Returns the data transformation failure, if any.\n     *\n     * @return TransformationFailedException|null The transformation failure\n     *\/",239],["T_WHITESPACE","\n    ",243],["T_PUBLIC","public",244],["T_WHITESPACE"," ",244],["T_FUNCTION","function",244],["T_WHITESPACE"," ",244],["T_STRING","getTransformationFailure",244],"(",")",";",["T_WHITESPACE","\n\n    ",244],["T_DOC_COMMENT","\/**\n     * Initializes the form tree.\n     *\n     * Should be called on the root form after constructing the tree.\n     *\n     * @return $this\n     *\/",246],["T_WHITESPACE","\n    ",252],["T_PUBLIC","public",253],["T_WHITESPACE"," ",253],["T_FUNCTION","function",253],["T_WHITESPACE"," ",253],["T_STRING","initialize",253],"(",")",";",["T_WHITESPACE","\n\n    ",253],["T_DOC_COMMENT","\/**\n     * Inspects the given request and calls {@link submit()} if the form was\n     * submitted.\n     *\n     * Internally, the request is forwarded to the configured\n     * {@link RequestHandlerInterface} instance, which determines whether to\n     * submit the form or not.\n     *\n     * @param mixed $request The request to handle\n     *\n     * @return $this\n     *\/",255],["T_WHITESPACE","\n    ",266],["T_PUBLIC","public",267],["T_WHITESPACE"," ",267],["T_FUNCTION","function",267],["T_WHITESPACE"," ",267],["T_STRING","handleRequest",267],"(",["T_VARIABLE","$request",267],["T_WHITESPACE"," ",267],"=",["T_WHITESPACE"," ",267],["T_STRING","null",267],")",";",["T_WHITESPACE","\n\n    ",267],["T_DOC_COMMENT","\/**\n     * Submits data to the form, transforms and validates it.\n     *\n     * @param null|string|array $submittedData The submitted data\n     * @param bool              $clearMissing  Whether to set fields to NULL\n     *                                         when they are missing in the\n     *                                         submitted data.\n     *\n     * @return $this\n     *\n     * @throws Exception\\AlreadySubmittedException If the form has already been submitted.\n     *\/",269],["T_WHITESPACE","\n    ",280],["T_PUBLIC","public",281],["T_WHITESPACE"," ",281],["T_FUNCTION","function",281],["T_WHITESPACE"," ",281],["T_STRING","submit",281],"(",["T_VARIABLE","$submittedData",281],",",["T_WHITESPACE"," ",281],["T_VARIABLE","$clearMissing",281],["T_WHITESPACE"," ",281],"=",["T_WHITESPACE"," ",281],["T_STRING","true",281],")",";",["T_WHITESPACE","\n\n    ",281],["T_DOC_COMMENT","\/**\n     * Returns the root of the form tree.\n     *\n     * @return self The root of the tree\n     *\/",283],["T_WHITESPACE","\n    ",287],["T_PUBLIC","public",288],["T_WHITESPACE"," ",288],["T_FUNCTION","function",288],["T_WHITESPACE"," ",288],["T_STRING","getRoot",288],"(",")",";",["T_WHITESPACE","\n\n    ",288],["T_DOC_COMMENT","\/**\n     * Returns whether the field is the root of the form tree.\n     *\n     * @return bool\n     *\/",290],["T_WHITESPACE","\n    ",294],["T_PUBLIC","public",295],["T_WHITESPACE"," ",295],["T_FUNCTION","function",295],["T_WHITESPACE"," ",295],["T_STRING","isRoot",295],"(",")",";",["T_WHITESPACE","\n\n    ",295],["T_DOC_COMMENT","\/**\n     * Creates a view.\n     *\n     * @param FormView $parent The parent view\n     *\n     * @return FormView The view\n     *\/",297],["T_WHITESPACE","\n    ",303],["T_PUBLIC","public",304],["T_WHITESPACE"," ",304],["T_FUNCTION","function",304],["T_WHITESPACE"," ",304],["T_STRING","createView",304],"(",["T_STRING","FormView",304],["T_WHITESPACE"," ",304],["T_VARIABLE","$parent",304],["T_WHITESPACE"," ",304],"=",["T_WHITESPACE"," ",304],["T_STRING","null",304],")",";",["T_WHITESPACE","\n",304],"}",["T_WHITESPACE","\n",305]]