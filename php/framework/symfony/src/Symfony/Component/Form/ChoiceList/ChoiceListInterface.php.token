[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_COMMENT","\/*\n * This file is part of the Symfony package.\n *\n * (c) Fabien Potencier <fabien@symfony.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\/",3],["T_WHITESPACE","\n\n",10],["T_NAMESPACE","namespace",12],["T_WHITESPACE"," ",12],["T_STRING","Symfony",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Component",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Form",12],["T_NS_SEPARATOR","\\",12],["T_STRING","ChoiceList",12],";",["T_WHITESPACE","\n\n",12],["T_DOC_COMMENT","\/**\n * A list of choices that can be selected in a choice field.\n *\n * A choice list assigns unique string values to each of a list of choices.\n * These string values are displayed in the \"value\" attributes in HTML and\n * submitted back to the server.\n *\n * The acceptable data types for the choices depend on the implementation.\n * Values must always be strings and (within the list) free of duplicates.\n *\n * @author Bernhard Schussek <bschussek@gmail.com>\n *\/",14],["T_WHITESPACE","\n",25],["T_INTERFACE","interface",26],["T_WHITESPACE"," ",26],["T_STRING","ChoiceListInterface",26],["T_WHITESPACE","\n",26],"{",["T_WHITESPACE","\n    ",27],["T_DOC_COMMENT","\/**\n     * Returns all selectable choices.\n     *\n     * @return array The selectable choices indexed by the corresponding values\n     *\/",28],["T_WHITESPACE","\n    ",32],["T_PUBLIC","public",33],["T_WHITESPACE"," ",33],["T_FUNCTION","function",33],["T_WHITESPACE"," ",33],["T_STRING","getChoices",33],"(",")",";",["T_WHITESPACE","\n\n    ",33],["T_DOC_COMMENT","\/**\n     * Returns the values for the choices.\n     *\n     * The values are strings that do not contain duplicates.\n     *\n     * @return string[] The choice values\n     *\/",35],["T_WHITESPACE","\n    ",41],["T_PUBLIC","public",42],["T_WHITESPACE"," ",42],["T_FUNCTION","function",42],["T_WHITESPACE"," ",42],["T_STRING","getValues",42],"(",")",";",["T_WHITESPACE","\n\n    ",42],["T_DOC_COMMENT","\/**\n     * Returns the values in the structure originally passed to the list.\n     *\n     * Contrary to {@link getValues()}, the result is indexed by the original\n     * keys of the choices. If the original array contained nested arrays, these\n     * nested arrays are represented here as well:\n     *\n     *     $form->add('field', 'choice', array(\n     *         'choices' => array(\n     *             'Decided' => array('Yes' => true, 'No' => false),\n     *             'Undecided' => array('Maybe' => null),\n     *         ),\n     *     ));\n     *\n     * In this example, the result of this method is:\n     *\n     *     array(\n     *         'Decided' => array('Yes' => '0', 'No' => '1'),\n     *         'Undecided' => array('Maybe' => '2'),\n     *     )\n     *\n     * @return string[] The choice values\n     *\/",44],["T_WHITESPACE","\n    ",66],["T_PUBLIC","public",67],["T_WHITESPACE"," ",67],["T_FUNCTION","function",67],["T_WHITESPACE"," ",67],["T_STRING","getStructuredValues",67],"(",")",";",["T_WHITESPACE","\n\n    ",67],["T_DOC_COMMENT","\/**\n     * Returns the original keys of the choices.\n     *\n     * The original keys are the keys of the choice array that was passed in the\n     * \"choice\" option of the choice type. Note that this array may contain\n     * duplicates if the \"choice\" option contained choice groups:\n     *\n     *     $form->add('field', 'choice', array(\n     *         'choices' => array(\n     *             'Decided' => array(true, false),\n     *             'Undecided' => array(null),\n     *         ),\n     *     ));\n     *\n     * In this example, the original key 0 appears twice, once for `true` and\n     * once for `null`.\n     *\n     * @return int[]|string[] The original choice keys indexed by the\n     *                        corresponding choice values\n     *\/",69],["T_WHITESPACE","\n    ",88],["T_PUBLIC","public",89],["T_WHITESPACE"," ",89],["T_FUNCTION","function",89],["T_WHITESPACE"," ",89],["T_STRING","getOriginalKeys",89],"(",")",";",["T_WHITESPACE","\n\n    ",89],["T_DOC_COMMENT","\/**\n     * Returns the choices corresponding to the given values.\n     *\n     * The choices are returned with the same keys and in the same order as the\n     * corresponding values in the given array.\n     *\n     * @param string[] $values An array of choice values. Non-existing values in\n     *                         this array are ignored\n     *\n     * @return array An array of choices\n     *\/",91],["T_WHITESPACE","\n    ",101],["T_PUBLIC","public",102],["T_WHITESPACE"," ",102],["T_FUNCTION","function",102],["T_WHITESPACE"," ",102],["T_STRING","getChoicesForValues",102],"(",["T_ARRAY","array",102],["T_WHITESPACE"," ",102],["T_VARIABLE","$values",102],")",";",["T_WHITESPACE","\n\n    ",102],["T_DOC_COMMENT","\/**\n     * Returns the values corresponding to the given choices.\n     *\n     * The values are returned with the same keys and in the same order as the\n     * corresponding choices in the given array.\n     *\n     * @param array $choices An array of choices. Non-existing choices in this\n     *                       array are ignored\n     *\n     * @return string[] An array of choice values\n     *\/",104],["T_WHITESPACE","\n    ",114],["T_PUBLIC","public",115],["T_WHITESPACE"," ",115],["T_FUNCTION","function",115],["T_WHITESPACE"," ",115],["T_STRING","getValuesForChoices",115],"(",["T_ARRAY","array",115],["T_WHITESPACE"," ",115],["T_VARIABLE","$choices",115],")",";",["T_WHITESPACE","\n",115],"}",["T_WHITESPACE","\n",116]]