[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_COMMENT","\/*\n * This file is part of the Symfony package.\n *\n * (c) Fabien Potencier <fabien@symfony.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\/",3],["T_WHITESPACE","\n\n",10],["T_NAMESPACE","namespace",12],["T_WHITESPACE"," ",12],["T_STRING","Symfony",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Component",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Form",12],";",["T_WHITESPACE","\n\n",12],["T_USE","use",14],["T_WHITESPACE"," ",14],["T_STRING","Symfony",14],["T_NS_SEPARATOR","\\",14],["T_STRING","Component",14],["T_NS_SEPARATOR","\\",14],["T_STRING","EventDispatcher",14],["T_NS_SEPARATOR","\\",14],["T_STRING","EventDispatcherInterface",14],";",["T_WHITESPACE","\n",14],["T_USE","use",15],["T_WHITESPACE"," ",15],["T_STRING","Symfony",15],["T_NS_SEPARATOR","\\",15],["T_STRING","Component",15],["T_NS_SEPARATOR","\\",15],["T_STRING","PropertyAccess",15],["T_NS_SEPARATOR","\\",15],["T_STRING","PropertyPathInterface",15],";",["T_WHITESPACE","\n\n",15],["T_DOC_COMMENT","\/**\n * The configuration of a {@link Form} object.\n *\n * @author Bernhard Schussek <bschussek@gmail.com>\n *\/",17],["T_WHITESPACE","\n",21],["T_INTERFACE","interface",22],["T_WHITESPACE"," ",22],["T_STRING","FormConfigInterface",22],["T_WHITESPACE","\n",22],"{",["T_WHITESPACE","\n    ",23],["T_DOC_COMMENT","\/**\n     * Returns the event dispatcher used to dispatch form events.\n     *\n     * @return EventDispatcherInterface The dispatcher\n     *\/",24],["T_WHITESPACE","\n    ",28],["T_PUBLIC","public",29],["T_WHITESPACE"," ",29],["T_FUNCTION","function",29],["T_WHITESPACE"," ",29],["T_STRING","getEventDispatcher",29],"(",")",";",["T_WHITESPACE","\n\n    ",29],["T_DOC_COMMENT","\/**\n     * Returns the name of the form used as HTTP parameter.\n     *\n     * @return string The form name\n     *\/",31],["T_WHITESPACE","\n    ",35],["T_PUBLIC","public",36],["T_WHITESPACE"," ",36],["T_FUNCTION","function",36],["T_WHITESPACE"," ",36],["T_STRING","getName",36],"(",")",";",["T_WHITESPACE","\n\n    ",36],["T_DOC_COMMENT","\/**\n     * Returns the property path that the form should be mapped to.\n     *\n     * @return null|PropertyPathInterface The property path\n     *\/",38],["T_WHITESPACE","\n    ",42],["T_PUBLIC","public",43],["T_WHITESPACE"," ",43],["T_FUNCTION","function",43],["T_WHITESPACE"," ",43],["T_STRING","getPropertyPath",43],"(",")",";",["T_WHITESPACE","\n\n    ",43],["T_DOC_COMMENT","\/**\n     * Returns whether the form should be mapped to an element of its\n     * parent's data.\n     *\n     * @return bool Whether the form is mapped\n     *\/",45],["T_WHITESPACE","\n    ",50],["T_PUBLIC","public",51],["T_WHITESPACE"," ",51],["T_FUNCTION","function",51],["T_WHITESPACE"," ",51],["T_STRING","getMapped",51],"(",")",";",["T_WHITESPACE","\n\n    ",51],["T_DOC_COMMENT","\/**\n     * Returns whether the form's data should be modified by reference.\n     *\n     * @return bool Whether to modify the form's data by reference\n     *\/",53],["T_WHITESPACE","\n    ",57],["T_PUBLIC","public",58],["T_WHITESPACE"," ",58],["T_FUNCTION","function",58],["T_WHITESPACE"," ",58],["T_STRING","getByReference",58],"(",")",";",["T_WHITESPACE","\n\n    ",58],["T_DOC_COMMENT","\/**\n     * Returns whether the form should read and write the data of its parent.\n     *\n     * @return bool Whether the form should inherit its parent's data\n     *\/",60],["T_WHITESPACE","\n    ",64],["T_PUBLIC","public",65],["T_WHITESPACE"," ",65],["T_FUNCTION","function",65],["T_WHITESPACE"," ",65],["T_STRING","getInheritData",65],"(",")",";",["T_WHITESPACE","\n\n    ",65],["T_DOC_COMMENT","\/**\n     * Returns whether the form is compound.\n     *\n     * This property is independent of whether the form actually has\n     * children. A form can be compound and have no children at all, like\n     * for example an empty collection form.\n     *\n     * @return bool Whether the form is compound\n     *\/",67],["T_WHITESPACE","\n    ",75],["T_PUBLIC","public",76],["T_WHITESPACE"," ",76],["T_FUNCTION","function",76],["T_WHITESPACE"," ",76],["T_STRING","getCompound",76],"(",")",";",["T_WHITESPACE","\n\n    ",76],["T_DOC_COMMENT","\/**\n     * Returns the form types used to construct the form.\n     *\n     * @return ResolvedFormTypeInterface The form's type\n     *\/",78],["T_WHITESPACE","\n    ",82],["T_PUBLIC","public",83],["T_WHITESPACE"," ",83],["T_FUNCTION","function",83],["T_WHITESPACE"," ",83],["T_STRING","getType",83],"(",")",";",["T_WHITESPACE","\n\n    ",83],["T_DOC_COMMENT","\/**\n     * Returns the view transformers of the form.\n     *\n     * @return DataTransformerInterface[] An array of {@link DataTransformerInterface} instances\n     *\/",85],["T_WHITESPACE","\n    ",89],["T_PUBLIC","public",90],["T_WHITESPACE"," ",90],["T_FUNCTION","function",90],["T_WHITESPACE"," ",90],["T_STRING","getViewTransformers",90],"(",")",";",["T_WHITESPACE","\n\n    ",90],["T_DOC_COMMENT","\/**\n     * Returns the model transformers of the form.\n     *\n     * @return DataTransformerInterface[] An array of {@link DataTransformerInterface} instances\n     *\/",92],["T_WHITESPACE","\n    ",96],["T_PUBLIC","public",97],["T_WHITESPACE"," ",97],["T_FUNCTION","function",97],["T_WHITESPACE"," ",97],["T_STRING","getModelTransformers",97],"(",")",";",["T_WHITESPACE","\n\n    ",97],["T_DOC_COMMENT","\/**\n     * Returns the data mapper of the form.\n     *\n     * @return DataMapperInterface The data mapper\n     *\/",99],["T_WHITESPACE","\n    ",103],["T_PUBLIC","public",104],["T_WHITESPACE"," ",104],["T_FUNCTION","function",104],["T_WHITESPACE"," ",104],["T_STRING","getDataMapper",104],"(",")",";",["T_WHITESPACE","\n\n    ",104],["T_DOC_COMMENT","\/**\n     * Returns whether the form is required.\n     *\n     * @return bool Whether the form is required\n     *\/",106],["T_WHITESPACE","\n    ",110],["T_PUBLIC","public",111],["T_WHITESPACE"," ",111],["T_FUNCTION","function",111],["T_WHITESPACE"," ",111],["T_STRING","getRequired",111],"(",")",";",["T_WHITESPACE","\n\n    ",111],["T_DOC_COMMENT","\/**\n     * Returns whether the form is disabled.\n     *\n     * @return bool Whether the form is disabled\n     *\/",113],["T_WHITESPACE","\n    ",117],["T_PUBLIC","public",118],["T_WHITESPACE"," ",118],["T_FUNCTION","function",118],["T_WHITESPACE"," ",118],["T_STRING","getDisabled",118],"(",")",";",["T_WHITESPACE","\n\n    ",118],["T_DOC_COMMENT","\/**\n     * Returns whether errors attached to the form will bubble to its parent.\n     *\n     * @return bool Whether errors will bubble up\n     *\/",120],["T_WHITESPACE","\n    ",124],["T_PUBLIC","public",125],["T_WHITESPACE"," ",125],["T_FUNCTION","function",125],["T_WHITESPACE"," ",125],["T_STRING","getErrorBubbling",125],"(",")",";",["T_WHITESPACE","\n\n    ",125],["T_DOC_COMMENT","\/**\n     * Returns the data that should be returned when the form is empty.\n     *\n     * @return mixed The data returned if the form is empty\n     *\/",127],["T_WHITESPACE","\n    ",131],["T_PUBLIC","public",132],["T_WHITESPACE"," ",132],["T_FUNCTION","function",132],["T_WHITESPACE"," ",132],["T_STRING","getEmptyData",132],"(",")",";",["T_WHITESPACE","\n\n    ",132],["T_DOC_COMMENT","\/**\n     * Returns additional attributes of the form.\n     *\n     * @return array An array of key-value combinations\n     *\/",134],["T_WHITESPACE","\n    ",138],["T_PUBLIC","public",139],["T_WHITESPACE"," ",139],["T_FUNCTION","function",139],["T_WHITESPACE"," ",139],["T_STRING","getAttributes",139],"(",")",";",["T_WHITESPACE","\n\n    ",139],["T_DOC_COMMENT","\/**\n     * Returns whether the attribute with the given name exists.\n     *\n     * @param string $name The attribute name\n     *\n     * @return bool Whether the attribute exists\n     *\/",141],["T_WHITESPACE","\n    ",147],["T_PUBLIC","public",148],["T_WHITESPACE"," ",148],["T_FUNCTION","function",148],["T_WHITESPACE"," ",148],["T_STRING","hasAttribute",148],"(",["T_VARIABLE","$name",148],")",";",["T_WHITESPACE","\n\n    ",148],["T_DOC_COMMENT","\/**\n     * Returns the value of the given attribute.\n     *\n     * @param string $name    The attribute name\n     * @param mixed  $default The value returned if the attribute does not exist\n     *\n     * @return mixed The attribute value\n     *\/",150],["T_WHITESPACE","\n    ",157],["T_PUBLIC","public",158],["T_WHITESPACE"," ",158],["T_FUNCTION","function",158],["T_WHITESPACE"," ",158],["T_STRING","getAttribute",158],"(",["T_VARIABLE","$name",158],",",["T_WHITESPACE"," ",158],["T_VARIABLE","$default",158],["T_WHITESPACE"," ",158],"=",["T_WHITESPACE"," ",158],["T_STRING","null",158],")",";",["T_WHITESPACE","\n\n    ",158],["T_DOC_COMMENT","\/**\n     * Returns the initial data of the form.\n     *\n     * @return mixed The initial form data\n     *\/",160],["T_WHITESPACE","\n    ",164],["T_PUBLIC","public",165],["T_WHITESPACE"," ",165],["T_FUNCTION","function",165],["T_WHITESPACE"," ",165],["T_STRING","getData",165],"(",")",";",["T_WHITESPACE","\n\n    ",165],["T_DOC_COMMENT","\/**\n     * Returns the class of the form data or null if the data is scalar or an array.\n     *\n     * @return string The data class or null\n     *\/",167],["T_WHITESPACE","\n    ",171],["T_PUBLIC","public",172],["T_WHITESPACE"," ",172],["T_FUNCTION","function",172],["T_WHITESPACE"," ",172],["T_STRING","getDataClass",172],"(",")",";",["T_WHITESPACE","\n\n    ",172],["T_DOC_COMMENT","\/**\n     * Returns whether the form's data is locked.\n     *\n     * A form with locked data is restricted to the data passed in\n     * this configuration. The data can only be modified then by\n     * submitting the form.\n     *\n     * @return bool Whether the data is locked\n     *\/",174],["T_WHITESPACE","\n    ",182],["T_PUBLIC","public",183],["T_WHITESPACE"," ",183],["T_FUNCTION","function",183],["T_WHITESPACE"," ",183],["T_STRING","getDataLocked",183],"(",")",";",["T_WHITESPACE","\n\n    ",183],["T_DOC_COMMENT","\/**\n     * Returns the form factory used for creating new forms.\n     *\n     * @return FormFactoryInterface The form factory\n     *\/",185],["T_WHITESPACE","\n    ",189],["T_PUBLIC","public",190],["T_WHITESPACE"," ",190],["T_FUNCTION","function",190],["T_WHITESPACE"," ",190],["T_STRING","getFormFactory",190],"(",")",";",["T_WHITESPACE","\n\n    ",190],["T_DOC_COMMENT","\/**\n     * Returns the target URL of the form.\n     *\n     * @return string The target URL of the form\n     *\/",192],["T_WHITESPACE","\n    ",196],["T_PUBLIC","public",197],["T_WHITESPACE"," ",197],["T_FUNCTION","function",197],["T_WHITESPACE"," ",197],["T_STRING","getAction",197],"(",")",";",["T_WHITESPACE","\n\n    ",197],["T_DOC_COMMENT","\/**\n     * Returns the HTTP method used by the form.\n     *\n     * @return string The HTTP method of the form\n     *\/",199],["T_WHITESPACE","\n    ",203],["T_PUBLIC","public",204],["T_WHITESPACE"," ",204],["T_FUNCTION","function",204],["T_WHITESPACE"," ",204],["T_STRING","getMethod",204],"(",")",";",["T_WHITESPACE","\n\n    ",204],["T_DOC_COMMENT","\/**\n     * Returns the request handler used by the form.\n     *\n     * @return RequestHandlerInterface The request handler\n     *\/",206],["T_WHITESPACE","\n    ",210],["T_PUBLIC","public",211],["T_WHITESPACE"," ",211],["T_FUNCTION","function",211],["T_WHITESPACE"," ",211],["T_STRING","getRequestHandler",211],"(",")",";",["T_WHITESPACE","\n\n    ",211],["T_DOC_COMMENT","\/**\n     * Returns whether the form should be initialized upon creation.\n     *\n     * @return bool Returns true if the form should be initialized\n     *              when created, false otherwise.\n     *\/",213],["T_WHITESPACE","\n    ",218],["T_PUBLIC","public",219],["T_WHITESPACE"," ",219],["T_FUNCTION","function",219],["T_WHITESPACE"," ",219],["T_STRING","getAutoInitialize",219],"(",")",";",["T_WHITESPACE","\n\n    ",219],["T_DOC_COMMENT","\/**\n     * Returns all options passed during the construction of the form.\n     *\n     * @return array The passed options\n     *\/",221],["T_WHITESPACE","\n    ",225],["T_PUBLIC","public",226],["T_WHITESPACE"," ",226],["T_FUNCTION","function",226],["T_WHITESPACE"," ",226],["T_STRING","getOptions",226],"(",")",";",["T_WHITESPACE","\n\n    ",226],["T_DOC_COMMENT","\/**\n     * Returns whether a specific option exists.\n     *\n     * @param string $name The option name,\n     *\n     * @return bool Whether the option exists\n     *\/",228],["T_WHITESPACE","\n    ",234],["T_PUBLIC","public",235],["T_WHITESPACE"," ",235],["T_FUNCTION","function",235],["T_WHITESPACE"," ",235],["T_STRING","hasOption",235],"(",["T_VARIABLE","$name",235],")",";",["T_WHITESPACE","\n\n    ",235],["T_DOC_COMMENT","\/**\n     * Returns the value of a specific option.\n     *\n     * @param string $name    The option name\n     * @param mixed  $default The value returned if the option does not exist\n     *\n     * @return mixed The option value\n     *\/",237],["T_WHITESPACE","\n    ",244],["T_PUBLIC","public",245],["T_WHITESPACE"," ",245],["T_FUNCTION","function",245],["T_WHITESPACE"," ",245],["T_STRING","getOption",245],"(",["T_VARIABLE","$name",245],",",["T_WHITESPACE"," ",245],["T_VARIABLE","$default",245],["T_WHITESPACE"," ",245],"=",["T_WHITESPACE"," ",245],["T_STRING","null",245],")",";",["T_WHITESPACE","\n",245],"}",["T_WHITESPACE","\n",246]]