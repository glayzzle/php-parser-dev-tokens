[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_COMMENT","\/*\n * This file is part of the Symfony package.\n *\n * (c) Fabien Potencier <fabien@symfony.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\/",3],["T_WHITESPACE","\n\n",10],["T_NAMESPACE","namespace",12],["T_WHITESPACE"," ",12],["T_STRING","Symfony",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Component",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Intl",12],["T_NS_SEPARATOR","\\",12],["T_STRING","DateFormatter",12],["T_NS_SEPARATOR","\\",12],["T_STRING","DateFormat",12],";",["T_WHITESPACE","\n\n",12],["T_DOC_COMMENT","\/**\n * Parser and formatter for date formats.\n *\n * @author Igor Wiedler <igor@wiedler.ch>\n *\n * @internal\n *\/",14],["T_WHITESPACE","\n",20],["T_ABSTRACT","abstract",21],["T_WHITESPACE"," ",21],["T_CLASS","class",21],["T_WHITESPACE"," ",21],["T_STRING","Transformer",21],["T_WHITESPACE","\n",21],"{",["T_WHITESPACE","\n    ",22],["T_DOC_COMMENT","\/**\n     * Format a value using a configured DateTime as date\/time source.\n     *\n     *\n     * @param \\DateTime $dateTime A DateTime object to be used to generate the formatted value\n     * @param int       $length   The formatted value string length\n     *\n     * @return string The formatted value\n     *\/",23],["T_WHITESPACE","\n    ",31],["T_ABSTRACT","abstract",32],["T_WHITESPACE"," ",32],["T_PUBLIC","public",32],["T_WHITESPACE"," ",32],["T_FUNCTION","function",32],["T_WHITESPACE"," ",32],["T_STRING","format",32],"(",["T_NS_SEPARATOR","\\",32],["T_STRING","DateTime",32],["T_WHITESPACE"," ",32],["T_VARIABLE","$dateTime",32],",",["T_WHITESPACE"," ",32],["T_VARIABLE","$length",32],")",";",["T_WHITESPACE","\n\n    ",32],["T_DOC_COMMENT","\/**\n     * Returns a reverse matching regular expression of a string generated by format().\n     *\n     * @param int $length The length of the value to be reverse matched\n     *\n     * @return string The reverse matching regular expression\n     *\/",34],["T_WHITESPACE","\n    ",40],["T_ABSTRACT","abstract",41],["T_WHITESPACE"," ",41],["T_PUBLIC","public",41],["T_WHITESPACE"," ",41],["T_FUNCTION","function",41],["T_WHITESPACE"," ",41],["T_STRING","getReverseMatchingRegExp",41],"(",["T_VARIABLE","$length",41],")",";",["T_WHITESPACE","\n\n    ",41],["T_DOC_COMMENT","\/**\n     * Extract date options from a matched value returned by the processing of the reverse matching\n     * regular expression.\n     *\n     * @param string $matched The matched value\n     * @param int    $length  The length of the Transformer pattern string\n     *\n     * @return array An associative array\n     *\/",43],["T_WHITESPACE","\n    ",51],["T_ABSTRACT","abstract",52],["T_WHITESPACE"," ",52],["T_PUBLIC","public",52],["T_WHITESPACE"," ",52],["T_FUNCTION","function",52],["T_WHITESPACE"," ",52],["T_STRING","extractDateOptions",52],"(",["T_VARIABLE","$matched",52],",",["T_WHITESPACE"," ",52],["T_VARIABLE","$length",52],")",";",["T_WHITESPACE","\n\n    ",52],["T_DOC_COMMENT","\/**\n     * Pad a string with zeros to the left.\n     *\n     * @param string $value  The string to be padded\n     * @param int    $length The length to pad\n     *\n     * @return string The padded string\n     *\/",54],["T_WHITESPACE","\n    ",61],["T_PROTECTED","protected",62],["T_WHITESPACE"," ",62],["T_FUNCTION","function",62],["T_WHITESPACE"," ",62],["T_STRING","padLeft",62],"(",["T_VARIABLE","$value",62],",",["T_WHITESPACE"," ",62],["T_VARIABLE","$length",62],")",["T_WHITESPACE","\n    ",62],"{",["T_WHITESPACE","\n        ",63],["T_RETURN","return",64],["T_WHITESPACE"," ",64],["T_STRING","str_pad",64],"(",["T_VARIABLE","$value",64],",",["T_WHITESPACE"," ",64],["T_VARIABLE","$length",64],",",["T_WHITESPACE"," ",64],["T_CONSTANT_ENCAPSED_STRING","'0'",64],",",["T_WHITESPACE"," ",64],["T_STRING","STR_PAD_LEFT",64],")",";",["T_WHITESPACE","\n    ",64],"}",["T_WHITESPACE","\n",65],"}",["T_WHITESPACE","\n",66]]