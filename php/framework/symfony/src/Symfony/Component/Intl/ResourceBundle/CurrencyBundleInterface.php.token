[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_COMMENT","\/*\n * This file is part of the Symfony package.\n *\n * (c) Fabien Potencier <fabien@symfony.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\/",3],["T_WHITESPACE","\n\n",10],["T_NAMESPACE","namespace",12],["T_WHITESPACE"," ",12],["T_STRING","Symfony",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Component",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Intl",12],["T_NS_SEPARATOR","\\",12],["T_STRING","ResourceBundle",12],";",["T_WHITESPACE","\n\n",12],["T_DOC_COMMENT","\/**\n * Gives access to currency-related ICU data.\n *\n * @author Bernhard Schussek <bschussek@gmail.com>\n *\/",14],["T_WHITESPACE","\n",18],["T_INTERFACE","interface",19],["T_WHITESPACE"," ",19],["T_STRING","CurrencyBundleInterface",19],["T_WHITESPACE"," ",19],["T_EXTENDS","extends",19],["T_WHITESPACE"," ",19],["T_STRING","ResourceBundleInterface",19],["T_WHITESPACE","\n",19],"{",["T_WHITESPACE","\n    ",20],["T_DOC_COMMENT","\/**\n     * Returns the symbol used for a currency.\n     *\n     * @param string $currency      A currency code (e.g. \"EUR\")\n     * @param string $displayLocale Optional. The locale to return the result in\n     *                              Defaults to {@link \\Locale::getDefault()}.\n     *\n     * @return string|null The currency symbol or NULL if not found\n     *\/",21],["T_WHITESPACE","\n    ",29],["T_PUBLIC","public",30],["T_WHITESPACE"," ",30],["T_FUNCTION","function",30],["T_WHITESPACE"," ",30],["T_STRING","getCurrencySymbol",30],"(",["T_VARIABLE","$currency",30],",",["T_WHITESPACE"," ",30],["T_VARIABLE","$displayLocale",30],["T_WHITESPACE"," ",30],"=",["T_WHITESPACE"," ",30],["T_STRING","null",30],")",";",["T_WHITESPACE","\n\n    ",30],["T_DOC_COMMENT","\/**\n     * Returns the name of a currency.\n     *\n     * @param string $currency      A currency code (e.g. \"EUR\")\n     * @param string $displayLocale Optional. The locale to return the name in\n     *                              Defaults to {@link \\Locale::getDefault()}.\n     *\n     * @return string|null The name of the currency or NULL if not found\n     *\/",32],["T_WHITESPACE","\n    ",40],["T_PUBLIC","public",41],["T_WHITESPACE"," ",41],["T_FUNCTION","function",41],["T_WHITESPACE"," ",41],["T_STRING","getCurrencyName",41],"(",["T_VARIABLE","$currency",41],",",["T_WHITESPACE"," ",41],["T_VARIABLE","$displayLocale",41],["T_WHITESPACE"," ",41],"=",["T_WHITESPACE"," ",41],["T_STRING","null",41],")",";",["T_WHITESPACE","\n\n    ",41],["T_DOC_COMMENT","\/**\n     * Returns the names of all known currencies.\n     *\n     * @param string $displayLocale Optional. The locale to return the names in\n     *                              Defaults to {@link \\Locale::getDefault()}.\n     *\n     * @return string[] A list of currency names indexed by currency codes\n     *\/",43],["T_WHITESPACE","\n    ",50],["T_PUBLIC","public",51],["T_WHITESPACE"," ",51],["T_FUNCTION","function",51],["T_WHITESPACE"," ",51],["T_STRING","getCurrencyNames",51],"(",["T_VARIABLE","$displayLocale",51],["T_WHITESPACE"," ",51],"=",["T_WHITESPACE"," ",51],["T_STRING","null",51],")",";",["T_WHITESPACE","\n\n    ",51],["T_DOC_COMMENT","\/**\n     * Returns the number of digits after the comma of a currency.\n     *\n     * @param string $currency A currency code (e.g. \"EUR\")\n     *\n     * @return int|null The number of digits after the comma or NULL if not found\n     *\/",53],["T_WHITESPACE","\n    ",59],["T_PUBLIC","public",60],["T_WHITESPACE"," ",60],["T_FUNCTION","function",60],["T_WHITESPACE"," ",60],["T_STRING","getFractionDigits",60],"(",["T_VARIABLE","$currency",60],")",";",["T_WHITESPACE","\n\n    ",60],["T_DOC_COMMENT","\/**\n     * Returns the rounding increment of a currency.\n     *\n     * The rounding increment indicates to which number a currency is rounded.\n     * For example, 1230 rounded to the nearest 50 is 1250. 1.234 rounded to the\n     * nearest 0.65 is 1.3.\n     *\n     * @param string $currency A currency code (e.g. \"EUR\")\n     *\n     * @return float|int|null The rounding increment or NULL if not found\n     *\/",62],["T_WHITESPACE","\n    ",72],["T_PUBLIC","public",73],["T_WHITESPACE"," ",73],["T_FUNCTION","function",73],["T_WHITESPACE"," ",73],["T_STRING","getRoundingIncrement",73],"(",["T_VARIABLE","$currency",73],")",";",["T_WHITESPACE","\n",73],"}",["T_WHITESPACE","\n",74]]