[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_COMMENT","\/*\n * This file is part of the Symfony package.\n *\n * (c) Fabien Potencier <fabien@symfony.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\/",3],["T_WHITESPACE","\n\n",10],["T_NAMESPACE","namespace",12],["T_WHITESPACE"," ",12],["T_STRING","Symfony",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Component",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Intl",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Util",12],";",["T_WHITESPACE","\n\n",12],["T_USE","use",14],["T_WHITESPACE"," ",14],["T_STRING","Symfony",14],["T_NS_SEPARATOR","\\",14],["T_STRING","Component",14],["T_NS_SEPARATOR","\\",14],["T_STRING","Intl",14],["T_NS_SEPARATOR","\\",14],["T_STRING","Intl",14],";",["T_WHITESPACE","\n\n",14],["T_DOC_COMMENT","\/**\n * Helper class for preparing test cases that rely on the Intl component.\n *\n * Any test that tests functionality relying on either the intl classes or\n * the resource bundle data should call either of the methods\n * {@link requireIntl()} or {@link requireFullIntl()}. Calling\n * {@link requireFullIntl()} is only necessary if you use functionality in the\n * test that is not provided by the stub intl implementation.\n *\n * @author Bernhard Schussek <bschussek@gmail.com>\n *\/",16],["T_WHITESPACE","\n",26],["T_CLASS","class",27],["T_WHITESPACE"," ",27],["T_STRING","IntlTestHelper",27],["T_WHITESPACE","\n",27],"{",["T_WHITESPACE","\n    ",28],["T_DOC_COMMENT","\/**\n     * Should be called before tests that work fine with the stub implementation.\n     *\/",29],["T_WHITESPACE","\n    ",31],["T_PUBLIC","public",32],["T_WHITESPACE"," ",32],["T_STATIC","static",32],["T_WHITESPACE"," ",32],["T_FUNCTION","function",32],["T_WHITESPACE"," ",32],["T_STRING","requireIntl",32],"(",["T_NS_SEPARATOR","\\",32],["T_STRING","PHPUnit_Framework_TestCase",32],["T_WHITESPACE"," ",32],["T_VARIABLE","$testCase",32],",",["T_WHITESPACE"," ",32],["T_VARIABLE","$minimumIcuVersion",32],["T_WHITESPACE"," ",32],"=",["T_WHITESPACE"," ",32],["T_STRING","null",32],")",["T_WHITESPACE","\n    ",32],"{",["T_WHITESPACE","\n        ",33],["T_IF","if",34],["T_WHITESPACE"," ",34],"(",["T_STRING","null",34],["T_WHITESPACE"," ",34],["T_IS_IDENTICAL","===",34],["T_WHITESPACE"," ",34],["T_VARIABLE","$minimumIcuVersion",34],")",["T_WHITESPACE"," ",34],"{",["T_WHITESPACE","\n            ",34],["T_VARIABLE","$minimumIcuVersion",35],["T_WHITESPACE"," ",35],"=",["T_WHITESPACE"," ",35],["T_STRING","Intl",35],["T_DOUBLE_COLON","::",35],["T_STRING","getIcuStubVersion",35],"(",")",";",["T_WHITESPACE","\n        ",35],"}",["T_WHITESPACE","\n\n        ",36],["T_COMMENT","\/\/ We only run tests if the version is *one specific version*.\n",38],["T_WHITESPACE","        ",39],["T_COMMENT","\/\/ This condition is satisfied if\n",39],["T_WHITESPACE","        ",40],["T_COMMENT","\/\/\n",40],["T_WHITESPACE","        ",41],["T_COMMENT","\/\/   * the intl extension is loaded with version Intl::getIcuStubVersion()\n",41],["T_WHITESPACE","        ",42],["T_COMMENT","\/\/   * the intl extension is not loaded\n",42],["T_WHITESPACE","\n        ",43],["T_IF","if",44],["T_WHITESPACE"," ",44],"(","(",["T_VARIABLE","$minimumIcuVersion",44],["T_WHITESPACE"," ",44],["T_BOOLEAN_OR","||",44],["T_WHITESPACE"," ",44],["T_STRING","defined",44],"(",["T_CONSTANT_ENCAPSED_STRING","'HHVM_VERSION_ID'",44],")",")",["T_WHITESPACE"," ",44],["T_BOOLEAN_AND","&&",44],["T_WHITESPACE"," ",44],["T_STRING","IcuVersion",44],["T_DOUBLE_COLON","::",44],["T_STRING","compare",44],"(",["T_STRING","Intl",44],["T_DOUBLE_COLON","::",44],["T_STRING","getIcuVersion",44],"(",")",",",["T_WHITESPACE"," ",44],["T_VARIABLE","$minimumIcuVersion",44],",",["T_WHITESPACE"," ",44],["T_CONSTANT_ENCAPSED_STRING","'<'",44],",",["T_WHITESPACE"," ",44],["T_LNUMBER","1",44],")",")",["T_WHITESPACE"," ",44],"{",["T_WHITESPACE","\n            ",44],["T_VARIABLE","$testCase",45],["T_OBJECT_OPERATOR","->",45],["T_STRING","markTestSkipped",45],"(",["T_CONSTANT_ENCAPSED_STRING","'ICU version '",45],".",["T_VARIABLE","$minimumIcuVersion",45],".",["T_CONSTANT_ENCAPSED_STRING","' is required.'",45],")",";",["T_WHITESPACE","\n        ",45],"}",["T_WHITESPACE","\n\n        ",46],["T_COMMENT","\/\/ Normalize the default locale in case this is not done explicitly\n",48],["T_WHITESPACE","        ",49],["T_COMMENT","\/\/ in the test\n",49],["T_WHITESPACE","        ",50],["T_NS_SEPARATOR","\\",50],["T_STRING","Locale",50],["T_DOUBLE_COLON","::",50],["T_STRING","setDefault",50],"(",["T_CONSTANT_ENCAPSED_STRING","'en'",50],")",";",["T_WHITESPACE","\n\n        ",50],["T_COMMENT","\/\/ Consequently, tests will\n",52],["T_WHITESPACE","        ",53],["T_COMMENT","\/\/\n",53],["T_WHITESPACE","        ",54],["T_COMMENT","\/\/   * run only for one ICU version (see Intl::getIcuStubVersion())\n",54],["T_WHITESPACE","        ",55],["T_COMMENT","\/\/     there is no need to add control structures to your tests that\n",55],["T_WHITESPACE","        ",56],["T_COMMENT","\/\/     change the test depending on the ICU version.\n",56],["T_WHITESPACE","        ",57],["T_COMMENT","\/\/\n",57],["T_WHITESPACE","        ",58],["T_COMMENT","\/\/ Tests should only rely on functionality that is implemented in the\n",58],["T_WHITESPACE","        ",59],["T_COMMENT","\/\/ stub classes.\n",59],["T_WHITESPACE","    ",60],"}",["T_WHITESPACE","\n\n    ",60],["T_DOC_COMMENT","\/**\n     * Should be called before tests that require a feature-complete intl\n     * implementation.\n     *\/",62],["T_WHITESPACE","\n    ",65],["T_PUBLIC","public",66],["T_WHITESPACE"," ",66],["T_STATIC","static",66],["T_WHITESPACE"," ",66],["T_FUNCTION","function",66],["T_WHITESPACE"," ",66],["T_STRING","requireFullIntl",66],"(",["T_NS_SEPARATOR","\\",66],["T_STRING","PHPUnit_Framework_TestCase",66],["T_WHITESPACE"," ",66],["T_VARIABLE","$testCase",66],",",["T_WHITESPACE"," ",66],["T_VARIABLE","$minimumIcuVersion",66],["T_WHITESPACE"," ",66],"=",["T_WHITESPACE"," ",66],["T_STRING","null",66],")",["T_WHITESPACE","\n    ",66],"{",["T_WHITESPACE","\n        ",67],["T_COMMENT","\/\/ We only run tests if the intl extension is loaded...\n",68],["T_WHITESPACE","        ",69],["T_IF","if",69],["T_WHITESPACE"," ",69],"(","!",["T_STRING","Intl",69],["T_DOUBLE_COLON","::",69],["T_STRING","isExtensionLoaded",69],"(",")",")",["T_WHITESPACE"," ",69],"{",["T_WHITESPACE","\n            ",69],["T_VARIABLE","$testCase",70],["T_OBJECT_OPERATOR","->",70],["T_STRING","markTestSkipped",70],"(",["T_CONSTANT_ENCAPSED_STRING","'Extension intl is required.'",70],")",";",["T_WHITESPACE","\n        ",70],"}",["T_WHITESPACE","\n\n        ",71],["T_STRING","self",73],["T_DOUBLE_COLON","::",73],["T_STRING","requireIntl",73],"(",["T_VARIABLE","$testCase",73],",",["T_WHITESPACE"," ",73],["T_VARIABLE","$minimumIcuVersion",73],")",";",["T_WHITESPACE","\n\n        ",73],["T_COMMENT","\/\/ Consequently, tests will\n",75],["T_WHITESPACE","        ",76],["T_COMMENT","\/\/\n",76],["T_WHITESPACE","        ",77],["T_COMMENT","\/\/   * run only for one ICU version (see Intl::getIcuStubVersion())\n",77],["T_WHITESPACE","        ",78],["T_COMMENT","\/\/     there is no need to add control structures to your tests that\n",78],["T_WHITESPACE","        ",79],["T_COMMENT","\/\/     change the test depending on the ICU version.\n",79],["T_WHITESPACE","        ",80],["T_COMMENT","\/\/   * always use the C intl classes\n",80],["T_WHITESPACE","    ",81],"}",["T_WHITESPACE","\n\n    ",81],["T_DOC_COMMENT","\/**\n     * Skips the test unless the current system has a 32bit architecture.\n     *\/",83],["T_WHITESPACE","\n    ",85],["T_PUBLIC","public",86],["T_WHITESPACE"," ",86],["T_STATIC","static",86],["T_WHITESPACE"," ",86],["T_FUNCTION","function",86],["T_WHITESPACE"," ",86],["T_STRING","require32Bit",86],"(",["T_NS_SEPARATOR","\\",86],["T_STRING","PHPUnit_Framework_TestCase",86],["T_WHITESPACE"," ",86],["T_VARIABLE","$testCase",86],")",["T_WHITESPACE","\n    ",86],"{",["T_WHITESPACE","\n        ",87],["T_IF","if",88],["T_WHITESPACE"," ",88],"(",["T_LNUMBER","4",88],["T_WHITESPACE"," ",88],["T_IS_NOT_IDENTICAL","!==",88],["T_WHITESPACE"," ",88],["T_STRING","PHP_INT_SIZE",88],")",["T_WHITESPACE"," ",88],"{",["T_WHITESPACE","\n            ",88],["T_VARIABLE","$testCase",89],["T_OBJECT_OPERATOR","->",89],["T_STRING","markTestSkipped",89],"(",["T_CONSTANT_ENCAPSED_STRING","'PHP 32 bit is required.'",89],")",";",["T_WHITESPACE","\n        ",89],"}",["T_WHITESPACE","\n    ",90],"}",["T_WHITESPACE","\n\n    ",91],["T_DOC_COMMENT","\/**\n     * Skips the test unless the current system has a 64bit architecture.\n     *\/",93],["T_WHITESPACE","\n    ",95],["T_PUBLIC","public",96],["T_WHITESPACE"," ",96],["T_STATIC","static",96],["T_WHITESPACE"," ",96],["T_FUNCTION","function",96],["T_WHITESPACE"," ",96],["T_STRING","require64Bit",96],"(",["T_NS_SEPARATOR","\\",96],["T_STRING","PHPUnit_Framework_TestCase",96],["T_WHITESPACE"," ",96],["T_VARIABLE","$testCase",96],")",["T_WHITESPACE","\n    ",96],"{",["T_WHITESPACE","\n        ",97],["T_IF","if",98],["T_WHITESPACE"," ",98],"(",["T_LNUMBER","8",98],["T_WHITESPACE"," ",98],["T_IS_NOT_IDENTICAL","!==",98],["T_WHITESPACE"," ",98],["T_STRING","PHP_INT_SIZE",98],")",["T_WHITESPACE"," ",98],"{",["T_WHITESPACE","\n            ",98],["T_VARIABLE","$testCase",99],["T_OBJECT_OPERATOR","->",99],["T_STRING","markTestSkipped",99],"(",["T_CONSTANT_ENCAPSED_STRING","'PHP 64 bit is required.'",99],")",";",["T_WHITESPACE","\n        ",99],"}",["T_WHITESPACE","\n    ",100],"}",["T_WHITESPACE","\n\n    ",101],["T_DOC_COMMENT","\/**\n     * Must not be instantiated.\n     *\/",103],["T_WHITESPACE","\n    ",105],["T_PRIVATE","private",106],["T_WHITESPACE"," ",106],["T_FUNCTION","function",106],["T_WHITESPACE"," ",106],["T_STRING","__construct",106],"(",")",["T_WHITESPACE","\n    ",106],"{",["T_WHITESPACE","\n    ",107],"}",["T_WHITESPACE","\n",108],"}",["T_WHITESPACE","\n",109]]