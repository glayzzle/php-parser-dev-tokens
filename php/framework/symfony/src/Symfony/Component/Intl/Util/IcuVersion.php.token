[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_COMMENT","\/*\n * This file is part of the Symfony package.\n *\n * (c) Fabien Potencier <fabien@symfony.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\/",3],["T_WHITESPACE","\n\n",10],["T_NAMESPACE","namespace",12],["T_WHITESPACE"," ",12],["T_STRING","Symfony",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Component",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Intl",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Util",12],";",["T_WHITESPACE","\n\n",12],["T_DOC_COMMENT","\/**\n * Facilitates the comparison of ICU version strings.\n *\n * @author Bernhard Schussek <bschussek@gmail.com>\n *\/",14],["T_WHITESPACE","\n",18],["T_CLASS","class",19],["T_WHITESPACE"," ",19],["T_STRING","IcuVersion",19],["T_WHITESPACE","\n",19],"{",["T_WHITESPACE","\n    ",20],["T_DOC_COMMENT","\/**\n     * Compares two ICU versions with an operator.\n     *\n     * This method is identical to {@link version_compare()}, except that you\n     * can pass the number of regarded version components in the last argument\n     * $precision.\n     *\n     * Also, a single digit release version and a single digit major version\n     * are contracted to a two digit release version. If no major version\n     * is given, it is substituted by zero.\n     *\n     * Examples:\n     *\n     *     IcuVersion::compare('1.2.3', '1.2.4', '==')\n     *     \/\/ => false\n     *\n     *     IcuVersion::compare('1.2.3', '1.2.4', '==', 2)\n     *     \/\/ => true\n     *\n     *     IcuVersion::compare('1.2.3', '12.3', '==')\n     *     \/\/ => true\n     *\n     *     IcuVersion::compare('1', '10', '==')\n     *     \/\/ => true\n     *\n     * @param string   $version1  A version string\n     * @param string   $version2  A version string to compare\n     * @param string   $operator  The comparison operator\n     * @param int|null $precision The number of components to compare. Pass\n     *                            NULL to compare the versions unchanged.\n     *\n     * @return bool Whether the comparison succeeded\n     *\n     * @see normalize()\n     *\/",21],["T_WHITESPACE","\n    ",55],["T_PUBLIC","public",56],["T_WHITESPACE"," ",56],["T_STATIC","static",56],["T_WHITESPACE"," ",56],["T_FUNCTION","function",56],["T_WHITESPACE"," ",56],["T_STRING","compare",56],"(",["T_VARIABLE","$version1",56],",",["T_WHITESPACE"," ",56],["T_VARIABLE","$version2",56],",",["T_WHITESPACE"," ",56],["T_VARIABLE","$operator",56],",",["T_WHITESPACE"," ",56],["T_VARIABLE","$precision",56],["T_WHITESPACE"," ",56],"=",["T_WHITESPACE"," ",56],["T_STRING","null",56],")",["T_WHITESPACE","\n    ",56],"{",["T_WHITESPACE","\n        ",57],["T_VARIABLE","$version1",58],["T_WHITESPACE"," ",58],"=",["T_WHITESPACE"," ",58],["T_STRING","self",58],["T_DOUBLE_COLON","::",58],["T_STRING","normalize",58],"(",["T_VARIABLE","$version1",58],",",["T_WHITESPACE"," ",58],["T_VARIABLE","$precision",58],")",";",["T_WHITESPACE","\n        ",58],["T_VARIABLE","$version2",59],["T_WHITESPACE"," ",59],"=",["T_WHITESPACE"," ",59],["T_STRING","self",59],["T_DOUBLE_COLON","::",59],["T_STRING","normalize",59],"(",["T_VARIABLE","$version2",59],",",["T_WHITESPACE"," ",59],["T_VARIABLE","$precision",59],")",";",["T_WHITESPACE","\n\n        ",59],["T_RETURN","return",61],["T_WHITESPACE"," ",61],["T_STRING","version_compare",61],"(",["T_VARIABLE","$version1",61],",",["T_WHITESPACE"," ",61],["T_VARIABLE","$version2",61],",",["T_WHITESPACE"," ",61],["T_VARIABLE","$operator",61],")",";",["T_WHITESPACE","\n    ",61],"}",["T_WHITESPACE","\n\n    ",62],["T_DOC_COMMENT","\/**\n     * Normalizes a version string to the number of components given in the\n     * parameter $precision.\n     *\n     * A single digit release version and a single digit major version are\n     * contracted to a two digit release version. If no major version is given,\n     * it is substituted by zero.\n     *\n     * Examples:\n     *\n     *     IcuVersion::normalize('1.2.3.4');\n     *     \/\/ => '12.3.4'\n     *\n     *     IcuVersion::normalize('1.2.3.4', 1);\n     *     \/\/ => '12'\n     *\n     *     IcuVersion::normalize('1.2.3.4', 2);\n     *     \/\/ => '12.3'\n     *\n     * @param string   $version   An ICU version string\n     * @param int|null $precision The number of components to include. Pass\n     *                            NULL to return the version unchanged.\n     *\n     * @return string|null The normalized ICU version or NULL if it couldn't be\n     *                     normalized.\n     *\/",64],["T_WHITESPACE","\n    ",89],["T_PUBLIC","public",90],["T_WHITESPACE"," ",90],["T_STATIC","static",90],["T_WHITESPACE"," ",90],["T_FUNCTION","function",90],["T_WHITESPACE"," ",90],["T_STRING","normalize",90],"(",["T_VARIABLE","$version",90],",",["T_WHITESPACE"," ",90],["T_VARIABLE","$precision",90],")",["T_WHITESPACE","\n    ",90],"{",["T_WHITESPACE","\n        ",91],["T_VARIABLE","$version",92],["T_WHITESPACE"," ",92],"=",["T_WHITESPACE"," ",92],["T_STRING","preg_replace",92],"(",["T_CONSTANT_ENCAPSED_STRING","'\/^(\\d)\\.(\\d)\/'",92],",",["T_WHITESPACE"," ",92],["T_CONSTANT_ENCAPSED_STRING","'$1$2'",92],",",["T_WHITESPACE"," ",92],["T_VARIABLE","$version",92],")",";",["T_WHITESPACE","\n\n        ",92],["T_IF","if",94],["T_WHITESPACE"," ",94],"(",["T_LNUMBER","1",94],["T_WHITESPACE"," ",94],["T_IS_IDENTICAL","===",94],["T_WHITESPACE"," ",94],["T_STRING","strlen",94],"(",["T_VARIABLE","$version",94],")",")",["T_WHITESPACE"," ",94],"{",["T_WHITESPACE","\n            ",94],["T_VARIABLE","$version",95],["T_WHITESPACE"," ",95],["T_CONCAT_EQUAL",".=",95],["T_WHITESPACE"," ",95],["T_CONSTANT_ENCAPSED_STRING","'0'",95],";",["T_WHITESPACE","\n        ",95],"}",["T_WHITESPACE","\n\n        ",96],["T_RETURN","return",98],["T_WHITESPACE"," ",98],["T_STRING","Version",98],["T_DOUBLE_COLON","::",98],["T_STRING","normalize",98],"(",["T_VARIABLE","$version",98],",",["T_WHITESPACE"," ",98],["T_VARIABLE","$precision",98],")",";",["T_WHITESPACE","\n    ",98],"}",["T_WHITESPACE","\n\n    ",99],["T_DOC_COMMENT","\/**\n     * Must not be instantiated.\n     *\/",101],["T_WHITESPACE","\n    ",103],["T_PRIVATE","private",104],["T_WHITESPACE"," ",104],["T_FUNCTION","function",104],["T_WHITESPACE"," ",104],["T_STRING","__construct",104],"(",")",["T_WHITESPACE","\n    ",104],"{",["T_WHITESPACE","\n    ",105],"}",["T_WHITESPACE","\n",106],"}",["T_WHITESPACE","\n",107]]