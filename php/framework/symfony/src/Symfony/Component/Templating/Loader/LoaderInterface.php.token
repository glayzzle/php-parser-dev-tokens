[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_COMMENT","\/*\n * This file is part of the Symfony package.\n *\n * (c) Fabien Potencier <fabien@symfony.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\/",3],["T_WHITESPACE","\n\n",10],["T_NAMESPACE","namespace",12],["T_WHITESPACE"," ",12],["T_STRING","Symfony",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Component",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Templating",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Loader",12],";",["T_WHITESPACE","\n\n",12],["T_USE","use",14],["T_WHITESPACE"," ",14],["T_STRING","Symfony",14],["T_NS_SEPARATOR","\\",14],["T_STRING","Component",14],["T_NS_SEPARATOR","\\",14],["T_STRING","Templating",14],["T_NS_SEPARATOR","\\",14],["T_STRING","TemplateReferenceInterface",14],";",["T_WHITESPACE","\n",14],["T_USE","use",15],["T_WHITESPACE"," ",15],["T_STRING","Symfony",15],["T_NS_SEPARATOR","\\",15],["T_STRING","Component",15],["T_NS_SEPARATOR","\\",15],["T_STRING","Templating",15],["T_NS_SEPARATOR","\\",15],["T_STRING","Storage",15],["T_NS_SEPARATOR","\\",15],["T_STRING","Storage",15],";",["T_WHITESPACE","\n\n",15],["T_DOC_COMMENT","\/**\n * LoaderInterface is the interface all loaders must implement.\n *\n * @author Fabien Potencier <fabien@symfony.com>\n *\/",17],["T_WHITESPACE","\n",21],["T_INTERFACE","interface",22],["T_WHITESPACE"," ",22],["T_STRING","LoaderInterface",22],["T_WHITESPACE","\n",22],"{",["T_WHITESPACE","\n    ",23],["T_DOC_COMMENT","\/**\n     * Loads a template.\n     *\n     * @param TemplateReferenceInterface $template A template\n     *\n     * @return Storage|bool false if the template cannot be loaded, a Storage instance otherwise\n     *\/",24],["T_WHITESPACE","\n    ",30],["T_PUBLIC","public",31],["T_WHITESPACE"," ",31],["T_FUNCTION","function",31],["T_WHITESPACE"," ",31],["T_STRING","load",31],"(",["T_STRING","TemplateReferenceInterface",31],["T_WHITESPACE"," ",31],["T_VARIABLE","$template",31],")",";",["T_WHITESPACE","\n\n    ",31],["T_DOC_COMMENT","\/**\n     * Returns true if the template is still fresh.\n     *\n     * @param TemplateReferenceInterface $template A template\n     * @param int                        $time     The last modification time of the cached template (timestamp)\n     *\n     * @return bool\n     *\/",33],["T_WHITESPACE","\n    ",40],["T_PUBLIC","public",41],["T_WHITESPACE"," ",41],["T_FUNCTION","function",41],["T_WHITESPACE"," ",41],["T_STRING","isFresh",41],"(",["T_STRING","TemplateReferenceInterface",41],["T_WHITESPACE"," ",41],["T_VARIABLE","$template",41],",",["T_WHITESPACE"," ",41],["T_VARIABLE","$time",41],")",";",["T_WHITESPACE","\n",41],"}",["T_WHITESPACE","\n",42]]