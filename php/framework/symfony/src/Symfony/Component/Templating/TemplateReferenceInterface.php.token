[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_COMMENT","\/*\n * This file is part of the Symfony package.\n *\n * (c) Fabien Potencier <fabien@symfony.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\/",3],["T_WHITESPACE","\n\n",10],["T_NAMESPACE","namespace",12],["T_WHITESPACE"," ",12],["T_STRING","Symfony",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Component",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Templating",12],";",["T_WHITESPACE","\n\n",12],["T_DOC_COMMENT","\/**\n * Interface to be implemented by all templates.\n *\n * @author Victor Berchet <victor@suumit.com>\n *\/",14],["T_WHITESPACE","\n",18],["T_INTERFACE","interface",19],["T_WHITESPACE"," ",19],["T_STRING","TemplateReferenceInterface",19],["T_WHITESPACE","\n",19],"{",["T_WHITESPACE","\n    ",20],["T_DOC_COMMENT","\/**\n     * Gets the template parameters.\n     *\n     * @return array An array of parameters\n     *\/",21],["T_WHITESPACE","\n    ",25],["T_PUBLIC","public",26],["T_WHITESPACE"," ",26],["T_FUNCTION","function",26],["T_WHITESPACE"," ",26],["T_STRING","all",26],"(",")",";",["T_WHITESPACE","\n\n    ",26],["T_DOC_COMMENT","\/**\n     * Sets a template parameter.\n     *\n     * @param string $name  The parameter name\n     * @param string $value The parameter value\n     *\n     * @return $this\n     *\n     * @throws \\InvalidArgumentException if the parameter name is not supported\n     *\/",28],["T_WHITESPACE","\n    ",37],["T_PUBLIC","public",38],["T_WHITESPACE"," ",38],["T_FUNCTION","function",38],["T_WHITESPACE"," ",38],["T_STRING","set",38],"(",["T_VARIABLE","$name",38],",",["T_WHITESPACE"," ",38],["T_VARIABLE","$value",38],")",";",["T_WHITESPACE","\n\n    ",38],["T_DOC_COMMENT","\/**\n     * Gets a template parameter.\n     *\n     * @param string $name The parameter name\n     *\n     * @return string The parameter value\n     *\n     * @throws \\InvalidArgumentException if the parameter name is not supported\n     *\/",40],["T_WHITESPACE","\n    ",48],["T_PUBLIC","public",49],["T_WHITESPACE"," ",49],["T_FUNCTION","function",49],["T_WHITESPACE"," ",49],["T_STRING","get",49],"(",["T_VARIABLE","$name",49],")",";",["T_WHITESPACE","\n\n    ",49],["T_DOC_COMMENT","\/**\n     * Returns the path to the template.\n     *\n     * By default, it just returns the template name.\n     *\n     * @return string A path to the template or a resource\n     *\/",51],["T_WHITESPACE","\n    ",57],["T_PUBLIC","public",58],["T_WHITESPACE"," ",58],["T_FUNCTION","function",58],["T_WHITESPACE"," ",58],["T_STRING","getPath",58],"(",")",";",["T_WHITESPACE","\n\n    ",58],["T_DOC_COMMENT","\/**\n     * Returns the \"logical\" template name.\n     *\n     * The template name acts as a unique identifier for the template.\n     *\n     * @return string The template name\n     *\/",60],["T_WHITESPACE","\n    ",66],["T_PUBLIC","public",67],["T_WHITESPACE"," ",67],["T_FUNCTION","function",67],["T_WHITESPACE"," ",67],["T_STRING","getLogicalName",67],"(",")",";",["T_WHITESPACE","\n\n    ",67],["T_DOC_COMMENT","\/**\n     * Returns the string representation as shortcut for getLogicalName().\n     *\n     * Alias of getLogicalName().\n     *\n     * @return string The template name\n     *\/",69],["T_WHITESPACE","\n    ",75],["T_PUBLIC","public",76],["T_WHITESPACE"," ",76],["T_FUNCTION","function",76],["T_WHITESPACE"," ",76],["T_STRING","__toString",76],"(",")",";",["T_WHITESPACE","\n",76],"}",["T_WHITESPACE","\n",77]]