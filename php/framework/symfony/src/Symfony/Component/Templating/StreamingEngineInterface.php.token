[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_COMMENT","\/*\n * This file is part of the Symfony package.\n *\n * (c) Fabien Potencier <fabien@symfony.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\/",3],["T_WHITESPACE","\n\n",10],["T_NAMESPACE","namespace",12],["T_WHITESPACE"," ",12],["T_STRING","Symfony",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Component",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Templating",12],";",["T_WHITESPACE","\n\n",12],["T_DOC_COMMENT","\/**\n * StreamingEngineInterface provides a method that knows how to stream a template.\n *\n * @author Fabien Potencier <fabien@symfony.com>\n *\/",14],["T_WHITESPACE","\n",18],["T_INTERFACE","interface",19],["T_WHITESPACE"," ",19],["T_STRING","StreamingEngineInterface",19],["T_WHITESPACE","\n",19],"{",["T_WHITESPACE","\n    ",20],["T_DOC_COMMENT","\/**\n     * Streams a template.\n     *\n     * The implementation should output the content directly to the client.\n     *\n     * @param string|TemplateReferenceInterface $name       A template name or a TemplateReferenceInterface instance\n     * @param array                             $parameters An array of parameters to pass to the template\n     *\n     * @throws \\RuntimeException if the template cannot be rendered\n     * @throws \\LogicException   if the template cannot be streamed\n     *\/",21],["T_WHITESPACE","\n    ",31],["T_PUBLIC","public",32],["T_WHITESPACE"," ",32],["T_FUNCTION","function",32],["T_WHITESPACE"," ",32],["T_STRING","stream",32],"(",["T_VARIABLE","$name",32],",",["T_WHITESPACE"," ",32],["T_ARRAY","array",32],["T_WHITESPACE"," ",32],["T_VARIABLE","$parameters",32],["T_WHITESPACE"," ",32],"=",["T_WHITESPACE"," ",32],["T_ARRAY","array",32],"(",")",")",";",["T_WHITESPACE","\n",32],"}",["T_WHITESPACE","\n",33]]