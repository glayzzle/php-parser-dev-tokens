[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_COMMENT","\/*\n * This file is part of the Symfony package.\n *\n * (c) Fabien Potencier <fabien@symfony.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\/",3],["T_WHITESPACE","\n\n",10],["T_NAMESPACE","namespace",12],["T_WHITESPACE"," ",12],["T_STRING","Symfony",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Component",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Templating",12],";",["T_WHITESPACE","\n\n",12],["T_DOC_COMMENT","\/**\n * TemplateNameParserInterface converts template names to TemplateReferenceInterface\n * instances.\n *\n * @author Fabien Potencier <fabien@symfony.com>\n *\/",14],["T_WHITESPACE","\n",19],["T_INTERFACE","interface",20],["T_WHITESPACE"," ",20],["T_STRING","TemplateNameParserInterface",20],["T_WHITESPACE","\n",20],"{",["T_WHITESPACE","\n    ",21],["T_DOC_COMMENT","\/**\n     * Convert a template name to a TemplateReferenceInterface instance.\n     *\n     * @param string|TemplateReferenceInterface $name A template name or a TemplateReferenceInterface instance\n     *\n     * @return TemplateReferenceInterface A template\n     *\/",22],["T_WHITESPACE","\n    ",28],["T_PUBLIC","public",29],["T_WHITESPACE"," ",29],["T_FUNCTION","function",29],["T_WHITESPACE"," ",29],["T_STRING","parse",29],"(",["T_VARIABLE","$name",29],")",";",["T_WHITESPACE","\n",29],"}",["T_WHITESPACE","\n",30]]