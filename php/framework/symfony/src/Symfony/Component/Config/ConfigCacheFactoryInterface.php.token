[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_COMMENT","\/*\n * This file is part of the Symfony package.\n *\n * (c) Fabien Potencier <fabien@symfony.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\/",3],["T_WHITESPACE","\n\n",10],["T_NAMESPACE","namespace",12],["T_WHITESPACE"," ",12],["T_STRING","Symfony",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Component",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Config",12],";",["T_WHITESPACE","\n\n",12],["T_DOC_COMMENT","\/**\n * Interface for a ConfigCache factory. This factory creates\n * an instance of ConfigCacheInterface and initializes the\n * cache if necessary.\n *\n * @author Matthias Pigulla <mp@webfactory.de>\n *\/",14],["T_WHITESPACE","\n",20],["T_INTERFACE","interface",21],["T_WHITESPACE"," ",21],["T_STRING","ConfigCacheFactoryInterface",21],["T_WHITESPACE","\n",21],"{",["T_WHITESPACE","\n    ",22],["T_DOC_COMMENT","\/**\n     * Creates a cache instance and (re-)initializes it if necessary.\n     *\n     * @param string   $file     The absolute cache file path\n     * @param callable $callable The callable to be executed when the cache needs to be filled (i. e. is not fresh). The cache will be passed as the only parameter to this callback\n     *\n     * @return ConfigCacheInterface $configCache The cache instance\n     *\/",23],["T_WHITESPACE","\n    ",30],["T_PUBLIC","public",31],["T_WHITESPACE"," ",31],["T_FUNCTION","function",31],["T_WHITESPACE"," ",31],["T_STRING","cache",31],"(",["T_VARIABLE","$file",31],",",["T_WHITESPACE"," ",31],["T_VARIABLE","$callable",31],")",";",["T_WHITESPACE","\n",31],"}",["T_WHITESPACE","\n",32]]