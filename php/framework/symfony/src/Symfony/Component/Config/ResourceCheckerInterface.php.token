[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_COMMENT","\/*\n * This file is part of the Symfony package.\n *\n * (c) Fabien Potencier <fabien@symfony.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\/",3],["T_WHITESPACE","\n\n",10],["T_NAMESPACE","namespace",12],["T_WHITESPACE"," ",12],["T_STRING","Symfony",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Component",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Config",12],";",["T_WHITESPACE","\n\n",12],["T_USE","use",14],["T_WHITESPACE"," ",14],["T_STRING","Symfony",14],["T_NS_SEPARATOR","\\",14],["T_STRING","Component",14],["T_NS_SEPARATOR","\\",14],["T_STRING","Config",14],["T_NS_SEPARATOR","\\",14],["T_STRING","Resource",14],["T_NS_SEPARATOR","\\",14],["T_STRING","ResourceInterface",14],";",["T_WHITESPACE","\n\n",14],["T_DOC_COMMENT","\/**\n * Interface for ResourceCheckers.\n *\n * When a ResourceCheckerConfigCache instance is checked for freshness, all its associated\n * metadata resources are passed to ResourceCheckers. The ResourceCheckers\n * can then inspect the resources and decide whether the cache can be considered\n * fresh or not.\n *\n * @author Matthias Pigulla <mp@webfactory.de>\n * @author Benjamin Klotz <bk@webfactory.de>\n *\/",16],["T_WHITESPACE","\n",26],["T_INTERFACE","interface",27],["T_WHITESPACE"," ",27],["T_STRING","ResourceCheckerInterface",27],["T_WHITESPACE","\n",27],"{",["T_WHITESPACE","\n    ",28],["T_DOC_COMMENT","\/**\n     * Queries the ResourceChecker whether it can validate a given\n     * resource or not.\n     *\n     * @param ResourceInterface $metadata The resource to be checked for freshness\n     *\n     * @return bool True if the ResourceChecker can handle this resource type, false if not\n     *\/",29],["T_WHITESPACE","\n    ",36],["T_PUBLIC","public",37],["T_WHITESPACE"," ",37],["T_FUNCTION","function",37],["T_WHITESPACE"," ",37],["T_STRING","supports",37],"(",["T_STRING","ResourceInterface",37],["T_WHITESPACE"," ",37],["T_VARIABLE","$metadata",37],")",";",["T_WHITESPACE","\n\n    ",37],["T_DOC_COMMENT","\/**\n     * Validates the resource.\n     *\n     * @param ResourceInterface $resource  The resource to be validated\n     * @param int               $timestamp The timestamp at which the cache associated with this resource was created\n     *\n     * @return bool True if the resource has not changed since the given timestamp, false otherwise\n     *\/",39],["T_WHITESPACE","\n    ",46],["T_PUBLIC","public",47],["T_WHITESPACE"," ",47],["T_FUNCTION","function",47],["T_WHITESPACE"," ",47],["T_STRING","isFresh",47],"(",["T_STRING","ResourceInterface",47],["T_WHITESPACE"," ",47],["T_VARIABLE","$resource",47],",",["T_WHITESPACE"," ",47],["T_VARIABLE","$timestamp",47],")",";",["T_WHITESPACE","\n",47],"}",["T_WHITESPACE","\n",48]]