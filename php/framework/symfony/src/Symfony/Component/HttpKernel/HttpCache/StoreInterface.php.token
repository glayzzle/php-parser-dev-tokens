[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_COMMENT","\/*\n * This file is part of the Symfony package.\n *\n * (c) Fabien Potencier <fabien@symfony.com>\n *\n * This code is partially based on the Rack-Cache library by Ryan Tomayko,\n * which is released under the MIT license.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\/",3],["T_WHITESPACE","\n\n",13],["T_NAMESPACE","namespace",15],["T_WHITESPACE"," ",15],["T_STRING","Symfony",15],["T_NS_SEPARATOR","\\",15],["T_STRING","Component",15],["T_NS_SEPARATOR","\\",15],["T_STRING","HttpKernel",15],["T_NS_SEPARATOR","\\",15],["T_STRING","HttpCache",15],";",["T_WHITESPACE","\n\n",15],["T_USE","use",17],["T_WHITESPACE"," ",17],["T_STRING","Symfony",17],["T_NS_SEPARATOR","\\",17],["T_STRING","Component",17],["T_NS_SEPARATOR","\\",17],["T_STRING","HttpFoundation",17],["T_NS_SEPARATOR","\\",17],["T_STRING","Request",17],";",["T_WHITESPACE","\n",17],["T_USE","use",18],["T_WHITESPACE"," ",18],["T_STRING","Symfony",18],["T_NS_SEPARATOR","\\",18],["T_STRING","Component",18],["T_NS_SEPARATOR","\\",18],["T_STRING","HttpFoundation",18],["T_NS_SEPARATOR","\\",18],["T_STRING","Response",18],";",["T_WHITESPACE","\n\n",18],["T_DOC_COMMENT","\/**\n * Interface implemented by HTTP cache stores.\n *\n * @author Fabien Potencier <fabien@symfony.com>\n *\/",20],["T_WHITESPACE","\n",24],["T_INTERFACE","interface",25],["T_WHITESPACE"," ",25],["T_STRING","StoreInterface",25],["T_WHITESPACE","\n",25],"{",["T_WHITESPACE","\n    ",26],["T_DOC_COMMENT","\/**\n     * Locates a cached Response for the Request provided.\n     *\n     * @param Request $request A Request instance\n     *\n     * @return Response|null A Response instance, or null if no cache entry was found\n     *\/",27],["T_WHITESPACE","\n    ",33],["T_PUBLIC","public",34],["T_WHITESPACE"," ",34],["T_FUNCTION","function",34],["T_WHITESPACE"," ",34],["T_STRING","lookup",34],"(",["T_STRING","Request",34],["T_WHITESPACE"," ",34],["T_VARIABLE","$request",34],")",";",["T_WHITESPACE","\n\n    ",34],["T_DOC_COMMENT","\/**\n     * Writes a cache entry to the store for the given Request and Response.\n     *\n     * Existing entries are read and any that match the response are removed. This\n     * method calls write with the new list of cache entries.\n     *\n     * @param Request  $request  A Request instance\n     * @param Response $response A Response instance\n     *\n     * @return string The key under which the response is stored\n     *\/",36],["T_WHITESPACE","\n    ",46],["T_PUBLIC","public",47],["T_WHITESPACE"," ",47],["T_FUNCTION","function",47],["T_WHITESPACE"," ",47],["T_STRING","write",47],"(",["T_STRING","Request",47],["T_WHITESPACE"," ",47],["T_VARIABLE","$request",47],",",["T_WHITESPACE"," ",47],["T_STRING","Response",47],["T_WHITESPACE"," ",47],["T_VARIABLE","$response",47],")",";",["T_WHITESPACE","\n\n    ",47],["T_DOC_COMMENT","\/**\n     * Invalidates all cache entries that match the request.\n     *\n     * @param Request $request A Request instance\n     *\/",49],["T_WHITESPACE","\n    ",53],["T_PUBLIC","public",54],["T_WHITESPACE"," ",54],["T_FUNCTION","function",54],["T_WHITESPACE"," ",54],["T_STRING","invalidate",54],"(",["T_STRING","Request",54],["T_WHITESPACE"," ",54],["T_VARIABLE","$request",54],")",";",["T_WHITESPACE","\n\n    ",54],["T_DOC_COMMENT","\/**\n     * Locks the cache for a given Request.\n     *\n     * @param Request $request A Request instance\n     *\n     * @return bool|string true if the lock is acquired, the path to the current lock otherwise\n     *\/",56],["T_WHITESPACE","\n    ",62],["T_PUBLIC","public",63],["T_WHITESPACE"," ",63],["T_FUNCTION","function",63],["T_WHITESPACE"," ",63],["T_STRING","lock",63],"(",["T_STRING","Request",63],["T_WHITESPACE"," ",63],["T_VARIABLE","$request",63],")",";",["T_WHITESPACE","\n\n    ",63],["T_DOC_COMMENT","\/**\n     * Releases the lock for the given Request.\n     *\n     * @param Request $request A Request instance\n     *\n     * @return bool False if the lock file does not exist or cannot be unlocked, true otherwise\n     *\/",65],["T_WHITESPACE","\n    ",71],["T_PUBLIC","public",72],["T_WHITESPACE"," ",72],["T_FUNCTION","function",72],["T_WHITESPACE"," ",72],["T_STRING","unlock",72],"(",["T_STRING","Request",72],["T_WHITESPACE"," ",72],["T_VARIABLE","$request",72],")",";",["T_WHITESPACE","\n\n    ",72],["T_DOC_COMMENT","\/**\n     * Returns whether or not a lock exists.\n     *\n     * @param Request $request A Request instance\n     *\n     * @return bool true if lock exists, false otherwise\n     *\/",74],["T_WHITESPACE","\n    ",80],["T_PUBLIC","public",81],["T_WHITESPACE"," ",81],["T_FUNCTION","function",81],["T_WHITESPACE"," ",81],["T_STRING","isLocked",81],"(",["T_STRING","Request",81],["T_WHITESPACE"," ",81],["T_VARIABLE","$request",81],")",";",["T_WHITESPACE","\n\n    ",81],["T_DOC_COMMENT","\/**\n     * Purges data for the given URL.\n     *\n     * @param string $url A URL\n     *\n     * @return bool true if the URL exists and has been purged, false otherwise\n     *\/",83],["T_WHITESPACE","\n    ",89],["T_PUBLIC","public",90],["T_WHITESPACE"," ",90],["T_FUNCTION","function",90],["T_WHITESPACE"," ",90],["T_STRING","purge",90],"(",["T_VARIABLE","$url",90],")",";",["T_WHITESPACE","\n\n    ",90],["T_DOC_COMMENT","\/**\n     * Cleanups storage.\n     *\/",92],["T_WHITESPACE","\n    ",94],["T_PUBLIC","public",95],["T_WHITESPACE"," ",95],["T_FUNCTION","function",95],["T_WHITESPACE"," ",95],["T_STRING","cleanup",95],"(",")",";",["T_WHITESPACE","\n",95],"}",["T_WHITESPACE","\n",96]]