[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_COMMENT","\/*\n * This file is part of the Symfony package.\n *\n * (c) Fabien Potencier <fabien@symfony.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\/",3],["T_WHITESPACE","\n\n",10],["T_NAMESPACE","namespace",12],["T_WHITESPACE"," ",12],["T_STRING","Symfony",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Component",12],["T_NS_SEPARATOR","\\",12],["T_STRING","HttpKernel",12],["T_NS_SEPARATOR","\\",12],["T_STRING","CacheWarmer",12],";",["T_WHITESPACE","\n\n",12],["T_DOC_COMMENT","\/**\n * Interface for classes able to warm up the cache.\n *\n * @author Fabien Potencier <fabien@symfony.com>\n *\/",14],["T_WHITESPACE","\n",18],["T_INTERFACE","interface",19],["T_WHITESPACE"," ",19],["T_STRING","CacheWarmerInterface",19],["T_WHITESPACE"," ",19],["T_EXTENDS","extends",19],["T_WHITESPACE"," ",19],["T_STRING","WarmableInterface",19],["T_WHITESPACE","\n",19],"{",["T_WHITESPACE","\n    ",20],["T_DOC_COMMENT","\/**\n     * Checks whether this warmer is optional or not.\n     *\n     * Optional warmers can be ignored on certain conditions.\n     *\n     * A warmer should return true if the cache can be\n     * generated incrementally and on-demand.\n     *\n     * @return bool true if the warmer is optional, false otherwise\n     *\/",21],["T_WHITESPACE","\n    ",30],["T_PUBLIC","public",31],["T_WHITESPACE"," ",31],["T_FUNCTION","function",31],["T_WHITESPACE"," ",31],["T_STRING","isOptional",31],"(",")",";",["T_WHITESPACE","\n",31],"}",["T_WHITESPACE","\n",32]]