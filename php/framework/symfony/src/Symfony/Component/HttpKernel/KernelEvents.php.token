[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_COMMENT","\/*\n * This file is part of the Symfony package.\n *\n * (c) Fabien Potencier <fabien@symfony.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\/",3],["T_WHITESPACE","\n\n",10],["T_NAMESPACE","namespace",12],["T_WHITESPACE"," ",12],["T_STRING","Symfony",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Component",12],["T_NS_SEPARATOR","\\",12],["T_STRING","HttpKernel",12],";",["T_WHITESPACE","\n\n",12],["T_DOC_COMMENT","\/**\n * Contains all events thrown in the HttpKernel component.\n *\n * @author Bernhard Schussek <bschussek@gmail.com>\n *\/",14],["T_WHITESPACE","\n",18],["T_FINAL","final",19],["T_WHITESPACE"," ",19],["T_CLASS","class",19],["T_WHITESPACE"," ",19],["T_STRING","KernelEvents",19],["T_WHITESPACE","\n",19],"{",["T_WHITESPACE","\n    ",20],["T_DOC_COMMENT","\/**\n     * The REQUEST event occurs at the very beginning of request\n     * dispatching.\n     *\n     * This event allows you to create a response for a request before any\n     * other code in the framework is executed.\n     *\n     * @Event(\"Symfony\\Component\\HttpKernel\\Event\\GetResponseEvent\")\n     *\n     * @var string\n     *\/",21],["T_WHITESPACE","\n    ",31],["T_CONST","const",32],["T_WHITESPACE"," ",32],["T_STRING","REQUEST",32],["T_WHITESPACE"," ",32],"=",["T_WHITESPACE"," ",32],["T_CONSTANT_ENCAPSED_STRING","'kernel.request'",32],";",["T_WHITESPACE","\n\n    ",32],["T_DOC_COMMENT","\/**\n     * The EXCEPTION event occurs when an uncaught exception appears.\n     *\n     * This event allows you to create a response for a thrown exception or\n     * to modify the thrown exception.\n     *\n     * @Event(\"Symfony\\Component\\HttpKernel\\Event\\GetResponseForExceptionEvent\")\n     *\n     * @var string\n     *\/",34],["T_WHITESPACE","\n    ",43],["T_CONST","const",44],["T_WHITESPACE"," ",44],["T_STRING","EXCEPTION",44],["T_WHITESPACE"," ",44],"=",["T_WHITESPACE"," ",44],["T_CONSTANT_ENCAPSED_STRING","'kernel.exception'",44],";",["T_WHITESPACE","\n\n    ",44],["T_DOC_COMMENT","\/**\n     * The VIEW event occurs when the return value of a controller\n     * is not a Response instance.\n     *\n     * This event allows you to create a response for the return value of the\n     * controller.\n     *\n     * @Event(\"Symfony\\Component\\HttpKernel\\Event\\GetResponseForControllerResultEvent\")\n     *\n     * @var string\n     *\/",46],["T_WHITESPACE","\n    ",56],["T_CONST","const",57],["T_WHITESPACE"," ",57],["T_STRING","VIEW",57],["T_WHITESPACE"," ",57],"=",["T_WHITESPACE"," ",57],["T_CONSTANT_ENCAPSED_STRING","'kernel.view'",57],";",["T_WHITESPACE","\n\n    ",57],["T_DOC_COMMENT","\/**\n     * The CONTROLLER event occurs once a controller was found for\n     * handling a request.\n     *\n     * This event allows you to change the controller that will handle the\n     * request.\n     *\n     * @Event(\"Symfony\\Component\\HttpKernel\\Event\\FilterControllerEvent\")\n     *\n     * @var string\n     *\/",59],["T_WHITESPACE","\n    ",69],["T_CONST","const",70],["T_WHITESPACE"," ",70],["T_STRING","CONTROLLER",70],["T_WHITESPACE"," ",70],"=",["T_WHITESPACE"," ",70],["T_CONSTANT_ENCAPSED_STRING","'kernel.controller'",70],";",["T_WHITESPACE","\n\n    ",70],["T_DOC_COMMENT","\/**\n     * The CONTROLLER_ARGUMENTS event occurs once controller arguments have been resolved.\n     *\n     * This event allows you to change the arguments that will be passed to\n     * the controller.\n     *\n     * @Event(\"Symfony\\Component\\HttpKernel\\Event\\FilterControllerArgumentsEvent\")\n     *\n     * @var string\n     *\/",72],["T_WHITESPACE","\n    ",81],["T_CONST","const",82],["T_WHITESPACE"," ",82],["T_STRING","CONTROLLER_ARGUMENTS",82],["T_WHITESPACE"," ",82],"=",["T_WHITESPACE"," ",82],["T_CONSTANT_ENCAPSED_STRING","'kernel.controller_arguments'",82],";",["T_WHITESPACE","\n\n    ",82],["T_DOC_COMMENT","\/**\n     * The RESPONSE event occurs once a response was created for\n     * replying to a request.\n     *\n     * This event allows you to modify or replace the response that will be\n     * replied.\n     *\n     * @Event(\"Symfony\\Component\\HttpKernel\\Event\\FilterResponseEvent\")\n     *\n     * @var string\n     *\/",84],["T_WHITESPACE","\n    ",94],["T_CONST","const",95],["T_WHITESPACE"," ",95],["T_STRING","RESPONSE",95],["T_WHITESPACE"," ",95],"=",["T_WHITESPACE"," ",95],["T_CONSTANT_ENCAPSED_STRING","'kernel.response'",95],";",["T_WHITESPACE","\n\n    ",95],["T_DOC_COMMENT","\/**\n     * The TERMINATE event occurs once a response was sent.\n     *\n     * This event allows you to run expensive post-response jobs.\n     *\n     * @Event(\"Symfony\\Component\\HttpKernel\\Event\\PostResponseEvent\")\n     *\n     * @var string\n     *\/",97],["T_WHITESPACE","\n    ",105],["T_CONST","const",106],["T_WHITESPACE"," ",106],["T_STRING","TERMINATE",106],["T_WHITESPACE"," ",106],"=",["T_WHITESPACE"," ",106],["T_CONSTANT_ENCAPSED_STRING","'kernel.terminate'",106],";",["T_WHITESPACE","\n\n    ",106],["T_DOC_COMMENT","\/**\n     * The FINISH_REQUEST event occurs when a response was generated for a request.\n     *\n     * This event allows you to reset the global and environmental state of\n     * the application, when it was changed during the request.\n     *\n     * @Event(\"Symfony\\Component\\HttpKernel\\Event\\FinishRequestEvent\")\n     *\n     * @var string\n     *\/",108],["T_WHITESPACE","\n    ",117],["T_CONST","const",118],["T_WHITESPACE"," ",118],["T_STRING","FINISH_REQUEST",118],["T_WHITESPACE"," ",118],"=",["T_WHITESPACE"," ",118],["T_CONSTANT_ENCAPSED_STRING","'kernel.finish_request'",118],";",["T_WHITESPACE","\n",118],"}",["T_WHITESPACE","\n",119]]