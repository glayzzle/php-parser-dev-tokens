[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_COMMENT","\/*\n * This file is part of the Symfony package.\n *\n * (c) Fabien Potencier <fabien@symfony.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\/",3],["T_WHITESPACE","\n\n",10],["T_NAMESPACE","namespace",12],["T_WHITESPACE"," ",12],["T_STRING","Symfony",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Component",12],["T_NS_SEPARATOR","\\",12],["T_STRING","HttpKernel",12],";",["T_WHITESPACE","\n\n",12],["T_USE","use",14],["T_WHITESPACE"," ",14],["T_STRING","Symfony",14],["T_NS_SEPARATOR","\\",14],["T_STRING","Component",14],["T_NS_SEPARATOR","\\",14],["T_STRING","HttpFoundation",14],["T_NS_SEPARATOR","\\",14],["T_STRING","Request",14],";",["T_WHITESPACE","\n",14],["T_USE","use",15],["T_WHITESPACE"," ",15],["T_STRING","Symfony",15],["T_NS_SEPARATOR","\\",15],["T_STRING","Component",15],["T_NS_SEPARATOR","\\",15],["T_STRING","HttpFoundation",15],["T_NS_SEPARATOR","\\",15],["T_STRING","Response",15],";",["T_WHITESPACE","\n\n",15],["T_DOC_COMMENT","\/**\n * HttpKernelInterface handles a Request to convert it to a Response.\n *\n * @author Fabien Potencier <fabien@symfony.com>\n *\/",17],["T_WHITESPACE","\n",21],["T_INTERFACE","interface",22],["T_WHITESPACE"," ",22],["T_STRING","HttpKernelInterface",22],["T_WHITESPACE","\n",22],"{",["T_WHITESPACE","\n    ",23],["T_CONST","const",24],["T_WHITESPACE"," ",24],["T_STRING","MASTER_REQUEST",24],["T_WHITESPACE"," ",24],"=",["T_WHITESPACE"," ",24],["T_LNUMBER","1",24],";",["T_WHITESPACE","\n    ",24],["T_CONST","const",25],["T_WHITESPACE"," ",25],["T_STRING","SUB_REQUEST",25],["T_WHITESPACE"," ",25],"=",["T_WHITESPACE"," ",25],["T_LNUMBER","2",25],";",["T_WHITESPACE","\n\n    ",25],["T_DOC_COMMENT","\/**\n     * Handles a Request to convert it to a Response.\n     *\n     * When $catch is true, the implementation must catch all exceptions\n     * and do its best to convert them to a Response instance.\n     *\n     * @param Request $request A Request instance\n     * @param int     $type    The type of the request\n     *                         (one of HttpKernelInterface::MASTER_REQUEST or HttpKernelInterface::SUB_REQUEST)\n     * @param bool    $catch   Whether to catch exceptions or not\n     *\n     * @return Response A Response instance\n     *\n     * @throws \\Exception When an Exception occurs during processing\n     *\/",27],["T_WHITESPACE","\n    ",41],["T_PUBLIC","public",42],["T_WHITESPACE"," ",42],["T_FUNCTION","function",42],["T_WHITESPACE"," ",42],["T_STRING","handle",42],"(",["T_STRING","Request",42],["T_WHITESPACE"," ",42],["T_VARIABLE","$request",42],",",["T_WHITESPACE"," ",42],["T_VARIABLE","$type",42],["T_WHITESPACE"," ",42],"=",["T_WHITESPACE"," ",42],["T_STRING","self",42],["T_DOUBLE_COLON","::",42],["T_STRING","MASTER_REQUEST",42],",",["T_WHITESPACE"," ",42],["T_VARIABLE","$catch",42],["T_WHITESPACE"," ",42],"=",["T_WHITESPACE"," ",42],["T_STRING","true",42],")",";",["T_WHITESPACE","\n",42],"}",["T_WHITESPACE","\n",43]]