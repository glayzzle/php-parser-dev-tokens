[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_COMMENT","\/*\n * This file is part of the Symfony package.\n *\n * (c) Fabien Potencier <fabien@symfony.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\/",3],["T_WHITESPACE","\n\n",10],["T_NAMESPACE","namespace",12],["T_WHITESPACE"," ",12],["T_STRING","Symfony",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Component",12],["T_NS_SEPARATOR","\\",12],["T_STRING","HttpKernel",12],";",["T_WHITESPACE","\n\n",12],["T_USE","use",14],["T_WHITESPACE"," ",14],["T_STRING","Symfony",14],["T_NS_SEPARATOR","\\",14],["T_STRING","Component",14],["T_NS_SEPARATOR","\\",14],["T_STRING","DependencyInjection",14],["T_NS_SEPARATOR","\\",14],["T_STRING","ContainerInterface",14],";",["T_WHITESPACE","\n",14],["T_USE","use",15],["T_WHITESPACE"," ",15],["T_STRING","Symfony",15],["T_NS_SEPARATOR","\\",15],["T_STRING","Component",15],["T_NS_SEPARATOR","\\",15],["T_STRING","HttpKernel",15],["T_NS_SEPARATOR","\\",15],["T_STRING","Bundle",15],["T_NS_SEPARATOR","\\",15],["T_STRING","BundleInterface",15],";",["T_WHITESPACE","\n",15],["T_USE","use",16],["T_WHITESPACE"," ",16],["T_STRING","Symfony",16],["T_NS_SEPARATOR","\\",16],["T_STRING","Component",16],["T_NS_SEPARATOR","\\",16],["T_STRING","Config",16],["T_NS_SEPARATOR","\\",16],["T_STRING","Loader",16],["T_NS_SEPARATOR","\\",16],["T_STRING","LoaderInterface",16],";",["T_WHITESPACE","\n\n",16],["T_DOC_COMMENT","\/**\n * The Kernel is the heart of the Symfony system.\n *\n * It manages an environment made of bundles.\n *\n * @author Fabien Potencier <fabien@symfony.com>\n *\/",18],["T_WHITESPACE","\n",24],["T_INTERFACE","interface",25],["T_WHITESPACE"," ",25],["T_STRING","KernelInterface",25],["T_WHITESPACE"," ",25],["T_EXTENDS","extends",25],["T_WHITESPACE"," ",25],["T_STRING","HttpKernelInterface",25],",",["T_WHITESPACE"," ",25],["T_NS_SEPARATOR","\\",25],["T_STRING","Serializable",25],["T_WHITESPACE","\n",25],"{",["T_WHITESPACE","\n    ",26],["T_DOC_COMMENT","\/**\n     * Returns an array of bundles to register.\n     *\n     * @return BundleInterface[] An array of bundle instances\n     *\/",27],["T_WHITESPACE","\n    ",31],["T_PUBLIC","public",32],["T_WHITESPACE"," ",32],["T_FUNCTION","function",32],["T_WHITESPACE"," ",32],["T_STRING","registerBundles",32],"(",")",";",["T_WHITESPACE","\n\n    ",32],["T_DOC_COMMENT","\/**\n     * Loads the container configuration.\n     *\n     * @param LoaderInterface $loader A LoaderInterface instance\n     *\/",34],["T_WHITESPACE","\n    ",38],["T_PUBLIC","public",39],["T_WHITESPACE"," ",39],["T_FUNCTION","function",39],["T_WHITESPACE"," ",39],["T_STRING","registerContainerConfiguration",39],"(",["T_STRING","LoaderInterface",39],["T_WHITESPACE"," ",39],["T_VARIABLE","$loader",39],")",";",["T_WHITESPACE","\n\n    ",39],["T_DOC_COMMENT","\/**\n     * Boots the current kernel.\n     *\/",41],["T_WHITESPACE","\n    ",43],["T_PUBLIC","public",44],["T_WHITESPACE"," ",44],["T_FUNCTION","function",44],["T_WHITESPACE"," ",44],["T_STRING","boot",44],"(",")",";",["T_WHITESPACE","\n\n    ",44],["T_DOC_COMMENT","\/**\n     * Shutdowns the kernel.\n     *\n     * This method is mainly useful when doing functional testing.\n     *\/",46],["T_WHITESPACE","\n    ",50],["T_PUBLIC","public",51],["T_WHITESPACE"," ",51],["T_FUNCTION","function",51],["T_WHITESPACE"," ",51],["T_STRING","shutdown",51],"(",")",";",["T_WHITESPACE","\n\n    ",51],["T_DOC_COMMENT","\/**\n     * Gets the registered bundle instances.\n     *\n     * @return BundleInterface[] An array of registered bundle instances\n     *\/",53],["T_WHITESPACE","\n    ",57],["T_PUBLIC","public",58],["T_WHITESPACE"," ",58],["T_FUNCTION","function",58],["T_WHITESPACE"," ",58],["T_STRING","getBundles",58],"(",")",";",["T_WHITESPACE","\n\n    ",58],["T_DOC_COMMENT","\/**\n     * Returns a bundle and optionally its descendants by its name.\n     *\n     * @param string $name  Bundle name\n     * @param bool   $first Whether to return the first bundle only or together with its descendants\n     *\n     * @return BundleInterface|BundleInterface[] A BundleInterface instance or an array of BundleInterface instances if $first is false\n     *\n     * @throws \\InvalidArgumentException when the bundle is not enabled\n     *\/",60],["T_WHITESPACE","\n    ",69],["T_PUBLIC","public",70],["T_WHITESPACE"," ",70],["T_FUNCTION","function",70],["T_WHITESPACE"," ",70],["T_STRING","getBundle",70],"(",["T_VARIABLE","$name",70],",",["T_WHITESPACE"," ",70],["T_VARIABLE","$first",70],["T_WHITESPACE"," ",70],"=",["T_WHITESPACE"," ",70],["T_STRING","true",70],")",";",["T_WHITESPACE","\n\n    ",70],["T_DOC_COMMENT","\/**\n     * Returns the file path for a given resource.\n     *\n     * A Resource can be a file or a directory.\n     *\n     * The resource name must follow the following pattern:\n     *\n     *     \"@BundleName\/path\/to\/a\/file.something\"\n     *\n     * where BundleName is the name of the bundle\n     * and the remaining part is the relative path in the bundle.\n     *\n     * If $dir is passed, and the first segment of the path is \"Resources\",\n     * this method will look for a file named:\n     *\n     *     $dir\/<BundleName>\/path\/without\/Resources\n     *\n     * before looking in the bundle resource folder.\n     *\n     * @param string $name  A resource name to locate\n     * @param string $dir   A directory where to look for the resource first\n     * @param bool   $first Whether to return the first path or paths for all matching bundles\n     *\n     * @return string|array The absolute path of the resource or an array if $first is false\n     *\n     * @throws \\InvalidArgumentException if the file cannot be found or the name is not valid\n     * @throws \\RuntimeException         if the name contains invalid\/unsafe characters\n     *\/",72],["T_WHITESPACE","\n    ",99],["T_PUBLIC","public",100],["T_WHITESPACE"," ",100],["T_FUNCTION","function",100],["T_WHITESPACE"," ",100],["T_STRING","locateResource",100],"(",["T_VARIABLE","$name",100],",",["T_WHITESPACE"," ",100],["T_VARIABLE","$dir",100],["T_WHITESPACE"," ",100],"=",["T_WHITESPACE"," ",100],["T_STRING","null",100],",",["T_WHITESPACE"," ",100],["T_VARIABLE","$first",100],["T_WHITESPACE"," ",100],"=",["T_WHITESPACE"," ",100],["T_STRING","true",100],")",";",["T_WHITESPACE","\n\n    ",100],["T_DOC_COMMENT","\/**\n     * Gets the name of the kernel.\n     *\n     * @return string The kernel name\n     *\/",102],["T_WHITESPACE","\n    ",106],["T_PUBLIC","public",107],["T_WHITESPACE"," ",107],["T_FUNCTION","function",107],["T_WHITESPACE"," ",107],["T_STRING","getName",107],"(",")",";",["T_WHITESPACE","\n\n    ",107],["T_DOC_COMMENT","\/**\n     * Gets the environment.\n     *\n     * @return string The current environment\n     *\/",109],["T_WHITESPACE","\n    ",113],["T_PUBLIC","public",114],["T_WHITESPACE"," ",114],["T_FUNCTION","function",114],["T_WHITESPACE"," ",114],["T_STRING","getEnvironment",114],"(",")",";",["T_WHITESPACE","\n\n    ",114],["T_DOC_COMMENT","\/**\n     * Checks if debug mode is enabled.\n     *\n     * @return bool true if debug mode is enabled, false otherwise\n     *\/",116],["T_WHITESPACE","\n    ",120],["T_PUBLIC","public",121],["T_WHITESPACE"," ",121],["T_FUNCTION","function",121],["T_WHITESPACE"," ",121],["T_STRING","isDebug",121],"(",")",";",["T_WHITESPACE","\n\n    ",121],["T_DOC_COMMENT","\/**\n     * Gets the application root dir.\n     *\n     * @return string The application root dir\n     *\/",123],["T_WHITESPACE","\n    ",127],["T_PUBLIC","public",128],["T_WHITESPACE"," ",128],["T_FUNCTION","function",128],["T_WHITESPACE"," ",128],["T_STRING","getRootDir",128],"(",")",";",["T_WHITESPACE","\n\n    ",128],["T_DOC_COMMENT","\/**\n     * Gets the current container.\n     *\n     * @return ContainerInterface A ContainerInterface instance\n     *\/",130],["T_WHITESPACE","\n    ",134],["T_PUBLIC","public",135],["T_WHITESPACE"," ",135],["T_FUNCTION","function",135],["T_WHITESPACE"," ",135],["T_STRING","getContainer",135],"(",")",";",["T_WHITESPACE","\n\n    ",135],["T_DOC_COMMENT","\/**\n     * Gets the request start time (not available if debug is disabled).\n     *\n     * @return int The request start timestamp\n     *\/",137],["T_WHITESPACE","\n    ",141],["T_PUBLIC","public",142],["T_WHITESPACE"," ",142],["T_FUNCTION","function",142],["T_WHITESPACE"," ",142],["T_STRING","getStartTime",142],"(",")",";",["T_WHITESPACE","\n\n    ",142],["T_DOC_COMMENT","\/**\n     * Gets the cache directory.\n     *\n     * @return string The cache directory\n     *\/",144],["T_WHITESPACE","\n    ",148],["T_PUBLIC","public",149],["T_WHITESPACE"," ",149],["T_FUNCTION","function",149],["T_WHITESPACE"," ",149],["T_STRING","getCacheDir",149],"(",")",";",["T_WHITESPACE","\n\n    ",149],["T_DOC_COMMENT","\/**\n     * Gets the log directory.\n     *\n     * @return string The log directory\n     *\/",151],["T_WHITESPACE","\n    ",155],["T_PUBLIC","public",156],["T_WHITESPACE"," ",156],["T_FUNCTION","function",156],["T_WHITESPACE"," ",156],["T_STRING","getLogDir",156],"(",")",";",["T_WHITESPACE","\n\n    ",156],["T_DOC_COMMENT","\/**\n     * Gets the charset of the application.\n     *\n     * @return string The charset\n     *\/",158],["T_WHITESPACE","\n    ",162],["T_PUBLIC","public",163],["T_WHITESPACE"," ",163],["T_FUNCTION","function",163],["T_WHITESPACE"," ",163],["T_STRING","getCharset",163],"(",")",";",["T_WHITESPACE","\n",163],"}",["T_WHITESPACE","\n",164]]