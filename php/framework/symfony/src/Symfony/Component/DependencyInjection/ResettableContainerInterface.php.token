[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_COMMENT","\/*\n * This file is part of the Symfony package.\n *\n * (c) Fabien Potencier <fabien@symfony.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\/",3],["T_WHITESPACE","\n\n",10],["T_NAMESPACE","namespace",12],["T_WHITESPACE"," ",12],["T_STRING","Symfony",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Component",12],["T_NS_SEPARATOR","\\",12],["T_STRING","DependencyInjection",12],";",["T_WHITESPACE","\n\n",12],["T_DOC_COMMENT","\/**\n * ResettableContainerInterface defines additional resetting functionality\n * for containers, allowing to release shared services when the container is\n * not needed anymore.\n *\n * @author Christophe Coevoet <stof@notk.org>\n *\/",14],["T_WHITESPACE","\n",20],["T_INTERFACE","interface",21],["T_WHITESPACE"," ",21],["T_STRING","ResettableContainerInterface",21],["T_WHITESPACE"," ",21],["T_EXTENDS","extends",21],["T_WHITESPACE"," ",21],["T_STRING","ContainerInterface",21],["T_WHITESPACE","\n",21],"{",["T_WHITESPACE","\n    ",22],["T_DOC_COMMENT","\/**\n     * Resets shared services from the container.\n     *\n     * The container is not intended to be used again after being reset in a normal workflow. This method is\n     * meant as a way to release references for ref-counting.\n     * A subsequent call to ContainerInterface::get will recreate a new instance of the shared service.\n     *\/",23],["T_WHITESPACE","\n    ",29],["T_PUBLIC","public",30],["T_WHITESPACE"," ",30],["T_FUNCTION","function",30],["T_WHITESPACE"," ",30],["T_STRING","reset",30],"(",")",";",["T_WHITESPACE","\n",30],"}",["T_WHITESPACE","\n",31]]