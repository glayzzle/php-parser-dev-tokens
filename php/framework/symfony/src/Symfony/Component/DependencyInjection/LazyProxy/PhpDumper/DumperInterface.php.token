[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_COMMENT","\/*\n * This file is part of the Symfony package.\n *\n * (c) Fabien Potencier <fabien@symfony.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\/",3],["T_WHITESPACE","\n\n",10],["T_NAMESPACE","namespace",12],["T_WHITESPACE"," ",12],["T_STRING","Symfony",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Component",12],["T_NS_SEPARATOR","\\",12],["T_STRING","DependencyInjection",12],["T_NS_SEPARATOR","\\",12],["T_STRING","LazyProxy",12],["T_NS_SEPARATOR","\\",12],["T_STRING","PhpDumper",12],";",["T_WHITESPACE","\n\n",12],["T_USE","use",14],["T_WHITESPACE"," ",14],["T_STRING","Symfony",14],["T_NS_SEPARATOR","\\",14],["T_STRING","Component",14],["T_NS_SEPARATOR","\\",14],["T_STRING","DependencyInjection",14],["T_NS_SEPARATOR","\\",14],["T_STRING","Definition",14],";",["T_WHITESPACE","\n\n",14],["T_DOC_COMMENT","\/**\n * Lazy proxy dumper capable of generating the instantiation logic PHP code for proxied services.\n *\n * @author Marco Pivetta <ocramius@gmail.com>\n *\/",16],["T_WHITESPACE","\n",20],["T_INTERFACE","interface",21],["T_WHITESPACE"," ",21],["T_STRING","DumperInterface",21],["T_WHITESPACE","\n",21],"{",["T_WHITESPACE","\n    ",22],["T_DOC_COMMENT","\/**\n     * Inspects whether the given definitions should produce proxy instantiation logic in the dumped container.\n     *\n     * @param Definition $definition\n     *\n     * @return bool\n     *\/",23],["T_WHITESPACE","\n    ",29],["T_PUBLIC","public",30],["T_WHITESPACE"," ",30],["T_FUNCTION","function",30],["T_WHITESPACE"," ",30],["T_STRING","isProxyCandidate",30],"(",["T_STRING","Definition",30],["T_WHITESPACE"," ",30],["T_VARIABLE","$definition",30],")",";",["T_WHITESPACE","\n\n    ",30],["T_DOC_COMMENT","\/**\n     * Generates the code to be used to instantiate a proxy in the dumped factory code.\n     *\n     * @param Definition $definition\n     * @param string     $id         service identifier\n     * @param string     $methodName the method name to get the service, will be added to the interface in 4.0\n     *\n     * @return string\n     *\/",32],["T_WHITESPACE","\n    ",40],["T_PUBLIC","public",41],["T_WHITESPACE"," ",41],["T_FUNCTION","function",41],["T_WHITESPACE"," ",41],["T_STRING","getProxyFactoryCode",41],"(",["T_STRING","Definition",41],["T_WHITESPACE"," ",41],["T_VARIABLE","$definition",41],",",["T_WHITESPACE"," ",41],["T_VARIABLE","$id",41],["T_COMMENT","\/**, $methodName = null *\/",41],")",";",["T_WHITESPACE","\n\n    ",41],["T_DOC_COMMENT","\/**\n     * Generates the code for the lazy proxy.\n     *\n     * @param Definition $definition\n     *\n     * @return string\n     *\/",43],["T_WHITESPACE","\n    ",49],["T_PUBLIC","public",50],["T_WHITESPACE"," ",50],["T_FUNCTION","function",50],["T_WHITESPACE"," ",50],["T_STRING","getProxyCode",50],"(",["T_STRING","Definition",50],["T_WHITESPACE"," ",50],["T_VARIABLE","$definition",50],")",";",["T_WHITESPACE","\n",50],"}",["T_WHITESPACE","\n",51]]