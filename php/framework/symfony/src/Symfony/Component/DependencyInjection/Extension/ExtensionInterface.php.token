[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_COMMENT","\/*\n * This file is part of the Symfony package.\n *\n * (c) Fabien Potencier <fabien@symfony.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\/",3],["T_WHITESPACE","\n\n",10],["T_NAMESPACE","namespace",12],["T_WHITESPACE"," ",12],["T_STRING","Symfony",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Component",12],["T_NS_SEPARATOR","\\",12],["T_STRING","DependencyInjection",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Extension",12],";",["T_WHITESPACE","\n\n",12],["T_USE","use",14],["T_WHITESPACE"," ",14],["T_STRING","Symfony",14],["T_NS_SEPARATOR","\\",14],["T_STRING","Component",14],["T_NS_SEPARATOR","\\",14],["T_STRING","DependencyInjection",14],["T_NS_SEPARATOR","\\",14],["T_STRING","ContainerBuilder",14],";",["T_WHITESPACE","\n\n",14],["T_DOC_COMMENT","\/**\n * ExtensionInterface is the interface implemented by container extension classes.\n *\n * @author Fabien Potencier <fabien@symfony.com>\n *\/",16],["T_WHITESPACE","\n",20],["T_INTERFACE","interface",21],["T_WHITESPACE"," ",21],["T_STRING","ExtensionInterface",21],["T_WHITESPACE","\n",21],"{",["T_WHITESPACE","\n    ",22],["T_DOC_COMMENT","\/**\n     * Loads a specific configuration.\n     *\n     * @param array            $configs   An array of configuration values\n     * @param ContainerBuilder $container A ContainerBuilder instance\n     *\n     * @throws \\InvalidArgumentException When provided tag is not defined in this extension\n     *\/",23],["T_WHITESPACE","\n    ",30],["T_PUBLIC","public",31],["T_WHITESPACE"," ",31],["T_FUNCTION","function",31],["T_WHITESPACE"," ",31],["T_STRING","load",31],"(",["T_ARRAY","array",31],["T_WHITESPACE"," ",31],["T_VARIABLE","$configs",31],",",["T_WHITESPACE"," ",31],["T_STRING","ContainerBuilder",31],["T_WHITESPACE"," ",31],["T_VARIABLE","$container",31],")",";",["T_WHITESPACE","\n\n    ",31],["T_DOC_COMMENT","\/**\n     * Returns the namespace to be used for this extension (XML namespace).\n     *\n     * @return string The XML namespace\n     *\/",33],["T_WHITESPACE","\n    ",37],["T_PUBLIC","public",38],["T_WHITESPACE"," ",38],["T_FUNCTION","function",38],["T_WHITESPACE"," ",38],["T_STRING","getNamespace",38],"(",")",";",["T_WHITESPACE","\n\n    ",38],["T_DOC_COMMENT","\/**\n     * Returns the base path for the XSD files.\n     *\n     * @return string The XSD base path\n     *\/",40],["T_WHITESPACE","\n    ",44],["T_PUBLIC","public",45],["T_WHITESPACE"," ",45],["T_FUNCTION","function",45],["T_WHITESPACE"," ",45],["T_STRING","getXsdValidationBasePath",45],"(",")",";",["T_WHITESPACE","\n\n    ",45],["T_DOC_COMMENT","\/**\n     * Returns the recommended alias to use in XML.\n     *\n     * This alias is also the mandatory prefix to use when using YAML.\n     *\n     * @return string The alias\n     *\/",47],["T_WHITESPACE","\n    ",53],["T_PUBLIC","public",54],["T_WHITESPACE"," ",54],["T_FUNCTION","function",54],["T_WHITESPACE"," ",54],["T_STRING","getAlias",54],"(",")",";",["T_WHITESPACE","\n",54],"}",["T_WHITESPACE","\n",55]]