[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_COMMENT","\/*\n * This file is part of the Symfony package.\n *\n * (c) Fabien Potencier <fabien@symfony.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\/",3],["T_WHITESPACE","\n\n",10],["T_NAMESPACE","namespace",12],["T_WHITESPACE"," ",12],["T_STRING","Symfony",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Component",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Validator",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Violation",12],";",["T_WHITESPACE","\n\n",12],["T_DOC_COMMENT","\/**\n * Builds {@link \\Symfony\\Component\\Validator\\ConstraintViolationInterface}\n * objects.\n *\n * Use the various methods on this interface to configure the built violation.\n * Finally, call {@link addViolation()} to add the violation to the current\n * execution context.\n *\n * @author Bernhard Schussek <bschussek@gmail.com>\n *\/",14],["T_WHITESPACE","\n",23],["T_INTERFACE","interface",24],["T_WHITESPACE"," ",24],["T_STRING","ConstraintViolationBuilderInterface",24],["T_WHITESPACE","\n",24],"{",["T_WHITESPACE","\n    ",25],["T_DOC_COMMENT","\/**\n     * Stores the property path at which the violation should be generated.\n     *\n     * The passed path will be appended to the current property path of the\n     * execution context.\n     *\n     * @param string $path The property path\n     *\n     * @return $this\n     *\/",26],["T_WHITESPACE","\n    ",35],["T_PUBLIC","public",36],["T_WHITESPACE"," ",36],["T_FUNCTION","function",36],["T_WHITESPACE"," ",36],["T_STRING","atPath",36],"(",["T_VARIABLE","$path",36],")",";",["T_WHITESPACE","\n\n    ",36],["T_DOC_COMMENT","\/**\n     * Sets a parameter to be inserted into the violation message.\n     *\n     * @param string $key   The name of the parameter\n     * @param string $value The value to be inserted in the parameter's place\n     *\n     * @return $this\n     *\/",38],["T_WHITESPACE","\n    ",45],["T_PUBLIC","public",46],["T_WHITESPACE"," ",46],["T_FUNCTION","function",46],["T_WHITESPACE"," ",46],["T_STRING","setParameter",46],"(",["T_VARIABLE","$key",46],",",["T_WHITESPACE"," ",46],["T_VARIABLE","$value",46],")",";",["T_WHITESPACE","\n\n    ",46],["T_DOC_COMMENT","\/**\n     * Sets all parameters to be inserted into the violation message.\n     *\n     * @param array $parameters An array with the parameter names as keys and\n     *                          the values to be inserted in their place as\n     *                          values\n     *\n     * @return $this\n     *\/",48],["T_WHITESPACE","\n    ",56],["T_PUBLIC","public",57],["T_WHITESPACE"," ",57],["T_FUNCTION","function",57],["T_WHITESPACE"," ",57],["T_STRING","setParameters",57],"(",["T_ARRAY","array",57],["T_WHITESPACE"," ",57],["T_VARIABLE","$parameters",57],")",";",["T_WHITESPACE","\n\n    ",57],["T_DOC_COMMENT","\/**\n     * Sets the translation domain which should be used for translating the\n     * violation message.\n     *\n     * @param string $translationDomain The translation domain\n     *\n     * @return $this\n     *\n     * @see \\Symfony\\Component\\Translation\\TranslatorInterface\n     *\/",59],["T_WHITESPACE","\n    ",68],["T_PUBLIC","public",69],["T_WHITESPACE"," ",69],["T_FUNCTION","function",69],["T_WHITESPACE"," ",69],["T_STRING","setTranslationDomain",69],"(",["T_VARIABLE","$translationDomain",69],")",";",["T_WHITESPACE","\n\n    ",69],["T_DOC_COMMENT","\/**\n     * Sets the invalid value that caused this violation.\n     *\n     * @param mixed $invalidValue The invalid value\n     *\n     * @return $this\n     *\/",71],["T_WHITESPACE","\n    ",77],["T_PUBLIC","public",78],["T_WHITESPACE"," ",78],["T_FUNCTION","function",78],["T_WHITESPACE"," ",78],["T_STRING","setInvalidValue",78],"(",["T_VARIABLE","$invalidValue",78],")",";",["T_WHITESPACE","\n\n    ",78],["T_DOC_COMMENT","\/**\n     * Sets the number which determines how the plural form of the violation\n     * message is chosen when it is translated.\n     *\n     * @param int $number The number for determining the plural form\n     *\n     * @return $this\n     *\n     * @see \\Symfony\\Component\\Translation\\TranslatorInterface::transChoice()\n     *\/",80],["T_WHITESPACE","\n    ",89],["T_PUBLIC","public",90],["T_WHITESPACE"," ",90],["T_FUNCTION","function",90],["T_WHITESPACE"," ",90],["T_STRING","setPlural",90],"(",["T_VARIABLE","$number",90],")",";",["T_WHITESPACE","\n\n    ",90],["T_DOC_COMMENT","\/**\n     * Sets the violation code.\n     *\n     * @param string|null $code The violation code\n     *\n     * @return $this\n     *\/",92],["T_WHITESPACE","\n    ",98],["T_PUBLIC","public",99],["T_WHITESPACE"," ",99],["T_FUNCTION","function",99],["T_WHITESPACE"," ",99],["T_STRING","setCode",99],"(",["T_VARIABLE","$code",99],")",";",["T_WHITESPACE","\n\n    ",99],["T_DOC_COMMENT","\/**\n     * Sets the cause of the violation.\n     *\n     * @param mixed $cause The cause of the violation\n     *\n     * @return $this\n     *\/",101],["T_WHITESPACE","\n    ",107],["T_PUBLIC","public",108],["T_WHITESPACE"," ",108],["T_FUNCTION","function",108],["T_WHITESPACE"," ",108],["T_STRING","setCause",108],"(",["T_VARIABLE","$cause",108],")",";",["T_WHITESPACE","\n\n    ",108],["T_DOC_COMMENT","\/**\n     * Adds the violation to the current execution context.\n     *\/",110],["T_WHITESPACE","\n    ",112],["T_PUBLIC","public",113],["T_WHITESPACE"," ",113],["T_FUNCTION","function",113],["T_WHITESPACE"," ",113],["T_STRING","addViolation",113],"(",")",";",["T_WHITESPACE","\n",113],"}",["T_WHITESPACE","\n",114]]