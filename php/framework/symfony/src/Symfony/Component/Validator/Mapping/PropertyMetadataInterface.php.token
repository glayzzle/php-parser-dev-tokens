[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_COMMENT","\/*\n * This file is part of the Symfony package.\n *\n * (c) Fabien Potencier <fabien@symfony.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\/",3],["T_WHITESPACE","\n\n",10],["T_NAMESPACE","namespace",12],["T_WHITESPACE"," ",12],["T_STRING","Symfony",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Component",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Validator",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Mapping",12],";",["T_WHITESPACE","\n\n",12],["T_DOC_COMMENT","\/**\n * Stores all metadata needed for validating the value of a class property.\n *\n * Most importantly, the metadata stores the constraints against which the\n * property's value should be validated.\n *\n * Additionally, the metadata stores whether objects stored in the property\n * should be validated against their class' metadata and whether traversable\n * objects should be traversed or not.\n *\n * @author Bernhard Schussek <bschussek@gmail.com>\n *\n * @see MetadataInterface\n * @see CascadingStrategy\n * @see TraversalStrategy\n *\/",14],["T_WHITESPACE","\n",29],["T_INTERFACE","interface",30],["T_WHITESPACE"," ",30],["T_STRING","PropertyMetadataInterface",30],["T_WHITESPACE"," ",30],["T_EXTENDS","extends",30],["T_WHITESPACE"," ",30],["T_STRING","MetadataInterface",30],["T_WHITESPACE","\n",30],"{",["T_WHITESPACE","\n    ",31],["T_DOC_COMMENT","\/**\n     * Returns the name of the property.\n     *\n     * @return string The property name\n     *\/",32],["T_WHITESPACE","\n    ",36],["T_PUBLIC","public",37],["T_WHITESPACE"," ",37],["T_FUNCTION","function",37],["T_WHITESPACE"," ",37],["T_STRING","getPropertyName",37],"(",")",";",["T_WHITESPACE","\n\n    ",37],["T_DOC_COMMENT","\/**\n     * Extracts the value of the property from the given container.\n     *\n     * @param mixed $containingValue The container to extract the property value from\n     *\n     * @return mixed The value of the property\n     *\/",39],["T_WHITESPACE","\n    ",45],["T_PUBLIC","public",46],["T_WHITESPACE"," ",46],["T_FUNCTION","function",46],["T_WHITESPACE"," ",46],["T_STRING","getPropertyValue",46],"(",["T_VARIABLE","$containingValue",46],")",";",["T_WHITESPACE","\n",46],"}",["T_WHITESPACE","\n",47]]