[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_COMMENT","\/*\n * This file is part of the Symfony package.\n *\n * (c) Fabien Potencier <fabien@symfony.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\/",3],["T_WHITESPACE","\n\n",10],["T_NAMESPACE","namespace",12],["T_WHITESPACE"," ",12],["T_STRING","Symfony",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Component",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Validator",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Mapping",12],";",["T_WHITESPACE","\n\n",12],["T_USE","use",14],["T_WHITESPACE"," ",14],["T_STRING","Symfony",14],["T_NS_SEPARATOR","\\",14],["T_STRING","Component",14],["T_NS_SEPARATOR","\\",14],["T_STRING","Validator",14],["T_NS_SEPARATOR","\\",14],["T_STRING","Constraint",14],";",["T_WHITESPACE","\n\n",14],["T_DOC_COMMENT","\/**\n * A container for validation metadata.\n *\n * Most importantly, the metadata stores the constraints against which an object\n * and its properties should be validated.\n *\n * Additionally, the metadata stores whether objects should be validated\n * against their class' metadata and whether traversable objects should be\n * traversed or not.\n *\n * @author Bernhard Schussek <bschussek@gmail.com>\n *\n * @see CascadingStrategy\n * @see TraversalStrategy\n *\/",16],["T_WHITESPACE","\n",30],["T_INTERFACE","interface",31],["T_WHITESPACE"," ",31],["T_STRING","MetadataInterface",31],["T_WHITESPACE","\n",31],"{",["T_WHITESPACE","\n    ",32],["T_DOC_COMMENT","\/**\n     * Returns the strategy for cascading objects.\n     *\n     * @return int The cascading strategy\n     *\n     * @see CascadingStrategy\n     *\/",33],["T_WHITESPACE","\n    ",39],["T_PUBLIC","public",40],["T_WHITESPACE"," ",40],["T_FUNCTION","function",40],["T_WHITESPACE"," ",40],["T_STRING","getCascadingStrategy",40],"(",")",";",["T_WHITESPACE","\n\n    ",40],["T_DOC_COMMENT","\/**\n     * Returns the strategy for traversing traversable objects.\n     *\n     * @return int The traversal strategy\n     *\n     * @see TraversalStrategy\n     *\/",42],["T_WHITESPACE","\n    ",48],["T_PUBLIC","public",49],["T_WHITESPACE"," ",49],["T_FUNCTION","function",49],["T_WHITESPACE"," ",49],["T_STRING","getTraversalStrategy",49],"(",")",";",["T_WHITESPACE","\n\n    ",49],["T_DOC_COMMENT","\/**\n     * Returns all constraints of this element.\n     *\n     * @return Constraint[] A list of Constraint instances\n     *\/",51],["T_WHITESPACE","\n    ",55],["T_PUBLIC","public",56],["T_WHITESPACE"," ",56],["T_FUNCTION","function",56],["T_WHITESPACE"," ",56],["T_STRING","getConstraints",56],"(",")",";",["T_WHITESPACE","\n\n    ",56],["T_DOC_COMMENT","\/**\n     * Returns all constraints for a given validation group.\n     *\n     * @param string $group The validation group\n     *\n     * @return Constraint[] A list of constraint instances\n     *\/",58],["T_WHITESPACE","\n    ",64],["T_PUBLIC","public",65],["T_WHITESPACE"," ",65],["T_FUNCTION","function",65],["T_WHITESPACE"," ",65],["T_STRING","findConstraints",65],"(",["T_VARIABLE","$group",65],")",";",["T_WHITESPACE","\n",65],"}",["T_WHITESPACE","\n",66]]