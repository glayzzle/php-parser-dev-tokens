[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_COMMENT","\/*\n * This file is part of the Symfony package.\n *\n * (c) Fabien Potencier <fabien@symfony.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\/",3],["T_WHITESPACE","\n\n",10],["T_NAMESPACE","namespace",12],["T_WHITESPACE"," ",12],["T_STRING","Symfony",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Component",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Validator",12],";",["T_WHITESPACE","\n\n",12],["T_DOC_COMMENT","\/**\n * A violation of a constraint that happened during validation.\n *\n * For each constraint that fails during validation one or more violations are\n * created. The violations store the violation message, the path to the failing\n * element in the validation graph and the root element that was originally\n * passed to the validator. For example, take the following graph:\n *\n * <pre>\n * (Person)---(firstName: string)\n *      \\\n *   (address: Address)---(street: string)\n * <\/pre>\n *\n * If the <tt>Person<\/tt> object is validated and validation fails for the\n * \"firstName\" property, the generated violation has the <tt>Person<\/tt>\n * instance as root and the property path \"firstName\". If validation fails\n * for the \"street\" property of the related <tt>Address<\/tt> instance, the root\n * element is still the person, but the property path is \"address.street\".\n *\n * @author Bernhard Schussek <bschussek@gmail.com>\n *\/",14],["T_WHITESPACE","\n",35],["T_INTERFACE","interface",36],["T_WHITESPACE"," ",36],["T_STRING","ConstraintViolationInterface",36],["T_WHITESPACE","\n",36],"{",["T_WHITESPACE","\n    ",37],["T_DOC_COMMENT","\/**\n     * Returns the violation message.\n     *\n     * @return string The violation message\n     *\/",38],["T_WHITESPACE","\n    ",42],["T_PUBLIC","public",43],["T_WHITESPACE"," ",43],["T_FUNCTION","function",43],["T_WHITESPACE"," ",43],["T_STRING","getMessage",43],"(",")",";",["T_WHITESPACE","\n\n    ",43],["T_DOC_COMMENT","\/**\n     * Returns the raw violation message.\n     *\n     * The raw violation message contains placeholders for the parameters\n     * returned by {@link getParameters}. Typically you'll pass the\n     * message template and parameters to a translation engine.\n     *\n     * @return string The raw violation message\n     *\/",45],["T_WHITESPACE","\n    ",53],["T_PUBLIC","public",54],["T_WHITESPACE"," ",54],["T_FUNCTION","function",54],["T_WHITESPACE"," ",54],["T_STRING","getMessageTemplate",54],"(",")",";",["T_WHITESPACE","\n\n    ",54],["T_DOC_COMMENT","\/**\n     * Returns the parameters to be inserted into the raw violation message.\n     *\n     * @return array A possibly empty list of parameters indexed by the names\n     *               that appear in the message template.\n     *\n     * @see getMessageTemplate()\n     *\/",56],["T_WHITESPACE","\n    ",63],["T_PUBLIC","public",64],["T_WHITESPACE"," ",64],["T_FUNCTION","function",64],["T_WHITESPACE"," ",64],["T_STRING","getParameters",64],"(",")",";",["T_WHITESPACE","\n\n    ",64],["T_DOC_COMMENT","\/**\n     * Returns a number for pluralizing the violation message.\n     *\n     * For example, the message template could have different translation based\n     * on a parameter \"choices\":\n     *\n     * <ul>\n     * <li>Please select exactly one entry. (choices=1)<\/li>\n     * <li>Please select two entries. (choices=2)<\/li>\n     * <\/ul>\n     *\n     * This method returns the value of the parameter for choosing the right\n     * pluralization form (in this case \"choices\").\n     *\n     * @return int|null The number to use to pluralize of the message\n     *\/",66],["T_WHITESPACE","\n    ",81],["T_PUBLIC","public",82],["T_WHITESPACE"," ",82],["T_FUNCTION","function",82],["T_WHITESPACE"," ",82],["T_STRING","getPlural",82],"(",")",";",["T_WHITESPACE","\n\n    ",82],["T_DOC_COMMENT","\/**\n     * Returns the root element of the validation.\n     *\n     * @return mixed The value that was passed originally to the validator when\n     *               the validation was started. Because the validator traverses\n     *               the object graph, the value at which the violation occurs\n     *               is not necessarily the value that was originally validated.\n     *\/",84],["T_WHITESPACE","\n    ",91],["T_PUBLIC","public",92],["T_WHITESPACE"," ",92],["T_FUNCTION","function",92],["T_WHITESPACE"," ",92],["T_STRING","getRoot",92],"(",")",";",["T_WHITESPACE","\n\n    ",92],["T_DOC_COMMENT","\/**\n     * Returns the property path from the root element to the violation.\n     *\n     * @return string The property path indicates how the validator reached\n     *                the invalid value from the root element. If the root\n     *                element is a <tt>Person<\/tt> instance with a property\n     *                \"address\" that contains an <tt>Address<\/tt> instance\n     *                with an invalid property \"street\", the generated property\n     *                path is \"address.street\". Property access is denoted by\n     *                dots, while array access is denoted by square brackets,\n     *                for example \"addresses[1].street\".\n     *\/",94],["T_WHITESPACE","\n    ",105],["T_PUBLIC","public",106],["T_WHITESPACE"," ",106],["T_FUNCTION","function",106],["T_WHITESPACE"," ",106],["T_STRING","getPropertyPath",106],"(",")",";",["T_WHITESPACE","\n\n    ",106],["T_DOC_COMMENT","\/**\n     * Returns the value that caused the violation.\n     *\n     * @return mixed The invalid value that caused the validated constraint to\n     *               fail.\n     *\/",108],["T_WHITESPACE","\n    ",113],["T_PUBLIC","public",114],["T_WHITESPACE"," ",114],["T_FUNCTION","function",114],["T_WHITESPACE"," ",114],["T_STRING","getInvalidValue",114],"(",")",";",["T_WHITESPACE","\n\n    ",114],["T_DOC_COMMENT","\/**\n     * Returns a machine-digestible error code for the violation.\n     *\n     * @return string|null The error code\n     *\/",116],["T_WHITESPACE","\n    ",120],["T_PUBLIC","public",121],["T_WHITESPACE"," ",121],["T_FUNCTION","function",121],["T_WHITESPACE"," ",121],["T_STRING","getCode",121],"(",")",";",["T_WHITESPACE","\n",121],"}",["T_WHITESPACE","\n",122]]