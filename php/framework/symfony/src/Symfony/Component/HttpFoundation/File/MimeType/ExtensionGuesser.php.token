[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_COMMENT","\/*\n * This file is part of the Symfony package.\n *\n * (c) Fabien Potencier <fabien@symfony.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\/",3],["T_WHITESPACE","\n\n",10],["T_NAMESPACE","namespace",12],["T_WHITESPACE"," ",12],["T_STRING","Symfony",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Component",12],["T_NS_SEPARATOR","\\",12],["T_STRING","HttpFoundation",12],["T_NS_SEPARATOR","\\",12],["T_STRING","File",12],["T_NS_SEPARATOR","\\",12],["T_STRING","MimeType",12],";",["T_WHITESPACE","\n\n",12],["T_DOC_COMMENT","\/**\n * A singleton mime type to file extension guesser.\n *\n * A default guesser is provided.\n * You can register custom guessers by calling the register()\n * method on the singleton instance:\n *\n *     $guesser = ExtensionGuesser::getInstance();\n *     $guesser->register(new MyCustomExtensionGuesser());\n *\n * The last registered guesser is preferred over previously registered ones.\n *\/",14],["T_WHITESPACE","\n",25],["T_CLASS","class",26],["T_WHITESPACE"," ",26],["T_STRING","ExtensionGuesser",26],["T_WHITESPACE"," ",26],["T_IMPLEMENTS","implements",26],["T_WHITESPACE"," ",26],["T_STRING","ExtensionGuesserInterface",26],["T_WHITESPACE","\n",26],"{",["T_WHITESPACE","\n    ",27],["T_DOC_COMMENT","\/**\n     * The singleton instance.\n     *\n     * @var ExtensionGuesser\n     *\/",28],["T_WHITESPACE","\n    ",32],["T_PRIVATE","private",33],["T_WHITESPACE"," ",33],["T_STATIC","static",33],["T_WHITESPACE"," ",33],["T_VARIABLE","$instance",33],["T_WHITESPACE"," ",33],"=",["T_WHITESPACE"," ",33],["T_STRING","null",33],";",["T_WHITESPACE","\n\n    ",33],["T_DOC_COMMENT","\/**\n     * All registered ExtensionGuesserInterface instances.\n     *\n     * @var array\n     *\/",35],["T_WHITESPACE","\n    ",39],["T_PROTECTED","protected",40],["T_WHITESPACE"," ",40],["T_VARIABLE","$guessers",40],["T_WHITESPACE"," ",40],"=",["T_WHITESPACE"," ",40],["T_ARRAY","array",40],"(",")",";",["T_WHITESPACE","\n\n    ",40],["T_DOC_COMMENT","\/**\n     * Returns the singleton instance.\n     *\n     * @return self\n     *\/",42],["T_WHITESPACE","\n    ",46],["T_PUBLIC","public",47],["T_WHITESPACE"," ",47],["T_STATIC","static",47],["T_WHITESPACE"," ",47],["T_FUNCTION","function",47],["T_WHITESPACE"," ",47],["T_STRING","getInstance",47],"(",")",["T_WHITESPACE","\n    ",47],"{",["T_WHITESPACE","\n        ",48],["T_IF","if",49],["T_WHITESPACE"," ",49],"(",["T_STRING","null",49],["T_WHITESPACE"," ",49],["T_IS_IDENTICAL","===",49],["T_WHITESPACE"," ",49],["T_STRING","self",49],["T_DOUBLE_COLON","::",49],["T_VARIABLE","$instance",49],")",["T_WHITESPACE"," ",49],"{",["T_WHITESPACE","\n            ",49],["T_STRING","self",50],["T_DOUBLE_COLON","::",50],["T_VARIABLE","$instance",50],["T_WHITESPACE"," ",50],"=",["T_WHITESPACE"," ",50],["T_NEW","new",50],["T_WHITESPACE"," ",50],["T_STRING","self",50],"(",")",";",["T_WHITESPACE","\n        ",50],"}",["T_WHITESPACE","\n\n        ",51],["T_RETURN","return",53],["T_WHITESPACE"," ",53],["T_STRING","self",53],["T_DOUBLE_COLON","::",53],["T_VARIABLE","$instance",53],";",["T_WHITESPACE","\n    ",53],"}",["T_WHITESPACE","\n\n    ",54],["T_DOC_COMMENT","\/**\n     * Registers all natively provided extension guessers.\n     *\/",56],["T_WHITESPACE","\n    ",58],["T_PRIVATE","private",59],["T_WHITESPACE"," ",59],["T_FUNCTION","function",59],["T_WHITESPACE"," ",59],["T_STRING","__construct",59],"(",")",["T_WHITESPACE","\n    ",59],"{",["T_WHITESPACE","\n        ",60],["T_VARIABLE","$this",61],["T_OBJECT_OPERATOR","->",61],["T_STRING","register",61],"(",["T_NEW","new",61],["T_WHITESPACE"," ",61],["T_STRING","MimeTypeExtensionGuesser",61],"(",")",")",";",["T_WHITESPACE","\n    ",61],"}",["T_WHITESPACE","\n\n    ",62],["T_DOC_COMMENT","\/**\n     * Registers a new extension guesser.\n     *\n     * When guessing, this guesser is preferred over previously registered ones.\n     *\n     * @param ExtensionGuesserInterface $guesser\n     *\/",64],["T_WHITESPACE","\n    ",70],["T_PUBLIC","public",71],["T_WHITESPACE"," ",71],["T_FUNCTION","function",71],["T_WHITESPACE"," ",71],["T_STRING","register",71],"(",["T_STRING","ExtensionGuesserInterface",71],["T_WHITESPACE"," ",71],["T_VARIABLE","$guesser",71],")",["T_WHITESPACE","\n    ",71],"{",["T_WHITESPACE","\n        ",72],["T_STRING","array_unshift",73],"(",["T_VARIABLE","$this",73],["T_OBJECT_OPERATOR","->",73],["T_STRING","guessers",73],",",["T_WHITESPACE"," ",73],["T_VARIABLE","$guesser",73],")",";",["T_WHITESPACE","\n    ",73],"}",["T_WHITESPACE","\n\n    ",74],["T_DOC_COMMENT","\/**\n     * Tries to guess the extension.\n     *\n     * The mime type is passed to each registered mime type guesser in reverse order\n     * of their registration (last registered is queried first). Once a guesser\n     * returns a value that is not NULL, this method terminates and returns the\n     * value.\n     *\n     * @param string $mimeType The mime type\n     *\n     * @return string The guessed extension or NULL, if none could be guessed\n     *\/",76],["T_WHITESPACE","\n    ",87],["T_PUBLIC","public",88],["T_WHITESPACE"," ",88],["T_FUNCTION","function",88],["T_WHITESPACE"," ",88],["T_STRING","guess",88],"(",["T_VARIABLE","$mimeType",88],")",["T_WHITESPACE","\n    ",88],"{",["T_WHITESPACE","\n        ",89],["T_FOREACH","foreach",90],["T_WHITESPACE"," ",90],"(",["T_VARIABLE","$this",90],["T_OBJECT_OPERATOR","->",90],["T_STRING","guessers",90],["T_WHITESPACE"," ",90],["T_AS","as",90],["T_WHITESPACE"," ",90],["T_VARIABLE","$guesser",90],")",["T_WHITESPACE"," ",90],"{",["T_WHITESPACE","\n            ",90],["T_IF","if",91],["T_WHITESPACE"," ",91],"(",["T_STRING","null",91],["T_WHITESPACE"," ",91],["T_IS_NOT_IDENTICAL","!==",91],["T_WHITESPACE"," ",91],["T_VARIABLE","$extension",91],["T_WHITESPACE"," ",91],"=",["T_WHITESPACE"," ",91],["T_VARIABLE","$guesser",91],["T_OBJECT_OPERATOR","->",91],["T_STRING","guess",91],"(",["T_VARIABLE","$mimeType",91],")",")",["T_WHITESPACE"," ",91],"{",["T_WHITESPACE","\n                ",91],["T_RETURN","return",92],["T_WHITESPACE"," ",92],["T_VARIABLE","$extension",92],";",["T_WHITESPACE","\n            ",92],"}",["T_WHITESPACE","\n        ",93],"}",["T_WHITESPACE","\n    ",94],"}",["T_WHITESPACE","\n",95],"}",["T_WHITESPACE","\n",96]]