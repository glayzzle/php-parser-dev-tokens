[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_COMMENT","\/*\n * This file is part of the Symfony package.\n *\n * (c) Fabien Potencier <fabien@symfony.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\/",3],["T_WHITESPACE","\n\n",10],["T_NAMESPACE","namespace",12],["T_WHITESPACE"," ",12],["T_STRING","Symfony",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Component",12],["T_NS_SEPARATOR","\\",12],["T_STRING","HttpFoundation",12],";",["T_WHITESPACE","\n\n",12],["T_DOC_COMMENT","\/**\n * RequestMatcherInterface is an interface for strategies to match a Request.\n *\n * @author Fabien Potencier <fabien@symfony.com>\n *\/",14],["T_WHITESPACE","\n",18],["T_INTERFACE","interface",19],["T_WHITESPACE"," ",19],["T_STRING","RequestMatcherInterface",19],["T_WHITESPACE","\n",19],"{",["T_WHITESPACE","\n    ",20],["T_DOC_COMMENT","\/**\n     * Decides whether the rule(s) implemented by the strategy matches the supplied request.\n     *\n     * @param Request $request The request to check for a match\n     *\n     * @return bool true if the request matches, false otherwise\n     *\/",21],["T_WHITESPACE","\n    ",27],["T_PUBLIC","public",28],["T_WHITESPACE"," ",28],["T_FUNCTION","function",28],["T_WHITESPACE"," ",28],["T_STRING","matches",28],"(",["T_STRING","Request",28],["T_WHITESPACE"," ",28],["T_VARIABLE","$request",28],")",";",["T_WHITESPACE","\n",28],"}",["T_WHITESPACE","\n",29]]