[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_COMMENT","\/*\n * This file is part of the Symfony package.\n *\n * (c) Fabien Potencier <fabien@symfony.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\/",3],["T_WHITESPACE","\n\n",10],["T_NAMESPACE","namespace",12],["T_WHITESPACE"," ",12],["T_STRING","Symfony",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Component",12],["T_NS_SEPARATOR","\\",12],["T_STRING","OptionsResolver",12],";",["T_WHITESPACE","\n\n",12],["T_USE","use",14],["T_WHITESPACE"," ",14],["T_STRING","Symfony",14],["T_NS_SEPARATOR","\\",14],["T_STRING","Component",14],["T_NS_SEPARATOR","\\",14],["T_STRING","OptionsResolver",14],["T_NS_SEPARATOR","\\",14],["T_STRING","Exception",14],["T_NS_SEPARATOR","\\",14],["T_STRING","AccessException",14],";",["T_WHITESPACE","\n",14],["T_USE","use",15],["T_WHITESPACE"," ",15],["T_STRING","Symfony",15],["T_NS_SEPARATOR","\\",15],["T_STRING","Component",15],["T_NS_SEPARATOR","\\",15],["T_STRING","OptionsResolver",15],["T_NS_SEPARATOR","\\",15],["T_STRING","Exception",15],["T_NS_SEPARATOR","\\",15],["T_STRING","InvalidOptionsException",15],";",["T_WHITESPACE","\n",15],["T_USE","use",16],["T_WHITESPACE"," ",16],["T_STRING","Symfony",16],["T_NS_SEPARATOR","\\",16],["T_STRING","Component",16],["T_NS_SEPARATOR","\\",16],["T_STRING","OptionsResolver",16],["T_NS_SEPARATOR","\\",16],["T_STRING","Exception",16],["T_NS_SEPARATOR","\\",16],["T_STRING","MissingOptionsException",16],";",["T_WHITESPACE","\n",16],["T_USE","use",17],["T_WHITESPACE"," ",17],["T_STRING","Symfony",17],["T_NS_SEPARATOR","\\",17],["T_STRING","Component",17],["T_NS_SEPARATOR","\\",17],["T_STRING","OptionsResolver",17],["T_NS_SEPARATOR","\\",17],["T_STRING","Exception",17],["T_NS_SEPARATOR","\\",17],["T_STRING","NoSuchOptionException",17],";",["T_WHITESPACE","\n",17],["T_USE","use",18],["T_WHITESPACE"," ",18],["T_STRING","Symfony",18],["T_NS_SEPARATOR","\\",18],["T_STRING","Component",18],["T_NS_SEPARATOR","\\",18],["T_STRING","OptionsResolver",18],["T_NS_SEPARATOR","\\",18],["T_STRING","Exception",18],["T_NS_SEPARATOR","\\",18],["T_STRING","OptionDefinitionException",18],";",["T_WHITESPACE","\n",18],["T_USE","use",19],["T_WHITESPACE"," ",19],["T_STRING","Symfony",19],["T_NS_SEPARATOR","\\",19],["T_STRING","Component",19],["T_NS_SEPARATOR","\\",19],["T_STRING","OptionsResolver",19],["T_NS_SEPARATOR","\\",19],["T_STRING","Exception",19],["T_NS_SEPARATOR","\\",19],["T_STRING","UndefinedOptionsException",19],";",["T_WHITESPACE","\n\n",19],["T_DOC_COMMENT","\/**\n * Validates options and merges them with default values.\n *\n * @author Bernhard Schussek <bschussek@gmail.com>\n * @author Tobias Schultze <http:\/\/tobion.de>\n *\/",21],["T_WHITESPACE","\n",26],["T_CLASS","class",27],["T_WHITESPACE"," ",27],["T_STRING","OptionsResolver",27],["T_WHITESPACE"," ",27],["T_IMPLEMENTS","implements",27],["T_WHITESPACE"," ",27],["T_STRING","Options",27],["T_WHITESPACE","\n",27],"{",["T_WHITESPACE","\n    ",28],["T_DOC_COMMENT","\/**\n     * The names of all defined options.\n     *\n     * @var array\n     *\/",29],["T_WHITESPACE","\n    ",33],["T_PRIVATE","private",34],["T_WHITESPACE"," ",34],["T_VARIABLE","$defined",34],["T_WHITESPACE"," ",34],"=",["T_WHITESPACE"," ",34],["T_ARRAY","array",34],"(",")",";",["T_WHITESPACE","\n\n    ",34],["T_DOC_COMMENT","\/**\n     * The default option values.\n     *\n     * @var array\n     *\/",36],["T_WHITESPACE","\n    ",40],["T_PRIVATE","private",41],["T_WHITESPACE"," ",41],["T_VARIABLE","$defaults",41],["T_WHITESPACE"," ",41],"=",["T_WHITESPACE"," ",41],["T_ARRAY","array",41],"(",")",";",["T_WHITESPACE","\n\n    ",41],["T_DOC_COMMENT","\/**\n     * The names of required options.\n     *\n     * @var array\n     *\/",43],["T_WHITESPACE","\n    ",47],["T_PRIVATE","private",48],["T_WHITESPACE"," ",48],["T_VARIABLE","$required",48],["T_WHITESPACE"," ",48],"=",["T_WHITESPACE"," ",48],["T_ARRAY","array",48],"(",")",";",["T_WHITESPACE","\n\n    ",48],["T_DOC_COMMENT","\/**\n     * The resolved option values.\n     *\n     * @var array\n     *\/",50],["T_WHITESPACE","\n    ",54],["T_PRIVATE","private",55],["T_WHITESPACE"," ",55],["T_VARIABLE","$resolved",55],["T_WHITESPACE"," ",55],"=",["T_WHITESPACE"," ",55],["T_ARRAY","array",55],"(",")",";",["T_WHITESPACE","\n\n    ",55],["T_DOC_COMMENT","\/**\n     * A list of normalizer closures.\n     *\n     * @var \\Closure[]\n     *\/",57],["T_WHITESPACE","\n    ",61],["T_PRIVATE","private",62],["T_WHITESPACE"," ",62],["T_VARIABLE","$normalizers",62],["T_WHITESPACE"," ",62],"=",["T_WHITESPACE"," ",62],["T_ARRAY","array",62],"(",")",";",["T_WHITESPACE","\n\n    ",62],["T_DOC_COMMENT","\/**\n     * A list of accepted values for each option.\n     *\n     * @var array\n     *\/",64],["T_WHITESPACE","\n    ",68],["T_PRIVATE","private",69],["T_WHITESPACE"," ",69],["T_VARIABLE","$allowedValues",69],["T_WHITESPACE"," ",69],"=",["T_WHITESPACE"," ",69],["T_ARRAY","array",69],"(",")",";",["T_WHITESPACE","\n\n    ",69],["T_DOC_COMMENT","\/**\n     * A list of accepted types for each option.\n     *\n     * @var array\n     *\/",71],["T_WHITESPACE","\n    ",75],["T_PRIVATE","private",76],["T_WHITESPACE"," ",76],["T_VARIABLE","$allowedTypes",76],["T_WHITESPACE"," ",76],"=",["T_WHITESPACE"," ",76],["T_ARRAY","array",76],"(",")",";",["T_WHITESPACE","\n\n    ",76],["T_DOC_COMMENT","\/**\n     * A list of closures for evaluating lazy options.\n     *\n     * @var array\n     *\/",78],["T_WHITESPACE","\n    ",82],["T_PRIVATE","private",83],["T_WHITESPACE"," ",83],["T_VARIABLE","$lazy",83],["T_WHITESPACE"," ",83],"=",["T_WHITESPACE"," ",83],["T_ARRAY","array",83],"(",")",";",["T_WHITESPACE","\n\n    ",83],["T_DOC_COMMENT","\/**\n     * A list of lazy options whose closure is currently being called.\n     *\n     * This list helps detecting circular dependencies between lazy options.\n     *\n     * @var array\n     *\/",85],["T_WHITESPACE","\n    ",91],["T_PRIVATE","private",92],["T_WHITESPACE"," ",92],["T_VARIABLE","$calling",92],["T_WHITESPACE"," ",92],"=",["T_WHITESPACE"," ",92],["T_ARRAY","array",92],"(",")",";",["T_WHITESPACE","\n\n    ",92],["T_DOC_COMMENT","\/**\n     * Whether the instance is locked for reading.\n     *\n     * Once locked, the options cannot be changed anymore. This is\n     * necessary in order to avoid inconsistencies during the resolving\n     * process. If any option is changed after being read, all evaluated\n     * lazy options that depend on this option would become invalid.\n     *\n     * @var bool\n     *\/",94],["T_WHITESPACE","\n    ",103],["T_PRIVATE","private",104],["T_WHITESPACE"," ",104],["T_VARIABLE","$locked",104],["T_WHITESPACE"," ",104],"=",["T_WHITESPACE"," ",104],["T_STRING","false",104],";",["T_WHITESPACE","\n\n    ",104],["T_PRIVATE","private",106],["T_WHITESPACE"," ",106],["T_STATIC","static",106],["T_WHITESPACE"," ",106],["T_VARIABLE","$typeAliases",106],["T_WHITESPACE"," ",106],"=",["T_WHITESPACE"," ",106],["T_ARRAY","array",106],"(",["T_WHITESPACE","\n        ",106],["T_CONSTANT_ENCAPSED_STRING","'boolean'",107],["T_WHITESPACE"," ",107],["T_DOUBLE_ARROW","=>",107],["T_WHITESPACE"," ",107],["T_CONSTANT_ENCAPSED_STRING","'bool'",107],",",["T_WHITESPACE","\n        ",107],["T_CONSTANT_ENCAPSED_STRING","'integer'",108],["T_WHITESPACE"," ",108],["T_DOUBLE_ARROW","=>",108],["T_WHITESPACE"," ",108],["T_CONSTANT_ENCAPSED_STRING","'int'",108],",",["T_WHITESPACE","\n        ",108],["T_CONSTANT_ENCAPSED_STRING","'double'",109],["T_WHITESPACE"," ",109],["T_DOUBLE_ARROW","=>",109],["T_WHITESPACE"," ",109],["T_CONSTANT_ENCAPSED_STRING","'float'",109],",",["T_WHITESPACE","\n    ",109],")",";",["T_WHITESPACE","\n\n    ",110],["T_DOC_COMMENT","\/**\n     * Sets the default value of a given option.\n     *\n     * If the default value should be set based on other options, you can pass\n     * a closure with the following signature:\n     *\n     *     function (Options $options) {\n     *         \/\/ ...\n     *     }\n     *\n     * The closure will be evaluated when {@link resolve()} is called. The\n     * closure has access to the resolved values of other options through the\n     * passed {@link Options} instance:\n     *\n     *     function (Options $options) {\n     *         if (isset($options['port'])) {\n     *             \/\/ ...\n     *         }\n     *     }\n     *\n     * If you want to access the previously set default value, add a second\n     * argument to the closure's signature:\n     *\n     *     $options->setDefault('name', 'Default Name');\n     *\n     *     $options->setDefault('name', function (Options $options, $previousValue) {\n     *         \/\/ 'Default Name' === $previousValue\n     *     });\n     *\n     * This is mostly useful if the configuration of the {@link Options} object\n     * is spread across different locations of your code, such as base and\n     * sub-classes.\n     *\n     * @param string $option The name of the option\n     * @param mixed  $value  The default value of the option\n     *\n     * @return $this\n     *\n     * @throws AccessException If called from a lazy option or normalizer\n     *\/",112],["T_WHITESPACE","\n    ",151],["T_PUBLIC","public",152],["T_WHITESPACE"," ",152],["T_FUNCTION","function",152],["T_WHITESPACE"," ",152],["T_STRING","setDefault",152],"(",["T_VARIABLE","$option",152],",",["T_WHITESPACE"," ",152],["T_VARIABLE","$value",152],")",["T_WHITESPACE","\n    ",152],"{",["T_WHITESPACE","\n        ",153],["T_COMMENT","\/\/ Setting is not possible once resolving starts, because then lazy\n",154],["T_WHITESPACE","        ",155],["T_COMMENT","\/\/ options could manipulate the state of the object, leading to\n",155],["T_WHITESPACE","        ",156],["T_COMMENT","\/\/ inconsistent results.\n",156],["T_WHITESPACE","        ",157],["T_IF","if",157],["T_WHITESPACE"," ",157],"(",["T_VARIABLE","$this",157],["T_OBJECT_OPERATOR","->",157],["T_STRING","locked",157],")",["T_WHITESPACE"," ",157],"{",["T_WHITESPACE","\n            ",157],["T_THROW","throw",158],["T_WHITESPACE"," ",158],["T_NEW","new",158],["T_WHITESPACE"," ",158],["T_STRING","AccessException",158],"(",["T_CONSTANT_ENCAPSED_STRING","'Default values cannot be set from a lazy option or normalizer.'",158],")",";",["T_WHITESPACE","\n        ",158],"}",["T_WHITESPACE","\n\n        ",159],["T_COMMENT","\/\/ If an option is a closure that should be evaluated lazily, store it\n",161],["T_WHITESPACE","        ",162],["T_COMMENT","\/\/ in the \"lazy\" property.\n",162],["T_WHITESPACE","        ",163],["T_IF","if",163],["T_WHITESPACE"," ",163],"(",["T_VARIABLE","$value",163],["T_WHITESPACE"," ",163],["T_INSTANCEOF","instanceof",163],["T_WHITESPACE"," ",163],["T_NS_SEPARATOR","\\",163],["T_STRING","Closure",163],")",["T_WHITESPACE"," ",163],"{",["T_WHITESPACE","\n            ",163],["T_VARIABLE","$reflClosure",164],["T_WHITESPACE"," ",164],"=",["T_WHITESPACE"," ",164],["T_NEW","new",164],["T_WHITESPACE"," ",164],["T_NS_SEPARATOR","\\",164],["T_STRING","ReflectionFunction",164],"(",["T_VARIABLE","$value",164],")",";",["T_WHITESPACE","\n            ",164],["T_VARIABLE","$params",165],["T_WHITESPACE"," ",165],"=",["T_WHITESPACE"," ",165],["T_VARIABLE","$reflClosure",165],["T_OBJECT_OPERATOR","->",165],["T_STRING","getParameters",165],"(",")",";",["T_WHITESPACE","\n\n            ",165],["T_IF","if",167],["T_WHITESPACE"," ",167],"(",["T_ISSET","isset",167],"(",["T_VARIABLE","$params",167],"[",["T_LNUMBER","0",167],"]",")",["T_WHITESPACE"," ",167],["T_BOOLEAN_AND","&&",167],["T_WHITESPACE"," ",167],["T_STRING","null",167],["T_WHITESPACE"," ",167],["T_IS_NOT_IDENTICAL","!==",167],["T_WHITESPACE"," ",167],"(",["T_VARIABLE","$class",167],["T_WHITESPACE"," ",167],"=",["T_WHITESPACE"," ",167],["T_VARIABLE","$params",167],"[",["T_LNUMBER","0",167],"]",["T_OBJECT_OPERATOR","->",167],["T_STRING","getClass",167],"(",")",")",["T_WHITESPACE"," ",167],["T_BOOLEAN_AND","&&",167],["T_WHITESPACE"," ",167],["T_STRING","Options",167],["T_DOUBLE_COLON","::",167],["T_CLASS","class",167],["T_WHITESPACE"," ",167],["T_IS_IDENTICAL","===",167],["T_WHITESPACE"," ",167],["T_VARIABLE","$class",167],["T_OBJECT_OPERATOR","->",167],["T_STRING","name",167],")",["T_WHITESPACE"," ",167],"{",["T_WHITESPACE","\n                ",167],["T_COMMENT","\/\/ Initialize the option if no previous value exists\n",168],["T_WHITESPACE","                ",169],["T_IF","if",169],["T_WHITESPACE"," ",169],"(","!",["T_ISSET","isset",169],"(",["T_VARIABLE","$this",169],["T_OBJECT_OPERATOR","->",169],["T_STRING","defaults",169],"[",["T_VARIABLE","$option",169],"]",")",")",["T_WHITESPACE"," ",169],"{",["T_WHITESPACE","\n                    ",169],["T_VARIABLE","$this",170],["T_OBJECT_OPERATOR","->",170],["T_STRING","defaults",170],"[",["T_VARIABLE","$option",170],"]",["T_WHITESPACE"," ",170],"=",["T_WHITESPACE"," ",170],["T_STRING","null",170],";",["T_WHITESPACE","\n                ",170],"}",["T_WHITESPACE","\n\n                ",171],["T_COMMENT","\/\/ Ignore previous lazy options if the closure has no second parameter\n",173],["T_WHITESPACE","                ",174],["T_IF","if",174],["T_WHITESPACE"," ",174],"(","!",["T_ISSET","isset",174],"(",["T_VARIABLE","$this",174],["T_OBJECT_OPERATOR","->",174],["T_STRING","lazy",174],"[",["T_VARIABLE","$option",174],"]",")",["T_WHITESPACE"," ",174],["T_BOOLEAN_OR","||",174],["T_WHITESPACE"," ",174],"!",["T_ISSET","isset",174],"(",["T_VARIABLE","$params",174],"[",["T_LNUMBER","1",174],"]",")",")",["T_WHITESPACE"," ",174],"{",["T_WHITESPACE","\n                    ",174],["T_VARIABLE","$this",175],["T_OBJECT_OPERATOR","->",175],["T_STRING","lazy",175],"[",["T_VARIABLE","$option",175],"]",["T_WHITESPACE"," ",175],"=",["T_WHITESPACE"," ",175],["T_ARRAY","array",175],"(",")",";",["T_WHITESPACE","\n                ",175],"}",["T_WHITESPACE","\n\n                ",176],["T_COMMENT","\/\/ Store closure for later evaluation\n",178],["T_WHITESPACE","                ",179],["T_VARIABLE","$this",179],["T_OBJECT_OPERATOR","->",179],["T_STRING","lazy",179],"[",["T_VARIABLE","$option",179],"]","[","]",["T_WHITESPACE"," ",179],"=",["T_WHITESPACE"," ",179],["T_VARIABLE","$value",179],";",["T_WHITESPACE","\n                ",179],["T_VARIABLE","$this",180],["T_OBJECT_OPERATOR","->",180],["T_STRING","defined",180],"[",["T_VARIABLE","$option",180],"]",["T_WHITESPACE"," ",180],"=",["T_WHITESPACE"," ",180],["T_STRING","true",180],";",["T_WHITESPACE","\n\n                ",180],["T_COMMENT","\/\/ Make sure the option is processed\n",182],["T_WHITESPACE","                ",183],["T_UNSET","unset",183],"(",["T_VARIABLE","$this",183],["T_OBJECT_OPERATOR","->",183],["T_STRING","resolved",183],"[",["T_VARIABLE","$option",183],"]",")",";",["T_WHITESPACE","\n\n                ",183],["T_RETURN","return",185],["T_WHITESPACE"," ",185],["T_VARIABLE","$this",185],";",["T_WHITESPACE","\n            ",185],"}",["T_WHITESPACE","\n        ",186],"}",["T_WHITESPACE","\n\n        ",187],["T_COMMENT","\/\/ This option is not lazy anymore\n",189],["T_WHITESPACE","        ",190],["T_UNSET","unset",190],"(",["T_VARIABLE","$this",190],["T_OBJECT_OPERATOR","->",190],["T_STRING","lazy",190],"[",["T_VARIABLE","$option",190],"]",")",";",["T_WHITESPACE","\n\n        ",190],["T_COMMENT","\/\/ Yet undefined options can be marked as resolved, because we only need\n",192],["T_WHITESPACE","        ",193],["T_COMMENT","\/\/ to resolve options with lazy closures, normalizers or validation\n",193],["T_WHITESPACE","        ",194],["T_COMMENT","\/\/ rules, none of which can exist for undefined options\n",194],["T_WHITESPACE","        ",195],["T_COMMENT","\/\/ If the option was resolved before, update the resolved value\n",195],["T_WHITESPACE","        ",196],["T_IF","if",196],["T_WHITESPACE"," ",196],"(","!",["T_ISSET","isset",196],"(",["T_VARIABLE","$this",196],["T_OBJECT_OPERATOR","->",196],["T_STRING","defined",196],"[",["T_VARIABLE","$option",196],"]",")",["T_WHITESPACE"," ",196],["T_BOOLEAN_OR","||",196],["T_WHITESPACE"," ",196],["T_STRING","array_key_exists",196],"(",["T_VARIABLE","$option",196],",",["T_WHITESPACE"," ",196],["T_VARIABLE","$this",196],["T_OBJECT_OPERATOR","->",196],["T_STRING","resolved",196],")",")",["T_WHITESPACE"," ",196],"{",["T_WHITESPACE","\n            ",196],["T_VARIABLE","$this",197],["T_OBJECT_OPERATOR","->",197],["T_STRING","resolved",197],"[",["T_VARIABLE","$option",197],"]",["T_WHITESPACE"," ",197],"=",["T_WHITESPACE"," ",197],["T_VARIABLE","$value",197],";",["T_WHITESPACE","\n        ",197],"}",["T_WHITESPACE","\n\n        ",198],["T_VARIABLE","$this",200],["T_OBJECT_OPERATOR","->",200],["T_STRING","defaults",200],"[",["T_VARIABLE","$option",200],"]",["T_WHITESPACE"," ",200],"=",["T_WHITESPACE"," ",200],["T_VARIABLE","$value",200],";",["T_WHITESPACE","\n        ",200],["T_VARIABLE","$this",201],["T_OBJECT_OPERATOR","->",201],["T_STRING","defined",201],"[",["T_VARIABLE","$option",201],"]",["T_WHITESPACE"," ",201],"=",["T_WHITESPACE"," ",201],["T_STRING","true",201],";",["T_WHITESPACE","\n\n        ",201],["T_RETURN","return",203],["T_WHITESPACE"," ",203],["T_VARIABLE","$this",203],";",["T_WHITESPACE","\n    ",203],"}",["T_WHITESPACE","\n\n    ",204],["T_DOC_COMMENT","\/**\n     * Sets a list of default values.\n     *\n     * @param array $defaults The default values to set\n     *\n     * @return $this\n     *\n     * @throws AccessException If called from a lazy option or normalizer\n     *\/",206],["T_WHITESPACE","\n    ",214],["T_PUBLIC","public",215],["T_WHITESPACE"," ",215],["T_FUNCTION","function",215],["T_WHITESPACE"," ",215],["T_STRING","setDefaults",215],"(",["T_ARRAY","array",215],["T_WHITESPACE"," ",215],["T_VARIABLE","$defaults",215],")",["T_WHITESPACE","\n    ",215],"{",["T_WHITESPACE","\n        ",216],["T_FOREACH","foreach",217],["T_WHITESPACE"," ",217],"(",["T_VARIABLE","$defaults",217],["T_WHITESPACE"," ",217],["T_AS","as",217],["T_WHITESPACE"," ",217],["T_VARIABLE","$option",217],["T_WHITESPACE"," ",217],["T_DOUBLE_ARROW","=>",217],["T_WHITESPACE"," ",217],["T_VARIABLE","$value",217],")",["T_WHITESPACE"," ",217],"{",["T_WHITESPACE","\n            ",217],["T_VARIABLE","$this",218],["T_OBJECT_OPERATOR","->",218],["T_STRING","setDefault",218],"(",["T_VARIABLE","$option",218],",",["T_WHITESPACE"," ",218],["T_VARIABLE","$value",218],")",";",["T_WHITESPACE","\n        ",218],"}",["T_WHITESPACE","\n\n        ",219],["T_RETURN","return",221],["T_WHITESPACE"," ",221],["T_VARIABLE","$this",221],";",["T_WHITESPACE","\n    ",221],"}",["T_WHITESPACE","\n\n    ",222],["T_DOC_COMMENT","\/**\n     * Returns whether a default value is set for an option.\n     *\n     * Returns true if {@link setDefault()} was called for this option.\n     * An option is also considered set if it was set to null.\n     *\n     * @param string $option The option name\n     *\n     * @return bool Whether a default value is set\n     *\/",224],["T_WHITESPACE","\n    ",233],["T_PUBLIC","public",234],["T_WHITESPACE"," ",234],["T_FUNCTION","function",234],["T_WHITESPACE"," ",234],["T_STRING","hasDefault",234],"(",["T_VARIABLE","$option",234],")",["T_WHITESPACE","\n    ",234],"{",["T_WHITESPACE","\n        ",235],["T_RETURN","return",236],["T_WHITESPACE"," ",236],["T_STRING","array_key_exists",236],"(",["T_VARIABLE","$option",236],",",["T_WHITESPACE"," ",236],["T_VARIABLE","$this",236],["T_OBJECT_OPERATOR","->",236],["T_STRING","defaults",236],")",";",["T_WHITESPACE","\n    ",236],"}",["T_WHITESPACE","\n\n    ",237],["T_DOC_COMMENT","\/**\n     * Marks one or more options as required.\n     *\n     * @param string|string[] $optionNames One or more option names\n     *\n     * @return $this\n     *\n     * @throws AccessException If called from a lazy option or normalizer\n     *\/",239],["T_WHITESPACE","\n    ",247],["T_PUBLIC","public",248],["T_WHITESPACE"," ",248],["T_FUNCTION","function",248],["T_WHITESPACE"," ",248],["T_STRING","setRequired",248],"(",["T_VARIABLE","$optionNames",248],")",["T_WHITESPACE","\n    ",248],"{",["T_WHITESPACE","\n        ",249],["T_IF","if",250],["T_WHITESPACE"," ",250],"(",["T_VARIABLE","$this",250],["T_OBJECT_OPERATOR","->",250],["T_STRING","locked",250],")",["T_WHITESPACE"," ",250],"{",["T_WHITESPACE","\n            ",250],["T_THROW","throw",251],["T_WHITESPACE"," ",251],["T_NEW","new",251],["T_WHITESPACE"," ",251],["T_STRING","AccessException",251],"(",["T_CONSTANT_ENCAPSED_STRING","'Options cannot be made required from a lazy option or normalizer.'",251],")",";",["T_WHITESPACE","\n        ",251],"}",["T_WHITESPACE","\n\n        ",252],["T_FOREACH","foreach",254],["T_WHITESPACE"," ",254],"(",["T_ARRAY_CAST","(array)",254],["T_WHITESPACE"," ",254],["T_VARIABLE","$optionNames",254],["T_WHITESPACE"," ",254],["T_AS","as",254],["T_WHITESPACE"," ",254],["T_VARIABLE","$option",254],")",["T_WHITESPACE"," ",254],"{",["T_WHITESPACE","\n            ",254],["T_VARIABLE","$this",255],["T_OBJECT_OPERATOR","->",255],["T_STRING","defined",255],"[",["T_VARIABLE","$option",255],"]",["T_WHITESPACE"," ",255],"=",["T_WHITESPACE"," ",255],["T_STRING","true",255],";",["T_WHITESPACE","\n            ",255],["T_VARIABLE","$this",256],["T_OBJECT_OPERATOR","->",256],["T_STRING","required",256],"[",["T_VARIABLE","$option",256],"]",["T_WHITESPACE"," ",256],"=",["T_WHITESPACE"," ",256],["T_STRING","true",256],";",["T_WHITESPACE","\n        ",256],"}",["T_WHITESPACE","\n\n        ",257],["T_RETURN","return",259],["T_WHITESPACE"," ",259],["T_VARIABLE","$this",259],";",["T_WHITESPACE","\n    ",259],"}",["T_WHITESPACE","\n\n    ",260],["T_DOC_COMMENT","\/**\n     * Returns whether an option is required.\n     *\n     * An option is required if it was passed to {@link setRequired()}.\n     *\n     * @param string $option The name of the option\n     *\n     * @return bool Whether the option is required\n     *\/",262],["T_WHITESPACE","\n    ",270],["T_PUBLIC","public",271],["T_WHITESPACE"," ",271],["T_FUNCTION","function",271],["T_WHITESPACE"," ",271],["T_STRING","isRequired",271],"(",["T_VARIABLE","$option",271],")",["T_WHITESPACE","\n    ",271],"{",["T_WHITESPACE","\n        ",272],["T_RETURN","return",273],["T_WHITESPACE"," ",273],["T_ISSET","isset",273],"(",["T_VARIABLE","$this",273],["T_OBJECT_OPERATOR","->",273],["T_STRING","required",273],"[",["T_VARIABLE","$option",273],"]",")",";",["T_WHITESPACE","\n    ",273],"}",["T_WHITESPACE","\n\n    ",274],["T_DOC_COMMENT","\/**\n     * Returns the names of all required options.\n     *\n     * @return string[] The names of the required options\n     *\n     * @see isRequired()\n     *\/",276],["T_WHITESPACE","\n    ",282],["T_PUBLIC","public",283],["T_WHITESPACE"," ",283],["T_FUNCTION","function",283],["T_WHITESPACE"," ",283],["T_STRING","getRequiredOptions",283],"(",")",["T_WHITESPACE","\n    ",283],"{",["T_WHITESPACE","\n        ",284],["T_RETURN","return",285],["T_WHITESPACE"," ",285],["T_STRING","array_keys",285],"(",["T_VARIABLE","$this",285],["T_OBJECT_OPERATOR","->",285],["T_STRING","required",285],")",";",["T_WHITESPACE","\n    ",285],"}",["T_WHITESPACE","\n\n    ",286],["T_DOC_COMMENT","\/**\n     * Returns whether an option is missing a default value.\n     *\n     * An option is missing if it was passed to {@link setRequired()}, but not\n     * to {@link setDefault()}. This option must be passed explicitly to\n     * {@link resolve()}, otherwise an exception will be thrown.\n     *\n     * @param string $option The name of the option\n     *\n     * @return bool Whether the option is missing\n     *\/",288],["T_WHITESPACE","\n    ",298],["T_PUBLIC","public",299],["T_WHITESPACE"," ",299],["T_FUNCTION","function",299],["T_WHITESPACE"," ",299],["T_STRING","isMissing",299],"(",["T_VARIABLE","$option",299],")",["T_WHITESPACE","\n    ",299],"{",["T_WHITESPACE","\n        ",300],["T_RETURN","return",301],["T_WHITESPACE"," ",301],["T_ISSET","isset",301],"(",["T_VARIABLE","$this",301],["T_OBJECT_OPERATOR","->",301],["T_STRING","required",301],"[",["T_VARIABLE","$option",301],"]",")",["T_WHITESPACE"," ",301],["T_BOOLEAN_AND","&&",301],["T_WHITESPACE"," ",301],"!",["T_STRING","array_key_exists",301],"(",["T_VARIABLE","$option",301],",",["T_WHITESPACE"," ",301],["T_VARIABLE","$this",301],["T_OBJECT_OPERATOR","->",301],["T_STRING","defaults",301],")",";",["T_WHITESPACE","\n    ",301],"}",["T_WHITESPACE","\n\n    ",302],["T_DOC_COMMENT","\/**\n     * Returns the names of all options missing a default value.\n     *\n     * @return string[] The names of the missing options\n     *\n     * @see isMissing()\n     *\/",304],["T_WHITESPACE","\n    ",310],["T_PUBLIC","public",311],["T_WHITESPACE"," ",311],["T_FUNCTION","function",311],["T_WHITESPACE"," ",311],["T_STRING","getMissingOptions",311],"(",")",["T_WHITESPACE","\n    ",311],"{",["T_WHITESPACE","\n        ",312],["T_RETURN","return",313],["T_WHITESPACE"," ",313],["T_STRING","array_keys",313],"(",["T_STRING","array_diff_key",313],"(",["T_VARIABLE","$this",313],["T_OBJECT_OPERATOR","->",313],["T_STRING","required",313],",",["T_WHITESPACE"," ",313],["T_VARIABLE","$this",313],["T_OBJECT_OPERATOR","->",313],["T_STRING","defaults",313],")",")",";",["T_WHITESPACE","\n    ",313],"}",["T_WHITESPACE","\n\n    ",314],["T_DOC_COMMENT","\/**\n     * Defines a valid option name.\n     *\n     * Defines an option name without setting a default value. The option will\n     * be accepted when passed to {@link resolve()}. When not passed, the\n     * option will not be included in the resolved options.\n     *\n     * @param string|string[] $optionNames One or more option names\n     *\n     * @return $this\n     *\n     * @throws AccessException If called from a lazy option or normalizer\n     *\/",316],["T_WHITESPACE","\n    ",328],["T_PUBLIC","public",329],["T_WHITESPACE"," ",329],["T_FUNCTION","function",329],["T_WHITESPACE"," ",329],["T_STRING","setDefined",329],"(",["T_VARIABLE","$optionNames",329],")",["T_WHITESPACE","\n    ",329],"{",["T_WHITESPACE","\n        ",330],["T_IF","if",331],["T_WHITESPACE"," ",331],"(",["T_VARIABLE","$this",331],["T_OBJECT_OPERATOR","->",331],["T_STRING","locked",331],")",["T_WHITESPACE"," ",331],"{",["T_WHITESPACE","\n            ",331],["T_THROW","throw",332],["T_WHITESPACE"," ",332],["T_NEW","new",332],["T_WHITESPACE"," ",332],["T_STRING","AccessException",332],"(",["T_CONSTANT_ENCAPSED_STRING","'Options cannot be defined from a lazy option or normalizer.'",332],")",";",["T_WHITESPACE","\n        ",332],"}",["T_WHITESPACE","\n\n        ",333],["T_FOREACH","foreach",335],["T_WHITESPACE"," ",335],"(",["T_ARRAY_CAST","(array)",335],["T_WHITESPACE"," ",335],["T_VARIABLE","$optionNames",335],["T_WHITESPACE"," ",335],["T_AS","as",335],["T_WHITESPACE"," ",335],["T_VARIABLE","$option",335],")",["T_WHITESPACE"," ",335],"{",["T_WHITESPACE","\n            ",335],["T_VARIABLE","$this",336],["T_OBJECT_OPERATOR","->",336],["T_STRING","defined",336],"[",["T_VARIABLE","$option",336],"]",["T_WHITESPACE"," ",336],"=",["T_WHITESPACE"," ",336],["T_STRING","true",336],";",["T_WHITESPACE","\n        ",336],"}",["T_WHITESPACE","\n\n        ",337],["T_RETURN","return",339],["T_WHITESPACE"," ",339],["T_VARIABLE","$this",339],";",["T_WHITESPACE","\n    ",339],"}",["T_WHITESPACE","\n\n    ",340],["T_DOC_COMMENT","\/**\n     * Returns whether an option is defined.\n     *\n     * Returns true for any option passed to {@link setDefault()},\n     * {@link setRequired()} or {@link setDefined()}.\n     *\n     * @param string $option The option name\n     *\n     * @return bool Whether the option is defined\n     *\/",342],["T_WHITESPACE","\n    ",351],["T_PUBLIC","public",352],["T_WHITESPACE"," ",352],["T_FUNCTION","function",352],["T_WHITESPACE"," ",352],["T_STRING","isDefined",352],"(",["T_VARIABLE","$option",352],")",["T_WHITESPACE","\n    ",352],"{",["T_WHITESPACE","\n        ",353],["T_RETURN","return",354],["T_WHITESPACE"," ",354],["T_ISSET","isset",354],"(",["T_VARIABLE","$this",354],["T_OBJECT_OPERATOR","->",354],["T_STRING","defined",354],"[",["T_VARIABLE","$option",354],"]",")",";",["T_WHITESPACE","\n    ",354],"}",["T_WHITESPACE","\n\n    ",355],["T_DOC_COMMENT","\/**\n     * Returns the names of all defined options.\n     *\n     * @return string[] The names of the defined options\n     *\n     * @see isDefined()\n     *\/",357],["T_WHITESPACE","\n    ",363],["T_PUBLIC","public",364],["T_WHITESPACE"," ",364],["T_FUNCTION","function",364],["T_WHITESPACE"," ",364],["T_STRING","getDefinedOptions",364],"(",")",["T_WHITESPACE","\n    ",364],"{",["T_WHITESPACE","\n        ",365],["T_RETURN","return",366],["T_WHITESPACE"," ",366],["T_STRING","array_keys",366],"(",["T_VARIABLE","$this",366],["T_OBJECT_OPERATOR","->",366],["T_STRING","defined",366],")",";",["T_WHITESPACE","\n    ",366],"}",["T_WHITESPACE","\n\n    ",367],["T_DOC_COMMENT","\/**\n     * Sets the normalizer for an option.\n     *\n     * The normalizer should be a closure with the following signature:\n     *\n     * ```php\n     * function (Options $options, $value) {\n     *     \/\/ ...\n     * }\n     * ```\n     *\n     * The closure is invoked when {@link resolve()} is called. The closure\n     * has access to the resolved values of other options through the passed\n     * {@link Options} instance.\n     *\n     * The second parameter passed to the closure is the value of\n     * the option.\n     *\n     * The resolved option value is set to the return value of the closure.\n     *\n     * @param string   $option     The option name\n     * @param \\Closure $normalizer The normalizer\n     *\n     * @return $this\n     *\n     * @throws UndefinedOptionsException If the option is undefined\n     * @throws AccessException           If called from a lazy option or normalizer\n     *\/",369],["T_WHITESPACE","\n    ",396],["T_PUBLIC","public",397],["T_WHITESPACE"," ",397],["T_FUNCTION","function",397],["T_WHITESPACE"," ",397],["T_STRING","setNormalizer",397],"(",["T_VARIABLE","$option",397],",",["T_WHITESPACE"," ",397],["T_NS_SEPARATOR","\\",397],["T_STRING","Closure",397],["T_WHITESPACE"," ",397],["T_VARIABLE","$normalizer",397],")",["T_WHITESPACE","\n    ",397],"{",["T_WHITESPACE","\n        ",398],["T_IF","if",399],["T_WHITESPACE"," ",399],"(",["T_VARIABLE","$this",399],["T_OBJECT_OPERATOR","->",399],["T_STRING","locked",399],")",["T_WHITESPACE"," ",399],"{",["T_WHITESPACE","\n            ",399],["T_THROW","throw",400],["T_WHITESPACE"," ",400],["T_NEW","new",400],["T_WHITESPACE"," ",400],["T_STRING","AccessException",400],"(",["T_CONSTANT_ENCAPSED_STRING","'Normalizers cannot be set from a lazy option or normalizer.'",400],")",";",["T_WHITESPACE","\n        ",400],"}",["T_WHITESPACE","\n\n        ",401],["T_IF","if",403],["T_WHITESPACE"," ",403],"(","!",["T_ISSET","isset",403],"(",["T_VARIABLE","$this",403],["T_OBJECT_OPERATOR","->",403],["T_STRING","defined",403],"[",["T_VARIABLE","$option",403],"]",")",")",["T_WHITESPACE"," ",403],"{",["T_WHITESPACE","\n            ",403],["T_THROW","throw",404],["T_WHITESPACE"," ",404],["T_NEW","new",404],["T_WHITESPACE"," ",404],["T_STRING","UndefinedOptionsException",404],"(",["T_STRING","sprintf",404],"(",["T_WHITESPACE","\n                ",404],["T_CONSTANT_ENCAPSED_STRING","'The option \"%s\" does not exist. Defined options are: \"%s\".'",405],",",["T_WHITESPACE","\n                ",405],["T_VARIABLE","$option",406],",",["T_WHITESPACE","\n                ",406],["T_STRING","implode",407],"(",["T_CONSTANT_ENCAPSED_STRING","'\", \"'",407],",",["T_WHITESPACE"," ",407],["T_STRING","array_keys",407],"(",["T_VARIABLE","$this",407],["T_OBJECT_OPERATOR","->",407],["T_STRING","defined",407],")",")",["T_WHITESPACE","\n            ",407],")",")",";",["T_WHITESPACE","\n        ",408],"}",["T_WHITESPACE","\n\n        ",409],["T_VARIABLE","$this",411],["T_OBJECT_OPERATOR","->",411],["T_STRING","normalizers",411],"[",["T_VARIABLE","$option",411],"]",["T_WHITESPACE"," ",411],"=",["T_WHITESPACE"," ",411],["T_VARIABLE","$normalizer",411],";",["T_WHITESPACE","\n\n        ",411],["T_COMMENT","\/\/ Make sure the option is processed\n",413],["T_WHITESPACE","        ",414],["T_UNSET","unset",414],"(",["T_VARIABLE","$this",414],["T_OBJECT_OPERATOR","->",414],["T_STRING","resolved",414],"[",["T_VARIABLE","$option",414],"]",")",";",["T_WHITESPACE","\n\n        ",414],["T_RETURN","return",416],["T_WHITESPACE"," ",416],["T_VARIABLE","$this",416],";",["T_WHITESPACE","\n    ",416],"}",["T_WHITESPACE","\n\n    ",417],["T_DOC_COMMENT","\/**\n     * Sets allowed values for an option.\n     *\n     * Instead of passing values, you may also pass a closures with the\n     * following signature:\n     *\n     *     function ($value) {\n     *         \/\/ return true or false\n     *     }\n     *\n     * The closure receives the value as argument and should return true to\n     * accept the value and false to reject the value.\n     *\n     * @param string $option        The option name\n     * @param mixed  $allowedValues One or more acceptable values\/closures\n     *\n     * @return $this\n     *\n     * @throws UndefinedOptionsException If the option is undefined\n     * @throws AccessException           If called from a lazy option or normalizer\n     *\/",419],["T_WHITESPACE","\n    ",439],["T_PUBLIC","public",440],["T_WHITESPACE"," ",440],["T_FUNCTION","function",440],["T_WHITESPACE"," ",440],["T_STRING","setAllowedValues",440],"(",["T_VARIABLE","$option",440],",",["T_WHITESPACE"," ",440],["T_VARIABLE","$allowedValues",440],")",["T_WHITESPACE","\n    ",440],"{",["T_WHITESPACE","\n        ",441],["T_IF","if",442],["T_WHITESPACE"," ",442],"(",["T_VARIABLE","$this",442],["T_OBJECT_OPERATOR","->",442],["T_STRING","locked",442],")",["T_WHITESPACE"," ",442],"{",["T_WHITESPACE","\n            ",442],["T_THROW","throw",443],["T_WHITESPACE"," ",443],["T_NEW","new",443],["T_WHITESPACE"," ",443],["T_STRING","AccessException",443],"(",["T_CONSTANT_ENCAPSED_STRING","'Allowed values cannot be set from a lazy option or normalizer.'",443],")",";",["T_WHITESPACE","\n        ",443],"}",["T_WHITESPACE","\n\n        ",444],["T_IF","if",446],["T_WHITESPACE"," ",446],"(","!",["T_ISSET","isset",446],"(",["T_VARIABLE","$this",446],["T_OBJECT_OPERATOR","->",446],["T_STRING","defined",446],"[",["T_VARIABLE","$option",446],"]",")",")",["T_WHITESPACE"," ",446],"{",["T_WHITESPACE","\n            ",446],["T_THROW","throw",447],["T_WHITESPACE"," ",447],["T_NEW","new",447],["T_WHITESPACE"," ",447],["T_STRING","UndefinedOptionsException",447],"(",["T_STRING","sprintf",447],"(",["T_WHITESPACE","\n                ",447],["T_CONSTANT_ENCAPSED_STRING","'The option \"%s\" does not exist. Defined options are: \"%s\".'",448],",",["T_WHITESPACE","\n                ",448],["T_VARIABLE","$option",449],",",["T_WHITESPACE","\n                ",449],["T_STRING","implode",450],"(",["T_CONSTANT_ENCAPSED_STRING","'\", \"'",450],",",["T_WHITESPACE"," ",450],["T_STRING","array_keys",450],"(",["T_VARIABLE","$this",450],["T_OBJECT_OPERATOR","->",450],["T_STRING","defined",450],")",")",["T_WHITESPACE","\n            ",450],")",")",";",["T_WHITESPACE","\n        ",451],"}",["T_WHITESPACE","\n\n        ",452],["T_VARIABLE","$this",454],["T_OBJECT_OPERATOR","->",454],["T_STRING","allowedValues",454],"[",["T_VARIABLE","$option",454],"]",["T_WHITESPACE"," ",454],"=",["T_WHITESPACE"," ",454],["T_STRING","is_array",454],"(",["T_VARIABLE","$allowedValues",454],")",["T_WHITESPACE"," ",454],"?",["T_WHITESPACE"," ",454],["T_VARIABLE","$allowedValues",454],["T_WHITESPACE"," ",454],":",["T_WHITESPACE"," ",454],["T_ARRAY","array",454],"(",["T_VARIABLE","$allowedValues",454],")",";",["T_WHITESPACE","\n\n        ",454],["T_COMMENT","\/\/ Make sure the option is processed\n",456],["T_WHITESPACE","        ",457],["T_UNSET","unset",457],"(",["T_VARIABLE","$this",457],["T_OBJECT_OPERATOR","->",457],["T_STRING","resolved",457],"[",["T_VARIABLE","$option",457],"]",")",";",["T_WHITESPACE","\n\n        ",457],["T_RETURN","return",459],["T_WHITESPACE"," ",459],["T_VARIABLE","$this",459],";",["T_WHITESPACE","\n    ",459],"}",["T_WHITESPACE","\n\n    ",460],["T_DOC_COMMENT","\/**\n     * Adds allowed values for an option.\n     *\n     * The values are merged with the allowed values defined previously.\n     *\n     * Instead of passing values, you may also pass a closures with the\n     * following signature:\n     *\n     *     function ($value) {\n     *         \/\/ return true or false\n     *     }\n     *\n     * The closure receives the value as argument and should return true to\n     * accept the value and false to reject the value.\n     *\n     * @param string $option        The option name\n     * @param mixed  $allowedValues One or more acceptable values\/closures\n     *\n     * @return $this\n     *\n     * @throws UndefinedOptionsException If the option is undefined\n     * @throws AccessException           If called from a lazy option or normalizer\n     *\/",462],["T_WHITESPACE","\n    ",484],["T_PUBLIC","public",485],["T_WHITESPACE"," ",485],["T_FUNCTION","function",485],["T_WHITESPACE"," ",485],["T_STRING","addAllowedValues",485],"(",["T_VARIABLE","$option",485],",",["T_WHITESPACE"," ",485],["T_VARIABLE","$allowedValues",485],")",["T_WHITESPACE","\n    ",485],"{",["T_WHITESPACE","\n        ",486],["T_IF","if",487],["T_WHITESPACE"," ",487],"(",["T_VARIABLE","$this",487],["T_OBJECT_OPERATOR","->",487],["T_STRING","locked",487],")",["T_WHITESPACE"," ",487],"{",["T_WHITESPACE","\n            ",487],["T_THROW","throw",488],["T_WHITESPACE"," ",488],["T_NEW","new",488],["T_WHITESPACE"," ",488],["T_STRING","AccessException",488],"(",["T_CONSTANT_ENCAPSED_STRING","'Allowed values cannot be added from a lazy option or normalizer.'",488],")",";",["T_WHITESPACE","\n        ",488],"}",["T_WHITESPACE","\n\n        ",489],["T_IF","if",491],["T_WHITESPACE"," ",491],"(","!",["T_ISSET","isset",491],"(",["T_VARIABLE","$this",491],["T_OBJECT_OPERATOR","->",491],["T_STRING","defined",491],"[",["T_VARIABLE","$option",491],"]",")",")",["T_WHITESPACE"," ",491],"{",["T_WHITESPACE","\n            ",491],["T_THROW","throw",492],["T_WHITESPACE"," ",492],["T_NEW","new",492],["T_WHITESPACE"," ",492],["T_STRING","UndefinedOptionsException",492],"(",["T_STRING","sprintf",492],"(",["T_WHITESPACE","\n                ",492],["T_CONSTANT_ENCAPSED_STRING","'The option \"%s\" does not exist. Defined options are: \"%s\".'",493],",",["T_WHITESPACE","\n                ",493],["T_VARIABLE","$option",494],",",["T_WHITESPACE","\n                ",494],["T_STRING","implode",495],"(",["T_CONSTANT_ENCAPSED_STRING","'\", \"'",495],",",["T_WHITESPACE"," ",495],["T_STRING","array_keys",495],"(",["T_VARIABLE","$this",495],["T_OBJECT_OPERATOR","->",495],["T_STRING","defined",495],")",")",["T_WHITESPACE","\n            ",495],")",")",";",["T_WHITESPACE","\n        ",496],"}",["T_WHITESPACE","\n\n        ",497],["T_IF","if",499],["T_WHITESPACE"," ",499],"(","!",["T_STRING","is_array",499],"(",["T_VARIABLE","$allowedValues",499],")",")",["T_WHITESPACE"," ",499],"{",["T_WHITESPACE","\n            ",499],["T_VARIABLE","$allowedValues",500],["T_WHITESPACE"," ",500],"=",["T_WHITESPACE"," ",500],["T_ARRAY","array",500],"(",["T_VARIABLE","$allowedValues",500],")",";",["T_WHITESPACE","\n        ",500],"}",["T_WHITESPACE","\n\n        ",501],["T_IF","if",503],["T_WHITESPACE"," ",503],"(","!",["T_ISSET","isset",503],"(",["T_VARIABLE","$this",503],["T_OBJECT_OPERATOR","->",503],["T_STRING","allowedValues",503],"[",["T_VARIABLE","$option",503],"]",")",")",["T_WHITESPACE"," ",503],"{",["T_WHITESPACE","\n            ",503],["T_VARIABLE","$this",504],["T_OBJECT_OPERATOR","->",504],["T_STRING","allowedValues",504],"[",["T_VARIABLE","$option",504],"]",["T_WHITESPACE"," ",504],"=",["T_WHITESPACE"," ",504],["T_VARIABLE","$allowedValues",504],";",["T_WHITESPACE","\n        ",504],"}",["T_WHITESPACE"," ",505],["T_ELSE","else",505],["T_WHITESPACE"," ",505],"{",["T_WHITESPACE","\n            ",505],["T_VARIABLE","$this",506],["T_OBJECT_OPERATOR","->",506],["T_STRING","allowedValues",506],"[",["T_VARIABLE","$option",506],"]",["T_WHITESPACE"," ",506],"=",["T_WHITESPACE"," ",506],["T_STRING","array_merge",506],"(",["T_VARIABLE","$this",506],["T_OBJECT_OPERATOR","->",506],["T_STRING","allowedValues",506],"[",["T_VARIABLE","$option",506],"]",",",["T_WHITESPACE"," ",506],["T_VARIABLE","$allowedValues",506],")",";",["T_WHITESPACE","\n        ",506],"}",["T_WHITESPACE","\n\n        ",507],["T_COMMENT","\/\/ Make sure the option is processed\n",509],["T_WHITESPACE","        ",510],["T_UNSET","unset",510],"(",["T_VARIABLE","$this",510],["T_OBJECT_OPERATOR","->",510],["T_STRING","resolved",510],"[",["T_VARIABLE","$option",510],"]",")",";",["T_WHITESPACE","\n\n        ",510],["T_RETURN","return",512],["T_WHITESPACE"," ",512],["T_VARIABLE","$this",512],";",["T_WHITESPACE","\n    ",512],"}",["T_WHITESPACE","\n\n    ",513],["T_DOC_COMMENT","\/**\n     * Sets allowed types for an option.\n     *\n     * Any type for which a corresponding is_<type>() function exists is\n     * acceptable. Additionally, fully-qualified class or interface names may\n     * be passed.\n     *\n     * @param string          $option       The option name\n     * @param string|string[] $allowedTypes One or more accepted types\n     *\n     * @return $this\n     *\n     * @throws UndefinedOptionsException If the option is undefined\n     * @throws AccessException           If called from a lazy option or normalizer\n     *\/",515],["T_WHITESPACE","\n    ",529],["T_PUBLIC","public",530],["T_WHITESPACE"," ",530],["T_FUNCTION","function",530],["T_WHITESPACE"," ",530],["T_STRING","setAllowedTypes",530],"(",["T_VARIABLE","$option",530],",",["T_WHITESPACE"," ",530],["T_VARIABLE","$allowedTypes",530],")",["T_WHITESPACE","\n    ",530],"{",["T_WHITESPACE","\n        ",531],["T_IF","if",532],["T_WHITESPACE"," ",532],"(",["T_VARIABLE","$this",532],["T_OBJECT_OPERATOR","->",532],["T_STRING","locked",532],")",["T_WHITESPACE"," ",532],"{",["T_WHITESPACE","\n            ",532],["T_THROW","throw",533],["T_WHITESPACE"," ",533],["T_NEW","new",533],["T_WHITESPACE"," ",533],["T_STRING","AccessException",533],"(",["T_CONSTANT_ENCAPSED_STRING","'Allowed types cannot be set from a lazy option or normalizer.'",533],")",";",["T_WHITESPACE","\n        ",533],"}",["T_WHITESPACE","\n\n        ",534],["T_IF","if",536],["T_WHITESPACE"," ",536],"(","!",["T_ISSET","isset",536],"(",["T_VARIABLE","$this",536],["T_OBJECT_OPERATOR","->",536],["T_STRING","defined",536],"[",["T_VARIABLE","$option",536],"]",")",")",["T_WHITESPACE"," ",536],"{",["T_WHITESPACE","\n            ",536],["T_THROW","throw",537],["T_WHITESPACE"," ",537],["T_NEW","new",537],["T_WHITESPACE"," ",537],["T_STRING","UndefinedOptionsException",537],"(",["T_STRING","sprintf",537],"(",["T_WHITESPACE","\n                ",537],["T_CONSTANT_ENCAPSED_STRING","'The option \"%s\" does not exist. Defined options are: \"%s\".'",538],",",["T_WHITESPACE","\n                ",538],["T_VARIABLE","$option",539],",",["T_WHITESPACE","\n                ",539],["T_STRING","implode",540],"(",["T_CONSTANT_ENCAPSED_STRING","'\", \"'",540],",",["T_WHITESPACE"," ",540],["T_STRING","array_keys",540],"(",["T_VARIABLE","$this",540],["T_OBJECT_OPERATOR","->",540],["T_STRING","defined",540],")",")",["T_WHITESPACE","\n            ",540],")",")",";",["T_WHITESPACE","\n        ",541],"}",["T_WHITESPACE","\n\n        ",542],["T_VARIABLE","$this",544],["T_OBJECT_OPERATOR","->",544],["T_STRING","allowedTypes",544],"[",["T_VARIABLE","$option",544],"]",["T_WHITESPACE"," ",544],"=",["T_WHITESPACE"," ",544],["T_ARRAY_CAST","(array)",544],["T_WHITESPACE"," ",544],["T_VARIABLE","$allowedTypes",544],";",["T_WHITESPACE","\n\n        ",544],["T_COMMENT","\/\/ Make sure the option is processed\n",546],["T_WHITESPACE","        ",547],["T_UNSET","unset",547],"(",["T_VARIABLE","$this",547],["T_OBJECT_OPERATOR","->",547],["T_STRING","resolved",547],"[",["T_VARIABLE","$option",547],"]",")",";",["T_WHITESPACE","\n\n        ",547],["T_RETURN","return",549],["T_WHITESPACE"," ",549],["T_VARIABLE","$this",549],";",["T_WHITESPACE","\n    ",549],"}",["T_WHITESPACE","\n\n    ",550],["T_DOC_COMMENT","\/**\n     * Adds allowed types for an option.\n     *\n     * The types are merged with the allowed types defined previously.\n     *\n     * Any type for which a corresponding is_<type>() function exists is\n     * acceptable. Additionally, fully-qualified class or interface names may\n     * be passed.\n     *\n     * @param string          $option       The option name\n     * @param string|string[] $allowedTypes One or more accepted types\n     *\n     * @return $this\n     *\n     * @throws UndefinedOptionsException If the option is undefined\n     * @throws AccessException           If called from a lazy option or normalizer\n     *\/",552],["T_WHITESPACE","\n    ",568],["T_PUBLIC","public",569],["T_WHITESPACE"," ",569],["T_FUNCTION","function",569],["T_WHITESPACE"," ",569],["T_STRING","addAllowedTypes",569],"(",["T_VARIABLE","$option",569],",",["T_WHITESPACE"," ",569],["T_VARIABLE","$allowedTypes",569],")",["T_WHITESPACE","\n    ",569],"{",["T_WHITESPACE","\n        ",570],["T_IF","if",571],["T_WHITESPACE"," ",571],"(",["T_VARIABLE","$this",571],["T_OBJECT_OPERATOR","->",571],["T_STRING","locked",571],")",["T_WHITESPACE"," ",571],"{",["T_WHITESPACE","\n            ",571],["T_THROW","throw",572],["T_WHITESPACE"," ",572],["T_NEW","new",572],["T_WHITESPACE"," ",572],["T_STRING","AccessException",572],"(",["T_CONSTANT_ENCAPSED_STRING","'Allowed types cannot be added from a lazy option or normalizer.'",572],")",";",["T_WHITESPACE","\n        ",572],"}",["T_WHITESPACE","\n\n        ",573],["T_IF","if",575],["T_WHITESPACE"," ",575],"(","!",["T_ISSET","isset",575],"(",["T_VARIABLE","$this",575],["T_OBJECT_OPERATOR","->",575],["T_STRING","defined",575],"[",["T_VARIABLE","$option",575],"]",")",")",["T_WHITESPACE"," ",575],"{",["T_WHITESPACE","\n            ",575],["T_THROW","throw",576],["T_WHITESPACE"," ",576],["T_NEW","new",576],["T_WHITESPACE"," ",576],["T_STRING","UndefinedOptionsException",576],"(",["T_STRING","sprintf",576],"(",["T_WHITESPACE","\n                ",576],["T_CONSTANT_ENCAPSED_STRING","'The option \"%s\" does not exist. Defined options are: \"%s\".'",577],",",["T_WHITESPACE","\n                ",577],["T_VARIABLE","$option",578],",",["T_WHITESPACE","\n                ",578],["T_STRING","implode",579],"(",["T_CONSTANT_ENCAPSED_STRING","'\", \"'",579],",",["T_WHITESPACE"," ",579],["T_STRING","array_keys",579],"(",["T_VARIABLE","$this",579],["T_OBJECT_OPERATOR","->",579],["T_STRING","defined",579],")",")",["T_WHITESPACE","\n            ",579],")",")",";",["T_WHITESPACE","\n        ",580],"}",["T_WHITESPACE","\n\n        ",581],["T_IF","if",583],["T_WHITESPACE"," ",583],"(","!",["T_ISSET","isset",583],"(",["T_VARIABLE","$this",583],["T_OBJECT_OPERATOR","->",583],["T_STRING","allowedTypes",583],"[",["T_VARIABLE","$option",583],"]",")",")",["T_WHITESPACE"," ",583],"{",["T_WHITESPACE","\n            ",583],["T_VARIABLE","$this",584],["T_OBJECT_OPERATOR","->",584],["T_STRING","allowedTypes",584],"[",["T_VARIABLE","$option",584],"]",["T_WHITESPACE"," ",584],"=",["T_WHITESPACE"," ",584],["T_ARRAY_CAST","(array)",584],["T_WHITESPACE"," ",584],["T_VARIABLE","$allowedTypes",584],";",["T_WHITESPACE","\n        ",584],"}",["T_WHITESPACE"," ",585],["T_ELSE","else",585],["T_WHITESPACE"," ",585],"{",["T_WHITESPACE","\n            ",585],["T_VARIABLE","$this",586],["T_OBJECT_OPERATOR","->",586],["T_STRING","allowedTypes",586],"[",["T_VARIABLE","$option",586],"]",["T_WHITESPACE"," ",586],"=",["T_WHITESPACE"," ",586],["T_STRING","array_merge",586],"(",["T_VARIABLE","$this",586],["T_OBJECT_OPERATOR","->",586],["T_STRING","allowedTypes",586],"[",["T_VARIABLE","$option",586],"]",",",["T_WHITESPACE"," ",586],["T_ARRAY_CAST","(array)",586],["T_WHITESPACE"," ",586],["T_VARIABLE","$allowedTypes",586],")",";",["T_WHITESPACE","\n        ",586],"}",["T_WHITESPACE","\n\n        ",587],["T_COMMENT","\/\/ Make sure the option is processed\n",589],["T_WHITESPACE","        ",590],["T_UNSET","unset",590],"(",["T_VARIABLE","$this",590],["T_OBJECT_OPERATOR","->",590],["T_STRING","resolved",590],"[",["T_VARIABLE","$option",590],"]",")",";",["T_WHITESPACE","\n\n        ",590],["T_RETURN","return",592],["T_WHITESPACE"," ",592],["T_VARIABLE","$this",592],";",["T_WHITESPACE","\n    ",592],"}",["T_WHITESPACE","\n\n    ",593],["T_DOC_COMMENT","\/**\n     * Removes the option with the given name.\n     *\n     * Undefined options are ignored.\n     *\n     * @param string|string[] $optionNames One or more option names\n     *\n     * @return $this\n     *\n     * @throws AccessException If called from a lazy option or normalizer\n     *\/",595],["T_WHITESPACE","\n    ",605],["T_PUBLIC","public",606],["T_WHITESPACE"," ",606],["T_FUNCTION","function",606],["T_WHITESPACE"," ",606],["T_STRING","remove",606],"(",["T_VARIABLE","$optionNames",606],")",["T_WHITESPACE","\n    ",606],"{",["T_WHITESPACE","\n        ",607],["T_IF","if",608],["T_WHITESPACE"," ",608],"(",["T_VARIABLE","$this",608],["T_OBJECT_OPERATOR","->",608],["T_STRING","locked",608],")",["T_WHITESPACE"," ",608],"{",["T_WHITESPACE","\n            ",608],["T_THROW","throw",609],["T_WHITESPACE"," ",609],["T_NEW","new",609],["T_WHITESPACE"," ",609],["T_STRING","AccessException",609],"(",["T_CONSTANT_ENCAPSED_STRING","'Options cannot be removed from a lazy option or normalizer.'",609],")",";",["T_WHITESPACE","\n        ",609],"}",["T_WHITESPACE","\n\n        ",610],["T_FOREACH","foreach",612],["T_WHITESPACE"," ",612],"(",["T_ARRAY_CAST","(array)",612],["T_WHITESPACE"," ",612],["T_VARIABLE","$optionNames",612],["T_WHITESPACE"," ",612],["T_AS","as",612],["T_WHITESPACE"," ",612],["T_VARIABLE","$option",612],")",["T_WHITESPACE"," ",612],"{",["T_WHITESPACE","\n            ",612],["T_UNSET","unset",613],"(",["T_VARIABLE","$this",613],["T_OBJECT_OPERATOR","->",613],["T_STRING","defined",613],"[",["T_VARIABLE","$option",613],"]",",",["T_WHITESPACE"," ",613],["T_VARIABLE","$this",613],["T_OBJECT_OPERATOR","->",613],["T_STRING","defaults",613],"[",["T_VARIABLE","$option",613],"]",",",["T_WHITESPACE"," ",613],["T_VARIABLE","$this",613],["T_OBJECT_OPERATOR","->",613],["T_STRING","required",613],"[",["T_VARIABLE","$option",613],"]",",",["T_WHITESPACE"," ",613],["T_VARIABLE","$this",613],["T_OBJECT_OPERATOR","->",613],["T_STRING","resolved",613],"[",["T_VARIABLE","$option",613],"]",")",";",["T_WHITESPACE","\n            ",613],["T_UNSET","unset",614],"(",["T_VARIABLE","$this",614],["T_OBJECT_OPERATOR","->",614],["T_STRING","lazy",614],"[",["T_VARIABLE","$option",614],"]",",",["T_WHITESPACE"," ",614],["T_VARIABLE","$this",614],["T_OBJECT_OPERATOR","->",614],["T_STRING","normalizers",614],"[",["T_VARIABLE","$option",614],"]",",",["T_WHITESPACE"," ",614],["T_VARIABLE","$this",614],["T_OBJECT_OPERATOR","->",614],["T_STRING","allowedTypes",614],"[",["T_VARIABLE","$option",614],"]",",",["T_WHITESPACE"," ",614],["T_VARIABLE","$this",614],["T_OBJECT_OPERATOR","->",614],["T_STRING","allowedValues",614],"[",["T_VARIABLE","$option",614],"]",")",";",["T_WHITESPACE","\n        ",614],"}",["T_WHITESPACE","\n\n        ",615],["T_RETURN","return",617],["T_WHITESPACE"," ",617],["T_VARIABLE","$this",617],";",["T_WHITESPACE","\n    ",617],"}",["T_WHITESPACE","\n\n    ",618],["T_DOC_COMMENT","\/**\n     * Removes all options.\n     *\n     * @return $this\n     *\n     * @throws AccessException If called from a lazy option or normalizer\n     *\/",620],["T_WHITESPACE","\n    ",626],["T_PUBLIC","public",627],["T_WHITESPACE"," ",627],["T_FUNCTION","function",627],["T_WHITESPACE"," ",627],["T_STRING","clear",627],"(",")",["T_WHITESPACE","\n    ",627],"{",["T_WHITESPACE","\n        ",628],["T_IF","if",629],["T_WHITESPACE"," ",629],"(",["T_VARIABLE","$this",629],["T_OBJECT_OPERATOR","->",629],["T_STRING","locked",629],")",["T_WHITESPACE"," ",629],"{",["T_WHITESPACE","\n            ",629],["T_THROW","throw",630],["T_WHITESPACE"," ",630],["T_NEW","new",630],["T_WHITESPACE"," ",630],["T_STRING","AccessException",630],"(",["T_CONSTANT_ENCAPSED_STRING","'Options cannot be cleared from a lazy option or normalizer.'",630],")",";",["T_WHITESPACE","\n        ",630],"}",["T_WHITESPACE","\n\n        ",631],["T_VARIABLE","$this",633],["T_OBJECT_OPERATOR","->",633],["T_STRING","defined",633],["T_WHITESPACE"," ",633],"=",["T_WHITESPACE"," ",633],["T_ARRAY","array",633],"(",")",";",["T_WHITESPACE","\n        ",633],["T_VARIABLE","$this",634],["T_OBJECT_OPERATOR","->",634],["T_STRING","defaults",634],["T_WHITESPACE"," ",634],"=",["T_WHITESPACE"," ",634],["T_ARRAY","array",634],"(",")",";",["T_WHITESPACE","\n        ",634],["T_VARIABLE","$this",635],["T_OBJECT_OPERATOR","->",635],["T_STRING","required",635],["T_WHITESPACE"," ",635],"=",["T_WHITESPACE"," ",635],["T_ARRAY","array",635],"(",")",";",["T_WHITESPACE","\n        ",635],["T_VARIABLE","$this",636],["T_OBJECT_OPERATOR","->",636],["T_STRING","resolved",636],["T_WHITESPACE"," ",636],"=",["T_WHITESPACE"," ",636],["T_ARRAY","array",636],"(",")",";",["T_WHITESPACE","\n        ",636],["T_VARIABLE","$this",637],["T_OBJECT_OPERATOR","->",637],["T_STRING","lazy",637],["T_WHITESPACE"," ",637],"=",["T_WHITESPACE"," ",637],["T_ARRAY","array",637],"(",")",";",["T_WHITESPACE","\n        ",637],["T_VARIABLE","$this",638],["T_OBJECT_OPERATOR","->",638],["T_STRING","normalizers",638],["T_WHITESPACE"," ",638],"=",["T_WHITESPACE"," ",638],["T_ARRAY","array",638],"(",")",";",["T_WHITESPACE","\n        ",638],["T_VARIABLE","$this",639],["T_OBJECT_OPERATOR","->",639],["T_STRING","allowedTypes",639],["T_WHITESPACE"," ",639],"=",["T_WHITESPACE"," ",639],["T_ARRAY","array",639],"(",")",";",["T_WHITESPACE","\n        ",639],["T_VARIABLE","$this",640],["T_OBJECT_OPERATOR","->",640],["T_STRING","allowedValues",640],["T_WHITESPACE"," ",640],"=",["T_WHITESPACE"," ",640],["T_ARRAY","array",640],"(",")",";",["T_WHITESPACE","\n\n        ",640],["T_RETURN","return",642],["T_WHITESPACE"," ",642],["T_VARIABLE","$this",642],";",["T_WHITESPACE","\n    ",642],"}",["T_WHITESPACE","\n\n    ",643],["T_DOC_COMMENT","\/**\n     * Merges options with the default values stored in the container and\n     * validates them.\n     *\n     * Exceptions are thrown if:\n     *\n     *  - Undefined options are passed;\n     *  - Required options are missing;\n     *  - Options have invalid types;\n     *  - Options have invalid values.\n     *\n     * @param array $options A map of option names to values\n     *\n     * @return array The merged and validated options\n     *\n     * @throws UndefinedOptionsException If an option name is undefined\n     * @throws InvalidOptionsException   If an option doesn't fulfill the\n     *                                   specified validation rules\n     * @throws MissingOptionsException   If a required option is missing\n     * @throws OptionDefinitionException If there is a cyclic dependency between\n     *                                   lazy options and\/or normalizers\n     * @throws NoSuchOptionException     If a lazy option reads an unavailable option\n     * @throws AccessException           If called from a lazy option or normalizer\n     *\/",645],["T_WHITESPACE","\n    ",668],["T_PUBLIC","public",669],["T_WHITESPACE"," ",669],["T_FUNCTION","function",669],["T_WHITESPACE"," ",669],["T_STRING","resolve",669],"(",["T_ARRAY","array",669],["T_WHITESPACE"," ",669],["T_VARIABLE","$options",669],["T_WHITESPACE"," ",669],"=",["T_WHITESPACE"," ",669],["T_ARRAY","array",669],"(",")",")",["T_WHITESPACE","\n    ",669],"{",["T_WHITESPACE","\n        ",670],["T_IF","if",671],["T_WHITESPACE"," ",671],"(",["T_VARIABLE","$this",671],["T_OBJECT_OPERATOR","->",671],["T_STRING","locked",671],")",["T_WHITESPACE"," ",671],"{",["T_WHITESPACE","\n            ",671],["T_THROW","throw",672],["T_WHITESPACE"," ",672],["T_NEW","new",672],["T_WHITESPACE"," ",672],["T_STRING","AccessException",672],"(",["T_CONSTANT_ENCAPSED_STRING","'Options cannot be resolved from a lazy option or normalizer.'",672],")",";",["T_WHITESPACE","\n        ",672],"}",["T_WHITESPACE","\n\n        ",673],["T_COMMENT","\/\/ Allow this method to be called multiple times\n",675],["T_WHITESPACE","        ",676],["T_VARIABLE","$clone",676],["T_WHITESPACE"," ",676],"=",["T_WHITESPACE"," ",676],["T_CLONE","clone",676],["T_WHITESPACE"," ",676],["T_VARIABLE","$this",676],";",["T_WHITESPACE","\n\n        ",676],["T_COMMENT","\/\/ Make sure that no unknown options are passed\n",678],["T_WHITESPACE","        ",679],["T_VARIABLE","$diff",679],["T_WHITESPACE"," ",679],"=",["T_WHITESPACE"," ",679],["T_STRING","array_diff_key",679],"(",["T_VARIABLE","$options",679],",",["T_WHITESPACE"," ",679],["T_VARIABLE","$clone",679],["T_OBJECT_OPERATOR","->",679],["T_STRING","defined",679],")",";",["T_WHITESPACE","\n\n        ",679],["T_IF","if",681],["T_WHITESPACE"," ",681],"(",["T_STRING","count",681],"(",["T_VARIABLE","$diff",681],")",["T_WHITESPACE"," ",681],">",["T_WHITESPACE"," ",681],["T_LNUMBER","0",681],")",["T_WHITESPACE"," ",681],"{",["T_WHITESPACE","\n            ",681],["T_STRING","ksort",682],"(",["T_VARIABLE","$clone",682],["T_OBJECT_OPERATOR","->",682],["T_STRING","defined",682],")",";",["T_WHITESPACE","\n            ",682],["T_STRING","ksort",683],"(",["T_VARIABLE","$diff",683],")",";",["T_WHITESPACE","\n\n            ",683],["T_THROW","throw",685],["T_WHITESPACE"," ",685],["T_NEW","new",685],["T_WHITESPACE"," ",685],["T_STRING","UndefinedOptionsException",685],"(",["T_STRING","sprintf",685],"(",["T_WHITESPACE","\n                ",685],"(",["T_STRING","count",686],"(",["T_VARIABLE","$diff",686],")",["T_WHITESPACE"," ",686],">",["T_WHITESPACE"," ",686],["T_LNUMBER","1",686],["T_WHITESPACE"," ",686],"?",["T_WHITESPACE"," ",686],["T_CONSTANT_ENCAPSED_STRING","'The options \"%s\" do not exist.'",686],["T_WHITESPACE"," ",686],":",["T_WHITESPACE"," ",686],["T_CONSTANT_ENCAPSED_STRING","'The option \"%s\" does not exist.'",686],")",".",["T_CONSTANT_ENCAPSED_STRING","' Defined options are: \"%s\".'",686],",",["T_WHITESPACE","\n                ",686],["T_STRING","implode",687],"(",["T_CONSTANT_ENCAPSED_STRING","'\", \"'",687],",",["T_WHITESPACE"," ",687],["T_STRING","array_keys",687],"(",["T_VARIABLE","$diff",687],")",")",",",["T_WHITESPACE","\n                ",687],["T_STRING","implode",688],"(",["T_CONSTANT_ENCAPSED_STRING","'\", \"'",688],",",["T_WHITESPACE"," ",688],["T_STRING","array_keys",688],"(",["T_VARIABLE","$clone",688],["T_OBJECT_OPERATOR","->",688],["T_STRING","defined",688],")",")",["T_WHITESPACE","\n            ",688],")",")",";",["T_WHITESPACE","\n        ",689],"}",["T_WHITESPACE","\n\n        ",690],["T_COMMENT","\/\/ Override options set by the user\n",692],["T_WHITESPACE","        ",693],["T_FOREACH","foreach",693],["T_WHITESPACE"," ",693],"(",["T_VARIABLE","$options",693],["T_WHITESPACE"," ",693],["T_AS","as",693],["T_WHITESPACE"," ",693],["T_VARIABLE","$option",693],["T_WHITESPACE"," ",693],["T_DOUBLE_ARROW","=>",693],["T_WHITESPACE"," ",693],["T_VARIABLE","$value",693],")",["T_WHITESPACE"," ",693],"{",["T_WHITESPACE","\n            ",693],["T_VARIABLE","$clone",694],["T_OBJECT_OPERATOR","->",694],["T_STRING","defaults",694],"[",["T_VARIABLE","$option",694],"]",["T_WHITESPACE"," ",694],"=",["T_WHITESPACE"," ",694],["T_VARIABLE","$value",694],";",["T_WHITESPACE","\n            ",694],["T_UNSET","unset",695],"(",["T_VARIABLE","$clone",695],["T_OBJECT_OPERATOR","->",695],["T_STRING","resolved",695],"[",["T_VARIABLE","$option",695],"]",",",["T_WHITESPACE"," ",695],["T_VARIABLE","$clone",695],["T_OBJECT_OPERATOR","->",695],["T_STRING","lazy",695],"[",["T_VARIABLE","$option",695],"]",")",";",["T_WHITESPACE","\n        ",695],"}",["T_WHITESPACE","\n\n        ",696],["T_COMMENT","\/\/ Check whether any required option is missing\n",698],["T_WHITESPACE","        ",699],["T_VARIABLE","$diff",699],["T_WHITESPACE"," ",699],"=",["T_WHITESPACE"," ",699],["T_STRING","array_diff_key",699],"(",["T_VARIABLE","$clone",699],["T_OBJECT_OPERATOR","->",699],["T_STRING","required",699],",",["T_WHITESPACE"," ",699],["T_VARIABLE","$clone",699],["T_OBJECT_OPERATOR","->",699],["T_STRING","defaults",699],")",";",["T_WHITESPACE","\n\n        ",699],["T_IF","if",701],["T_WHITESPACE"," ",701],"(",["T_STRING","count",701],"(",["T_VARIABLE","$diff",701],")",["T_WHITESPACE"," ",701],">",["T_WHITESPACE"," ",701],["T_LNUMBER","0",701],")",["T_WHITESPACE"," ",701],"{",["T_WHITESPACE","\n            ",701],["T_STRING","ksort",702],"(",["T_VARIABLE","$diff",702],")",";",["T_WHITESPACE","\n\n            ",702],["T_THROW","throw",704],["T_WHITESPACE"," ",704],["T_NEW","new",704],["T_WHITESPACE"," ",704],["T_STRING","MissingOptionsException",704],"(",["T_STRING","sprintf",704],"(",["T_WHITESPACE","\n                ",704],["T_STRING","count",705],"(",["T_VARIABLE","$diff",705],")",["T_WHITESPACE"," ",705],">",["T_WHITESPACE"," ",705],["T_LNUMBER","1",705],["T_WHITESPACE"," ",705],"?",["T_WHITESPACE"," ",705],["T_CONSTANT_ENCAPSED_STRING","'The required options \"%s\" are missing.'",705],["T_WHITESPACE"," ",705],":",["T_WHITESPACE"," ",705],["T_CONSTANT_ENCAPSED_STRING","'The required option \"%s\" is missing.'",705],",",["T_WHITESPACE","\n                ",705],["T_STRING","implode",706],"(",["T_CONSTANT_ENCAPSED_STRING","'\", \"'",706],",",["T_WHITESPACE"," ",706],["T_STRING","array_keys",706],"(",["T_VARIABLE","$diff",706],")",")",["T_WHITESPACE","\n            ",706],")",")",";",["T_WHITESPACE","\n        ",707],"}",["T_WHITESPACE","\n\n        ",708],["T_COMMENT","\/\/ Lock the container\n",710],["T_WHITESPACE","        ",711],["T_VARIABLE","$clone",711],["T_OBJECT_OPERATOR","->",711],["T_STRING","locked",711],["T_WHITESPACE"," ",711],"=",["T_WHITESPACE"," ",711],["T_STRING","true",711],";",["T_WHITESPACE","\n\n        ",711],["T_COMMENT","\/\/ Now process the individual options. Use offsetGet(), which resolves\n",713],["T_WHITESPACE","        ",714],["T_COMMENT","\/\/ the option itself and any options that the option depends on\n",714],["T_WHITESPACE","        ",715],["T_FOREACH","foreach",715],["T_WHITESPACE"," ",715],"(",["T_VARIABLE","$clone",715],["T_OBJECT_OPERATOR","->",715],["T_STRING","defaults",715],["T_WHITESPACE"," ",715],["T_AS","as",715],["T_WHITESPACE"," ",715],["T_VARIABLE","$option",715],["T_WHITESPACE"," ",715],["T_DOUBLE_ARROW","=>",715],["T_WHITESPACE"," ",715],["T_VARIABLE","$_",715],")",["T_WHITESPACE"," ",715],"{",["T_WHITESPACE","\n            ",715],["T_VARIABLE","$clone",716],["T_OBJECT_OPERATOR","->",716],["T_STRING","offsetGet",716],"(",["T_VARIABLE","$option",716],")",";",["T_WHITESPACE","\n        ",716],"}",["T_WHITESPACE","\n\n        ",717],["T_RETURN","return",719],["T_WHITESPACE"," ",719],["T_VARIABLE","$clone",719],["T_OBJECT_OPERATOR","->",719],["T_STRING","resolved",719],";",["T_WHITESPACE","\n    ",719],"}",["T_WHITESPACE","\n\n    ",720],["T_DOC_COMMENT","\/**\n     * Returns the resolved value of an option.\n     *\n     * @param string $option The option name\n     *\n     * @return mixed The option value\n     *\n     * @throws AccessException           If accessing this method outside of\n     *                                   {@link resolve()}\n     * @throws NoSuchOptionException     If the option is not set\n     * @throws InvalidOptionsException   If the option doesn't fulfill the\n     *                                   specified validation rules\n     * @throws OptionDefinitionException If there is a cyclic dependency between\n     *                                   lazy options and\/or normalizers\n     *\/",722],["T_WHITESPACE","\n    ",736],["T_PUBLIC","public",737],["T_WHITESPACE"," ",737],["T_FUNCTION","function",737],["T_WHITESPACE"," ",737],["T_STRING","offsetGet",737],"(",["T_VARIABLE","$option",737],")",["T_WHITESPACE","\n    ",737],"{",["T_WHITESPACE","\n        ",738],["T_IF","if",739],["T_WHITESPACE"," ",739],"(","!",["T_VARIABLE","$this",739],["T_OBJECT_OPERATOR","->",739],["T_STRING","locked",739],")",["T_WHITESPACE"," ",739],"{",["T_WHITESPACE","\n            ",739],["T_THROW","throw",740],["T_WHITESPACE"," ",740],["T_NEW","new",740],["T_WHITESPACE"," ",740],["T_STRING","AccessException",740],"(",["T_CONSTANT_ENCAPSED_STRING","'Array access is only supported within closures of lazy options and normalizers.'",740],")",";",["T_WHITESPACE","\n        ",740],"}",["T_WHITESPACE","\n\n        ",741],["T_COMMENT","\/\/ Shortcut for resolved options\n",743],["T_WHITESPACE","        ",744],["T_IF","if",744],["T_WHITESPACE"," ",744],"(",["T_STRING","array_key_exists",744],"(",["T_VARIABLE","$option",744],",",["T_WHITESPACE"," ",744],["T_VARIABLE","$this",744],["T_OBJECT_OPERATOR","->",744],["T_STRING","resolved",744],")",")",["T_WHITESPACE"," ",744],"{",["T_WHITESPACE","\n            ",744],["T_RETURN","return",745],["T_WHITESPACE"," ",745],["T_VARIABLE","$this",745],["T_OBJECT_OPERATOR","->",745],["T_STRING","resolved",745],"[",["T_VARIABLE","$option",745],"]",";",["T_WHITESPACE","\n        ",745],"}",["T_WHITESPACE","\n\n        ",746],["T_COMMENT","\/\/ Check whether the option is set at all\n",748],["T_WHITESPACE","        ",749],["T_IF","if",749],["T_WHITESPACE"," ",749],"(","!",["T_STRING","array_key_exists",749],"(",["T_VARIABLE","$option",749],",",["T_WHITESPACE"," ",749],["T_VARIABLE","$this",749],["T_OBJECT_OPERATOR","->",749],["T_STRING","defaults",749],")",")",["T_WHITESPACE"," ",749],"{",["T_WHITESPACE","\n            ",749],["T_IF","if",750],["T_WHITESPACE"," ",750],"(","!",["T_ISSET","isset",750],"(",["T_VARIABLE","$this",750],["T_OBJECT_OPERATOR","->",750],["T_STRING","defined",750],"[",["T_VARIABLE","$option",750],"]",")",")",["T_WHITESPACE"," ",750],"{",["T_WHITESPACE","\n                ",750],["T_THROW","throw",751],["T_WHITESPACE"," ",751],["T_NEW","new",751],["T_WHITESPACE"," ",751],["T_STRING","NoSuchOptionException",751],"(",["T_STRING","sprintf",751],"(",["T_WHITESPACE","\n                    ",751],["T_CONSTANT_ENCAPSED_STRING","'The option \"%s\" does not exist. Defined options are: \"%s\".'",752],",",["T_WHITESPACE","\n                    ",752],["T_VARIABLE","$option",753],",",["T_WHITESPACE","\n                    ",753],["T_STRING","implode",754],"(",["T_CONSTANT_ENCAPSED_STRING","'\", \"'",754],",",["T_WHITESPACE"," ",754],["T_STRING","array_keys",754],"(",["T_VARIABLE","$this",754],["T_OBJECT_OPERATOR","->",754],["T_STRING","defined",754],")",")",["T_WHITESPACE","\n                ",754],")",")",";",["T_WHITESPACE","\n            ",755],"}",["T_WHITESPACE","\n\n            ",756],["T_THROW","throw",758],["T_WHITESPACE"," ",758],["T_NEW","new",758],["T_WHITESPACE"," ",758],["T_STRING","NoSuchOptionException",758],"(",["T_STRING","sprintf",758],"(",["T_WHITESPACE","\n                ",758],["T_CONSTANT_ENCAPSED_STRING","'The optional option \"%s\" has no value set. You should make sure it is set with \"isset\" before reading it.'",759],",",["T_WHITESPACE","\n                ",759],["T_VARIABLE","$option",760],["T_WHITESPACE","\n            ",760],")",")",";",["T_WHITESPACE","\n        ",761],"}",["T_WHITESPACE","\n\n        ",762],["T_VARIABLE","$value",764],["T_WHITESPACE"," ",764],"=",["T_WHITESPACE"," ",764],["T_VARIABLE","$this",764],["T_OBJECT_OPERATOR","->",764],["T_STRING","defaults",764],"[",["T_VARIABLE","$option",764],"]",";",["T_WHITESPACE","\n\n        ",764],["T_COMMENT","\/\/ Resolve the option if the default value is lazily evaluated\n",766],["T_WHITESPACE","        ",767],["T_IF","if",767],["T_WHITESPACE"," ",767],"(",["T_ISSET","isset",767],"(",["T_VARIABLE","$this",767],["T_OBJECT_OPERATOR","->",767],["T_STRING","lazy",767],"[",["T_VARIABLE","$option",767],"]",")",")",["T_WHITESPACE"," ",767],"{",["T_WHITESPACE","\n            ",767],["T_COMMENT","\/\/ If the closure is already being called, we have a cyclic\n",768],["T_WHITESPACE","            ",769],["T_COMMENT","\/\/ dependency\n",769],["T_WHITESPACE","            ",770],["T_IF","if",770],["T_WHITESPACE"," ",770],"(",["T_ISSET","isset",770],"(",["T_VARIABLE","$this",770],["T_OBJECT_OPERATOR","->",770],["T_STRING","calling",770],"[",["T_VARIABLE","$option",770],"]",")",")",["T_WHITESPACE"," ",770],"{",["T_WHITESPACE","\n                ",770],["T_THROW","throw",771],["T_WHITESPACE"," ",771],["T_NEW","new",771],["T_WHITESPACE"," ",771],["T_STRING","OptionDefinitionException",771],"(",["T_STRING","sprintf",771],"(",["T_WHITESPACE","\n                    ",771],["T_CONSTANT_ENCAPSED_STRING","'The options \"%s\" have a cyclic dependency.'",772],",",["T_WHITESPACE","\n                    ",772],["T_STRING","implode",773],"(",["T_CONSTANT_ENCAPSED_STRING","'\", \"'",773],",",["T_WHITESPACE"," ",773],["T_STRING","array_keys",773],"(",["T_VARIABLE","$this",773],["T_OBJECT_OPERATOR","->",773],["T_STRING","calling",773],")",")",["T_WHITESPACE","\n                ",773],")",")",";",["T_WHITESPACE","\n            ",774],"}",["T_WHITESPACE","\n\n            ",775],["T_COMMENT","\/\/ The following section must be protected from cyclic\n",777],["T_WHITESPACE","            ",778],["T_COMMENT","\/\/ calls. Set $calling for the current $option to detect a cyclic\n",778],["T_WHITESPACE","            ",779],["T_COMMENT","\/\/ dependency\n",779],["T_WHITESPACE","            ",780],["T_COMMENT","\/\/ BEGIN\n",780],["T_WHITESPACE","            ",781],["T_VARIABLE","$this",781],["T_OBJECT_OPERATOR","->",781],["T_STRING","calling",781],"[",["T_VARIABLE","$option",781],"]",["T_WHITESPACE"," ",781],"=",["T_WHITESPACE"," ",781],["T_STRING","true",781],";",["T_WHITESPACE","\n            ",781],["T_TRY","try",782],["T_WHITESPACE"," ",782],"{",["T_WHITESPACE","\n                ",782],["T_FOREACH","foreach",783],["T_WHITESPACE"," ",783],"(",["T_VARIABLE","$this",783],["T_OBJECT_OPERATOR","->",783],["T_STRING","lazy",783],"[",["T_VARIABLE","$option",783],"]",["T_WHITESPACE"," ",783],["T_AS","as",783],["T_WHITESPACE"," ",783],["T_VARIABLE","$closure",783],")",["T_WHITESPACE"," ",783],"{",["T_WHITESPACE","\n                    ",783],["T_VARIABLE","$value",784],["T_WHITESPACE"," ",784],"=",["T_WHITESPACE"," ",784],["T_VARIABLE","$closure",784],"(",["T_VARIABLE","$this",784],",",["T_WHITESPACE"," ",784],["T_VARIABLE","$value",784],")",";",["T_WHITESPACE","\n                ",784],"}",["T_WHITESPACE","\n            ",785],"}",["T_WHITESPACE"," ",786],["T_FINALLY","finally",786],["T_WHITESPACE"," ",786],"{",["T_WHITESPACE","\n                ",786],["T_UNSET","unset",787],"(",["T_VARIABLE","$this",787],["T_OBJECT_OPERATOR","->",787],["T_STRING","calling",787],"[",["T_VARIABLE","$option",787],"]",")",";",["T_WHITESPACE","\n            ",787],"}",["T_WHITESPACE","\n            ",788],["T_COMMENT","\/\/ END\n",789],["T_WHITESPACE","        ",790],"}",["T_WHITESPACE","\n\n        ",790],["T_COMMENT","\/\/ Validate the type of the resolved option\n",792],["T_WHITESPACE","        ",793],["T_IF","if",793],["T_WHITESPACE"," ",793],"(",["T_ISSET","isset",793],"(",["T_VARIABLE","$this",793],["T_OBJECT_OPERATOR","->",793],["T_STRING","allowedTypes",793],"[",["T_VARIABLE","$option",793],"]",")",")",["T_WHITESPACE"," ",793],"{",["T_WHITESPACE","\n            ",793],["T_VARIABLE","$valid",794],["T_WHITESPACE"," ",794],"=",["T_WHITESPACE"," ",794],["T_STRING","false",794],";",["T_WHITESPACE","\n\n            ",794],["T_FOREACH","foreach",796],["T_WHITESPACE"," ",796],"(",["T_VARIABLE","$this",796],["T_OBJECT_OPERATOR","->",796],["T_STRING","allowedTypes",796],"[",["T_VARIABLE","$option",796],"]",["T_WHITESPACE"," ",796],["T_AS","as",796],["T_WHITESPACE"," ",796],["T_VARIABLE","$type",796],")",["T_WHITESPACE"," ",796],"{",["T_WHITESPACE","\n                ",796],["T_VARIABLE","$type",797],["T_WHITESPACE"," ",797],"=",["T_WHITESPACE"," ",797],["T_ISSET","isset",797],"(",["T_STRING","self",797],["T_DOUBLE_COLON","::",797],["T_VARIABLE","$typeAliases",797],"[",["T_VARIABLE","$type",797],"]",")",["T_WHITESPACE"," ",797],"?",["T_WHITESPACE"," ",797],["T_STRING","self",797],["T_DOUBLE_COLON","::",797],["T_VARIABLE","$typeAliases",797],"[",["T_VARIABLE","$type",797],"]",["T_WHITESPACE"," ",797],":",["T_WHITESPACE"," ",797],["T_VARIABLE","$type",797],";",["T_WHITESPACE","\n\n                ",797],["T_IF","if",799],["T_WHITESPACE"," ",799],"(",["T_STRING","function_exists",799],"(",["T_VARIABLE","$isFunction",799],["T_WHITESPACE"," ",799],"=",["T_WHITESPACE"," ",799],["T_CONSTANT_ENCAPSED_STRING","'is_'",799],".",["T_VARIABLE","$type",799],")",")",["T_WHITESPACE"," ",799],"{",["T_WHITESPACE","\n                    ",799],["T_IF","if",800],["T_WHITESPACE"," ",800],"(",["T_VARIABLE","$isFunction",800],"(",["T_VARIABLE","$value",800],")",")",["T_WHITESPACE"," ",800],"{",["T_WHITESPACE","\n                        ",800],["T_VARIABLE","$valid",801],["T_WHITESPACE"," ",801],"=",["T_WHITESPACE"," ",801],["T_STRING","true",801],";",["T_WHITESPACE","\n                        ",801],["T_BREAK","break",802],";",["T_WHITESPACE","\n                    ",802],"}",["T_WHITESPACE","\n\n                    ",803],["T_CONTINUE","continue",805],";",["T_WHITESPACE","\n                ",805],"}",["T_WHITESPACE","\n\n                ",806],["T_IF","if",808],["T_WHITESPACE"," ",808],"(",["T_VARIABLE","$value",808],["T_WHITESPACE"," ",808],["T_INSTANCEOF","instanceof",808],["T_WHITESPACE"," ",808],["T_VARIABLE","$type",808],")",["T_WHITESPACE"," ",808],"{",["T_WHITESPACE","\n                    ",808],["T_VARIABLE","$valid",809],["T_WHITESPACE"," ",809],"=",["T_WHITESPACE"," ",809],["T_STRING","true",809],";",["T_WHITESPACE","\n                    ",809],["T_BREAK","break",810],";",["T_WHITESPACE","\n                ",810],"}",["T_WHITESPACE","\n            ",811],"}",["T_WHITESPACE","\n\n            ",812],["T_IF","if",814],["T_WHITESPACE"," ",814],"(","!",["T_VARIABLE","$valid",814],")",["T_WHITESPACE"," ",814],"{",["T_WHITESPACE","\n                ",814],["T_THROW","throw",815],["T_WHITESPACE"," ",815],["T_NEW","new",815],["T_WHITESPACE"," ",815],["T_STRING","InvalidOptionsException",815],"(",["T_STRING","sprintf",815],"(",["T_WHITESPACE","\n                    ",815],["T_CONSTANT_ENCAPSED_STRING","'The option \"%s\" with value %s is expected to be of type '",816],".",["T_WHITESPACE","\n                    ",816],["T_CONSTANT_ENCAPSED_STRING","'\"%s\", but is of type \"%s\".'",817],",",["T_WHITESPACE","\n                    ",817],["T_VARIABLE","$option",818],",",["T_WHITESPACE","\n                    ",818],["T_VARIABLE","$this",819],["T_OBJECT_OPERATOR","->",819],["T_STRING","formatValue",819],"(",["T_VARIABLE","$value",819],")",",",["T_WHITESPACE","\n                    ",819],["T_STRING","implode",820],"(",["T_CONSTANT_ENCAPSED_STRING","'\" or \"'",820],",",["T_WHITESPACE"," ",820],["T_VARIABLE","$this",820],["T_OBJECT_OPERATOR","->",820],["T_STRING","allowedTypes",820],"[",["T_VARIABLE","$option",820],"]",")",",",["T_WHITESPACE","\n                    ",820],["T_VARIABLE","$this",821],["T_OBJECT_OPERATOR","->",821],["T_STRING","formatTypeOf",821],"(",["T_VARIABLE","$value",821],")",["T_WHITESPACE","\n                ",821],")",")",";",["T_WHITESPACE","\n            ",822],"}",["T_WHITESPACE","\n        ",823],"}",["T_WHITESPACE","\n\n        ",824],["T_COMMENT","\/\/ Validate the value of the resolved option\n",826],["T_WHITESPACE","        ",827],["T_IF","if",827],["T_WHITESPACE"," ",827],"(",["T_ISSET","isset",827],"(",["T_VARIABLE","$this",827],["T_OBJECT_OPERATOR","->",827],["T_STRING","allowedValues",827],"[",["T_VARIABLE","$option",827],"]",")",")",["T_WHITESPACE"," ",827],"{",["T_WHITESPACE","\n            ",827],["T_VARIABLE","$success",828],["T_WHITESPACE"," ",828],"=",["T_WHITESPACE"," ",828],["T_STRING","false",828],";",["T_WHITESPACE","\n            ",828],["T_VARIABLE","$printableAllowedValues",829],["T_WHITESPACE"," ",829],"=",["T_WHITESPACE"," ",829],["T_ARRAY","array",829],"(",")",";",["T_WHITESPACE","\n\n            ",829],["T_FOREACH","foreach",831],["T_WHITESPACE"," ",831],"(",["T_VARIABLE","$this",831],["T_OBJECT_OPERATOR","->",831],["T_STRING","allowedValues",831],"[",["T_VARIABLE","$option",831],"]",["T_WHITESPACE"," ",831],["T_AS","as",831],["T_WHITESPACE"," ",831],["T_VARIABLE","$allowedValue",831],")",["T_WHITESPACE"," ",831],"{",["T_WHITESPACE","\n                ",831],["T_IF","if",832],["T_WHITESPACE"," ",832],"(",["T_VARIABLE","$allowedValue",832],["T_WHITESPACE"," ",832],["T_INSTANCEOF","instanceof",832],["T_WHITESPACE"," ",832],["T_NS_SEPARATOR","\\",832],["T_STRING","Closure",832],")",["T_WHITESPACE"," ",832],"{",["T_WHITESPACE","\n                    ",832],["T_IF","if",833],["T_WHITESPACE"," ",833],"(",["T_VARIABLE","$allowedValue",833],"(",["T_VARIABLE","$value",833],")",")",["T_WHITESPACE"," ",833],"{",["T_WHITESPACE","\n                        ",833],["T_VARIABLE","$success",834],["T_WHITESPACE"," ",834],"=",["T_WHITESPACE"," ",834],["T_STRING","true",834],";",["T_WHITESPACE","\n                        ",834],["T_BREAK","break",835],";",["T_WHITESPACE","\n                    ",835],"}",["T_WHITESPACE","\n\n                    ",836],["T_COMMENT","\/\/ Don't include closures in the exception message\n",838],["T_WHITESPACE","                    ",839],["T_CONTINUE","continue",839],";",["T_WHITESPACE","\n                ",839],"}",["T_WHITESPACE"," ",840],["T_ELSEIF","elseif",840],["T_WHITESPACE"," ",840],"(",["T_VARIABLE","$value",840],["T_WHITESPACE"," ",840],["T_IS_IDENTICAL","===",840],["T_WHITESPACE"," ",840],["T_VARIABLE","$allowedValue",840],")",["T_WHITESPACE"," ",840],"{",["T_WHITESPACE","\n                    ",840],["T_VARIABLE","$success",841],["T_WHITESPACE"," ",841],"=",["T_WHITESPACE"," ",841],["T_STRING","true",841],";",["T_WHITESPACE","\n                    ",841],["T_BREAK","break",842],";",["T_WHITESPACE","\n                ",842],"}",["T_WHITESPACE","\n\n                ",843],["T_VARIABLE","$printableAllowedValues",845],"[","]",["T_WHITESPACE"," ",845],"=",["T_WHITESPACE"," ",845],["T_VARIABLE","$allowedValue",845],";",["T_WHITESPACE","\n            ",845],"}",["T_WHITESPACE","\n\n            ",846],["T_IF","if",848],["T_WHITESPACE"," ",848],"(","!",["T_VARIABLE","$success",848],")",["T_WHITESPACE"," ",848],"{",["T_WHITESPACE","\n                ",848],["T_VARIABLE","$message",849],["T_WHITESPACE"," ",849],"=",["T_WHITESPACE"," ",849],["T_STRING","sprintf",849],"(",["T_WHITESPACE","\n                    ",849],["T_CONSTANT_ENCAPSED_STRING","'The option \"%s\" with value %s is invalid.'",850],",",["T_WHITESPACE","\n                    ",850],["T_VARIABLE","$option",851],",",["T_WHITESPACE","\n                    ",851],["T_VARIABLE","$this",852],["T_OBJECT_OPERATOR","->",852],["T_STRING","formatValue",852],"(",["T_VARIABLE","$value",852],")",["T_WHITESPACE","\n                ",852],")",";",["T_WHITESPACE","\n\n                ",853],["T_IF","if",855],["T_WHITESPACE"," ",855],"(",["T_STRING","count",855],"(",["T_VARIABLE","$printableAllowedValues",855],")",["T_WHITESPACE"," ",855],">",["T_WHITESPACE"," ",855],["T_LNUMBER","0",855],")",["T_WHITESPACE"," ",855],"{",["T_WHITESPACE","\n                    ",855],["T_VARIABLE","$message",856],["T_WHITESPACE"," ",856],["T_CONCAT_EQUAL",".=",856],["T_WHITESPACE"," ",856],["T_STRING","sprintf",856],"(",["T_WHITESPACE","\n                        ",856],["T_CONSTANT_ENCAPSED_STRING","' Accepted values are: %s.'",857],",",["T_WHITESPACE","\n                        ",857],["T_VARIABLE","$this",858],["T_OBJECT_OPERATOR","->",858],["T_STRING","formatValues",858],"(",["T_VARIABLE","$printableAllowedValues",858],")",["T_WHITESPACE","\n                    ",858],")",";",["T_WHITESPACE","\n                ",859],"}",["T_WHITESPACE","\n\n                ",860],["T_THROW","throw",862],["T_WHITESPACE"," ",862],["T_NEW","new",862],["T_WHITESPACE"," ",862],["T_STRING","InvalidOptionsException",862],"(",["T_VARIABLE","$message",862],")",";",["T_WHITESPACE","\n            ",862],"}",["T_WHITESPACE","\n        ",863],"}",["T_WHITESPACE","\n\n        ",864],["T_COMMENT","\/\/ Normalize the validated option\n",866],["T_WHITESPACE","        ",867],["T_IF","if",867],["T_WHITESPACE"," ",867],"(",["T_ISSET","isset",867],"(",["T_VARIABLE","$this",867],["T_OBJECT_OPERATOR","->",867],["T_STRING","normalizers",867],"[",["T_VARIABLE","$option",867],"]",")",")",["T_WHITESPACE"," ",867],"{",["T_WHITESPACE","\n            ",867],["T_COMMENT","\/\/ If the closure is already being called, we have a cyclic\n",868],["T_WHITESPACE","            ",869],["T_COMMENT","\/\/ dependency\n",869],["T_WHITESPACE","            ",870],["T_IF","if",870],["T_WHITESPACE"," ",870],"(",["T_ISSET","isset",870],"(",["T_VARIABLE","$this",870],["T_OBJECT_OPERATOR","->",870],["T_STRING","calling",870],"[",["T_VARIABLE","$option",870],"]",")",")",["T_WHITESPACE"," ",870],"{",["T_WHITESPACE","\n                ",870],["T_THROW","throw",871],["T_WHITESPACE"," ",871],["T_NEW","new",871],["T_WHITESPACE"," ",871],["T_STRING","OptionDefinitionException",871],"(",["T_STRING","sprintf",871],"(",["T_WHITESPACE","\n                    ",871],["T_CONSTANT_ENCAPSED_STRING","'The options \"%s\" have a cyclic dependency.'",872],",",["T_WHITESPACE","\n                    ",872],["T_STRING","implode",873],"(",["T_CONSTANT_ENCAPSED_STRING","'\", \"'",873],",",["T_WHITESPACE"," ",873],["T_STRING","array_keys",873],"(",["T_VARIABLE","$this",873],["T_OBJECT_OPERATOR","->",873],["T_STRING","calling",873],")",")",["T_WHITESPACE","\n                ",873],")",")",";",["T_WHITESPACE","\n            ",874],"}",["T_WHITESPACE","\n\n            ",875],["T_VARIABLE","$normalizer",877],["T_WHITESPACE"," ",877],"=",["T_WHITESPACE"," ",877],["T_VARIABLE","$this",877],["T_OBJECT_OPERATOR","->",877],["T_STRING","normalizers",877],"[",["T_VARIABLE","$option",877],"]",";",["T_WHITESPACE","\n\n            ",877],["T_COMMENT","\/\/ The following section must be protected from cyclic\n",879],["T_WHITESPACE","            ",880],["T_COMMENT","\/\/ calls. Set $calling for the current $option to detect a cyclic\n",880],["T_WHITESPACE","            ",881],["T_COMMENT","\/\/ dependency\n",881],["T_WHITESPACE","            ",882],["T_COMMENT","\/\/ BEGIN\n",882],["T_WHITESPACE","            ",883],["T_VARIABLE","$this",883],["T_OBJECT_OPERATOR","->",883],["T_STRING","calling",883],"[",["T_VARIABLE","$option",883],"]",["T_WHITESPACE"," ",883],"=",["T_WHITESPACE"," ",883],["T_STRING","true",883],";",["T_WHITESPACE","\n            ",883],["T_TRY","try",884],["T_WHITESPACE"," ",884],"{",["T_WHITESPACE","\n                ",884],["T_VARIABLE","$value",885],["T_WHITESPACE"," ",885],"=",["T_WHITESPACE"," ",885],["T_VARIABLE","$normalizer",885],"(",["T_VARIABLE","$this",885],",",["T_WHITESPACE"," ",885],["T_VARIABLE","$value",885],")",";",["T_WHITESPACE","\n            ",885],"}",["T_WHITESPACE"," ",886],["T_FINALLY","finally",886],["T_WHITESPACE"," ",886],"{",["T_WHITESPACE","\n                ",886],["T_UNSET","unset",887],"(",["T_VARIABLE","$this",887],["T_OBJECT_OPERATOR","->",887],["T_STRING","calling",887],"[",["T_VARIABLE","$option",887],"]",")",";",["T_WHITESPACE","\n            ",887],"}",["T_WHITESPACE","\n            ",888],["T_COMMENT","\/\/ END\n",889],["T_WHITESPACE","        ",890],"}",["T_WHITESPACE","\n\n        ",890],["T_COMMENT","\/\/ Mark as resolved\n",892],["T_WHITESPACE","        ",893],["T_VARIABLE","$this",893],["T_OBJECT_OPERATOR","->",893],["T_STRING","resolved",893],"[",["T_VARIABLE","$option",893],"]",["T_WHITESPACE"," ",893],"=",["T_WHITESPACE"," ",893],["T_VARIABLE","$value",893],";",["T_WHITESPACE","\n\n        ",893],["T_RETURN","return",895],["T_WHITESPACE"," ",895],["T_VARIABLE","$value",895],";",["T_WHITESPACE","\n    ",895],"}",["T_WHITESPACE","\n\n    ",896],["T_DOC_COMMENT","\/**\n     * Returns whether a resolved option with the given name exists.\n     *\n     * @param string $option The option name\n     *\n     * @return bool Whether the option is set\n     *\n     * @throws AccessException If accessing this method outside of {@link resolve()}\n     *\n     * @see \\ArrayAccess::offsetExists()\n     *\/",898],["T_WHITESPACE","\n    ",908],["T_PUBLIC","public",909],["T_WHITESPACE"," ",909],["T_FUNCTION","function",909],["T_WHITESPACE"," ",909],["T_STRING","offsetExists",909],"(",["T_VARIABLE","$option",909],")",["T_WHITESPACE","\n    ",909],"{",["T_WHITESPACE","\n        ",910],["T_IF","if",911],["T_WHITESPACE"," ",911],"(","!",["T_VARIABLE","$this",911],["T_OBJECT_OPERATOR","->",911],["T_STRING","locked",911],")",["T_WHITESPACE"," ",911],"{",["T_WHITESPACE","\n            ",911],["T_THROW","throw",912],["T_WHITESPACE"," ",912],["T_NEW","new",912],["T_WHITESPACE"," ",912],["T_STRING","AccessException",912],"(",["T_CONSTANT_ENCAPSED_STRING","'Array access is only supported within closures of lazy options and normalizers.'",912],")",";",["T_WHITESPACE","\n        ",912],"}",["T_WHITESPACE","\n\n        ",913],["T_RETURN","return",915],["T_WHITESPACE"," ",915],["T_STRING","array_key_exists",915],"(",["T_VARIABLE","$option",915],",",["T_WHITESPACE"," ",915],["T_VARIABLE","$this",915],["T_OBJECT_OPERATOR","->",915],["T_STRING","defaults",915],")",";",["T_WHITESPACE","\n    ",915],"}",["T_WHITESPACE","\n\n    ",916],["T_DOC_COMMENT","\/**\n     * Not supported.\n     *\n     * @throws AccessException\n     *\/",918],["T_WHITESPACE","\n    ",922],["T_PUBLIC","public",923],["T_WHITESPACE"," ",923],["T_FUNCTION","function",923],["T_WHITESPACE"," ",923],["T_STRING","offsetSet",923],"(",["T_VARIABLE","$option",923],",",["T_WHITESPACE"," ",923],["T_VARIABLE","$value",923],")",["T_WHITESPACE","\n    ",923],"{",["T_WHITESPACE","\n        ",924],["T_THROW","throw",925],["T_WHITESPACE"," ",925],["T_NEW","new",925],["T_WHITESPACE"," ",925],["T_STRING","AccessException",925],"(",["T_CONSTANT_ENCAPSED_STRING","'Setting options via array access is not supported. Use setDefault() instead.'",925],")",";",["T_WHITESPACE","\n    ",925],"}",["T_WHITESPACE","\n\n    ",926],["T_DOC_COMMENT","\/**\n     * Not supported.\n     *\n     * @throws AccessException\n     *\/",928],["T_WHITESPACE","\n    ",932],["T_PUBLIC","public",933],["T_WHITESPACE"," ",933],["T_FUNCTION","function",933],["T_WHITESPACE"," ",933],["T_STRING","offsetUnset",933],"(",["T_VARIABLE","$option",933],")",["T_WHITESPACE","\n    ",933],"{",["T_WHITESPACE","\n        ",934],["T_THROW","throw",935],["T_WHITESPACE"," ",935],["T_NEW","new",935],["T_WHITESPACE"," ",935],["T_STRING","AccessException",935],"(",["T_CONSTANT_ENCAPSED_STRING","'Removing options via array access is not supported. Use remove() instead.'",935],")",";",["T_WHITESPACE","\n    ",935],"}",["T_WHITESPACE","\n\n    ",936],["T_DOC_COMMENT","\/**\n     * Returns the number of set options.\n     *\n     * This may be only a subset of the defined options.\n     *\n     * @return int Number of options\n     *\n     * @throws AccessException If accessing this method outside of {@link resolve()}\n     *\n     * @see \\Countable::count()\n     *\/",938],["T_WHITESPACE","\n    ",948],["T_PUBLIC","public",949],["T_WHITESPACE"," ",949],["T_FUNCTION","function",949],["T_WHITESPACE"," ",949],["T_STRING","count",949],"(",")",["T_WHITESPACE","\n    ",949],"{",["T_WHITESPACE","\n        ",950],["T_IF","if",951],["T_WHITESPACE"," ",951],"(","!",["T_VARIABLE","$this",951],["T_OBJECT_OPERATOR","->",951],["T_STRING","locked",951],")",["T_WHITESPACE"," ",951],"{",["T_WHITESPACE","\n            ",951],["T_THROW","throw",952],["T_WHITESPACE"," ",952],["T_NEW","new",952],["T_WHITESPACE"," ",952],["T_STRING","AccessException",952],"(",["T_CONSTANT_ENCAPSED_STRING","'Counting is only supported within closures of lazy options and normalizers.'",952],")",";",["T_WHITESPACE","\n        ",952],"}",["T_WHITESPACE","\n\n        ",953],["T_RETURN","return",955],["T_WHITESPACE"," ",955],["T_STRING","count",955],"(",["T_VARIABLE","$this",955],["T_OBJECT_OPERATOR","->",955],["T_STRING","defaults",955],")",";",["T_WHITESPACE","\n    ",955],"}",["T_WHITESPACE","\n\n    ",956],["T_DOC_COMMENT","\/**\n     * Returns a string representation of the type of the value.\n     *\n     * This method should be used if you pass the type of a value as\n     * message parameter to a constraint violation. Note that such\n     * parameters should usually not be included in messages aimed at\n     * non-technical people.\n     *\n     * @param mixed $value The value to return the type of\n     *\n     * @return string The type of the value\n     *\/",958],["T_WHITESPACE","\n    ",969],["T_PRIVATE","private",970],["T_WHITESPACE"," ",970],["T_FUNCTION","function",970],["T_WHITESPACE"," ",970],["T_STRING","formatTypeOf",970],"(",["T_VARIABLE","$value",970],")",["T_WHITESPACE","\n    ",970],"{",["T_WHITESPACE","\n        ",971],["T_RETURN","return",972],["T_WHITESPACE"," ",972],["T_STRING","is_object",972],"(",["T_VARIABLE","$value",972],")",["T_WHITESPACE"," ",972],"?",["T_WHITESPACE"," ",972],["T_STRING","get_class",972],"(",["T_VARIABLE","$value",972],")",["T_WHITESPACE"," ",972],":",["T_WHITESPACE"," ",972],["T_STRING","gettype",972],"(",["T_VARIABLE","$value",972],")",";",["T_WHITESPACE","\n    ",972],"}",["T_WHITESPACE","\n\n    ",973],["T_DOC_COMMENT","\/**\n     * Returns a string representation of the value.\n     *\n     * This method returns the equivalent PHP tokens for most scalar types\n     * (i.e. \"false\" for false, \"1\" for 1 etc.). Strings are always wrapped\n     * in double quotes (\").\n     *\n     * @param mixed $value The value to format as string\n     *\n     * @return string The string representation of the passed value\n     *\/",975],["T_WHITESPACE","\n    ",985],["T_PRIVATE","private",986],["T_WHITESPACE"," ",986],["T_FUNCTION","function",986],["T_WHITESPACE"," ",986],["T_STRING","formatValue",986],"(",["T_VARIABLE","$value",986],")",["T_WHITESPACE","\n    ",986],"{",["T_WHITESPACE","\n        ",987],["T_IF","if",988],["T_WHITESPACE"," ",988],"(",["T_STRING","is_object",988],"(",["T_VARIABLE","$value",988],")",")",["T_WHITESPACE"," ",988],"{",["T_WHITESPACE","\n            ",988],["T_RETURN","return",989],["T_WHITESPACE"," ",989],["T_STRING","get_class",989],"(",["T_VARIABLE","$value",989],")",";",["T_WHITESPACE","\n        ",989],"}",["T_WHITESPACE","\n\n        ",990],["T_IF","if",992],["T_WHITESPACE"," ",992],"(",["T_STRING","is_array",992],"(",["T_VARIABLE","$value",992],")",")",["T_WHITESPACE"," ",992],"{",["T_WHITESPACE","\n            ",992],["T_RETURN","return",993],["T_WHITESPACE"," ",993],["T_CONSTANT_ENCAPSED_STRING","'array'",993],";",["T_WHITESPACE","\n        ",993],"}",["T_WHITESPACE","\n\n        ",994],["T_IF","if",996],["T_WHITESPACE"," ",996],"(",["T_STRING","is_string",996],"(",["T_VARIABLE","$value",996],")",")",["T_WHITESPACE"," ",996],"{",["T_WHITESPACE","\n            ",996],["T_RETURN","return",997],["T_WHITESPACE"," ",997],["T_CONSTANT_ENCAPSED_STRING","'\"'",997],".",["T_VARIABLE","$value",997],".",["T_CONSTANT_ENCAPSED_STRING","'\"'",997],";",["T_WHITESPACE","\n        ",997],"}",["T_WHITESPACE","\n\n        ",998],["T_IF","if",1000],["T_WHITESPACE"," ",1000],"(",["T_STRING","is_resource",1000],"(",["T_VARIABLE","$value",1000],")",")",["T_WHITESPACE"," ",1000],"{",["T_WHITESPACE","\n            ",1000],["T_RETURN","return",1001],["T_WHITESPACE"," ",1001],["T_CONSTANT_ENCAPSED_STRING","'resource'",1001],";",["T_WHITESPACE","\n        ",1001],"}",["T_WHITESPACE","\n\n        ",1002],["T_IF","if",1004],["T_WHITESPACE"," ",1004],"(",["T_STRING","null",1004],["T_WHITESPACE"," ",1004],["T_IS_IDENTICAL","===",1004],["T_WHITESPACE"," ",1004],["T_VARIABLE","$value",1004],")",["T_WHITESPACE"," ",1004],"{",["T_WHITESPACE","\n            ",1004],["T_RETURN","return",1005],["T_WHITESPACE"," ",1005],["T_CONSTANT_ENCAPSED_STRING","'null'",1005],";",["T_WHITESPACE","\n        ",1005],"}",["T_WHITESPACE","\n\n        ",1006],["T_IF","if",1008],["T_WHITESPACE"," ",1008],"(",["T_STRING","false",1008],["T_WHITESPACE"," ",1008],["T_IS_IDENTICAL","===",1008],["T_WHITESPACE"," ",1008],["T_VARIABLE","$value",1008],")",["T_WHITESPACE"," ",1008],"{",["T_WHITESPACE","\n            ",1008],["T_RETURN","return",1009],["T_WHITESPACE"," ",1009],["T_CONSTANT_ENCAPSED_STRING","'false'",1009],";",["T_WHITESPACE","\n        ",1009],"}",["T_WHITESPACE","\n\n        ",1010],["T_IF","if",1012],["T_WHITESPACE"," ",1012],"(",["T_STRING","true",1012],["T_WHITESPACE"," ",1012],["T_IS_IDENTICAL","===",1012],["T_WHITESPACE"," ",1012],["T_VARIABLE","$value",1012],")",["T_WHITESPACE"," ",1012],"{",["T_WHITESPACE","\n            ",1012],["T_RETURN","return",1013],["T_WHITESPACE"," ",1013],["T_CONSTANT_ENCAPSED_STRING","'true'",1013],";",["T_WHITESPACE","\n        ",1013],"}",["T_WHITESPACE","\n\n        ",1014],["T_RETURN","return",1016],["T_WHITESPACE"," ",1016],["T_STRING_CAST","(string)",1016],["T_WHITESPACE"," ",1016],["T_VARIABLE","$value",1016],";",["T_WHITESPACE","\n    ",1016],"}",["T_WHITESPACE","\n\n    ",1017],["T_DOC_COMMENT","\/**\n     * Returns a string representation of a list of values.\n     *\n     * Each of the values is converted to a string using\n     * {@link formatValue()}. The values are then concatenated with commas.\n     *\n     * @param array $values A list of values\n     *\n     * @return string The string representation of the value list\n     *\n     * @see formatValue()\n     *\/",1019],["T_WHITESPACE","\n    ",1030],["T_PRIVATE","private",1031],["T_WHITESPACE"," ",1031],["T_FUNCTION","function",1031],["T_WHITESPACE"," ",1031],["T_STRING","formatValues",1031],"(",["T_ARRAY","array",1031],["T_WHITESPACE"," ",1031],["T_VARIABLE","$values",1031],")",["T_WHITESPACE","\n    ",1031],"{",["T_WHITESPACE","\n        ",1032],["T_FOREACH","foreach",1033],["T_WHITESPACE"," ",1033],"(",["T_VARIABLE","$values",1033],["T_WHITESPACE"," ",1033],["T_AS","as",1033],["T_WHITESPACE"," ",1033],["T_VARIABLE","$key",1033],["T_WHITESPACE"," ",1033],["T_DOUBLE_ARROW","=>",1033],["T_WHITESPACE"," ",1033],["T_VARIABLE","$value",1033],")",["T_WHITESPACE"," ",1033],"{",["T_WHITESPACE","\n            ",1033],["T_VARIABLE","$values",1034],"[",["T_VARIABLE","$key",1034],"]",["T_WHITESPACE"," ",1034],"=",["T_WHITESPACE"," ",1034],["T_VARIABLE","$this",1034],["T_OBJECT_OPERATOR","->",1034],["T_STRING","formatValue",1034],"(",["T_VARIABLE","$value",1034],")",";",["T_WHITESPACE","\n        ",1034],"}",["T_WHITESPACE","\n\n        ",1035],["T_RETURN","return",1037],["T_WHITESPACE"," ",1037],["T_STRING","implode",1037],"(",["T_CONSTANT_ENCAPSED_STRING","', '",1037],",",["T_WHITESPACE"," ",1037],["T_VARIABLE","$values",1037],")",";",["T_WHITESPACE","\n    ",1037],"}",["T_WHITESPACE","\n",1038],"}",["T_WHITESPACE","\n",1039]]