[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_COMMENT","\/*\n * This file is part of the Symfony package.\n *\n * (c) Fabien Potencier <fabien@symfony.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\/",3],["T_WHITESPACE","\n\n",10],["T_NAMESPACE","namespace",12],["T_WHITESPACE"," ",12],["T_STRING","Symfony",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Component",12],["T_NS_SEPARATOR","\\",12],["T_STRING","OptionsResolver",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Exception",12],";",["T_WHITESPACE","\n\n",12],["T_DOC_COMMENT","\/**\n * Thrown when trying to read an option that has no value set.\n *\n * When accessing optional options from within a lazy option or normalizer you should first\n * check whether the optional option is set. You can do this with `isset($options['optional'])`.\n * In contrast to the {@link UndefinedOptionsException}, this is a runtime exception that can\n * occur when evaluating lazy options.\n *\n * @author Tobias Schultze <http:\/\/tobion.de>\n *\/",14],["T_WHITESPACE","\n",23],["T_CLASS","class",24],["T_WHITESPACE"," ",24],["T_STRING","NoSuchOptionException",24],["T_WHITESPACE"," ",24],["T_EXTENDS","extends",24],["T_WHITESPACE"," ",24],["T_NS_SEPARATOR","\\",24],["T_STRING","OutOfBoundsException",24],["T_WHITESPACE"," ",24],["T_IMPLEMENTS","implements",24],["T_WHITESPACE"," ",24],["T_STRING","ExceptionInterface",24],["T_WHITESPACE","\n",24],"{",["T_WHITESPACE","\n",25],"}",["T_WHITESPACE","\n",26]]