[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_COMMENT","\/*\n * This file is part of the Symfony package.\n *\n * (c) Fabien Potencier <fabien@symfony.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\/",3],["T_WHITESPACE","\n\n",10],["T_NAMESPACE","namespace",12],["T_WHITESPACE"," ",12],["T_STRING","Symfony",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Bridge",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Doctrine",12],";",["T_WHITESPACE","\n\n",12],["T_USE","use",14],["T_WHITESPACE"," ",14],["T_STRING","Doctrine",14],["T_NS_SEPARATOR","\\",14],["T_STRING","Common",14],["T_NS_SEPARATOR","\\",14],["T_STRING","Persistence",14],["T_NS_SEPARATOR","\\",14],["T_STRING","ManagerRegistry",14],["T_WHITESPACE"," ",14],["T_AS","as",14],["T_WHITESPACE"," ",14],["T_STRING","ManagerRegistryInterface",14],";",["T_WHITESPACE","\n",14],["T_USE","use",15],["T_WHITESPACE"," ",15],["T_STRING","Doctrine",15],["T_NS_SEPARATOR","\\",15],["T_STRING","ORM",15],["T_NS_SEPARATOR","\\",15],["T_STRING","EntityManager",15],";",["T_WHITESPACE","\n\n",15],["T_DOC_COMMENT","\/**\n * References Doctrine connections and entity managers.\n *\n * @author Fabien Potencier <fabien@symfony.com>\n *\/",17],["T_WHITESPACE","\n",21],["T_INTERFACE","interface",22],["T_WHITESPACE"," ",22],["T_STRING","RegistryInterface",22],["T_WHITESPACE"," ",22],["T_EXTENDS","extends",22],["T_WHITESPACE"," ",22],["T_STRING","ManagerRegistryInterface",22],["T_WHITESPACE","\n",22],"{",["T_WHITESPACE","\n    ",23],["T_DOC_COMMENT","\/**\n     * Gets the default entity manager name.\n     *\n     * @return string The default entity manager name\n     *\/",24],["T_WHITESPACE","\n    ",28],["T_PUBLIC","public",29],["T_WHITESPACE"," ",29],["T_FUNCTION","function",29],["T_WHITESPACE"," ",29],["T_STRING","getDefaultEntityManagerName",29],"(",")",";",["T_WHITESPACE","\n\n    ",29],["T_DOC_COMMENT","\/**\n     * Gets a named entity manager.\n     *\n     * @param string $name The entity manager name (null for the default one)\n     *\n     * @return EntityManager\n     *\/",31],["T_WHITESPACE","\n    ",37],["T_PUBLIC","public",38],["T_WHITESPACE"," ",38],["T_FUNCTION","function",38],["T_WHITESPACE"," ",38],["T_STRING","getEntityManager",38],"(",["T_VARIABLE","$name",38],["T_WHITESPACE"," ",38],"=",["T_WHITESPACE"," ",38],["T_STRING","null",38],")",";",["T_WHITESPACE","\n\n    ",38],["T_DOC_COMMENT","\/**\n     * Gets an array of all registered entity managers.\n     *\n     * @return array An array of EntityManager instances\n     *\/",40],["T_WHITESPACE","\n    ",44],["T_PUBLIC","public",45],["T_WHITESPACE"," ",45],["T_FUNCTION","function",45],["T_WHITESPACE"," ",45],["T_STRING","getEntityManagers",45],"(",")",";",["T_WHITESPACE","\n\n    ",45],["T_DOC_COMMENT","\/**\n     * Resets a named entity manager.\n     *\n     * This method is useful when an entity manager has been closed\n     * because of a rollbacked transaction AND when you think that\n     * it makes sense to get a new one to replace the closed one.\n     *\n     * Be warned that you will get a brand new entity manager as\n     * the existing one is not useable anymore. This means that any\n     * other object with a dependency on this entity manager will\n     * hold an obsolete reference. You can inject the registry instead\n     * to avoid this problem.\n     *\n     * @param string $name The entity manager name (null for the default one)\n     *\n     * @return EntityManager\n     *\/",47],["T_WHITESPACE","\n    ",63],["T_PUBLIC","public",64],["T_WHITESPACE"," ",64],["T_FUNCTION","function",64],["T_WHITESPACE"," ",64],["T_STRING","resetEntityManager",64],"(",["T_VARIABLE","$name",64],["T_WHITESPACE"," ",64],"=",["T_WHITESPACE"," ",64],["T_STRING","null",64],")",";",["T_WHITESPACE","\n\n    ",64],["T_DOC_COMMENT","\/**\n     * Resolves a registered namespace alias to the full namespace.\n     *\n     * This method looks for the alias in all registered entity managers.\n     *\n     * @param string $alias The alias\n     *\n     * @return string The full namespace\n     *\n     * @see Configuration::getEntityNamespace\n     *\/",66],["T_WHITESPACE","\n    ",76],["T_PUBLIC","public",77],["T_WHITESPACE"," ",77],["T_FUNCTION","function",77],["T_WHITESPACE"," ",77],["T_STRING","getEntityNamespace",77],"(",["T_VARIABLE","$alias",77],")",";",["T_WHITESPACE","\n\n    ",77],["T_DOC_COMMENT","\/**\n     * Gets all connection names.\n     *\n     * @return array An array of connection names\n     *\/",79],["T_WHITESPACE","\n    ",83],["T_PUBLIC","public",84],["T_WHITESPACE"," ",84],["T_FUNCTION","function",84],["T_WHITESPACE"," ",84],["T_STRING","getEntityManagerNames",84],"(",")",";",["T_WHITESPACE","\n\n    ",84],["T_DOC_COMMENT","\/**\n     * Gets the entity manager associated with a given class.\n     *\n     * @param string $class A Doctrine Entity class name\n     *\n     * @return EntityManager|null\n     *\/",86],["T_WHITESPACE","\n    ",92],["T_PUBLIC","public",93],["T_WHITESPACE"," ",93],["T_FUNCTION","function",93],["T_WHITESPACE"," ",93],["T_STRING","getEntityManagerForClass",93],"(",["T_VARIABLE","$class",93],")",";",["T_WHITESPACE","\n",93],"}",["T_WHITESPACE","\n",94]]