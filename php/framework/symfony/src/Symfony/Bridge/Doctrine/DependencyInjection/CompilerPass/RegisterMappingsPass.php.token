[["T_OPEN_TAG","<?php\n",1],["T_WHITESPACE","\n",2],["T_COMMENT","\/*\n * This file is part of the Symfony package.\n *\n * (c) Fabien Potencier <fabien@symfony.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\/",3],["T_WHITESPACE","\n\n",10],["T_NAMESPACE","namespace",12],["T_WHITESPACE"," ",12],["T_STRING","Symfony",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Bridge",12],["T_NS_SEPARATOR","\\",12],["T_STRING","Doctrine",12],["T_NS_SEPARATOR","\\",12],["T_STRING","DependencyInjection",12],["T_NS_SEPARATOR","\\",12],["T_STRING","CompilerPass",12],";",["T_WHITESPACE","\n\n",12],["T_USE","use",14],["T_WHITESPACE"," ",14],["T_STRING","Symfony",14],["T_NS_SEPARATOR","\\",14],["T_STRING","Component",14],["T_NS_SEPARATOR","\\",14],["T_STRING","DependencyInjection",14],["T_NS_SEPARATOR","\\",14],["T_STRING","ContainerBuilder",14],";",["T_WHITESPACE","\n",14],["T_USE","use",15],["T_WHITESPACE"," ",15],["T_STRING","Symfony",15],["T_NS_SEPARATOR","\\",15],["T_STRING","Component",15],["T_NS_SEPARATOR","\\",15],["T_STRING","DependencyInjection",15],["T_NS_SEPARATOR","\\",15],["T_STRING","Definition",15],";",["T_WHITESPACE","\n",15],["T_USE","use",16],["T_WHITESPACE"," ",16],["T_STRING","Symfony",16],["T_NS_SEPARATOR","\\",16],["T_STRING","Component",16],["T_NS_SEPARATOR","\\",16],["T_STRING","DependencyInjection",16],["T_NS_SEPARATOR","\\",16],["T_STRING","Reference",16],";",["T_WHITESPACE","\n",16],["T_USE","use",17],["T_WHITESPACE"," ",17],["T_STRING","Symfony",17],["T_NS_SEPARATOR","\\",17],["T_STRING","Component",17],["T_NS_SEPARATOR","\\",17],["T_STRING","DependencyInjection",17],["T_NS_SEPARATOR","\\",17],["T_STRING","Compiler",17],["T_NS_SEPARATOR","\\",17],["T_STRING","CompilerPassInterface",17],";",["T_WHITESPACE","\n",17],["T_USE","use",18],["T_WHITESPACE"," ",18],["T_STRING","Symfony",18],["T_NS_SEPARATOR","\\",18],["T_STRING","Component",18],["T_NS_SEPARATOR","\\",18],["T_STRING","DependencyInjection",18],["T_NS_SEPARATOR","\\",18],["T_STRING","Exception",18],["T_NS_SEPARATOR","\\",18],["T_STRING","InvalidArgumentException",18],";",["T_WHITESPACE","\n\n",18],["T_DOC_COMMENT","\/**\n * Base class for the doctrine bundles to provide a compiler pass class that\n * helps to register doctrine mappings.\n *\n * The compiler pass is meant to register the mappings with the metadata\n * chain driver corresponding to one of the object managers.\n *\n * For concrete implementations that are easy to use, see the\n * RegisterXyMappingsPass classes in the DoctrineBundle resp.\n * DoctrineMongodbBundle, DoctrineCouchdbBundle and DoctrinePhpcrBundle.\n *\n * @author David Buchmann <david@liip.ch>\n *\/",20],["T_WHITESPACE","\n",32],["T_ABSTRACT","abstract",33],["T_WHITESPACE"," ",33],["T_CLASS","class",33],["T_WHITESPACE"," ",33],["T_STRING","RegisterMappingsPass",33],["T_WHITESPACE"," ",33],["T_IMPLEMENTS","implements",33],["T_WHITESPACE"," ",33],["T_STRING","CompilerPassInterface",33],["T_WHITESPACE","\n",33],"{",["T_WHITESPACE","\n    ",34],["T_DOC_COMMENT","\/**\n     * DI object for the driver to use, either a service definition for a\n     * private service or a reference for a public service.\n     *\n     * @var Definition|Reference\n     *\/",35],["T_WHITESPACE","\n    ",40],["T_PROTECTED","protected",41],["T_WHITESPACE"," ",41],["T_VARIABLE","$driver",41],";",["T_WHITESPACE","\n\n    ",41],["T_DOC_COMMENT","\/**\n     * List of namespaces handled by the driver.\n     *\n     * @var string[]\n     *\/",43],["T_WHITESPACE","\n    ",47],["T_PROTECTED","protected",48],["T_WHITESPACE"," ",48],["T_VARIABLE","$namespaces",48],";",["T_WHITESPACE","\n\n    ",48],["T_DOC_COMMENT","\/**\n     * List of potential container parameters that hold the object manager name\n     * to register the mappings with the correct metadata driver, for example\n     * array('acme.manager', 'doctrine.default_entity_manager').\n     *\n     * @var string[]\n     *\/",50],["T_WHITESPACE","\n    ",56],["T_PROTECTED","protected",57],["T_WHITESPACE"," ",57],["T_VARIABLE","$managerParameters",57],";",["T_WHITESPACE","\n\n    ",57],["T_DOC_COMMENT","\/**\n     * Naming pattern of the metadata chain driver service ids, for example\n     * 'doctrine.orm.%s_metadata_driver'.\n     *\n     * @var string\n     *\/",59],["T_WHITESPACE","\n    ",64],["T_PROTECTED","protected",65],["T_WHITESPACE"," ",65],["T_VARIABLE","$driverPattern",65],";",["T_WHITESPACE","\n\n    ",65],["T_DOC_COMMENT","\/**\n     * A name for a parameter in the container. If set, this compiler pass will\n     * only do anything if the parameter is present. (But regardless of the\n     * value of that parameter.\n     *\n     * @var string\n     *\/",67],["T_WHITESPACE","\n    ",73],["T_PROTECTED","protected",74],["T_WHITESPACE"," ",74],["T_VARIABLE","$enabledParameter",74],";",["T_WHITESPACE","\n\n    ",74],["T_DOC_COMMENT","\/**\n     * Naming pattern for the configuration service id, for example\n     * 'doctrine.orm.%s_configuration'.\n     *\n     * @var string\n     *\/",76],["T_WHITESPACE","\n    ",81],["T_PRIVATE","private",82],["T_WHITESPACE"," ",82],["T_VARIABLE","$configurationPattern",82],";",["T_WHITESPACE","\n\n    ",82],["T_DOC_COMMENT","\/**\n     * Method name to call on the configuration service. This depends on the\n     * Doctrine implementation. For example addEntityNamespace.\n     *\n     * @var string\n     *\/",84],["T_WHITESPACE","\n    ",89],["T_PRIVATE","private",90],["T_WHITESPACE"," ",90],["T_VARIABLE","$registerAliasMethodName",90],";",["T_WHITESPACE","\n\n    ",90],["T_DOC_COMMENT","\/**\n     * Map of alias to namespace.\n     *\n     * @var string[]\n     *\/",92],["T_WHITESPACE","\n    ",96],["T_PRIVATE","private",97],["T_WHITESPACE"," ",97],["T_VARIABLE","$aliasMap",97],";",["T_WHITESPACE","\n\n    ",97],["T_DOC_COMMENT","\/**\n     * Constructor.\n     *\n     * The $managerParameters is an ordered list of container parameters that could provide the\n     * name of the manager to register these namespaces and alias on. The first non-empty name\n     * is used, the others skipped.\n     *\n     * The $aliasMap parameter can be used to define bundle namespace shortcuts like the\n     * DoctrineBundle provides automatically for objects in the default Entity\/Document folder.\n     *\n     * @param Definition|Reference $driver                  Driver DI definition or reference\n     * @param string[]             $namespaces              List of namespaces handled by $driver\n     * @param string[]             $managerParameters       List of container parameters that could\n     *                                                      hold the manager name.\n     * @param string               $driverPattern           Pattern for the metadata driver service name\n     * @param string|false         $enabledParameter        Service container parameter that must be\n     *                                                      present to enable the mapping. Set to false\n     *                                                      to not do any check, optional.\n     * @param string               $configurationPattern    Pattern for the Configuration service name\n     * @param string               $registerAliasMethodName Name of Configuration class method to\n     *                                                      register alias.\n     * @param string[]             $aliasMap                Map of alias to namespace\n     *\/",99],["T_WHITESPACE","\n    ",121],["T_PUBLIC","public",122],["T_WHITESPACE"," ",122],["T_FUNCTION","function",122],["T_WHITESPACE"," ",122],["T_STRING","__construct",122],"(",["T_VARIABLE","$driver",122],",",["T_WHITESPACE"," ",122],["T_ARRAY","array",122],["T_WHITESPACE"," ",122],["T_VARIABLE","$namespaces",122],",",["T_WHITESPACE"," ",122],["T_ARRAY","array",122],["T_WHITESPACE"," ",122],["T_VARIABLE","$managerParameters",122],",",["T_WHITESPACE"," ",122],["T_VARIABLE","$driverPattern",122],",",["T_WHITESPACE"," ",122],["T_VARIABLE","$enabledParameter",122],["T_WHITESPACE"," ",122],"=",["T_WHITESPACE"," ",122],["T_STRING","false",122],",",["T_WHITESPACE"," ",122],["T_VARIABLE","$configurationPattern",122],["T_WHITESPACE"," ",122],"=",["T_WHITESPACE"," ",122],["T_CONSTANT_ENCAPSED_STRING","''",122],",",["T_WHITESPACE"," ",122],["T_VARIABLE","$registerAliasMethodName",122],["T_WHITESPACE"," ",122],"=",["T_WHITESPACE"," ",122],["T_CONSTANT_ENCAPSED_STRING","''",122],",",["T_WHITESPACE"," ",122],["T_ARRAY","array",122],["T_WHITESPACE"," ",122],["T_VARIABLE","$aliasMap",122],["T_WHITESPACE"," ",122],"=",["T_WHITESPACE"," ",122],["T_ARRAY","array",122],"(",")",")",["T_WHITESPACE","\n    ",122],"{",["T_WHITESPACE","\n        ",123],["T_VARIABLE","$this",124],["T_OBJECT_OPERATOR","->",124],["T_STRING","driver",124],["T_WHITESPACE"," ",124],"=",["T_WHITESPACE"," ",124],["T_VARIABLE","$driver",124],";",["T_WHITESPACE","\n        ",124],["T_VARIABLE","$this",125],["T_OBJECT_OPERATOR","->",125],["T_STRING","namespaces",125],["T_WHITESPACE"," ",125],"=",["T_WHITESPACE"," ",125],["T_VARIABLE","$namespaces",125],";",["T_WHITESPACE","\n        ",125],["T_VARIABLE","$this",126],["T_OBJECT_OPERATOR","->",126],["T_STRING","managerParameters",126],["T_WHITESPACE"," ",126],"=",["T_WHITESPACE"," ",126],["T_VARIABLE","$managerParameters",126],";",["T_WHITESPACE","\n        ",126],["T_VARIABLE","$this",127],["T_OBJECT_OPERATOR","->",127],["T_STRING","driverPattern",127],["T_WHITESPACE"," ",127],"=",["T_WHITESPACE"," ",127],["T_VARIABLE","$driverPattern",127],";",["T_WHITESPACE","\n        ",127],["T_VARIABLE","$this",128],["T_OBJECT_OPERATOR","->",128],["T_STRING","enabledParameter",128],["T_WHITESPACE"," ",128],"=",["T_WHITESPACE"," ",128],["T_VARIABLE","$enabledParameter",128],";",["T_WHITESPACE","\n        ",128],["T_IF","if",129],["T_WHITESPACE"," ",129],"(",["T_STRING","count",129],"(",["T_VARIABLE","$aliasMap",129],")",["T_WHITESPACE"," ",129],["T_BOOLEAN_AND","&&",129],["T_WHITESPACE"," ",129],"(","!",["T_VARIABLE","$configurationPattern",129],["T_WHITESPACE"," ",129],["T_BOOLEAN_OR","||",129],["T_WHITESPACE"," ",129],"!",["T_VARIABLE","$registerAliasMethodName",129],")",")",["T_WHITESPACE"," ",129],"{",["T_WHITESPACE","\n            ",129],["T_THROW","throw",130],["T_WHITESPACE"," ",130],["T_NEW","new",130],["T_WHITESPACE"," ",130],["T_NS_SEPARATOR","\\",130],["T_STRING","InvalidArgumentException",130],"(",["T_CONSTANT_ENCAPSED_STRING","'configurationPattern and registerAliasMethodName are required to register namespace alias'",130],")",";",["T_WHITESPACE","\n        ",130],"}",["T_WHITESPACE","\n        ",131],["T_VARIABLE","$this",132],["T_OBJECT_OPERATOR","->",132],["T_STRING","configurationPattern",132],["T_WHITESPACE"," ",132],"=",["T_WHITESPACE"," ",132],["T_VARIABLE","$configurationPattern",132],";",["T_WHITESPACE","\n        ",132],["T_VARIABLE","$this",133],["T_OBJECT_OPERATOR","->",133],["T_STRING","registerAliasMethodName",133],["T_WHITESPACE"," ",133],"=",["T_WHITESPACE"," ",133],["T_VARIABLE","$registerAliasMethodName",133],";",["T_WHITESPACE","\n        ",133],["T_VARIABLE","$this",134],["T_OBJECT_OPERATOR","->",134],["T_STRING","aliasMap",134],["T_WHITESPACE"," ",134],"=",["T_WHITESPACE"," ",134],["T_VARIABLE","$aliasMap",134],";",["T_WHITESPACE","\n    ",134],"}",["T_WHITESPACE","\n\n    ",135],["T_DOC_COMMENT","\/**\n     * Register mappings and alias with the metadata drivers.\n     *\n     * @param ContainerBuilder $container\n     *\/",137],["T_WHITESPACE","\n    ",141],["T_PUBLIC","public",142],["T_WHITESPACE"," ",142],["T_FUNCTION","function",142],["T_WHITESPACE"," ",142],["T_STRING","process",142],"(",["T_STRING","ContainerBuilder",142],["T_WHITESPACE"," ",142],["T_VARIABLE","$container",142],")",["T_WHITESPACE","\n    ",142],"{",["T_WHITESPACE","\n        ",143],["T_IF","if",144],["T_WHITESPACE"," ",144],"(","!",["T_VARIABLE","$this",144],["T_OBJECT_OPERATOR","->",144],["T_STRING","enabled",144],"(",["T_VARIABLE","$container",144],")",")",["T_WHITESPACE"," ",144],"{",["T_WHITESPACE","\n            ",144],["T_RETURN","return",145],";",["T_WHITESPACE","\n        ",145],"}",["T_WHITESPACE","\n\n        ",146],["T_VARIABLE","$mappingDriverDef",148],["T_WHITESPACE"," ",148],"=",["T_WHITESPACE"," ",148],["T_VARIABLE","$this",148],["T_OBJECT_OPERATOR","->",148],["T_STRING","getDriver",148],"(",["T_VARIABLE","$container",148],")",";",["T_WHITESPACE","\n        ",148],["T_VARIABLE","$chainDriverDefService",149],["T_WHITESPACE"," ",149],"=",["T_WHITESPACE"," ",149],["T_VARIABLE","$this",149],["T_OBJECT_OPERATOR","->",149],["T_STRING","getChainDriverServiceName",149],"(",["T_VARIABLE","$container",149],")",";",["T_WHITESPACE","\n        ",149],["T_COMMENT","\/\/ Definition for a Doctrine\\Common\\Persistence\\Mapping\\Driver\\MappingDriverChain\n",150],["T_WHITESPACE","        ",151],["T_VARIABLE","$chainDriverDef",151],["T_WHITESPACE"," ",151],"=",["T_WHITESPACE"," ",151],["T_VARIABLE","$container",151],["T_OBJECT_OPERATOR","->",151],["T_STRING","getDefinition",151],"(",["T_VARIABLE","$chainDriverDefService",151],")",";",["T_WHITESPACE","\n        ",151],["T_FOREACH","foreach",152],["T_WHITESPACE"," ",152],"(",["T_VARIABLE","$this",152],["T_OBJECT_OPERATOR","->",152],["T_STRING","namespaces",152],["T_WHITESPACE"," ",152],["T_AS","as",152],["T_WHITESPACE"," ",152],["T_VARIABLE","$namespace",152],")",["T_WHITESPACE"," ",152],"{",["T_WHITESPACE","\n            ",152],["T_VARIABLE","$chainDriverDef",153],["T_OBJECT_OPERATOR","->",153],["T_STRING","addMethodCall",153],"(",["T_CONSTANT_ENCAPSED_STRING","'addDriver'",153],",",["T_WHITESPACE"," ",153],["T_ARRAY","array",153],"(",["T_VARIABLE","$mappingDriverDef",153],",",["T_WHITESPACE"," ",153],["T_VARIABLE","$namespace",153],")",")",";",["T_WHITESPACE","\n        ",153],"}",["T_WHITESPACE","\n\n        ",154],["T_IF","if",156],["T_WHITESPACE"," ",156],"(","!",["T_STRING","count",156],"(",["T_VARIABLE","$this",156],["T_OBJECT_OPERATOR","->",156],["T_STRING","aliasMap",156],")",")",["T_WHITESPACE"," ",156],"{",["T_WHITESPACE","\n            ",156],["T_RETURN","return",157],";",["T_WHITESPACE","\n        ",157],"}",["T_WHITESPACE","\n\n        ",158],["T_VARIABLE","$configurationServiceName",160],["T_WHITESPACE"," ",160],"=",["T_WHITESPACE"," ",160],["T_VARIABLE","$this",160],["T_OBJECT_OPERATOR","->",160],["T_STRING","getConfigurationServiceName",160],"(",["T_VARIABLE","$container",160],")",";",["T_WHITESPACE","\n        ",160],["T_COMMENT","\/\/ Definition of the Doctrine\\...\\Configuration class specific to the Doctrine flavour.\n",161],["T_WHITESPACE","        ",162],["T_VARIABLE","$configurationServiceDefinition",162],["T_WHITESPACE"," ",162],"=",["T_WHITESPACE"," ",162],["T_VARIABLE","$container",162],["T_OBJECT_OPERATOR","->",162],["T_STRING","getDefinition",162],"(",["T_VARIABLE","$configurationServiceName",162],")",";",["T_WHITESPACE","\n        ",162],["T_FOREACH","foreach",163],["T_WHITESPACE"," ",163],"(",["T_VARIABLE","$this",163],["T_OBJECT_OPERATOR","->",163],["T_STRING","aliasMap",163],["T_WHITESPACE"," ",163],["T_AS","as",163],["T_WHITESPACE"," ",163],["T_VARIABLE","$alias",163],["T_WHITESPACE"," ",163],["T_DOUBLE_ARROW","=>",163],["T_WHITESPACE"," ",163],["T_VARIABLE","$namespace",163],")",["T_WHITESPACE"," ",163],"{",["T_WHITESPACE","\n            ",163],["T_VARIABLE","$configurationServiceDefinition",164],["T_OBJECT_OPERATOR","->",164],["T_STRING","addMethodCall",164],"(",["T_VARIABLE","$this",164],["T_OBJECT_OPERATOR","->",164],["T_STRING","registerAliasMethodName",164],",",["T_WHITESPACE"," ",164],["T_ARRAY","array",164],"(",["T_VARIABLE","$alias",164],",",["T_WHITESPACE"," ",164],["T_VARIABLE","$namespace",164],")",")",";",["T_WHITESPACE","\n        ",164],"}",["T_WHITESPACE","\n    ",165],"}",["T_WHITESPACE","\n\n    ",166],["T_DOC_COMMENT","\/**\n     * Get the service name of the metadata chain driver that the mappings\n     * should be registered with.\n     *\n     * @param ContainerBuilder $container\n     *\n     * @return string The name of the chain driver service\n     *\n     * @throws InvalidArgumentException if non of the managerParameters has a\n     *                                  non-empty value.\n     *\/",168],["T_WHITESPACE","\n    ",178],["T_PROTECTED","protected",179],["T_WHITESPACE"," ",179],["T_FUNCTION","function",179],["T_WHITESPACE"," ",179],["T_STRING","getChainDriverServiceName",179],"(",["T_STRING","ContainerBuilder",179],["T_WHITESPACE"," ",179],["T_VARIABLE","$container",179],")",["T_WHITESPACE","\n    ",179],"{",["T_WHITESPACE","\n        ",180],["T_RETURN","return",181],["T_WHITESPACE"," ",181],["T_STRING","sprintf",181],"(",["T_VARIABLE","$this",181],["T_OBJECT_OPERATOR","->",181],["T_STRING","driverPattern",181],",",["T_WHITESPACE"," ",181],["T_VARIABLE","$this",181],["T_OBJECT_OPERATOR","->",181],["T_STRING","getManagerName",181],"(",["T_VARIABLE","$container",181],")",")",";",["T_WHITESPACE","\n    ",181],"}",["T_WHITESPACE","\n\n    ",182],["T_DOC_COMMENT","\/**\n     * Create the service definition for the metadata driver.\n     *\n     * @param ContainerBuilder $container passed on in case an extending class\n     *                                    needs access to the container.\n     *\n     * @return Definition|Reference the metadata driver to add to all chain drivers\n     *\/",184],["T_WHITESPACE","\n    ",191],["T_PROTECTED","protected",192],["T_WHITESPACE"," ",192],["T_FUNCTION","function",192],["T_WHITESPACE"," ",192],["T_STRING","getDriver",192],"(",["T_STRING","ContainerBuilder",192],["T_WHITESPACE"," ",192],["T_VARIABLE","$container",192],")",["T_WHITESPACE","\n    ",192],"{",["T_WHITESPACE","\n        ",193],["T_RETURN","return",194],["T_WHITESPACE"," ",194],["T_VARIABLE","$this",194],["T_OBJECT_OPERATOR","->",194],["T_STRING","driver",194],";",["T_WHITESPACE","\n    ",194],"}",["T_WHITESPACE","\n\n    ",195],["T_DOC_COMMENT","\/**\n     * Get the service name from the pattern and the configured manager name.\n     *\n     * @param ContainerBuilder $container\n     *\n     * @return string a service definition name\n     *\n     * @throws InvalidArgumentException if none of the managerParameters has a\n     *                                  non-empty value.\n     *\/",197],["T_WHITESPACE","\n    ",206],["T_PRIVATE","private",207],["T_WHITESPACE"," ",207],["T_FUNCTION","function",207],["T_WHITESPACE"," ",207],["T_STRING","getConfigurationServiceName",207],"(",["T_STRING","ContainerBuilder",207],["T_WHITESPACE"," ",207],["T_VARIABLE","$container",207],")",["T_WHITESPACE","\n    ",207],"{",["T_WHITESPACE","\n        ",208],["T_RETURN","return",209],["T_WHITESPACE"," ",209],["T_STRING","sprintf",209],"(",["T_VARIABLE","$this",209],["T_OBJECT_OPERATOR","->",209],["T_STRING","configurationPattern",209],",",["T_WHITESPACE"," ",209],["T_VARIABLE","$this",209],["T_OBJECT_OPERATOR","->",209],["T_STRING","getManagerName",209],"(",["T_VARIABLE","$container",209],")",")",";",["T_WHITESPACE","\n    ",209],"}",["T_WHITESPACE","\n\n    ",210],["T_DOC_COMMENT","\/**\n     * Determine the manager name.\n     *\n     * The default implementation loops over the managerParameters and returns\n     * the first non-empty parameter.\n     *\n     * @param ContainerBuilder $container\n     *\n     * @return string The name of the active manager\n     *\n     * @throws InvalidArgumentException If none of the managerParameters is found in the container.\n     *\/",212],["T_WHITESPACE","\n    ",223],["T_PRIVATE","private",224],["T_WHITESPACE"," ",224],["T_FUNCTION","function",224],["T_WHITESPACE"," ",224],["T_STRING","getManagerName",224],"(",["T_STRING","ContainerBuilder",224],["T_WHITESPACE"," ",224],["T_VARIABLE","$container",224],")",["T_WHITESPACE","\n    ",224],"{",["T_WHITESPACE","\n        ",225],["T_FOREACH","foreach",226],["T_WHITESPACE"," ",226],"(",["T_VARIABLE","$this",226],["T_OBJECT_OPERATOR","->",226],["T_STRING","managerParameters",226],["T_WHITESPACE"," ",226],["T_AS","as",226],["T_WHITESPACE"," ",226],["T_VARIABLE","$param",226],")",["T_WHITESPACE"," ",226],"{",["T_WHITESPACE","\n            ",226],["T_IF","if",227],["T_WHITESPACE"," ",227],"(",["T_VARIABLE","$container",227],["T_OBJECT_OPERATOR","->",227],["T_STRING","hasParameter",227],"(",["T_VARIABLE","$param",227],")",")",["T_WHITESPACE"," ",227],"{",["T_WHITESPACE","\n                ",227],["T_VARIABLE","$name",228],["T_WHITESPACE"," ",228],"=",["T_WHITESPACE"," ",228],["T_VARIABLE","$container",228],["T_OBJECT_OPERATOR","->",228],["T_STRING","getParameter",228],"(",["T_VARIABLE","$param",228],")",";",["T_WHITESPACE","\n                ",228],["T_IF","if",229],["T_WHITESPACE"," ",229],"(",["T_VARIABLE","$name",229],")",["T_WHITESPACE"," ",229],"{",["T_WHITESPACE","\n                    ",229],["T_RETURN","return",230],["T_WHITESPACE"," ",230],["T_VARIABLE","$name",230],";",["T_WHITESPACE","\n                ",230],"}",["T_WHITESPACE","\n            ",231],"}",["T_WHITESPACE","\n        ",232],"}",["T_WHITESPACE","\n\n        ",233],["T_THROW","throw",235],["T_WHITESPACE"," ",235],["T_NEW","new",235],["T_WHITESPACE"," ",235],["T_STRING","InvalidArgumentException",235],"(",["T_STRING","sprintf",235],"(",["T_WHITESPACE","\n            ",235],["T_CONSTANT_ENCAPSED_STRING","'Could not find the manager name parameter in the container. Tried the following parameter names: \"%s\"'",236],",",["T_WHITESPACE","\n            ",236],["T_STRING","implode",237],"(",["T_CONSTANT_ENCAPSED_STRING","'\", \"'",237],",",["T_WHITESPACE"," ",237],["T_VARIABLE","$this",237],["T_OBJECT_OPERATOR","->",237],["T_STRING","managerParameters",237],")",["T_WHITESPACE","\n        ",237],")",")",";",["T_WHITESPACE","\n    ",238],"}",["T_WHITESPACE","\n\n    ",239],["T_DOC_COMMENT","\/**\n     * Determine whether this mapping should be activated or not. This allows\n     * to take this decision with the container builder available.\n     *\n     * This default implementation checks if the class has the enabledParameter\n     * configured and if so if that parameter is present in the container.\n     *\n     * @param ContainerBuilder $container\n     *\n     * @return bool whether this compiler pass really should register the mappings\n     *\/",241],["T_WHITESPACE","\n    ",251],["T_PROTECTED","protected",252],["T_WHITESPACE"," ",252],["T_FUNCTION","function",252],["T_WHITESPACE"," ",252],["T_STRING","enabled",252],"(",["T_STRING","ContainerBuilder",252],["T_WHITESPACE"," ",252],["T_VARIABLE","$container",252],")",["T_WHITESPACE","\n    ",252],"{",["T_WHITESPACE","\n        ",253],["T_RETURN","return",254],["T_WHITESPACE"," ",254],"!",["T_VARIABLE","$this",254],["T_OBJECT_OPERATOR","->",254],["T_STRING","enabledParameter",254],["T_WHITESPACE"," ",254],["T_BOOLEAN_OR","||",254],["T_WHITESPACE"," ",254],["T_VARIABLE","$container",254],["T_OBJECT_OPERATOR","->",254],["T_STRING","hasParameter",254],"(",["T_VARIABLE","$this",254],["T_OBJECT_OPERATOR","->",254],["T_STRING","enabledParameter",254],")",";",["T_WHITESPACE","\n    ",254],"}",["T_WHITESPACE","\n",255],"}",["T_WHITESPACE","\n",256]]