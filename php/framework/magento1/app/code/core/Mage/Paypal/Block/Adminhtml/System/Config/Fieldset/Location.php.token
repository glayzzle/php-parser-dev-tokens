[["T_OPEN_TAG","<?php\n",1],["T_DOC_COMMENT","\/**\n * Magento\n *\n * NOTICE OF LICENSE\n *\n * This source file is subject to the Open Software License (OSL 3.0)\n * that is bundled with this package in the file LICENSE.txt.\n * It is also available through the world-wide-web at this URL:\n * http:\/\/opensource.org\/licenses\/osl-3.0.php\n * If you did not receive a copy of the license and are unable to\n * obtain it through the world-wide-web, please send an email\n * to license@magento.com so we can send you a copy immediately.\n *\n * DISCLAIMER\n *\n * Do not edit or add to this file if you wish to upgrade Magento to newer\n * versions in the future. If you wish to customize Magento for your\n * needs please refer to http:\/\/www.magento.com for more information.\n *\n * @category    Mage\n * @package     Mage_Paypal\n * @copyright  Copyright (c) 2006-2016 X.commerce, Inc. and affiliates (http:\/\/www.magento.com)\n * @license    http:\/\/opensource.org\/licenses\/osl-3.0.php  Open Software License (OSL 3.0)\n *\/",2],["T_WHITESPACE","\n\n",25],["T_DOC_COMMENT","\/**\n * Fieldset renderer for PayPal Merchant Location fieldset\n *\n * @category    Mage\n * @package     Mage_Paypal\n * @author      Magento Core Team <core@magentocommerce.com>\n *\/",27],["T_WHITESPACE","\n",33],["T_CLASS","class",34],["T_WHITESPACE"," ",34],["T_STRING","Mage_Paypal_Block_Adminhtml_System_Config_Fieldset_Location",34],["T_WHITESPACE","\n    ",34],["T_EXTENDS","extends",35],["T_WHITESPACE"," ",35],["T_STRING","Mage_Adminhtml_Block_System_Config_Form_Fieldset",35],["T_WHITESPACE","\n",35],"{",["T_WHITESPACE","\n    ",36],["T_DOC_COMMENT","\/**\n     * Add conflicts resolution js code to the fieldset\n     *\n     * @param Varien_Data_Form_Element_Abstract $element\n     * @param bool $tooltipsExist Init tooltips observer or not\n     * @return string\n     *\/",37],["T_WHITESPACE","\n    ",43],["T_PROTECTED","protected",44],["T_WHITESPACE"," ",44],["T_FUNCTION","function",44],["T_WHITESPACE"," ",44],["T_STRING","_getExtraJs",44],"(",["T_VARIABLE","$element",44],",",["T_WHITESPACE"," ",44],["T_VARIABLE","$tooltipsExist",44],["T_WHITESPACE"," ",44],"=",["T_WHITESPACE"," ",44],["T_STRING","false",44],")",["T_WHITESPACE","\n    ",44],"{",["T_WHITESPACE","\n        ",45],["T_VARIABLE","$js",46],["T_WHITESPACE"," ",46],"=",["T_WHITESPACE"," ",46],["T_CONSTANT_ENCAPSED_STRING","'\n            document.observe(\"dom:loaded\", function() {\n                $$(\".with-button button.button\").each(function(configureButton) {\n                    togglePaypalSolutionConfigureButton(configureButton, true);\n                });\n                var paypalConflictsObject = {\n                    \"isConflict\": false,\n                    \"ecMissed\": false,\n                    sharePayflowEnabling: function(enabler, isEvent) {\n                        var ecPayflowEnabler = $$(\".paypal-ec-payflow-enabler\")[0];\n                        if (typeof ecPayflowEnabler == \"undefined\") {\n                            return;\n                        }\n                        var ecPayflowScopeElement = adminSystemConfig.getScopeElement(ecPayflowEnabler);\n\n                        if (!enabler.enablerObject.ecPayflow) {\n                            if ((!ecPayflowScopeElement || !ecPayflowScopeElement.checked) && isEvent\n                                && enabler.value == 1\n                            ) {\n                                ecPayflowEnabler.value = 0;\n                                fireEvent(ecPayflowEnabler, \"change\");\n                            }\n                            return;\n                        }\n\n                        var enablerScopeElement = adminSystemConfig.getScopeElement(enabler);\n                        if (enablerScopeElement && ecPayflowScopeElement\n                            && enablerScopeElement.checked != ecPayflowScopeElement.checked\n                            && (isEvent || ecPayflowScopeElement.checked)\n                        ) {\n                            $(ecPayflowScopeElement).click();\n                        }\n\n                        var ecEnabler = $$(\".paypal-ec-enabler\")[0];\n                        if (ecPayflowEnabler.value != enabler.value && (isEvent || enabler.value == 1)) {\n                            ecPayflowEnabler.value = enabler.value;\n                            fireEvent(ecPayflowEnabler, \"change\");\n                            if (ecPayflowEnabler.value == 1) {\n                                if (typeof ecEnabler != \"undefined\") {\n                                    var ecEnablerScopeElement = adminSystemConfig.getScopeElement(ecEnabler);\n                                    ecEnabler.value = 1;\n                                    if (ecEnablerScopeElement && ecEnablerScopeElement.checked) {\n                                        paypalConflictsObject.checklessEventAction(ecEnablerScopeElement, false);\n                                    }\n                                    paypalConflictsObject.checklessEventAction(ecEnabler, true);\n                                }\n                            }\n                        }\n                        if (!isEvent && ecPayflowEnabler.value == 1 && typeof ecEnabler != \"undefined\") {\n                            var ecSolution = $$(\".pp-method-express\")[0];\n                            if (typeof ecSolution != \"undefined\" && !$(ecSolution).hasClassName(\"enabled\")) {\n                                ecSolution.addClassName(\"enabled\");\n                            }\n                        }\n                    },\n                    onChangeEnabler: function(event) {\n                        paypalConflictsObject.checkPaymentConflicts($(Event.element(event)), \"change\");\n                    },\n                    onClickEnablerScope: function(event) {\n                        paypalConflictsObject.checkPaymentConflicts(\n                            $(adminSystemConfig.getUpTr($(Event.element(event))).select(\".paypal-enabler\")[0]),\n                            \"click\"\n                        );\n                    },\n                    getSharedElements: function(element) {\n                        var sharedElements = [];\n                        adminSystemConfig.mapClasses(element, true, function(elementClassName) {\n                            $$(\".\" + elementClassName).each(function(sharedElement) {\n                                if (sharedElements.indexOf(sharedElement) == -1) {\n                                    sharedElements.push(sharedElement);\n                                }\n                            });\n                        });\n                        if (sharedElements.length == 0) {\n                            sharedElements.push(element);\n                        }\n                        return sharedElements;\n                    },\n                    checklessEventAction: function(element, isChange) {\n                        var action = isChange ? \"change\" : \"click\";\n                        var handler = isChange\n                            ? paypalConflictsObject.onChangeEnabler\n                            : paypalConflictsObject.onClickEnablerScope;\n                        paypalConflictsObject.getSharedElements(element).each(function(sharedElement) {\n                            Event.stopObserving(sharedElement, action, handler);\n                            if (isChange) {\n                                sharedElement.value = element.value;\n                                if ($(sharedElement).requiresObj) {\n                                    $(sharedElement).requiresObj.indicateEnabled();\n                                }\n                            }\n                        });\n                        if (isChange) {\n                            fireEvent(element, \"change\");\n                        } else {\n                            $(element).click();\n                        }\n                        paypalConflictsObject.getSharedElements(element).each(function(sharedElement) {\n                            Event.observe(sharedElement, action, handler);\n                        });\n                    },\n                    ecCheckAvailability: function() {\n                        var ecButton = $$(\".pp-method-express button.button\")[0];\n                        if (typeof ecButton == \"undefined\") {\n                            return;\n                        }\n                        var couldBeConfigured = true;\n                        $$(\".paypal-enabler\").each(function(enabler) {\n                            if (enabler.enablerObject.ecEnabler || enabler.enablerObject.ecConflicts\n                                || enabler.enablerObject.ecSeparate\n                            ) {\n                                return;\n                            }\n                            if (enabler.value == 1) {\n                                couldBeConfigured = false;\n                            }\n                        });\n                        if (couldBeConfigured) {\n                            togglePaypalSolutionConfigureButton(ecButton, true);\n                        } else {\n                            togglePaypalSolutionConfigureButton(ecButton, false);\n                        }\n                    },\n                    \/\/ type could be \"initial\", \"change\", \"click\"\n                    checkPaymentConflicts: function(enabler, type) {\n                        var isEvent = (type != \"initial\");\n                        var ecEnabler = $$(\".paypal-ec-enabler\")[0];\n\n                        if (enabler.value == 0) {\n                            if (!enabler.enablerObject.ecIndependent && type == \"change\") {\n                                if (typeof ecEnabler != \"undefined\" && ecEnabler.value == 1) {\n                                    var ecEnablerScopeElement = adminSystemConfig.getScopeElement(ecEnabler);\n                                    if (!ecEnablerScopeElement || !ecEnablerScopeElement.checked) {\n                                        ecEnabler.value = 0;\n                                        paypalConflictsObject.checklessEventAction(ecEnabler, true);\n                                    }\n                                }\n                            }\n                            paypalConflictsObject.ecCheckAvailability();\n                            paypalConflictsObject.sharePayflowEnabling(enabler, isEvent);\n                            return;\n                        }\n\n                        var confirmationApproved = isEvent;\n                        var confirmationShowed = false;\n                        \/\/ check other solutions\n                        $$(\".paypal-enabler\").each(function(anotherEnabler) {\n                            var anotherEnablerScopeElement = adminSystemConfig.getScopeElement(anotherEnabler);\n                            if (!confirmationApproved && isEvent || $(anotherEnabler) == enabler\n                                || anotherEnabler.value == 0\n                                && (!anotherEnablerScopeElement || !anotherEnablerScopeElement.checked)\n                            ) {\n                                return;\n                            }\n                            var conflict = enabler.enablerObject.ecConflicts && anotherEnabler.enablerObject.ecEnabler\n                                || enabler.enablerObject.ecEnabler && anotherEnabler.enablerObject.ecConflicts\n                                || !enabler.enablerObject.ecIndependent && anotherEnabler.enablerObject.ecConflicts\n                                || !enabler.enablerObject.ecEnabler && !anotherEnabler.enablerObject.ecEnabler;\n\n                            if (conflict && !confirmationShowed && anotherEnabler.value == 1) {\n                                if (isEvent) {\n                                    confirmationApproved = confirm(\\''",46],["T_WHITESPACE"," ",207],".",["T_WHITESPACE","  ",207],["T_VARIABLE","$this",207],["T_OBJECT_OPERATOR","->",207],["T_STRING","helper",207],"(",["T_CONSTANT_ENCAPSED_STRING","'core'",207],")",["T_OBJECT_OPERATOR","->",207],["T_STRING","jsQuoteEscape",207],"(",["T_VARIABLE","$this",207],["T_OBJECT_OPERATOR","->",207],["T_STRING","__",207],"(",["T_CONSTANT_ENCAPSED_STRING","'There is already another PayPal solution enabled. Enable this solution instead?'",207],")",")",["T_WHITESPACE"," ",207],".",["T_WHITESPACE"," ",207],["T_CONSTANT_ENCAPSED_STRING","'\\');\n                                } else {\n                                    paypalConflictsObject.isConflict = true;\n                                }\n                                confirmationShowed = true;\n                            }\n                            if (conflict && confirmationApproved) {\n                                anotherEnabler.value = 0;\n                                if (anotherEnablerScopeElement && anotherEnablerScopeElement.checked && isEvent) {\n                                    paypalConflictsObject.checklessEventAction(anotherEnablerScopeElement, false);\n                                }\n                                paypalConflictsObject.checklessEventAction(anotherEnabler, true);\n                            }\n                        });\n\n                        if (!enabler.enablerObject.ecIndependent) {\n                            if (!isEvent && (typeof ecEnabler == \"undefined\" || ecEnabler.value == 0)) {\n                                if (!enabler.enablerObject.ecPayflow) {\n                                    paypalConflictsObject.ecMissed = true;\n                                }\n                            } else if (isEvent && typeof ecEnabler != \"undefined\" && confirmationApproved) {\n                                var ecEnablerScopeElement = adminSystemConfig.getScopeElement(ecEnabler);\n                                if (ecEnablerScopeElement && ecEnablerScopeElement.checked) {\n                                    paypalConflictsObject.checklessEventAction(ecEnablerScopeElement, false);\n                                }\n                                if (ecEnabler.value == 0) {\n                                    ecEnabler.value = 1;\n                                    paypalConflictsObject.checklessEventAction(ecEnabler, true);\n                                }\n                            }\n                        }\n\n                        if (!confirmationApproved && isEvent) {\n                            enabler.value = 0;\n                            paypalConflictsObject.checklessEventAction(enabler, true);\n                        }\n                        paypalConflictsObject.ecCheckAvailability();\n                        paypalConflictsObject.sharePayflowEnabling(enabler, isEvent);\n                    },\n\n                    handleBmlEnabler: function(event) {\n                        required = Event.element(event);\n                        var bml = $(required).bmlEnabler;\n                        if (required.value == \"1\") {\n                            bml.value = \"1\";\n                        }\n                        paypalConflictsObject.toggleBmlEnabler(required);\n                    },\n\n                    toggleBmlEnabler: function(required) {\n                        var bml = $(required).bmlEnabler;\n                        if (!bml) {\n                            return;\n                        }\n                        if (required.value != \"1\") {\n                            bml.value = \"0\";\n                            $(bml).disable();\n                        }\n                        $(bml).requiresObj.indicateEnabled();\n                    }\n                };\n\n                \/\/ fill enablers with conflict data\n                $$(\".paypal-enabler\").each(function(enablerElement) {\n                    var enablerObj = {\n                        ecIndependent: false,\n                        ecConflicts: false,\n                        ecEnabler: false,\n                        ecSeparate: false,\n                        ecPayflow: false\n                    };\n                    $(enablerElement).classNames().each(function(className) {\n                        switch (className) {\n                            case \"paypal-ec-conflicts\":\n                                enablerObj.ecConflicts = true;\n                            case \"paypal-ec-independent\":\n                                enablerObj.ecIndependent = true;\n                                break;\n                            case \"paypal-ec-enabler\":\n                                enablerObj.ecEnabler = true;\n                                enablerObj.ecIndependent = true;\n                                break;\n                            case \"paypal-ec-separate\":\n                                enablerObj.ecSeparate = true;\n                                enablerObj.ecIndependent = true;\n                                break;\n                            case \"paypal-ec-pe\":\n                                enablerObj.ecPayflow = true;\n                                break;\n                        }\n                    });\n                    enablerElement.enablerObject = enablerObj;\n\n                    Event.observe(enablerElement, \"change\", paypalConflictsObject.onChangeEnabler);\n                    var enablerScopeElement = adminSystemConfig.getScopeElement(enablerElement);\n                    if (enablerScopeElement) {\n                        Event.observe(enablerScopeElement, \"click\", paypalConflictsObject.onClickEnablerScope);\n                    }\n                });\n\n                \/\/ initially uncheck payflow\n                var ecPayflowEnabler = $$(\".paypal-ec-payflow-enabler\")[0];\n                if (typeof ecPayflowEnabler != \"undefined\") {\n                    if (ecPayflowEnabler.value == 1) {\n                        ecPayflowEnabler.value = 0;\n                        fireEvent(ecPayflowEnabler, \"change\");\n                    }\n\n                    var ecPayflowScopeElement = adminSystemConfig.getScopeElement(ecPayflowEnabler);\n                    if (ecPayflowScopeElement && !ecPayflowScopeElement.checked) {\n                        $(ecPayflowScopeElement).click();\n                    }\n                }\n\n                $$(\".paypal-bml\").each(function(bmlEnabler) {\n                    $(bmlEnabler).classNames().each(function(className) {\n                        if (className.indexOf(\"requires-\") !== -1) {\n                            var required = $(className.replace(\"requires-\", \"\"));\n                            required.bmlEnabler = bmlEnabler;\n                            Event.observe(required, \"change\", paypalConflictsObject.handleBmlEnabler);\n                        }\n                    });\n                });\n\n                $$(\".paypal-enabler\").each(function(enablerElement) {\n                    paypalConflictsObject.checkPaymentConflicts(enablerElement, \"initial\");\n                    paypalConflictsObject.toggleBmlEnabler(enablerElement);\n                });\n                if (paypalConflictsObject.isConflict || paypalConflictsObject.ecMissed) {\n                    var notification = \\''",207],["T_WHITESPACE"," ",336],".",["T_WHITESPACE","  ",336],["T_VARIABLE","$this",336],["T_OBJECT_OPERATOR","->",336],["T_STRING","helper",336],"(",["T_CONSTANT_ENCAPSED_STRING","'core'",336],")",["T_OBJECT_OPERATOR","->",336],["T_STRING","jsQuoteEscape",336],"(",["T_VARIABLE","$this",336],["T_OBJECT_OPERATOR","->",336],["T_STRING","__",336],"(",["T_CONSTANT_ENCAPSED_STRING","'The following error(s) occured:'",336],")",")",["T_WHITESPACE"," ",336],".",["T_WHITESPACE"," ",336],["T_CONSTANT_ENCAPSED_STRING","'\\';\n                    if (paypalConflictsObject.isConflict) {\n                        notification += \"\\\\n  \" + \\''",336],["T_WHITESPACE"," ",338],".",["T_WHITESPACE","  ",338],["T_VARIABLE","$this",338],["T_OBJECT_OPERATOR","->",338],["T_STRING","helper",338],"(",["T_CONSTANT_ENCAPSED_STRING","'core'",338],")",["T_OBJECT_OPERATOR","->",338],["T_STRING","jsQuoteEscape",338],"(",["T_VARIABLE","$this",338],["T_OBJECT_OPERATOR","->",338],["T_STRING","__",338],"(",["T_CONSTANT_ENCAPSED_STRING","'Some PayPal solutions conflict.'",338],")",")",["T_WHITESPACE"," ",338],".",["T_WHITESPACE"," ",338],["T_CONSTANT_ENCAPSED_STRING","'\\';\n                    }\n                    if (paypalConflictsObject.ecMissed) {\n                        notification += \"\\\\n  \" + \\''",338],["T_WHITESPACE"," ",341],".",["T_WHITESPACE","  ",341],["T_VARIABLE","$this",341],["T_OBJECT_OPERATOR","->",341],["T_STRING","helper",341],"(",["T_CONSTANT_ENCAPSED_STRING","'core'",341],")",["T_OBJECT_OPERATOR","->",341],["T_STRING","jsQuoteEscape",341],"(",["T_VARIABLE","$this",341],["T_OBJECT_OPERATOR","->",341],["T_STRING","__",341],"(",["T_CONSTANT_ENCAPSED_STRING","'PayPal Express Checkout is not enabled.'",341],")",")",["T_WHITESPACE"," ",341],".",["T_WHITESPACE"," ",341],["T_CONSTANT_ENCAPSED_STRING","'\\';\n                    }\n                    notification += \"\\\\n\" + \\''",341],["T_WHITESPACE"," ",343],".",["T_WHITESPACE","  ",343],["T_VARIABLE","$this",343],["T_OBJECT_OPERATOR","->",343],["T_STRING","helper",343],"(",["T_CONSTANT_ENCAPSED_STRING","'core'",343],")",["T_OBJECT_OPERATOR","->",343],["T_STRING","jsQuoteEscape",343],"(",["T_VARIABLE","$this",343],["T_OBJECT_OPERATOR","->",343],["T_STRING","__",343],"(",["T_CONSTANT_ENCAPSED_STRING","'Please re-enable the previously enabled payment solutions.'",343],")",")",["T_WHITESPACE"," ",343],".",["T_WHITESPACE"," ",343],["T_CONSTANT_ENCAPSED_STRING","'\\';\n                    setTimeout(function() {\n                        alert(notification);\n                    }, 1);\n                }\n\n                $$(\".requires\").each(function(dependent) {\n                    var $dependent = $(dependent);\n                    if ($dependent.hasClassName(\"paypal-ec-enabler\")) {\n                        $dependent.requiresObj.callback = function(required) {\n                            if ($(required).hasClassName(\"paypal-enabler\") && required.value == 0) {\n                                $dependent.disable();\n                            }\n                        }\n                        $dependent.requiresObj.requires.each(function(required) {\n                            $dependent.requiresObj.callback(required);\n                        });\n                    }\n                });\n\n                var originalFormValidation = configForm.validator.options.onFormValidate;\n                configForm.validator.options.onFormValidate = function(result, form) {\n                    originalFormValidation(result, form);\n                    if (result) {\n                        var ecPayflowEnabler = $$(\".paypal-ec-payflow-enabler\")[0];\n                        if (typeof ecPayflowEnabler == \"undefined\") {\n                            return;\n                        }\n                        var ecPayflowScopeElement = adminSystemConfig.getScopeElement(ecPayflowEnabler);\n                        if ((typeof ecPayflowScopeElement == \"undefined\" || !ecPayflowScopeElement.checked)\n                            && ecPayflowEnabler.value == 1\n                        ) {\n                            $$(\".paypal-ec-enabler\").each(function(ecEnabler) {\n                                ecEnabler.value = 0;\n                            });\n                        }\n                    }\n                }\n            });\n        '",343],";",["T_WHITESPACE","\n        ",382],["T_RETURN","return",383],["T_WHITESPACE"," ",383],["T_STRING","parent",383],["T_DOUBLE_COLON","::",383],["T_STRING","_getExtraJs",383],"(",["T_VARIABLE","$element",383],",",["T_WHITESPACE"," ",383],["T_VARIABLE","$tooltipsExist",383],")",["T_WHITESPACE"," ",383],".",["T_WHITESPACE"," ",383],["T_VARIABLE","$this",383],["T_OBJECT_OPERATOR","->",383],["T_STRING","helper",383],"(",["T_CONSTANT_ENCAPSED_STRING","'adminhtml\/js'",383],")",["T_OBJECT_OPERATOR","->",383],["T_STRING","getScript",383],"(",["T_VARIABLE","$js",383],")",";",["T_WHITESPACE","\n    ",383],"}",["T_WHITESPACE","\n",384],"}",["T_WHITESPACE","\n",385]]