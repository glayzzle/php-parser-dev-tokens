[["T_OPEN_TAG","<?php\n",1],["T_DOC_COMMENT","\/**\n * Magento\n *\n * NOTICE OF LICENSE\n *\n * This source file is subject to the Academic Free License (AFL 3.0)\n * that is bundled with this package in the file LICENSE_AFL.txt.\n * It is also available through the world-wide-web at this URL:\n * http:\/\/opensource.org\/licenses\/afl-3.0.php\n * If you did not receive a copy of the license and are unable to\n * obtain it through the world-wide-web, please send an email\n * to license@magento.com so we can send you a copy immediately.\n *\n * DISCLAIMER\n *\n * Do not edit or add to this file if you wish to upgrade Magento to newer\n * versions in the future. If you wish to customize Magento for your\n * needs please refer to http:\/\/www.magento.com for more information.\n *\n * @category    design\n * @package     default_default\n * @copyright   Copyright (c) 2006-2016 X.commerce, Inc. and affiliates (http:\/\/www.magento.com)\n * @license     http:\/\/opensource.org\/licenses\/afl-3.0.php  Academic Free License (AFL 3.0)\n *\/",2],["T_WHITESPACE","\n",25],["T_CLOSE_TAG","?>\n",26],["T_OPEN_TAG","<?php\n",27],["T_DOC_COMMENT","\/**\n * @var $this Mage_XmlConnect_Block_Adminhtml_Mobile_Edit_Tab_Design\n *\/",28],["T_WHITESPACE","\n",30],["T_CLOSE_TAG","?>\n",31],["T_INLINE_HTML","<script type=\"text\/javascript\">\n\/\/ <![CDATA[\nvar imageTemplate = '<input type=\"hidden\" name=\"{{file_field}}[image][{{id}}][image_id]\" value=\"{{image_id}}\" \/>'+\n        '<div class=\"banner-image\">'+\n            '<div class=\"row a-right\">' +\n                '<div class=\"flex\">' +\n                '",32],["T_OPEN_TAG","<?php ",38],["T_ECHO","echo",38],["T_WHITESPACE"," ",38],["T_VARIABLE","$this",38],["T_OBJECT_OPERATOR","->",38],["T_STRING","getBrowseButtonHtml",38],"(",")",["T_WHITESPACE"," ",38],["T_CLOSE_TAG","?>",38],["T_INLINE_HTML","'+\n                '<\/div>' +\n                '<div id=\"{{file_field}}_{{id}}_file\" class=\"uploader a-left\">'+\n                    '<div id=\"{{file_field}}_{{id}}_file-old\" class=\"file-row-info\"><div id=\"{{file_field}}_preview_{{id}}\" style=\"background:url({{thumbnail}}) no-repeat center;\" class=\"image-placeholder\"><\/div><\/div>'+\n                    '<div id=\"{{file_field}}_{{id}}_file-new\" class=\"file-row-info new-file\"><\/div>'+\n                    '<div class=\"clear\"><\/div>'+\n                '<\/div>'+\n            '<\/div>'+\n            '<input type=\"hidden\" class=\"validate-banner-file-{{id}}\" id=\"{{file_field}}_{{id}}_file_save\" name=\"{{file_field}}[image][{{id}}][file]\" value=\"{{file_save}}\" \/>'+\n        '<\/div>';\n\nfunction prepareImageItems(imageType, deviceId) {\n    imageItems.application_id = deviceId;\n    imageItems.itemCount = 0;\n    imageItems.ulImages = $(imageType);\n    imageItems.ulImagesId = imageType;\n}\n\nvar imageItems = {\n    ulImages : null,\n    ulImagesId : null,\n    application_id : null,\n    fileUploadDir : '",38],["T_OPEN_TAG","<?php ",60],["T_ECHO","echo",60],["T_WHITESPACE"," ",60],["T_STRING","Mage",60],["T_DOUBLE_COLON","::",60],["T_STRING","getModel",60],"(",["T_CONSTANT_ENCAPSED_STRING","'xmlconnect\/images'",60],")",["T_OBJECT_OPERATOR","->",60],["T_STRING","getImageUrl",60],"(",["T_CONSTANT_ENCAPSED_STRING","'\/'",60],")",["T_WHITESPACE"," ",60],["T_CLOSE_TAG","?>",60],["T_INLINE_HTML","',\n    templateSyntax : \/(^|.|\\r|\\n)({{(\\w+)}})\/,\n    templateText : imageTemplate,\n    itemCount : 0,\n    excludedActionImages : ['",60],["T_OPEN_TAG","<?php ",64],["T_ECHO","echo",64],["T_WHITESPACE"," ",64],["T_STRING","Mage_XmlConnect_Model_Device_Abstract",64],["T_DOUBLE_COLON","::",64],["T_STRING","IMAGE_TYPE_ICON",64],";",["T_CLOSE_TAG","?>",64],["T_INLINE_HTML","',\n        '",64],["T_OPEN_TAG","<?php ",65],["T_ECHO","echo",65],["T_WHITESPACE"," ",65],["T_STRING","Mage_XmlConnect_Model_Device_Iphone",65],["T_DOUBLE_COLON","::",65],["T_STRING","IMAGE_TYPE_PORTRAIT_BACKGROUND",65],";",["T_CLOSE_TAG","?>",65],["T_INLINE_HTML","',\n        '",65],["T_OPEN_TAG","<?php ",66],["T_ECHO","echo",66],["T_WHITESPACE"," ",66],["T_STRING","Mage_XmlConnect_Model_Device_Ipad",66],["T_DOUBLE_COLON","::",66],["T_STRING","IMAGE_TYPE_PORTRAIT_BACKGROUND",66],";",["T_CLOSE_TAG","?>",66],["T_INLINE_HTML","',\n        '",66],["T_OPEN_TAG","<?php ",67],["T_ECHO","echo",67],["T_WHITESPACE"," ",67],["T_STRING","Mage_XmlConnect_Model_Device_Ipad",67],["T_DOUBLE_COLON","::",67],["T_STRING","IMAGE_TYPE_LANDSCAPE_BACKGROUND",67],";",["T_CLOSE_TAG","?>",67],["T_INLINE_HTML","'],\n    template: null,\n    imageActionTruncateLenght: 35,\n    add : function(config) {\n        try {\n            if(Object.isString(config)) {\n                config = config.evalJSON();\n            }\n            config.file_field = config.uploaderConfig.fileParameterName;\n            config.file_save = config.miscConfig.file_save;\n            config.thumbnail = config.miscConfig.thumbnail;\n            config.image_id = config.miscConfig.image_id;\n            config.image_action_data = config.miscConfig.image_action_data;\n            config.image_count = config.miscConfig.image_count;\n\n            var isUploadedImage = true, uploaderClass = '';\n            this.template = new Template(this.templateText, this.templateSyntax);\n\n            config.ulImagesId = this.ulImagesId;\n\n            if (!config.id) {\n                config.id = this.itemCount;\n                this.itemCount++;\n            }\n            if (!config.image_id) {\n                config.image_id = 'uploader';\n            }\n            if (config.image_id == 'uploader') {\n                isUploadedImage = false;\n                uploaderClass = ' image-item-upload';\n            } else {\n                uploaderClass = ' image-item';\n            }\n\n            Element.insert(this.ulImages, {'bottom' : '<li id=\"pictureId_' + config.image_id  + '\" class=\"' + uploaderClass  + '\"><\/li>'});\n            Element.insert(this.ulImages.down('li', config.id), {'bottom' : this.template.evaluate(config)});\n            var container = $(config.file_field + '_' + config.id + '_file').up('li');\n\n            if (config.image_id != 'uploader') {\n                container.down('.flex').remove();\n                imageItems.addEditButton(container, config);\n                imageItems.addDeleteButton(container, config);\n            } else {\n                config.file_save = [];\n\n                new Downloadable.FileUploader(\n                    config.file_field,\n                    config.file_field + '_' + config.id,\n                    container,\n                    config.file_field + '[image][' + config.id + ']',\n                    config.file_save,\n                    config.file_field + '_' + config.id + '_file',\n                    config\n                );\n            }\n        } catch (e) {\n            alert(e.message);\n        }\n    },\n    addEditButton : function(container, config) {\n        var actionAllowed = true;\n        for (var i in imageItems.excludedActionImages) {\n            if (imageItems.excludedActionImages[i] == config.file_field) {\n                actionAllowed = false;\n            }\n        }\n\n        if (config.image_id !== undefined && actionAllowed) {\n            var edit_button_id = 'edit_link_' + config.image_id;\n            var edit_button_state_id = 'edit_link_state' + config.image_id;\n            var editButton = '';\n            if (config.image_action_data !== undefined && config.image_action_data.entity_name !== undefined) {\n                editButton += '<strong>",67],["T_OPEN_TAG","<?php ",139],["T_ECHO","echo",139],["T_WHITESPACE"," ",139],["T_VARIABLE","$this",139],["T_OBJECT_OPERATOR","->",139],["T_STRING","jsQuoteEscape",139],"(",["T_VARIABLE","$this",139],["T_OBJECT_OPERATOR","->",139],["T_STRING","__",139],"(",["T_CONSTANT_ENCAPSED_STRING","'Action'",139],")",")",";",["T_WHITESPACE"," ",139],["T_CLOSE_TAG","?>",139],["T_INLINE_HTML",":<\/strong> <a id=\"' + edit_button_id + '\" href=\"#\" class=\"edit-btn\">' + (config.image_action_data.action_type + ', ' + config.image_action_data.entity_name).truncate(this.imageActionTruncateLenght) + '<\/a>';\n            } else {\n                editButton += '<strong>",139],["T_OPEN_TAG","<?php ",141],["T_ECHO","echo",141],["T_WHITESPACE"," ",141],["T_VARIABLE","$this",141],["T_OBJECT_OPERATOR","->",141],["T_STRING","jsQuoteEscape",141],"(",["T_VARIABLE","$this",141],["T_OBJECT_OPERATOR","->",141],["T_STRING","__",141],"(",["T_CONSTANT_ENCAPSED_STRING","'Action'",141],")",")",";",["T_WHITESPACE"," ",141],["T_CLOSE_TAG","?>",141],["T_INLINE_HTML",":<\/strong> <a id=\"' + edit_button_id + '\" href=\"#\" class=\"edit-btn\">",141],["T_OPEN_TAG","<?php ",141],["T_ECHO","echo",141],["T_WHITESPACE"," ",141],["T_VARIABLE","$this",141],["T_OBJECT_OPERATOR","->",141],["T_STRING","jsQuoteEscape",141],"(",["T_VARIABLE","$this",141],["T_OBJECT_OPERATOR","->",141],["T_STRING","__",141],"(",["T_CONSTANT_ENCAPSED_STRING","'not set'",141],")",")",";",["T_WHITESPACE"," ",141],["T_CLOSE_TAG","?>",141],["T_INLINE_HTML","<\/a>';\n            }\n            Element.insert(container, { 'bottom' : editButton});\n            imageItems.bindEditButton(edit_button_id, config);\n        }\n    },\n    updateEditButtonState : function(config) {\n        var edit_button_state_id = 'edit_link_' + config.image_id;\n        if (config.image_action_data !== undefined) {\n            $(edit_button_state_id).update((config.image_action_data.action_type + ', ' + config.image_action_data.entity_name).truncate(this.imageActionTruncateLenght))\n        } else {\n            $(edit_button_state_id).update('",141],["T_OPEN_TAG","<?php ",152],["T_ECHO","echo",152],["T_WHITESPACE"," ",152],["T_VARIABLE","$this",152],["T_OBJECT_OPERATOR","->",152],["T_STRING","jsQuoteEscape",152],"(",["T_VARIABLE","$this",152],["T_OBJECT_OPERATOR","->",152],["T_STRING","__",152],"(",["T_CONSTANT_ENCAPSED_STRING","'not set'",152],")",")",";",["T_WHITESPACE"," ",152],["T_CLOSE_TAG","?>",152],["T_INLINE_HTML","')\n        }\n    },\n    bindEditButton : function(edit_button_id, config) {\n        try {\n            $(edit_button_id).config = config;\n            Event.observe(edit_button_id, 'click', this.editBanner.bind(this));\n        } catch (e) {\n            alert(e.message);\n        }\n    },\n    addDeleteButton : function(container, config) {\n        var delete_button_id = config.file_field + '_' + config.id + '_delete_button';\n\n        if (config.image_id === undefined) {\n            image_id = 0;\n        } else {\n            image_id = config.image_id;\n        }\n\n        var deleteButton = '<a href=\"#\" onclick=\"imageItems.remove(' + image_id + '); return false;\" id=\"' + delete_button_id + '\" class=\"item-remove\">",152],["T_OPEN_TAG","<?php ",172],["T_ECHO","echo",172],["T_WHITESPACE"," ",172],["T_VARIABLE","$this",172],["T_OBJECT_OPERATOR","->",172],["T_STRING","jsQuoteEscape",172],"(",["T_VARIABLE","$this",172],["T_OBJECT_OPERATOR","->",172],["T_STRING","__",172],"(",["T_CONSTANT_ENCAPSED_STRING","'Remove'",172],")",")",";",["T_WHITESPACE"," ",172],["T_CLOSE_TAG","?>",172],["T_INLINE_HTML","<\/a>';\n        Element.insert(container, {'bottom' : deleteButton});\n    },\n    remove : function(image_id) {\n        new Ajax.Request('",172],["T_OPEN_TAG","<?php ",176],["T_ECHO","echo",176],["T_WHITESPACE"," ",176],["T_VARIABLE","$this",176],["T_OBJECT_OPERATOR","->",176],["T_STRING","getUrl",176],"(",["T_CONSTANT_ENCAPSED_STRING","'*\/*\/deleteimage'",176],")",["T_CLOSE_TAG","?>",176],["T_INLINE_HTML","' + 'image_id\/' + image_id + '\/'\n            + 'application_id\/' +  imageItems.application_id + '\/', {\n            onSuccess : function(transport) {\n                try {\n                    if (transport.responseText.isJSON()) {\n                        var response = transport.responseText.evalJSON()\n                        if (response.error) {\n                            alert(response.error);\n                        } else {\n                            imageItems.reloadImages(response.image_list);\n                        }\n                        if(response.ajaxExpired && response.ajaxRedirect) {\n                            setLocation(response.ajaxRedirect);\n                        }\n                    } else {\n                        alert(transport.responseText);\n                    }\n                } catch (e) {\n                    alert(e.message);\n                }\n            }\n        });\n    },\n    getImageListByType : function(image_type) {\n        new Ajax.Request('",176],["T_OPEN_TAG","<?php ",200],["T_ECHO","echo",200],["T_WHITESPACE"," ",200],["T_VARIABLE","$this",200],["T_OBJECT_OPERATOR","->",200],["T_STRING","getUrl",200],"(",["T_CONSTANT_ENCAPSED_STRING","'*\/*\/imagelist'",200],")",["T_CLOSE_TAG","?>",200],["T_INLINE_HTML","' + 'image_type\/' + image_type + '\/'\n            + 'application_id\/' +  imageItems.application_id + '\/', {\n            onSuccess : function(transport) {\n                try {\n                    if (transport.responseText.isJSON()) {\n                        var response = transport.responseText.evalJSON()\n                        if (response.error) {\n                            alert(response.error);\n                        }\n                        if(response.ajaxExpired && response.ajaxRedirect) {\n                            setLocation(response.ajaxRedirect);\n                        }\n                        imageItems.reloadImages(response.image_list);\n                    } else {\n                        alert(transport.responseText);\n                    }\n                } catch (e) {\n                    alert(e.message);\n                }\n            }\n        });\n    },\n    reloadImages : function(image_list) {\n        try {\n            image_list = image_list.map(function (item) {\n                return Object.isString(item) ? item.evalJSON(): item;\n            });\n            var imageType = image_list[0].uploaderConfig.fileParameterName;\n            Downloadable.unsetUploaderByType(imageType);\n            var currentContainerId = imageType;\n            var currentContainer = $(currentContainerId);\n            var countOfNodes = 0;\n            while (currentContainer.childNodes[0]) {\n                ++countOfNodes;\n                currentContainer.removeChild(currentContainer.childNodes[0]);\n            }\n            prepareImageItems(imageType, this.application_id);\n            for (i=0; i < image_list.length; i++) {\n                imageItems.add(image_list[i]);\n            }\n            imageItems.addDragDrop(imageType);\n            updatePreview();\n        } catch (e) {\n            alert(e.message);\n        }\n    },\n    addDragDrop : function (type) {\n        var changeEffect;\n        Sortable.create(type, { tag: 'li', only: 'image-item', overlap:'horizontal', constraint:false,\n            onChange: function(item) {\n                var list = Sortable.options(item).element;\n            },\n\n            onUpdate: function(list) {\n                var newPositions = Sortable.sequence(list, arguments[1]).map( function(item) {\n                    return item;\n                });\n                var i = 1,\n                    data = {};\n\n                newPositions.each( function(position) {\n                    if (position != \"uploader\") {\n                        data['data[' + position + ']'] = i;\n                        i++;\n                    }\n                });\n\n                data['type'] = type;\n                data['application_id'] = imageItems.application_id;\n\n                new Ajax.Request(\"",200],["T_OPEN_TAG","<?php ",270],["T_ECHO","echo",270],["T_WHITESPACE"," ",270],["T_VARIABLE","$this",270],["T_OBJECT_OPERATOR","->",270],["T_STRING","getUrl",270],"(",["T_CONSTANT_ENCAPSED_STRING","'*\/*\/saveImageOrder'",270],")",["T_CLOSE_TAG","?>",270],["T_INLINE_HTML","\", {\n                    method: \"post\",\n                    parameters: data,\n                    onSuccess: function (transport) {\n                        if (transport.responseText.isJSON()) {\n                            var response = transport.responseText.evalJSON()\n                        }\n                        imageItems.reloadImages(response.image_list);\n                    }\n                });\n            }\n        });\n        if ($(type).select('.image-item-upload')[0]) {\n            $(type).select('.image-item-upload')[0].stopObserving();\n        }\n    },\n    editBanner : function (event) {\n        try {\n            var element = event.element();\n            actionHelper.closeDialog();\n            actionHelper.setImageElement(element);\n            actionHelper.startDialog(element);\n            event.preventDefault();\n        } catch (e) {\n            alert(e.message);\n        }\n    }\n}\n\njscolor.dir = '",270],["T_OPEN_TAG","<?php ",299],["T_ECHO","echo",299],["T_WHITESPACE"," ",299],["T_VARIABLE","$this",299],["T_OBJECT_OPERATOR","->",299],["T_STRING","getJsUrl",299],"(",")",";",["T_WHITESPACE"," ",299],["T_CLOSE_TAG","?>",299],["T_INLINE_HTML","jscolor\/';\n\nvar uploaderTemplate = '<div class=\"no-display\" id=\"[[idName]]-template\">' +\n                            '<div id=\"{{id}}-container\" class=\"file-row file-row-narrow\">' +\n                                '<span class=\"file-info\">' +\n                                    '<span class=\"file-info-name\">{{name}}<\/span>' + ' ' +\n                                    '<span class=\"file-info-size\">{{size}}<\/span>' +\n                                '<\/span>' +\n                                '<span class=\"progress-text\"><\/span>' +\n                                '<div class=\"clear\"><\/div>' +\n                            '<\/div>' +\n                        '<\/div>';\n\nvar fileListTemplate = '<div style=\"background:url({{file}}) no-repeat center;\" class=\"image-placeholder\"><\/div>';\n\nvar Downloadable = {\n    uploaderObj : $H({}),\n    setUploaderObj : function(type, key, obj) {\n        if (!this.uploaderObj.get(type)) {\n            this.uploaderObj.set(type, $H({}));\n        }\n        this.uploaderObj.get(type).set(key, obj);\n    },\n    getUploaderObj : function(type, key){\n        try {\n            return this.uploaderObj.get(type).get(key);\n        } catch (e) {\n            try {\n                console.log(e);\n            } catch (e2) {\n                alert(e.name + '\\n' + e.message);\n            }\n        }\n    },\n    unsetUploaderObj : function(type, key) {\n        try {\n            this.uploaderObj.get(type).unset(key);\n        } catch (e) {\n            try {\n                console.log(e);\n            } catch (e2) {\n                alert(e.name + '\\n' + e.message);\n            }\n        }\n    },\n    unsetUploaderByType : function(type) {\n        try {\n            if (this.uploaderObj.get(type)) {\n                this.uploaderObj.unset(type);\n                this.uploaderObj.set(type, $H({}));\n            }\n        } catch (e) {\n            try {\n                console.log(e);\n            } catch (e2) {\n                alert(e.name + '\\n' + e.message);\n            }\n        }\n    },\n    massUploadByType : function(type){\n        try {\n            this.uploaderObj.get(type).each(function(item){\n                item.value.upload();\n            });\n        } catch (e) {\n            try {\n                console.log(e);\n            } catch (e2) {\n                alert(e.name + '\\n' + e.message);\n            }\n        }\n    }\n};\n\nDownloadable.FileUploader = Class.create();\nDownloadable.FileUploader.prototype = {\n    type : null,\n    key : null, \/\/key, identifier of uploader obj\n    elmContainer : null, \/\/insert Flex object and templates to elmContainer\n    fileValueName : null, \/\/name of field of JSON data of saved file\n    fileValue : null,\n    idName : null, \/\/id name of elements for unique uploader\n    uploaderText: uploaderTemplate,\n    uploaderSyntax : \/(^|.|\\r|\\n)(\\[\\[(\\w+)\\]\\])\/,\n    uploaderObj : $H({}),\n    config : null,\n    initialize: function (type, key, elmContainer, fileValueName, fileValue ,idName, config) {\n        this.type = type;\n        this.key = key;\n        this.elmContainer = elmContainer;\n        this.fileValueName = fileValueName;\n        this.fileValue = fileValue;\n        this.idName = idName;\n        this.config = config;\n        uploaderTemplate = new Template(this.uploaderText, this.uploaderSyntax);\n\n        Element.insert(\n            elmContainer,\n            {\n                'top' : uploaderTemplate.evaluate({\n                    'idName' : this.idName,\n                    'fileValueName' : this.fileValueName,\n                    'uploaderObj' : 'Downloadable.getUploaderObj(\\'' + this.type + '\\', \\'' + this.key + '\\')'\n                })\n            }\n        );\n        $(config.file_field + '_preview_' + config.id).update('",299],["T_OPEN_TAG","<?php ",405],["T_ECHO","echo",405],["T_WHITESPACE"," ",405],["T_VARIABLE","$this",405],["T_OBJECT_OPERATOR","->",405],["T_STRING","__",405],"(",["T_CONSTANT_ENCAPSED_STRING","'Choose file'",405],")",";",["T_WHITESPACE"," ",405],["T_CLOSE_TAG","?>",405],["T_INLINE_HTML","');\n        if ($(this.idName + '_save')) {\n            $(this.idName + '_save').value = this.fileValue.toJSON ? this.fileValue.toJSON() : Object.toJSON(this.fileValue);\n        }\n\n        this.config = Object.toJSON(this.config).replace(\n            new RegExp(config.elementIds.idToReplace, 'g'),\n            config.file_field + '_'+ config.id + '_file').evalJSON();\n\n        Downloadable.setUploaderObj(\n            this.type,\n            this.key,\n            new Uploader(this.config)\n        );\n        new Downloadable.FileList(this.idName, Downloadable.getUploaderObj(type, key), this.config);\n        if (varienGlobalEvents) {\n            varienGlobalEvents.attachEventHandler('tabChangeBefore', Downloadable.getUploaderObj(type, key).onContainerHideBefore);\n        }\n    }\n}\n\nDownloadable.FileList = Class.create();\nDownloadable.FileList.prototype = {\n    file: [],\n    containerId: '',\n    container: null,\n    uploader: null,\n    fileListTemplate: fileListTemplate,\n    templatePattern : \/(^|.|\\r|\\n)({{(\\w+)}})\/,\n    listTemplate : null,\n    initialize: function (containerId, uploader, config) {\n        this.containerId  = containerId,\n        this.container = $(this.containerId);\n        this.uploader = uploader;\n        this.uploader.uploader.on('filesSubmitted', this.handleFileSelect.bind(this));\n        document.on('uploader:fileSuccess', function(event) {\n            var memo = event.memo;\n            if(this._checkCurrentContainer(memo.containerId)) {\n                this.handleUploadComplete([{response: memo.response}]);\n            }\n        }.bind(this));\n        this.file = this.getElement('save').value.evalJSON();\n        this.listTemplate = new Template(this.fileListTemplate, this.templatePattern);\n        this.updateFiles();\n        this.uploader.config = config;\n        this.onContainerHideBefore = this.uploader.onContainerHideBefore.bind(\n            this.uploader,\n            function () {\n                return 'change';\n            });\n    },\n    _checkCurrentContainer: function (child) {\n        return $(this.containerId).down('#' + child);\n    },\n    handleFileSelect: function(event) {\n        try {\n            if(this.uploader.uploader.files.length) {\n                $(this.containerId + '-old').hide();\n                this.uploader.elements.browse.invoke('setStyle', {'visibility': 'hidden'});\n            }\n            this.updateFiles();\n            Downloadable.massUploadByType(this.uploader.config.file_field);\n        } catch (e) {\n            alert(e.message);\n        }\n    },\n    getElement: function (name) {\n        return $(this.containerId + '_' + name);\n    },\n    handleUploadComplete: function (files) {\n        try {\n            files.each(function(item) {\n                if (!item.response.isJSON()) {\n                    try {\n                        console.log(item.response);\n                    } catch (e2) {\n                        alert(item.response);\n                    }\n                    return;\n                }\n                var response = item.response.evalJSON();\n                if (response.error) {\n                    imageItems.getImageListByType(this.uploader.config.file_field);\n                    return;\n                }\n                var newFile = {};\n                newFile.file = response.thumbnail;\n                newFile.name = response.name;\n                newFile.size = response.size;\n                newFile.status = 'new';\n                this.file[0] = newFile;\n                imageItems.reloadImages(response.image_list);\n            }.bind(this));\n            this.updateFiles();\n        } catch (e) {\n            alert(e.message);\n        }\n    },\n    updateFiles: function() {\n        try {\n            this.getElement('save').value = this.file.toJSON ? this.file.toJSON() : Object.toJSON(this.file);\n            this.file.each(function(row){\n                row.size = this.uploader.formatSize(row.size);\n                $(this.containerId + '-old').innerHTML = this.listTemplate.evaluate(row);\n                $(this.containerId + '-new').hide();\n                $(this.containerId + '-old').show();\n            }.bind(this));\n        } catch (e) {\n            alert(e.message);\n        }\n    }\n}\n\/\/]]>\n<\/script>\n\n",405],["T_OPEN_TAG","<?php ",520],["T_ECHO","echo",520],["T_WHITESPACE"," ",520],["T_VARIABLE","$this",520],["T_OBJECT_OPERATOR","->",520],["T_STRING","getChildHtml",520],"(",["T_CONSTANT_ENCAPSED_STRING","'image_action_block'",520],")",";",["T_CLOSE_TAG","?>\n",520],["T_INLINE_HTML","\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n    <tr>\n        <td style=\"width:540px\">\n            <dl id=\"dl-image-accordion\" class=\"accordion\">\n                ",521],["T_OPEN_TAG","<?php ",526],["T_ECHO","echo",526],["T_WHITESPACE"," ",526],["T_VARIABLE","$this",526],["T_OBJECT_OPERATOR","->",526],["T_STRING","getChildHtml",526],"(",["T_CONSTANT_ENCAPSED_STRING","'design_images'",526],")",";",["T_WHITESPACE"," ",526],["T_CLOSE_TAG","?>\n",526],["T_INLINE_HTML","            <\/dl>\n            ",527],["T_OPEN_TAG","<?php ",528],["T_ECHO","echo",528],["T_WHITESPACE"," ",528],["T_VARIABLE","$this",528],["T_OBJECT_OPERATOR","->",528],["T_STRING","getChildHtml",528],"(",["T_CONSTANT_ENCAPSED_STRING","'design_accordion'",528],")",";",["T_WHITESPACE"," ",528],["T_CLOSE_TAG","?>\n",528],["T_INLINE_HTML","        <\/td>\n        <td style=\"width:20px\">&nbsp;<\/td>\n        <td style=\"width:350px\">\n            ",529],["T_OPEN_TAG","<?php ",532],["T_IF","if",532],["T_WHITESPACE"," ",532],"(",["T_VARIABLE","$this",532],["T_OBJECT_OPERATOR","->",532],["T_STRING","canShowPreview",532],"(",")",")",["T_WHITESPACE"," ",532],":",["T_WHITESPACE"," ",532],["T_CLOSE_TAG","?>\n",532],["T_INLINE_HTML","                ",533],["T_OPEN_TAG","<?php ",533],["T_ECHO","echo",533],["T_WHITESPACE"," ",533],["T_VARIABLE","$this",533],["T_OBJECT_OPERATOR","->",533],["T_STRING","getChildHtml",533],"(",["T_CONSTANT_ENCAPSED_STRING","'app_preview'",533],")",["T_WHITESPACE"," ",533],["T_CLOSE_TAG","?>\n",533],["T_INLINE_HTML","            ",534],["T_OPEN_TAG","<?php ",534],["T_ENDIF","endif",534],";",["T_WHITESPACE"," ",534],["T_CLOSE_TAG","?>\n",534],["T_INLINE_HTML","        <\/td>\n    <\/tr>\n<\/table>\n\n\n",535]]