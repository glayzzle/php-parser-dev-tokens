[["T_OPEN_TAG","<?php\n",1],["T_DOC_COMMENT","\/**\n * Magento\n *\n * NOTICE OF LICENSE\n *\n * This source file is subject to the Academic Free License (AFL 3.0)\n * that is bundled with this package in the file LICENSE_AFL.txt.\n * It is also available through the world-wide-web at this URL:\n * http:\/\/opensource.org\/licenses\/afl-3.0.php\n * If you did not receive a copy of the license and are unable to\n * obtain it through the world-wide-web, please send an email\n * to license@magento.com so we can send you a copy immediately.\n *\n * DISCLAIMER\n *\n * Do not edit or add to this file if you wish to upgrade Magento to newer\n * versions in the future. If you wish to customize Magento for your\n * needs please refer to http:\/\/www.magento.com for more information.\n *\n * @category    design\n * @package     default_default\n * @copyright   Copyright (c) 2006-2016 X.commerce, Inc. and affiliates (http:\/\/www.magento.com)\n * @license     http:\/\/opensource.org\/licenses\/afl-3.0.php  Academic Free License (AFL 3.0)\n *\/",2],["T_WHITESPACE","\n\n",25],["T_DOC_COMMENT","\/**\n * Categories tree for urlrewrites\n *\n * @see Mage_Adminhtml_Block_Urlrewrite_Category_Tree\n *\/",27],["T_WHITESPACE","\n",31],["T_CLOSE_TAG","?>\n",32],["T_INLINE_HTML","<div class=\"entry-edit\">\n    <div class=\"entry-edit-head\">\n        <h4 class=\"icon-head head-edit-form fieldset-legend\">",33],["T_OPEN_TAG","<?php ",35],["T_ECHO","echo",35],["T_WHITESPACE"," ",35],["T_STRING","Mage",35],["T_DOUBLE_COLON","::",35],["T_STRING","helper",35],"(",["T_CONSTANT_ENCAPSED_STRING","'adminhtml'",35],")",["T_OBJECT_OPERATOR","->",35],["T_STRING","__",35],"(",["T_CONSTANT_ENCAPSED_STRING","'Select Category'",35],")",["T_WHITESPACE"," ",35],["T_CLOSE_TAG","?>",35],["T_INLINE_HTML","<\/h4>\n    <\/div>\n    <fieldset>\n        <input type=\"hidden\" name=\"categories\" id=\"product_categories\" value=\"\" \/>\n        <div id=\"tree-div\" class=\"tree\" style=\"width:auto;\"><\/div>\n    <\/fieldset>\n<\/div>\n\n",35],["T_OPEN_TAG","<?php ",43],["T_IF","if",43],["T_WHITESPACE"," ",43],"(",["T_VARIABLE","$this",43],["T_OBJECT_OPERATOR","->",43],["T_STRING","getRoot",43],"(",")",")",":",["T_WHITESPACE"," ",43],["T_CLOSE_TAG","?>\n",43],["T_INLINE_HTML","<script type=\"text\/javascript\">\n\/\/<![CDATA[\nif ((typeof FORM_KEY) == 'undefined') {\n    FORM_KEY = '';\n}\nvar tree;\n\n\/**\n * Fix ext compatibility with prototype 1.6\n *\/\nExt.lib.Event.getTarget = function(e) {\n    var ee = e.browserEvent || e;\n    return ee.target ? Event.element(ee) : null;\n};\n\n\/**\n * Extend standard TreePanel\n *\/\nExt.tree.TreePanel.Enhanced = function(el, config)\n{\n    Ext.tree.TreePanel.Enhanced.superclass.constructor.call(this, el, config);\n};\nExt.extend(Ext.tree.TreePanel.Enhanced, Ext.tree.TreePanel, {\n    \/**\n     * Category click event hanlder\n     *\/\n    categoryClick : function(node, e)\n    {\n        if (node.disabled === true) {\n            return false;\n        }\n\n        window.location = window.location + '\/' + node.id;\n    }\n});\n\n\/**\n * Initialize tree and its loader when extjs is ready\n *\/\nExt.onReady(function()\n{\n    categoryLoader = new Ext.tree.TreeLoader({\n       dataUrl: '",44],["T_OPEN_TAG","<?php ",86],["T_ECHO","echo",86],["T_WHITESPACE"," ",86],["T_VARIABLE","$this",86],["T_OBJECT_OPERATOR","->",86],["T_STRING","getLoadTreeUrl",86],"(",")",["T_WHITESPACE"," ",86],["T_CLOSE_TAG","?>",86],["T_INLINE_HTML","'\n    });\n\n    \/**\n     * Render tree node from config\n     * Nodes text is generated from `name` and `products` attributes\n     *\/\n    categoryLoader.createNode = function(config) {\n        var _node = Object.clone(config);\n        _node.text = _node.name + ' (' + _node.product_count + ')';\n        if (_node.children_count && !_node.children) {\n            return new Ext.tree.AsyncTreeNode(_node);\n        }\n        return new Ext.tree.TreeNode(_node);\n    };\n\n    \/**\n     * Render tree nodes recursively\n     *\/\n    categoryLoader.buildCategoryTree = function(parent, config)\n    {\n        if (!config) {\n            return;\n        }\n        if (parent && config && config.length) {\n            for (var i in config) {\n                if (!isNaN(i)) {\n                    var node = this.createNode(config[i]);\n                    parent.appendChild(node);\n                    node.loader = node.getOwnerTree().loader;\n                    if (config[i].children && config[i].children.length) {\n                        this.buildCategoryTree(node, config[i].children);\n                    }\n                }\n            }\n        }\n    };\n\n    \/**\n     * Add additional params before loading asynchronous mode\n     *\/\n    categoryLoader.on('beforeload', function(treeLoader, node) {\n        treeLoader.baseParams.id = node.attributes.id;\n        treeLoader.baseParams.form_key = FORM_KEY;\n    });\n\n    \/\/ render categories tree\n    var config = ",86],["T_OPEN_TAG","<?php ",133],["T_ECHO","echo",133],["T_WHITESPACE"," ",133],["T_VARIABLE","$this",133],["T_OBJECT_OPERATOR","->",133],["T_STRING","getTreeArray",133],"(",["T_STRING","null",133],",",["T_WHITESPACE"," ",133],["T_STRING","true",133],")",["T_CLOSE_TAG","?>",133],["T_INLINE_HTML",";\n    tree = new Ext.tree.TreePanel.Enhanced('tree-div', {\n        animate         : false,\n        loader          : categoryLoader,\n        enableDD        : false,\n        containerScroll : true,\n        selModel        : new Ext.tree.CheckNodeMultiSelectionModel(),\n        rootVisible     : false,\n        useAjax         : true,\n        addNodeTo       : false\n    });\n    var root = new Ext.tree.TreeNode(config);\n    tree.setRootNode(root);\n    tree.addListener('click', tree.categoryClick);\n    tree.loader.buildCategoryTree(root, config.children);\n    tree.el.dom.innerHTML = '';\n    tree.render();\n});\n\/\/]]>\n<\/script>\n",133],["T_OPEN_TAG","<?php ",153],["T_ENDIF","endif",153],";",["T_WHITESPACE"," ",153],["T_CLOSE_TAG","?>\n",153]]