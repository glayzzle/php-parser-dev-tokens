[["T_OPEN_TAG","<?php\n",1],["T_DOC_COMMENT","\/**\n * Magento\n *\n * NOTICE OF LICENSE\n *\n * This source file is subject to the Academic Free License (AFL 3.0)\n * that is bundled with this package in the file LICENSE_AFL.txt.\n * It is also available through the world-wide-web at this URL:\n * http:\/\/opensource.org\/licenses\/afl-3.0.php\n * If you did not receive a copy of the license and are unable to\n * obtain it through the world-wide-web, please send an email\n * to license@magento.com so we can send you a copy immediately.\n *\n * DISCLAIMER\n *\n * Do not edit or add to this file if you wish to upgrade Magento to newer\n * versions in the future. If you wish to customize Magento for your\n * needs please refer to http:\/\/www.magento.com for more information.\n *\n * @category    design\n * @package     default_default\n * @copyright   Copyright (c) 2006-2016 X.commerce, Inc. and affiliates (http:\/\/www.magento.com)\n * @license     http:\/\/opensource.org\/licenses\/afl-3.0.php  Academic Free License (AFL 3.0)\n *\/",2],["T_WHITESPACE","\n",25],["T_CLOSE_TAG","?>\n",26],["T_OPEN_TAG","<?php\n",27],["T_DOC_COMMENT","\/**\n * Template for Mage_Adminhtml_Block_Catalog_Category_Cointainer\n *\/",28],["T_WHITESPACE","\n",30],["T_CLOSE_TAG","?>\n",31],["T_INLINE_HTML","\n<div id=\"category-edit-container\" class=\"category-content\">\n    ",32],["T_OPEN_TAG","<?php ",34],["T_ECHO","echo",34],["T_WHITESPACE"," ",34],["T_VARIABLE","$this",34],["T_OBJECT_OPERATOR","->",34],["T_STRING","getChildHtml",34],"(",["T_CONSTANT_ENCAPSED_STRING","'form'",34],")",["T_WHITESPACE"," ",34],["T_CLOSE_TAG","?>\n",34],["T_INLINE_HTML","<\/div>\n<script type=\"text\/javascript\">\n\/\/<![CDATA[\n\n    function categoryReset(url,useAjax){\n        if(useAjax){\n            var params = {active_tab_id:false};\n            updateContent(url, params);\n        }else{\n            location.href = url;\n        }\n    }\n\n    \/**\n    * Delete some category\n    * This routine get categoryId explicitly, so even if currently selected tree node is out of sync\n    * with this form, we surely delete same category in the tree and at backend\n    *\/\n    function categoryDelete(url, useAjax, categoryId) {\n        if (confirm('",35],["T_OPEN_TAG","<?php ",54],["T_ECHO","echo",54],["T_WHITESPACE"," ",54],["T_STRING","Mage",54],["T_DOUBLE_COLON","::",54],["T_STRING","helper",54],"(",["T_CONSTANT_ENCAPSED_STRING","'core'",54],")",["T_OBJECT_OPERATOR","->",54],["T_STRING","jsQuoteEscape",54],"(",["T_STRING","Mage",54],["T_DOUBLE_COLON","::",54],["T_STRING","helper",54],"(",["T_CONSTANT_ENCAPSED_STRING","'catalog'",54],")",["T_OBJECT_OPERATOR","->",54],["T_STRING","__",54],"(",["T_CONSTANT_ENCAPSED_STRING","'Are you sure you want to delete this category?'",54],")",")",["T_WHITESPACE"," ",54],["T_CLOSE_TAG","?>",54],["T_INLINE_HTML","')){\n            if (useAjax){\n                tree.nodeForDelete = categoryId;\n                updateContent(url, {}, true);\n            } else {\n                location.href = url;\n            }\n        }\n    }\n\n    \/**\n     * Update category content area\n     *\/\n    function updateContent(url, params, refreshTree) {\n        if (!params) {\n            params = {};\n        }\n        if (!params.form_key) {\n            params.form_key = FORM_KEY;\n        }\n\n        toolbarToggle.stop();\n\n       \/*if(params.node_name)\n       {\n           var currentNode = tree.getNodeById(tree.currentNodeId);\n           currentNode.setText(params.node_name);\n       }*\/\n\n        var categoryContainer = $('category-edit-container');\n        var messagesContainer = $('messages');\n        var thisObj = this;\n        new Ajax.Request(url + (url.match(new RegExp('\\\\?')) ? '&isAjax=true' : '?isAjax=true' ), {\n            parameters:  params,\n            evalScripts: true,\n            onComplete: function () {\n                \/**\n                 * This func depends on variables, that came in response, and were eval'ed in onSuccess() callback.\n                 * Since prototype's Element.update() evals javascripts in 10 msec, we should exec our func after it.\n                 *\/\n                setTimeout(function() {\n                    try {\n                        if (refreshTree) {\n                            thisObj.refreshTreeArea();\n                        }\n                        toolbarToggle.start();\n                    } catch (e) {\n                        alert(e.message);\n                    };\n                }, 25);\n            },\n            onSuccess: function(transport) {\n                try {\n                    if (transport.responseText.isJSON()) {\n                        var response = transport.responseText.evalJSON();\n                        var needUpdate = true;\n                        if (response.error) {\n                            alert(response.message);\n                            needUpdate = false;\n                        }\n                        if(response.ajaxExpired && response.ajaxRedirect) {\n                            setLocation(response.ajaxRedirect);\n                            needUpdate = false;\n                        }\n                        if (needUpdate){\n                            if (response.content){\n                                $(categoryContainer).update(response.content);\n                            }\n                            if (response.messages){\n                                $(messagesContainer).update(response.messages);\n                            }\n                        }\n                    } else {\n                        $(categoryContainer).update(transport.responseText);\n                    }\n                }\n                catch (e) {\n                    $(categoryContainer).update(transport.responseText);\n                }\n            }\n        });\n    }\n\n    \/**\n     * Refresh tree nodes after saving or deleting a category\n     *\/\n    function refreshTreeArea(transport)\n    {\n        if (tree && window.editingCategoryBreadcrumbs) {\n            \/\/ category deleted - delete its node\n            if (tree.nodeForDelete) {\n                var node = tree.getNodeById(tree.nodeForDelete);\n                tree.nodeForDelete = false;\n\n                if (node) { \/\/ Check maybe tree became somehow not synced with ajax and we're trying to delete unknown node\n                    node.parentNode.removeChild(node);\n                    tree.currentNodeId = false;\n                }\n            }\n            \/\/ category created - add its node\n            else if (tree.addNodeTo) {\n                var parent = tree.getNodeById(tree.addNodeTo);\n                tree.addNodeTo = false;\n\n                if (parent) { \/\/ Check maybe tree became somehow not synced with ajax and we're trying to add to unknown node\n                    var node = new Ext.tree.AsyncTreeNode(editingCategoryBreadcrumbs[editingCategoryBreadcrumbs.length - 1]);\n                    node.loaded = true;\n                    tree.currentNodeId = node.id;\n                    parent.appendChild(node);\n\n                    if (parent.expanded) {\n                        tree.selectCurrentNode();\n                    } else {\n                        var timer;\n                        parent.expand();\n                        var f = function(){\n                            if(parent.expanded){ \/\/ done expanding\n                                clearInterval(timer);\n                                tree.selectCurrentNode();\n                            }\n                        };\n                        timer = setInterval(f, 200);\n                    }\n                }\n            }\n\n            \/\/ update all affected categories nodes names\n            for (var i = 0; i < editingCategoryBreadcrumbs.length; i++) {\n                var node = tree.getNodeById(editingCategoryBreadcrumbs[i].id);\n                if (node) {\n                    node.setText(editingCategoryBreadcrumbs[i].text);\n                }\n            }\n        }\n    }\n\n    function displayLoadingMask()\n    {\n       var loaderArea = $$('#html-body .wrapper')[0]; \/\/ Blocks all page\n        Position.clone($(loaderArea), $('loading-mask'), {offsetLeft:-2});\n        toggleSelectsUnderBlock($('loading-mask'), false);\n        Element.show('loading-mask');\n    }\n\/\/]]>\n<\/script>\n",54]]