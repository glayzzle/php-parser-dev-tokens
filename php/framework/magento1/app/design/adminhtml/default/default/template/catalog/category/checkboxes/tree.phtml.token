[["T_OPEN_TAG","<?php\n",1],["T_DOC_COMMENT","\/**\n * Magento\n *\n * NOTICE OF LICENSE\n *\n * This source file is subject to the Academic Free License (AFL 3.0)\n * that is bundled with this package in the file LICENSE_AFL.txt.\n * It is also available through the world-wide-web at this URL:\n * http:\/\/opensource.org\/licenses\/afl-3.0.php\n * If you did not receive a copy of the license and are unable to\n * obtain it through the world-wide-web, please send an email\n * to license@magento.com so we can send you a copy immediately.\n *\n * DISCLAIMER\n *\n * Do not edit or add to this file if you wish to upgrade Magento to newer\n * versions in the future. If you wish to customize Magento for your\n * needs please refer to http:\/\/www.magento.com for more information.\n *\n * @category    design\n * @package     default_default\n * @copyright   Copyright (c) 2006-2016 X.commerce, Inc. and affiliates (http:\/\/www.magento.com)\n * @license     http:\/\/opensource.org\/licenses\/afl-3.0.php  Academic Free License (AFL 3.0)\n *\/",2],["T_WHITESPACE","\n",25],["T_CLOSE_TAG","?>\n",26],["T_INLINE_HTML","\n",27],["T_OPEN_TAG","<?php ",28],["T_VARIABLE","$_divId",28],["T_WHITESPACE"," ",28],"=",["T_WHITESPACE"," ",28],["T_CONSTANT_ENCAPSED_STRING","'tree-div_'",28],["T_WHITESPACE"," ",28],".",["T_WHITESPACE"," ",28],["T_STRING","time",28],"(",")",["T_WHITESPACE"," ",28],["T_CLOSE_TAG","?>\n",28],["T_INLINE_HTML","<div id=\"",29],["T_OPEN_TAG","<?php ",29],["T_ECHO","echo",29],["T_WHITESPACE"," ",29],["T_VARIABLE","$_divId",29],["T_WHITESPACE"," ",29],["T_CLOSE_TAG","?>",29],["T_INLINE_HTML","\" class=\"tree\"><\/div>\n\n<script type=\"text\/javascript\">\n\/\/<![CDATA[\n\n\/\/ TODO: cleanup this script. It was copypasted from catalog\/category\/tree\n\nvar tree;\n\n\/**\n * Fix ext compatibility with prototype 1.6\n *\/\nExt.lib.Event.getTarget = function(e) {\n    var ee = e.browserEvent || e;\n    return ee.target ? Event.element(ee) : null;\n};\n\nExt.tree.TreePanel.Enhanced = function(el, config)\n{\n    Ext.tree.TreePanel.Enhanced.superclass.constructor.call(this, el, config);\n};\n\nExt.extend(Ext.tree.TreePanel.Enhanced, Ext.tree.TreePanel, {\n\n    loadTree : function(config, firstLoad)\n    {\n        var parameters = config['parameters'];\n        var data = config['data'];\n\n        if ((typeof parameters['root_visible']) != 'undefined') {\n            this.rootVisible = parameters['root_visible']*1;\n        }\n\n        var root = new Ext.tree.TreeNode(parameters);\n\n        this.nodeHash = {};\n        this.setRootNode(root);\n\n        if (firstLoad) {\n            this.addListener('click', this.categoryClick.createDelegate(this));\n        }\n\n        this.loader.buildCategoryTree(root, data);\n        this.el.dom.innerHTML = '';\n        \/\/ render the tree\n        this.render();\n    },\n\n    categoryClick : function(node, e)\n    {\n        node.getUI().check(!node.getUI().checked());\n    }\n});\n\nExt.onReady(function()\n{\n    var categoryLoader = new Ext.tree.TreeLoader({\n       dataUrl: '",29],["T_OPEN_TAG","<?php ",86],["T_ECHO","echo",86],["T_WHITESPACE"," ",86],["T_VARIABLE","$this",86],["T_OBJECT_OPERATOR","->",86],["T_STRING","getLoadTreeUrl",86],"(",")",["T_WHITESPACE"," ",86],["T_CLOSE_TAG","?>",86],["T_INLINE_HTML","'\n    });\n\n    categoryLoader.createNode = function(config) {\n        config.uiProvider = Ext.tree.CheckboxNodeUI;\n        var node;\n        var _node = Object.clone(config);\n        if (config.children && !config.children.length) {\n            delete(config.children);\n            node = new Ext.tree.AsyncTreeNode(config);\n        } else {\n            node = new Ext.tree.TreeNode(config);\n        }\n\n        return node;\n    };\n\n    categoryLoader.buildCategoryTree = function(parent, config)\n    {\n        if (!config) return null;\n\n        if (parent && config && config.length){\n            for (var i = 0; i < config.length; i++) {\n                config[i].uiProvider = Ext.tree.CheckboxNodeUI;\n                var node;\n                var _node = Object.clone(config[i]);\n                if (_node.children && !_node.children.length) {\n                    delete(_node.children);\n                    node = new Ext.tree.AsyncTreeNode(_node);\n                } else {\n                    node = new Ext.tree.TreeNode(config[i]);\n                }\n                parent.appendChild(node);\n                node.loader = node.getOwnerTree().loader;\n                if (_node.children) {\n                    this.buildCategoryTree(node, _node.children);\n                }\n            }\n        }\n    };\n\n    categoryLoader.buildHash = function(node)\n    {\n        var hash = {};\n\n        hash = this.toArray(node.attributes);\n\n        if (node.childNodes.length>0 || (node.loaded==false && node.loading==false)) {\n            hash['children'] = new Array;\n\n            for (var i = 0, len = node.childNodes.length; i < len; i++) {\n                if (!hash['children']) {\n                    hash['children'] = new Array;\n                }\n                hash['children'].push(this.buildHash(node.childNodes[i]));\n            }\n        }\n\n        return hash;\n    };\n\n    categoryLoader.toArray = function(attributes) {\n        var data = {};\n        for (var key in attributes) {\n            var value = attributes[key];\n            data[key] = value;\n        }\n\n        return data;\n    };\n\n    categoryLoader.on(\"beforeload\", function(treeLoader, node) {\n        treeLoader.baseParams.id = node.attributes.id;\n    });\n\n    categoryLoader.on(\"load\", function(treeLoader, node, config) {\n        varienWindowOnload();\n    });\n\n    tree = new Ext.tree.TreePanel.Enhanced('",86],["T_OPEN_TAG","<?php ",165],["T_ECHO","echo",165],["T_WHITESPACE"," ",165],["T_VARIABLE","$_divId",165],["T_WHITESPACE"," ",165],["T_CLOSE_TAG","?>",165],["T_INLINE_HTML","', {\n        animate:          false,\n        loader:           categoryLoader,\n        enableDD:         false,\n        containerScroll:  true,\n        selModel:         new Ext.tree.CheckNodeMultiSelectionModel(),\n        rootVisible:      '",165],["T_OPEN_TAG","<?php ",171],["T_ECHO","echo",171],["T_WHITESPACE"," ",171],["T_VARIABLE","$this",171],["T_OBJECT_OPERATOR","->",171],["T_STRING","getRoot",171],"(",")",["T_OBJECT_OPERATOR","->",171],["T_STRING","getIsVisible",171],"(",")",["T_WHITESPACE"," ",171],["T_CLOSE_TAG","?>",171],["T_INLINE_HTML","',\n        useAjax:          ",171],["T_OPEN_TAG","<?php ",172],["T_ECHO","echo",172],["T_WHITESPACE"," ",172],["T_VARIABLE","$this",172],["T_OBJECT_OPERATOR","->",172],["T_STRING","getUseAjax",172],"(",")",["T_WHITESPACE"," ",172],["T_CLOSE_TAG","?>",172],["T_INLINE_HTML",",\n        currentNodeId:    ",172],["T_OPEN_TAG","<?php ",173],["T_ECHO","echo",173],["T_WHITESPACE"," ",173],["T_INT_CAST","(int)",173],["T_WHITESPACE"," ",173],["T_VARIABLE","$this",173],["T_OBJECT_OPERATOR","->",173],["T_STRING","getCategoryId",173],"(",")",["T_WHITESPACE"," ",173],["T_CLOSE_TAG","?>",173],["T_INLINE_HTML",",\n        addNodeTo:        false,\n        rootUIProvider:   Ext.tree.CheckboxNodeUI\n    });\n\n    tree.on('check', function(node, checked) {\n        ",173],["T_OPEN_TAG","<?php ",179],["T_ECHO","echo",179],["T_WHITESPACE"," ",179],["T_VARIABLE","$this",179],["T_OBJECT_OPERATOR","->",179],["T_STRING","getJsFormObject",179],"(",")",["T_WHITESPACE"," ",179],["T_CLOSE_TAG","?>",179],["T_INLINE_HTML",".updateElement.value = this.getChecked().join(', ');\n        varienElementMethods.setHasChanges(node.getUI().checkbox);\n    }, tree);\n\n    \/\/ set the root node\n    var parameters = {\n        text:        '",179],["T_OPEN_TAG","<?php ",185],["T_ECHO","echo",185],["T_WHITESPACE"," ",185],["T_STRING","htmlentities",185],"(",["T_VARIABLE","$this",185],["T_OBJECT_OPERATOR","->",185],["T_STRING","getRoot",185],"(",")",["T_OBJECT_OPERATOR","->",185],["T_STRING","getName",185],"(",")",")",["T_WHITESPACE"," ",185],["T_CLOSE_TAG","?>",185],["T_INLINE_HTML","',\n        draggable:   false,\n        checked:'",185],["T_OPEN_TAG","<?php ",187],["T_ECHO","echo",187],["T_WHITESPACE"," ",187],["T_VARIABLE","$this",187],["T_OBJECT_OPERATOR","->",187],["T_STRING","getRoot",187],"(",")",["T_OBJECT_OPERATOR","->",187],["T_STRING","getChecked",187],"(",")",["T_WHITESPACE"," ",187],["T_CLOSE_TAG","?>",187],["T_INLINE_HTML","',\n        uiProvider: Ext.tree.CheckboxNodeUI,\n        allowDrop:   ",187],["T_OPEN_TAG","<?php ",189],["T_IF","if",189],["T_WHITESPACE"," ",189],"(",["T_VARIABLE","$this",189],["T_OBJECT_OPERATOR","->",189],["T_STRING","getRoot",189],"(",")",["T_OBJECT_OPERATOR","->",189],["T_STRING","getIsVisible",189],"(",")",")",":",["T_WHITESPACE"," ",189],["T_CLOSE_TAG","?>",189],["T_INLINE_HTML","true",189],["T_OPEN_TAG","<?php ",189],["T_ELSE","else",189],["T_WHITESPACE"," ",189],":",["T_WHITESPACE"," ",189],["T_CLOSE_TAG","?>",189],["T_INLINE_HTML","false",189],["T_OPEN_TAG","<?php ",189],["T_ENDIF","endif",189],";",["T_WHITESPACE"," ",189],["T_CLOSE_TAG","?>",189],["T_INLINE_HTML",",\n        id:          ",189],["T_OPEN_TAG","<?php ",190],["T_ECHO","echo",190],["T_WHITESPACE"," ",190],["T_INT_CAST","(int)",190],["T_WHITESPACE"," ",190],["T_VARIABLE","$this",190],["T_OBJECT_OPERATOR","->",190],["T_STRING","getRoot",190],"(",")",["T_OBJECT_OPERATOR","->",190],["T_STRING","getId",190],"(",")",["T_WHITESPACE"," ",190],["T_CLOSE_TAG","?>",190],["T_INLINE_HTML",",\n        expanded:    ",190],["T_OPEN_TAG","<?php ",191],["T_ECHO","echo",191],["T_WHITESPACE"," ",191],["T_INT_CAST","(int)",191],["T_WHITESPACE"," ",191],["T_VARIABLE","$this",191],["T_OBJECT_OPERATOR","->",191],["T_STRING","getIsWasExpanded",191],"(",")",["T_WHITESPACE"," ",191],["T_CLOSE_TAG","?>",191],["T_INLINE_HTML",",\n        category_id: ",191],["T_OPEN_TAG","<?php ",192],["T_ECHO","echo",192],["T_WHITESPACE"," ",192],["T_INT_CAST","(int)",192],["T_WHITESPACE"," ",192],["T_VARIABLE","$this",192],["T_OBJECT_OPERATOR","->",192],["T_STRING","getCategoryId",192],"(",")",["T_WHITESPACE"," ",192],["T_CLOSE_TAG","?>\n",192],["T_INLINE_HTML","    };\n\n    tree.loadTree({parameters:parameters, data:",193],["T_OPEN_TAG","<?php ",195],["T_ECHO","echo",195],["T_WHITESPACE"," ",195],["T_VARIABLE","$this",195],["T_OBJECT_OPERATOR","->",195],["T_STRING","getTreeJson",195],"(",")",["T_WHITESPACE"," ",195],["T_CLOSE_TAG","?>",195],["T_INLINE_HTML","},true);\n\n});\n\/\/]]>\n<\/script>\n",195]]