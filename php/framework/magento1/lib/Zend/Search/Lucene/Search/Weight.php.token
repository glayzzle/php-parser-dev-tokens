[["T_OPEN_TAG","<?php\n",1],["T_DOC_COMMENT","\/**\n * Zend Framework\n *\n * LICENSE\n *\n * This source file is subject to the new BSD license that is bundled\n * with this package in the file LICENSE.txt.\n * It is also available through the world-wide-web at this URL:\n * http:\/\/framework.zend.com\/license\/new-bsd\n * If you did not receive a copy of the license and are unable to\n * obtain it through the world-wide-web, please send an email\n * to license@zend.com so we can send you a copy immediately.\n *\n * @category   Zend\n * @package    Zend_Search_Lucene\n * @subpackage Search\n * @copyright  Copyright (c) 2005-2015 Zend Technologies USA Inc. (http:\/\/www.zend.com)\n * @license    http:\/\/framework.zend.com\/license\/new-bsd     New BSD License\n * @version    $Id$\n *\/",2],["T_WHITESPACE","\n\n\n",21],["T_DOC_COMMENT","\/**\n * Calculate query weights and build query scorers.\n *\n * A Weight is constructed by a query Query->createWeight().\n * The sumOfSquaredWeights() method is then called on the top-level\n * query to compute the query normalization factor Similarity->queryNorm(float).\n * This factor is then passed to normalize(float).  At this point the weighting\n * is complete.\n *\n * @category   Zend\n * @package    Zend_Search_Lucene\n * @subpackage Search\n * @copyright  Copyright (c) 2005-2015 Zend Technologies USA Inc. (http:\/\/www.zend.com)\n * @license    http:\/\/framework.zend.com\/license\/new-bsd     New BSD License\n *\/",24],["T_WHITESPACE","\n",38],["T_ABSTRACT","abstract",39],["T_WHITESPACE"," ",39],["T_CLASS","class",39],["T_WHITESPACE"," ",39],["T_STRING","Zend_Search_Lucene_Search_Weight",39],["T_WHITESPACE","\n",39],"{",["T_WHITESPACE","\n    ",40],["T_DOC_COMMENT","\/**\n     * Normalization factor.\n     * This value is stored only for query expanation purpose and not used in any other place\n     *\n     * @var float\n     *\/",41],["T_WHITESPACE","\n    ",46],["T_PROTECTED","protected",47],["T_WHITESPACE"," ",47],["T_VARIABLE","$_queryNorm",47],";",["T_WHITESPACE","\n\n    ",47],["T_DOC_COMMENT","\/**\n     * Weight value\n     *\n     * Weight value may be initialized in sumOfSquaredWeights() or normalize()\n     * because they both are invoked either in Query::_initWeight (for top-level query) or\n     * in corresponding methods of parent query's weights\n     *\n     * @var float\n     *\/",49],["T_WHITESPACE","\n    ",57],["T_PROTECTED","protected",58],["T_WHITESPACE"," ",58],["T_VARIABLE","$_value",58],";",["T_WHITESPACE","\n\n\n    ",58],["T_DOC_COMMENT","\/**\n     * The weight for this query.\n     *\n     * @return float\n     *\/",61],["T_WHITESPACE","\n    ",65],["T_PUBLIC","public",66],["T_WHITESPACE"," ",66],["T_FUNCTION","function",66],["T_WHITESPACE"," ",66],["T_STRING","getValue",66],"(",")",["T_WHITESPACE","\n    ",66],"{",["T_WHITESPACE","\n        ",67],["T_RETURN","return",68],["T_WHITESPACE"," ",68],["T_VARIABLE","$this",68],["T_OBJECT_OPERATOR","->",68],["T_STRING","_value",68],";",["T_WHITESPACE","\n    ",68],"}",["T_WHITESPACE","\n\n    ",69],["T_DOC_COMMENT","\/**\n     * The sum of squared weights of contained query clauses.\n     *\n     * @return float\n     *\/",71],["T_WHITESPACE","\n    ",75],["T_ABSTRACT","abstract",76],["T_WHITESPACE"," ",76],["T_PUBLIC","public",76],["T_WHITESPACE"," ",76],["T_FUNCTION","function",76],["T_WHITESPACE"," ",76],["T_STRING","sumOfSquaredWeights",76],"(",")",";",["T_WHITESPACE","\n\n    ",76],["T_DOC_COMMENT","\/**\n     * Assigns the query normalization factor to this.\n     *\n     * @param float $norm\n     *\/",78],["T_WHITESPACE","\n    ",82],["T_ABSTRACT","abstract",83],["T_WHITESPACE"," ",83],["T_PUBLIC","public",83],["T_WHITESPACE"," ",83],["T_FUNCTION","function",83],["T_WHITESPACE"," ",83],["T_STRING","normalize",83],"(",["T_VARIABLE","$norm",83],")",";",["T_WHITESPACE","\n",83],"}",["T_WHITESPACE","\n\n",84]]