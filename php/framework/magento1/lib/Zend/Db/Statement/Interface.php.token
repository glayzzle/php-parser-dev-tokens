[["T_OPEN_TAG","<?php\n",1],["T_DOC_COMMENT","\/**\n * Zend Framework\n *\n * LICENSE\n *\n * This source file is subject to the new BSD license that is bundled\n * with this package in the file LICENSE.txt.\n * It is also available through the world-wide-web at this URL:\n * http:\/\/framework.zend.com\/license\/new-bsd\n * If you did not receive a copy of the license and are unable to\n * obtain it through the world-wide-web, please send an email\n * to license@zend.com so we can send you a copy immediately.\n *\n * @category   Zend\n * @package    Zend_Db\n * @subpackage Statement\n * @copyright  Copyright (c) 2005-2015 Zend Technologies USA Inc. (http:\/\/www.zend.com)\n * @license    http:\/\/framework.zend.com\/license\/new-bsd     New BSD License\n * @version    $Id$\n *\/",2],["T_WHITESPACE","\n\n",21],["T_DOC_COMMENT","\/**\n * Emulates a PDOStatement for native database adapters.\n *\n * @category   Zend\n * @package    Zend_Db\n * @subpackage Statement\n * @copyright  Copyright (c) 2005-2015 Zend Technologies USA Inc. (http:\/\/www.zend.com)\n * @license    http:\/\/framework.zend.com\/license\/new-bsd     New BSD License\n *\/",23],["T_WHITESPACE","\n",31],["T_INTERFACE","interface",32],["T_WHITESPACE"," ",32],["T_STRING","Zend_Db_Statement_Interface",32],["T_WHITESPACE","\n",32],"{",["T_WHITESPACE","\n\n    ",33],["T_DOC_COMMENT","\/**\n     * Bind a column of the statement result set to a PHP variable.\n     *\n     * @param string $column Name the column in the result set, either by\n     *                       position or by name.\n     * @param mixed  $param  Reference to the PHP variable containing the value.\n     * @param mixed  $type   OPTIONAL\n     * @return bool\n     * @throws Zend_Db_Statement_Exception\n     *\/",35],["T_WHITESPACE","\n    ",44],["T_PUBLIC","public",45],["T_WHITESPACE"," ",45],["T_FUNCTION","function",45],["T_WHITESPACE"," ",45],["T_STRING","bindColumn",45],"(",["T_VARIABLE","$column",45],",",["T_WHITESPACE"," ",45],"&",["T_VARIABLE","$param",45],",",["T_WHITESPACE"," ",45],["T_VARIABLE","$type",45],["T_WHITESPACE"," ",45],"=",["T_WHITESPACE"," ",45],["T_STRING","null",45],")",";",["T_WHITESPACE","\n\n    ",45],["T_DOC_COMMENT","\/**\n     * Binds a parameter to the specified variable name.\n     *\n     * @param mixed $parameter Name the parameter, either integer or string.\n     * @param mixed $variable  Reference to PHP variable containing the value.\n     * @param mixed $type      OPTIONAL Datatype of SQL parameter.\n     * @param mixed $length    OPTIONAL Length of SQL parameter.\n     * @param mixed $options   OPTIONAL Other options.\n     * @return bool\n     * @throws Zend_Db_Statement_Exception\n     *\/",47],["T_WHITESPACE","\n    ",57],["T_PUBLIC","public",58],["T_WHITESPACE"," ",58],["T_FUNCTION","function",58],["T_WHITESPACE"," ",58],["T_STRING","bindParam",58],"(",["T_VARIABLE","$parameter",58],",",["T_WHITESPACE"," ",58],"&",["T_VARIABLE","$variable",58],",",["T_WHITESPACE"," ",58],["T_VARIABLE","$type",58],["T_WHITESPACE"," ",58],"=",["T_WHITESPACE"," ",58],["T_STRING","null",58],",",["T_WHITESPACE"," ",58],["T_VARIABLE","$length",58],["T_WHITESPACE"," ",58],"=",["T_WHITESPACE"," ",58],["T_STRING","null",58],",",["T_WHITESPACE"," ",58],["T_VARIABLE","$options",58],["T_WHITESPACE"," ",58],"=",["T_WHITESPACE"," ",58],["T_STRING","null",58],")",";",["T_WHITESPACE","\n\n    ",58],["T_DOC_COMMENT","\/**\n     * Binds a value to a parameter.\n     *\n     * @param mixed $parameter Name the parameter, either integer or string.\n     * @param mixed $value     Scalar value to bind to the parameter.\n     * @param mixed $type      OPTIONAL Datatype of the parameter.\n     * @return bool\n     * @throws Zend_Db_Statement_Exception\n     *\/",60],["T_WHITESPACE","\n    ",68],["T_PUBLIC","public",69],["T_WHITESPACE"," ",69],["T_FUNCTION","function",69],["T_WHITESPACE"," ",69],["T_STRING","bindValue",69],"(",["T_VARIABLE","$parameter",69],",",["T_WHITESPACE"," ",69],["T_VARIABLE","$value",69],",",["T_WHITESPACE"," ",69],["T_VARIABLE","$type",69],["T_WHITESPACE"," ",69],"=",["T_WHITESPACE"," ",69],["T_STRING","null",69],")",";",["T_WHITESPACE","\n\n    ",69],["T_DOC_COMMENT","\/**\n     * Closes the cursor, allowing the statement to be executed again.\n     *\n     * @return bool\n     * @throws Zend_Db_Statement_Exception\n     *\/",71],["T_WHITESPACE","\n    ",76],["T_PUBLIC","public",77],["T_WHITESPACE"," ",77],["T_FUNCTION","function",77],["T_WHITESPACE"," ",77],["T_STRING","closeCursor",77],"(",")",";",["T_WHITESPACE","\n\n    ",77],["T_DOC_COMMENT","\/**\n     * Returns the number of columns in the result set.\n     * Returns null if the statement has no result set metadata.\n     *\n     * @return int The number of columns.\n     * @throws Zend_Db_Statement_Exception\n     *\/",79],["T_WHITESPACE","\n    ",85],["T_PUBLIC","public",86],["T_WHITESPACE"," ",86],["T_FUNCTION","function",86],["T_WHITESPACE"," ",86],["T_STRING","columnCount",86],"(",")",";",["T_WHITESPACE","\n\n    ",86],["T_DOC_COMMENT","\/**\n     * Retrieves the error code, if any, associated with the last operation on\n     * the statement handle.\n     *\n     * @return string error code.\n     * @throws Zend_Db_Statement_Exception\n     *\/",88],["T_WHITESPACE","\n    ",94],["T_PUBLIC","public",95],["T_WHITESPACE"," ",95],["T_FUNCTION","function",95],["T_WHITESPACE"," ",95],["T_STRING","errorCode",95],"(",")",";",["T_WHITESPACE","\n\n    ",95],["T_DOC_COMMENT","\/**\n     * Retrieves an array of error information, if any, associated with the\n     * last operation on the statement handle.\n     *\n     * @return array\n     * @throws Zend_Db_Statement_Exception\n     *\/",97],["T_WHITESPACE","\n    ",103],["T_PUBLIC","public",104],["T_WHITESPACE"," ",104],["T_FUNCTION","function",104],["T_WHITESPACE"," ",104],["T_STRING","errorInfo",104],"(",")",";",["T_WHITESPACE","\n\n    ",104],["T_DOC_COMMENT","\/**\n     * Executes a prepared statement.\n     *\n     * @param array $params OPTIONAL Values to bind to parameter placeholders.\n     * @return bool\n     * @throws Zend_Db_Statement_Exception\n     *\/",106],["T_WHITESPACE","\n    ",112],["T_PUBLIC","public",113],["T_WHITESPACE"," ",113],["T_FUNCTION","function",113],["T_WHITESPACE"," ",113],["T_STRING","execute",113],"(",["T_ARRAY","array",113],["T_WHITESPACE"," ",113],["T_VARIABLE","$params",113],["T_WHITESPACE"," ",113],"=",["T_WHITESPACE"," ",113],["T_ARRAY","array",113],"(",")",")",";",["T_WHITESPACE","\n\n    ",113],["T_DOC_COMMENT","\/**\n     * Fetches a row from the result set.\n     *\n     * @param int $style  OPTIONAL Fetch mode for this fetch operation.\n     * @param int $cursor OPTIONAL Absolute, relative, or other.\n     * @param int $offset OPTIONAL Number for absolute or relative cursors.\n     * @return mixed Array, object, or scalar depending on fetch mode.\n     * @throws Zend_Db_Statement_Exception\n     *\/",115],["T_WHITESPACE","\n    ",123],["T_PUBLIC","public",124],["T_WHITESPACE"," ",124],["T_FUNCTION","function",124],["T_WHITESPACE"," ",124],["T_STRING","fetch",124],"(",["T_VARIABLE","$style",124],["T_WHITESPACE"," ",124],"=",["T_WHITESPACE"," ",124],["T_STRING","null",124],",",["T_WHITESPACE"," ",124],["T_VARIABLE","$cursor",124],["T_WHITESPACE"," ",124],"=",["T_WHITESPACE"," ",124],["T_STRING","null",124],",",["T_WHITESPACE"," ",124],["T_VARIABLE","$offset",124],["T_WHITESPACE"," ",124],"=",["T_WHITESPACE"," ",124],["T_STRING","null",124],")",";",["T_WHITESPACE","\n\n    ",124],["T_DOC_COMMENT","\/**\n     * Returns an array containing all of the result set rows.\n     *\n     * @param int $style OPTIONAL Fetch mode.\n     * @param int $col   OPTIONAL Column number, if fetch mode is by column.\n     * @return array Collection of rows, each in a format by the fetch mode.\n     * @throws Zend_Db_Statement_Exception\n     *\/",126],["T_WHITESPACE","\n    ",133],["T_PUBLIC","public",134],["T_WHITESPACE"," ",134],["T_FUNCTION","function",134],["T_WHITESPACE"," ",134],["T_STRING","fetchAll",134],"(",["T_VARIABLE","$style",134],["T_WHITESPACE"," ",134],"=",["T_WHITESPACE"," ",134],["T_STRING","null",134],",",["T_WHITESPACE"," ",134],["T_VARIABLE","$col",134],["T_WHITESPACE"," ",134],"=",["T_WHITESPACE"," ",134],["T_STRING","null",134],")",";",["T_WHITESPACE","\n\n    ",134],["T_DOC_COMMENT","\/**\n     * Returns a single column from the next row of a result set.\n     *\n     * @param int $col OPTIONAL Position of the column to fetch.\n     * @return string\n     * @throws Zend_Db_Statement_Exception\n     *\/",136],["T_WHITESPACE","\n    ",142],["T_PUBLIC","public",143],["T_WHITESPACE"," ",143],["T_FUNCTION","function",143],["T_WHITESPACE"," ",143],["T_STRING","fetchColumn",143],"(",["T_VARIABLE","$col",143],["T_WHITESPACE"," ",143],"=",["T_WHITESPACE"," ",143],["T_LNUMBER","0",143],")",";",["T_WHITESPACE","\n\n    ",143],["T_DOC_COMMENT","\/**\n     * Fetches the next row and returns it as an object.\n     *\n     * @param string $class  OPTIONAL Name of the class to create.\n     * @param array  $config OPTIONAL Constructor arguments for the class.\n     * @return mixed One object instance of the specified class.\n     * @throws Zend_Db_Statement_Exception\n     *\/",145],["T_WHITESPACE","\n    ",152],["T_PUBLIC","public",153],["T_WHITESPACE"," ",153],["T_FUNCTION","function",153],["T_WHITESPACE"," ",153],["T_STRING","fetchObject",153],"(",["T_VARIABLE","$class",153],["T_WHITESPACE"," ",153],"=",["T_WHITESPACE"," ",153],["T_CONSTANT_ENCAPSED_STRING","'stdClass'",153],",",["T_WHITESPACE"," ",153],["T_ARRAY","array",153],["T_WHITESPACE"," ",153],["T_VARIABLE","$config",153],["T_WHITESPACE"," ",153],"=",["T_WHITESPACE"," ",153],["T_ARRAY","array",153],"(",")",")",";",["T_WHITESPACE","\n\n    ",153],["T_DOC_COMMENT","\/**\n     * Retrieve a statement attribute.\n     *\n     * @param string $key Attribute name.\n     * @return mixed      Attribute value.\n     * @throws Zend_Db_Statement_Exception\n     *\/",155],["T_WHITESPACE","\n    ",161],["T_PUBLIC","public",162],["T_WHITESPACE"," ",162],["T_FUNCTION","function",162],["T_WHITESPACE"," ",162],["T_STRING","getAttribute",162],"(",["T_VARIABLE","$key",162],")",";",["T_WHITESPACE","\n\n    ",162],["T_DOC_COMMENT","\/**\n     * Retrieves the next rowset (result set) for a SQL statement that has\n     * multiple result sets.  An example is a stored procedure that returns\n     * the results of multiple queries.\n     *\n     * @return bool\n     * @throws Zend_Db_Statement_Exception\n     *\/",164],["T_WHITESPACE","\n    ",171],["T_PUBLIC","public",172],["T_WHITESPACE"," ",172],["T_FUNCTION","function",172],["T_WHITESPACE"," ",172],["T_STRING","nextRowset",172],"(",")",";",["T_WHITESPACE","\n\n    ",172],["T_DOC_COMMENT","\/**\n     * Returns the number of rows affected by the execution of the\n     * last INSERT, DELETE, or UPDATE statement executed by this\n     * statement object.\n     *\n     * @return int     The number of rows affected.\n     * @throws Zend_Db_Statement_Exception\n     *\/",174],["T_WHITESPACE","\n    ",181],["T_PUBLIC","public",182],["T_WHITESPACE"," ",182],["T_FUNCTION","function",182],["T_WHITESPACE"," ",182],["T_STRING","rowCount",182],"(",")",";",["T_WHITESPACE","\n\n    ",182],["T_DOC_COMMENT","\/**\n     * Set a statement attribute.\n     *\n     * @param string $key Attribute name.\n     * @param mixed  $val Attribute value.\n     * @return bool\n     * @throws Zend_Db_Statement_Exception\n     *\/",184],["T_WHITESPACE","\n    ",191],["T_PUBLIC","public",192],["T_WHITESPACE"," ",192],["T_FUNCTION","function",192],["T_WHITESPACE"," ",192],["T_STRING","setAttribute",192],"(",["T_VARIABLE","$key",192],",",["T_WHITESPACE"," ",192],["T_VARIABLE","$val",192],")",";",["T_WHITESPACE","\n\n    ",192],["T_DOC_COMMENT","\/**\n     * Set the default fetch mode for this statement.\n     *\n     * @param int   $mode The fetch mode.\n     * @return bool\n     * @throws Zend_Db_Statement_Exception\n     *\/",194],["T_WHITESPACE","\n    ",200],["T_PUBLIC","public",201],["T_WHITESPACE"," ",201],["T_FUNCTION","function",201],["T_WHITESPACE"," ",201],["T_STRING","setFetchMode",201],"(",["T_VARIABLE","$mode",201],")",";",["T_WHITESPACE","\n\n",201],"}",["T_WHITESPACE","\n",203]]