[["T_OPEN_TAG","<?php\n",1],["T_DOC_COMMENT","\/**\n * Zend Framework\n *\n * LICENSE\n *\n * This source file is subject to the new BSD license that is bundled\n * with this package in the file LICENSE.txt.\n * It is also available through the world-wide-web at this URL:\n * http:\/\/framework.zend.com\/license\/new-bsd\n * If you did not receive a copy of the license and are unable to\n * obtain it through the world-wide-web, please send an email\n * to license@zend.com so we can send you a copy immediately.\n *\n * @category   Zend\n * @package    Zend_Db\n * @subpackage Expr\n * @copyright  Copyright (c) 2005-2015 Zend Technologies USA Inc. (http:\/\/www.zend.com)\n * @license    http:\/\/framework.zend.com\/license\/new-bsd     New BSD License\n * @version    $Id$\n *\/",2],["T_WHITESPACE","\n\n\n",21],["T_DOC_COMMENT","\/**\n * Class for SQL SELECT fragments.\n *\n * This class simply holds a string, so that fragments of SQL statements can be\n * distinguished from identifiers and values that should be implicitly quoted\n * when interpolated into SQL statements.\n *\n * For example, when specifying a primary key value when inserting into a new\n * row, some RDBMS brands may require you to use an expression to generate the\n * new value of a sequence.  If this expression is treated as an identifier,\n * it will be quoted and the expression will not be evaluated.  Another example\n * is that you can use Zend_Db_Expr in the Zend_Db_Select::order() method to\n * order by an expression instead of simply a column name.\n *\n * The way this works is that in each context in which a column name can be\n * specified to methods of Zend_Db classes, if the value is an instance of\n * Zend_Db_Expr instead of a plain string, then the expression is not quoted.\n * If it is a plain string, it is assumed to be a plain column name.\n *\n * @category   Zend\n * @package    Zend_Db\n * @subpackage Expr\n * @copyright  Copyright (c) 2005-2015 Zend Technologies USA Inc. (http:\/\/www.zend.com)\n * @license    http:\/\/framework.zend.com\/license\/new-bsd     New BSD License\n *\/",24],["T_WHITESPACE","\n",48],["T_CLASS","class",49],["T_WHITESPACE"," ",49],["T_STRING","Zend_Db_Expr",49],["T_WHITESPACE","\n",49],"{",["T_WHITESPACE","\n    ",50],["T_DOC_COMMENT","\/**\n     * Storage for the SQL expression.\n     *\n     * @var string\n     *\/",51],["T_WHITESPACE","\n    ",55],["T_PROTECTED","protected",56],["T_WHITESPACE"," ",56],["T_VARIABLE","$_expression",56],";",["T_WHITESPACE","\n\n    ",56],["T_DOC_COMMENT","\/**\n     * Instantiate an expression, which is just a string stored as\n     * an instance member variable.\n     *\n     * @param string $expression The string containing a SQL expression.\n     *\/",58],["T_WHITESPACE","\n    ",63],["T_PUBLIC","public",64],["T_WHITESPACE"," ",64],["T_FUNCTION","function",64],["T_WHITESPACE"," ",64],["T_STRING","__construct",64],"(",["T_VARIABLE","$expression",64],")",["T_WHITESPACE","\n    ",64],"{",["T_WHITESPACE","\n        ",65],["T_VARIABLE","$this",66],["T_OBJECT_OPERATOR","->",66],["T_STRING","_expression",66],["T_WHITESPACE"," ",66],"=",["T_WHITESPACE"," ",66],["T_STRING_CAST","(string)",66],["T_WHITESPACE"," ",66],["T_VARIABLE","$expression",66],";",["T_WHITESPACE","\n    ",66],"}",["T_WHITESPACE","\n\n    ",67],["T_DOC_COMMENT","\/**\n     * @return string The string of the SQL expression stored in this object.\n     *\/",69],["T_WHITESPACE","\n    ",71],["T_PUBLIC","public",72],["T_WHITESPACE"," ",72],["T_FUNCTION","function",72],["T_WHITESPACE"," ",72],["T_STRING","__toString",72],"(",")",["T_WHITESPACE","\n    ",72],"{",["T_WHITESPACE","\n        ",73],["T_RETURN","return",74],["T_WHITESPACE"," ",74],["T_VARIABLE","$this",74],["T_OBJECT_OPERATOR","->",74],["T_STRING","_expression",74],";",["T_WHITESPACE","\n    ",74],"}",["T_WHITESPACE","\n\n",75],"}",["T_WHITESPACE","\n",77]]