[["T_OPEN_TAG","<?php\n",1],["T_DOC_COMMENT","\/**\n * Zend Framework\n *\n * LICENSE\n *\n * This source file is subject to the new BSD license that is bundled\n * with this package in the file LICENSE.txt.\n * It is also available through the world-wide-web at this URL:\n * http:\/\/framework.zend.com\/license\/new-bsd\n * If you did not receive a copy of the license and are unable to\n * obtain it through the world-wide-web, please send an email\n * to license@zend.com so we can send you a copy immediately.\n *\n * @category   Zend\n * @package    Zend_Registry\n * @copyright  Copyright (c) 2005-2015 Zend Technologies USA Inc. (http:\/\/www.zend.com)\n * @license    http:\/\/framework.zend.com\/license\/new-bsd     New BSD License\n * @version    $Id$\n *\/",2],["T_WHITESPACE","\n\n",20],["T_DOC_COMMENT","\/**\n * Generic storage class helps to manage global data.\n *\n * @category   Zend\n * @package    Zend_Registry\n * @copyright  Copyright (c) 2005-2015 Zend Technologies USA Inc. (http:\/\/www.zend.com)\n * @license    http:\/\/framework.zend.com\/license\/new-bsd     New BSD License\n *\/",22],["T_WHITESPACE","\n",29],["T_CLASS","class",30],["T_WHITESPACE"," ",30],["T_STRING","Zend_Registry",30],["T_WHITESPACE"," ",30],["T_EXTENDS","extends",30],["T_WHITESPACE"," ",30],["T_STRING","ArrayObject",30],["T_WHITESPACE","\n",30],"{",["T_WHITESPACE","\n    ",31],["T_DOC_COMMENT","\/**\n     * Class name of the singleton registry object.\n     * @var string\n     *\/",32],["T_WHITESPACE","\n    ",35],["T_PRIVATE","private",36],["T_WHITESPACE"," ",36],["T_STATIC","static",36],["T_WHITESPACE"," ",36],["T_VARIABLE","$_registryClassName",36],["T_WHITESPACE"," ",36],"=",["T_WHITESPACE"," ",36],["T_CONSTANT_ENCAPSED_STRING","'Zend_Registry'",36],";",["T_WHITESPACE","\n\n    ",36],["T_DOC_COMMENT","\/**\n     * Registry object provides storage for shared objects.\n     * @var Zend_Registry\n     *\/",38],["T_WHITESPACE","\n    ",41],["T_PRIVATE","private",42],["T_WHITESPACE"," ",42],["T_STATIC","static",42],["T_WHITESPACE"," ",42],["T_VARIABLE","$_registry",42],["T_WHITESPACE"," ",42],"=",["T_WHITESPACE"," ",42],["T_STRING","null",42],";",["T_WHITESPACE","\n\n    ",42],["T_DOC_COMMENT","\/**\n     * Retrieves the default registry instance.\n     *\n     * @return Zend_Registry\n     *\/",44],["T_WHITESPACE","\n    ",48],["T_PUBLIC","public",49],["T_WHITESPACE"," ",49],["T_STATIC","static",49],["T_WHITESPACE"," ",49],["T_FUNCTION","function",49],["T_WHITESPACE"," ",49],["T_STRING","getInstance",49],"(",")",["T_WHITESPACE","\n    ",49],"{",["T_WHITESPACE","\n        ",50],["T_IF","if",51],["T_WHITESPACE"," ",51],"(",["T_STRING","self",51],["T_DOUBLE_COLON","::",51],["T_VARIABLE","$_registry",51],["T_WHITESPACE"," ",51],["T_IS_IDENTICAL","===",51],["T_WHITESPACE"," ",51],["T_STRING","null",51],")",["T_WHITESPACE"," ",51],"{",["T_WHITESPACE","\n            ",51],["T_STRING","self",52],["T_DOUBLE_COLON","::",52],["T_STRING","init",52],"(",")",";",["T_WHITESPACE","\n        ",52],"}",["T_WHITESPACE","\n\n        ",53],["T_RETURN","return",55],["T_WHITESPACE"," ",55],["T_STRING","self",55],["T_DOUBLE_COLON","::",55],["T_VARIABLE","$_registry",55],";",["T_WHITESPACE","\n    ",55],"}",["T_WHITESPACE","\n\n    ",56],["T_DOC_COMMENT","\/**\n     * Set the default registry instance to a specified instance.\n     *\n     * @param Zend_Registry $registry An object instance of type Zend_Registry,\n     *   or a subclass.\n     * @return void\n     * @throws Zend_Exception if registry is already initialized.\n     *\/",58],["T_WHITESPACE","\n    ",65],["T_PUBLIC","public",66],["T_WHITESPACE"," ",66],["T_STATIC","static",66],["T_WHITESPACE"," ",66],["T_FUNCTION","function",66],["T_WHITESPACE"," ",66],["T_STRING","setInstance",66],"(",["T_STRING","Zend_Registry",66],["T_WHITESPACE"," ",66],["T_VARIABLE","$registry",66],")",["T_WHITESPACE","\n    ",66],"{",["T_WHITESPACE","\n        ",67],["T_IF","if",68],["T_WHITESPACE"," ",68],"(",["T_STRING","self",68],["T_DOUBLE_COLON","::",68],["T_VARIABLE","$_registry",68],["T_WHITESPACE"," ",68],["T_IS_NOT_IDENTICAL","!==",68],["T_WHITESPACE"," ",68],["T_STRING","null",68],")",["T_WHITESPACE"," ",68],"{",["T_WHITESPACE","\n            ",68],["T_COMMENT","#require_once 'Zend\/Exception.php';\n",69],["T_WHITESPACE","            ",70],["T_THROW","throw",70],["T_WHITESPACE"," ",70],["T_NEW","new",70],["T_WHITESPACE"," ",70],["T_STRING","Zend_Exception",70],"(",["T_CONSTANT_ENCAPSED_STRING","'Registry is already initialized'",70],")",";",["T_WHITESPACE","\n        ",70],"}",["T_WHITESPACE","\n\n        ",71],["T_STRING","self",73],["T_DOUBLE_COLON","::",73],["T_STRING","setClassName",73],"(",["T_STRING","get_class",73],"(",["T_VARIABLE","$registry",73],")",")",";",["T_WHITESPACE","\n        ",73],["T_STRING","self",74],["T_DOUBLE_COLON","::",74],["T_VARIABLE","$_registry",74],["T_WHITESPACE"," ",74],"=",["T_WHITESPACE"," ",74],["T_VARIABLE","$registry",74],";",["T_WHITESPACE","\n    ",74],"}",["T_WHITESPACE","\n\n    ",75],["T_DOC_COMMENT","\/**\n     * Initialize the default registry instance.\n     *\n     * @return void\n     *\/",77],["T_WHITESPACE","\n    ",81],["T_PROTECTED","protected",82],["T_WHITESPACE"," ",82],["T_STATIC","static",82],["T_WHITESPACE"," ",82],["T_FUNCTION","function",82],["T_WHITESPACE"," ",82],["T_STRING","init",82],"(",")",["T_WHITESPACE","\n    ",82],"{",["T_WHITESPACE","\n        ",83],["T_STRING","self",84],["T_DOUBLE_COLON","::",84],["T_STRING","setInstance",84],"(",["T_NEW","new",84],["T_WHITESPACE"," ",84],["T_STRING","self",84],["T_DOUBLE_COLON","::",84],["T_VARIABLE","$_registryClassName",84],"(",")",")",";",["T_WHITESPACE","\n    ",84],"}",["T_WHITESPACE","\n\n    ",85],["T_DOC_COMMENT","\/**\n     * Set the class name to use for the default registry instance.\n     * Does not affect the currently initialized instance, it only applies\n     * for the next time you instantiate.\n     *\n     * @param string $registryClassName\n     * @return void\n     * @throws Zend_Exception if the registry is initialized or if the\n     *   class name is not valid.\n     *\/",87],["T_WHITESPACE","\n    ",96],["T_PUBLIC","public",97],["T_WHITESPACE"," ",97],["T_STATIC","static",97],["T_WHITESPACE"," ",97],["T_FUNCTION","function",97],["T_WHITESPACE"," ",97],["T_STRING","setClassName",97],"(",["T_VARIABLE","$registryClassName",97],["T_WHITESPACE"," ",97],"=",["T_WHITESPACE"," ",97],["T_CONSTANT_ENCAPSED_STRING","'Zend_Registry'",97],")",["T_WHITESPACE","\n    ",97],"{",["T_WHITESPACE","\n        ",98],["T_IF","if",99],["T_WHITESPACE"," ",99],"(",["T_STRING","self",99],["T_DOUBLE_COLON","::",99],["T_VARIABLE","$_registry",99],["T_WHITESPACE"," ",99],["T_IS_NOT_IDENTICAL","!==",99],["T_WHITESPACE"," ",99],["T_STRING","null",99],")",["T_WHITESPACE"," ",99],"{",["T_WHITESPACE","\n            ",99],["T_COMMENT","#require_once 'Zend\/Exception.php';\n",100],["T_WHITESPACE","            ",101],["T_THROW","throw",101],["T_WHITESPACE"," ",101],["T_NEW","new",101],["T_WHITESPACE"," ",101],["T_STRING","Zend_Exception",101],"(",["T_CONSTANT_ENCAPSED_STRING","'Registry is already initialized'",101],")",";",["T_WHITESPACE","\n        ",101],"}",["T_WHITESPACE","\n\n        ",102],["T_IF","if",104],["T_WHITESPACE"," ",104],"(","!",["T_STRING","is_string",104],"(",["T_VARIABLE","$registryClassName",104],")",")",["T_WHITESPACE"," ",104],"{",["T_WHITESPACE","\n            ",104],["T_COMMENT","#require_once 'Zend\/Exception.php';\n",105],["T_WHITESPACE","            ",106],["T_THROW","throw",106],["T_WHITESPACE"," ",106],["T_NEW","new",106],["T_WHITESPACE"," ",106],["T_STRING","Zend_Exception",106],"(",["T_CONSTANT_ENCAPSED_STRING","\"Argument is not a class name\"",106],")",";",["T_WHITESPACE","\n        ",106],"}",["T_WHITESPACE","\n\n        ",107],["T_DOC_COMMENT","\/**\n         * @see Zend_Loader\n         *\/",109],["T_WHITESPACE","\n        ",111],["T_IF","if",112],["T_WHITESPACE"," ",112],"(","!",["T_STRING","class_exists",112],"(",["T_VARIABLE","$registryClassName",112],")",")",["T_WHITESPACE"," ",112],"{",["T_WHITESPACE","\n            ",112],["T_COMMENT","#require_once 'Zend\/Loader.php';\n",113],["T_WHITESPACE","            ",114],["T_STRING","Zend_Loader",114],["T_DOUBLE_COLON","::",114],["T_STRING","loadClass",114],"(",["T_VARIABLE","$registryClassName",114],")",";",["T_WHITESPACE","\n        ",114],"}",["T_WHITESPACE","\n\n        ",115],["T_STRING","self",117],["T_DOUBLE_COLON","::",117],["T_VARIABLE","$_registryClassName",117],["T_WHITESPACE"," ",117],"=",["T_WHITESPACE"," ",117],["T_VARIABLE","$registryClassName",117],";",["T_WHITESPACE","\n    ",117],"}",["T_WHITESPACE","\n\n    ",118],["T_DOC_COMMENT","\/**\n     * Unset the default registry instance.\n     * Primarily used in tearDown() in unit tests.\n     * @returns void\n     *\/",120],["T_WHITESPACE","\n    ",124],["T_PUBLIC","public",125],["T_WHITESPACE"," ",125],["T_STATIC","static",125],["T_WHITESPACE"," ",125],["T_FUNCTION","function",125],["T_WHITESPACE"," ",125],["T_STRING","_unsetInstance",125],"(",")",["T_WHITESPACE","\n    ",125],"{",["T_WHITESPACE","\n        ",126],["T_STRING","self",127],["T_DOUBLE_COLON","::",127],["T_VARIABLE","$_registry",127],["T_WHITESPACE"," ",127],"=",["T_WHITESPACE"," ",127],["T_STRING","null",127],";",["T_WHITESPACE","\n    ",127],"}",["T_WHITESPACE","\n\n    ",128],["T_DOC_COMMENT","\/**\n     * getter method, basically same as offsetGet().\n     *\n     * This method can be called from an object of type Zend_Registry, or it\n     * can be called statically.  In the latter case, it uses the default\n     * static instance stored in the class.\n     *\n     * @param string $index - get the value associated with $index\n     * @return mixed\n     * @throws Zend_Exception if no entry is registered for $index.\n     *\/",130],["T_WHITESPACE","\n    ",140],["T_PUBLIC","public",141],["T_WHITESPACE"," ",141],["T_STATIC","static",141],["T_WHITESPACE"," ",141],["T_FUNCTION","function",141],["T_WHITESPACE"," ",141],["T_STRING","get",141],"(",["T_VARIABLE","$index",141],")",["T_WHITESPACE","\n    ",141],"{",["T_WHITESPACE","\n        ",142],["T_VARIABLE","$instance",143],["T_WHITESPACE"," ",143],"=",["T_WHITESPACE"," ",143],["T_STRING","self",143],["T_DOUBLE_COLON","::",143],["T_STRING","getInstance",143],"(",")",";",["T_WHITESPACE","\n\n        ",143],["T_IF","if",145],["T_WHITESPACE"," ",145],"(","!",["T_VARIABLE","$instance",145],["T_OBJECT_OPERATOR","->",145],["T_STRING","offsetExists",145],"(",["T_VARIABLE","$index",145],")",")",["T_WHITESPACE"," ",145],"{",["T_WHITESPACE","\n            ",145],["T_COMMENT","#require_once 'Zend\/Exception.php';\n",146],["T_WHITESPACE","            ",147],["T_THROW","throw",147],["T_WHITESPACE"," ",147],["T_NEW","new",147],["T_WHITESPACE"," ",147],["T_STRING","Zend_Exception",147],"(","\"",["T_ENCAPSED_AND_WHITESPACE","No entry is registered for key '",147],["T_VARIABLE","$index",147],["T_ENCAPSED_AND_WHITESPACE","'",147],"\"",")",";",["T_WHITESPACE","\n        ",147],"}",["T_WHITESPACE","\n\n        ",148],["T_RETURN","return",150],["T_WHITESPACE"," ",150],["T_VARIABLE","$instance",150],["T_OBJECT_OPERATOR","->",150],["T_STRING","offsetGet",150],"(",["T_VARIABLE","$index",150],")",";",["T_WHITESPACE","\n    ",150],"}",["T_WHITESPACE","\n\n    ",151],["T_DOC_COMMENT","\/**\n     * setter method, basically same as offsetSet().\n     *\n     * This method can be called from an object of type Zend_Registry, or it\n     * can be called statically.  In the latter case, it uses the default\n     * static instance stored in the class.\n     *\n     * @param string $index The location in the ArrayObject in which to store\n     *   the value.\n     * @param mixed $value The object to store in the ArrayObject.\n     * @return void\n     *\/",153],["T_WHITESPACE","\n    ",164],["T_PUBLIC","public",165],["T_WHITESPACE"," ",165],["T_STATIC","static",165],["T_WHITESPACE"," ",165],["T_FUNCTION","function",165],["T_WHITESPACE"," ",165],["T_STRING","set",165],"(",["T_VARIABLE","$index",165],",",["T_WHITESPACE"," ",165],["T_VARIABLE","$value",165],")",["T_WHITESPACE","\n    ",165],"{",["T_WHITESPACE","\n        ",166],["T_VARIABLE","$instance",167],["T_WHITESPACE"," ",167],"=",["T_WHITESPACE"," ",167],["T_STRING","self",167],["T_DOUBLE_COLON","::",167],["T_STRING","getInstance",167],"(",")",";",["T_WHITESPACE","\n        ",167],["T_VARIABLE","$instance",168],["T_OBJECT_OPERATOR","->",168],["T_STRING","offsetSet",168],"(",["T_VARIABLE","$index",168],",",["T_WHITESPACE"," ",168],["T_VARIABLE","$value",168],")",";",["T_WHITESPACE","\n    ",168],"}",["T_WHITESPACE","\n\n    ",169],["T_DOC_COMMENT","\/**\n     * Returns TRUE if the $index is a named value in the registry,\n     * or FALSE if $index was not found in the registry.\n     *\n     * @param  string $index\n     * @return boolean\n     *\/",171],["T_WHITESPACE","\n    ",177],["T_PUBLIC","public",178],["T_WHITESPACE"," ",178],["T_STATIC","static",178],["T_WHITESPACE"," ",178],["T_FUNCTION","function",178],["T_WHITESPACE"," ",178],["T_STRING","isRegistered",178],"(",["T_VARIABLE","$index",178],")",["T_WHITESPACE","\n    ",178],"{",["T_WHITESPACE","\n        ",179],["T_IF","if",180],["T_WHITESPACE"," ",180],"(",["T_STRING","self",180],["T_DOUBLE_COLON","::",180],["T_VARIABLE","$_registry",180],["T_WHITESPACE"," ",180],["T_IS_IDENTICAL","===",180],["T_WHITESPACE"," ",180],["T_STRING","null",180],")",["T_WHITESPACE"," ",180],"{",["T_WHITESPACE","\n            ",180],["T_RETURN","return",181],["T_WHITESPACE"," ",181],["T_STRING","false",181],";",["T_WHITESPACE","\n        ",181],"}",["T_WHITESPACE","\n        ",182],["T_RETURN","return",183],["T_WHITESPACE"," ",183],["T_STRING","self",183],["T_DOUBLE_COLON","::",183],["T_VARIABLE","$_registry",183],["T_OBJECT_OPERATOR","->",183],["T_STRING","offsetExists",183],"(",["T_VARIABLE","$index",183],")",";",["T_WHITESPACE","\n    ",183],"}",["T_WHITESPACE","\n\n    ",184],["T_DOC_COMMENT","\/**\n     * Constructs a parent ArrayObject with default\n     * ARRAY_AS_PROPS to allow acces as an object\n     *\n     * @param array $array data array\n     * @param integer $flags ArrayObject flags\n     *\/",186],["T_WHITESPACE","\n    ",192],["T_PUBLIC","public",193],["T_WHITESPACE"," ",193],["T_FUNCTION","function",193],["T_WHITESPACE"," ",193],["T_STRING","__construct",193],"(",["T_VARIABLE","$array",193],["T_WHITESPACE"," ",193],"=",["T_WHITESPACE"," ",193],["T_ARRAY","array",193],"(",")",",",["T_WHITESPACE"," ",193],["T_VARIABLE","$flags",193],["T_WHITESPACE"," ",193],"=",["T_WHITESPACE"," ",193],["T_STRING","parent",193],["T_DOUBLE_COLON","::",193],["T_STRING","ARRAY_AS_PROPS",193],")",["T_WHITESPACE","\n    ",193],"{",["T_WHITESPACE","\n        ",194],["T_STRING","parent",195],["T_DOUBLE_COLON","::",195],["T_STRING","__construct",195],"(",["T_VARIABLE","$array",195],",",["T_WHITESPACE"," ",195],["T_VARIABLE","$flags",195],")",";",["T_WHITESPACE","\n    ",195],"}",["T_WHITESPACE","\n\n    ",196],["T_DOC_COMMENT","\/**\n     * @param string $index\n     * @returns mixed\n     *\n     * Workaround for http:\/\/bugs.php.net\/bug.php?id=40442 (ZF-960).\n     *\/",198],["T_WHITESPACE","\n    ",203],["T_PUBLIC","public",204],["T_WHITESPACE"," ",204],["T_FUNCTION","function",204],["T_WHITESPACE"," ",204],["T_STRING","offsetExists",204],"(",["T_VARIABLE","$index",204],")",["T_WHITESPACE","\n    ",204],"{",["T_WHITESPACE","\n        ",205],["T_RETURN","return",206],["T_WHITESPACE"," ",206],["T_STRING","array_key_exists",206],"(",["T_VARIABLE","$index",206],",",["T_WHITESPACE"," ",206],["T_VARIABLE","$this",206],")",";",["T_WHITESPACE","\n    ",206],"}",["T_WHITESPACE","\n\n",207],"}",["T_WHITESPACE","\n",209]]