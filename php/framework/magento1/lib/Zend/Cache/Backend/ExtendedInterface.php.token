[["T_OPEN_TAG","<?php\n",1],["T_DOC_COMMENT","\/**\n * Zend Framework\n *\n * LICENSE\n *\n * This source file is subject to the new BSD license that is bundled\n * with this package in the file LICENSE.txt.\n * It is also available through the world-wide-web at this URL:\n * http:\/\/framework.zend.com\/license\/new-bsd\n * If you did not receive a copy of the license and are unable to\n * obtain it through the world-wide-web, please send an email\n * to license@zend.com so we can send you a copy immediately.\n *\n * @category   Zend\n * @package    Zend_Cache\n * @subpackage Zend_Cache_Backend\n * @copyright  Copyright (c) 2005-2015 Zend Technologies USA Inc. (http:\/\/www.zend.com)\n * @license    http:\/\/framework.zend.com\/license\/new-bsd     New BSD License\n * @version    $Id$\n *\/",2],["T_WHITESPACE","\n\n",21],["T_DOC_COMMENT","\/**\n * @see Zend_Cache_Backend_Interface\n *\/",23],["T_WHITESPACE","\n",25],["T_COMMENT","#require_once 'Zend\/Cache\/Backend\/Interface.php';\n",26],["T_WHITESPACE","\n",27],["T_DOC_COMMENT","\/**\n * @package    Zend_Cache\n * @subpackage Zend_Cache_Backend\n * @copyright  Copyright (c) 2005-2015 Zend Technologies USA Inc. (http:\/\/www.zend.com)\n * @license    http:\/\/framework.zend.com\/license\/new-bsd     New BSD License\n *\/",28],["T_WHITESPACE","\n",33],["T_INTERFACE","interface",34],["T_WHITESPACE"," ",34],["T_STRING","Zend_Cache_Backend_ExtendedInterface",34],["T_WHITESPACE"," ",34],["T_EXTENDS","extends",34],["T_WHITESPACE"," ",34],["T_STRING","Zend_Cache_Backend_Interface",34],["T_WHITESPACE","\n",34],"{",["T_WHITESPACE","\n\n    ",35],["T_DOC_COMMENT","\/**\n     * Return an array of stored cache ids\n     *\n     * @return array array of stored cache ids (string)\n     *\/",37],["T_WHITESPACE","\n    ",41],["T_PUBLIC","public",42],["T_WHITESPACE"," ",42],["T_FUNCTION","function",42],["T_WHITESPACE"," ",42],["T_STRING","getIds",42],"(",")",";",["T_WHITESPACE","\n\n    ",42],["T_DOC_COMMENT","\/**\n     * Return an array of stored tags\n     *\n     * @return array array of stored tags (string)\n     *\/",44],["T_WHITESPACE","\n    ",48],["T_PUBLIC","public",49],["T_WHITESPACE"," ",49],["T_FUNCTION","function",49],["T_WHITESPACE"," ",49],["T_STRING","getTags",49],"(",")",";",["T_WHITESPACE","\n\n    ",49],["T_DOC_COMMENT","\/**\n     * Return an array of stored cache ids which match given tags\n     *\n     * In case of multiple tags, a logical AND is made between tags\n     *\n     * @param array $tags array of tags\n     * @return array array of matching cache ids (string)\n     *\/",51],["T_WHITESPACE","\n    ",58],["T_PUBLIC","public",59],["T_WHITESPACE"," ",59],["T_FUNCTION","function",59],["T_WHITESPACE"," ",59],["T_STRING","getIdsMatchingTags",59],"(",["T_VARIABLE","$tags",59],["T_WHITESPACE"," ",59],"=",["T_WHITESPACE"," ",59],["T_ARRAY","array",59],"(",")",")",";",["T_WHITESPACE","\n\n    ",59],["T_DOC_COMMENT","\/**\n     * Return an array of stored cache ids which don't match given tags\n     *\n     * In case of multiple tags, a logical OR is made between tags\n     *\n     * @param array $tags array of tags\n     * @return array array of not matching cache ids (string)\n     *\/",61],["T_WHITESPACE","\n    ",68],["T_PUBLIC","public",69],["T_WHITESPACE"," ",69],["T_FUNCTION","function",69],["T_WHITESPACE"," ",69],["T_STRING","getIdsNotMatchingTags",69],"(",["T_VARIABLE","$tags",69],["T_WHITESPACE"," ",69],"=",["T_WHITESPACE"," ",69],["T_ARRAY","array",69],"(",")",")",";",["T_WHITESPACE","\n\n    ",69],["T_DOC_COMMENT","\/**\n     * Return an array of stored cache ids which match any given tags\n     *\n     * In case of multiple tags, a logical AND is made between tags\n     *\n     * @param array $tags array of tags\n     * @return array array of any matching cache ids (string)\n     *\/",71],["T_WHITESPACE","\n    ",78],["T_PUBLIC","public",79],["T_WHITESPACE"," ",79],["T_FUNCTION","function",79],["T_WHITESPACE"," ",79],["T_STRING","getIdsMatchingAnyTags",79],"(",["T_VARIABLE","$tags",79],["T_WHITESPACE"," ",79],"=",["T_WHITESPACE"," ",79],["T_ARRAY","array",79],"(",")",")",";",["T_WHITESPACE","\n\n    ",79],["T_DOC_COMMENT","\/**\n     * Return the filling percentage of the backend storage\n     *\n     * @return int integer between 0 and 100\n     *\/",81],["T_WHITESPACE","\n    ",85],["T_PUBLIC","public",86],["T_WHITESPACE"," ",86],["T_FUNCTION","function",86],["T_WHITESPACE"," ",86],["T_STRING","getFillingPercentage",86],"(",")",";",["T_WHITESPACE","\n\n    ",86],["T_DOC_COMMENT","\/**\n     * Return an array of metadatas for the given cache id\n     *\n     * The array must include these keys :\n     * - expire : the expire timestamp\n     * - tags : a string array of tags\n     * - mtime : timestamp of last modification time\n     *\n     * @param string $id cache id\n     * @return array array of metadatas (false if the cache id is not found)\n     *\/",88],["T_WHITESPACE","\n    ",98],["T_PUBLIC","public",99],["T_WHITESPACE"," ",99],["T_FUNCTION","function",99],["T_WHITESPACE"," ",99],["T_STRING","getMetadatas",99],"(",["T_VARIABLE","$id",99],")",";",["T_WHITESPACE","\n\n    ",99],["T_DOC_COMMENT","\/**\n     * Give (if possible) an extra lifetime to the given cache id\n     *\n     * @param string $id cache id\n     * @param int $extraLifetime\n     * @return boolean true if ok\n     *\/",101],["T_WHITESPACE","\n    ",107],["T_PUBLIC","public",108],["T_WHITESPACE"," ",108],["T_FUNCTION","function",108],["T_WHITESPACE"," ",108],["T_STRING","touch",108],"(",["T_VARIABLE","$id",108],",",["T_WHITESPACE"," ",108],["T_VARIABLE","$extraLifetime",108],")",";",["T_WHITESPACE","\n\n    ",108],["T_DOC_COMMENT","\/**\n     * Return an associative array of capabilities (booleans) of the backend\n     *\n     * The array must include these keys :\n     * - automatic_cleaning (is automating cleaning necessary)\n     * - tags (are tags supported)\n     * - expired_read (is it possible to read expired cache records\n     *                 (for doNotTestCacheValidity option for example))\n     * - priority does the backend deal with priority when saving\n     * - infinite_lifetime (is infinite lifetime can work with this backend)\n     * - get_list (is it possible to get the list of cache ids and the complete list of tags)\n     *\n     * @return array associative of with capabilities\n     *\/",110],["T_WHITESPACE","\n    ",123],["T_PUBLIC","public",124],["T_WHITESPACE"," ",124],["T_FUNCTION","function",124],["T_WHITESPACE"," ",124],["T_STRING","getCapabilities",124],"(",")",";",["T_WHITESPACE","\n\n",124],"}",["T_WHITESPACE","\n",126]]