[["T_OPEN_TAG","<?php\n",1],["T_DOC_COMMENT","\/**\n * Zend Framework\n *\n * LICENSE\n *\n * This source file is subject to the new BSD license that is bundled\n * with this package in the file LICENSE.txt.\n * It is also available through the world-wide-web at this URL:\n * http:\/\/framework.zend.com\/license\/new-bsd\n * If you did not receive a copy of the license and are unable to\n * obtain it through the world-wide-web, please send an email\n * to license@zend.com so we can send you a copy immediately.\n *\n * @category   Zend\n * @package    Zend_Pdf\n * @subpackage FileParser\n * @copyright  Copyright (c) 2005-2015 Zend Technologies USA Inc. (http:\/\/www.zend.com)\n * @license    http:\/\/framework.zend.com\/license\/new-bsd     New BSD License\n * @version    $Id$\n *\/",2],["T_WHITESPACE","\n\n",21],["T_DOC_COMMENT","\/**\n * Abstract helper class for {@link Zend_Pdf_FileParser} that provides the\n * data source for parsing.\n *\n * Concrete subclasses allow for parsing of in-memory, filesystem, and other\n * sources through a common API. These subclasses also take care of error\n * handling and other mundane tasks.\n *\n * Subclasses must implement at minimum {@link __construct()},\n * {@link __destruct()}, {@link readBytes()}, and {@link readAllBytes()}.\n * Subclasses should also override {@link moveToOffset()} and\n * {@link __toString()} as appropriate.\n *\n * @package    Zend_Pdf\n * @subpackage FileParser\n * @copyright  Copyright (c) 2005-2015 Zend Technologies USA Inc. (http:\/\/www.zend.com)\n * @license    http:\/\/framework.zend.com\/license\/new-bsd     New BSD License\n *\/",23],["T_WHITESPACE","\n",40],["T_ABSTRACT","abstract",41],["T_WHITESPACE"," ",41],["T_CLASS","class",41],["T_WHITESPACE"," ",41],["T_STRING","Zend_Pdf_FileParserDataSource",41],["T_WHITESPACE","\n",41],"{",["T_WHITESPACE","\n  ",42],["T_COMMENT","\/**** Instance Variables ****\/",43],["T_WHITESPACE","\n\n\n    ",43],["T_DOC_COMMENT","\/**\n     * Total size in bytes of the data source.\n     * @var integer\n     *\/",46],["T_WHITESPACE","\n    ",49],["T_PROTECTED","protected",50],["T_WHITESPACE"," ",50],["T_VARIABLE","$_size",50],["T_WHITESPACE"," ",50],"=",["T_WHITESPACE"," ",50],["T_LNUMBER","0",50],";",["T_WHITESPACE","\n\n    ",50],["T_DOC_COMMENT","\/**\n     * Byte offset of the current read position within the data source.\n     * @var integer\n     *\/",52],["T_WHITESPACE","\n    ",55],["T_PROTECTED","protected",56],["T_WHITESPACE"," ",56],["T_VARIABLE","$_offset",56],["T_WHITESPACE"," ",56],"=",["T_WHITESPACE"," ",56],["T_LNUMBER","0",56],";",["T_WHITESPACE","\n\n\n\n  ",56],["T_COMMENT","\/**** Public Interface ****\/",60],["T_WHITESPACE","\n\n\n  ",60],["T_COMMENT","\/* Abstract Methods *\/",63],["T_WHITESPACE","\n\n    ",63],["T_DOC_COMMENT","\/**\n     * Object destructor. Closes the data source.\n     *\n     * May also perform cleanup tasks such as deleting temporary files.\n     *\/",65],["T_WHITESPACE","\n    ",69],["T_ABSTRACT","abstract",70],["T_WHITESPACE"," ",70],["T_PUBLIC","public",70],["T_WHITESPACE"," ",70],["T_FUNCTION","function",70],["T_WHITESPACE"," ",70],["T_STRING","__destruct",70],"(",")",";",["T_WHITESPACE","\n\n    ",70],["T_DOC_COMMENT","\/**\n     * Returns the specified number of raw bytes from the data source at the\n     * byte offset of the current read position.\n     *\n     * Must advance the read position by the number of bytes read by updating\n     * $this->_offset.\n     *\n     * Throws an exception if there is insufficient data to completely fulfill\n     * the request or if an error occurs.\n     *\n     * @param integer $byteCount Number of bytes to read.\n     * @return string\n     * @throws Zend_Pdf_Exception\n     *\/",72],["T_WHITESPACE","\n    ",85],["T_ABSTRACT","abstract",86],["T_WHITESPACE"," ",86],["T_PUBLIC","public",86],["T_WHITESPACE"," ",86],["T_FUNCTION","function",86],["T_WHITESPACE"," ",86],["T_STRING","readBytes",86],"(",["T_VARIABLE","$byteCount",86],")",";",["T_WHITESPACE","\n\n    ",86],["T_DOC_COMMENT","\/**\n     * Returns the entire contents of the data source as a string.\n     *\n     * This method may be called at any time and so must preserve the byte\n     * offset of the read position, both through $this->_offset and whatever\n     * other additional pointers (such as the seek position of a file pointer)\n     * that might be used.\n     *\n     * @return string\n     *\/",88],["T_WHITESPACE","\n    ",97],["T_ABSTRACT","abstract",98],["T_WHITESPACE"," ",98],["T_PUBLIC","public",98],["T_WHITESPACE"," ",98],["T_FUNCTION","function",98],["T_WHITESPACE"," ",98],["T_STRING","readAllBytes",98],"(",")",";",["T_WHITESPACE","\n\n\n  ",98],["T_COMMENT","\/* Object Magic Methods *\/",101],["T_WHITESPACE","\n\n    ",101],["T_DOC_COMMENT","\/**\n     * Returns a description of the object for debugging purposes.\n     *\n     * Subclasses should override this method to provide a more specific\n     * description of the actual object being represented.\n     *\n     * @return string\n     *\/",103],["T_WHITESPACE","\n    ",110],["T_PUBLIC","public",111],["T_WHITESPACE"," ",111],["T_FUNCTION","function",111],["T_WHITESPACE"," ",111],["T_STRING","__toString",111],"(",")",["T_WHITESPACE","\n    ",111],"{",["T_WHITESPACE","\n        ",112],["T_RETURN","return",113],["T_WHITESPACE"," ",113],["T_STRING","get_class",113],"(",["T_VARIABLE","$this",113],")",";",["T_WHITESPACE","\n    ",113],"}",["T_WHITESPACE","\n\n\n  ",114],["T_COMMENT","\/* Accessors *\/",117],["T_WHITESPACE","\n\n    ",117],["T_DOC_COMMENT","\/**\n     * Returns the byte offset of the current read position within the data\n     * source.\n     *\n     * @return integer\n     *\/",119],["T_WHITESPACE","\n    ",124],["T_PUBLIC","public",125],["T_WHITESPACE"," ",125],["T_FUNCTION","function",125],["T_WHITESPACE"," ",125],["T_STRING","getOffset",125],"(",")",["T_WHITESPACE","\n    ",125],"{",["T_WHITESPACE","\n        ",126],["T_RETURN","return",127],["T_WHITESPACE"," ",127],["T_VARIABLE","$this",127],["T_OBJECT_OPERATOR","->",127],["T_STRING","_offset",127],";",["T_WHITESPACE","\n    ",127],"}",["T_WHITESPACE","\n\n    ",128],["T_DOC_COMMENT","\/**\n     * Returns the total size in bytes of the data source.\n     *\n     * @return integer\n     *\/",130],["T_WHITESPACE","\n    ",134],["T_PUBLIC","public",135],["T_WHITESPACE"," ",135],["T_FUNCTION","function",135],["T_WHITESPACE"," ",135],["T_STRING","getSize",135],"(",")",["T_WHITESPACE","\n    ",135],"{",["T_WHITESPACE","\n        ",136],["T_RETURN","return",137],["T_WHITESPACE"," ",137],["T_VARIABLE","$this",137],["T_OBJECT_OPERATOR","->",137],["T_STRING","_size",137],";",["T_WHITESPACE","\n    ",137],"}",["T_WHITESPACE","\n\n\n  ",138],["T_COMMENT","\/* Primitive Methods *\/",141],["T_WHITESPACE","\n\n    ",141],["T_DOC_COMMENT","\/**\n     * Moves the current read position to the specified byte offset.\n     *\n     * Throws an exception you attempt to move before the beginning or beyond\n     * the end of the data source.\n     *\n     * If a subclass needs to perform additional tasks (such as performing a\n     * fseek() on a filesystem source), it should do so after calling this\n     * parent method.\n     *\n     * @param integer $offset Destination byte offset.\n     * @throws Zend_Pdf_Exception\n     *\/",143],["T_WHITESPACE","\n    ",155],["T_PUBLIC","public",156],["T_WHITESPACE"," ",156],["T_FUNCTION","function",156],["T_WHITESPACE"," ",156],["T_STRING","moveToOffset",156],"(",["T_VARIABLE","$offset",156],")",["T_WHITESPACE","\n    ",156],"{",["T_WHITESPACE","\n        ",157],["T_IF","if",158],["T_WHITESPACE"," ",158],"(",["T_VARIABLE","$this",158],["T_OBJECT_OPERATOR","->",158],["T_STRING","_offset",158],["T_WHITESPACE"," ",158],["T_IS_EQUAL","==",158],["T_WHITESPACE"," ",158],["T_VARIABLE","$offset",158],")",["T_WHITESPACE"," ",158],"{",["T_WHITESPACE","\n            ",158],["T_RETURN","return",159],";",["T_WHITESPACE","    ",159],["T_COMMENT","\/\/ Not moving; do nothing.\n",159],["T_WHITESPACE","        ",160],"}",["T_WHITESPACE","\n        ",160],["T_IF","if",161],["T_WHITESPACE"," ",161],"(",["T_VARIABLE","$offset",161],["T_WHITESPACE"," ",161],"<",["T_WHITESPACE"," ",161],["T_LNUMBER","0",161],")",["T_WHITESPACE"," ",161],"{",["T_WHITESPACE","\n            ",161],["T_COMMENT","#require_once 'Zend\/Pdf\/Exception.php';\n",162],["T_WHITESPACE","            ",163],["T_THROW","throw",163],["T_WHITESPACE"," ",163],["T_NEW","new",163],["T_WHITESPACE"," ",163],["T_STRING","Zend_Pdf_Exception",163],"(",["T_CONSTANT_ENCAPSED_STRING","'Attempt to move before start of data source'",163],",",["T_WHITESPACE","\n                                         ",163],["T_STRING","Zend_Pdf_Exception",164],["T_DOUBLE_COLON","::",164],["T_STRING","MOVE_BEFORE_START_OF_FILE",164],")",";",["T_WHITESPACE","\n        ",164],"}",["T_WHITESPACE","\n        ",165],["T_IF","if",166],["T_WHITESPACE"," ",166],"(",["T_VARIABLE","$offset",166],["T_WHITESPACE"," ",166],["T_IS_GREATER_OR_EQUAL",">=",166],["T_WHITESPACE"," ",166],["T_VARIABLE","$this",166],["T_OBJECT_OPERATOR","->",166],["T_STRING","_size",166],")",["T_WHITESPACE"," ",166],"{",["T_WHITESPACE","    ",166],["T_COMMENT","\/\/ Offsets are zero-based.\n",166],["T_WHITESPACE","            ",167],["T_COMMENT","#require_once 'Zend\/Pdf\/Exception.php';\n",167],["T_WHITESPACE","            ",168],["T_THROW","throw",168],["T_WHITESPACE"," ",168],["T_NEW","new",168],["T_WHITESPACE"," ",168],["T_STRING","Zend_Pdf_Exception",168],"(",["T_CONSTANT_ENCAPSED_STRING","'Attempt to move beyond end of data source'",168],",",["T_WHITESPACE","\n                                         ",168],["T_STRING","Zend_Pdf_Exception",169],["T_DOUBLE_COLON","::",169],["T_STRING","MOVE_BEYOND_END_OF_FILE",169],")",";",["T_WHITESPACE","\n        ",169],"}",["T_WHITESPACE","\n        ",170],["T_VARIABLE","$this",171],["T_OBJECT_OPERATOR","->",171],["T_STRING","_offset",171],["T_WHITESPACE"," ",171],"=",["T_WHITESPACE"," ",171],["T_VARIABLE","$offset",171],";",["T_WHITESPACE","\n    ",171],"}",["T_WHITESPACE","\n\n    ",172],["T_DOC_COMMENT","\/**\n     * Shifts the current read position within the data source by the specified\n     * number of bytes.\n     *\n     * You may move forward (positive numbers) or backward (negative numbers).\n     * Throws an exception you attempt to move before the beginning or beyond\n     * the end of the data source.\n     *\n     * @param integer $byteCount Number of bytes to skip.\n     * @throws Zend_Pdf_Exception\n     *\/",174],["T_WHITESPACE","\n    ",184],["T_PUBLIC","public",185],["T_WHITESPACE"," ",185],["T_FUNCTION","function",185],["T_WHITESPACE"," ",185],["T_STRING","skipBytes",185],"(",["T_VARIABLE","$byteCount",185],")",["T_WHITESPACE","\n    ",185],"{",["T_WHITESPACE","\n        ",186],["T_VARIABLE","$this",187],["T_OBJECT_OPERATOR","->",187],["T_STRING","moveToOffset",187],"(",["T_VARIABLE","$this",187],["T_OBJECT_OPERATOR","->",187],["T_STRING","_offset",187],["T_WHITESPACE"," ",187],"+",["T_WHITESPACE"," ",187],["T_VARIABLE","$byteCount",187],")",";",["T_WHITESPACE","\n    ",187],"}",["T_WHITESPACE","\n",188],"}",["T_WHITESPACE","\n",189]]