[["T_OPEN_TAG","<?php\n",1],["T_DOC_COMMENT","\/**\n * Zend Framework\n *\n * LICENSE\n *\n * This source file is subject to the new BSD license that is bundled\n * with this package in the file LICENSE.txt.\n * It is also available through the world-wide-web at this URL:\n * http:\/\/framework.zend.com\/license\/new-bsd\n * If you did not receive a copy of the license and are unable to\n * obtain it through the world-wide-web, please send an email\n * to license@zend.com so we can send you a copy immediately.\n *\n * @category   Zend\n * @package    Zend_Pdf\n * @subpackage Fonts\n * @copyright  Copyright (c) 2005-2015 Zend Technologies USA Inc. (http:\/\/www.zend.com)\n * @license    http:\/\/framework.zend.com\/license\/new-bsd     New BSD License\n * @version    $Id$\n *\/",2],["T_WHITESPACE","\n\n\n",21],["T_DOC_COMMENT","\/** Internally used classes *\/",24],["T_WHITESPACE","\n",24],["T_COMMENT","#require_once 'Zend\/Pdf\/Element\/Array.php';\n",25],["T_COMMENT","#require_once 'Zend\/Pdf\/Element\/Name.php';\n",26],["T_WHITESPACE","\n\n",27],["T_DOC_COMMENT","\/** Zend_Pdf_Resource_Font *\/",29],["T_WHITESPACE","\n",29],["T_COMMENT","#require_once 'Zend\/Pdf\/Resource\/Font.php';\n",30],["T_WHITESPACE","\n",31],["T_DOC_COMMENT","\/**\n * Adobe PDF composite fonts implementation\n *\n * A composite font is one whose glyphs are obtained from other fonts or from fontlike\n * objects called CIDFonts ({@link Zend_Pdf_Resource_Font_CidFont}), organized hierarchically.\n * In PDF, a composite font is represented by a font dictionary whose Subtype value is Type0;\n * this is also called a Type 0 font (the Type 0 font at the top level of the hierarchy is the\n * root font).\n *\n * In PDF, a Type 0 font is a CID-keyed font.\n *\n * CID-keyed fonts provide effective method to operate with multi-byte character encodings.\n *\n * The CID-keyed font architecture specifies the external representation of certain font programs,\n * called CMap and CIDFont files, along with some conventions for combining and using those files.\n *\n * A CID-keyed font is the combination of a CMap with one or more CIDFonts, simple fonts,\n * or composite fonts containing glyph descriptions.\n *\n * The term 'CID-keyed font' reflects the fact that CID (character identifier) numbers\n * are used to index and access the glyph descriptions in the font.\n *\n *\n * Font objects should be normally be obtained from the factory methods\n * {@link Zend_Pdf_Font::fontWithName} and {@link Zend_Pdf_Font::fontWithPath}.\n *\n * @package    Zend_Pdf\n * @subpackage Fonts\n * @copyright  Copyright (c) 2005-2015 Zend Technologies USA Inc. (http:\/\/www.zend.com)\n * @license    http:\/\/framework.zend.com\/license\/new-bsd     New BSD License\n *\/",32],["T_WHITESPACE","\n",62],["T_CLASS","class",63],["T_WHITESPACE"," ",63],["T_STRING","Zend_Pdf_Resource_Font_Type0",63],["T_WHITESPACE"," ",63],["T_EXTENDS","extends",63],["T_WHITESPACE"," ",63],["T_STRING","Zend_Pdf_Resource_Font",63],["T_WHITESPACE","\n",63],"{",["T_WHITESPACE","\n    ",64],["T_DOC_COMMENT","\/**\n     * Descendant CIDFont\n     *\n     * @var Zend_Pdf_Resource_Font_CidFont\n     *\/",65],["T_WHITESPACE","\n    ",69],["T_PRIVATE","private",70],["T_WHITESPACE"," ",70],["T_VARIABLE","$_descendantFont",70],";",["T_WHITESPACE","\n\n\n    ",70],["T_DOC_COMMENT","\/**\n     * Generate ToUnicode character map data\n     *\n     * @return string\n     *\/",73],["T_WHITESPACE","\n    ",77],["T_STATIC","static",78],["T_WHITESPACE"," ",78],["T_PRIVATE","private",78],["T_WHITESPACE"," ",78],["T_FUNCTION","function",78],["T_WHITESPACE"," ",78],["T_STRING","getToUnicodeCMapData",78],"(",")",["T_WHITESPACE","\n    ",78],"{",["T_WHITESPACE","\n        ",79],["T_RETURN","return",80],["T_WHITESPACE"," ",80],["T_CONSTANT_ENCAPSED_STRING","'\/CIDInit \/ProcSet findresource begin '",80],["T_WHITESPACE","              ",80],".",["T_WHITESPACE"," ",80],["T_CONSTANT_ENCAPSED_STRING","\"\\n\"",80],["T_WHITESPACE","\n             ",80],".",["T_WHITESPACE"," ",81],["T_CONSTANT_ENCAPSED_STRING","'12 dict begin '",81],["T_WHITESPACE","                                     ",81],".",["T_WHITESPACE"," ",81],["T_CONSTANT_ENCAPSED_STRING","\"\\n\"",81],["T_WHITESPACE","\n             ",81],".",["T_WHITESPACE"," ",82],["T_CONSTANT_ENCAPSED_STRING","'begincmap '",82],["T_WHITESPACE","                                         ",82],".",["T_WHITESPACE"," ",82],["T_CONSTANT_ENCAPSED_STRING","\"\\n\"",82],["T_WHITESPACE","\n             ",82],".",["T_WHITESPACE"," ",83],["T_CONSTANT_ENCAPSED_STRING","'\/CIDSystemInfo '",83],["T_WHITESPACE","                                    ",83],".",["T_WHITESPACE"," ",83],["T_CONSTANT_ENCAPSED_STRING","\"\\n\"",83],["T_WHITESPACE","\n             ",83],".",["T_WHITESPACE"," ",84],["T_CONSTANT_ENCAPSED_STRING","'<<\/Registry (Adobe) '",84],["T_WHITESPACE","                               ",84],".",["T_WHITESPACE"," ",84],["T_CONSTANT_ENCAPSED_STRING","\"\\n\"",84],["T_WHITESPACE","\n             ",84],".",["T_WHITESPACE"," ",85],["T_CONSTANT_ENCAPSED_STRING","'\/Ordering (UCS) '",85],["T_WHITESPACE","                                   ",85],".",["T_WHITESPACE"," ",85],["T_CONSTANT_ENCAPSED_STRING","\"\\n\"",85],["T_WHITESPACE","\n             ",85],".",["T_WHITESPACE"," ",86],["T_CONSTANT_ENCAPSED_STRING","'\/Supplement 0'",86],["T_WHITESPACE","                                      ",86],".",["T_WHITESPACE"," ",86],["T_CONSTANT_ENCAPSED_STRING","\"\\n\"",86],["T_WHITESPACE","\n             ",86],".",["T_WHITESPACE"," ",87],["T_CONSTANT_ENCAPSED_STRING","'>> def'",87],["T_WHITESPACE","                                             ",87],".",["T_WHITESPACE"," ",87],["T_CONSTANT_ENCAPSED_STRING","\"\\n\"",87],["T_WHITESPACE","\n             ",87],".",["T_WHITESPACE"," ",88],["T_CONSTANT_ENCAPSED_STRING","'\/CMapName \/Adobe-Identity-UCS def '",88],["T_WHITESPACE","                 ",88],".",["T_WHITESPACE"," ",88],["T_CONSTANT_ENCAPSED_STRING","\"\\n\"",88],["T_WHITESPACE","\n             ",88],".",["T_WHITESPACE"," ",89],["T_CONSTANT_ENCAPSED_STRING","'\/CMapType 2 def '",89],["T_WHITESPACE","                                   ",89],".",["T_WHITESPACE"," ",89],["T_CONSTANT_ENCAPSED_STRING","\"\\n\"",89],["T_WHITESPACE","\n             ",89],".",["T_WHITESPACE"," ",90],["T_CONSTANT_ENCAPSED_STRING","'1 begincodespacerange'",90],["T_WHITESPACE","                              ",90],".",["T_WHITESPACE"," ",90],["T_CONSTANT_ENCAPSED_STRING","\"\\n\"",90],["T_WHITESPACE","\n             ",90],".",["T_WHITESPACE"," ",91],["T_CONSTANT_ENCAPSED_STRING","'<0000> <FFFF> '",91],["T_WHITESPACE","                                     ",91],".",["T_WHITESPACE"," ",91],["T_CONSTANT_ENCAPSED_STRING","\"\\n\"",91],["T_WHITESPACE","\n             ",91],".",["T_WHITESPACE"," ",92],["T_CONSTANT_ENCAPSED_STRING","'endcodespacerange '",92],["T_WHITESPACE","                                 ",92],".",["T_WHITESPACE"," ",92],["T_CONSTANT_ENCAPSED_STRING","\"\\n\"",92],["T_WHITESPACE","\n             ",92],".",["T_WHITESPACE"," ",93],["T_CONSTANT_ENCAPSED_STRING","'1 beginbfrange '",93],["T_WHITESPACE","                                    ",93],".",["T_WHITESPACE"," ",93],["T_CONSTANT_ENCAPSED_STRING","\"\\n\"",93],["T_WHITESPACE","\n             ",93],".",["T_WHITESPACE"," ",94],["T_CONSTANT_ENCAPSED_STRING","'<0000> <FFFF> <0000> '",94],["T_WHITESPACE","                              ",94],".",["T_WHITESPACE"," ",94],["T_CONSTANT_ENCAPSED_STRING","\"\\n\"",94],["T_WHITESPACE","\n             ",94],".",["T_WHITESPACE"," ",95],["T_CONSTANT_ENCAPSED_STRING","'endbfrange '",95],["T_WHITESPACE","                                        ",95],".",["T_WHITESPACE"," ",95],["T_CONSTANT_ENCAPSED_STRING","\"\\n\"",95],["T_WHITESPACE","\n             ",95],".",["T_WHITESPACE"," ",96],["T_CONSTANT_ENCAPSED_STRING","'endcmap '",96],["T_WHITESPACE","                                           ",96],".",["T_WHITESPACE"," ",96],["T_CONSTANT_ENCAPSED_STRING","\"\\n\"",96],["T_WHITESPACE","\n             ",96],".",["T_WHITESPACE"," ",97],["T_CONSTANT_ENCAPSED_STRING","'CMapName currentdict \/CMap defineresource pop '",97],["T_WHITESPACE","     ",97],".",["T_WHITESPACE"," ",97],["T_CONSTANT_ENCAPSED_STRING","\"\\n\"",97],["T_WHITESPACE","\n             ",97],".",["T_WHITESPACE"," ",98],["T_CONSTANT_ENCAPSED_STRING","'end '",98],["T_WHITESPACE","\n             ",98],".",["T_WHITESPACE"," ",99],["T_CONSTANT_ENCAPSED_STRING","'end '",99],";",["T_WHITESPACE","\n            ",99],"}",["T_WHITESPACE","\n\n    ",100],["T_DOC_COMMENT","\/**\n     * Object constructor\n     *\n     *\/",102],["T_WHITESPACE","\n    ",105],["T_PUBLIC","public",106],["T_WHITESPACE"," ",106],["T_FUNCTION","function",106],["T_WHITESPACE"," ",106],["T_STRING","__construct",106],"(",["T_STRING","Zend_Pdf_Resource_Font_CidFont",106],["T_WHITESPACE"," ",106],["T_VARIABLE","$descendantFont",106],")",["T_WHITESPACE","\n    ",106],"{",["T_WHITESPACE","\n        ",107],["T_STRING","parent",108],["T_DOUBLE_COLON","::",108],["T_STRING","__construct",108],"(",")",";",["T_WHITESPACE","\n\n        ",108],["T_VARIABLE","$this",110],["T_OBJECT_OPERATOR","->",110],["T_STRING","_objectFactory",110],["T_OBJECT_OPERATOR","->",110],["T_STRING","attach",110],"(",["T_VARIABLE","$descendantFont",110],["T_OBJECT_OPERATOR","->",110],["T_STRING","getFactory",110],"(",")",")",";",["T_WHITESPACE","\n\n        ",110],["T_VARIABLE","$this",112],["T_OBJECT_OPERATOR","->",112],["T_STRING","_fontType",112],["T_WHITESPACE","       ",112],"=",["T_WHITESPACE"," ",112],["T_STRING","Zend_Pdf_Font",112],["T_DOUBLE_COLON","::",112],["T_STRING","TYPE_TYPE_0",112],";",["T_WHITESPACE","\n        ",112],["T_VARIABLE","$this",113],["T_OBJECT_OPERATOR","->",113],["T_STRING","_descendantFont",113],["T_WHITESPACE"," ",113],"=",["T_WHITESPACE"," ",113],["T_VARIABLE","$descendantFont",113],";",["T_WHITESPACE","\n\n\n        ",113],["T_VARIABLE","$this",116],["T_OBJECT_OPERATOR","->",116],["T_STRING","_fontNames",116],["T_WHITESPACE","    ",116],"=",["T_WHITESPACE"," ",116],["T_VARIABLE","$descendantFont",116],["T_OBJECT_OPERATOR","->",116],["T_STRING","getFontNames",116],"(",")",";",["T_WHITESPACE","\n\n        ",116],["T_VARIABLE","$this",118],["T_OBJECT_OPERATOR","->",118],["T_STRING","_isBold",118],["T_WHITESPACE","       ",118],"=",["T_WHITESPACE"," ",118],["T_VARIABLE","$descendantFont",118],["T_OBJECT_OPERATOR","->",118],["T_STRING","isBold",118],"(",")",";",["T_WHITESPACE","\n        ",118],["T_VARIABLE","$this",119],["T_OBJECT_OPERATOR","->",119],["T_STRING","_isItalic",119],["T_WHITESPACE","     ",119],"=",["T_WHITESPACE"," ",119],["T_VARIABLE","$descendantFont",119],["T_OBJECT_OPERATOR","->",119],["T_STRING","isItalic",119],"(",")",";",["T_WHITESPACE","\n        ",119],["T_VARIABLE","$this",120],["T_OBJECT_OPERATOR","->",120],["T_STRING","_isMonospaced",120],["T_WHITESPACE"," ",120],"=",["T_WHITESPACE"," ",120],["T_VARIABLE","$descendantFont",120],["T_OBJECT_OPERATOR","->",120],["T_STRING","isMonospace",120],"(",")",";",["T_WHITESPACE","\n\n        ",120],["T_VARIABLE","$this",122],["T_OBJECT_OPERATOR","->",122],["T_STRING","_underlinePosition",122],["T_WHITESPACE","  ",122],"=",["T_WHITESPACE"," ",122],["T_VARIABLE","$descendantFont",122],["T_OBJECT_OPERATOR","->",122],["T_STRING","getUnderlinePosition",122],"(",")",";",["T_WHITESPACE","\n        ",122],["T_VARIABLE","$this",123],["T_OBJECT_OPERATOR","->",123],["T_STRING","_underlineThickness",123],["T_WHITESPACE"," ",123],"=",["T_WHITESPACE"," ",123],["T_VARIABLE","$descendantFont",123],["T_OBJECT_OPERATOR","->",123],["T_STRING","getUnderlineThickness",123],"(",")",";",["T_WHITESPACE","\n        ",123],["T_VARIABLE","$this",124],["T_OBJECT_OPERATOR","->",124],["T_STRING","_strikePosition",124],["T_WHITESPACE","     ",124],"=",["T_WHITESPACE"," ",124],["T_VARIABLE","$descendantFont",124],["T_OBJECT_OPERATOR","->",124],["T_STRING","getStrikePosition",124],"(",")",";",["T_WHITESPACE","\n        ",124],["T_VARIABLE","$this",125],["T_OBJECT_OPERATOR","->",125],["T_STRING","_strikeThickness",125],["T_WHITESPACE","    ",125],"=",["T_WHITESPACE"," ",125],["T_VARIABLE","$descendantFont",125],["T_OBJECT_OPERATOR","->",125],["T_STRING","getStrikeThickness",125],"(",")",";",["T_WHITESPACE","\n\n        ",125],["T_VARIABLE","$this",127],["T_OBJECT_OPERATOR","->",127],["T_STRING","_unitsPerEm",127],["T_WHITESPACE"," ",127],"=",["T_WHITESPACE"," ",127],["T_VARIABLE","$descendantFont",127],["T_OBJECT_OPERATOR","->",127],["T_STRING","getUnitsPerEm",127],"(",")",";",["T_WHITESPACE","\n\n        ",127],["T_VARIABLE","$this",129],["T_OBJECT_OPERATOR","->",129],["T_STRING","_ascent",129],["T_WHITESPACE","  ",129],"=",["T_WHITESPACE"," ",129],["T_VARIABLE","$descendantFont",129],["T_OBJECT_OPERATOR","->",129],["T_STRING","getAscent",129],"(",")",";",["T_WHITESPACE","\n        ",129],["T_VARIABLE","$this",130],["T_OBJECT_OPERATOR","->",130],["T_STRING","_descent",130],["T_WHITESPACE"," ",130],"=",["T_WHITESPACE"," ",130],["T_VARIABLE","$descendantFont",130],["T_OBJECT_OPERATOR","->",130],["T_STRING","getDescent",130],"(",")",";",["T_WHITESPACE","\n        ",130],["T_VARIABLE","$this",131],["T_OBJECT_OPERATOR","->",131],["T_STRING","_lineGap",131],["T_WHITESPACE"," ",131],"=",["T_WHITESPACE"," ",131],["T_VARIABLE","$descendantFont",131],["T_OBJECT_OPERATOR","->",131],["T_STRING","getLineGap",131],"(",")",";",["T_WHITESPACE","\n\n\n        ",131],["T_VARIABLE","$this",134],["T_OBJECT_OPERATOR","->",134],["T_STRING","_resource",134],["T_OBJECT_OPERATOR","->",134],["T_STRING","Subtype",134],["T_WHITESPACE","         ",134],"=",["T_WHITESPACE"," ",134],["T_NEW","new",134],["T_WHITESPACE"," ",134],["T_STRING","Zend_Pdf_Element_Name",134],"(",["T_CONSTANT_ENCAPSED_STRING","'Type0'",134],")",";",["T_WHITESPACE","\n        ",134],["T_VARIABLE","$this",135],["T_OBJECT_OPERATOR","->",135],["T_STRING","_resource",135],["T_OBJECT_OPERATOR","->",135],["T_STRING","BaseFont",135],["T_WHITESPACE","        ",135],"=",["T_WHITESPACE"," ",135],["T_NEW","new",135],["T_WHITESPACE"," ",135],["T_STRING","Zend_Pdf_Element_Name",135],"(",["T_VARIABLE","$descendantFont",135],["T_OBJECT_OPERATOR","->",135],["T_STRING","getResource",135],"(",")",["T_OBJECT_OPERATOR","->",135],["T_STRING","BaseFont",135],["T_OBJECT_OPERATOR","->",135],["T_STRING","value",135],")",";",["T_WHITESPACE","\n        ",135],["T_VARIABLE","$this",136],["T_OBJECT_OPERATOR","->",136],["T_STRING","_resource",136],["T_OBJECT_OPERATOR","->",136],["T_STRING","DescendantFonts",136],["T_WHITESPACE"," ",136],"=",["T_WHITESPACE"," ",136],["T_NEW","new",136],["T_WHITESPACE"," ",136],["T_STRING","Zend_Pdf_Element_Array",136],"(",["T_ARRAY","array",136],"(",["T_WHITESPACE"," ",136],["T_VARIABLE","$descendantFont",136],["T_OBJECT_OPERATOR","->",136],["T_STRING","getResource",136],"(",")",["T_WHITESPACE"," ",136],")",")",";",["T_WHITESPACE","\n        ",136],["T_VARIABLE","$this",137],["T_OBJECT_OPERATOR","->",137],["T_STRING","_resource",137],["T_OBJECT_OPERATOR","->",137],["T_STRING","Encoding",137],["T_WHITESPACE","        ",137],"=",["T_WHITESPACE"," ",137],["T_NEW","new",137],["T_WHITESPACE"," ",137],["T_STRING","Zend_Pdf_Element_Name",137],"(",["T_CONSTANT_ENCAPSED_STRING","'Identity-H'",137],")",";",["T_WHITESPACE","\n\n        ",137],["T_VARIABLE","$toUnicode",139],["T_WHITESPACE"," ",139],"=",["T_WHITESPACE"," ",139],["T_VARIABLE","$this",139],["T_OBJECT_OPERATOR","->",139],["T_STRING","_objectFactory",139],["T_OBJECT_OPERATOR","->",139],["T_STRING","newStreamObject",139],"(",["T_STRING","self",139],["T_DOUBLE_COLON","::",139],["T_STRING","getToUnicodeCMapData",139],"(",")",")",";",["T_WHITESPACE","\n        ",139],["T_VARIABLE","$this",140],["T_OBJECT_OPERATOR","->",140],["T_STRING","_resource",140],["T_OBJECT_OPERATOR","->",140],["T_STRING","ToUnicode",140],["T_WHITESPACE"," ",140],"=",["T_WHITESPACE"," ",140],["T_VARIABLE","$toUnicode",140],";",["T_WHITESPACE","\n\n    ",140],"}",["T_WHITESPACE","\n\n    ",142],["T_DOC_COMMENT","\/**\n     * Returns an array of glyph numbers corresponding to the Unicode characters.\n     *\n     * Zend_Pdf uses 'Identity-H' encoding for Type 0 fonts.\n     * So we don't need to perform any conversion\n     *\n     * See also {@link glyphNumberForCharacter()}.\n     *\n     * @param array $characterCodes Array of Unicode character codes (code points).\n     * @return array Array of glyph numbers.\n     *\/",144],["T_WHITESPACE","\n    ",154],["T_PUBLIC","public",155],["T_WHITESPACE"," ",155],["T_FUNCTION","function",155],["T_WHITESPACE"," ",155],["T_STRING","glyphNumbersForCharacters",155],"(",["T_VARIABLE","$characterCodes",155],")",["T_WHITESPACE","\n    ",155],"{",["T_WHITESPACE","\n        ",156],["T_RETURN","return",157],["T_WHITESPACE"," ",157],["T_VARIABLE","$characterCodes",157],";",["T_WHITESPACE","\n    ",157],"}",["T_WHITESPACE","\n\n    ",158],["T_DOC_COMMENT","\/**\n     * Returns the glyph number corresponding to the Unicode character.\n     *\n     * Zend_Pdf uses 'Identity-H' encoding for Type 0 fonts.\n     * So we don't need to perform any conversion\n     *\n     * @param integer $characterCode Unicode character code (code point).\n     * @return integer Glyph number.\n     *\/",160],["T_WHITESPACE","\n    ",168],["T_PUBLIC","public",169],["T_WHITESPACE"," ",169],["T_FUNCTION","function",169],["T_WHITESPACE"," ",169],["T_STRING","glyphNumberForCharacter",169],"(",["T_VARIABLE","$characterCode",169],")",["T_WHITESPACE","\n    ",169],"{",["T_WHITESPACE","\n        ",170],["T_RETURN","return",171],["T_WHITESPACE"," ",171],["T_VARIABLE","$characterCode",171],";",["T_WHITESPACE","\n    ",171],"}",["T_WHITESPACE","\n\n    ",172],["T_DOC_COMMENT","\/**\n     * Returns a number between 0 and 1 inclusive that indicates the percentage\n     * of characters in the string which are covered by glyphs in this font.\n     *\n     * Since no one font will contain glyphs for the entire Unicode character\n     * range, this method can be used to help locate a suitable font when the\n     * actual contents of the string are not known.\n     *\n     * Note that some fonts lie about the characters they support. Additionally,\n     * fonts don't usually contain glyphs for control characters such as tabs\n     * and line breaks, so it is rare that you will get back a full 1.0 score.\n     * The resulting value should be considered informational only.\n     *\n     * @param string $string\n     * @param string $charEncoding (optional) Character encoding of source text.\n     *   If omitted, uses 'current locale'.\n     * @return float\n     *\/",174],["T_WHITESPACE","\n    ",191],["T_PUBLIC","public",192],["T_WHITESPACE"," ",192],["T_FUNCTION","function",192],["T_WHITESPACE"," ",192],["T_STRING","getCoveredPercentage",192],"(",["T_VARIABLE","$string",192],",",["T_WHITESPACE"," ",192],["T_VARIABLE","$charEncoding",192],["T_WHITESPACE"," ",192],"=",["T_WHITESPACE"," ",192],["T_CONSTANT_ENCAPSED_STRING","''",192],")",["T_WHITESPACE","\n    ",192],"{",["T_WHITESPACE","\n        ",193],["T_RETURN","return",194],["T_WHITESPACE"," ",194],["T_VARIABLE","$this",194],["T_OBJECT_OPERATOR","->",194],["T_STRING","_descendantFont",194],["T_OBJECT_OPERATOR","->",194],["T_STRING","getCoveredPercentage",194],"(",["T_VARIABLE","$string",194],",",["T_WHITESPACE"," ",194],["T_VARIABLE","$charEncoding",194],")",";",["T_WHITESPACE","\n    ",194],"}",["T_WHITESPACE","\n\n    ",195],["T_DOC_COMMENT","\/**\n     * Returns the widths of the glyphs.\n     *\n     * The widths are expressed in the font's glyph space. You are responsible\n     * for converting to user space as necessary. See {@link unitsPerEm()}.\n     *\n     * Throws an exception if the glyph number is out of range.\n     *\n     * See also {@link widthForGlyph()}.\n     *\n     * @param array &$glyphNumbers Array of glyph numbers.\n     * @return array Array of glyph widths (integers).\n     * @throws Zend_Pdf_Exception\n     *\/",197],["T_WHITESPACE","\n    ",210],["T_PUBLIC","public",211],["T_WHITESPACE"," ",211],["T_FUNCTION","function",211],["T_WHITESPACE"," ",211],["T_STRING","widthsForGlyphs",211],"(",["T_VARIABLE","$glyphNumbers",211],")",["T_WHITESPACE","\n    ",211],"{",["T_WHITESPACE","\n        ",212],["T_RETURN","return",213],["T_WHITESPACE"," ",213],["T_VARIABLE","$this",213],["T_OBJECT_OPERATOR","->",213],["T_STRING","_descendantFont",213],["T_OBJECT_OPERATOR","->",213],["T_STRING","widthsForChars",213],"(",["T_VARIABLE","$glyphNumbers",213],")",";",["T_WHITESPACE","\n    ",213],"}",["T_WHITESPACE","\n\n    ",214],["T_DOC_COMMENT","\/**\n     * Returns the width of the glyph.\n     *\n     * Like {@link widthsForGlyphs()} but used for one glyph at a time.\n     *\n     * @param integer $glyphNumber\n     * @return integer\n     * @throws Zend_Pdf_Exception\n     *\/",216],["T_WHITESPACE","\n    ",224],["T_PUBLIC","public",225],["T_WHITESPACE"," ",225],["T_FUNCTION","function",225],["T_WHITESPACE"," ",225],["T_STRING","widthForGlyph",225],"(",["T_VARIABLE","$glyphNumber",225],")",["T_WHITESPACE","\n    ",225],"{",["T_WHITESPACE","\n        ",226],["T_RETURN","return",227],["T_WHITESPACE"," ",227],["T_VARIABLE","$this",227],["T_OBJECT_OPERATOR","->",227],["T_STRING","_descendantFont",227],["T_OBJECT_OPERATOR","->",227],["T_STRING","widthForChar",227],"(",["T_VARIABLE","$glyphNumber",227],")",";",["T_WHITESPACE","\n    ",227],"}",["T_WHITESPACE","\n\n    ",228],["T_DOC_COMMENT","\/**\n     * Convert string to the font encoding.\n     *\n     * The method is used to prepare string for text drawing operators\n     *\n     * @param string $string\n     * @param string $charEncoding Character encoding of source text.\n     * @return string\n     *\/",230],["T_WHITESPACE","\n    ",238],["T_PUBLIC","public",239],["T_WHITESPACE"," ",239],["T_FUNCTION","function",239],["T_WHITESPACE"," ",239],["T_STRING","encodeString",239],"(",["T_VARIABLE","$string",239],",",["T_WHITESPACE"," ",239],["T_VARIABLE","$charEncoding",239],")",["T_WHITESPACE","\n    ",239],"{",["T_WHITESPACE","\n        ",240],["T_RETURN","return",241],["T_WHITESPACE"," ",241],["T_STRING","iconv",241],"(",["T_VARIABLE","$charEncoding",241],",",["T_WHITESPACE"," ",241],["T_CONSTANT_ENCAPSED_STRING","'UTF-16BE'",241],",",["T_WHITESPACE"," ",241],["T_VARIABLE","$string",241],")",";",["T_WHITESPACE","\n    ",241],"}",["T_WHITESPACE","\n\n    ",242],["T_DOC_COMMENT","\/**\n     * Convert string from the font encoding.\n     *\n     * The method is used to convert strings retrieved from existing content streams\n     *\n     * @param string $string\n     * @param string $charEncoding Character encoding of resulting text.\n     * @return string\n     *\/",244],["T_WHITESPACE","\n        ",252],["T_PUBLIC","public",253],["T_WHITESPACE"," ",253],["T_FUNCTION","function",253],["T_WHITESPACE"," ",253],["T_STRING","decodeString",253],"(",["T_VARIABLE","$string",253],",",["T_WHITESPACE"," ",253],["T_VARIABLE","$charEncoding",253],")",["T_WHITESPACE","\n    ",253],"{",["T_WHITESPACE","\n        ",254],["T_RETURN","return",255],["T_WHITESPACE"," ",255],["T_STRING","iconv",255],"(",["T_CONSTANT_ENCAPSED_STRING","'UTF-16BE'",255],",",["T_WHITESPACE"," ",255],["T_VARIABLE","$charEncoding",255],",",["T_WHITESPACE"," ",255],["T_VARIABLE","$string",255],")",";",["T_WHITESPACE","\n    ",255],"}",["T_WHITESPACE","\n",256],"}",["T_WHITESPACE","\n",257]]