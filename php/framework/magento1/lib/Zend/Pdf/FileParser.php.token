[["T_OPEN_TAG","<?php\n",1],["T_DOC_COMMENT","\/**\n * Zend Framework\n *\n * LICENSE\n *\n * This source file is subject to the new BSD license that is bundled\n * with this package in the file LICENSE.txt.\n * It is also available through the world-wide-web at this URL:\n * http:\/\/framework.zend.com\/license\/new-bsd\n * If you did not receive a copy of the license and are unable to\n * obtain it through the world-wide-web, please send an email\n * to license@zend.com so we can send you a copy immediately.\n *\n * @category   Zend\n * @package    Zend_Pdf\n * @subpackage FileParser\n * @copyright  Copyright (c) 2005-2015 Zend Technologies USA Inc. (http:\/\/www.zend.com)\n * @license    http:\/\/framework.zend.com\/license\/new-bsd     New BSD License\n * @version    $Id$\n *\/",2],["T_WHITESPACE","\n\n",21],["T_DOC_COMMENT","\/**\n * Abstract utility class for parsing binary files.\n *\n * Provides a library of methods to quickly navigate and extract various data\n * types (signed and unsigned integers, floating- and fixed-point numbers,\n * strings, etc.) from the file.\n *\n * File access is managed via a {@link Zend_Pdf_FileParserDataSource} object.\n * This allows the same parser code to work with many different data sources:\n * in-memory objects, filesystem files, etc.\n *\n * @package    Zend_Pdf\n * @subpackage FileParser\n * @copyright  Copyright (c) 2005-2015 Zend Technologies USA Inc. (http:\/\/www.zend.com)\n * @license    http:\/\/framework.zend.com\/license\/new-bsd     New BSD License\n *\/",23],["T_WHITESPACE","\n",38],["T_ABSTRACT","abstract",39],["T_WHITESPACE"," ",39],["T_CLASS","class",39],["T_WHITESPACE"," ",39],["T_STRING","Zend_Pdf_FileParser",39],["T_WHITESPACE","\n",39],"{",["T_WHITESPACE","\n  ",40],["T_COMMENT","\/**** Class Constants ****\/",41],["T_WHITESPACE","\n\n    ",41],["T_DOC_COMMENT","\/**\n     * Little-endian byte order (0x04 0x03 0x02 0x01).\n     *\/",43],["T_WHITESPACE","\n    ",45],["T_CONST","const",46],["T_WHITESPACE"," ",46],["T_STRING","BYTE_ORDER_LITTLE_ENDIAN",46],["T_WHITESPACE"," ",46],"=",["T_WHITESPACE"," ",46],["T_LNUMBER","0",46],";",["T_WHITESPACE","\n\n    ",46],["T_DOC_COMMENT","\/**\n     * Big-endian byte order (0x01 0x02 0x03 0x04).\n     *\/",48],["T_WHITESPACE","\n    ",50],["T_CONST","const",51],["T_WHITESPACE"," ",51],["T_STRING","BYTE_ORDER_BIG_ENDIAN",51],["T_WHITESPACE","    ",51],"=",["T_WHITESPACE"," ",51],["T_LNUMBER","1",51],";",["T_WHITESPACE","\n\n\n\n  ",51],["T_COMMENT","\/**** Instance Variables ****\/",55],["T_WHITESPACE","\n\n\n    ",55],["T_DOC_COMMENT","\/**\n     * Flag indicating that the file has passed a cursory validation check.\n     * @var boolean\n     *\/",58],["T_WHITESPACE","\n    ",61],["T_PROTECTED","protected",62],["T_WHITESPACE"," ",62],["T_VARIABLE","$_isScreened",62],["T_WHITESPACE"," ",62],"=",["T_WHITESPACE"," ",62],["T_STRING","false",62],";",["T_WHITESPACE","\n\n    ",62],["T_DOC_COMMENT","\/**\n     * Flag indicating that the file has been sucessfully parsed.\n     * @var boolean\n     *\/",64],["T_WHITESPACE","\n    ",67],["T_PROTECTED","protected",68],["T_WHITESPACE"," ",68],["T_VARIABLE","$_isParsed",68],["T_WHITESPACE"," ",68],"=",["T_WHITESPACE"," ",68],["T_STRING","false",68],";",["T_WHITESPACE","\n\n    ",68],["T_DOC_COMMENT","\/**\n     * Object representing the data source to be parsed.\n     * @var Zend_Pdf_FileParserDataSource\n     *\/",70],["T_WHITESPACE","\n    ",73],["T_PROTECTED","protected",74],["T_WHITESPACE"," ",74],["T_VARIABLE","$_dataSource",74],["T_WHITESPACE"," ",74],"=",["T_WHITESPACE"," ",74],["T_STRING","null",74],";",["T_WHITESPACE","\n\n\n\n  ",74],["T_COMMENT","\/**** Public Interface ****\/",78],["T_WHITESPACE","\n\n\n  ",78],["T_COMMENT","\/* Abstract Methods *\/",81],["T_WHITESPACE","\n\n    ",81],["T_DOC_COMMENT","\/**\n     * Performs a cursory check to verify that the binary file is in the expected\n     * format. Intended to quickly weed out obviously bogus files.\n     *\n     * Must set $this->_isScreened to true if successful.\n     *\n     * @throws Zend_Pdf_Exception\n     *\/",83],["T_WHITESPACE","\n    ",90],["T_ABSTRACT","abstract",91],["T_WHITESPACE"," ",91],["T_PUBLIC","public",91],["T_WHITESPACE"," ",91],["T_FUNCTION","function",91],["T_WHITESPACE"," ",91],["T_STRING","screen",91],"(",")",";",["T_WHITESPACE","\n\n    ",91],["T_DOC_COMMENT","\/**\n     * Reads and parses the complete binary file.\n     *\n     * Must set $this->_isParsed to true if successful.\n     *\n     * @throws Zend_Pdf_Exception\n     *\/",93],["T_WHITESPACE","\n    ",99],["T_ABSTRACT","abstract",100],["T_WHITESPACE"," ",100],["T_PUBLIC","public",100],["T_WHITESPACE"," ",100],["T_FUNCTION","function",100],["T_WHITESPACE"," ",100],["T_STRING","parse",100],"(",")",";",["T_WHITESPACE","\n\n\n  ",100],["T_COMMENT","\/* Object Lifecycle *\/",103],["T_WHITESPACE","\n\n    ",103],["T_DOC_COMMENT","\/**\n     * Object constructor.\n     *\n     * Verifies that the data source has been properly initialized.\n     *\n     * @param Zend_Pdf_FileParserDataSource $dataSource\n     * @throws Zend_Pdf_Exception\n     *\/",105],["T_WHITESPACE","\n    ",112],["T_PUBLIC","public",113],["T_WHITESPACE"," ",113],["T_FUNCTION","function",113],["T_WHITESPACE"," ",113],["T_STRING","__construct",113],"(",["T_STRING","Zend_Pdf_FileParserDataSource",113],["T_WHITESPACE"," ",113],["T_VARIABLE","$dataSource",113],")",["T_WHITESPACE","\n    ",113],"{",["T_WHITESPACE","\n        ",114],["T_IF","if",115],["T_WHITESPACE"," ",115],"(",["T_VARIABLE","$dataSource",115],["T_OBJECT_OPERATOR","->",115],["T_STRING","getSize",115],"(",")",["T_WHITESPACE"," ",115],["T_IS_EQUAL","==",115],["T_WHITESPACE"," ",115],["T_LNUMBER","0",115],")",["T_WHITESPACE"," ",115],"{",["T_WHITESPACE","\n            ",115],["T_COMMENT","#require_once 'Zend\/Pdf\/Exception.php';\n",116],["T_WHITESPACE","            ",117],["T_THROW","throw",117],["T_WHITESPACE"," ",117],["T_NEW","new",117],["T_WHITESPACE"," ",117],["T_STRING","Zend_Pdf_Exception",117],"(",["T_CONSTANT_ENCAPSED_STRING","'The data source has not been properly initialized'",117],",",["T_WHITESPACE","\n                                         ",117],["T_STRING","Zend_Pdf_Exception",118],["T_DOUBLE_COLON","::",118],["T_STRING","BAD_DATA_SOURCE",118],")",";",["T_WHITESPACE","\n        ",118],"}",["T_WHITESPACE","\n        ",119],["T_VARIABLE","$this",120],["T_OBJECT_OPERATOR","->",120],["T_STRING","_dataSource",120],["T_WHITESPACE"," ",120],"=",["T_WHITESPACE"," ",120],["T_VARIABLE","$dataSource",120],";",["T_WHITESPACE","\n    ",120],"}",["T_WHITESPACE","\n\n    ",121],["T_DOC_COMMENT","\/**\n     * Object destructor.\n     *\n     * Discards the data source object.\n     *\/",123],["T_WHITESPACE","\n    ",127],["T_PUBLIC","public",128],["T_WHITESPACE"," ",128],["T_FUNCTION","function",128],["T_WHITESPACE"," ",128],["T_STRING","__destruct",128],"(",")",["T_WHITESPACE","\n    ",128],"{",["T_WHITESPACE","\n        ",129],["T_VARIABLE","$this",130],["T_OBJECT_OPERATOR","->",130],["T_STRING","_dataSource",130],["T_WHITESPACE"," ",130],"=",["T_WHITESPACE"," ",130],["T_STRING","null",130],";",["T_WHITESPACE","\n    ",130],"}",["T_WHITESPACE","\n\n\n  ",131],["T_COMMENT","\/* Accessors *\/",134],["T_WHITESPACE","\n\n    ",134],["T_DOC_COMMENT","\/**\n     * Returns true if the file has passed a cursory validation check.\n     *\n     * @return boolean\n     *\/",136],["T_WHITESPACE","\n    ",140],["T_PUBLIC","public",141],["T_WHITESPACE"," ",141],["T_FUNCTION","function",141],["T_WHITESPACE"," ",141],["T_STRING","isScreened",141],"(",")",["T_WHITESPACE","\n    ",141],"{",["T_WHITESPACE","\n        ",142],["T_RETURN","return",143],["T_WHITESPACE"," ",143],["T_VARIABLE","$this",143],["T_OBJECT_OPERATOR","->",143],["T_STRING","_isScreened",143],";",["T_WHITESPACE","\n    ",143],"}",["T_WHITESPACE","\n\n    ",144],["T_DOC_COMMENT","\/**\n     * Returns true if the file has been successfully parsed.\n     *\n     * @return boolean\n     *\/",146],["T_WHITESPACE","\n    ",150],["T_PUBLIC","public",151],["T_WHITESPACE"," ",151],["T_FUNCTION","function",151],["T_WHITESPACE"," ",151],["T_STRING","isParsed",151],"(",")",["T_WHITESPACE","\n    ",151],"{",["T_WHITESPACE","\n        ",152],["T_RETURN","return",153],["T_WHITESPACE"," ",153],["T_VARIABLE","$this",153],["T_OBJECT_OPERATOR","->",153],["T_STRING","_isParsed",153],";",["T_WHITESPACE","\n    ",153],"}",["T_WHITESPACE","\n\n    ",154],["T_DOC_COMMENT","\/**\n     * Returns the data source object representing the file being parsed.\n     *\n     * @return Zend_Pdf_FileParserDataSource\n     *\/",156],["T_WHITESPACE","\n    ",160],["T_PUBLIC","public",161],["T_WHITESPACE"," ",161],["T_FUNCTION","function",161],["T_WHITESPACE"," ",161],["T_STRING","getDataSource",161],"(",")",["T_WHITESPACE","\n    ",161],"{",["T_WHITESPACE","\n        ",162],["T_RETURN","return",163],["T_WHITESPACE"," ",163],["T_VARIABLE","$this",163],["T_OBJECT_OPERATOR","->",163],["T_STRING","_dataSource",163],";",["T_WHITESPACE","\n    ",163],"}",["T_WHITESPACE","\n\n\n  ",164],["T_COMMENT","\/* Primitive Methods *\/",167],["T_WHITESPACE","\n\n    ",167],["T_DOC_COMMENT","\/**\n     * Convenience wrapper for the data source object's moveToOffset() method.\n     *\n     * @param integer $offset Destination byte offset.\n     * @throws Zend_Pdf_Exception\n     *\/",169],["T_WHITESPACE","\n    ",174],["T_PUBLIC","public",175],["T_WHITESPACE"," ",175],["T_FUNCTION","function",175],["T_WHITESPACE"," ",175],["T_STRING","moveToOffset",175],"(",["T_VARIABLE","$offset",175],")",["T_WHITESPACE","\n    ",175],"{",["T_WHITESPACE","\n        ",176],["T_VARIABLE","$this",177],["T_OBJECT_OPERATOR","->",177],["T_STRING","_dataSource",177],["T_OBJECT_OPERATOR","->",177],["T_STRING","moveToOffset",177],"(",["T_VARIABLE","$offset",177],")",";",["T_WHITESPACE","\n    ",177],"}",["T_WHITESPACE","\n\n    ",178],["T_PUBLIC","public",180],["T_WHITESPACE"," ",180],["T_FUNCTION","function",180],["T_WHITESPACE"," ",180],["T_STRING","getOffset",180],"(",")",["T_WHITESPACE"," ",180],"{",["T_WHITESPACE","\n       ",180],["T_RETURN","return",181],["T_WHITESPACE"," ",181],["T_VARIABLE","$this",181],["T_OBJECT_OPERATOR","->",181],["T_STRING","_dataSource",181],["T_OBJECT_OPERATOR","->",181],["T_STRING","getOffset",181],"(",")",";",["T_WHITESPACE","\n    ",181],"}",["T_WHITESPACE","\n\n    ",182],["T_PUBLIC","public",184],["T_WHITESPACE"," ",184],["T_FUNCTION","function",184],["T_WHITESPACE"," ",184],["T_STRING","getSize",184],"(",")",["T_WHITESPACE"," ",184],"{",["T_WHITESPACE","\n       ",184],["T_RETURN","return",185],["T_WHITESPACE"," ",185],["T_VARIABLE","$this",185],["T_OBJECT_OPERATOR","->",185],["T_STRING","_dataSource",185],["T_OBJECT_OPERATOR","->",185],["T_STRING","getSize",185],"(",")",";",["T_WHITESPACE","\n    ",185],"}",["T_WHITESPACE","\n\n    ",186],["T_DOC_COMMENT","\/**\n     * Convenience wrapper for the data source object's readBytes() method.\n     *\n     * @param integer $byteCount Number of bytes to read.\n     * @return string\n     * @throws Zend_Pdf_Exception\n     *\/",188],["T_WHITESPACE","\n    ",194],["T_PUBLIC","public",195],["T_WHITESPACE"," ",195],["T_FUNCTION","function",195],["T_WHITESPACE"," ",195],["T_STRING","readBytes",195],"(",["T_VARIABLE","$byteCount",195],")",["T_WHITESPACE","\n    ",195],"{",["T_WHITESPACE","\n        ",196],["T_RETURN","return",197],["T_WHITESPACE"," ",197],["T_VARIABLE","$this",197],["T_OBJECT_OPERATOR","->",197],["T_STRING","_dataSource",197],["T_OBJECT_OPERATOR","->",197],["T_STRING","readBytes",197],"(",["T_VARIABLE","$byteCount",197],")",";",["T_WHITESPACE","\n    ",197],"}",["T_WHITESPACE","\n\n    ",198],["T_DOC_COMMENT","\/**\n     * Convenience wrapper for the data source object's skipBytes() method.\n     *\n     * @param integer $byteCount Number of bytes to skip.\n     * @throws Zend_Pdf_Exception\n     *\/",200],["T_WHITESPACE","\n    ",205],["T_PUBLIC","public",206],["T_WHITESPACE"," ",206],["T_FUNCTION","function",206],["T_WHITESPACE"," ",206],["T_STRING","skipBytes",206],"(",["T_VARIABLE","$byteCount",206],")",["T_WHITESPACE","\n    ",206],"{",["T_WHITESPACE","\n        ",207],["T_VARIABLE","$this",208],["T_OBJECT_OPERATOR","->",208],["T_STRING","_dataSource",208],["T_OBJECT_OPERATOR","->",208],["T_STRING","skipBytes",208],"(",["T_VARIABLE","$byteCount",208],")",";",["T_WHITESPACE","\n    ",208],"}",["T_WHITESPACE","\n\n\n  ",209],["T_COMMENT","\/* Parser Methods *\/",212],["T_WHITESPACE","\n\n    ",212],["T_DOC_COMMENT","\/**\n     * Reads the signed integer value from the binary file at the current byte\n     * offset.\n     *\n     * Advances the offset by the number of bytes read. Throws an exception if\n     * an error occurs.\n     *\n     * @param integer $size Size of integer in bytes: 1-4\n     * @param integer $byteOrder (optional) Big- or little-endian byte order.\n     *   Use the BYTE_ORDER_ constants defined in {@link Zend_Pdf_FileParser}.\n     *   If omitted, uses big-endian.\n     * @return integer\n     * @throws Zend_Pdf_Exception\n     *\/",214],["T_WHITESPACE","\n    ",227],["T_PUBLIC","public",228],["T_WHITESPACE"," ",228],["T_FUNCTION","function",228],["T_WHITESPACE"," ",228],["T_STRING","readInt",228],"(",["T_VARIABLE","$size",228],",",["T_WHITESPACE"," ",228],["T_VARIABLE","$byteOrder",228],["T_WHITESPACE"," ",228],"=",["T_WHITESPACE"," ",228],["T_STRING","Zend_Pdf_FileParser",228],["T_DOUBLE_COLON","::",228],["T_STRING","BYTE_ORDER_BIG_ENDIAN",228],")",["T_WHITESPACE","\n    ",228],"{",["T_WHITESPACE","\n        ",229],["T_IF","if",230],["T_WHITESPACE"," ",230],"(","(",["T_VARIABLE","$size",230],["T_WHITESPACE"," ",230],"<",["T_WHITESPACE"," ",230],["T_LNUMBER","1",230],")",["T_WHITESPACE"," ",230],["T_BOOLEAN_OR","||",230],["T_WHITESPACE"," ",230],"(",["T_VARIABLE","$size",230],["T_WHITESPACE"," ",230],">",["T_WHITESPACE"," ",230],["T_LNUMBER","4",230],")",")",["T_WHITESPACE"," ",230],"{",["T_WHITESPACE","\n            ",230],["T_COMMENT","#require_once 'Zend\/Pdf\/Exception.php';\n",231],["T_WHITESPACE","            ",232],["T_THROW","throw",232],["T_WHITESPACE"," ",232],["T_NEW","new",232],["T_WHITESPACE"," ",232],["T_STRING","Zend_Pdf_Exception",232],"(","\"",["T_ENCAPSED_AND_WHITESPACE","Invalid signed integer size: ",232],["T_VARIABLE","$size",232],"\"",",",["T_WHITESPACE","\n                                         ",232],["T_STRING","Zend_Pdf_Exception",233],["T_DOUBLE_COLON","::",233],["T_STRING","INVALID_INTEGER_SIZE",233],")",";",["T_WHITESPACE","\n        ",233],"}",["T_WHITESPACE","\n        ",234],["T_VARIABLE","$bytes",235],["T_WHITESPACE"," ",235],"=",["T_WHITESPACE"," ",235],["T_VARIABLE","$this",235],["T_OBJECT_OPERATOR","->",235],["T_STRING","_dataSource",235],["T_OBJECT_OPERATOR","->",235],["T_STRING","readBytes",235],"(",["T_VARIABLE","$size",235],")",";",["T_WHITESPACE","\n        ",235],["T_COMMENT","\/* unpack() will not work for this method because it always works in\n         * the host byte order for signed integers. It also does not allow for\n         * variable integer sizes.\n         *\/",236],["T_WHITESPACE","\n        ",239],["T_IF","if",240],["T_WHITESPACE"," ",240],"(",["T_VARIABLE","$byteOrder",240],["T_WHITESPACE"," ",240],["T_IS_EQUAL","==",240],["T_WHITESPACE"," ",240],["T_STRING","Zend_Pdf_FileParser",240],["T_DOUBLE_COLON","::",240],["T_STRING","BYTE_ORDER_BIG_ENDIAN",240],")",["T_WHITESPACE"," ",240],"{",["T_WHITESPACE","\n            ",240],["T_VARIABLE","$number",241],["T_WHITESPACE"," ",241],"=",["T_WHITESPACE"," ",241],["T_STRING","ord",241],"(",["T_VARIABLE","$bytes",241],"[",["T_LNUMBER","0",241],"]",")",";",["T_WHITESPACE","\n            ",241],["T_IF","if",242],["T_WHITESPACE"," ",242],"(","(",["T_VARIABLE","$number",242],["T_WHITESPACE"," ",242],"&",["T_WHITESPACE"," ",242],["T_LNUMBER","0x80",242],")",["T_WHITESPACE"," ",242],["T_IS_EQUAL","==",242],["T_WHITESPACE"," ",242],["T_LNUMBER","0x80",242],")",["T_WHITESPACE"," ",242],"{",["T_WHITESPACE","\n                ",242],["T_COMMENT","\/* This number is negative. Extract the positive equivalent.\n                 *\/",243],["T_WHITESPACE","\n                ",244],["T_VARIABLE","$number",245],["T_WHITESPACE"," ",245],"=",["T_WHITESPACE"," ",245],"(","~",["T_WHITESPACE"," ",245],["T_VARIABLE","$number",245],")",["T_WHITESPACE"," ",245],"&",["T_WHITESPACE"," ",245],["T_LNUMBER","0xff",245],";",["T_WHITESPACE","\n                ",245],["T_FOR","for",246],["T_WHITESPACE"," ",246],"(",["T_VARIABLE","$i",246],["T_WHITESPACE"," ",246],"=",["T_WHITESPACE"," ",246],["T_LNUMBER","1",246],";",["T_WHITESPACE"," ",246],["T_VARIABLE","$i",246],["T_WHITESPACE"," ",246],"<",["T_WHITESPACE"," ",246],["T_VARIABLE","$size",246],";",["T_WHITESPACE"," ",246],["T_VARIABLE","$i",246],["T_INC","++",246],")",["T_WHITESPACE"," ",246],"{",["T_WHITESPACE","\n                    ",246],["T_VARIABLE","$number",247],["T_WHITESPACE"," ",247],"=",["T_WHITESPACE"," ",247],"(",["T_VARIABLE","$number",247],["T_WHITESPACE"," ",247],["T_SL","<<",247],["T_WHITESPACE"," ",247],["T_LNUMBER","8",247],")",["T_WHITESPACE"," ",247],"|",["T_WHITESPACE"," ",247],"(","(","~",["T_WHITESPACE"," ",247],["T_STRING","ord",247],"(",["T_VARIABLE","$bytes",247],"[",["T_VARIABLE","$i",247],"]",")",")",["T_WHITESPACE"," ",247],"&",["T_WHITESPACE"," ",247],["T_LNUMBER","0xff",247],")",";",["T_WHITESPACE","\n                ",247],"}",["T_WHITESPACE","\n                ",248],["T_COMMENT","\/* Now turn this back into a negative number by taking the\n                 * two's complement (we didn't add one above so won't\n                 * subtract it below). This works reliably on both 32- and\n                 * 64-bit systems.\n                 *\/",249],["T_WHITESPACE","\n                ",253],["T_VARIABLE","$number",254],["T_WHITESPACE"," ",254],"=",["T_WHITESPACE"," ",254],"~",["T_VARIABLE","$number",254],";",["T_WHITESPACE","\n            ",254],"}",["T_WHITESPACE"," ",255],["T_ELSE","else",255],["T_WHITESPACE"," ",255],"{",["T_WHITESPACE","\n                ",255],["T_FOR","for",256],["T_WHITESPACE"," ",256],"(",["T_VARIABLE","$i",256],["T_WHITESPACE"," ",256],"=",["T_WHITESPACE"," ",256],["T_LNUMBER","1",256],";",["T_WHITESPACE"," ",256],["T_VARIABLE","$i",256],["T_WHITESPACE"," ",256],"<",["T_WHITESPACE"," ",256],["T_VARIABLE","$size",256],";",["T_WHITESPACE"," ",256],["T_VARIABLE","$i",256],["T_INC","++",256],")",["T_WHITESPACE"," ",256],"{",["T_WHITESPACE","\n                    ",256],["T_VARIABLE","$number",257],["T_WHITESPACE"," ",257],"=",["T_WHITESPACE"," ",257],"(",["T_VARIABLE","$number",257],["T_WHITESPACE"," ",257],["T_SL","<<",257],["T_WHITESPACE"," ",257],["T_LNUMBER","8",257],")",["T_WHITESPACE"," ",257],"|",["T_WHITESPACE"," ",257],["T_STRING","ord",257],"(",["T_VARIABLE","$bytes",257],"[",["T_VARIABLE","$i",257],"]",")",";",["T_WHITESPACE","\n                ",257],"}",["T_WHITESPACE","\n            ",258],"}",["T_WHITESPACE","\n        ",259],"}",["T_WHITESPACE"," ",260],["T_ELSE","else",260],["T_WHITESPACE"," ",260],["T_IF","if",260],["T_WHITESPACE"," ",260],"(",["T_VARIABLE","$byteOrder",260],["T_WHITESPACE"," ",260],["T_IS_EQUAL","==",260],["T_WHITESPACE"," ",260],["T_STRING","Zend_Pdf_FileParser",260],["T_DOUBLE_COLON","::",260],["T_STRING","BYTE_ORDER_LITTLE_ENDIAN",260],")",["T_WHITESPACE"," ",260],"{",["T_WHITESPACE","\n            ",260],["T_VARIABLE","$number",261],["T_WHITESPACE"," ",261],"=",["T_WHITESPACE"," ",261],["T_STRING","ord",261],"(",["T_VARIABLE","$bytes",261],"[",["T_VARIABLE","$size",261],["T_WHITESPACE"," ",261],"-",["T_WHITESPACE"," ",261],["T_LNUMBER","1",261],"]",")",";",["T_WHITESPACE","\n            ",261],["T_IF","if",262],["T_WHITESPACE"," ",262],"(","(",["T_VARIABLE","$number",262],["T_WHITESPACE"," ",262],"&",["T_WHITESPACE"," ",262],["T_LNUMBER","0x80",262],")",["T_WHITESPACE"," ",262],["T_IS_EQUAL","==",262],["T_WHITESPACE"," ",262],["T_LNUMBER","0x80",262],")",["T_WHITESPACE"," ",262],"{",["T_WHITESPACE","\n                ",262],["T_COMMENT","\/* Negative number. See discussion above.\n                 *\/",263],["T_WHITESPACE","\n                ",264],["T_VARIABLE","$number",265],["T_WHITESPACE"," ",265],"=",["T_WHITESPACE"," ",265],["T_LNUMBER","0",265],";",["T_WHITESPACE","\n                ",265],["T_FOR","for",266],["T_WHITESPACE"," ",266],"(",["T_VARIABLE","$i",266],["T_WHITESPACE"," ",266],"=",["T_WHITESPACE"," ",266],["T_DEC","--",266],["T_VARIABLE","$size",266],";",["T_WHITESPACE"," ",266],["T_VARIABLE","$i",266],["T_WHITESPACE"," ",266],["T_IS_GREATER_OR_EQUAL",">=",266],["T_WHITESPACE"," ",266],["T_LNUMBER","0",266],";",["T_WHITESPACE"," ",266],["T_VARIABLE","$i",266],["T_DEC","--",266],")",["T_WHITESPACE"," ",266],"{",["T_WHITESPACE","\n                    ",266],["T_VARIABLE","$number",267],["T_WHITESPACE"," ",267],["T_OR_EQUAL","|=",267],["T_WHITESPACE"," ",267],"(","(","~",["T_WHITESPACE"," ",267],["T_STRING","ord",267],"(",["T_VARIABLE","$bytes",267],"[",["T_VARIABLE","$i",267],"]",")",")",["T_WHITESPACE"," ",267],"&",["T_WHITESPACE"," ",267],["T_LNUMBER","0xff",267],")",["T_WHITESPACE"," ",267],["T_SL","<<",267],["T_WHITESPACE"," ",267],"(",["T_VARIABLE","$i",267],["T_WHITESPACE"," ",267],"*",["T_WHITESPACE"," ",267],["T_LNUMBER","8",267],")",";",["T_WHITESPACE","\n                ",267],"}",["T_WHITESPACE","\n                ",268],["T_VARIABLE","$number",269],["T_WHITESPACE"," ",269],"=",["T_WHITESPACE"," ",269],"~",["T_VARIABLE","$number",269],";",["T_WHITESPACE","\n            ",269],"}",["T_WHITESPACE"," ",270],["T_ELSE","else",270],["T_WHITESPACE"," ",270],"{",["T_WHITESPACE","\n                ",270],["T_VARIABLE","$number",271],["T_WHITESPACE"," ",271],"=",["T_WHITESPACE"," ",271],["T_LNUMBER","0",271],";",["T_WHITESPACE","\n                ",271],["T_FOR","for",272],["T_WHITESPACE"," ",272],"(",["T_VARIABLE","$i",272],["T_WHITESPACE"," ",272],"=",["T_WHITESPACE"," ",272],["T_DEC","--",272],["T_VARIABLE","$size",272],";",["T_WHITESPACE"," ",272],["T_VARIABLE","$i",272],["T_WHITESPACE"," ",272],["T_IS_GREATER_OR_EQUAL",">=",272],["T_WHITESPACE"," ",272],["T_LNUMBER","0",272],";",["T_WHITESPACE"," ",272],["T_VARIABLE","$i",272],["T_DEC","--",272],")",["T_WHITESPACE"," ",272],"{",["T_WHITESPACE","\n                    ",272],["T_VARIABLE","$number",273],["T_WHITESPACE"," ",273],["T_OR_EQUAL","|=",273],["T_WHITESPACE"," ",273],["T_STRING","ord",273],"(",["T_VARIABLE","$bytes",273],"[",["T_VARIABLE","$i",273],"]",")",["T_WHITESPACE"," ",273],["T_SL","<<",273],["T_WHITESPACE"," ",273],"(",["T_VARIABLE","$i",273],["T_WHITESPACE"," ",273],"*",["T_WHITESPACE"," ",273],["T_LNUMBER","8",273],")",";",["T_WHITESPACE","\n                ",273],"}",["T_WHITESPACE","\n            ",274],"}",["T_WHITESPACE","\n        ",275],"}",["T_WHITESPACE"," ",276],["T_ELSE","else",276],["T_WHITESPACE"," ",276],"{",["T_WHITESPACE","\n            ",276],["T_COMMENT","#require_once 'Zend\/Pdf\/Exception.php';\n",277],["T_WHITESPACE","            ",278],["T_THROW","throw",278],["T_WHITESPACE"," ",278],["T_NEW","new",278],["T_WHITESPACE"," ",278],["T_STRING","Zend_Pdf_Exception",278],"(","\"",["T_ENCAPSED_AND_WHITESPACE","Invalid byte order: ",278],["T_VARIABLE","$byteOrder",278],"\"",",",["T_WHITESPACE","\n                                         ",278],["T_STRING","Zend_Pdf_Exception",279],["T_DOUBLE_COLON","::",279],["T_STRING","INVALID_BYTE_ORDER",279],")",";",["T_WHITESPACE","\n        ",279],"}",["T_WHITESPACE","\n        ",280],["T_RETURN","return",281],["T_WHITESPACE"," ",281],["T_VARIABLE","$number",281],";",["T_WHITESPACE","\n    ",281],"}",["T_WHITESPACE","\n\n    ",282],["T_DOC_COMMENT","\/**\n     * Reads the unsigned integer value from the binary file at the current byte\n     * offset.\n     *\n     * Advances the offset by the number of bytes read. Throws an exception if\n     * an error occurs.\n     *\n     * NOTE: If you ask for a 4-byte unsigned integer on a 32-bit machine, the\n     * resulting value WILL BE SIGNED because PHP uses signed integers internally\n     * for everything. To guarantee portability, be sure to use bitwise operators\n     * operators on large unsigned integers!\n     *\n     * @param integer $size Size of integer in bytes: 1-4\n     * @param integer $byteOrder (optional) Big- or little-endian byte order.\n     *   Use the BYTE_ORDER_ constants defined in {@link Zend_Pdf_FileParser}.\n     *   If omitted, uses big-endian.\n     * @return integer\n     * @throws Zend_Pdf_Exception\n     *\/",284],["T_WHITESPACE","\n    ",302],["T_PUBLIC","public",303],["T_WHITESPACE"," ",303],["T_FUNCTION","function",303],["T_WHITESPACE"," ",303],["T_STRING","readUInt",303],"(",["T_VARIABLE","$size",303],",",["T_WHITESPACE"," ",303],["T_VARIABLE","$byteOrder",303],["T_WHITESPACE"," ",303],"=",["T_WHITESPACE"," ",303],["T_STRING","Zend_Pdf_FileParser",303],["T_DOUBLE_COLON","::",303],["T_STRING","BYTE_ORDER_BIG_ENDIAN",303],")",["T_WHITESPACE","\n    ",303],"{",["T_WHITESPACE","\n        ",304],["T_IF","if",305],["T_WHITESPACE"," ",305],"(","(",["T_VARIABLE","$size",305],["T_WHITESPACE"," ",305],"<",["T_WHITESPACE"," ",305],["T_LNUMBER","1",305],")",["T_WHITESPACE"," ",305],["T_BOOLEAN_OR","||",305],["T_WHITESPACE"," ",305],"(",["T_VARIABLE","$size",305],["T_WHITESPACE"," ",305],">",["T_WHITESPACE"," ",305],["T_LNUMBER","4",305],")",")",["T_WHITESPACE"," ",305],"{",["T_WHITESPACE","\n            ",305],["T_COMMENT","#require_once 'Zend\/Pdf\/Exception.php';\n",306],["T_WHITESPACE","            ",307],["T_THROW","throw",307],["T_WHITESPACE"," ",307],["T_NEW","new",307],["T_WHITESPACE"," ",307],["T_STRING","Zend_Pdf_Exception",307],"(","\"",["T_ENCAPSED_AND_WHITESPACE","Invalid unsigned integer size: ",307],["T_VARIABLE","$size",307],"\"",",",["T_WHITESPACE","\n                                         ",307],["T_STRING","Zend_Pdf_Exception",308],["T_DOUBLE_COLON","::",308],["T_STRING","INVALID_INTEGER_SIZE",308],")",";",["T_WHITESPACE","\n        ",308],"}",["T_WHITESPACE","\n        ",309],["T_VARIABLE","$bytes",310],["T_WHITESPACE"," ",310],"=",["T_WHITESPACE"," ",310],["T_VARIABLE","$this",310],["T_OBJECT_OPERATOR","->",310],["T_STRING","_dataSource",310],["T_OBJECT_OPERATOR","->",310],["T_STRING","readBytes",310],"(",["T_VARIABLE","$size",310],")",";",["T_WHITESPACE","\n        ",310],["T_COMMENT","\/* unpack() is a bit heavyweight for this simple conversion. Just\n         * work the bytes directly.\n         *\/",311],["T_WHITESPACE","\n        ",313],["T_IF","if",314],["T_WHITESPACE"," ",314],"(",["T_VARIABLE","$byteOrder",314],["T_WHITESPACE"," ",314],["T_IS_EQUAL","==",314],["T_WHITESPACE"," ",314],["T_STRING","Zend_Pdf_FileParser",314],["T_DOUBLE_COLON","::",314],["T_STRING","BYTE_ORDER_BIG_ENDIAN",314],")",["T_WHITESPACE"," ",314],"{",["T_WHITESPACE","\n            ",314],["T_VARIABLE","$number",315],["T_WHITESPACE"," ",315],"=",["T_WHITESPACE"," ",315],["T_STRING","ord",315],"(",["T_VARIABLE","$bytes",315],"[",["T_LNUMBER","0",315],"]",")",";",["T_WHITESPACE","\n            ",315],["T_FOR","for",316],["T_WHITESPACE"," ",316],"(",["T_VARIABLE","$i",316],["T_WHITESPACE"," ",316],"=",["T_WHITESPACE"," ",316],["T_LNUMBER","1",316],";",["T_WHITESPACE"," ",316],["T_VARIABLE","$i",316],["T_WHITESPACE"," ",316],"<",["T_WHITESPACE"," ",316],["T_VARIABLE","$size",316],";",["T_WHITESPACE"," ",316],["T_VARIABLE","$i",316],["T_INC","++",316],")",["T_WHITESPACE"," ",316],"{",["T_WHITESPACE","\n                ",316],["T_VARIABLE","$number",317],["T_WHITESPACE"," ",317],"=",["T_WHITESPACE"," ",317],"(",["T_VARIABLE","$number",317],["T_WHITESPACE"," ",317],["T_SL","<<",317],["T_WHITESPACE"," ",317],["T_LNUMBER","8",317],")",["T_WHITESPACE"," ",317],"|",["T_WHITESPACE"," ",317],["T_STRING","ord",317],"(",["T_VARIABLE","$bytes",317],"[",["T_VARIABLE","$i",317],"]",")",";",["T_WHITESPACE","\n            ",317],"}",["T_WHITESPACE","\n        ",318],"}",["T_WHITESPACE"," ",319],["T_ELSE","else",319],["T_WHITESPACE"," ",319],["T_IF","if",319],["T_WHITESPACE"," ",319],"(",["T_VARIABLE","$byteOrder",319],["T_WHITESPACE"," ",319],["T_IS_EQUAL","==",319],["T_WHITESPACE"," ",319],["T_STRING","Zend_Pdf_FileParser",319],["T_DOUBLE_COLON","::",319],["T_STRING","BYTE_ORDER_LITTLE_ENDIAN",319],")",["T_WHITESPACE"," ",319],"{",["T_WHITESPACE","\n            ",319],["T_VARIABLE","$number",320],["T_WHITESPACE"," ",320],"=",["T_WHITESPACE"," ",320],["T_LNUMBER","0",320],";",["T_WHITESPACE","\n            ",320],["T_FOR","for",321],["T_WHITESPACE"," ",321],"(",["T_VARIABLE","$i",321],["T_WHITESPACE"," ",321],"=",["T_WHITESPACE"," ",321],["T_DEC","--",321],["T_VARIABLE","$size",321],";",["T_WHITESPACE"," ",321],["T_VARIABLE","$i",321],["T_WHITESPACE"," ",321],["T_IS_GREATER_OR_EQUAL",">=",321],["T_WHITESPACE"," ",321],["T_LNUMBER","0",321],";",["T_WHITESPACE"," ",321],["T_VARIABLE","$i",321],["T_DEC","--",321],")",["T_WHITESPACE"," ",321],"{",["T_WHITESPACE","\n                ",321],["T_VARIABLE","$number",322],["T_WHITESPACE"," ",322],["T_OR_EQUAL","|=",322],["T_WHITESPACE"," ",322],["T_STRING","ord",322],"(",["T_VARIABLE","$bytes",322],"[",["T_VARIABLE","$i",322],"]",")",["T_WHITESPACE"," ",322],["T_SL","<<",322],["T_WHITESPACE"," ",322],"(",["T_VARIABLE","$i",322],["T_WHITESPACE"," ",322],"*",["T_WHITESPACE"," ",322],["T_LNUMBER","8",322],")",";",["T_WHITESPACE","\n            ",322],"}",["T_WHITESPACE","\n        ",323],"}",["T_WHITESPACE"," ",324],["T_ELSE","else",324],["T_WHITESPACE"," ",324],"{",["T_WHITESPACE","\n            ",324],["T_COMMENT","#require_once 'Zend\/Pdf\/Exception.php';\n",325],["T_WHITESPACE","            ",326],["T_THROW","throw",326],["T_WHITESPACE"," ",326],["T_NEW","new",326],["T_WHITESPACE"," ",326],["T_STRING","Zend_Pdf_Exception",326],"(","\"",["T_ENCAPSED_AND_WHITESPACE","Invalid byte order: ",326],["T_VARIABLE","$byteOrder",326],"\"",",",["T_WHITESPACE","\n                                         ",326],["T_STRING","Zend_Pdf_Exception",327],["T_DOUBLE_COLON","::",327],["T_STRING","INVALID_BYTE_ORDER",327],")",";",["T_WHITESPACE","\n        ",327],"}",["T_WHITESPACE","\n        ",328],["T_RETURN","return",329],["T_WHITESPACE"," ",329],["T_VARIABLE","$number",329],";",["T_WHITESPACE","\n    ",329],"}",["T_WHITESPACE","\n\n    ",330],["T_DOC_COMMENT","\/**\n     * Returns true if the specified bit is set in the integer bitfield.\n     *\n     * @param integer $bit Bit number to test (i.e. - 0-31)\n     * @param integer $bitField\n     * @return boolean\n     *\/",332],["T_WHITESPACE","\n    ",338],["T_PUBLIC","public",339],["T_WHITESPACE"," ",339],["T_FUNCTION","function",339],["T_WHITESPACE"," ",339],["T_STRING","isBitSet",339],"(",["T_VARIABLE","$bit",339],",",["T_WHITESPACE"," ",339],["T_VARIABLE","$bitField",339],")",["T_WHITESPACE","\n    ",339],"{",["T_WHITESPACE","\n        ",340],["T_VARIABLE","$bitMask",341],["T_WHITESPACE"," ",341],"=",["T_WHITESPACE"," ",341],["T_LNUMBER","1",341],["T_WHITESPACE"," ",341],["T_SL","<<",341],["T_WHITESPACE"," ",341],["T_VARIABLE","$bit",341],";",["T_WHITESPACE","\n        ",341],["T_VARIABLE","$isSet",342],["T_WHITESPACE"," ",342],"=",["T_WHITESPACE"," ",342],"(","(",["T_VARIABLE","$bitField",342],["T_WHITESPACE"," ",342],"&",["T_WHITESPACE"," ",342],["T_VARIABLE","$bitMask",342],")",["T_WHITESPACE"," ",342],["T_IS_EQUAL","==",342],["T_WHITESPACE"," ",342],["T_VARIABLE","$bitMask",342],")",";",["T_WHITESPACE","\n        ",342],["T_RETURN","return",343],["T_WHITESPACE"," ",343],["T_VARIABLE","$isSet",343],";",["T_WHITESPACE","\n    ",343],"}",["T_WHITESPACE","\n\n    ",344],["T_DOC_COMMENT","\/**\n     * Reads the signed fixed-point number from the binary file at the current\n     * byte offset.\n     *\n     * Common fixed-point sizes are 2.14 and 16.16.\n     *\n     * Advances the offset by the number of bytes read. Throws an exception if\n     * an error occurs.\n     *\n     * @param integer $mantissaBits Number of bits in the mantissa\n     * @param integer $fractionBits Number of bits in the fraction\n     * @param integer $byteOrder (optional) Big- or little-endian byte order.\n     *   Use the BYTE_ORDER_ constants defined in {@link Zend_Pdf_FileParser}.\n     *   If omitted, uses big-endian.\n     * @return float\n     * @throws Zend_Pdf_Exception\n     *\/",346],["T_WHITESPACE","\n    ",362],["T_PUBLIC","public",363],["T_WHITESPACE"," ",363],["T_FUNCTION","function",363],["T_WHITESPACE"," ",363],["T_STRING","readFixed",363],"(",["T_VARIABLE","$mantissaBits",363],",",["T_WHITESPACE"," ",363],["T_VARIABLE","$fractionBits",363],",",["T_WHITESPACE","\n                              ",363],["T_VARIABLE","$byteOrder",364],["T_WHITESPACE"," ",364],"=",["T_WHITESPACE"," ",364],["T_STRING","Zend_Pdf_FileParser",364],["T_DOUBLE_COLON","::",364],["T_STRING","BYTE_ORDER_BIG_ENDIAN",364],")",["T_WHITESPACE","\n    ",364],"{",["T_WHITESPACE","\n        ",365],["T_VARIABLE","$bitsToRead",366],["T_WHITESPACE"," ",366],"=",["T_WHITESPACE"," ",366],["T_VARIABLE","$mantissaBits",366],["T_WHITESPACE"," ",366],"+",["T_WHITESPACE"," ",366],["T_VARIABLE","$fractionBits",366],";",["T_WHITESPACE","\n        ",366],["T_IF","if",367],["T_WHITESPACE"," ",367],"(","(",["T_VARIABLE","$bitsToRead",367],["T_WHITESPACE"," ",367],"%",["T_WHITESPACE"," ",367],["T_LNUMBER","8",367],")",["T_WHITESPACE"," ",367],["T_IS_NOT_IDENTICAL","!==",367],["T_WHITESPACE"," ",367],["T_LNUMBER","0",367],")",["T_WHITESPACE"," ",367],"{",["T_WHITESPACE","\n            ",367],["T_COMMENT","#require_once 'Zend\/Pdf\/Exception.php';\n",368],["T_WHITESPACE","            ",369],["T_THROW","throw",369],["T_WHITESPACE"," ",369],["T_NEW","new",369],["T_WHITESPACE"," ",369],["T_STRING","Zend_Pdf_Exception",369],"(",["T_CONSTANT_ENCAPSED_STRING","'Fixed-point numbers are whole bytes'",369],",",["T_WHITESPACE","\n                                         ",369],["T_STRING","Zend_Pdf_Exception",370],["T_DOUBLE_COLON","::",370],["T_STRING","BAD_FIXED_POINT_SIZE",370],")",";",["T_WHITESPACE","\n        ",370],"}",["T_WHITESPACE","\n        ",371],["T_VARIABLE","$number",372],["T_WHITESPACE"," ",372],"=",["T_WHITESPACE"," ",372],["T_VARIABLE","$this",372],["T_OBJECT_OPERATOR","->",372],["T_STRING","readInt",372],"(","(",["T_VARIABLE","$bitsToRead",372],["T_WHITESPACE"," ",372],["T_SR",">>",372],["T_WHITESPACE"," ",372],["T_LNUMBER","3",372],")",",",["T_WHITESPACE"," ",372],["T_VARIABLE","$byteOrder",372],")",["T_WHITESPACE"," ",372],"\/",["T_WHITESPACE"," ",372],"(",["T_LNUMBER","1",372],["T_WHITESPACE"," ",372],["T_SL","<<",372],["T_WHITESPACE"," ",372],["T_VARIABLE","$fractionBits",372],")",";",["T_WHITESPACE","\n        ",372],["T_RETURN","return",373],["T_WHITESPACE"," ",373],["T_VARIABLE","$number",373],";",["T_WHITESPACE","\n    ",373],"}",["T_WHITESPACE","\n\n    ",374],["T_DOC_COMMENT","\/**\n     * Reads the Unicode UTF-16-encoded string from the binary file at the\n     * current byte offset.\n     *\n     * The byte order of the UTF-16 string must be specified. You must also\n     * supply the desired resulting character set.\n     *\n     * Advances the offset by the number of bytes read. Throws an exception if\n     * an error occurs.\n     *\n     * @todo Consider changing $byteCount to a character count. They are not\n     *   always equivalent (in the case of surrogates).\n     * @todo Make $byteOrder optional if there is a byte-order mark (BOM) in the\n     *   string being extracted.\n     *\n     * @param integer $byteCount Number of bytes (characters * 2) to return.\n     * @param integer $byteOrder (optional) Big- or little-endian byte order.\n     *   Use the BYTE_ORDER_ constants defined in {@link Zend_Pdf_FileParser}.\n     *   If omitted, uses big-endian.\n     * @param string $characterSet (optional) Desired resulting character set.\n     *   You may use any character set supported by {@link iconv()}. If omitted,\n     *   uses 'current locale'.\n     * @return string\n     * @throws Zend_Pdf_Exception\n     *\/",376],["T_WHITESPACE","\n    ",400],["T_PUBLIC","public",401],["T_WHITESPACE"," ",401],["T_FUNCTION","function",401],["T_WHITESPACE"," ",401],["T_STRING","readStringUTF16",401],"(",["T_VARIABLE","$byteCount",401],",",["T_WHITESPACE","\n                                    ",401],["T_VARIABLE","$byteOrder",402],["T_WHITESPACE"," ",402],"=",["T_WHITESPACE"," ",402],["T_STRING","Zend_Pdf_FileParser",402],["T_DOUBLE_COLON","::",402],["T_STRING","BYTE_ORDER_BIG_ENDIAN",402],",",["T_WHITESPACE","\n                                    ",402],["T_VARIABLE","$characterSet",403],["T_WHITESPACE"," ",403],"=",["T_WHITESPACE"," ",403],["T_CONSTANT_ENCAPSED_STRING","''",403],")",["T_WHITESPACE","\n    ",403],"{",["T_WHITESPACE","\n        ",404],["T_IF","if",405],["T_WHITESPACE"," ",405],"(",["T_VARIABLE","$byteCount",405],["T_WHITESPACE"," ",405],["T_IS_EQUAL","==",405],["T_WHITESPACE"," ",405],["T_LNUMBER","0",405],")",["T_WHITESPACE"," ",405],"{",["T_WHITESPACE","\n            ",405],["T_RETURN","return",406],["T_WHITESPACE"," ",406],["T_CONSTANT_ENCAPSED_STRING","''",406],";",["T_WHITESPACE","\n        ",406],"}",["T_WHITESPACE","\n        ",407],["T_VARIABLE","$bytes",408],["T_WHITESPACE"," ",408],"=",["T_WHITESPACE"," ",408],["T_VARIABLE","$this",408],["T_OBJECT_OPERATOR","->",408],["T_STRING","_dataSource",408],["T_OBJECT_OPERATOR","->",408],["T_STRING","readBytes",408],"(",["T_VARIABLE","$byteCount",408],")",";",["T_WHITESPACE","\n        ",408],["T_IF","if",409],["T_WHITESPACE"," ",409],"(",["T_VARIABLE","$byteOrder",409],["T_WHITESPACE"," ",409],["T_IS_EQUAL","==",409],["T_WHITESPACE"," ",409],["T_STRING","Zend_Pdf_FileParser",409],["T_DOUBLE_COLON","::",409],["T_STRING","BYTE_ORDER_BIG_ENDIAN",409],")",["T_WHITESPACE"," ",409],"{",["T_WHITESPACE","\n            ",409],["T_IF","if",410],["T_WHITESPACE"," ",410],"(",["T_VARIABLE","$characterSet",410],["T_WHITESPACE"," ",410],["T_IS_EQUAL","==",410],["T_WHITESPACE"," ",410],["T_CONSTANT_ENCAPSED_STRING","'UTF-16BE'",410],")",["T_WHITESPACE"," ",410],"{",["T_WHITESPACE","\n                ",410],["T_RETURN","return",411],["T_WHITESPACE"," ",411],["T_VARIABLE","$bytes",411],";",["T_WHITESPACE","\n            ",411],"}",["T_WHITESPACE","\n            ",412],["T_RETURN","return",413],["T_WHITESPACE"," ",413],["T_STRING","iconv",413],"(",["T_CONSTANT_ENCAPSED_STRING","'UTF-16BE'",413],",",["T_WHITESPACE"," ",413],["T_VARIABLE","$characterSet",413],",",["T_WHITESPACE"," ",413],["T_VARIABLE","$bytes",413],")",";",["T_WHITESPACE","\n        ",413],"}",["T_WHITESPACE"," ",414],["T_ELSE","else",414],["T_WHITESPACE"," ",414],["T_IF","if",414],["T_WHITESPACE"," ",414],"(",["T_VARIABLE","$byteOrder",414],["T_WHITESPACE"," ",414],["T_IS_EQUAL","==",414],["T_WHITESPACE"," ",414],["T_STRING","Zend_Pdf_FileParser",414],["T_DOUBLE_COLON","::",414],["T_STRING","BYTE_ORDER_LITTLE_ENDIAN",414],")",["T_WHITESPACE"," ",414],"{",["T_WHITESPACE","\n            ",414],["T_IF","if",415],["T_WHITESPACE"," ",415],"(",["T_VARIABLE","$characterSet",415],["T_WHITESPACE"," ",415],["T_IS_EQUAL","==",415],["T_WHITESPACE"," ",415],["T_CONSTANT_ENCAPSED_STRING","'UTF-16LE'",415],")",["T_WHITESPACE"," ",415],"{",["T_WHITESPACE","\n                ",415],["T_RETURN","return",416],["T_WHITESPACE"," ",416],["T_VARIABLE","$bytes",416],";",["T_WHITESPACE","\n            ",416],"}",["T_WHITESPACE","\n            ",417],["T_RETURN","return",418],["T_WHITESPACE"," ",418],["T_STRING","iconv",418],"(",["T_CONSTANT_ENCAPSED_STRING","'UTF-16LE'",418],",",["T_WHITESPACE"," ",418],["T_VARIABLE","$characterSet",418],",",["T_WHITESPACE"," ",418],["T_VARIABLE","$bytes",418],")",";",["T_WHITESPACE","\n        ",418],"}",["T_WHITESPACE"," ",419],["T_ELSE","else",419],["T_WHITESPACE"," ",419],"{",["T_WHITESPACE","\n            ",419],["T_COMMENT","#require_once 'Zend\/Pdf\/Exception.php';\n",420],["T_WHITESPACE","            ",421],["T_THROW","throw",421],["T_WHITESPACE"," ",421],["T_NEW","new",421],["T_WHITESPACE"," ",421],["T_STRING","Zend_Pdf_Exception",421],"(","\"",["T_ENCAPSED_AND_WHITESPACE","Invalid byte order: ",421],["T_VARIABLE","$byteOrder",421],"\"",",",["T_WHITESPACE","\n                                         ",421],["T_STRING","Zend_Pdf_Exception",422],["T_DOUBLE_COLON","::",422],["T_STRING","INVALID_BYTE_ORDER",422],")",";",["T_WHITESPACE","\n        ",422],"}",["T_WHITESPACE","\n    ",423],"}",["T_WHITESPACE","\n\n    ",424],["T_DOC_COMMENT","\/**\n     * Reads the Mac Roman-encoded string from the binary file at the current\n     * byte offset.\n     *\n     * You must supply the desired resulting character set.\n     *\n     * Advances the offset by the number of bytes read. Throws an exception if\n     * an error occurs.\n     *\n     * @param integer $byteCount Number of bytes (characters) to return.\n     * @param string $characterSet (optional) Desired resulting character set.\n     *   You may use any character set supported by {@link iconv()}. If omitted,\n     *   uses 'current locale'.\n     * @return string\n     * @throws Zend_Pdf_Exception\n     *\/",426],["T_WHITESPACE","\n    ",441],["T_PUBLIC","public",442],["T_WHITESPACE"," ",442],["T_FUNCTION","function",442],["T_WHITESPACE"," ",442],["T_STRING","readStringMacRoman",442],"(",["T_VARIABLE","$byteCount",442],",",["T_WHITESPACE"," ",442],["T_VARIABLE","$characterSet",442],["T_WHITESPACE"," ",442],"=",["T_WHITESPACE"," ",442],["T_CONSTANT_ENCAPSED_STRING","''",442],")",["T_WHITESPACE","\n    ",442],"{",["T_WHITESPACE","\n        ",443],["T_IF","if",444],["T_WHITESPACE"," ",444],"(",["T_VARIABLE","$byteCount",444],["T_WHITESPACE"," ",444],["T_IS_EQUAL","==",444],["T_WHITESPACE"," ",444],["T_LNUMBER","0",444],")",["T_WHITESPACE"," ",444],"{",["T_WHITESPACE","\n            ",444],["T_RETURN","return",445],["T_WHITESPACE"," ",445],["T_CONSTANT_ENCAPSED_STRING","''",445],";",["T_WHITESPACE","\n        ",445],"}",["T_WHITESPACE","\n        ",446],["T_VARIABLE","$bytes",447],["T_WHITESPACE"," ",447],"=",["T_WHITESPACE"," ",447],["T_VARIABLE","$this",447],["T_OBJECT_OPERATOR","->",447],["T_STRING","_dataSource",447],["T_OBJECT_OPERATOR","->",447],["T_STRING","readBytes",447],"(",["T_VARIABLE","$byteCount",447],")",";",["T_WHITESPACE","\n        ",447],["T_IF","if",448],["T_WHITESPACE"," ",448],"(",["T_VARIABLE","$characterSet",448],["T_WHITESPACE"," ",448],["T_IS_EQUAL","==",448],["T_WHITESPACE"," ",448],["T_CONSTANT_ENCAPSED_STRING","'MacRoman'",448],")",["T_WHITESPACE"," ",448],"{",["T_WHITESPACE","\n            ",448],["T_RETURN","return",449],["T_WHITESPACE"," ",449],["T_VARIABLE","$bytes",449],";",["T_WHITESPACE","\n        ",449],"}",["T_WHITESPACE","\n        ",450],["T_RETURN","return",451],["T_WHITESPACE"," ",451],["T_STRING","iconv",451],"(",["T_CONSTANT_ENCAPSED_STRING","'MacRoman'",451],",",["T_WHITESPACE"," ",451],["T_VARIABLE","$characterSet",451],",",["T_WHITESPACE"," ",451],["T_VARIABLE","$bytes",451],")",";",["T_WHITESPACE","\n    ",451],"}",["T_WHITESPACE","\n\n    ",452],["T_DOC_COMMENT","\/**\n     * Reads the Pascal string from the binary file at the current byte offset.\n     *\n     * The length of the Pascal string is determined by reading the length bytes\n     * which preceed the character data. You must supply the desired resulting\n     * character set.\n     *\n     * Advances the offset by the number of bytes read. Throws an exception if\n     * an error occurs.\n     *\n     * @param string $characterSet (optional) Desired resulting character set.\n     *   You may use any character set supported by {@link iconv()}. If omitted,\n     *   uses 'current locale'.\n     * @param integer $lengthBytes (optional) Number of bytes that make up the\n     *   length. Default is 1.\n     * @return string\n     * @throws Zend_Pdf_Exception\n     *\/",454],["T_WHITESPACE","\n    ",471],["T_PUBLIC","public",472],["T_WHITESPACE"," ",472],["T_FUNCTION","function",472],["T_WHITESPACE"," ",472],["T_STRING","readStringPascal",472],"(",["T_VARIABLE","$characterSet",472],["T_WHITESPACE"," ",472],"=",["T_WHITESPACE"," ",472],["T_CONSTANT_ENCAPSED_STRING","''",472],",",["T_WHITESPACE"," ",472],["T_VARIABLE","$lengthBytes",472],["T_WHITESPACE"," ",472],"=",["T_WHITESPACE"," ",472],["T_LNUMBER","1",472],")",["T_WHITESPACE","\n    ",472],"{",["T_WHITESPACE","\n        ",473],["T_VARIABLE","$byteCount",474],["T_WHITESPACE"," ",474],"=",["T_WHITESPACE"," ",474],["T_VARIABLE","$this",474],["T_OBJECT_OPERATOR","->",474],["T_STRING","readUInt",474],"(",["T_VARIABLE","$lengthBytes",474],")",";",["T_WHITESPACE","\n        ",474],["T_IF","if",475],["T_WHITESPACE"," ",475],"(",["T_VARIABLE","$byteCount",475],["T_WHITESPACE"," ",475],["T_IS_EQUAL","==",475],["T_WHITESPACE"," ",475],["T_LNUMBER","0",475],")",["T_WHITESPACE"," ",475],"{",["T_WHITESPACE","\n            ",475],["T_RETURN","return",476],["T_WHITESPACE"," ",476],["T_CONSTANT_ENCAPSED_STRING","''",476],";",["T_WHITESPACE","\n        ",476],"}",["T_WHITESPACE","\n        ",477],["T_VARIABLE","$bytes",478],["T_WHITESPACE"," ",478],"=",["T_WHITESPACE"," ",478],["T_VARIABLE","$this",478],["T_OBJECT_OPERATOR","->",478],["T_STRING","_dataSource",478],["T_OBJECT_OPERATOR","->",478],["T_STRING","readBytes",478],"(",["T_VARIABLE","$byteCount",478],")",";",["T_WHITESPACE","\n        ",478],["T_IF","if",479],["T_WHITESPACE"," ",479],"(",["T_VARIABLE","$characterSet",479],["T_WHITESPACE"," ",479],["T_IS_EQUAL","==",479],["T_WHITESPACE"," ",479],["T_CONSTANT_ENCAPSED_STRING","'ASCII'",479],")",["T_WHITESPACE"," ",479],"{",["T_WHITESPACE","\n            ",479],["T_RETURN","return",480],["T_WHITESPACE"," ",480],["T_VARIABLE","$bytes",480],";",["T_WHITESPACE","\n        ",480],"}",["T_WHITESPACE","\n        ",481],["T_RETURN","return",482],["T_WHITESPACE"," ",482],["T_STRING","iconv",482],"(",["T_CONSTANT_ENCAPSED_STRING","'ASCII'",482],",",["T_WHITESPACE"," ",482],["T_VARIABLE","$characterSet",482],",",["T_WHITESPACE"," ",482],["T_VARIABLE","$bytes",482],")",";",["T_WHITESPACE","\n    ",482],"}",["T_WHITESPACE","\n\n",483],"}",["T_WHITESPACE","\n",485]]