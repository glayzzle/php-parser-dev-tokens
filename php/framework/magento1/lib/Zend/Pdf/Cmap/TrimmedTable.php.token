[["T_OPEN_TAG","<?php\n",1],["T_DOC_COMMENT","\/**\n * Zend Framework\n *\n * LICENSE\n *\n * This source file is subject to the new BSD license that is bundled\n * with this package in the file LICENSE.txt.\n * It is also available through the world-wide-web at this URL:\n * http:\/\/framework.zend.com\/license\/new-bsd\n * If you did not receive a copy of the license and are unable to\n * obtain it through the world-wide-web, please send an email\n * to license@zend.com so we can send you a copy immediately.\n *\n * @category   Zend\n * @package    Zend_Pdf\n * @subpackage Fonts\n * @copyright  Copyright (c) 2005-2015 Zend Technologies USA Inc. (http:\/\/www.zend.com)\n * @license    http:\/\/framework.zend.com\/license\/new-bsd     New BSD License\n * @version    $Id$\n *\/",2],["T_WHITESPACE","\n\n",21],["T_DOC_COMMENT","\/** Zend_Pdf_Cmap *\/",23],["T_WHITESPACE","\n",23],["T_COMMENT","#require_once 'Zend\/Pdf\/Cmap.php';\n",24],["T_WHITESPACE","\n\n",25],["T_DOC_COMMENT","\/**\n * Implements the \"trimmed table mapping\" character map (type 6).\n *\n * This table type is preferred over the {@link Zend_Pdf_Cmap_SegmentToDelta}\n * table when the Unicode characters covered by the font fall into a single\n * contiguous range.\n *\n * @package    Zend_Pdf\n * @subpackage Fonts\n * @copyright  Copyright (c) 2005-2015 Zend Technologies USA Inc. (http:\/\/www.zend.com)\n * @license    http:\/\/framework.zend.com\/license\/new-bsd     New BSD License\n *\/",27],["T_WHITESPACE","\n",38],["T_CLASS","class",39],["T_WHITESPACE"," ",39],["T_STRING","Zend_Pdf_Cmap_TrimmedTable",39],["T_WHITESPACE"," ",39],["T_EXTENDS","extends",39],["T_WHITESPACE"," ",39],["T_STRING","Zend_Pdf_Cmap",39],["T_WHITESPACE","\n",39],"{",["T_WHITESPACE","\n  ",40],["T_COMMENT","\/**** Instance Variables ****\/",41],["T_WHITESPACE","\n\n\n    ",41],["T_DOC_COMMENT","\/**\n     * The starting character code covered by this table.\n     * @var integer\n     *\/",44],["T_WHITESPACE","\n    ",47],["T_PROTECTED","protected",48],["T_WHITESPACE"," ",48],["T_VARIABLE","$_startCode",48],["T_WHITESPACE"," ",48],"=",["T_WHITESPACE"," ",48],["T_LNUMBER","0",48],";",["T_WHITESPACE","\n\n    ",48],["T_DOC_COMMENT","\/**\n     * The ending character code covered by this table.\n     * @var integer\n     *\/",50],["T_WHITESPACE","\n    ",53],["T_PROTECTED","protected",54],["T_WHITESPACE"," ",54],["T_VARIABLE","$_endCode",54],["T_WHITESPACE"," ",54],"=",["T_WHITESPACE"," ",54],["T_LNUMBER","0",54],";",["T_WHITESPACE","\n\n    ",54],["T_DOC_COMMENT","\/**\n     * Glyph index array. Stores the actual glyph numbers.\n     * @var array\n     *\/",56],["T_WHITESPACE","\n    ",59],["T_PROTECTED","protected",60],["T_WHITESPACE"," ",60],["T_VARIABLE","$_glyphIndexArray",60],["T_WHITESPACE"," ",60],"=",["T_WHITESPACE"," ",60],["T_ARRAY","array",60],"(",")",";",["T_WHITESPACE","\n\n\n\n  ",60],["T_COMMENT","\/**** Public Interface ****\/",64],["T_WHITESPACE","\n\n\n  ",64],["T_COMMENT","\/* Concrete Class Implementation *\/",67],["T_WHITESPACE","\n\n    ",67],["T_DOC_COMMENT","\/**\n     * Returns an array of glyph numbers corresponding to the Unicode characters.\n     *\n     * If a particular character doesn't exist in this font, the special 'missing\n     * character glyph' will be substituted.\n     *\n     * See also {@link glyphNumberForCharacter()}.\n     *\n     * @param array $characterCodes Array of Unicode character codes (code points).\n     * @return array Array of glyph numbers.\n     *\/",69],["T_WHITESPACE","\n    ",79],["T_PUBLIC","public",80],["T_WHITESPACE"," ",80],["T_FUNCTION","function",80],["T_WHITESPACE"," ",80],["T_STRING","glyphNumbersForCharacters",80],"(",["T_VARIABLE","$characterCodes",80],")",["T_WHITESPACE","\n    ",80],"{",["T_WHITESPACE","\n        ",81],["T_VARIABLE","$glyphNumbers",82],["T_WHITESPACE"," ",82],"=",["T_WHITESPACE"," ",82],["T_ARRAY","array",82],"(",")",";",["T_WHITESPACE","\n        ",82],["T_FOREACH","foreach",83],["T_WHITESPACE"," ",83],"(",["T_VARIABLE","$characterCodes",83],["T_WHITESPACE"," ",83],["T_AS","as",83],["T_WHITESPACE"," ",83],["T_VARIABLE","$key",83],["T_WHITESPACE"," ",83],["T_DOUBLE_ARROW","=>",83],["T_WHITESPACE"," ",83],["T_VARIABLE","$characterCode",83],")",["T_WHITESPACE"," ",83],"{",["T_WHITESPACE","\n\n            ",83],["T_IF","if",85],["T_WHITESPACE"," ",85],"(","(",["T_VARIABLE","$characterCode",85],["T_WHITESPACE"," ",85],"<",["T_WHITESPACE"," ",85],["T_VARIABLE","$this",85],["T_OBJECT_OPERATOR","->",85],["T_STRING","_startCode",85],")",["T_WHITESPACE"," ",85],["T_BOOLEAN_OR","||",85],["T_WHITESPACE"," ",85],"(",["T_VARIABLE","$characterCode",85],["T_WHITESPACE"," ",85],">",["T_WHITESPACE"," ",85],["T_VARIABLE","$this",85],["T_OBJECT_OPERATOR","->",85],["T_STRING","_endCode",85],")",")",["T_WHITESPACE"," ",85],"{",["T_WHITESPACE","\n                ",85],["T_VARIABLE","$glyphNumbers",86],"[",["T_VARIABLE","$key",86],"]",["T_WHITESPACE"," ",86],"=",["T_WHITESPACE"," ",86],["T_STRING","Zend_Pdf_Cmap",86],["T_DOUBLE_COLON","::",86],["T_STRING","MISSING_CHARACTER_GLYPH",86],";",["T_WHITESPACE","\n                ",86],["T_CONTINUE","continue",87],";",["T_WHITESPACE","\n            ",87],"}",["T_WHITESPACE","\n\n            ",88],["T_VARIABLE","$glyphIndex",90],["T_WHITESPACE"," ",90],"=",["T_WHITESPACE"," ",90],["T_VARIABLE","$characterCode",90],["T_WHITESPACE"," ",90],"-",["T_WHITESPACE"," ",90],["T_VARIABLE","$this",90],["T_OBJECT_OPERATOR","->",90],["T_STRING","_startCode",90],";",["T_WHITESPACE","\n            ",90],["T_VARIABLE","$glyphNumbers",91],"[",["T_VARIABLE","$key",91],"]",["T_WHITESPACE"," ",91],"=",["T_WHITESPACE"," ",91],["T_VARIABLE","$this",91],["T_OBJECT_OPERATOR","->",91],["T_STRING","_glyphIndexArray",91],"[",["T_VARIABLE","$glyphIndex",91],"]",";",["T_WHITESPACE","\n\n        ",91],"}",["T_WHITESPACE","\n        ",93],["T_RETURN","return",94],["T_WHITESPACE"," ",94],["T_VARIABLE","$glyphNumbers",94],";",["T_WHITESPACE","\n    ",94],"}",["T_WHITESPACE","\n\n    ",95],["T_DOC_COMMENT","\/**\n     * Returns the glyph number corresponding to the Unicode character.\n     *\n     * If a particular character doesn't exist in this font, the special 'missing\n     * character glyph' will be substituted.\n     *\n     * See also {@link glyphNumbersForCharacters()} which is optimized for bulk\n     * operations.\n     *\n     * @param integer $characterCode Unicode character code (code point).\n     * @return integer Glyph number.\n     *\/",97],["T_WHITESPACE","\n    ",108],["T_PUBLIC","public",109],["T_WHITESPACE"," ",109],["T_FUNCTION","function",109],["T_WHITESPACE"," ",109],["T_STRING","glyphNumberForCharacter",109],"(",["T_VARIABLE","$characterCode",109],")",["T_WHITESPACE","\n    ",109],"{",["T_WHITESPACE","\n        ",110],["T_IF","if",111],["T_WHITESPACE"," ",111],"(","(",["T_VARIABLE","$characterCode",111],["T_WHITESPACE"," ",111],"<",["T_WHITESPACE"," ",111],["T_VARIABLE","$this",111],["T_OBJECT_OPERATOR","->",111],["T_STRING","_startCode",111],")",["T_WHITESPACE"," ",111],["T_BOOLEAN_OR","||",111],["T_WHITESPACE"," ",111],"(",["T_VARIABLE","$characterCode",111],["T_WHITESPACE"," ",111],">",["T_WHITESPACE"," ",111],["T_VARIABLE","$this",111],["T_OBJECT_OPERATOR","->",111],["T_STRING","_endCode",111],")",")",["T_WHITESPACE"," ",111],"{",["T_WHITESPACE","\n            ",111],["T_RETURN","return",112],["T_WHITESPACE"," ",112],["T_STRING","Zend_Pdf_Cmap",112],["T_DOUBLE_COLON","::",112],["T_STRING","MISSING_CHARACTER_GLYPH",112],";",["T_WHITESPACE","\n        ",112],"}",["T_WHITESPACE","\n        ",113],["T_VARIABLE","$glyphIndex",114],["T_WHITESPACE"," ",114],"=",["T_WHITESPACE"," ",114],["T_VARIABLE","$characterCode",114],["T_WHITESPACE"," ",114],"-",["T_WHITESPACE"," ",114],["T_VARIABLE","$this",114],["T_OBJECT_OPERATOR","->",114],["T_STRING","_startCode",114],";",["T_WHITESPACE","\n        ",114],["T_RETURN","return",115],["T_WHITESPACE"," ",115],["T_VARIABLE","$this",115],["T_OBJECT_OPERATOR","->",115],["T_STRING","_glyphIndexArray",115],"[",["T_VARIABLE","$glyphIndex",115],"]",";",["T_WHITESPACE","\n    ",115],"}",["T_WHITESPACE","\n\n    ",116],["T_DOC_COMMENT","\/**\n     * Returns an array containing the Unicode characters that have entries in\n     * this character map.\n     *\n     * @return array Unicode character codes.\n     *\/",118],["T_WHITESPACE","\n    ",123],["T_PUBLIC","public",124],["T_WHITESPACE"," ",124],["T_FUNCTION","function",124],["T_WHITESPACE"," ",124],["T_STRING","getCoveredCharacters",124],"(",")",["T_WHITESPACE","\n    ",124],"{",["T_WHITESPACE","\n        ",125],["T_VARIABLE","$characterCodes",126],["T_WHITESPACE"," ",126],"=",["T_WHITESPACE"," ",126],["T_ARRAY","array",126],"(",")",";",["T_WHITESPACE","\n        ",126],["T_FOR","for",127],["T_WHITESPACE"," ",127],"(",["T_VARIABLE","$code",127],["T_WHITESPACE"," ",127],"=",["T_WHITESPACE"," ",127],["T_VARIABLE","$this",127],["T_OBJECT_OPERATOR","->",127],["T_STRING","_startCode",127],";",["T_WHITESPACE"," ",127],["T_VARIABLE","$code",127],["T_WHITESPACE"," ",127],["T_IS_SMALLER_OR_EQUAL","<=",127],["T_WHITESPACE"," ",127],["T_VARIABLE","$this",127],["T_OBJECT_OPERATOR","->",127],["T_STRING","_endCode",127],";",["T_WHITESPACE"," ",127],["T_VARIABLE","$code",127],["T_INC","++",127],")",["T_WHITESPACE"," ",127],"{",["T_WHITESPACE","\n            ",127],["T_VARIABLE","$characterCodes",128],"[","]",["T_WHITESPACE"," ",128],"=",["T_WHITESPACE"," ",128],["T_VARIABLE","$code",128],";",["T_WHITESPACE","\n        ",128],"}",["T_WHITESPACE","\n        ",129],["T_RETURN","return",130],["T_WHITESPACE"," ",130],["T_VARIABLE","$characterCodes",130],";",["T_WHITESPACE","\n    ",130],"}",["T_WHITESPACE","\n\n\n    ",131],["T_DOC_COMMENT","\/**\n     * Returns an array containing the glyphs numbers that have entries in this character map.\n     * Keys are Unicode character codes (integers)\n     *\n     * This functionality is partially covered by glyphNumbersForCharacters(getCoveredCharacters())\n     * call, but this method do it in more effective way (prepare complete list instead of searching\n     * glyph for each character code).\n     *\n     * @internal\n     * @return array Array representing <Unicode character code> => <glyph number> pairs.\n     *\/",134],["T_WHITESPACE","\n    ",144],["T_PUBLIC","public",145],["T_WHITESPACE"," ",145],["T_FUNCTION","function",145],["T_WHITESPACE"," ",145],["T_STRING","getCoveredCharactersGlyphs",145],"(",")",["T_WHITESPACE","\n    ",145],"{",["T_WHITESPACE","\n        ",146],["T_VARIABLE","$glyphNumbers",147],["T_WHITESPACE"," ",147],"=",["T_WHITESPACE"," ",147],["T_ARRAY","array",147],"(",")",";",["T_WHITESPACE","\n        ",147],["T_FOR","for",148],["T_WHITESPACE"," ",148],"(",["T_VARIABLE","$code",148],["T_WHITESPACE"," ",148],"=",["T_WHITESPACE"," ",148],["T_VARIABLE","$this",148],["T_OBJECT_OPERATOR","->",148],["T_STRING","_startCode",148],";",["T_WHITESPACE"," ",148],["T_VARIABLE","$code",148],["T_WHITESPACE"," ",148],["T_IS_SMALLER_OR_EQUAL","<=",148],["T_WHITESPACE"," ",148],["T_VARIABLE","$this",148],["T_OBJECT_OPERATOR","->",148],["T_STRING","_endCode",148],";",["T_WHITESPACE"," ",148],["T_VARIABLE","$code",148],["T_INC","++",148],")",["T_WHITESPACE"," ",148],"{",["T_WHITESPACE","\n            ",148],["T_VARIABLE","$glyphNumbers",149],"[",["T_VARIABLE","$code",149],"]",["T_WHITESPACE"," ",149],"=",["T_WHITESPACE"," ",149],["T_VARIABLE","$this",149],["T_OBJECT_OPERATOR","->",149],["T_STRING","_glyphIndexArray",149],"[",["T_VARIABLE","$code",149],["T_WHITESPACE"," ",149],"-",["T_WHITESPACE"," ",149],["T_VARIABLE","$this",149],["T_OBJECT_OPERATOR","->",149],["T_STRING","_startCode",149],"]",";",["T_WHITESPACE","\n        ",149],"}",["T_WHITESPACE","\n\n        ",150],["T_RETURN","return",152],["T_WHITESPACE"," ",152],["T_VARIABLE","$glyphNumbers",152],";",["T_WHITESPACE","\n    ",152],"}",["T_WHITESPACE","\n\n\n  ",153],["T_COMMENT","\/* Object Lifecycle *\/",156],["T_WHITESPACE","\n\n    ",156],["T_DOC_COMMENT","\/**\n     * Object constructor\n     *\n     * Parses the raw binary table data. Throws an exception if the table is\n     * malformed.\n     *\n     * @param string $cmapData Raw binary cmap table data.\n     * @throws Zend_Pdf_Exception\n     *\/",158],["T_WHITESPACE","\n    ",166],["T_PUBLIC","public",167],["T_WHITESPACE"," ",167],["T_FUNCTION","function",167],["T_WHITESPACE"," ",167],["T_STRING","__construct",167],"(",["T_VARIABLE","$cmapData",167],")",["T_WHITESPACE","\n    ",167],"{",["T_WHITESPACE","\n        ",168],["T_COMMENT","\/* Sanity check: The table should be at least 9 bytes in size.\n         *\/",169],["T_WHITESPACE","\n        ",170],["T_VARIABLE","$actualLength",171],["T_WHITESPACE"," ",171],"=",["T_WHITESPACE"," ",171],["T_STRING","strlen",171],"(",["T_VARIABLE","$cmapData",171],")",";",["T_WHITESPACE","\n        ",171],["T_IF","if",172],["T_WHITESPACE"," ",172],"(",["T_VARIABLE","$actualLength",172],["T_WHITESPACE"," ",172],"<",["T_WHITESPACE"," ",172],["T_LNUMBER","9",172],")",["T_WHITESPACE"," ",172],"{",["T_WHITESPACE","\n            ",172],["T_COMMENT","#require_once 'Zend\/Pdf\/Exception.php';\n",173],["T_WHITESPACE","            ",174],["T_THROW","throw",174],["T_WHITESPACE"," ",174],["T_NEW","new",174],["T_WHITESPACE"," ",174],["T_STRING","Zend_Pdf_Exception",174],"(",["T_CONSTANT_ENCAPSED_STRING","'Insufficient table data'",174],",",["T_WHITESPACE","\n                                         ",174],["T_STRING","Zend_Pdf_Exception",175],["T_DOUBLE_COLON","::",175],["T_STRING","CMAP_TABLE_DATA_TOO_SMALL",175],")",";",["T_WHITESPACE","\n        ",175],"}",["T_WHITESPACE","\n\n        ",176],["T_COMMENT","\/* Sanity check: Make sure this is right data for this table type.\n         *\/",178],["T_WHITESPACE","\n        ",179],["T_VARIABLE","$type",180],["T_WHITESPACE"," ",180],"=",["T_WHITESPACE"," ",180],["T_VARIABLE","$this",180],["T_OBJECT_OPERATOR","->",180],["T_STRING","_extractUInt2",180],"(",["T_VARIABLE","$cmapData",180],",",["T_WHITESPACE"," ",180],["T_LNUMBER","0",180],")",";",["T_WHITESPACE","\n        ",180],["T_IF","if",181],["T_WHITESPACE"," ",181],"(",["T_VARIABLE","$type",181],["T_WHITESPACE"," ",181],["T_IS_NOT_EQUAL","!=",181],["T_WHITESPACE"," ",181],["T_STRING","Zend_Pdf_Cmap",181],["T_DOUBLE_COLON","::",181],["T_STRING","TYPE_TRIMMED_TABLE",181],")",["T_WHITESPACE"," ",181],"{",["T_WHITESPACE","\n            ",181],["T_COMMENT","#require_once 'Zend\/Pdf\/Exception.php';\n",182],["T_WHITESPACE","            ",183],["T_THROW","throw",183],["T_WHITESPACE"," ",183],["T_NEW","new",183],["T_WHITESPACE"," ",183],["T_STRING","Zend_Pdf_Exception",183],"(",["T_CONSTANT_ENCAPSED_STRING","'Wrong cmap table type'",183],",",["T_WHITESPACE","\n                                         ",183],["T_STRING","Zend_Pdf_Exception",184],["T_DOUBLE_COLON","::",184],["T_STRING","CMAP_WRONG_TABLE_TYPE",184],")",";",["T_WHITESPACE","\n        ",184],"}",["T_WHITESPACE","\n\n        ",185],["T_VARIABLE","$length",187],["T_WHITESPACE"," ",187],"=",["T_WHITESPACE"," ",187],["T_VARIABLE","$this",187],["T_OBJECT_OPERATOR","->",187],["T_STRING","_extractUInt2",187],"(",["T_VARIABLE","$cmapData",187],",",["T_WHITESPACE"," ",187],["T_LNUMBER","2",187],")",";",["T_WHITESPACE","\n        ",187],["T_IF","if",188],["T_WHITESPACE"," ",188],"(",["T_VARIABLE","$length",188],["T_WHITESPACE"," ",188],["T_IS_NOT_EQUAL","!=",188],["T_WHITESPACE"," ",188],["T_VARIABLE","$actualLength",188],")",["T_WHITESPACE"," ",188],"{",["T_WHITESPACE","\n            ",188],["T_COMMENT","#require_once 'Zend\/Pdf\/Exception.php';\n",189],["T_WHITESPACE","            ",190],["T_THROW","throw",190],["T_WHITESPACE"," ",190],["T_NEW","new",190],["T_WHITESPACE"," ",190],["T_STRING","Zend_Pdf_Exception",190],"(","\"",["T_ENCAPSED_AND_WHITESPACE","Table length (",190],["T_VARIABLE","$length",190],["T_ENCAPSED_AND_WHITESPACE",") does not match actual length (",190],["T_VARIABLE","$actualLength",190],["T_ENCAPSED_AND_WHITESPACE",")",190],"\"",",",["T_WHITESPACE","\n                                         ",190],["T_STRING","Zend_Pdf_Exception",191],["T_DOUBLE_COLON","::",191],["T_STRING","CMAP_WRONG_TABLE_LENGTH",191],")",";",["T_WHITESPACE","\n        ",191],"}",["T_WHITESPACE","\n\n        ",192],["T_COMMENT","\/* Mapping tables should be language-independent. The font may not work\n         * as expected if they are not. Unfortunately, many font files in the\n         * wild incorrectly record a language ID in this field, so we can't\n         * call this a failure.\n         *\/",194],["T_WHITESPACE","\n        ",198],["T_VARIABLE","$language",199],["T_WHITESPACE"," ",199],"=",["T_WHITESPACE"," ",199],["T_VARIABLE","$this",199],["T_OBJECT_OPERATOR","->",199],["T_STRING","_extractUInt2",199],"(",["T_VARIABLE","$cmapData",199],",",["T_WHITESPACE"," ",199],["T_LNUMBER","4",199],")",";",["T_WHITESPACE","\n        ",199],["T_IF","if",200],["T_WHITESPACE"," ",200],"(",["T_VARIABLE","$language",200],["T_WHITESPACE"," ",200],["T_IS_NOT_EQUAL","!=",200],["T_WHITESPACE"," ",200],["T_LNUMBER","0",200],")",["T_WHITESPACE"," ",200],"{",["T_WHITESPACE","\n            ",200],["T_COMMENT","\/\/ Record a warning here somehow?\n",201],["T_WHITESPACE","        ",202],"}",["T_WHITESPACE","\n\n        ",202],["T_VARIABLE","$this",204],["T_OBJECT_OPERATOR","->",204],["T_STRING","_startCode",204],["T_WHITESPACE"," ",204],"=",["T_WHITESPACE"," ",204],["T_VARIABLE","$this",204],["T_OBJECT_OPERATOR","->",204],["T_STRING","_extractUInt2",204],"(",["T_VARIABLE","$cmapData",204],",",["T_WHITESPACE"," ",204],["T_LNUMBER","6",204],")",";",["T_WHITESPACE","\n\n        ",204],["T_VARIABLE","$entryCount",206],["T_WHITESPACE"," ",206],"=",["T_WHITESPACE"," ",206],["T_VARIABLE","$this",206],["T_OBJECT_OPERATOR","->",206],["T_STRING","_extractUInt2",206],"(",["T_VARIABLE","$cmapData",206],",",["T_WHITESPACE"," ",206],["T_LNUMBER","8",206],")",";",["T_WHITESPACE","\n        ",206],["T_VARIABLE","$expectedCount",207],["T_WHITESPACE"," ",207],"=",["T_WHITESPACE"," ",207],"(",["T_VARIABLE","$length",207],["T_WHITESPACE"," ",207],"-",["T_WHITESPACE"," ",207],["T_LNUMBER","10",207],")",["T_WHITESPACE"," ",207],["T_SR",">>",207],["T_WHITESPACE"," ",207],["T_LNUMBER","1",207],";",["T_WHITESPACE","\n        ",207],["T_IF","if",208],["T_WHITESPACE"," ",208],"(",["T_VARIABLE","$entryCount",208],["T_WHITESPACE"," ",208],["T_IS_NOT_EQUAL","!=",208],["T_WHITESPACE"," ",208],["T_VARIABLE","$expectedCount",208],")",["T_WHITESPACE"," ",208],"{",["T_WHITESPACE","\n            ",208],["T_COMMENT","#require_once 'Zend\/Pdf\/Exception.php';\n",209],["T_WHITESPACE","            ",210],["T_THROW","throw",210],["T_WHITESPACE"," ",210],["T_NEW","new",210],["T_WHITESPACE"," ",210],["T_STRING","Zend_Pdf_Exception",210],"(","\"",["T_ENCAPSED_AND_WHITESPACE","Entry count is wrong; expected: ",210],["T_VARIABLE","$expectedCount",210],["T_ENCAPSED_AND_WHITESPACE","; actual: ",210],["T_VARIABLE","$entryCount",210],"\"",",",["T_WHITESPACE","\n                                         ",210],["T_STRING","Zend_Pdf_Exception",211],["T_DOUBLE_COLON","::",211],["T_STRING","CMAP_WRONG_ENTRY_COUNT",211],")",";",["T_WHITESPACE","\n        ",211],"}",["T_WHITESPACE","\n\n        ",212],["T_VARIABLE","$this",214],["T_OBJECT_OPERATOR","->",214],["T_STRING","_endCode",214],["T_WHITESPACE"," ",214],"=",["T_WHITESPACE"," ",214],["T_VARIABLE","$this",214],["T_OBJECT_OPERATOR","->",214],["T_STRING","_startCode",214],["T_WHITESPACE"," ",214],"+",["T_WHITESPACE"," ",214],["T_VARIABLE","$entryCount",214],["T_WHITESPACE"," ",214],"-",["T_WHITESPACE"," ",214],["T_LNUMBER","1",214],";",["T_WHITESPACE","\n\n        ",214],["T_VARIABLE","$offset",216],["T_WHITESPACE"," ",216],"=",["T_WHITESPACE"," ",216],["T_LNUMBER","10",216],";",["T_WHITESPACE","\n        ",216],["T_FOR","for",217],["T_WHITESPACE"," ",217],"(",["T_VARIABLE","$i",217],["T_WHITESPACE"," ",217],"=",["T_WHITESPACE"," ",217],["T_LNUMBER","0",217],";",["T_WHITESPACE"," ",217],["T_VARIABLE","$i",217],["T_WHITESPACE"," ",217],"<",["T_WHITESPACE"," ",217],["T_VARIABLE","$entryCount",217],";",["T_WHITESPACE"," ",217],["T_VARIABLE","$i",217],["T_INC","++",217],",",["T_WHITESPACE"," ",217],["T_VARIABLE","$offset",217],["T_WHITESPACE"," ",217],["T_PLUS_EQUAL","+=",217],["T_WHITESPACE"," ",217],["T_LNUMBER","2",217],")",["T_WHITESPACE"," ",217],"{",["T_WHITESPACE","\n            ",217],["T_VARIABLE","$this",218],["T_OBJECT_OPERATOR","->",218],["T_STRING","_glyphIndexArray",218],"[","]",["T_WHITESPACE"," ",218],"=",["T_WHITESPACE"," ",218],["T_VARIABLE","$this",218],["T_OBJECT_OPERATOR","->",218],["T_STRING","_extractUInt2",218],"(",["T_VARIABLE","$cmapData",218],",",["T_WHITESPACE"," ",218],["T_VARIABLE","$offset",218],")",";",["T_WHITESPACE","\n        ",218],"}",["T_WHITESPACE","\n\n        ",219],["T_COMMENT","\/* Sanity check: After reading all of the data, we should be at the end\n         * of the table.\n         *\/",221],["T_WHITESPACE","\n        ",223],["T_IF","if",224],["T_WHITESPACE"," ",224],"(",["T_VARIABLE","$offset",224],["T_WHITESPACE"," ",224],["T_IS_NOT_EQUAL","!=",224],["T_WHITESPACE"," ",224],["T_VARIABLE","$length",224],")",["T_WHITESPACE"," ",224],"{",["T_WHITESPACE","\n            ",224],["T_COMMENT","#require_once 'Zend\/Pdf\/Exception.php';\n",225],["T_WHITESPACE","            ",226],["T_THROW","throw",226],["T_WHITESPACE"," ",226],["T_NEW","new",226],["T_WHITESPACE"," ",226],["T_STRING","Zend_Pdf_Exception",226],"(","\"",["T_ENCAPSED_AND_WHITESPACE","Ending offset (",226],["T_VARIABLE","$offset",226],["T_ENCAPSED_AND_WHITESPACE",") does not match length (",226],["T_VARIABLE","$length",226],["T_ENCAPSED_AND_WHITESPACE",")",226],"\"",",",["T_WHITESPACE","\n                                         ",226],["T_STRING","Zend_Pdf_Exception",227],["T_DOUBLE_COLON","::",227],["T_STRING","CMAP_FINAL_OFFSET_NOT_LENGTH",227],")",";",["T_WHITESPACE","\n        ",227],"}",["T_WHITESPACE","\n    ",228],"}",["T_WHITESPACE","\n\n",229],"}",["T_WHITESPACE","\n",231]]