[["T_OPEN_TAG","<?php\n",1],["T_DOC_COMMENT","\/**\n * Zend Framework\n *\n * LICENSE\n *\n * This source file is subject to the new BSD license that is bundled\n * with this package in the file LICENSE.txt.\n * It is also available through the world-wide-web at this URL:\n * http:\/\/framework.zend.com\/license\/new-bsd\n * If you did not receive a copy of the license and are unable to\n * obtain it through the world-wide-web, please send an email\n * to license@zend.com so we can send you a copy immediately.\n *\n * @category   Zend\n * @package    Zend_Pdf\n * @subpackage Fonts\n * @copyright  Copyright (c) 2005-2015 Zend Technologies USA Inc. (http:\/\/www.zend.com)\n * @license    http:\/\/framework.zend.com\/license\/new-bsd     New BSD License\n * @version    $Id$\n *\/",2],["T_WHITESPACE","\n\n\n",21],["T_DOC_COMMENT","\/**\n * Abstract helper class for {@link Zend_Pdf_Resource_Font} which manages font\n * character maps.\n *\n * Defines the public interface for concrete subclasses which are responsible\n * for mapping Unicode characters to the font's glyph numbers. Also provides\n * shared utility methods.\n *\n * Cmap objects should ordinarily be obtained through the factory method\n * {@link cmapWithTypeData()}.\n *\n * The supported character map types are those found in the OpenType spec. For\n * additional detail on the internal binary format of these tables, see:\n * <ul>\n *  <li>{@link http:\/\/developer.apple.com\/textfonts\/TTRefMan\/RM06\/Chap6cmap.html}\n *  <li>{@link http:\/\/www.microsoft.com\/OpenType\/OTSpec\/cmap.htm}\n *  <li>{@link http:\/\/partners.adobe.com\/public\/developer\/opentype\/index_cmap.html}\n * <\/ul>\n *\n * @todo Write code for Zend_Pdf_FontCmap_HighByteMapping class.\n * @todo Write code for Zend_Pdf_FontCmap_MixedCoverage class.\n * @todo Write code for Zend_Pdf_FontCmap_TrimmedArray class.\n * @todo Write code for Zend_Pdf_FontCmap_SegmentedCoverage class.\n *\n * @package    Zend_Pdf\n * @subpackage Fonts\n * @copyright  Copyright (c) 2005-2015 Zend Technologies USA Inc. (http:\/\/www.zend.com)\n * @license    http:\/\/framework.zend.com\/license\/new-bsd     New BSD License\n *\/",24],["T_WHITESPACE","\n",52],["T_ABSTRACT","abstract",53],["T_WHITESPACE"," ",53],["T_CLASS","class",53],["T_WHITESPACE"," ",53],["T_STRING","Zend_Pdf_Cmap",53],["T_WHITESPACE","\n",53],"{",["T_WHITESPACE","\n  ",54],["T_COMMENT","\/**** Class Constants ****\/",55],["T_WHITESPACE","\n\n\n  ",55],["T_COMMENT","\/* Cmap Table Types *\/",58],["T_WHITESPACE","\n\n    ",58],["T_DOC_COMMENT","\/**\n     * Byte Encoding character map table type.\n     *\/",60],["T_WHITESPACE","\n    ",62],["T_CONST","const",63],["T_WHITESPACE"," ",63],["T_STRING","TYPE_BYTE_ENCODING",63],["T_WHITESPACE"," ",63],"=",["T_WHITESPACE"," ",63],["T_LNUMBER","0x00",63],";",["T_WHITESPACE","\n\n    ",63],["T_DOC_COMMENT","\/**\n     * High Byte Mapping character map table type.\n     *\/",65],["T_WHITESPACE","\n    ",67],["T_CONST","const",68],["T_WHITESPACE"," ",68],["T_STRING","TYPE_HIGH_BYTE_MAPPING",68],["T_WHITESPACE"," ",68],"=",["T_WHITESPACE"," ",68],["T_LNUMBER","0x02",68],";",["T_WHITESPACE","\n\n    ",68],["T_DOC_COMMENT","\/**\n     * Segment Value to Delta Mapping character map table type.\n     *\/",70],["T_WHITESPACE","\n    ",72],["T_CONST","const",73],["T_WHITESPACE"," ",73],["T_STRING","TYPE_SEGMENT_TO_DELTA",73],["T_WHITESPACE"," ",73],"=",["T_WHITESPACE"," ",73],["T_LNUMBER","0x04",73],";",["T_WHITESPACE","\n\n    ",73],["T_DOC_COMMENT","\/**\n     * Trimmed Table character map table type.\n     *\/",75],["T_WHITESPACE","\n    ",77],["T_CONST","const",78],["T_WHITESPACE"," ",78],["T_STRING","TYPE_TRIMMED_TABLE",78],["T_WHITESPACE"," ",78],"=",["T_WHITESPACE"," ",78],["T_LNUMBER","0x06",78],";",["T_WHITESPACE","\n\n    ",78],["T_DOC_COMMENT","\/**\n     * Mixed Coverage character map table type.\n     *\/",80],["T_WHITESPACE","\n    ",82],["T_CONST","const",83],["T_WHITESPACE"," ",83],["T_STRING","TYPE_MIXED_COVERAGE",83],["T_WHITESPACE"," ",83],"=",["T_WHITESPACE"," ",83],["T_LNUMBER","0x08",83],";",["T_WHITESPACE","\n\n    ",83],["T_DOC_COMMENT","\/**\n     * Trimmed Array character map table type.\n     *\/",85],["T_WHITESPACE","\n    ",87],["T_CONST","const",88],["T_WHITESPACE"," ",88],["T_STRING","TYPE_TRIMMED_ARRAY",88],["T_WHITESPACE"," ",88],"=",["T_WHITESPACE"," ",88],["T_LNUMBER","0x0a",88],";",["T_WHITESPACE","\n\n    ",88],["T_DOC_COMMENT","\/**\n     * Segmented Coverage character map table type.\n     *\/",90],["T_WHITESPACE","\n    ",92],["T_CONST","const",93],["T_WHITESPACE"," ",93],["T_STRING","TYPE_SEGMENTED_COVERAGE",93],["T_WHITESPACE"," ",93],"=",["T_WHITESPACE"," ",93],["T_LNUMBER","0x0c",93],";",["T_WHITESPACE","\n\n    ",93],["T_DOC_COMMENT","\/**\n     * Static Byte Encoding character map table type. Variant of\n     * {@link TYPE_BYTEENCODING}.\n     *\/",95],["T_WHITESPACE","\n    ",98],["T_CONST","const",99],["T_WHITESPACE"," ",99],["T_STRING","TYPE_BYTE_ENCODING_STATIC",99],["T_WHITESPACE"," ",99],"=",["T_WHITESPACE"," ",99],["T_LNUMBER","0xf1",99],";",["T_WHITESPACE","\n\n    ",99],["T_DOC_COMMENT","\/**\n     * Unknown character map table type.\n     *\/",101],["T_WHITESPACE","\n    ",103],["T_CONST","const",104],["T_WHITESPACE"," ",104],["T_STRING","TYPE_UNKNOWN",104],["T_WHITESPACE"," ",104],"=",["T_WHITESPACE"," ",104],["T_LNUMBER","0xff",104],";",["T_WHITESPACE","\n\n\n  ",104],["T_COMMENT","\/* Special Glyph Names *\/",107],["T_WHITESPACE","\n\n    ",107],["T_DOC_COMMENT","\/**\n     * Glyph representing missing characters.\n     *\/",109],["T_WHITESPACE","\n    ",111],["T_CONST","const",112],["T_WHITESPACE"," ",112],["T_STRING","MISSING_CHARACTER_GLYPH",112],["T_WHITESPACE"," ",112],"=",["T_WHITESPACE"," ",112],["T_LNUMBER","0x00",112],";",["T_WHITESPACE","\n\n\n\n  ",112],["T_COMMENT","\/**** Public Interface ****\/",116],["T_WHITESPACE","\n\n\n  ",116],["T_COMMENT","\/* Factory Methods *\/",119],["T_WHITESPACE","\n\n    ",119],["T_DOC_COMMENT","\/**\n     * Instantiates the appropriate concrete subclass based on the type of cmap\n     * table and returns the instance.\n     *\n     * The cmap type must be one of the following values:\n     * <ul>\n     *  <li>{@link Zend_Pdf_Cmap::TYPE_BYTE_ENCODING}\n     *  <li>{@link Zend_Pdf_Cmap::TYPE_BYTE_ENCODING_STATIC}\n     *  <li>{@link Zend_Pdf_Cmap::TYPE_HIGH_BYTE_MAPPING}\n     *  <li>{@link Zend_Pdf_Cmap::TYPE_SEGMENT_TO_DELTA}\n     *  <li>{@link Zend_Pdf_Cmap::TYPE_TRIMMED_TABLE}\n     *  <li>{@link Zend_Pdf_Cmap::TYPE_MIXED_COVERAGE}\n     *  <li>{@link Zend_Pdf_Cmap::TYPE_TRIMMED_ARRAY}\n     *  <li>{@link Zend_Pdf_Cmap::TYPE_SEGMENTED_COVERAGE}\n     * <\/ul>\n     *\n     * Throws an exception if the table type is invalid or the cmap table data\n     * cannot be validated.\n     *\n     * @param integer $cmapType Type of cmap.\n     * @param mixed $cmapData Cmap table data. Usually a string or array.\n     * @return Zend_Pdf_Cmap\n     * @throws Zend_Pdf_Exception\n     *\/",121],["T_WHITESPACE","\n    ",144],["T_PUBLIC","public",145],["T_WHITESPACE"," ",145],["T_STATIC","static",145],["T_WHITESPACE"," ",145],["T_FUNCTION","function",145],["T_WHITESPACE"," ",145],["T_STRING","cmapWithTypeData",145],"(",["T_VARIABLE","$cmapType",145],",",["T_WHITESPACE"," ",145],["T_VARIABLE","$cmapData",145],")",["T_WHITESPACE","\n    ",145],"{",["T_WHITESPACE","\n        ",146],["T_SWITCH","switch",147],["T_WHITESPACE"," ",147],"(",["T_VARIABLE","$cmapType",147],")",["T_WHITESPACE"," ",147],"{",["T_WHITESPACE","\n            ",147],["T_CASE","case",148],["T_WHITESPACE"," ",148],["T_STRING","Zend_Pdf_Cmap",148],["T_DOUBLE_COLON","::",148],["T_STRING","TYPE_BYTE_ENCODING",148],":",["T_WHITESPACE","\n                ",148],["T_COMMENT","#require_once 'Zend\/Pdf\/Cmap\/ByteEncoding.php';\n",149],["T_WHITESPACE","                ",150],["T_RETURN","return",150],["T_WHITESPACE"," ",150],["T_NEW","new",150],["T_WHITESPACE"," ",150],["T_STRING","Zend_Pdf_Cmap_ByteEncoding",150],"(",["T_VARIABLE","$cmapData",150],")",";",["T_WHITESPACE","\n\n            ",150],["T_CASE","case",152],["T_WHITESPACE"," ",152],["T_STRING","Zend_Pdf_Cmap",152],["T_DOUBLE_COLON","::",152],["T_STRING","TYPE_BYTE_ENCODING_STATIC",152],":",["T_WHITESPACE","\n                ",152],["T_COMMENT","#require_once 'Zend\/Pdf\/Cmap\/ByteEncoding\/Static.php';\n",153],["T_WHITESPACE","                ",154],["T_RETURN","return",154],["T_WHITESPACE"," ",154],["T_NEW","new",154],["T_WHITESPACE"," ",154],["T_STRING","Zend_Pdf_Cmap_ByteEncoding_Static",154],"(",["T_VARIABLE","$cmapData",154],")",";",["T_WHITESPACE","\n\n            ",154],["T_CASE","case",156],["T_WHITESPACE"," ",156],["T_STRING","Zend_Pdf_Cmap",156],["T_DOUBLE_COLON","::",156],["T_STRING","TYPE_HIGH_BYTE_MAPPING",156],":",["T_WHITESPACE","\n                ",156],["T_COMMENT","#require_once 'Zend\/Pdf\/Exception.php';\n",157],["T_WHITESPACE","                ",158],["T_THROW","throw",158],["T_WHITESPACE"," ",158],["T_NEW","new",158],["T_WHITESPACE"," ",158],["T_STRING","Zend_Pdf_Exception",158],"(",["T_CONSTANT_ENCAPSED_STRING","'High byte mapping cmap currently unsupported'",158],",",["T_WHITESPACE","\n                                             ",158],["T_STRING","Zend_Pdf_Exception",159],["T_DOUBLE_COLON","::",159],["T_STRING","CMAP_TYPE_UNSUPPORTED",159],")",";",["T_WHITESPACE","\n\n            ",159],["T_CASE","case",161],["T_WHITESPACE"," ",161],["T_STRING","Zend_Pdf_Cmap",161],["T_DOUBLE_COLON","::",161],["T_STRING","TYPE_SEGMENT_TO_DELTA",161],":",["T_WHITESPACE","\n                ",161],["T_COMMENT","#require_once 'Zend\/Pdf\/Cmap\/SegmentToDelta.php';\n",162],["T_WHITESPACE","                ",163],["T_RETURN","return",163],["T_WHITESPACE"," ",163],["T_NEW","new",163],["T_WHITESPACE"," ",163],["T_STRING","Zend_Pdf_Cmap_SegmentToDelta",163],"(",["T_VARIABLE","$cmapData",163],")",";",["T_WHITESPACE","\n\n            ",163],["T_CASE","case",165],["T_WHITESPACE"," ",165],["T_STRING","Zend_Pdf_Cmap",165],["T_DOUBLE_COLON","::",165],["T_STRING","TYPE_TRIMMED_TABLE",165],":",["T_WHITESPACE","\n                ",165],["T_COMMENT","#require_once 'Zend\/Pdf\/Cmap\/TrimmedTable.php';\n",166],["T_WHITESPACE","                ",167],["T_RETURN","return",167],["T_WHITESPACE"," ",167],["T_NEW","new",167],["T_WHITESPACE"," ",167],["T_STRING","Zend_Pdf_Cmap_TrimmedTable",167],"(",["T_VARIABLE","$cmapData",167],")",";",["T_WHITESPACE","\n\n            ",167],["T_CASE","case",169],["T_WHITESPACE"," ",169],["T_STRING","Zend_Pdf_Cmap",169],["T_DOUBLE_COLON","::",169],["T_STRING","TYPE_MIXED_COVERAGE",169],":",["T_WHITESPACE","\n                ",169],["T_COMMENT","#require_once 'Zend\/Pdf\/Exception.php';\n",170],["T_WHITESPACE","                ",171],["T_THROW","throw",171],["T_WHITESPACE"," ",171],["T_NEW","new",171],["T_WHITESPACE"," ",171],["T_STRING","Zend_Pdf_Exception",171],"(",["T_CONSTANT_ENCAPSED_STRING","'Mixed coverage cmap currently unsupported'",171],",",["T_WHITESPACE","\n                                             ",171],["T_STRING","Zend_Pdf_Exception",172],["T_DOUBLE_COLON","::",172],["T_STRING","CMAP_TYPE_UNSUPPORTED",172],")",";",["T_WHITESPACE","\n\n            ",172],["T_CASE","case",174],["T_WHITESPACE"," ",174],["T_STRING","Zend_Pdf_Cmap",174],["T_DOUBLE_COLON","::",174],["T_STRING","TYPE_TRIMMED_ARRAY",174],":",["T_WHITESPACE","\n                ",174],["T_COMMENT","#require_once 'Zend\/Pdf\/Exception.php';\n",175],["T_WHITESPACE","                ",176],["T_THROW","throw",176],["T_WHITESPACE"," ",176],["T_NEW","new",176],["T_WHITESPACE"," ",176],["T_STRING","Zend_Pdf_Exception",176],"(",["T_CONSTANT_ENCAPSED_STRING","'Trimmed array cmap currently unsupported'",176],",",["T_WHITESPACE","\n                                             ",176],["T_STRING","Zend_Pdf_Exception",177],["T_DOUBLE_COLON","::",177],["T_STRING","CMAP_TYPE_UNSUPPORTED",177],")",";",["T_WHITESPACE","\n\n            ",177],["T_CASE","case",179],["T_WHITESPACE"," ",179],["T_STRING","Zend_Pdf_Cmap",179],["T_DOUBLE_COLON","::",179],["T_STRING","TYPE_SEGMENTED_COVERAGE",179],":",["T_WHITESPACE","\n                ",179],["T_COMMENT","#require_once 'Zend\/Pdf\/Exception.php';\n",180],["T_WHITESPACE","                ",181],["T_THROW","throw",181],["T_WHITESPACE"," ",181],["T_NEW","new",181],["T_WHITESPACE"," ",181],["T_STRING","Zend_Pdf_Exception",181],"(",["T_CONSTANT_ENCAPSED_STRING","'Segmented coverage cmap currently unsupported'",181],",",["T_WHITESPACE","\n                                             ",181],["T_STRING","Zend_Pdf_Exception",182],["T_DOUBLE_COLON","::",182],["T_STRING","CMAP_TYPE_UNSUPPORTED",182],")",";",["T_WHITESPACE","\n\n            ",182],["T_DEFAULT","default",184],":",["T_WHITESPACE","\n                ",184],["T_COMMENT","#require_once 'Zend\/Pdf\/Exception.php';\n",185],["T_WHITESPACE","                ",186],["T_THROW","throw",186],["T_WHITESPACE"," ",186],["T_NEW","new",186],["T_WHITESPACE"," ",186],["T_STRING","Zend_Pdf_Exception",186],"(","\"",["T_ENCAPSED_AND_WHITESPACE","Unknown cmap type: ",186],["T_VARIABLE","$cmapType",186],"\"",",",["T_WHITESPACE","\n                                             ",186],["T_STRING","Zend_Pdf_Exception",187],["T_DOUBLE_COLON","::",187],["T_STRING","CMAP_UNKNOWN_TYPE",187],")",";",["T_WHITESPACE","\n        ",187],"}",["T_WHITESPACE","\n    ",188],"}",["T_WHITESPACE","\n\n\n  ",189],["T_COMMENT","\/* Abstract Methods *\/",192],["T_WHITESPACE","\n\n    ",192],["T_DOC_COMMENT","\/**\n     * Object constructor\n     *\n     * Parses the raw binary table data. Throws an exception if the table is\n     * malformed.\n     *\n     * @param string $cmapData Raw binary cmap table data.\n     * @throws Zend_Pdf_Exception\n     *\/",194],["T_WHITESPACE","\n    ",202],["T_ABSTRACT","abstract",203],["T_WHITESPACE"," ",203],["T_PUBLIC","public",203],["T_WHITESPACE"," ",203],["T_FUNCTION","function",203],["T_WHITESPACE"," ",203],["T_STRING","__construct",203],"(",["T_VARIABLE","$cmapData",203],")",";",["T_WHITESPACE","\n\n    ",203],["T_DOC_COMMENT","\/**\n     * Returns an array of glyph numbers corresponding to the Unicode characters.\n     *\n     * If a particular character doesn't exist in this font, the special 'missing\n     * character glyph' will be substituted.\n     *\n     * See also {@link glyphNumberForCharacter()}.\n     *\n     * @param array $characterCodes Array of Unicode character codes (code points).\n     * @return array Array of glyph numbers.\n     *\/",205],["T_WHITESPACE","\n    ",215],["T_ABSTRACT","abstract",216],["T_WHITESPACE"," ",216],["T_PUBLIC","public",216],["T_WHITESPACE"," ",216],["T_FUNCTION","function",216],["T_WHITESPACE"," ",216],["T_STRING","glyphNumbersForCharacters",216],"(",["T_VARIABLE","$characterCodes",216],")",";",["T_WHITESPACE","\n\n    ",216],["T_DOC_COMMENT","\/**\n     * Returns the glyph number corresponding to the Unicode character.\n     *\n     * If a particular character doesn't exist in this font, the special 'missing\n     * character glyph' will be substituted.\n     *\n     * See also {@link glyphNumbersForCharacters()} which is optimized for bulk\n     * operations.\n     *\n     * @param integer $characterCode Unicode character code (code point).\n     * @return integer Glyph number.\n     *\/",218],["T_WHITESPACE","\n    ",229],["T_ABSTRACT","abstract",230],["T_WHITESPACE"," ",230],["T_PUBLIC","public",230],["T_WHITESPACE"," ",230],["T_FUNCTION","function",230],["T_WHITESPACE"," ",230],["T_STRING","glyphNumberForCharacter",230],"(",["T_VARIABLE","$characterCode",230],")",";",["T_WHITESPACE","\n\n    ",230],["T_DOC_COMMENT","\/**\n     * Returns an array containing the Unicode characters that have entries in\n     * this character map.\n     *\n     * @return array Unicode character codes.\n     *\/",232],["T_WHITESPACE","\n    ",237],["T_ABSTRACT","abstract",238],["T_WHITESPACE"," ",238],["T_PUBLIC","public",238],["T_WHITESPACE"," ",238],["T_FUNCTION","function",238],["T_WHITESPACE"," ",238],["T_STRING","getCoveredCharacters",238],"(",")",";",["T_WHITESPACE","\n\n    ",238],["T_DOC_COMMENT","\/**\n     * Returns an array containing the glyphs numbers that have entries in this character map.\n     * Keys are Unicode character codes (integers)\n     *\n     * This functionality is partially covered by glyphNumbersForCharacters(getCoveredCharacters())\n     * call, but this method do it in more effective way (prepare complete list instead of searching\n     * glyph for each character code).\n     *\n     * @internal\n     * @return array Array representing <Unicode character code> => <glyph number> pairs.\n     *\/",240],["T_WHITESPACE","\n    ",250],["T_ABSTRACT","abstract",251],["T_WHITESPACE"," ",251],["T_PUBLIC","public",251],["T_WHITESPACE"," ",251],["T_FUNCTION","function",251],["T_WHITESPACE"," ",251],["T_STRING","getCoveredCharactersGlyphs",251],"(",")",";",["T_WHITESPACE","\n\n\n  ",251],["T_COMMENT","\/**** Internal Methods ****\/",254],["T_WHITESPACE","\n\n\n  ",254],["T_COMMENT","\/* Internal Utility Methods *\/",257],["T_WHITESPACE","\n\n    ",257],["T_DOC_COMMENT","\/**\n     * Extracts a signed 2-byte integer from a string.\n     *\n     * Integers are always big-endian. Throws an exception if the index is out\n     * of range.\n     *\n     * @param string &$data\n     * @param integer $index Position in string of integer.\n     * @return integer\n     * @throws Zend_Pdf_Exception\n     *\/",259],["T_WHITESPACE","\n    ",269],["T_PROTECTED","protected",270],["T_WHITESPACE"," ",270],["T_FUNCTION","function",270],["T_WHITESPACE"," ",270],["T_STRING","_extractInt2",270],"(","&",["T_VARIABLE","$data",270],",",["T_WHITESPACE"," ",270],["T_VARIABLE","$index",270],")",["T_WHITESPACE","\n    ",270],"{",["T_WHITESPACE","\n        ",271],["T_IF","if",272],["T_WHITESPACE"," ",272],"(","(",["T_VARIABLE","$index",272],["T_WHITESPACE"," ",272],"<",["T_WHITESPACE"," ",272],["T_LNUMBER","0",272],")",["T_WHITESPACE"," ",272],"|",["T_WHITESPACE"," ",272],"(","(",["T_VARIABLE","$index",272],["T_WHITESPACE"," ",272],"+",["T_WHITESPACE"," ",272],["T_LNUMBER","1",272],")",["T_WHITESPACE"," ",272],">",["T_WHITESPACE"," ",272],["T_STRING","strlen",272],"(",["T_VARIABLE","$data",272],")",")",")",["T_WHITESPACE"," ",272],"{",["T_WHITESPACE","\n            ",272],["T_COMMENT","#require_once 'Zend\/Pdf\/Exception.php';\n",273],["T_WHITESPACE","            ",274],["T_THROW","throw",274],["T_WHITESPACE"," ",274],["T_NEW","new",274],["T_WHITESPACE"," ",274],["T_STRING","Zend_Pdf_Exception",274],"(","\"",["T_ENCAPSED_AND_WHITESPACE","Index out of range: ",274],["T_VARIABLE","$index",274],"\"",",",["T_WHITESPACE","\n                                         ",274],["T_STRING","Zend_Pdf_Exception",275],["T_DOUBLE_COLON","::",275],["T_STRING","INDEX_OUT_OF_RANGE",275],")",";",["T_WHITESPACE","\n        ",275],"}",["T_WHITESPACE","\n        ",276],["T_VARIABLE","$number",277],["T_WHITESPACE"," ",277],"=",["T_WHITESPACE"," ",277],["T_STRING","ord",277],"(",["T_VARIABLE","$data",277],"[",["T_VARIABLE","$index",277],"]",")",";",["T_WHITESPACE","\n        ",277],["T_IF","if",278],["T_WHITESPACE"," ",278],"(","(",["T_VARIABLE","$number",278],["T_WHITESPACE"," ",278],"&",["T_WHITESPACE"," ",278],["T_LNUMBER","0x80",278],")",["T_WHITESPACE"," ",278],["T_IS_EQUAL","==",278],["T_WHITESPACE"," ",278],["T_LNUMBER","0x80",278],")",["T_WHITESPACE"," ",278],"{",["T_WHITESPACE","    ",278],["T_COMMENT","\/\/ negative\n",278],["T_WHITESPACE","            ",279],["T_VARIABLE","$number",279],["T_WHITESPACE"," ",279],"=",["T_WHITESPACE"," ",279],"~","(","(","(","(","~",["T_WHITESPACE"," ",279],["T_VARIABLE","$number",279],")",["T_WHITESPACE"," ",279],"&",["T_WHITESPACE"," ",279],["T_LNUMBER","0xff",279],")",["T_WHITESPACE"," ",279],["T_SL","<<",279],["T_WHITESPACE"," ",279],["T_LNUMBER","8",279],")",["T_WHITESPACE"," ",279],"|",["T_WHITESPACE"," ",279],"(","(","~",["T_WHITESPACE"," ",279],["T_STRING","ord",279],"(",["T_VARIABLE","$data",279],"[",["T_INC","++",279],["T_VARIABLE","$index",279],"]",")",")",["T_WHITESPACE"," ",279],"&",["T_WHITESPACE"," ",279],["T_LNUMBER","0xff",279],")",")",";",["T_WHITESPACE","\n        ",279],"}",["T_WHITESPACE"," ",280],["T_ELSE","else",280],["T_WHITESPACE"," ",280],"{",["T_WHITESPACE","\n            ",280],["T_VARIABLE","$number",281],["T_WHITESPACE"," ",281],"=",["T_WHITESPACE"," ",281],"(",["T_VARIABLE","$number",281],["T_WHITESPACE"," ",281],["T_SL","<<",281],["T_WHITESPACE"," ",281],["T_LNUMBER","8",281],")",["T_WHITESPACE"," ",281],"|",["T_WHITESPACE"," ",281],["T_STRING","ord",281],"(",["T_VARIABLE","$data",281],"[",["T_INC","++",281],["T_VARIABLE","$index",281],"]",")",";",["T_WHITESPACE","\n        ",281],"}",["T_WHITESPACE","\n        ",282],["T_RETURN","return",283],["T_WHITESPACE"," ",283],["T_VARIABLE","$number",283],";",["T_WHITESPACE","\n    ",283],"}",["T_WHITESPACE","\n\n    ",284],["T_DOC_COMMENT","\/**\n     * Extracts an unsigned 2-byte integer from a string.\n     *\n     * Integers are always big-endian. Throws an exception if the index is out\n     * of range.\n     *\n     * @param string &$data\n     * @param integer $index Position in string of integer.\n     * @return integer\n     * @throws Zend_Pdf_Exception\n     *\/",286],["T_WHITESPACE","\n    ",296],["T_PROTECTED","protected",297],["T_WHITESPACE"," ",297],["T_FUNCTION","function",297],["T_WHITESPACE"," ",297],["T_STRING","_extractUInt2",297],"(","&",["T_VARIABLE","$data",297],",",["T_WHITESPACE"," ",297],["T_VARIABLE","$index",297],")",["T_WHITESPACE","\n    ",297],"{",["T_WHITESPACE","\n        ",298],["T_IF","if",299],["T_WHITESPACE"," ",299],"(","(",["T_VARIABLE","$index",299],["T_WHITESPACE"," ",299],"<",["T_WHITESPACE"," ",299],["T_LNUMBER","0",299],")",["T_WHITESPACE"," ",299],"|",["T_WHITESPACE"," ",299],"(","(",["T_VARIABLE","$index",299],["T_WHITESPACE"," ",299],"+",["T_WHITESPACE"," ",299],["T_LNUMBER","1",299],")",["T_WHITESPACE"," ",299],">",["T_WHITESPACE"," ",299],["T_STRING","strlen",299],"(",["T_VARIABLE","$data",299],")",")",")",["T_WHITESPACE"," ",299],"{",["T_WHITESPACE","\n            ",299],["T_COMMENT","#require_once 'Zend\/Pdf\/Exception.php';\n",300],["T_WHITESPACE","            ",301],["T_THROW","throw",301],["T_WHITESPACE"," ",301],["T_NEW","new",301],["T_WHITESPACE"," ",301],["T_STRING","Zend_Pdf_Exception",301],"(","\"",["T_ENCAPSED_AND_WHITESPACE","Index out of range: ",301],["T_VARIABLE","$index",301],"\"",",",["T_WHITESPACE","\n                                         ",301],["T_STRING","Zend_Pdf_Exception",302],["T_DOUBLE_COLON","::",302],["T_STRING","INDEX_OUT_OF_RANGE",302],")",";",["T_WHITESPACE","\n        ",302],"}",["T_WHITESPACE","\n        ",303],["T_VARIABLE","$number",304],["T_WHITESPACE"," ",304],"=",["T_WHITESPACE"," ",304],"(",["T_STRING","ord",304],"(",["T_VARIABLE","$data",304],"[",["T_VARIABLE","$index",304],"]",")",["T_WHITESPACE"," ",304],["T_SL","<<",304],["T_WHITESPACE"," ",304],["T_LNUMBER","8",304],")",["T_WHITESPACE"," ",304],"|",["T_WHITESPACE"," ",304],["T_STRING","ord",304],"(",["T_VARIABLE","$data",304],"[",["T_INC","++",304],["T_VARIABLE","$index",304],"]",")",";",["T_WHITESPACE","\n        ",304],["T_RETURN","return",305],["T_WHITESPACE"," ",305],["T_VARIABLE","$number",305],";",["T_WHITESPACE","\n    ",305],"}",["T_WHITESPACE","\n\n    ",306],["T_DOC_COMMENT","\/**\n     * Extracts an unsigned 4-byte integer from a string.\n     *\n     * Integers are always big-endian. Throws an exception if the index is out\n     * of range.\n     *\n     * NOTE: If you ask for a 4-byte unsigned integer on a 32-bit machine, the\n     * resulting value WILL BE SIGNED because PHP uses signed integers internally\n     * for everything. To guarantee portability, be sure to use bitwise or\n     * similar operators on large integers!\n     *\n     * @param string &$data\n     * @param integer $index Position in string of integer.\n     * @return integer\n     * @throws Zend_Pdf_Exception\n     *\/",308],["T_WHITESPACE","\n    ",323],["T_PROTECTED","protected",324],["T_WHITESPACE"," ",324],["T_FUNCTION","function",324],["T_WHITESPACE"," ",324],["T_STRING","_extractUInt4",324],"(","&",["T_VARIABLE","$data",324],",",["T_WHITESPACE"," ",324],["T_VARIABLE","$index",324],")",["T_WHITESPACE","\n    ",324],"{",["T_WHITESPACE","\n        ",325],["T_IF","if",326],["T_WHITESPACE"," ",326],"(","(",["T_VARIABLE","$index",326],["T_WHITESPACE"," ",326],"<",["T_WHITESPACE"," ",326],["T_LNUMBER","0",326],")",["T_WHITESPACE"," ",326],"|",["T_WHITESPACE"," ",326],"(","(",["T_VARIABLE","$index",326],["T_WHITESPACE"," ",326],"+",["T_WHITESPACE"," ",326],["T_LNUMBER","3",326],")",["T_WHITESPACE"," ",326],">",["T_WHITESPACE"," ",326],["T_STRING","strlen",326],"(",["T_VARIABLE","$data",326],")",")",")",["T_WHITESPACE"," ",326],"{",["T_WHITESPACE","\n            ",326],["T_COMMENT","#require_once 'Zend\/Pdf\/Exception.php';\n",327],["T_WHITESPACE","            ",328],["T_THROW","throw",328],["T_WHITESPACE"," ",328],["T_NEW","new",328],["T_WHITESPACE"," ",328],["T_STRING","Zend_Pdf_Exception",328],"(","\"",["T_ENCAPSED_AND_WHITESPACE","Index out of range: ",328],["T_VARIABLE","$index",328],"\"",",",["T_WHITESPACE","\n                                         ",328],["T_STRING","Zend_Pdf_Exception",329],["T_DOUBLE_COLON","::",329],["T_STRING","INDEX_OUT_OF_RANGE",329],")",";",["T_WHITESPACE","\n        ",329],"}",["T_WHITESPACE","\n        ",330],["T_VARIABLE","$number",331],["T_WHITESPACE"," ",331],"=",["T_WHITESPACE"," ",331],"(",["T_STRING","ord",331],"(",["T_VARIABLE","$data",331],"[",["T_VARIABLE","$index",331],"]",")",["T_WHITESPACE"," ",331],["T_SL","<<",331],["T_WHITESPACE"," ",331],["T_LNUMBER","24",331],")",["T_WHITESPACE"," ",331],"|",["T_WHITESPACE"," ",331],"(",["T_STRING","ord",331],"(",["T_VARIABLE","$data",331],"[",["T_INC","++",331],["T_VARIABLE","$index",331],"]",")",["T_WHITESPACE"," ",331],["T_SL","<<",331],["T_WHITESPACE"," ",331],["T_LNUMBER","16",331],")",["T_WHITESPACE"," ",331],"|",["T_WHITESPACE","\n                  ",331],"(",["T_STRING","ord",332],"(",["T_VARIABLE","$data",332],"[",["T_INC","++",332],["T_VARIABLE","$index",332],"]",")",["T_WHITESPACE"," ",332],["T_SL","<<",332],["T_WHITESPACE"," ",332],["T_LNUMBER","8",332],")",["T_WHITESPACE"," ",332],"|",["T_WHITESPACE"," ",332],["T_STRING","ord",332],"(",["T_VARIABLE","$data",332],"[",["T_INC","++",332],["T_VARIABLE","$index",332],"]",")",";",["T_WHITESPACE","\n        ",332],["T_RETURN","return",333],["T_WHITESPACE"," ",333],["T_VARIABLE","$number",333],";",["T_WHITESPACE","\n    ",333],"}",["T_WHITESPACE","\n\n",334],"}",["T_WHITESPACE","\n",336]]