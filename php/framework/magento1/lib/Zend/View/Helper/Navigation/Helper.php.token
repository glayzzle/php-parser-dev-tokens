[["T_OPEN_TAG","<?php\n",1],["T_DOC_COMMENT","\/**\n * Zend Framework\n *\n * LICENSE\n *\n * This source file is subject to the new BSD license that is bundled\n * with this package in the file LICENSE.txt.\n * It is also available through the world-wide-web at this URL:\n * http:\/\/framework.zend.com\/license\/new-bsd\n * If you did not receive a copy of the license and are unable to\n * obtain it through the world-wide-web, please send an email\n * to license@zend.com so we can send you a copy immediately.\n *\n * @category   Zend\n * @package    Zend_View\n * @subpackage Helper\n * @copyright  Copyright (c) 2005-2015 Zend Technologies USA Inc. (http:\/\/www.zend.com)\n * @license    http:\/\/framework.zend.com\/license\/new-bsd     New BSD License\n * @version    $Id$\n *\/",2],["T_WHITESPACE","\n\n",21],["T_DOC_COMMENT","\/**\n * Interface for navigational helpers\n *\n * @category   Zend\n * @package    Zend_View\n * @subpackage Helper\n * @copyright  Copyright (c) 2005-2015 Zend Technologies USA Inc. (http:\/\/www.zend.com)\n * @license    http:\/\/framework.zend.com\/license\/new-bsd     New BSD License\n *\/",23],["T_WHITESPACE","\n",31],["T_INTERFACE","interface",32],["T_WHITESPACE"," ",32],["T_STRING","Zend_View_Helper_Navigation_Helper",32],["T_WHITESPACE","\n",32],"{",["T_WHITESPACE","\n    ",33],["T_DOC_COMMENT","\/**\n     * Sets navigation container the helper should operate on by default\n     *\n     * @param  Zend_Navigation_Container $container  [optional] container to\n     *                                               operate on. Default is\n     *                                               null, which indicates that\n     *                                               the container should be\n     *                                               reset.\n     * @return Zend_View_Helper_Navigation_Helper    fluent interface, returns\n     *                                               self\n     *\/",34],["T_WHITESPACE","\n    ",44],["T_PUBLIC","public",45],["T_WHITESPACE"," ",45],["T_FUNCTION","function",45],["T_WHITESPACE"," ",45],["T_STRING","setContainer",45],"(",["T_STRING","Zend_Navigation_Container",45],["T_WHITESPACE"," ",45],["T_VARIABLE","$container",45],["T_WHITESPACE"," ",45],"=",["T_WHITESPACE"," ",45],["T_STRING","null",45],")",";",["T_WHITESPACE","\n\n    ",45],["T_DOC_COMMENT","\/**\n     * Returns the navigation container the helper operates on by default\n     *\n     * @return Zend_Navigation_Container  navigation container\n     *\/",47],["T_WHITESPACE","\n    ",51],["T_PUBLIC","public",52],["T_WHITESPACE"," ",52],["T_FUNCTION","function",52],["T_WHITESPACE"," ",52],["T_STRING","getContainer",52],"(",")",";",["T_WHITESPACE","\n\n    ",52],["T_DOC_COMMENT","\/**\n     * Sets translator to use in helper\n     *\n     * @param  mixed $translator                   [optional] translator.\n     *                                             Expects an object of type\n     *                                             {@link Zend_Translate_Adapter}\n     *                                             or {@link Zend_Translate},\n     *                                             or null. Default is null.\n     * @return Zend_View_Helper_Navigation_Helper  fluent interface, returns\n     *                                             self\n     *\/",54],["T_WHITESPACE","\n    ",64],["T_PUBLIC","public",65],["T_WHITESPACE"," ",65],["T_FUNCTION","function",65],["T_WHITESPACE"," ",65],["T_STRING","setTranslator",65],"(",["T_VARIABLE","$translator",65],["T_WHITESPACE"," ",65],"=",["T_WHITESPACE"," ",65],["T_STRING","null",65],")",";",["T_WHITESPACE","\n\n    ",65],["T_DOC_COMMENT","\/**\n     * Returns translator used in helper\n     *\n     * @return Zend_Translate_Adapter|null  translator or null\n     *\/",67],["T_WHITESPACE","\n    ",71],["T_PUBLIC","public",72],["T_WHITESPACE"," ",72],["T_FUNCTION","function",72],["T_WHITESPACE"," ",72],["T_STRING","getTranslator",72],"(",")",";",["T_WHITESPACE","\n\n    ",72],["T_DOC_COMMENT","\/**\n     * Sets ACL to use when iterating pages\n     *\n     * @param  Zend_Acl $acl                       [optional] ACL instance\n     * @return Zend_View_Helper_Navigation_Helper  fluent interface, returns\n     *                                             self\n     *\/",74],["T_WHITESPACE","\n    ",80],["T_PUBLIC","public",81],["T_WHITESPACE"," ",81],["T_FUNCTION","function",81],["T_WHITESPACE"," ",81],["T_STRING","setAcl",81],"(",["T_STRING","Zend_Acl",81],["T_WHITESPACE"," ",81],["T_VARIABLE","$acl",81],["T_WHITESPACE"," ",81],"=",["T_WHITESPACE"," ",81],["T_STRING","null",81],")",";",["T_WHITESPACE","\n\n    ",81],["T_DOC_COMMENT","\/**\n     * Returns ACL or null if it isn't set using {@link setAcl()} or\n     * {@link setDefaultAcl()}\n     *\n     * @return Zend_Acl|null  ACL object or null\n     *\/",83],["T_WHITESPACE","\n    ",88],["T_PUBLIC","public",89],["T_WHITESPACE"," ",89],["T_FUNCTION","function",89],["T_WHITESPACE"," ",89],["T_STRING","getAcl",89],"(",")",";",["T_WHITESPACE","\n\n    ",89],["T_DOC_COMMENT","\/**\n     * Sets ACL role to use when iterating pages\n     *\n     * @param  mixed $role                         [optional] role to set.\n     *                                             Expects a string, an\n     *                                             instance of type\n     *                                             {@link Zend_Acl_Role_Interface},\n     *                                             or null. Default is null.\n     * @throws Zend_View_Exception                 if $role is invalid\n     * @return Zend_View_Helper_Navigation_Helper  fluent interface, returns\n     *                                             self\n     *\/",91],["T_WHITESPACE","\n    ",102],["T_PUBLIC","public",103],["T_WHITESPACE"," ",103],["T_FUNCTION","function",103],["T_WHITESPACE"," ",103],["T_STRING","setRole",103],"(",["T_VARIABLE","$role",103],["T_WHITESPACE"," ",103],"=",["T_WHITESPACE"," ",103],["T_STRING","null",103],")",";",["T_WHITESPACE","\n\n    ",103],["T_DOC_COMMENT","\/**\n     * Returns ACL role to use when iterating pages, or null if it isn't set\n     *\n     * @return string|Zend_Acl_Role_Interface|null  role or null\n     *\/",105],["T_WHITESPACE","\n    ",109],["T_PUBLIC","public",110],["T_WHITESPACE"," ",110],["T_FUNCTION","function",110],["T_WHITESPACE"," ",110],["T_STRING","getRole",110],"(",")",";",["T_WHITESPACE","\n\n    ",110],["T_DOC_COMMENT","\/**\n     * Sets whether ACL should be used\n     *\n     * @param  bool $useAcl                        [optional] whether ACL\n     *                                             should be used. Default is\n     *                                             true.\n     * @return Zend_View_Helper_Navigation_Helper  fluent interface, returns\n     *                                             self\n     *\/",112],["T_WHITESPACE","\n    ",120],["T_PUBLIC","public",121],["T_WHITESPACE"," ",121],["T_FUNCTION","function",121],["T_WHITESPACE"," ",121],["T_STRING","setUseAcl",121],"(",["T_VARIABLE","$useAcl",121],["T_WHITESPACE"," ",121],"=",["T_WHITESPACE"," ",121],["T_STRING","true",121],")",";",["T_WHITESPACE","\n\n    ",121],["T_DOC_COMMENT","\/**\n     * Returns whether ACL should be used\n     *\n     * @return bool  whether ACL should be used\n     *\/",123],["T_WHITESPACE","\n    ",127],["T_PUBLIC","public",128],["T_WHITESPACE"," ",128],["T_FUNCTION","function",128],["T_WHITESPACE"," ",128],["T_STRING","getUseAcl",128],"(",")",";",["T_WHITESPACE","\n\n    ",128],["T_DOC_COMMENT","\/**\n     * Return renderInvisible flag\n     *\n     * @return bool\n     *\/",130],["T_WHITESPACE","\n    ",134],["T_PUBLIC","public",135],["T_WHITESPACE"," ",135],["T_FUNCTION","function",135],["T_WHITESPACE"," ",135],["T_STRING","getRenderInvisible",135],"(",")",";",["T_WHITESPACE","\n\n    ",135],["T_DOC_COMMENT","\/**\n     * Render invisible items?\n     *\n     * @param  bool $renderInvisible                       [optional] boolean flag\n     * @return Zend_View_Helper_Navigation_HelperAbstract  fluent interface\n     *                                                     returns self\n     *\/",137],["T_WHITESPACE","\n    ",143],["T_PUBLIC","public",144],["T_WHITESPACE"," ",144],["T_FUNCTION","function",144],["T_WHITESPACE"," ",144],["T_STRING","setRenderInvisible",144],"(",["T_VARIABLE","$renderInvisible",144],["T_WHITESPACE"," ",144],"=",["T_WHITESPACE"," ",144],["T_STRING","true",144],")",";",["T_WHITESPACE","\n\n    ",144],["T_DOC_COMMENT","\/**\n     * Sets whether translator should be used\n     *\n     * @param  bool $useTranslator                 [optional] whether\n     *                                             translator should be used.\n     *                                             Default is true.\n     * @return Zend_View_Helper_Navigation_Helper  fluent interface, returns\n     *                                             self\n     *\/",146],["T_WHITESPACE","\n    ",154],["T_PUBLIC","public",155],["T_WHITESPACE"," ",155],["T_FUNCTION","function",155],["T_WHITESPACE"," ",155],["T_STRING","setUseTranslator",155],"(",["T_VARIABLE","$useTranslator",155],["T_WHITESPACE"," ",155],"=",["T_WHITESPACE"," ",155],["T_STRING","true",155],")",";",["T_WHITESPACE","\n\n    ",155],["T_DOC_COMMENT","\/**\n     * Returns whether translator should be used\n     *\n     * @return bool  whether translator should be used\n     *\/",157],["T_WHITESPACE","\n    ",161],["T_PUBLIC","public",162],["T_WHITESPACE"," ",162],["T_FUNCTION","function",162],["T_WHITESPACE"," ",162],["T_STRING","getUseTranslator",162],"(",")",";",["T_WHITESPACE","\n\n    ",162],["T_DOC_COMMENT","\/**\n     * Checks if the helper has a container\n     *\n     * @return bool  whether the helper has a container or not\n     *\/",164],["T_WHITESPACE","\n    ",168],["T_PUBLIC","public",169],["T_WHITESPACE"," ",169],["T_FUNCTION","function",169],["T_WHITESPACE"," ",169],["T_STRING","hasContainer",169],"(",")",";",["T_WHITESPACE","\n\n    ",169],["T_DOC_COMMENT","\/**\n     * Checks if the helper has an ACL instance\n     *\n     * @return bool  whether the helper has a an ACL instance or not\n     *\/",171],["T_WHITESPACE","\n    ",175],["T_PUBLIC","public",176],["T_WHITESPACE"," ",176],["T_FUNCTION","function",176],["T_WHITESPACE"," ",176],["T_STRING","hasAcl",176],"(",")",";",["T_WHITESPACE","\n\n    ",176],["T_DOC_COMMENT","\/**\n     * Checks if the helper has an ACL role\n     *\n     * @return bool  whether the helper has a an ACL role or not\n     *\/",178],["T_WHITESPACE","\n    ",182],["T_PUBLIC","public",183],["T_WHITESPACE"," ",183],["T_FUNCTION","function",183],["T_WHITESPACE"," ",183],["T_STRING","hasRole",183],"(",")",";",["T_WHITESPACE","\n\n    ",183],["T_DOC_COMMENT","\/**\n     * Checks if the helper has a translator\n     *\n     * @return bool  whether the helper has a translator or not\n     *\/",185],["T_WHITESPACE","\n    ",189],["T_PUBLIC","public",190],["T_WHITESPACE"," ",190],["T_FUNCTION","function",190],["T_WHITESPACE"," ",190],["T_STRING","hasTranslator",190],"(",")",";",["T_WHITESPACE","\n\n    ",190],["T_DOC_COMMENT","\/**\n     * Magic overload: Should proxy to {@link render()}.\n     *\n     * @return string\n     *\/",192],["T_WHITESPACE","\n    ",196],["T_PUBLIC","public",197],["T_WHITESPACE"," ",197],["T_FUNCTION","function",197],["T_WHITESPACE"," ",197],["T_STRING","__toString",197],"(",")",";",["T_WHITESPACE","\n\n    ",197],["T_DOC_COMMENT","\/**\n     * Renders helper\n     *\n     * @param  Zend_Navigation_Container $container  [optional] container to\n     *                                               render. Default is null,\n     *                                               which indicates that the\n     *                                               helper should render the\n     *                                               container returned by\n     *                                               {@link getContainer()}.\n     * @return string                                helper output\n     * @throws Zend_View_Exception                   if unable to render\n     *\/",199],["T_WHITESPACE","\n    ",210],["T_PUBLIC","public",211],["T_WHITESPACE"," ",211],["T_FUNCTION","function",211],["T_WHITESPACE"," ",211],["T_STRING","render",211],"(",["T_STRING","Zend_Navigation_Container",211],["T_WHITESPACE"," ",211],["T_VARIABLE","$container",211],["T_WHITESPACE"," ",211],"=",["T_WHITESPACE"," ",211],["T_STRING","null",211],")",";",["T_WHITESPACE","\n",211],"}",["T_WHITESPACE","\n",212]]