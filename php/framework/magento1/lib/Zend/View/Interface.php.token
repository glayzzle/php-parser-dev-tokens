[["T_OPEN_TAG","<?php\n",1],["T_DOC_COMMENT","\/**\n * Zend Framework\n *\n * LICENSE\n *\n * This source file is subject to the new BSD license that is bundled\n * with this package in the file LICENSE.txt.\n * It is also available through the world-wide-web at this URL:\n * http:\/\/framework.zend.com\/license\/new-bsd\n * If you did not receive a copy of the license and are unable to\n * obtain it through the world-wide-web, please send an email\n * to license@zend.com so we can send you a copy immediately.\n *\n * @category   Zend\n * @package    Zend_View\n * @copyright  Copyright (c) 2005-2015 Zend Technologies USA Inc. (http:\/\/www.zend.com)\n * @license    http:\/\/framework.zend.com\/license\/new-bsd     New BSD License\n * @version    $Id$\n *\/",2],["T_WHITESPACE","\n\n\n",20],["T_DOC_COMMENT","\/**\n * Interface class for Zend_View compatible template engine implementations\n *\n * @category   Zend\n * @package    Zend_View\n * @copyright  Copyright (c) 2005-2015 Zend Technologies USA Inc. (http:\/\/www.zend.com)\n * @license    http:\/\/framework.zend.com\/license\/new-bsd     New BSD License\n *\/",23],["T_WHITESPACE","\n",30],["T_INTERFACE","interface",31],["T_WHITESPACE"," ",31],["T_STRING","Zend_View_Interface",31],["T_WHITESPACE","\n",31],"{",["T_WHITESPACE","\n    ",32],["T_DOC_COMMENT","\/**\n     * Return the template engine object, if any\n     *\n     * If using a third-party template engine, such as Smarty, patTemplate,\n     * phplib, etc, return the template engine object. Useful for calling\n     * methods on these objects, such as for setting filters, modifiers, etc.\n     *\n     * @return mixed\n     *\/",33],["T_WHITESPACE","\n    ",41],["T_PUBLIC","public",42],["T_WHITESPACE"," ",42],["T_FUNCTION","function",42],["T_WHITESPACE"," ",42],["T_STRING","getEngine",42],"(",")",";",["T_WHITESPACE","\n\n    ",42],["T_DOC_COMMENT","\/**\n     * Set the path to find the view script used by render()\n     *\n     * @param string|array The directory (-ies) to set as the path. Note that\n     * the concrete view implentation may not necessarily support multiple\n     * directories.\n     * @return void\n     *\/",44],["T_WHITESPACE","\n    ",51],["T_PUBLIC","public",52],["T_WHITESPACE"," ",52],["T_FUNCTION","function",52],["T_WHITESPACE"," ",52],["T_STRING","setScriptPath",52],"(",["T_VARIABLE","$path",52],")",";",["T_WHITESPACE","\n\n    ",52],["T_DOC_COMMENT","\/**\n     * Retrieve all view script paths\n     *\n     * @return array\n     *\/",54],["T_WHITESPACE","\n    ",58],["T_PUBLIC","public",59],["T_WHITESPACE"," ",59],["T_FUNCTION","function",59],["T_WHITESPACE"," ",59],["T_STRING","getScriptPaths",59],"(",")",";",["T_WHITESPACE","\n\n    ",59],["T_DOC_COMMENT","\/**\n     * Set a base path to all view resources\n     *\n     * @param  string $path\n     * @param  string $classPrefix\n     * @return void\n     *\/",61],["T_WHITESPACE","\n    ",67],["T_PUBLIC","public",68],["T_WHITESPACE"," ",68],["T_FUNCTION","function",68],["T_WHITESPACE"," ",68],["T_STRING","setBasePath",68],"(",["T_VARIABLE","$path",68],",",["T_WHITESPACE"," ",68],["T_VARIABLE","$classPrefix",68],["T_WHITESPACE"," ",68],"=",["T_WHITESPACE"," ",68],["T_CONSTANT_ENCAPSED_STRING","'Zend_View'",68],")",";",["T_WHITESPACE","\n\n    ",68],["T_DOC_COMMENT","\/**\n     * Add an additional path to view resources\n     *\n     * @param  string $path\n     * @param  string $classPrefix\n     * @return void\n     *\/",70],["T_WHITESPACE","\n    ",76],["T_PUBLIC","public",77],["T_WHITESPACE"," ",77],["T_FUNCTION","function",77],["T_WHITESPACE"," ",77],["T_STRING","addBasePath",77],"(",["T_VARIABLE","$path",77],",",["T_WHITESPACE"," ",77],["T_VARIABLE","$classPrefix",77],["T_WHITESPACE"," ",77],"=",["T_WHITESPACE"," ",77],["T_CONSTANT_ENCAPSED_STRING","'Zend_View'",77],")",";",["T_WHITESPACE","\n\n    ",77],["T_DOC_COMMENT","\/**\n     * Assign a variable to the view\n     *\n     * @param string $key The variable name.\n     * @param mixed $val The variable value.\n     * @return void\n     *\/",79],["T_WHITESPACE","\n    ",85],["T_PUBLIC","public",86],["T_WHITESPACE"," ",86],["T_FUNCTION","function",86],["T_WHITESPACE"," ",86],["T_STRING","__set",86],"(",["T_VARIABLE","$key",86],",",["T_WHITESPACE"," ",86],["T_VARIABLE","$val",86],")",";",["T_WHITESPACE","\n\n    ",86],["T_DOC_COMMENT","\/**\n     * Allows testing with empty() and isset() to work\n     *\n     * @param string $key\n     * @return boolean\n     *\/",88],["T_WHITESPACE","\n    ",93],["T_PUBLIC","public",94],["T_WHITESPACE"," ",94],["T_FUNCTION","function",94],["T_WHITESPACE"," ",94],["T_STRING","__isset",94],"(",["T_VARIABLE","$key",94],")",";",["T_WHITESPACE","\n\n    ",94],["T_DOC_COMMENT","\/**\n     * Allows unset() on object properties to work\n     *\n     * @param string $key\n     * @return void\n     *\/",96],["T_WHITESPACE","\n    ",101],["T_PUBLIC","public",102],["T_WHITESPACE"," ",102],["T_FUNCTION","function",102],["T_WHITESPACE"," ",102],["T_STRING","__unset",102],"(",["T_VARIABLE","$key",102],")",";",["T_WHITESPACE","\n\n    ",102],["T_DOC_COMMENT","\/**\n     * Assign variables to the view script via differing strategies.\n     *\n     * Suggested implementation is to allow setting a specific key to the\n     * specified value, OR passing an array of key => value pairs to set en\n     * masse.\n     *\n     * @see __set()\n     * @param string|array $spec The assignment strategy to use (key or array of key\n     * => value pairs)\n     * @param mixed $value (Optional) If assigning a named variable, use this\n     * as the value.\n     * @return void\n     *\/",104],["T_WHITESPACE","\n    ",117],["T_PUBLIC","public",118],["T_WHITESPACE"," ",118],["T_FUNCTION","function",118],["T_WHITESPACE"," ",118],["T_STRING","assign",118],"(",["T_VARIABLE","$spec",118],",",["T_WHITESPACE"," ",118],["T_VARIABLE","$value",118],["T_WHITESPACE"," ",118],"=",["T_WHITESPACE"," ",118],["T_STRING","null",118],")",";",["T_WHITESPACE","\n\n    ",118],["T_DOC_COMMENT","\/**\n     * Clear all assigned variables\n     *\n     * Clears all variables assigned to Zend_View either via {@link assign()} or\n     * property overloading ({@link __get()}\/{@link __set()}).\n     *\n     * @return void\n     *\/",120],["T_WHITESPACE","\n    ",127],["T_PUBLIC","public",128],["T_WHITESPACE"," ",128],["T_FUNCTION","function",128],["T_WHITESPACE"," ",128],["T_STRING","clearVars",128],"(",")",";",["T_WHITESPACE","\n\n    ",128],["T_DOC_COMMENT","\/**\n     * Processes a view script and returns the output.\n     *\n     * @param string $name The script name to process.\n     * @return string The script output.\n     *\/",130],["T_WHITESPACE","\n    ",135],["T_PUBLIC","public",136],["T_WHITESPACE"," ",136],["T_FUNCTION","function",136],["T_WHITESPACE"," ",136],["T_STRING","render",136],"(",["T_VARIABLE","$name",136],")",";",["T_WHITESPACE","\n",136],"}",["T_WHITESPACE","\n",137]]