[["T_OPEN_TAG","<?php\n",1],["T_DOC_COMMENT","\/**\n * Zend Framework\n *\n * LICENSE\n *\n * This source file is subject to the new BSD license that is bundled\n * with this package in the file LICENSE.txt.\n * It is also available through the world-wide-web at this URL:\n * http:\/\/framework.zend.com\/license\/new-bsd\n * If you did not receive a copy of the license and are unable to\n * obtain it through the world-wide-web, please send an email\n * to license@zend.com so we can send you a copy immediately.\n *\n * @category   Zend\n * @package    Zend_Queue\n * @subpackage Stomp\n * @copyright  Copyright (c) 2005-2015 Zend Technologies USA Inc. (http:\/\/www.zend.com)\n * @license    http:\/\/framework.zend.com\/license\/new-bsd     New BSD License\n * @version    $Id$\n *\/",2],["T_WHITESPACE","\n\n",21],["T_DOC_COMMENT","\/**\n * The Stomp client interacts with a Stomp server.\n *\n * @category   Zend\n * @package    Zend_Queue\n * @subpackage Stomp\n * @copyright  Copyright (c) 2005-2015 Zend Technologies USA Inc. (http:\/\/www.zend.com)\n * @license    http:\/\/framework.zend.com\/license\/new-bsd     New BSD License\n *\/",23],["T_WHITESPACE","\n",31],["T_INTERFACE","interface",32],["T_WHITESPACE"," ",32],["T_STRING","Zend_Queue_Stomp_Client_ConnectionInterface",32],["T_WHITESPACE","\n",32],"{",["T_WHITESPACE","\n    ",33],["T_DOC_COMMENT","\/**\n     * @param  string  $scheme ['tcp', 'udp']\n     * @param  string  host\n     * @param  integer port\n     * @param  string  class - create a connection with this class; class must support Zend_Queue_Stomp_Client_Connection_Interface\n     * @return boolean\n     *\/",34],["T_WHITESPACE","\n    ",40],["T_PUBLIC","public",41],["T_WHITESPACE"," ",41],["T_FUNCTION","function",41],["T_WHITESPACE"," ",41],["T_STRING","open",41],"(",["T_VARIABLE","$scheme",41],",",["T_WHITESPACE"," ",41],["T_VARIABLE","$host",41],",",["T_WHITESPACE"," ",41],["T_VARIABLE","$port",41],")",";",["T_WHITESPACE","\n\n    ",41],["T_DOC_COMMENT","\/**\n     * @param  boolean $destructor\n     * @return void\n     *\/",43],["T_WHITESPACE","\n    ",46],["T_PUBLIC","public",47],["T_WHITESPACE"," ",47],["T_FUNCTION","function",47],["T_WHITESPACE"," ",47],["T_STRING","close",47],"(",["T_VARIABLE","$destructor",47],["T_WHITESPACE"," ",47],"=",["T_WHITESPACE"," ",47],["T_STRING","false",47],")",";",["T_WHITESPACE","\n\n    ",47],["T_DOC_COMMENT","\/**\n     * Check whether we are connected to the server\n     *\n     * @return true\n     * @throws Zend_Queue_Exception\n     *\/",49],["T_WHITESPACE","\n    ",54],["T_PUBLIC","public",55],["T_WHITESPACE"," ",55],["T_FUNCTION","function",55],["T_WHITESPACE"," ",55],["T_STRING","ping",55],"(",")",";",["T_WHITESPACE","\n\n    ",55],["T_DOC_COMMENT","\/**\n     * write a frame to the stomp server\n     *\n     * example: $response = $client->write($frame)->read();\n     *\n     * @param  Zend_Queue_Stomp_FrameInterface $frame\n     * @return $this\n     *\/",57],["T_WHITESPACE","\n    ",64],["T_PUBLIC","public",65],["T_WHITESPACE"," ",65],["T_FUNCTION","function",65],["T_WHITESPACE"," ",65],["T_STRING","write",65],"(",["T_STRING","Zend_Queue_Stomp_FrameInterface",65],["T_WHITESPACE"," ",65],["T_VARIABLE","$frame",65],")",";",["T_WHITESPACE","\n\n    ",65],["T_DOC_COMMENT","\/**\n     * tests the socket to see if there is data for us\n     *\/",67],["T_WHITESPACE","\n    ",69],["T_PUBLIC","public",70],["T_WHITESPACE"," ",70],["T_FUNCTION","function",70],["T_WHITESPACE"," ",70],["T_STRING","canRead",70],"(",")",";",["T_WHITESPACE","\n\n    ",70],["T_DOC_COMMENT","\/**\n     * reads in a frame from the socket or returns false.\n     *\n     * @return Zend_Queue_Stomp_Frame|false\n     * @throws Zend_Queue_Exception\n     *\/",72],["T_WHITESPACE","\n    ",77],["T_PUBLIC","public",78],["T_WHITESPACE"," ",78],["T_FUNCTION","function",78],["T_WHITESPACE"," ",78],["T_STRING","read",78],"(",")",";",["T_WHITESPACE","\n\n    ",78],["T_DOC_COMMENT","\/**\n     * Set the frame class to be used\n     *\n     * This must be a Zend_Queue_Stomp_FrameInterface.\n     *\n     * @param  string $class\n     * @return Zend_Queue_Stomp_Client_ConnectionInterface;\n     *\/",80],["T_WHITESPACE","\n    ",87],["T_PUBLIC","public",88],["T_WHITESPACE"," ",88],["T_FUNCTION","function",88],["T_WHITESPACE"," ",88],["T_STRING","setFrameClass",88],"(",["T_VARIABLE","$class",88],")",";",["T_WHITESPACE","\n\n    ",88],["T_DOC_COMMENT","\/**\n     * Get the frameClass\n     *\n     * @return string\n     *\/",90],["T_WHITESPACE","\n    ",94],["T_PUBLIC","public",95],["T_WHITESPACE"," ",95],["T_FUNCTION","function",95],["T_WHITESPACE"," ",95],["T_STRING","getFrameClass",95],"(",")",";",["T_WHITESPACE","\n\n    ",95],["T_DOC_COMMENT","\/**\n     * create an empty frame\n     *\n     * @return Zend_Queue_Stomp_FrameInterface class\n     *\/",97],["T_WHITESPACE","\n    ",101],["T_PUBLIC","public",102],["T_WHITESPACE"," ",102],["T_FUNCTION","function",102],["T_WHITESPACE"," ",102],["T_STRING","createFrame",102],"(",")",";",["T_WHITESPACE","\n",102],"}",["T_WHITESPACE","\n",103]]