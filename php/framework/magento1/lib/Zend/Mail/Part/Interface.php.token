[["T_OPEN_TAG","<?php\n",1],["T_DOC_COMMENT","\/**\n * Zend Framework\n *\n * LICENSE\n *\n * This source file is subject to the new BSD license that is bundled\n * with this package in the file LICENSE.txt.\n * It is also available through the world-wide-web at this URL:\n * http:\/\/framework.zend.com\/license\/new-bsd\n * If you did not receive a copy of the license and are unable to\n * obtain it through the world-wide-web, please send an email\n * to license@zend.com so we can send you a copy immediately.\n *\n * @category   Zend\n * @package    Zend_Mail\n * @subpackage Storage\n * @copyright  Copyright (c) 2005-2015 Zend Technologies USA Inc. (http:\/\/www.zend.com)\n * @license    http:\/\/framework.zend.com\/license\/new-bsd     New BSD License\n * @version    $Id$\n *\/",2],["T_WHITESPACE","\n\n\n",21],["T_DOC_COMMENT","\/**\n * @category   Zend\n * @package    Zend_Mail\n * @subpackage Storage\n * @copyright  Copyright (c) 2005-2015 Zend Technologies USA Inc. (http:\/\/www.zend.com)\n * @license    http:\/\/framework.zend.com\/license\/new-bsd     New BSD License\n *\/",24],["T_WHITESPACE","\n\n",30],["T_INTERFACE","interface",32],["T_WHITESPACE"," ",32],["T_STRING","Zend_Mail_Part_Interface",32],["T_WHITESPACE"," ",32],["T_EXTENDS","extends",32],["T_WHITESPACE"," ",32],["T_STRING","RecursiveIterator",32],["T_WHITESPACE","\n",32],"{",["T_WHITESPACE","\n    ",33],["T_DOC_COMMENT","\/**\n     * Check if part is a multipart message\n     *\n     * @return bool if part is multipart\n     *\/",34],["T_WHITESPACE","\n    ",38],["T_PUBLIC","public",39],["T_WHITESPACE"," ",39],["T_FUNCTION","function",39],["T_WHITESPACE"," ",39],["T_STRING","isMultipart",39],"(",")",";",["T_WHITESPACE","\n\n\n    ",39],["T_DOC_COMMENT","\/**\n     * Body of part\n     *\n     * If part is multipart the raw content of this part with all sub parts is returned\n     *\n     * @return string body\n     * @throws Zend_Mail_Exception\n     *\/",42],["T_WHITESPACE","\n    ",49],["T_PUBLIC","public",50],["T_WHITESPACE"," ",50],["T_FUNCTION","function",50],["T_WHITESPACE"," ",50],["T_STRING","getContent",50],"(",")",";",["T_WHITESPACE","\n\n    ",50],["T_DOC_COMMENT","\/**\n     * Return size of part\n     *\n     * @return int size\n     *\/",52],["T_WHITESPACE","\n    ",56],["T_PUBLIC","public",57],["T_WHITESPACE"," ",57],["T_FUNCTION","function",57],["T_WHITESPACE"," ",57],["T_STRING","getSize",57],"(",")",";",["T_WHITESPACE","\n\n    ",57],["T_DOC_COMMENT","\/**\n     * Get part of multipart message\n     *\n     * @param  int $num number of part starting with 1 for first part\n     * @return Zend_Mail_Part wanted part\n     * @throws Zend_Mail_Exception\n     *\/",59],["T_WHITESPACE","\n    ",65],["T_PUBLIC","public",66],["T_WHITESPACE"," ",66],["T_FUNCTION","function",66],["T_WHITESPACE"," ",66],["T_STRING","getPart",66],"(",["T_VARIABLE","$num",66],")",";",["T_WHITESPACE","\n\n    ",66],["T_DOC_COMMENT","\/**\n     * Count parts of a multipart part\n     *\n     * @return int number of sub-parts\n     *\/",68],["T_WHITESPACE","\n    ",72],["T_PUBLIC","public",73],["T_WHITESPACE"," ",73],["T_FUNCTION","function",73],["T_WHITESPACE"," ",73],["T_STRING","countParts",73],"(",")",";",["T_WHITESPACE","\n\n\n    ",73],["T_DOC_COMMENT","\/**\n     * Get all headers\n     *\n     * The returned headers are as saved internally. All names are lowercased. The value is a string or an array\n     * if a header with the same name occurs more than once.\n     *\n     * @return array headers as array(name => value)\n     *\/",76],["T_WHITESPACE","\n    ",83],["T_PUBLIC","public",84],["T_WHITESPACE"," ",84],["T_FUNCTION","function",84],["T_WHITESPACE"," ",84],["T_STRING","getHeaders",84],"(",")",";",["T_WHITESPACE","\n\n    ",84],["T_DOC_COMMENT","\/**\n     * Get a header in specificed format\n     *\n     * Internally headers that occur more than once are saved as array, all other as string. If $format\n     * is set to string implode is used to concat the values (with Zend_Mime::LINEEND as delim).\n     *\n     * @param  string $name   name of header, matches case-insensitive, but camel-case is replaced with dashes\n     * @param  string $format change type of return value to 'string' or 'array'\n     * @return string|array value of header in wanted or internal format\n     * @throws Zend_Mail_Exception\n     *\/",86],["T_WHITESPACE","\n    ",96],["T_PUBLIC","public",97],["T_WHITESPACE"," ",97],["T_FUNCTION","function",97],["T_WHITESPACE"," ",97],["T_STRING","getHeader",97],"(",["T_VARIABLE","$name",97],",",["T_WHITESPACE"," ",97],["T_VARIABLE","$format",97],["T_WHITESPACE"," ",97],"=",["T_WHITESPACE"," ",97],["T_STRING","null",97],")",";",["T_WHITESPACE","\n\n    ",97],["T_DOC_COMMENT","\/**\n     * Get a specific field from a header like content type or all fields as array\n     *\n     * If the header occurs more than once, only the value from the first header\n     * is returned.\n     *\n     * Throws a Zend_Mail_Exception if the requested header does not exist. If\n     * the specific header field does not exist, returns null.\n     *\n     * @param  string $name       name of header, like in getHeader()\n     * @param  string $wantedPart the wanted part, default is first, if null an array with all parts is returned\n     * @param  string $firstName  key name for the first part\n     * @return string|array wanted part or all parts as array($firstName => firstPart, partname => value)\n     * @throws Zend_Exception, Zend_Mail_Exception\n     *\/",99],["T_WHITESPACE","\n    ",113],["T_PUBLIC","public",114],["T_WHITESPACE"," ",114],["T_FUNCTION","function",114],["T_WHITESPACE"," ",114],["T_STRING","getHeaderField",114],"(",["T_VARIABLE","$name",114],",",["T_WHITESPACE"," ",114],["T_VARIABLE","$wantedPart",114],["T_WHITESPACE"," ",114],"=",["T_WHITESPACE"," ",114],["T_LNUMBER","0",114],",",["T_WHITESPACE"," ",114],["T_VARIABLE","$firstName",114],["T_WHITESPACE"," ",114],"=",["T_WHITESPACE"," ",114],["T_LNUMBER","0",114],")",";",["T_WHITESPACE","\n\n\n    ",114],["T_DOC_COMMENT","\/**\n     * Getter for mail headers - name is matched in lowercase\n     *\n     * This getter is short for Zend_Mail_Part::getHeader($name, 'string')\n     *\n     * @see Zend_Mail_Part::getHeader()\n     *\n     * @param  string $name header name\n     * @return string value of header\n     * @throws Zend_Mail_Exception\n     *\/",117],["T_WHITESPACE","\n    ",127],["T_PUBLIC","public",128],["T_WHITESPACE"," ",128],["T_FUNCTION","function",128],["T_WHITESPACE"," ",128],["T_STRING","__get",128],"(",["T_VARIABLE","$name",128],")",";",["T_WHITESPACE","\n\n    ",128],["T_DOC_COMMENT","\/**\n     * magic method to get content of part\n     *\n     * @return string content\n     *\/",130],["T_WHITESPACE","\n    ",134],["T_PUBLIC","public",135],["T_WHITESPACE"," ",135],["T_FUNCTION","function",135],["T_WHITESPACE"," ",135],["T_STRING","__toString",135],"(",")",";",["T_WHITESPACE","\n",135],"}",["T_WHITESPACE","\n",136]]