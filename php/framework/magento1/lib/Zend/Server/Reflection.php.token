[["T_OPEN_TAG","<?php\n",1],["T_DOC_COMMENT","\/**\n * Zend Framework\n *\n * LICENSE\n *\n * This source file is subject to the new BSD license that is bundled\n * with this package in the file LICENSE.txt.\n * It is also available through the world-wide-web at this URL:\n * http:\/\/framework.zend.com\/license\/new-bsd\n * If you did not receive a copy of the license and are unable to\n * obtain it through the world-wide-web, please send an email\n * to license@zend.com so we can send you a copy immediately.\n *\n * @category   Zend\n * @package    Zend_Server\n * @copyright  Copyright (c) 2005-2015 Zend Technologies USA Inc. (http:\/\/www.zend.com)\n * @license    http:\/\/framework.zend.com\/license\/new-bsd     New BSD License\n *\/",2],["T_WHITESPACE","\n\n",19],["T_DOC_COMMENT","\/**\n * Zend_Server_Reflection_Function\n *\/",21],["T_WHITESPACE","\n",23],["T_COMMENT","#require_once 'Zend\/Server\/Reflection\/Function.php';\n",24],["T_WHITESPACE","\n",25],["T_DOC_COMMENT","\/**\n * Zend_Server_Reflection_Class\n *\/",26],["T_WHITESPACE","\n",28],["T_COMMENT","#require_once 'Zend\/Server\/Reflection\/Class.php';\n",29],["T_WHITESPACE","\n",30],["T_DOC_COMMENT","\/**\n * Reflection for determining method signatures to use with server classes\n *\n * @category   Zend\n * @package    Zend_Server\n * @subpackage Reflection\n * @copyright  Copyright (c) 2005-2015 Zend Technologies USA Inc. (http:\/\/www.zend.com)\n * @license    http:\/\/framework.zend.com\/license\/new-bsd     New BSD License\n * @version $Id$\n *\/",31],["T_WHITESPACE","\n",40],["T_CLASS","class",41],["T_WHITESPACE"," ",41],["T_STRING","Zend_Server_Reflection",41],["T_WHITESPACE","\n",41],"{",["T_WHITESPACE","\n    ",42],["T_DOC_COMMENT","\/**\n     * Perform class reflection to create dispatch signatures\n     *\n     * Creates a {@link Zend_Server_Reflection_Class} object for the class or\n     * object provided.\n     *\n     * If extra arguments should be passed to dispatchable methods, these may\n     * be provided as an array to $argv.\n     *\n     * @param string|object $class Class name or object\n     * @param null|array $argv Optional arguments to be used during the method call\n     * @param string $namespace Optional namespace with which to prefix the\n     * method name (used for the signature key). Primarily to avoid collisions,\n     * also for XmlRpc namespacing\n     * @return Zend_Server_Reflection_Class\n     * @throws Zend_Server_Reflection_Exception\n     *\/",43],["T_WHITESPACE","\n    ",59],["T_PUBLIC","public",60],["T_WHITESPACE"," ",60],["T_STATIC","static",60],["T_WHITESPACE"," ",60],["T_FUNCTION","function",60],["T_WHITESPACE"," ",60],["T_STRING","reflectClass",60],"(",["T_VARIABLE","$class",60],",",["T_WHITESPACE"," ",60],["T_VARIABLE","$argv",60],["T_WHITESPACE"," ",60],"=",["T_WHITESPACE"," ",60],["T_STRING","false",60],",",["T_WHITESPACE"," ",60],["T_VARIABLE","$namespace",60],["T_WHITESPACE"," ",60],"=",["T_WHITESPACE"," ",60],["T_CONSTANT_ENCAPSED_STRING","''",60],")",["T_WHITESPACE","\n    ",60],"{",["T_WHITESPACE","\n        ",61],["T_IF","if",62],["T_WHITESPACE"," ",62],"(",["T_STRING","is_object",62],"(",["T_VARIABLE","$class",62],")",")",["T_WHITESPACE"," ",62],"{",["T_WHITESPACE","\n            ",62],["T_VARIABLE","$reflection",63],["T_WHITESPACE"," ",63],"=",["T_WHITESPACE"," ",63],["T_NEW","new",63],["T_WHITESPACE"," ",63],["T_STRING","ReflectionObject",63],"(",["T_VARIABLE","$class",63],")",";",["T_WHITESPACE","\n        ",63],"}",["T_WHITESPACE"," ",64],["T_ELSEIF","elseif",64],["T_WHITESPACE"," ",64],"(",["T_STRING","class_exists",64],"(",["T_VARIABLE","$class",64],")",")",["T_WHITESPACE"," ",64],"{",["T_WHITESPACE","\n            ",64],["T_VARIABLE","$reflection",65],["T_WHITESPACE"," ",65],"=",["T_WHITESPACE"," ",65],["T_NEW","new",65],["T_WHITESPACE"," ",65],["T_STRING","ReflectionClass",65],"(",["T_VARIABLE","$class",65],")",";",["T_WHITESPACE","\n        ",65],"}",["T_WHITESPACE"," ",66],["T_ELSE","else",66],["T_WHITESPACE"," ",66],"{",["T_WHITESPACE","\n            ",66],["T_COMMENT","#require_once 'Zend\/Server\/Reflection\/Exception.php';\n",67],["T_WHITESPACE","            ",68],["T_THROW","throw",68],["T_WHITESPACE"," ",68],["T_NEW","new",68],["T_WHITESPACE"," ",68],["T_STRING","Zend_Server_Reflection_Exception",68],"(",["T_CONSTANT_ENCAPSED_STRING","'Invalid class or object passed to attachClass()'",68],")",";",["T_WHITESPACE","\n        ",68],"}",["T_WHITESPACE","\n\n        ",69],["T_IF","if",71],["T_WHITESPACE"," ",71],"(",["T_VARIABLE","$argv",71],["T_WHITESPACE"," ",71],["T_BOOLEAN_AND","&&",71],["T_WHITESPACE"," ",71],"!",["T_STRING","is_array",71],"(",["T_VARIABLE","$argv",71],")",")",["T_WHITESPACE"," ",71],"{",["T_WHITESPACE","\n            ",71],["T_COMMENT","#require_once 'Zend\/Server\/Reflection\/Exception.php';\n",72],["T_WHITESPACE","            ",73],["T_THROW","throw",73],["T_WHITESPACE"," ",73],["T_NEW","new",73],["T_WHITESPACE"," ",73],["T_STRING","Zend_Server_Reflection_Exception",73],"(",["T_CONSTANT_ENCAPSED_STRING","'Invalid argv argument passed to reflectClass'",73],")",";",["T_WHITESPACE","\n        ",73],"}",["T_WHITESPACE","\n\n        ",74],["T_RETURN","return",76],["T_WHITESPACE"," ",76],["T_NEW","new",76],["T_WHITESPACE"," ",76],["T_STRING","Zend_Server_Reflection_Class",76],"(",["T_VARIABLE","$reflection",76],",",["T_WHITESPACE"," ",76],["T_VARIABLE","$namespace",76],",",["T_WHITESPACE"," ",76],["T_VARIABLE","$argv",76],")",";",["T_WHITESPACE","\n    ",76],"}",["T_WHITESPACE","\n\n    ",77],["T_DOC_COMMENT","\/**\n     * Perform function reflection to create dispatch signatures\n     *\n     * Creates dispatch prototypes for a function. It returns a\n     * {@link Zend_Server_Reflection_Function} object.\n     *\n     * If extra arguments should be passed to the dispatchable function, these\n     * may be provided as an array to $argv.\n     *\n     * @param string $function Function name\n     * @param null|array $argv Optional arguments to be used during the method call\n     * @param string $namespace Optional namespace with which to prefix the\n     * function name (used for the signature key). Primarily to avoid\n     * collisions, also for XmlRpc namespacing\n     * @return Zend_Server_Reflection_Function\n     * @throws Zend_Server_Reflection_Exception\n     *\/",79],["T_WHITESPACE","\n    ",95],["T_PUBLIC","public",96],["T_WHITESPACE"," ",96],["T_STATIC","static",96],["T_WHITESPACE"," ",96],["T_FUNCTION","function",96],["T_WHITESPACE"," ",96],["T_STRING","reflectFunction",96],"(",["T_VARIABLE","$function",96],",",["T_WHITESPACE"," ",96],["T_VARIABLE","$argv",96],["T_WHITESPACE"," ",96],"=",["T_WHITESPACE"," ",96],["T_STRING","false",96],",",["T_WHITESPACE"," ",96],["T_VARIABLE","$namespace",96],["T_WHITESPACE"," ",96],"=",["T_WHITESPACE"," ",96],["T_CONSTANT_ENCAPSED_STRING","''",96],")",["T_WHITESPACE","\n    ",96],"{",["T_WHITESPACE","\n        ",97],["T_IF","if",98],["T_WHITESPACE"," ",98],"(","!",["T_STRING","is_string",98],"(",["T_VARIABLE","$function",98],")",["T_WHITESPACE"," ",98],["T_BOOLEAN_OR","||",98],["T_WHITESPACE"," ",98],"!",["T_STRING","function_exists",98],"(",["T_VARIABLE","$function",98],")",")",["T_WHITESPACE"," ",98],"{",["T_WHITESPACE","\n            ",98],["T_COMMENT","#require_once 'Zend\/Server\/Reflection\/Exception.php';\n",99],["T_WHITESPACE","            ",100],["T_THROW","throw",100],["T_WHITESPACE"," ",100],["T_NEW","new",100],["T_WHITESPACE"," ",100],["T_STRING","Zend_Server_Reflection_Exception",100],"(",["T_CONSTANT_ENCAPSED_STRING","'Invalid function \"'",100],["T_WHITESPACE"," ",100],".",["T_WHITESPACE"," ",100],["T_VARIABLE","$function",100],["T_WHITESPACE"," ",100],".",["T_WHITESPACE"," ",100],["T_CONSTANT_ENCAPSED_STRING","'\" passed to reflectFunction'",100],")",";",["T_WHITESPACE","\n        ",100],"}",["T_WHITESPACE","\n\n\n        ",101],["T_IF","if",104],["T_WHITESPACE"," ",104],"(",["T_VARIABLE","$argv",104],["T_WHITESPACE"," ",104],["T_BOOLEAN_AND","&&",104],["T_WHITESPACE"," ",104],"!",["T_STRING","is_array",104],"(",["T_VARIABLE","$argv",104],")",")",["T_WHITESPACE"," ",104],"{",["T_WHITESPACE","\n            ",104],["T_COMMENT","#require_once 'Zend\/Server\/Reflection\/Exception.php';\n",105],["T_WHITESPACE","            ",106],["T_THROW","throw",106],["T_WHITESPACE"," ",106],["T_NEW","new",106],["T_WHITESPACE"," ",106],["T_STRING","Zend_Server_Reflection_Exception",106],"(",["T_CONSTANT_ENCAPSED_STRING","'Invalid argv argument passed to reflectClass'",106],")",";",["T_WHITESPACE","\n        ",106],"}",["T_WHITESPACE","\n\n        ",107],["T_RETURN","return",109],["T_WHITESPACE"," ",109],["T_NEW","new",109],["T_WHITESPACE"," ",109],["T_STRING","Zend_Server_Reflection_Function",109],"(",["T_NEW","new",109],["T_WHITESPACE"," ",109],["T_STRING","ReflectionFunction",109],"(",["T_VARIABLE","$function",109],")",",",["T_WHITESPACE"," ",109],["T_VARIABLE","$namespace",109],",",["T_WHITESPACE"," ",109],["T_VARIABLE","$argv",109],")",";",["T_WHITESPACE","\n    ",109],"}",["T_WHITESPACE","\n",110],"}",["T_WHITESPACE","\n",111]]