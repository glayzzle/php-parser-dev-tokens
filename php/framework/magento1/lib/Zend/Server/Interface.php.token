[["T_OPEN_TAG","<?php\n",1],["T_DOC_COMMENT","\/**\n * Zend Framework\n *\n * LICENSE\n *\n * This source file is subject to the new BSD license that is bundled\n * with this package in the file LICENSE.txt.\n * It is also available through the world-wide-web at this URL:\n * http:\/\/framework.zend.com\/license\/new-bsd\n * If you did not receive a copy of the license and are unable to\n * obtain it through the world-wide-web, please send an email\n * to license@zend.com so we can send you a copy immediately.\n *\n * @category   Zend\n * @package    Zend_Server\n * @copyright  Copyright (c) 2005-2015 Zend Technologies USA Inc. (http:\/\/www.zend.com)\n * @license    http:\/\/framework.zend.com\/license\/new-bsd     New BSD License\n *\/",2],["T_WHITESPACE","\n\n",19],["T_DOC_COMMENT","\/**\n * Zend_Server_Interface\n *\n * @category Zend\n * @package  Zend_Server\n * @copyright  Copyright (c) 2005-2015 Zend Technologies USA Inc. (http:\/\/www.zend.com)\n * @license    http:\/\/framework.zend.com\/license\/new-bsd     New BSD License\n * @version $Id$\n *\/",21],["T_WHITESPACE","\n",29],["T_INTERFACE","interface",30],["T_WHITESPACE"," ",30],["T_STRING","Zend_Server_Interface",30],["T_WHITESPACE","\n",30],"{",["T_WHITESPACE","\n    ",31],["T_DOC_COMMENT","\/**\n     * Attach a function as a server method\n     *\n     * Namespacing is primarily for xmlrpc, but may be used with other\n     * implementations to prevent naming collisions.\n     *\n     * @param string $function\n     * @param string $namespace\n     * @param null|array Optional array of arguments to pass to callbacks at\n     * dispatch.\n     * @return void\n     *\/",32],["T_WHITESPACE","\n    ",43],["T_PUBLIC","public",44],["T_WHITESPACE"," ",44],["T_FUNCTION","function",44],["T_WHITESPACE"," ",44],["T_STRING","addFunction",44],"(",["T_VARIABLE","$function",44],",",["T_WHITESPACE"," ",44],["T_VARIABLE","$namespace",44],["T_WHITESPACE"," ",44],"=",["T_WHITESPACE"," ",44],["T_CONSTANT_ENCAPSED_STRING","''",44],")",";",["T_WHITESPACE","\n\n    ",44],["T_DOC_COMMENT","\/**\n     * Attach a class to a server\n     *\n     * The individual implementations should probably allow passing a variable\n     * number of arguments in, so that developers may define custom runtime\n     * arguments to pass to server methods.\n     *\n     * Namespacing is primarily for xmlrpc, but could be used for other\n     * implementations as well.\n     *\n     * @param mixed $class Class name or object instance to examine and attach\n     * to the server.\n     * @param string $namespace Optional namespace with which to prepend method\n     * names in the dispatch table.\n     * methods in the class will be valid callbacks.\n     * @param null|array Optional array of arguments to pass to callbacks at\n     * dispatch.\n     * @return void\n     *\/",46],["T_WHITESPACE","\n    ",64],["T_PUBLIC","public",65],["T_WHITESPACE"," ",65],["T_FUNCTION","function",65],["T_WHITESPACE"," ",65],["T_STRING","setClass",65],"(",["T_VARIABLE","$class",65],",",["T_WHITESPACE"," ",65],["T_VARIABLE","$namespace",65],["T_WHITESPACE"," ",65],"=",["T_WHITESPACE"," ",65],["T_CONSTANT_ENCAPSED_STRING","''",65],",",["T_WHITESPACE"," ",65],["T_VARIABLE","$argv",65],["T_WHITESPACE"," ",65],"=",["T_WHITESPACE"," ",65],["T_STRING","null",65],")",";",["T_WHITESPACE","\n\n    ",65],["T_DOC_COMMENT","\/**\n     * Generate a server fault\n     *\n     * @param mixed $fault\n     * @param int $code\n     * @return mixed\n     *\/",67],["T_WHITESPACE","\n    ",73],["T_PUBLIC","public",74],["T_WHITESPACE"," ",74],["T_FUNCTION","function",74],["T_WHITESPACE"," ",74],["T_STRING","fault",74],"(",["T_VARIABLE","$fault",74],["T_WHITESPACE"," ",74],"=",["T_WHITESPACE"," ",74],["T_STRING","null",74],",",["T_WHITESPACE"," ",74],["T_VARIABLE","$code",74],["T_WHITESPACE"," ",74],"=",["T_WHITESPACE"," ",74],["T_LNUMBER","404",74],")",";",["T_WHITESPACE","\n\n    ",74],["T_DOC_COMMENT","\/**\n     * Handle a request\n     *\n     * Requests may be passed in, or the server may automagically determine the\n     * request based on defaults. Dispatches server request to appropriate\n     * method and returns a response\n     *\n     * @param mixed $request\n     * @return mixed\n     *\/",76],["T_WHITESPACE","\n    ",85],["T_PUBLIC","public",86],["T_WHITESPACE"," ",86],["T_FUNCTION","function",86],["T_WHITESPACE"," ",86],["T_STRING","handle",86],"(",["T_VARIABLE","$request",86],["T_WHITESPACE"," ",86],"=",["T_WHITESPACE"," ",86],["T_STRING","false",86],")",";",["T_WHITESPACE","\n\n    ",86],["T_DOC_COMMENT","\/**\n     * Return a server definition array\n     *\n     * Returns a server definition array as created using\n     * {@link * Zend_Server_Reflection}. Can be used for server introspection,\n     * documentation, or persistence.\n     *\n     * @access public\n     * @return array\n     *\/",88],["T_WHITESPACE","\n    ",97],["T_PUBLIC","public",98],["T_WHITESPACE"," ",98],["T_FUNCTION","function",98],["T_WHITESPACE"," ",98],["T_STRING","getFunctions",98],"(",")",";",["T_WHITESPACE","\n\n    ",98],["T_DOC_COMMENT","\/**\n     * Load server definition\n     *\n     * Used for persistence; loads a construct as returned by {@link getFunctions()}.\n     *\n     * @param array $array\n     * @return void\n     *\/",100],["T_WHITESPACE","\n    ",107],["T_PUBLIC","public",108],["T_WHITESPACE"," ",108],["T_FUNCTION","function",108],["T_WHITESPACE"," ",108],["T_STRING","loadFunctions",108],"(",["T_VARIABLE","$definition",108],")",";",["T_WHITESPACE","\n\n    ",108],["T_DOC_COMMENT","\/**\n     * Set server persistence\n     *\n     * @todo Determine how to implement this\n     * @param int $mode\n     * @return void\n     *\/",110],["T_WHITESPACE","\n    ",116],["T_PUBLIC","public",117],["T_WHITESPACE"," ",117],["T_FUNCTION","function",117],["T_WHITESPACE"," ",117],["T_STRING","setPersistence",117],"(",["T_VARIABLE","$mode",117],")",";",["T_WHITESPACE","\n",117],"}",["T_WHITESPACE","\n",118]]