[["T_OPEN_TAG","<?php\n",1],["T_DOC_COMMENT","\/**\n * LICENSE\n *\n * This source file is subject to the new BSD license that is bundled\n * with this package in the file LICENSE.txt.\n * It is also available through the world-wide-web at this URL:\n * http:\/\/framework.zend.com\/license\/new-bsd\n * If you did not receive a copy of the license and are unable to\n * obtain it through the world-wide-web, please send an email\n * to license@zend.com so we can send you a copy immediately.\n *\n * @category   Zend\n * @package    Zend_Cloud\n * @subpackage DocumentService\n * @copyright  Copyright (c) 2005-2015 Zend Technologies USA Inc. (http:\/\/www.zend.com)\n * @license    http:\/\/framework.zend.com\/license\/new-bsd     New BSD License\n *\/",2],["T_WHITESPACE","\n\n",18],["T_DOC_COMMENT","\/**\n * This interface describes the API that concrete query adapter should implement\n *\n * Common interface for document storage services in the cloud. This interface\n * supports most document services and provides some flexibility for\n * vendor-specific features and requirements via an optional $options array in\n * each method signature. Classes implementing this interface should implement\n * URI construction for collections and documents from the parameters given in each\n * method and the account data passed in to the constructor. Classes\n * implementing this interface are also responsible for security; access control\n * isn't currently supported in this interface, although we are considering\n * access control support in future versions of the interface. Query\n * optimization mechanisms are also not supported in this version.\n *\n * @category   Zend\n * @package    Zend_Cloud\n * @subpackage DocumentService\n * @copyright  Copyright (c) 2005-2015 Zend Technologies USA Inc. (http:\/\/www.zend.com)\n * @license    http:\/\/framework.zend.com\/license\/new-bsd     New BSD License\n *\/",20],["T_WHITESPACE","\n",39],["T_INTERFACE","interface",40],["T_WHITESPACE"," ",40],["T_STRING","Zend_Cloud_DocumentService_QueryAdapter",40],["T_WHITESPACE","\n",40],"{",["T_WHITESPACE","\n    ",41],["T_DOC_COMMENT","\/**\n     * SELECT clause (fields to be selected)\n     *\n     * @param string $select\n     * @return Zend_Cloud_DocumentService_QueryAdapter\n     *\/",42],["T_WHITESPACE","\n    ",47],["T_PUBLIC","public",48],["T_WHITESPACE"," ",48],["T_FUNCTION","function",48],["T_WHITESPACE"," ",48],["T_STRING","select",48],"(",["T_VARIABLE","$select",48],")",";",["T_WHITESPACE","\n\n    ",48],["T_DOC_COMMENT","\/**\n     * FROM clause (table name)\n     *\n     * @param string $from\n     * @return Zend_Cloud_DocumentService_QueryAdapter\n     *\/",50],["T_WHITESPACE","\n    ",55],["T_PUBLIC","public",56],["T_WHITESPACE"," ",56],["T_FUNCTION","function",56],["T_WHITESPACE"," ",56],["T_STRING","from",56],"(",["T_VARIABLE","$from",56],")",";",["T_WHITESPACE","\n\n    ",56],["T_DOC_COMMENT","\/**\n     * WHERE clause (conditions to be used)\n     *\n     * @param string $where\n     * @param mixed $value Value or array of values to be inserted instead of ?\n     * @param string $op Operation to use to join where clauses (AND\/OR)\n     * @return Zend_Cloud_DocumentService_QueryAdapter\n     *\/",58],["T_WHITESPACE","\n    ",65],["T_PUBLIC","public",66],["T_WHITESPACE"," ",66],["T_FUNCTION","function",66],["T_WHITESPACE"," ",66],["T_STRING","where",66],"(",["T_VARIABLE","$where",66],",",["T_WHITESPACE"," ",66],["T_VARIABLE","$value",66],["T_WHITESPACE"," ",66],"=",["T_WHITESPACE"," ",66],["T_STRING","null",66],",",["T_WHITESPACE"," ",66],["T_VARIABLE","$op",66],["T_WHITESPACE"," ",66],"=",["T_WHITESPACE"," ",66],["T_CONSTANT_ENCAPSED_STRING","'and'",66],")",";",["T_WHITESPACE","\n\n    ",66],["T_DOC_COMMENT","\/**\n     * WHERE clause for item ID\n     *\n     * This one should be used when fetching specific rows since some adapters\n     * have special syntax for primary keys\n     *\n     * @param mixed $value Row ID for the document\n     * @return Zend_Cloud_DocumentService_QueryAdapter\n     *\/",68],["T_WHITESPACE","\n    ",76],["T_PUBLIC","public",77],["T_WHITESPACE"," ",77],["T_FUNCTION","function",77],["T_WHITESPACE"," ",77],["T_STRING","whereId",77],"(",["T_VARIABLE","$value",77],")",";",["T_WHITESPACE","\n\n    ",77],["T_DOC_COMMENT","\/**\n     * LIMIT clause (how many rows ot return)\n     *\n     * @param int $limit\n     * @return Zend_Cloud_DocumentService_QueryAdapter\n     *\/",79],["T_WHITESPACE","\n    ",84],["T_PUBLIC","public",85],["T_WHITESPACE"," ",85],["T_FUNCTION","function",85],["T_WHITESPACE"," ",85],["T_STRING","limit",85],"(",["T_VARIABLE","$limit",85],")",";",["T_WHITESPACE","\n\n    ",85],["T_DOC_COMMENT","\/**\n     * ORDER BY clause (sorting)\n     *\n     * @param string $sort Column to sort by\n     * @param string $direction Direction - asc\/desc\n     * @return Zend_Cloud_DocumentService_QueryAdapter\n     *\/",87],["T_WHITESPACE","\n    ",93],["T_PUBLIC","public",94],["T_WHITESPACE"," ",94],["T_FUNCTION","function",94],["T_WHITESPACE"," ",94],["T_STRING","order",94],"(",["T_VARIABLE","$sort",94],",",["T_WHITESPACE"," ",94],["T_VARIABLE","$direction",94],["T_WHITESPACE"," ",94],"=",["T_WHITESPACE"," ",94],["T_CONSTANT_ENCAPSED_STRING","'asc'",94],")",";",["T_WHITESPACE","\n\n    ",94],["T_DOC_COMMENT","\/**\n     * Assemble the query into a format the adapter can utilize\n     *\n     * @return mixed\n     *\/",96],["T_WHITESPACE","\n    ",100],["T_PUBLIC","public",101],["T_WHITESPACE"," ",101],["T_FUNCTION","function",101],["T_WHITESPACE"," ",101],["T_STRING","assemble",101],"(",")",";",["T_WHITESPACE","\n",101],"}",["T_WHITESPACE","\n",102]]