[["T_OPEN_TAG","<?php\n",1],["T_DOC_COMMENT","\/**\n * Zend Framework\n *\n * LICENSE\n *\n * This source file is subject to the new BSD license that is bundled\n * with this package in the file LICENSE.txt.\n * It is also available through the world-wide-web at this URL:\n * http:\/\/framework.zend.com\/license\/new-bsd\n * If you did not receive a copy of the license and are unable to\n * obtain it through the world-wide-web, please send an email\n * to license@zend.com so we can send you a copy immediately.\n *\n * @category   Zend\n * @package    Zend_Crypt\n * @subpackage DiffieHellman\n * @copyright  Copyright (c) 2005-2015 Zend Technologies USA Inc. (http:\/\/www.zend.com)\n * @license    http:\/\/framework.zend.com\/license\/new-bsd     New BSD License\n * @version    $Id$\n *\/",2],["T_WHITESPACE","\n\n",21],["T_DOC_COMMENT","\/**\n * PHP implementation of the Diffie-Hellman public key encryption algorithm.\n * Allows two unassociated parties to establish a joint shared secret key\n * to be used in encrypting subsequent communications.\n *\n * @category   Zend\n * @package    Zend_Crypt\n * @copyright  Copyright (c) 2005-2015 Zend Technologies USA Inc. (http:\/\/www.zend.com)\n * @license    http:\/\/framework.zend.com\/license\/new-bsd     New BSD License\n *\/",23],["T_WHITESPACE","\n",32],["T_CLASS","class",33],["T_WHITESPACE"," ",33],["T_STRING","Zend_Crypt_DiffieHellman",33],["T_WHITESPACE","\n",33],"{",["T_WHITESPACE","\n\n    ",34],["T_DOC_COMMENT","\/**\n     * Static flag to select whether to use PHP5.3's openssl extension\n     * if available.\n     *\n     * @var boolean\n     *\/",36],["T_WHITESPACE","\n    ",41],["T_PUBLIC","public",42],["T_WHITESPACE"," ",42],["T_STATIC","static",42],["T_WHITESPACE"," ",42],["T_VARIABLE","$useOpenssl",42],["T_WHITESPACE"," ",42],"=",["T_WHITESPACE"," ",42],["T_STRING","true",42],";",["T_WHITESPACE","\n\n    ",42],["T_DOC_COMMENT","\/**\n     * Default large prime number; required by the algorithm.\n     *\n     * @var string\n     *\/",44],["T_WHITESPACE","\n    ",48],["T_PRIVATE","private",49],["T_WHITESPACE"," ",49],["T_VARIABLE","$_prime",49],["T_WHITESPACE"," ",49],"=",["T_WHITESPACE"," ",49],["T_STRING","null",49],";",["T_WHITESPACE","\n\n    ",49],["T_DOC_COMMENT","\/**\n     * The default generator number. This number must be greater than 0 but\n     * less than the prime number set.\n     *\n     * @var string\n     *\/",51],["T_WHITESPACE","\n    ",56],["T_PRIVATE","private",57],["T_WHITESPACE"," ",57],["T_VARIABLE","$_generator",57],["T_WHITESPACE"," ",57],"=",["T_WHITESPACE"," ",57],["T_STRING","null",57],";",["T_WHITESPACE","\n\n    ",57],["T_DOC_COMMENT","\/**\n     * A private number set by the local user. It's optional and will\n     * be generated if not set.\n     *\n     * @var string\n     *\/",59],["T_WHITESPACE","\n    ",64],["T_PRIVATE","private",65],["T_WHITESPACE"," ",65],["T_VARIABLE","$_privateKey",65],["T_WHITESPACE"," ",65],"=",["T_WHITESPACE"," ",65],["T_STRING","null",65],";",["T_WHITESPACE","\n\n    ",65],["T_DOC_COMMENT","\/**\n     * BigInteger support object courtesy of Zend_Crypt_Math\n     *\n     * @var Zend_Crypt_Math_BigInteger\n     *\/",67],["T_WHITESPACE","\n    ",71],["T_PRIVATE","private",72],["T_WHITESPACE"," ",72],["T_VARIABLE","$_math",72],["T_WHITESPACE"," ",72],"=",["T_WHITESPACE"," ",72],["T_STRING","null",72],";",["T_WHITESPACE","\n\n    ",72],["T_DOC_COMMENT","\/**\n     * The public key generated by this instance after calling generateKeys().\n     *\n     * @var string\n     *\/",74],["T_WHITESPACE","\n    ",78],["T_PRIVATE","private",79],["T_WHITESPACE"," ",79],["T_VARIABLE","$_publicKey",79],["T_WHITESPACE"," ",79],"=",["T_WHITESPACE"," ",79],["T_STRING","null",79],";",["T_WHITESPACE","\n\n    ",79],["T_DOC_COMMENT","\/**\n     * The shared secret key resulting from a completed Diffie Hellman\n     * exchange\n     *\n     * @var string\n     *\/",81],["T_WHITESPACE","\n    ",86],["T_PRIVATE","private",87],["T_WHITESPACE"," ",87],["T_VARIABLE","$_secretKey",87],["T_WHITESPACE"," ",87],"=",["T_WHITESPACE"," ",87],["T_STRING","null",87],";",["T_WHITESPACE","\n\n    ",87],["T_DOC_COMMENT","\/**\n     * Constants\n     *\/",89],["T_WHITESPACE","\n    ",91],["T_CONST","const",92],["T_WHITESPACE"," ",92],["T_STRING","BINARY",92],["T_WHITESPACE"," ",92],"=",["T_WHITESPACE"," ",92],["T_CONSTANT_ENCAPSED_STRING","'binary'",92],";",["T_WHITESPACE","\n    ",92],["T_CONST","const",93],["T_WHITESPACE"," ",93],["T_STRING","NUMBER",93],["T_WHITESPACE"," ",93],"=",["T_WHITESPACE"," ",93],["T_CONSTANT_ENCAPSED_STRING","'number'",93],";",["T_WHITESPACE","\n    ",93],["T_CONST","const",94],["T_WHITESPACE"," ",94],["T_STRING","BTWOC",94],["T_WHITESPACE","  ",94],"=",["T_WHITESPACE"," ",94],["T_CONSTANT_ENCAPSED_STRING","'btwoc'",94],";",["T_WHITESPACE","\n\n    ",94],["T_DOC_COMMENT","\/**\n     * Constructor; if set construct the object using the parameter array to\n     * set values for Prime, Generator and Private.\n     * If a Private Key is not set, one will be generated at random.\n     *\n     * @param string $prime\n     * @param string $generator\n     * @param string $privateKey\n     * @param string $privateKeyType\n     *\/",96],["T_WHITESPACE","\n    ",105],["T_PUBLIC","public",106],["T_WHITESPACE"," ",106],["T_FUNCTION","function",106],["T_WHITESPACE"," ",106],["T_STRING","__construct",106],"(",["T_VARIABLE","$prime",106],",",["T_WHITESPACE"," ",106],["T_VARIABLE","$generator",106],",",["T_WHITESPACE"," ",106],["T_VARIABLE","$privateKey",106],["T_WHITESPACE"," ",106],"=",["T_WHITESPACE"," ",106],["T_STRING","null",106],",",["T_WHITESPACE"," ",106],["T_VARIABLE","$privateKeyType",106],["T_WHITESPACE"," ",106],"=",["T_WHITESPACE"," ",106],["T_STRING","self",106],["T_DOUBLE_COLON","::",106],["T_STRING","NUMBER",106],")",["T_WHITESPACE","\n    ",106],"{",["T_WHITESPACE","\n        ",107],["T_VARIABLE","$this",108],["T_OBJECT_OPERATOR","->",108],["T_STRING","setPrime",108],"(",["T_VARIABLE","$prime",108],")",";",["T_WHITESPACE","\n        ",108],["T_VARIABLE","$this",109],["T_OBJECT_OPERATOR","->",109],["T_STRING","setGenerator",109],"(",["T_VARIABLE","$generator",109],")",";",["T_WHITESPACE","\n        ",109],["T_IF","if",110],["T_WHITESPACE"," ",110],"(",["T_VARIABLE","$privateKey",110],["T_WHITESPACE"," ",110],["T_IS_NOT_IDENTICAL","!==",110],["T_WHITESPACE"," ",110],["T_STRING","null",110],")",["T_WHITESPACE"," ",110],"{",["T_WHITESPACE","\n            ",110],["T_VARIABLE","$this",111],["T_OBJECT_OPERATOR","->",111],["T_STRING","setPrivateKey",111],"(",["T_VARIABLE","$privateKey",111],",",["T_WHITESPACE"," ",111],["T_VARIABLE","$privateKeyType",111],")",";",["T_WHITESPACE","\n        ",111],"}",["T_WHITESPACE","\n        ",112],["T_VARIABLE","$this",113],["T_OBJECT_OPERATOR","->",113],["T_STRING","setBigIntegerMath",113],"(",")",";",["T_WHITESPACE","\n    ",113],"}",["T_WHITESPACE","\n\n    ",114],["T_DOC_COMMENT","\/**\n     * Generate own public key. If a private number has not already been\n     * set, one will be generated at this stage.\n     *\n     * @return Zend_Crypt_DiffieHellman\n     *\/",116],["T_WHITESPACE","\n    ",121],["T_PUBLIC","public",122],["T_WHITESPACE"," ",122],["T_FUNCTION","function",122],["T_WHITESPACE"," ",122],["T_STRING","generateKeys",122],"(",")",["T_WHITESPACE","\n    ",122],"{",["T_WHITESPACE","\n        ",123],["T_IF","if",124],["T_WHITESPACE"," ",124],"(",["T_STRING","function_exists",124],"(",["T_CONSTANT_ENCAPSED_STRING","'openssl_dh_compute_key'",124],")",["T_WHITESPACE"," ",124],["T_BOOLEAN_AND","&&",124],["T_WHITESPACE"," ",124],["T_STRING","self",124],["T_DOUBLE_COLON","::",124],["T_VARIABLE","$useOpenssl",124],["T_WHITESPACE"," ",124],["T_IS_NOT_IDENTICAL","!==",124],["T_WHITESPACE"," ",124],["T_STRING","false",124],")",["T_WHITESPACE"," ",124],"{",["T_WHITESPACE","\n            ",124],["T_VARIABLE","$details",125],["T_WHITESPACE"," ",125],"=",["T_WHITESPACE"," ",125],["T_ARRAY","array",125],"(",")",";",["T_WHITESPACE","\n            ",125],["T_VARIABLE","$details",126],"[",["T_CONSTANT_ENCAPSED_STRING","'p'",126],"]",["T_WHITESPACE"," ",126],"=",["T_WHITESPACE"," ",126],["T_VARIABLE","$this",126],["T_OBJECT_OPERATOR","->",126],["T_STRING","getPrime",126],"(",")",";",["T_WHITESPACE","\n            ",126],["T_VARIABLE","$details",127],"[",["T_CONSTANT_ENCAPSED_STRING","'g'",127],"]",["T_WHITESPACE"," ",127],"=",["T_WHITESPACE"," ",127],["T_VARIABLE","$this",127],["T_OBJECT_OPERATOR","->",127],["T_STRING","getGenerator",127],"(",")",";",["T_WHITESPACE","\n            ",127],["T_IF","if",128],["T_WHITESPACE"," ",128],"(",["T_VARIABLE","$this",128],["T_OBJECT_OPERATOR","->",128],["T_STRING","hasPrivateKey",128],"(",")",")",["T_WHITESPACE"," ",128],"{",["T_WHITESPACE","\n                ",128],["T_VARIABLE","$details",129],"[",["T_CONSTANT_ENCAPSED_STRING","'priv_key'",129],"]",["T_WHITESPACE"," ",129],"=",["T_WHITESPACE"," ",129],["T_VARIABLE","$this",129],["T_OBJECT_OPERATOR","->",129],["T_STRING","getPrivateKey",129],"(",")",";",["T_WHITESPACE","\n            ",129],"}",["T_WHITESPACE","\n            ",130],["T_VARIABLE","$opensslKeyResource",131],["T_WHITESPACE"," ",131],"=",["T_WHITESPACE"," ",131],["T_STRING","openssl_pkey_new",131],"(",["T_WHITESPACE"," ",131],["T_ARRAY","array",131],"(",["T_CONSTANT_ENCAPSED_STRING","'dh'",131],["T_WHITESPACE"," ",131],["T_DOUBLE_ARROW","=>",131],["T_WHITESPACE"," ",131],["T_VARIABLE","$details",131],")",["T_WHITESPACE"," ",131],")",";",["T_WHITESPACE","\n            ",131],["T_VARIABLE","$data",132],["T_WHITESPACE"," ",132],"=",["T_WHITESPACE"," ",132],["T_STRING","openssl_pkey_get_details",132],"(",["T_VARIABLE","$opensslKeyResource",132],")",";",["T_WHITESPACE","\n            ",132],["T_VARIABLE","$this",133],["T_OBJECT_OPERATOR","->",133],["T_STRING","setPrivateKey",133],"(",["T_VARIABLE","$data",133],"[",["T_CONSTANT_ENCAPSED_STRING","'dh'",133],"]","[",["T_CONSTANT_ENCAPSED_STRING","'priv_key'",133],"]",",",["T_WHITESPACE"," ",133],["T_STRING","self",133],["T_DOUBLE_COLON","::",133],["T_STRING","BINARY",133],")",";",["T_WHITESPACE","\n            ",133],["T_VARIABLE","$this",134],["T_OBJECT_OPERATOR","->",134],["T_STRING","setPublicKey",134],"(",["T_VARIABLE","$data",134],"[",["T_CONSTANT_ENCAPSED_STRING","'dh'",134],"]","[",["T_CONSTANT_ENCAPSED_STRING","'pub_key'",134],"]",",",["T_WHITESPACE"," ",134],["T_STRING","self",134],["T_DOUBLE_COLON","::",134],["T_STRING","BINARY",134],")",";",["T_WHITESPACE","\n        ",134],"}",["T_WHITESPACE"," ",135],["T_ELSE","else",135],["T_WHITESPACE"," ",135],"{",["T_WHITESPACE","\n            ",135],["T_COMMENT","\/\/ Private key is lazy generated in the absence of PHP 5.3's ext\/openssl\n",136],["T_WHITESPACE","            ",137],["T_VARIABLE","$publicKey",137],["T_WHITESPACE"," ",137],"=",["T_WHITESPACE"," ",137],["T_VARIABLE","$this",137],["T_OBJECT_OPERATOR","->",137],["T_STRING","_math",137],["T_OBJECT_OPERATOR","->",137],["T_STRING","powmod",137],"(",["T_VARIABLE","$this",137],["T_OBJECT_OPERATOR","->",137],["T_STRING","getGenerator",137],"(",")",",",["T_WHITESPACE"," ",137],["T_VARIABLE","$this",137],["T_OBJECT_OPERATOR","->",137],["T_STRING","getPrivateKey",137],"(",")",",",["T_WHITESPACE"," ",137],["T_VARIABLE","$this",137],["T_OBJECT_OPERATOR","->",137],["T_STRING","getPrime",137],"(",")",")",";",["T_WHITESPACE","\n            ",137],["T_VARIABLE","$this",138],["T_OBJECT_OPERATOR","->",138],["T_STRING","setPublicKey",138],"(",["T_VARIABLE","$publicKey",138],")",";",["T_WHITESPACE","\n        ",138],"}",["T_WHITESPACE","\n        ",139],["T_RETURN","return",140],["T_WHITESPACE"," ",140],["T_VARIABLE","$this",140],";",["T_WHITESPACE","\n    ",140],"}",["T_WHITESPACE","\n\n    ",141],["T_DOC_COMMENT","\/**\n     * Setter for the value of the public number\n     *\n     * @param string $number\n     * @param string $type\n     * @throws Zend_Crypt_DiffieHellman_Exception\n     * @return Zend_Crypt_DiffieHellman\n     *\/",143],["T_WHITESPACE","\n    ",150],["T_PUBLIC","public",151],["T_WHITESPACE"," ",151],["T_FUNCTION","function",151],["T_WHITESPACE"," ",151],["T_STRING","setPublicKey",151],"(",["T_VARIABLE","$number",151],",",["T_WHITESPACE"," ",151],["T_VARIABLE","$type",151],["T_WHITESPACE"," ",151],"=",["T_WHITESPACE"," ",151],["T_STRING","self",151],["T_DOUBLE_COLON","::",151],["T_STRING","NUMBER",151],")",["T_WHITESPACE","\n    ",151],"{",["T_WHITESPACE","\n        ",152],["T_IF","if",153],["T_WHITESPACE"," ",153],"(",["T_VARIABLE","$type",153],["T_WHITESPACE"," ",153],["T_IS_EQUAL","==",153],["T_WHITESPACE"," ",153],["T_STRING","self",153],["T_DOUBLE_COLON","::",153],["T_STRING","BINARY",153],")",["T_WHITESPACE"," ",153],"{",["T_WHITESPACE","\n            ",153],["T_VARIABLE","$number",154],["T_WHITESPACE"," ",154],"=",["T_WHITESPACE"," ",154],["T_VARIABLE","$this",154],["T_OBJECT_OPERATOR","->",154],["T_STRING","_math",154],["T_OBJECT_OPERATOR","->",154],["T_STRING","fromBinary",154],"(",["T_VARIABLE","$number",154],")",";",["T_WHITESPACE","\n        ",154],"}",["T_WHITESPACE","\n        ",155],["T_IF","if",156],["T_WHITESPACE"," ",156],"(","!",["T_STRING","preg_match",156],"(",["T_CONSTANT_ENCAPSED_STRING","\"\/^\\d+$\/\"",156],",",["T_WHITESPACE"," ",156],["T_VARIABLE","$number",156],")",")",["T_WHITESPACE"," ",156],"{",["T_WHITESPACE","\n            ",156],["T_COMMENT","#require_once('Zend\/Crypt\/DiffieHellman\/Exception.php');\n",157],["T_WHITESPACE","            ",158],["T_THROW","throw",158],["T_WHITESPACE"," ",158],["T_NEW","new",158],["T_WHITESPACE"," ",158],["T_STRING","Zend_Crypt_DiffieHellman_Exception",158],"(",["T_CONSTANT_ENCAPSED_STRING","'invalid parameter; not a positive natural number'",158],")",";",["T_WHITESPACE","\n        ",158],"}",["T_WHITESPACE","\n        ",159],["T_VARIABLE","$this",160],["T_OBJECT_OPERATOR","->",160],["T_STRING","_publicKey",160],["T_WHITESPACE"," ",160],"=",["T_WHITESPACE"," ",160],["T_STRING_CAST","(string)",160],["T_WHITESPACE"," ",160],["T_VARIABLE","$number",160],";",["T_WHITESPACE","\n        ",160],["T_RETURN","return",161],["T_WHITESPACE"," ",161],["T_VARIABLE","$this",161],";",["T_WHITESPACE","\n    ",161],"}",["T_WHITESPACE","\n\n    ",162],["T_DOC_COMMENT","\/**\n     * Returns own public key for communication to the second party to this\n     * transaction.\n     *\n     * @param string $type\n     * @throws Zend_Crypt_DiffieHellman_Exception\n     * @return string\n     *\/",164],["T_WHITESPACE","\n    ",171],["T_PUBLIC","public",172],["T_WHITESPACE"," ",172],["T_FUNCTION","function",172],["T_WHITESPACE"," ",172],["T_STRING","getPublicKey",172],"(",["T_VARIABLE","$type",172],["T_WHITESPACE"," ",172],"=",["T_WHITESPACE"," ",172],["T_STRING","self",172],["T_DOUBLE_COLON","::",172],["T_STRING","NUMBER",172],")",["T_WHITESPACE","\n    ",172],"{",["T_WHITESPACE","\n        ",173],["T_IF","if",174],["T_WHITESPACE"," ",174],"(",["T_VARIABLE","$this",174],["T_OBJECT_OPERATOR","->",174],["T_STRING","_publicKey",174],["T_WHITESPACE"," ",174],["T_IS_IDENTICAL","===",174],["T_WHITESPACE"," ",174],["T_STRING","null",174],")",["T_WHITESPACE"," ",174],"{",["T_WHITESPACE","\n            ",174],["T_COMMENT","#require_once 'Zend\/Crypt\/DiffieHellman\/Exception.php';\n",175],["T_WHITESPACE","            ",176],["T_THROW","throw",176],["T_WHITESPACE"," ",176],["T_NEW","new",176],["T_WHITESPACE"," ",176],["T_STRING","Zend_Crypt_DiffieHellman_Exception",176],"(",["T_CONSTANT_ENCAPSED_STRING","'A public key has not yet been generated using a prior call to generateKeys()'",176],")",";",["T_WHITESPACE","\n        ",176],"}",["T_WHITESPACE","\n        ",177],["T_IF","if",178],["T_WHITESPACE"," ",178],"(",["T_VARIABLE","$type",178],["T_WHITESPACE"," ",178],["T_IS_EQUAL","==",178],["T_WHITESPACE"," ",178],["T_STRING","self",178],["T_DOUBLE_COLON","::",178],["T_STRING","BINARY",178],")",["T_WHITESPACE"," ",178],"{",["T_WHITESPACE","\n            ",178],["T_RETURN","return",179],["T_WHITESPACE"," ",179],["T_VARIABLE","$this",179],["T_OBJECT_OPERATOR","->",179],["T_STRING","_math",179],["T_OBJECT_OPERATOR","->",179],["T_STRING","toBinary",179],"(",["T_VARIABLE","$this",179],["T_OBJECT_OPERATOR","->",179],["T_STRING","_publicKey",179],")",";",["T_WHITESPACE","\n        ",179],"}",["T_WHITESPACE"," ",180],["T_ELSEIF","elseif",180],["T_WHITESPACE"," ",180],"(",["T_VARIABLE","$type",180],["T_WHITESPACE"," ",180],["T_IS_EQUAL","==",180],["T_WHITESPACE"," ",180],["T_STRING","self",180],["T_DOUBLE_COLON","::",180],["T_STRING","BTWOC",180],")",["T_WHITESPACE"," ",180],"{",["T_WHITESPACE","\n            ",180],["T_RETURN","return",181],["T_WHITESPACE"," ",181],["T_VARIABLE","$this",181],["T_OBJECT_OPERATOR","->",181],["T_STRING","_math",181],["T_OBJECT_OPERATOR","->",181],["T_STRING","btwoc",181],"(",["T_VARIABLE","$this",181],["T_OBJECT_OPERATOR","->",181],["T_STRING","_math",181],["T_OBJECT_OPERATOR","->",181],["T_STRING","toBinary",181],"(",["T_VARIABLE","$this",181],["T_OBJECT_OPERATOR","->",181],["T_STRING","_publicKey",181],")",")",";",["T_WHITESPACE","\n        ",181],"}",["T_WHITESPACE","\n        ",182],["T_RETURN","return",183],["T_WHITESPACE"," ",183],["T_VARIABLE","$this",183],["T_OBJECT_OPERATOR","->",183],["T_STRING","_publicKey",183],";",["T_WHITESPACE","\n    ",183],"}",["T_WHITESPACE","\n\n    ",184],["T_DOC_COMMENT","\/**\n     * Compute the shared secret key based on the public key received from the\n     * the second party to this transaction. This should agree to the secret\n     * key the second party computes on our own public key.\n     * Once in agreement, the key is known to only to both parties.\n     * By default, the function expects the public key to be in binary form\n     * which is the typical format when being transmitted.\n     *\n     * If you need the binary form of the shared secret key, call\n     * getSharedSecretKey() with the optional parameter for Binary output.\n     *\n     * @param string $publicKey\n     * @param string $type\n     * @param string $output\n     * @throws Zend_Crypt_DiffieHellman_Exception\n     * @return mixed\n     *\/",186],["T_WHITESPACE","\n    ",202],["T_PUBLIC","public",203],["T_WHITESPACE"," ",203],["T_FUNCTION","function",203],["T_WHITESPACE"," ",203],["T_STRING","computeSecretKey",203],"(",["T_VARIABLE","$publicKey",203],",",["T_WHITESPACE"," ",203],["T_VARIABLE","$type",203],["T_WHITESPACE"," ",203],"=",["T_WHITESPACE"," ",203],["T_STRING","self",203],["T_DOUBLE_COLON","::",203],["T_STRING","NUMBER",203],",",["T_WHITESPACE"," ",203],["T_VARIABLE","$output",203],["T_WHITESPACE"," ",203],"=",["T_WHITESPACE"," ",203],["T_STRING","self",203],["T_DOUBLE_COLON","::",203],["T_STRING","NUMBER",203],")",["T_WHITESPACE","\n    ",203],"{",["T_WHITESPACE","\n        ",204],["T_IF","if",205],["T_WHITESPACE"," ",205],"(",["T_VARIABLE","$type",205],["T_WHITESPACE"," ",205],["T_IS_EQUAL","==",205],["T_WHITESPACE"," ",205],["T_STRING","self",205],["T_DOUBLE_COLON","::",205],["T_STRING","BINARY",205],")",["T_WHITESPACE"," ",205],"{",["T_WHITESPACE","\n            ",205],["T_VARIABLE","$publicKey",206],["T_WHITESPACE"," ",206],"=",["T_WHITESPACE"," ",206],["T_VARIABLE","$this",206],["T_OBJECT_OPERATOR","->",206],["T_STRING","_math",206],["T_OBJECT_OPERATOR","->",206],["T_STRING","fromBinary",206],"(",["T_VARIABLE","$publicKey",206],")",";",["T_WHITESPACE","\n        ",206],"}",["T_WHITESPACE","\n        ",207],["T_IF","if",208],["T_WHITESPACE"," ",208],"(","!",["T_STRING","preg_match",208],"(",["T_CONSTANT_ENCAPSED_STRING","\"\/^\\d+$\/\"",208],",",["T_WHITESPACE"," ",208],["T_VARIABLE","$publicKey",208],")",")",["T_WHITESPACE"," ",208],"{",["T_WHITESPACE","\n            ",208],["T_COMMENT","#require_once('Zend\/Crypt\/DiffieHellman\/Exception.php');\n",209],["T_WHITESPACE","            ",210],["T_THROW","throw",210],["T_WHITESPACE"," ",210],["T_NEW","new",210],["T_WHITESPACE"," ",210],["T_STRING","Zend_Crypt_DiffieHellman_Exception",210],"(",["T_CONSTANT_ENCAPSED_STRING","'invalid parameter; not a positive natural number'",210],")",";",["T_WHITESPACE","\n        ",210],"}",["T_WHITESPACE","\n        ",211],["T_IF","if",212],["T_WHITESPACE"," ",212],"(",["T_STRING","function_exists",212],"(",["T_CONSTANT_ENCAPSED_STRING","'openssl_dh_compute_key'",212],")",["T_WHITESPACE"," ",212],["T_BOOLEAN_AND","&&",212],["T_WHITESPACE"," ",212],["T_STRING","self",212],["T_DOUBLE_COLON","::",212],["T_VARIABLE","$useOpenssl",212],["T_WHITESPACE"," ",212],["T_IS_NOT_IDENTICAL","!==",212],["T_WHITESPACE"," ",212],["T_STRING","false",212],")",["T_WHITESPACE"," ",212],"{",["T_WHITESPACE","\n            ",212],["T_VARIABLE","$this",213],["T_OBJECT_OPERATOR","->",213],["T_STRING","_secretKey",213],["T_WHITESPACE"," ",213],"=",["T_WHITESPACE"," ",213],["T_STRING","openssl_dh_compute_key",213],"(",["T_VARIABLE","$publicKey",213],",",["T_WHITESPACE"," ",213],["T_VARIABLE","$this",213],["T_OBJECT_OPERATOR","->",213],["T_STRING","getPublicKey",213],"(",")",")",";",["T_WHITESPACE","\n        ",213],"}",["T_WHITESPACE"," ",214],["T_ELSE","else",214],["T_WHITESPACE"," ",214],"{",["T_WHITESPACE","\n            ",214],["T_VARIABLE","$this",215],["T_OBJECT_OPERATOR","->",215],["T_STRING","_secretKey",215],["T_WHITESPACE"," ",215],"=",["T_WHITESPACE"," ",215],["T_VARIABLE","$this",215],["T_OBJECT_OPERATOR","->",215],["T_STRING","_math",215],["T_OBJECT_OPERATOR","->",215],["T_STRING","powmod",215],"(",["T_VARIABLE","$publicKey",215],",",["T_WHITESPACE"," ",215],["T_VARIABLE","$this",215],["T_OBJECT_OPERATOR","->",215],["T_STRING","getPrivateKey",215],"(",")",",",["T_WHITESPACE"," ",215],["T_VARIABLE","$this",215],["T_OBJECT_OPERATOR","->",215],["T_STRING","getPrime",215],"(",")",")",";",["T_WHITESPACE","\n        ",215],"}",["T_WHITESPACE","\n        ",216],["T_RETURN","return",217],["T_WHITESPACE"," ",217],["T_VARIABLE","$this",217],["T_OBJECT_OPERATOR","->",217],["T_STRING","getSharedSecretKey",217],"(",["T_VARIABLE","$output",217],")",";",["T_WHITESPACE","\n    ",217],"}",["T_WHITESPACE","\n\n    ",218],["T_DOC_COMMENT","\/**\n     * Return the computed shared secret key from the DiffieHellman transaction\n     *\n     * @param string $type\n     * @throws Zend_Crypt_DiffieHellman_Exception\n     * @return string\n     *\/",220],["T_WHITESPACE","\n    ",226],["T_PUBLIC","public",227],["T_WHITESPACE"," ",227],["T_FUNCTION","function",227],["T_WHITESPACE"," ",227],["T_STRING","getSharedSecretKey",227],"(",["T_VARIABLE","$type",227],["T_WHITESPACE"," ",227],"=",["T_WHITESPACE"," ",227],["T_STRING","self",227],["T_DOUBLE_COLON","::",227],["T_STRING","NUMBER",227],")",["T_WHITESPACE","\n    ",227],"{",["T_WHITESPACE","\n        ",228],["T_IF","if",229],["T_WHITESPACE"," ",229],"(","!",["T_ISSET","isset",229],"(",["T_VARIABLE","$this",229],["T_OBJECT_OPERATOR","->",229],["T_STRING","_secretKey",229],")",")",["T_WHITESPACE"," ",229],"{",["T_WHITESPACE","\n            ",229],["T_COMMENT","#require_once('Zend\/Crypt\/DiffieHellman\/Exception.php');\n",230],["T_WHITESPACE","            ",231],["T_THROW","throw",231],["T_WHITESPACE"," ",231],["T_NEW","new",231],["T_WHITESPACE"," ",231],["T_STRING","Zend_Crypt_DiffieHellman_Exception",231],"(",["T_CONSTANT_ENCAPSED_STRING","'A secret key has not yet been computed; call computeSecretKey()'",231],")",";",["T_WHITESPACE","\n        ",231],"}",["T_WHITESPACE","\n        ",232],["T_IF","if",233],["T_WHITESPACE"," ",233],"(",["T_VARIABLE","$type",233],["T_WHITESPACE"," ",233],["T_IS_EQUAL","==",233],["T_WHITESPACE"," ",233],["T_STRING","self",233],["T_DOUBLE_COLON","::",233],["T_STRING","BINARY",233],")",["T_WHITESPACE"," ",233],"{",["T_WHITESPACE","\n            ",233],["T_RETURN","return",234],["T_WHITESPACE"," ",234],["T_VARIABLE","$this",234],["T_OBJECT_OPERATOR","->",234],["T_STRING","_math",234],["T_OBJECT_OPERATOR","->",234],["T_STRING","toBinary",234],"(",["T_VARIABLE","$this",234],["T_OBJECT_OPERATOR","->",234],["T_STRING","_secretKey",234],")",";",["T_WHITESPACE","\n        ",234],"}",["T_WHITESPACE"," ",235],["T_ELSEIF","elseif",235],["T_WHITESPACE"," ",235],"(",["T_VARIABLE","$type",235],["T_WHITESPACE"," ",235],["T_IS_EQUAL","==",235],["T_WHITESPACE"," ",235],["T_STRING","self",235],["T_DOUBLE_COLON","::",235],["T_STRING","BTWOC",235],")",["T_WHITESPACE"," ",235],"{",["T_WHITESPACE","\n            ",235],["T_RETURN","return",236],["T_WHITESPACE"," ",236],["T_VARIABLE","$this",236],["T_OBJECT_OPERATOR","->",236],["T_STRING","_math",236],["T_OBJECT_OPERATOR","->",236],["T_STRING","btwoc",236],"(",["T_VARIABLE","$this",236],["T_OBJECT_OPERATOR","->",236],["T_STRING","_math",236],["T_OBJECT_OPERATOR","->",236],["T_STRING","toBinary",236],"(",["T_VARIABLE","$this",236],["T_OBJECT_OPERATOR","->",236],["T_STRING","_secretKey",236],")",")",";",["T_WHITESPACE","\n        ",236],"}",["T_WHITESPACE","\n        ",237],["T_RETURN","return",238],["T_WHITESPACE"," ",238],["T_VARIABLE","$this",238],["T_OBJECT_OPERATOR","->",238],["T_STRING","_secretKey",238],";",["T_WHITESPACE","\n    ",238],"}",["T_WHITESPACE","\n\n    ",239],["T_DOC_COMMENT","\/**\n     * Setter for the value of the prime number\n     *\n     * @param string $number\n     * @throws Zend_Crypt_DiffieHellman_Exception\n     * @return Zend_Crypt_DiffieHellman\n     *\/",241],["T_WHITESPACE","\n    ",247],["T_PUBLIC","public",248],["T_WHITESPACE"," ",248],["T_FUNCTION","function",248],["T_WHITESPACE"," ",248],["T_STRING","setPrime",248],"(",["T_VARIABLE","$number",248],")",["T_WHITESPACE","\n    ",248],"{",["T_WHITESPACE","\n        ",249],["T_IF","if",250],["T_WHITESPACE"," ",250],"(","!",["T_STRING","preg_match",250],"(",["T_CONSTANT_ENCAPSED_STRING","\"\/^\\d+$\/\"",250],",",["T_WHITESPACE"," ",250],["T_VARIABLE","$number",250],")",["T_WHITESPACE"," ",250],["T_BOOLEAN_OR","||",250],["T_WHITESPACE"," ",250],["T_VARIABLE","$number",250],["T_WHITESPACE"," ",250],"<",["T_WHITESPACE"," ",250],["T_LNUMBER","11",250],")",["T_WHITESPACE"," ",250],"{",["T_WHITESPACE","\n            ",250],["T_COMMENT","#require_once('Zend\/Crypt\/DiffieHellman\/Exception.php');\n",251],["T_WHITESPACE","            ",252],["T_THROW","throw",252],["T_WHITESPACE"," ",252],["T_NEW","new",252],["T_WHITESPACE"," ",252],["T_STRING","Zend_Crypt_DiffieHellman_Exception",252],"(",["T_CONSTANT_ENCAPSED_STRING","'invalid parameter; not a positive natural number or too small: should be a large natural number prime'",252],")",";",["T_WHITESPACE","\n        ",252],"}",["T_WHITESPACE","\n        ",253],["T_VARIABLE","$this",254],["T_OBJECT_OPERATOR","->",254],["T_STRING","_prime",254],["T_WHITESPACE"," ",254],"=",["T_WHITESPACE"," ",254],["T_STRING_CAST","(string)",254],["T_WHITESPACE"," ",254],["T_VARIABLE","$number",254],";",["T_WHITESPACE","\n        ",254],["T_RETURN","return",255],["T_WHITESPACE"," ",255],["T_VARIABLE","$this",255],";",["T_WHITESPACE","\n    ",255],"}",["T_WHITESPACE","\n\n    ",256],["T_DOC_COMMENT","\/**\n     * Getter for the value of the prime number\n     *\n     * @throws Zend_Crypt_DiffieHellman_Exception\n     * @return string\n     *\/",258],["T_WHITESPACE","\n    ",263],["T_PUBLIC","public",264],["T_WHITESPACE"," ",264],["T_FUNCTION","function",264],["T_WHITESPACE"," ",264],["T_STRING","getPrime",264],"(",")",["T_WHITESPACE","\n    ",264],"{",["T_WHITESPACE","\n        ",265],["T_IF","if",266],["T_WHITESPACE"," ",266],"(","!",["T_ISSET","isset",266],"(",["T_VARIABLE","$this",266],["T_OBJECT_OPERATOR","->",266],["T_STRING","_prime",266],")",")",["T_WHITESPACE"," ",266],"{",["T_WHITESPACE","\n            ",266],["T_COMMENT","#require_once('Zend\/Crypt\/DiffieHellman\/Exception.php');\n",267],["T_WHITESPACE","            ",268],["T_THROW","throw",268],["T_WHITESPACE"," ",268],["T_NEW","new",268],["T_WHITESPACE"," ",268],["T_STRING","Zend_Crypt_DiffieHellman_Exception",268],"(",["T_CONSTANT_ENCAPSED_STRING","'No prime number has been set'",268],")",";",["T_WHITESPACE","\n        ",268],"}",["T_WHITESPACE","\n        ",269],["T_RETURN","return",270],["T_WHITESPACE"," ",270],["T_VARIABLE","$this",270],["T_OBJECT_OPERATOR","->",270],["T_STRING","_prime",270],";",["T_WHITESPACE","\n    ",270],"}",["T_WHITESPACE","\n\n    ",271],["T_DOC_COMMENT","\/**\n     * Setter for the value of the generator number\n     *\n     * @param string $number\n     * @throws Zend_Crypt_DiffieHellman_Exception\n     * @return Zend_Crypt_DiffieHellman\n     *\/",273],["T_WHITESPACE","\n    ",279],["T_PUBLIC","public",280],["T_WHITESPACE"," ",280],["T_FUNCTION","function",280],["T_WHITESPACE"," ",280],["T_STRING","setGenerator",280],"(",["T_VARIABLE","$number",280],")",["T_WHITESPACE","\n    ",280],"{",["T_WHITESPACE","\n        ",281],["T_IF","if",282],["T_WHITESPACE"," ",282],"(","!",["T_STRING","preg_match",282],"(",["T_CONSTANT_ENCAPSED_STRING","\"\/^\\d+$\/\"",282],",",["T_WHITESPACE"," ",282],["T_VARIABLE","$number",282],")",["T_WHITESPACE"," ",282],["T_BOOLEAN_OR","||",282],["T_WHITESPACE"," ",282],["T_VARIABLE","$number",282],["T_WHITESPACE"," ",282],"<",["T_WHITESPACE"," ",282],["T_LNUMBER","2",282],")",["T_WHITESPACE"," ",282],"{",["T_WHITESPACE","\n            ",282],["T_COMMENT","#require_once('Zend\/Crypt\/DiffieHellman\/Exception.php');\n",283],["T_WHITESPACE","            ",284],["T_THROW","throw",284],["T_WHITESPACE"," ",284],["T_NEW","new",284],["T_WHITESPACE"," ",284],["T_STRING","Zend_Crypt_DiffieHellman_Exception",284],"(",["T_CONSTANT_ENCAPSED_STRING","'invalid parameter; not a positive natural number greater than 1'",284],")",";",["T_WHITESPACE","\n        ",284],"}",["T_WHITESPACE","\n        ",285],["T_VARIABLE","$this",286],["T_OBJECT_OPERATOR","->",286],["T_STRING","_generator",286],["T_WHITESPACE"," ",286],"=",["T_WHITESPACE"," ",286],["T_STRING_CAST","(string)",286],["T_WHITESPACE"," ",286],["T_VARIABLE","$number",286],";",["T_WHITESPACE","\n        ",286],["T_RETURN","return",287],["T_WHITESPACE"," ",287],["T_VARIABLE","$this",287],";",["T_WHITESPACE","\n    ",287],"}",["T_WHITESPACE","\n\n    ",288],["T_DOC_COMMENT","\/**\n     * Getter for the value of the generator number\n     *\n     * @throws Zend_Crypt_DiffieHellman_Exception\n     * @return string\n     *\/",290],["T_WHITESPACE","\n    ",295],["T_PUBLIC","public",296],["T_WHITESPACE"," ",296],["T_FUNCTION","function",296],["T_WHITESPACE"," ",296],["T_STRING","getGenerator",296],"(",")",["T_WHITESPACE","\n    ",296],"{",["T_WHITESPACE","\n        ",297],["T_IF","if",298],["T_WHITESPACE"," ",298],"(","!",["T_ISSET","isset",298],"(",["T_VARIABLE","$this",298],["T_OBJECT_OPERATOR","->",298],["T_STRING","_generator",298],")",")",["T_WHITESPACE"," ",298],"{",["T_WHITESPACE","\n            ",298],["T_COMMENT","#require_once('Zend\/Crypt\/DiffieHellman\/Exception.php');\n",299],["T_WHITESPACE","            ",300],["T_THROW","throw",300],["T_WHITESPACE"," ",300],["T_NEW","new",300],["T_WHITESPACE"," ",300],["T_STRING","Zend_Crypt_DiffieHellman_Exception",300],"(",["T_CONSTANT_ENCAPSED_STRING","'No generator number has been set'",300],")",";",["T_WHITESPACE","\n        ",300],"}",["T_WHITESPACE","\n        ",301],["T_RETURN","return",302],["T_WHITESPACE"," ",302],["T_VARIABLE","$this",302],["T_OBJECT_OPERATOR","->",302],["T_STRING","_generator",302],";",["T_WHITESPACE","\n    ",302],"}",["T_WHITESPACE","\n\n    ",303],["T_DOC_COMMENT","\/**\n     * Setter for the value of the private number\n     *\n     * @param string $number\n     * @param string $type\n     * @throws Zend_Crypt_DiffieHellman_Exception\n     * @return Zend_Crypt_DiffieHellman\n     *\/",305],["T_WHITESPACE","\n    ",312],["T_PUBLIC","public",313],["T_WHITESPACE"," ",313],["T_FUNCTION","function",313],["T_WHITESPACE"," ",313],["T_STRING","setPrivateKey",313],"(",["T_VARIABLE","$number",313],",",["T_WHITESPACE"," ",313],["T_VARIABLE","$type",313],["T_WHITESPACE"," ",313],"=",["T_WHITESPACE"," ",313],["T_STRING","self",313],["T_DOUBLE_COLON","::",313],["T_STRING","NUMBER",313],")",["T_WHITESPACE","\n    ",313],"{",["T_WHITESPACE","\n        ",314],["T_IF","if",315],["T_WHITESPACE"," ",315],"(",["T_VARIABLE","$type",315],["T_WHITESPACE"," ",315],["T_IS_EQUAL","==",315],["T_WHITESPACE"," ",315],["T_STRING","self",315],["T_DOUBLE_COLON","::",315],["T_STRING","BINARY",315],")",["T_WHITESPACE"," ",315],"{",["T_WHITESPACE","\n            ",315],["T_VARIABLE","$number",316],["T_WHITESPACE"," ",316],"=",["T_WHITESPACE"," ",316],["T_VARIABLE","$this",316],["T_OBJECT_OPERATOR","->",316],["T_STRING","_math",316],["T_OBJECT_OPERATOR","->",316],["T_STRING","fromBinary",316],"(",["T_VARIABLE","$number",316],")",";",["T_WHITESPACE","\n        ",316],"}",["T_WHITESPACE","\n        ",317],["T_IF","if",318],["T_WHITESPACE"," ",318],"(","!",["T_STRING","preg_match",318],"(",["T_CONSTANT_ENCAPSED_STRING","\"\/^\\d+$\/\"",318],",",["T_WHITESPACE"," ",318],["T_VARIABLE","$number",318],")",")",["T_WHITESPACE"," ",318],"{",["T_WHITESPACE","\n            ",318],["T_COMMENT","#require_once('Zend\/Crypt\/DiffieHellman\/Exception.php');\n",319],["T_WHITESPACE","            ",320],["T_THROW","throw",320],["T_WHITESPACE"," ",320],["T_NEW","new",320],["T_WHITESPACE"," ",320],["T_STRING","Zend_Crypt_DiffieHellman_Exception",320],"(",["T_CONSTANT_ENCAPSED_STRING","'invalid parameter; not a positive natural number'",320],")",";",["T_WHITESPACE","\n        ",320],"}",["T_WHITESPACE","\n        ",321],["T_VARIABLE","$this",322],["T_OBJECT_OPERATOR","->",322],["T_STRING","_privateKey",322],["T_WHITESPACE"," ",322],"=",["T_WHITESPACE"," ",322],["T_STRING_CAST","(string)",322],["T_WHITESPACE"," ",322],["T_VARIABLE","$number",322],";",["T_WHITESPACE","\n        ",322],["T_RETURN","return",323],["T_WHITESPACE"," ",323],["T_VARIABLE","$this",323],";",["T_WHITESPACE","\n    ",323],"}",["T_WHITESPACE","\n\n    ",324],["T_DOC_COMMENT","\/**\n     * Getter for the value of the private number\n     *\n     * @param string $type\n     * @return string\n     *\/",326],["T_WHITESPACE","\n    ",331],["T_PUBLIC","public",332],["T_WHITESPACE"," ",332],["T_FUNCTION","function",332],["T_WHITESPACE"," ",332],["T_STRING","getPrivateKey",332],"(",["T_VARIABLE","$type",332],["T_WHITESPACE"," ",332],"=",["T_WHITESPACE"," ",332],["T_STRING","self",332],["T_DOUBLE_COLON","::",332],["T_STRING","NUMBER",332],")",["T_WHITESPACE","\n    ",332],"{",["T_WHITESPACE","\n        ",333],["T_IF","if",334],["T_WHITESPACE"," ",334],"(","!",["T_VARIABLE","$this",334],["T_OBJECT_OPERATOR","->",334],["T_STRING","hasPrivateKey",334],"(",")",")",["T_WHITESPACE"," ",334],"{",["T_WHITESPACE","\n            ",334],["T_VARIABLE","$this",335],["T_OBJECT_OPERATOR","->",335],["T_STRING","setPrivateKey",335],"(",["T_VARIABLE","$this",335],["T_OBJECT_OPERATOR","->",335],["T_STRING","_generatePrivateKey",335],"(",")",",",["T_WHITESPACE"," ",335],["T_STRING","self",335],["T_DOUBLE_COLON","::",335],["T_STRING","BINARY",335],")",";",["T_WHITESPACE","\n        ",335],"}",["T_WHITESPACE","\n        ",336],["T_IF","if",337],["T_WHITESPACE"," ",337],"(",["T_VARIABLE","$type",337],["T_WHITESPACE"," ",337],["T_IS_EQUAL","==",337],["T_WHITESPACE"," ",337],["T_STRING","self",337],["T_DOUBLE_COLON","::",337],["T_STRING","BINARY",337],")",["T_WHITESPACE"," ",337],"{",["T_WHITESPACE","\n            ",337],["T_RETURN","return",338],["T_WHITESPACE"," ",338],["T_VARIABLE","$this",338],["T_OBJECT_OPERATOR","->",338],["T_STRING","_math",338],["T_OBJECT_OPERATOR","->",338],["T_STRING","toBinary",338],"(",["T_VARIABLE","$this",338],["T_OBJECT_OPERATOR","->",338],["T_STRING","_privateKey",338],")",";",["T_WHITESPACE","\n        ",338],"}",["T_WHITESPACE"," ",339],["T_ELSEIF","elseif",339],["T_WHITESPACE"," ",339],"(",["T_VARIABLE","$type",339],["T_WHITESPACE"," ",339],["T_IS_EQUAL","==",339],["T_WHITESPACE"," ",339],["T_STRING","self",339],["T_DOUBLE_COLON","::",339],["T_STRING","BTWOC",339],")",["T_WHITESPACE"," ",339],"{",["T_WHITESPACE","\n            ",339],["T_RETURN","return",340],["T_WHITESPACE"," ",340],["T_VARIABLE","$this",340],["T_OBJECT_OPERATOR","->",340],["T_STRING","_math",340],["T_OBJECT_OPERATOR","->",340],["T_STRING","btwoc",340],"(",["T_VARIABLE","$this",340],["T_OBJECT_OPERATOR","->",340],["T_STRING","_math",340],["T_OBJECT_OPERATOR","->",340],["T_STRING","toBinary",340],"(",["T_VARIABLE","$this",340],["T_OBJECT_OPERATOR","->",340],["T_STRING","_privateKey",340],")",")",";",["T_WHITESPACE","\n        ",340],"}",["T_WHITESPACE","\n        ",341],["T_RETURN","return",342],["T_WHITESPACE"," ",342],["T_VARIABLE","$this",342],["T_OBJECT_OPERATOR","->",342],["T_STRING","_privateKey",342],";",["T_WHITESPACE","\n    ",342],"}",["T_WHITESPACE","\n\n    ",343],["T_DOC_COMMENT","\/**\n     * Check whether a private key currently exists.\n     *\n     * @return boolean\n     *\/",345],["T_WHITESPACE","\n    ",349],["T_PUBLIC","public",350],["T_WHITESPACE"," ",350],["T_FUNCTION","function",350],["T_WHITESPACE"," ",350],["T_STRING","hasPrivateKey",350],"(",")",["T_WHITESPACE","\n    ",350],"{",["T_WHITESPACE","\n        ",351],["T_RETURN","return",352],["T_WHITESPACE"," ",352],["T_ISSET","isset",352],"(",["T_VARIABLE","$this",352],["T_OBJECT_OPERATOR","->",352],["T_STRING","_privateKey",352],")",";",["T_WHITESPACE","\n    ",352],"}",["T_WHITESPACE","\n\n    ",353],["T_DOC_COMMENT","\/**\n     * Setter to pass an extension parameter which is used to create\n     * a specific BigInteger instance for a specific extension type.\n     * Allows manual setting of the class in case of an extension\n     * problem or bug.\n     *\n     * @param string $extension\n     * @return void\n     *\/",355],["T_WHITESPACE","\n    ",363],["T_PUBLIC","public",364],["T_WHITESPACE"," ",364],["T_FUNCTION","function",364],["T_WHITESPACE"," ",364],["T_STRING","setBigIntegerMath",364],"(",["T_VARIABLE","$extension",364],["T_WHITESPACE"," ",364],"=",["T_WHITESPACE"," ",364],["T_STRING","null",364],")",["T_WHITESPACE","\n    ",364],"{",["T_WHITESPACE","\n        ",365],["T_DOC_COMMENT","\/**\n         * @see Zend_Crypt_Math\n         *\/",366],["T_WHITESPACE","\n        ",368],["T_COMMENT","#require_once 'Zend\/Crypt\/Math.php';\n",369],["T_WHITESPACE","        ",370],["T_VARIABLE","$this",370],["T_OBJECT_OPERATOR","->",370],["T_STRING","_math",370],["T_WHITESPACE"," ",370],"=",["T_WHITESPACE"," ",370],["T_NEW","new",370],["T_WHITESPACE"," ",370],["T_STRING","Zend_Crypt_Math",370],"(",["T_VARIABLE","$extension",370],")",";",["T_WHITESPACE","\n    ",370],"}",["T_WHITESPACE","\n\n    ",371],["T_DOC_COMMENT","\/**\n     * In the event a private number\/key has not been set by the user,\n     * or generated by ext\/openssl, a best attempt will be made to\n     * generate a random key. Having a random number generator installed\n     * on linux\/bsd is highly recommended! The alternative is not recommended\n     * for production unless without any other option.\n     *\n     * @return string\n     *\/",373],["T_WHITESPACE","\n    ",381],["T_PROTECTED","protected",382],["T_WHITESPACE"," ",382],["T_FUNCTION","function",382],["T_WHITESPACE"," ",382],["T_STRING","_generatePrivateKey",382],"(",")",["T_WHITESPACE","\n    ",382],"{",["T_WHITESPACE","\n        ",383],["T_VARIABLE","$rand",384],["T_WHITESPACE"," ",384],"=",["T_WHITESPACE"," ",384],["T_VARIABLE","$this",384],["T_OBJECT_OPERATOR","->",384],["T_STRING","_math",384],["T_OBJECT_OPERATOR","->",384],["T_STRING","rand",384],"(",["T_VARIABLE","$this",384],["T_OBJECT_OPERATOR","->",384],["T_STRING","getGenerator",384],"(",")",",",["T_WHITESPACE"," ",384],["T_VARIABLE","$this",384],["T_OBJECT_OPERATOR","->",384],["T_STRING","getPrime",384],"(",")",")",";",["T_WHITESPACE","\n        ",384],["T_RETURN","return",385],["T_WHITESPACE"," ",385],["T_VARIABLE","$rand",385],";",["T_WHITESPACE","\n    ",385],"}",["T_WHITESPACE","\n\n",386],"}",["T_WHITESPACE","\n",388]]