[["T_OPEN_TAG","<?php\n",1],["T_DOC_COMMENT","\/**\n * Zend Framework\n *\n * LICENSE\n *\n * This source file is subject to the new BSD license that is bundled\n * with this package in the file LICENSE.txt.\n * It is also available through the world-wide-web at this URL:\n * http:\/\/framework.zend.com\/license\/new-bsd\n * If you did not receive a copy of the license and are unable to\n * obtain it through the world-wide-web, please send an email\n * to license@zend.com so we can send you a copy immediately.\n *\n * @category   Zend\n * @package    Zend_EventManager\n * @copyright  Copyright (c) 2005-2015 Zend Technologies USA Inc. (http:\/\/www.zend.com)\n * @license    http:\/\/framework.zend.com\/license\/new-bsd     New BSD License\n *\/",2],["T_WHITESPACE","\n\n",19],["T_COMMENT","#require_once 'Zend\/EventManager\/EventManager.php';\n",21],["T_COMMENT","#require_once 'Zend\/EventManager\/SharedEventCollection.php';\n",22],["T_WHITESPACE","\n",23],["T_DOC_COMMENT","\/**\n * Shared\/contextual EventManager\n *\n * Allows attaching to EMs composed by other classes without having an instance first.\n * The assumption is that the SharedEventManager will be injected into EventManager \n * instances, and then queried for additional listeners when triggering an event.\n *\n * @category   Zend\n * @package    Zend_EventManager\n * @copyright  Copyright (c) 2005-2015 Zend Technologies USA Inc. (http:\/\/www.zend.com)\n * @license    http:\/\/framework.zend.com\/license\/new-bsd     New BSD License\n *\/",24],["T_WHITESPACE","\n",35],["T_CLASS","class",36],["T_WHITESPACE"," ",36],["T_STRING","Zend_EventManager_SharedEventManager",36],["T_WHITESPACE"," ",36],["T_IMPLEMENTS","implements",36],["T_WHITESPACE"," ",36],["T_STRING","Zend_EventManager_SharedEventCollection",36],["T_WHITESPACE","\n",36],"{",["T_WHITESPACE","\n    ",37],["T_DOC_COMMENT","\/**\n     * Identifiers with event connections\n     * @var array\n     *\/",38],["T_WHITESPACE","\n    ",41],["T_PROTECTED","protected",42],["T_WHITESPACE"," ",42],["T_VARIABLE","$identifiers",42],["T_WHITESPACE"," ",42],"=",["T_WHITESPACE"," ",42],["T_ARRAY","array",42],"(",")",";",["T_WHITESPACE","\n\n    ",42],["T_DOC_COMMENT","\/**\n     * Attach a listener to an event\n     *\n     * Allows attaching a callback to an event offerred by one or more \n     * identifying components. As an example, the following connects to the \n     * \"getAll\" event of both an AbstractResource and EntityResource:\n     *\n     * <code>\n     * SharedEventManager::getInstance()->connect(\n     *     array('My\\Resource\\AbstractResource', 'My\\Resource\\EntityResource'),\n     *     'getOne',\n     *     function ($e) use ($cache) {\n     *         if (!$id = $e->getParam('id', false)) {\n     *             return;\n     *         }\n     *         if (!$data = $cache->load(get_class($resource) . '::getOne::' . $id )) {\n     *             return;\n     *         }\n     *         return $data;\n     *     }\n     * );\n     * <\/code>\n     * \n     * @param  string|array $id Identifier(s) for event emitting component(s)\n     * @param  string $event \n     * @param  callback $callback PHP Callback\n     * @param  int $priority Priority at which listener should execute\n     * @return void\n     *\/",44],["T_WHITESPACE","\n    ",72],["T_PUBLIC","public",73],["T_WHITESPACE"," ",73],["T_FUNCTION","function",73],["T_WHITESPACE"," ",73],["T_STRING","attach",73],"(",["T_VARIABLE","$id",73],",",["T_WHITESPACE"," ",73],["T_VARIABLE","$event",73],",",["T_WHITESPACE"," ",73],["T_VARIABLE","$callback",73],",",["T_WHITESPACE"," ",73],["T_VARIABLE","$priority",73],["T_WHITESPACE"," ",73],"=",["T_WHITESPACE"," ",73],["T_LNUMBER","1",73],")",["T_WHITESPACE","\n    ",73],"{",["T_WHITESPACE","\n        ",74],["T_VARIABLE","$ids",75],["T_WHITESPACE"," ",75],"=",["T_WHITESPACE"," ",75],["T_ARRAY_CAST","(array)",75],["T_WHITESPACE"," ",75],["T_VARIABLE","$id",75],";",["T_WHITESPACE","\n        ",75],["T_FOREACH","foreach",76],["T_WHITESPACE"," ",76],"(",["T_VARIABLE","$ids",76],["T_WHITESPACE"," ",76],["T_AS","as",76],["T_WHITESPACE"," ",76],["T_VARIABLE","$id",76],")",["T_WHITESPACE"," ",76],"{",["T_WHITESPACE","\n            ",76],["T_IF","if",77],["T_WHITESPACE"," ",77],"(","!",["T_STRING","array_key_exists",77],"(",["T_VARIABLE","$id",77],",",["T_WHITESPACE"," ",77],["T_VARIABLE","$this",77],["T_OBJECT_OPERATOR","->",77],["T_STRING","identifiers",77],")",")",["T_WHITESPACE"," ",77],"{",["T_WHITESPACE","\n                ",77],["T_VARIABLE","$this",78],["T_OBJECT_OPERATOR","->",78],["T_STRING","identifiers",78],"[",["T_VARIABLE","$id",78],"]",["T_WHITESPACE"," ",78],"=",["T_WHITESPACE"," ",78],["T_NEW","new",78],["T_WHITESPACE"," ",78],["T_STRING","Zend_EventManager_EventManager",78],"(",")",";",["T_WHITESPACE","\n            ",78],"}",["T_WHITESPACE","\n            ",79],["T_VARIABLE","$this",80],["T_OBJECT_OPERATOR","->",80],["T_STRING","identifiers",80],"[",["T_VARIABLE","$id",80],"]",["T_OBJECT_OPERATOR","->",80],["T_STRING","attach",80],"(",["T_VARIABLE","$event",80],",",["T_WHITESPACE"," ",80],["T_VARIABLE","$callback",80],",",["T_WHITESPACE"," ",80],["T_VARIABLE","$priority",80],")",";",["T_WHITESPACE","\n        ",80],"}",["T_WHITESPACE","\n    ",81],"}",["T_WHITESPACE","\n\n    ",82],["T_DOC_COMMENT","\/**\n     * Detach a listener from an event offered by a given resource\n     * \n     * @param  string|int $id\n     * @param  Zend_Stdlib_CallbackHandler $listener \n     * @return bool Returns true if event and listener found, and unsubscribed; returns false if either event or listener not found\n     *\/",84],["T_WHITESPACE","\n    ",90],["T_PUBLIC","public",91],["T_WHITESPACE"," ",91],["T_FUNCTION","function",91],["T_WHITESPACE"," ",91],["T_STRING","detach",91],"(",["T_VARIABLE","$id",91],",",["T_WHITESPACE"," ",91],["T_STRING","Zend_Stdlib_CallbackHandler",91],["T_WHITESPACE"," ",91],["T_VARIABLE","$listener",91],")",["T_WHITESPACE","\n    ",91],"{",["T_WHITESPACE","\n        ",92],["T_IF","if",93],["T_WHITESPACE"," ",93],"(","!",["T_STRING","array_key_exists",93],"(",["T_VARIABLE","$id",93],",",["T_WHITESPACE"," ",93],["T_VARIABLE","$this",93],["T_OBJECT_OPERATOR","->",93],["T_STRING","identifiers",93],")",")",["T_WHITESPACE"," ",93],"{",["T_WHITESPACE","\n            ",93],["T_RETURN","return",94],["T_WHITESPACE"," ",94],["T_STRING","false",94],";",["T_WHITESPACE","\n        ",94],"}",["T_WHITESPACE","\n        ",95],["T_RETURN","return",96],["T_WHITESPACE"," ",96],["T_VARIABLE","$this",96],["T_OBJECT_OPERATOR","->",96],["T_STRING","identifiers",96],"[",["T_VARIABLE","$id",96],"]",["T_OBJECT_OPERATOR","->",96],["T_STRING","detach",96],"(",["T_VARIABLE","$listener",96],")",";",["T_WHITESPACE","\n    ",96],"}",["T_WHITESPACE","\n\n    ",97],["T_DOC_COMMENT","\/**\n     * Retrieve all registered events for a given resource\n     * \n     * @param  string|int $id\n     * @return array\n     *\/",99],["T_WHITESPACE","\n    ",104],["T_PUBLIC","public",105],["T_WHITESPACE"," ",105],["T_FUNCTION","function",105],["T_WHITESPACE"," ",105],["T_STRING","getEvents",105],"(",["T_VARIABLE","$id",105],")",["T_WHITESPACE","\n    ",105],"{",["T_WHITESPACE","\n        ",106],["T_IF","if",107],["T_WHITESPACE"," ",107],"(","!",["T_STRING","array_key_exists",107],"(",["T_VARIABLE","$id",107],",",["T_WHITESPACE"," ",107],["T_VARIABLE","$this",107],["T_OBJECT_OPERATOR","->",107],["T_STRING","identifiers",107],")",")",["T_WHITESPACE"," ",107],"{",["T_WHITESPACE","\n            ",107],["T_RETURN","return",108],["T_WHITESPACE"," ",108],["T_STRING","false",108],";",["T_WHITESPACE","\n        ",108],"}",["T_WHITESPACE","\n        ",109],["T_RETURN","return",110],["T_WHITESPACE"," ",110],["T_VARIABLE","$this",110],["T_OBJECT_OPERATOR","->",110],["T_STRING","identifiers",110],"[",["T_VARIABLE","$id",110],"]",["T_OBJECT_OPERATOR","->",110],["T_STRING","getEvents",110],"(",")",";",["T_WHITESPACE","\n    ",110],"}",["T_WHITESPACE","\n\n    ",111],["T_DOC_COMMENT","\/**\n     * Retrieve all listeners for a given identifier and event\n     * \n     * @param  string|int $id\n     * @param  string|int $event \n     * @return false|Zend_Stdlib_PriorityQueue\n     *\/",113],["T_WHITESPACE","\n    ",119],["T_PUBLIC","public",120],["T_WHITESPACE"," ",120],["T_FUNCTION","function",120],["T_WHITESPACE"," ",120],["T_STRING","getListeners",120],"(",["T_VARIABLE","$id",120],",",["T_WHITESPACE"," ",120],["T_VARIABLE","$event",120],")",["T_WHITESPACE","\n    ",120],"{",["T_WHITESPACE","\n        ",121],["T_IF","if",122],["T_WHITESPACE"," ",122],"(","!",["T_STRING","array_key_exists",122],"(",["T_VARIABLE","$id",122],",",["T_WHITESPACE"," ",122],["T_VARIABLE","$this",122],["T_OBJECT_OPERATOR","->",122],["T_STRING","identifiers",122],")",")",["T_WHITESPACE"," ",122],"{",["T_WHITESPACE","\n            ",122],["T_RETURN","return",123],["T_WHITESPACE"," ",123],["T_STRING","false",123],";",["T_WHITESPACE","\n        ",123],"}",["T_WHITESPACE","\n        ",124],["T_RETURN","return",125],["T_WHITESPACE"," ",125],["T_VARIABLE","$this",125],["T_OBJECT_OPERATOR","->",125],["T_STRING","identifiers",125],"[",["T_VARIABLE","$id",125],"]",["T_OBJECT_OPERATOR","->",125],["T_STRING","getListeners",125],"(",["T_VARIABLE","$event",125],")",";",["T_WHITESPACE","\n    ",125],"}",["T_WHITESPACE","\n\n    ",126],["T_DOC_COMMENT","\/**\n     * Clear all listeners for a given identifier, optionally for a specific event\n     * \n     * @param  string|int $id \n     * @param  null|string $event \n     * @return bool\n     *\/",128],["T_WHITESPACE","\n    ",134],["T_PUBLIC","public",135],["T_WHITESPACE"," ",135],["T_FUNCTION","function",135],["T_WHITESPACE"," ",135],["T_STRING","clearListeners",135],"(",["T_VARIABLE","$id",135],",",["T_WHITESPACE"," ",135],["T_VARIABLE","$event",135],["T_WHITESPACE"," ",135],"=",["T_WHITESPACE"," ",135],["T_STRING","null",135],")",["T_WHITESPACE","\n    ",135],"{",["T_WHITESPACE","\n        ",136],["T_IF","if",137],["T_WHITESPACE"," ",137],"(","!",["T_STRING","array_key_exists",137],"(",["T_VARIABLE","$id",137],",",["T_WHITESPACE"," ",137],["T_VARIABLE","$this",137],["T_OBJECT_OPERATOR","->",137],["T_STRING","identifiers",137],")",")",["T_WHITESPACE"," ",137],"{",["T_WHITESPACE","\n            ",137],["T_RETURN","return",138],["T_WHITESPACE"," ",138],["T_STRING","false",138],";",["T_WHITESPACE","\n        ",138],"}",["T_WHITESPACE","\n\n        ",139],["T_IF","if",141],["T_WHITESPACE"," ",141],"(",["T_STRING","null",141],["T_WHITESPACE"," ",141],["T_IS_IDENTICAL","===",141],["T_WHITESPACE"," ",141],["T_VARIABLE","$event",141],")",["T_WHITESPACE"," ",141],"{",["T_WHITESPACE","\n            ",141],["T_UNSET","unset",142],"(",["T_VARIABLE","$this",142],["T_OBJECT_OPERATOR","->",142],["T_STRING","identifiers",142],"[",["T_VARIABLE","$id",142],"]",")",";",["T_WHITESPACE","\n            ",142],["T_RETURN","return",143],["T_WHITESPACE"," ",143],["T_STRING","true",143],";",["T_WHITESPACE","\n        ",143],"}",["T_WHITESPACE","\n\n        ",144],["T_RETURN","return",146],["T_WHITESPACE"," ",146],["T_VARIABLE","$this",146],["T_OBJECT_OPERATOR","->",146],["T_STRING","identifiers",146],"[",["T_VARIABLE","$id",146],"]",["T_OBJECT_OPERATOR","->",146],["T_STRING","clearListeners",146],"(",["T_VARIABLE","$event",146],")",";",["T_WHITESPACE","\n    ",146],"}",["T_WHITESPACE","\n",147],"}",["T_WHITESPACE","\n",148]]