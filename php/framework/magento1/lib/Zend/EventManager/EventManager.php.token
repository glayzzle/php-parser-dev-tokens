[["T_OPEN_TAG","<?php\n",1],["T_DOC_COMMENT","\/**\n * Zend Framework\n *\n * LICENSE\n *\n * This source file is subject to the new BSD license that is bundled\n * with this package in the file LICENSE.txt.\n * It is also available through the world-wide-web at this URL:\n * http:\/\/framework.zend.com\/license\/new-bsd\n * If you did not receive a copy of the license and are unable to\n * obtain it through the world-wide-web, please send an email\n * to license@zend.com so we can send you a copy immediately.\n *\n * @category   Zend\n * @package    Zend_EventManager\n * @copyright  Copyright (c) 2005-2015 Zend Technologies USA Inc. (http:\/\/www.zend.com)\n * @license    http:\/\/framework.zend.com\/license\/new-bsd     New BSD License\n *\/",2],["T_WHITESPACE","\n\n",19],["T_COMMENT","#require_once 'Zend\/EventManager\/Event.php';\n",21],["T_COMMENT","#require_once 'Zend\/EventManager\/EventCollection.php';\n",22],["T_COMMENT","#require_once 'Zend\/EventManager\/ResponseCollection.php';\n",23],["T_COMMENT","#require_once 'Zend\/EventManager\/SharedEventCollectionAware.php';\n",24],["T_COMMENT","#require_once 'Zend\/EventManager\/StaticEventManager.php';\n",25],["T_COMMENT","#require_once 'Zend\/Stdlib\/CallbackHandler.php';\n",26],["T_COMMENT","#require_once 'Zend\/Stdlib\/PriorityQueue.php';\n",27],["T_WHITESPACE","\n",28],["T_DOC_COMMENT","\/**\n * Event manager: notification system\n *\n * Use the EventManager when you want to create a per-instance notification\n * system for your objects.\n *\n * @category   Zend\n * @package    Zend_EventManager\n * @copyright  Copyright (c) 2005-2015 Zend Technologies USA Inc. (http:\/\/www.zend.com)\n * @license    http:\/\/framework.zend.com\/license\/new-bsd     New BSD License\n *\/",29],["T_WHITESPACE","\n",39],["T_CLASS","class",40],["T_WHITESPACE"," ",40],["T_STRING","Zend_EventManager_EventManager",40],["T_WHITESPACE"," ",40],["T_IMPLEMENTS","implements",40],["T_WHITESPACE"," ",40],["T_STRING","Zend_EventManager_EventCollection",40],",",["T_WHITESPACE"," ",40],["T_STRING","Zend_EventManager_SharedEventCollectionAware",40],["T_WHITESPACE","\n",40],"{",["T_WHITESPACE","\n    ",41],["T_DOC_COMMENT","\/**\n     * Subscribed events and their listeners\n     * @var array Array of Zend_Stdlib_PriorityQueue objects\n     *\/",42],["T_WHITESPACE","\n    ",45],["T_PROTECTED","protected",46],["T_WHITESPACE"," ",46],["T_VARIABLE","$events",46],["T_WHITESPACE"," ",46],"=",["T_WHITESPACE"," ",46],["T_ARRAY","array",46],"(",")",";",["T_WHITESPACE","\n\n    ",46],["T_DOC_COMMENT","\/**\n     * @var string Class representing the event being emitted\n     *\/",48],["T_WHITESPACE","\n    ",50],["T_PROTECTED","protected",51],["T_WHITESPACE"," ",51],["T_VARIABLE","$eventClass",51],["T_WHITESPACE"," ",51],"=",["T_WHITESPACE"," ",51],["T_CONSTANT_ENCAPSED_STRING","'Zend_EventManager_Event'",51],";",["T_WHITESPACE","\n\n    ",51],["T_DOC_COMMENT","\/**\n     * Identifiers, used to pull static signals from StaticEventManager\n     * @var array\n     *\/",53],["T_WHITESPACE","\n    ",56],["T_PROTECTED","protected",57],["T_WHITESPACE"," ",57],["T_VARIABLE","$identifiers",57],["T_WHITESPACE"," ",57],"=",["T_WHITESPACE"," ",57],["T_ARRAY","array",57],"(",")",";",["T_WHITESPACE","\n\n    ",57],["T_DOC_COMMENT","\/**\n     * Static collections\n     * @var false|null|Zend_EventManager_StaticEventCollection\n     *\/",59],["T_WHITESPACE","\n    ",62],["T_PROTECTED","protected",63],["T_WHITESPACE"," ",63],["T_VARIABLE","$sharedCollections",63],["T_WHITESPACE"," ",63],"=",["T_WHITESPACE"," ",63],["T_STRING","null",63],";",["T_WHITESPACE","\n\n    ",63],["T_DOC_COMMENT","\/**\n     * Constructor\n     *\n     * Allows optionally specifying identifier(s) to use to pull signals from a\n     * StaticEventManager.\n     *\n     * @param  null|string|int|array|Traversable $identifiers\n     * @return void\n     *\/",65],["T_WHITESPACE","\n    ",73],["T_PUBLIC","public",74],["T_WHITESPACE"," ",74],["T_FUNCTION","function",74],["T_WHITESPACE"," ",74],["T_STRING","__construct",74],"(",["T_VARIABLE","$identifiers",74],["T_WHITESPACE"," ",74],"=",["T_WHITESPACE"," ",74],["T_STRING","null",74],")",["T_WHITESPACE","\n    ",74],"{",["T_WHITESPACE","\n        ",75],["T_VARIABLE","$this",76],["T_OBJECT_OPERATOR","->",76],["T_STRING","setIdentifiers",76],"(",["T_VARIABLE","$identifiers",76],")",";",["T_WHITESPACE","\n    ",76],"}",["T_WHITESPACE","\n\n    ",77],["T_DOC_COMMENT","\/**\n     * Set the event class to utilize\n     *\n     * @param  string $class\n     * @return Zend_EventManager_EventManager\n     *\/",79],["T_WHITESPACE","\n    ",84],["T_PUBLIC","public",85],["T_WHITESPACE"," ",85],["T_FUNCTION","function",85],["T_WHITESPACE"," ",85],["T_STRING","setEventClass",85],"(",["T_VARIABLE","$class",85],")",["T_WHITESPACE","\n    ",85],"{",["T_WHITESPACE","\n        ",86],["T_VARIABLE","$this",87],["T_OBJECT_OPERATOR","->",87],["T_STRING","eventClass",87],["T_WHITESPACE"," ",87],"=",["T_WHITESPACE"," ",87],["T_VARIABLE","$class",87],";",["T_WHITESPACE","\n        ",87],["T_RETURN","return",88],["T_WHITESPACE"," ",88],["T_VARIABLE","$this",88],";",["T_WHITESPACE","\n    ",88],"}",["T_WHITESPACE","\n\n    ",89],["T_DOC_COMMENT","\/**\n     * Set static collections container\n     *\n     * @param  Zend_EventManager_SharedEventCollection $collections\n     * @return $this\n     *\/",91],["T_WHITESPACE","\n    ",96],["T_PUBLIC","public",97],["T_WHITESPACE"," ",97],["T_FUNCTION","function",97],["T_WHITESPACE"," ",97],["T_STRING","setSharedCollections",97],"(",["T_STRING","Zend_EventManager_SharedEventCollection",97],["T_WHITESPACE"," ",97],["T_VARIABLE","$collections",97],")",["T_WHITESPACE","\n    ",97],"{",["T_WHITESPACE","\n        ",98],["T_VARIABLE","$this",99],["T_OBJECT_OPERATOR","->",99],["T_STRING","sharedCollections",99],["T_WHITESPACE"," ",99],"=",["T_WHITESPACE"," ",99],["T_VARIABLE","$collections",99],";",["T_WHITESPACE","\n        ",99],["T_RETURN","return",100],["T_WHITESPACE"," ",100],["T_VARIABLE","$this",100],";",["T_WHITESPACE","\n    ",100],"}",["T_WHITESPACE","\n\n    ",101],["T_DOC_COMMENT","\/**\n     * Remove any shared collections\n     *\n     * Sets {@link $sharedCollections} to boolean false to disable ability\n     * to lazy-load static event manager instance.\n     * \n     * @return void\n     *\/",103],["T_WHITESPACE","\n    ",110],["T_PUBLIC","public",111],["T_WHITESPACE"," ",111],["T_FUNCTION","function",111],["T_WHITESPACE"," ",111],["T_STRING","unsetSharedCollections",111],"(",")",["T_WHITESPACE","\n    ",111],"{",["T_WHITESPACE","\n        ",112],["T_VARIABLE","$this",113],["T_OBJECT_OPERATOR","->",113],["T_STRING","sharedCollections",113],["T_WHITESPACE"," ",113],"=",["T_WHITESPACE"," ",113],["T_STRING","false",113],";",["T_WHITESPACE","\n    ",113],"}",["T_WHITESPACE","\n\n    ",114],["T_DOC_COMMENT","\/**\n     * Get static collections container\n     *\n     * @return false|Zend_EventManager_SharedEventCollection\n     *\/",116],["T_WHITESPACE","\n    ",120],["T_PUBLIC","public",121],["T_WHITESPACE"," ",121],["T_FUNCTION","function",121],["T_WHITESPACE"," ",121],["T_STRING","getSharedCollections",121],"(",")",["T_WHITESPACE","\n    ",121],"{",["T_WHITESPACE","\n        ",122],["T_IF","if",123],["T_WHITESPACE"," ",123],"(",["T_STRING","null",123],["T_WHITESPACE"," ",123],["T_IS_IDENTICAL","===",123],["T_WHITESPACE"," ",123],["T_VARIABLE","$this",123],["T_OBJECT_OPERATOR","->",123],["T_STRING","sharedCollections",123],")",["T_WHITESPACE"," ",123],"{",["T_WHITESPACE","\n            ",123],["T_VARIABLE","$this",124],["T_OBJECT_OPERATOR","->",124],["T_STRING","setSharedCollections",124],"(",["T_STRING","Zend_EventManager_StaticEventManager",124],["T_DOUBLE_COLON","::",124],["T_STRING","getInstance",124],"(",")",")",";",["T_WHITESPACE","\n        ",124],"}",["T_WHITESPACE","\n        ",125],["T_RETURN","return",126],["T_WHITESPACE"," ",126],["T_VARIABLE","$this",126],["T_OBJECT_OPERATOR","->",126],["T_STRING","sharedCollections",126],";",["T_WHITESPACE","\n    ",126],"}",["T_WHITESPACE","\n\n    ",127],["T_DOC_COMMENT","\/**\n     * Get the identifier(s) for this Zend_EventManager_EventManager\n     *\n     * @return array\n     *\/",129],["T_WHITESPACE","\n    ",133],["T_PUBLIC","public",134],["T_WHITESPACE"," ",134],["T_FUNCTION","function",134],["T_WHITESPACE"," ",134],["T_STRING","getIdentifiers",134],"(",")",["T_WHITESPACE","\n    ",134],"{",["T_WHITESPACE","\n        ",135],["T_RETURN","return",136],["T_WHITESPACE"," ",136],["T_VARIABLE","$this",136],["T_OBJECT_OPERATOR","->",136],["T_STRING","identifiers",136],";",["T_WHITESPACE","\n    ",136],"}",["T_WHITESPACE","\n\n    ",137],["T_DOC_COMMENT","\/**\n     * Set the identifiers (overrides any currently set identifiers)\n     *\n     * @param string|int|array|Traversable $identifiers\n     * @return Zend_EventManager_EventManager\n     *\/",139],["T_WHITESPACE","\n    ",144],["T_PUBLIC","public",145],["T_WHITESPACE"," ",145],["T_FUNCTION","function",145],["T_WHITESPACE"," ",145],["T_STRING","setIdentifiers",145],"(",["T_VARIABLE","$identifiers",145],")",["T_WHITESPACE","\n    ",145],"{",["T_WHITESPACE","\n        ",146],["T_IF","if",147],["T_WHITESPACE"," ",147],"(",["T_STRING","is_array",147],"(",["T_VARIABLE","$identifiers",147],")",["T_WHITESPACE"," ",147],["T_BOOLEAN_OR","||",147],["T_WHITESPACE"," ",147],["T_VARIABLE","$identifiers",147],["T_WHITESPACE"," ",147],["T_INSTANCEOF","instanceof",147],["T_WHITESPACE"," ",147],["T_STRING","Traversable",147],")",["T_WHITESPACE"," ",147],"{",["T_WHITESPACE","\n            ",147],["T_VARIABLE","$this",148],["T_OBJECT_OPERATOR","->",148],["T_STRING","identifiers",148],["T_WHITESPACE"," ",148],"=",["T_WHITESPACE"," ",148],["T_STRING","array_unique",148],"(",["T_ARRAY_CAST","(array)",148],["T_WHITESPACE"," ",148],["T_VARIABLE","$identifiers",148],")",";",["T_WHITESPACE","\n        ",148],"}",["T_WHITESPACE"," ",149],["T_ELSEIF","elseif",149],["T_WHITESPACE"," ",149],"(",["T_VARIABLE","$identifiers",149],["T_WHITESPACE"," ",149],["T_IS_NOT_IDENTICAL","!==",149],["T_WHITESPACE"," ",149],["T_STRING","null",149],")",["T_WHITESPACE"," ",149],"{",["T_WHITESPACE","\n            ",149],["T_VARIABLE","$this",150],["T_OBJECT_OPERATOR","->",150],["T_STRING","identifiers",150],["T_WHITESPACE"," ",150],"=",["T_WHITESPACE"," ",150],["T_ARRAY","array",150],"(",["T_VARIABLE","$identifiers",150],")",";",["T_WHITESPACE","\n        ",150],"}",["T_WHITESPACE","\n        ",151],["T_RETURN","return",152],["T_WHITESPACE"," ",152],["T_VARIABLE","$this",152],";",["T_WHITESPACE","\n    ",152],"}",["T_WHITESPACE","\n\n    ",153],["T_DOC_COMMENT","\/**\n     * Add some identifier(s) (appends to any currently set identifiers)\n     *\n     * @param string|int|array|Traversable $identifiers\n     * @return Zend_EventManager_EventManager\n     *\/",155],["T_WHITESPACE","\n    ",160],["T_PUBLIC","public",161],["T_WHITESPACE"," ",161],["T_FUNCTION","function",161],["T_WHITESPACE"," ",161],["T_STRING","addIdentifiers",161],"(",["T_VARIABLE","$identifiers",161],")",["T_WHITESPACE","\n    ",161],"{",["T_WHITESPACE","\n        ",162],["T_IF","if",163],["T_WHITESPACE"," ",163],"(",["T_STRING","is_array",163],"(",["T_VARIABLE","$identifiers",163],")",["T_WHITESPACE"," ",163],["T_BOOLEAN_OR","||",163],["T_WHITESPACE"," ",163],["T_VARIABLE","$identifiers",163],["T_WHITESPACE"," ",163],["T_INSTANCEOF","instanceof",163],["T_WHITESPACE"," ",163],["T_STRING","Traversable",163],")",["T_WHITESPACE"," ",163],"{",["T_WHITESPACE","\n            ",163],["T_VARIABLE","$this",164],["T_OBJECT_OPERATOR","->",164],["T_STRING","identifiers",164],["T_WHITESPACE"," ",164],"=",["T_WHITESPACE"," ",164],["T_STRING","array_unique",164],"(",["T_VARIABLE","$this",164],["T_OBJECT_OPERATOR","->",164],["T_STRING","identifiers",164],["T_WHITESPACE"," ",164],"+",["T_WHITESPACE"," ",164],["T_ARRAY_CAST","(array)",164],["T_WHITESPACE"," ",164],["T_VARIABLE","$identifiers",164],")",";",["T_WHITESPACE","\n        ",164],"}",["T_WHITESPACE"," ",165],["T_ELSEIF","elseif",165],["T_WHITESPACE"," ",165],"(",["T_VARIABLE","$identifiers",165],["T_WHITESPACE"," ",165],["T_IS_NOT_IDENTICAL","!==",165],["T_WHITESPACE"," ",165],["T_STRING","null",165],")",["T_WHITESPACE"," ",165],"{",["T_WHITESPACE","\n            ",165],["T_VARIABLE","$this",166],["T_OBJECT_OPERATOR","->",166],["T_STRING","identifiers",166],["T_WHITESPACE"," ",166],"=",["T_WHITESPACE"," ",166],["T_STRING","array_unique",166],"(",["T_STRING","array_merge",166],"(",["T_VARIABLE","$this",166],["T_OBJECT_OPERATOR","->",166],["T_STRING","identifiers",166],",",["T_WHITESPACE"," ",166],["T_ARRAY","array",166],"(",["T_VARIABLE","$identifiers",166],")",")",")",";",["T_WHITESPACE","\n        ",166],"}",["T_WHITESPACE","\n        ",167],["T_RETURN","return",168],["T_WHITESPACE"," ",168],["T_VARIABLE","$this",168],";",["T_WHITESPACE","\n    ",168],"}",["T_WHITESPACE","\n\n    ",169],["T_DOC_COMMENT","\/**\n     * Trigger all listeners for a given event\n     *\n     * Can emulate triggerUntil() if the last argument provided is a callback.\n     *\n     * @param  string $event\n     * @param  string|object $target Object calling emit, or symbol describing target (such as static method name)\n     * @param  array|ArrayAccess $argv Array of arguments; typically, should be associative\n     * @param  null|callback $callback\n     * @return Zend_EventManager_ResponseCollection All listener return values\n     *\/",171],["T_WHITESPACE","\n    ",181],["T_PUBLIC","public",182],["T_WHITESPACE"," ",182],["T_FUNCTION","function",182],["T_WHITESPACE"," ",182],["T_STRING","trigger",182],"(",["T_VARIABLE","$event",182],",",["T_WHITESPACE"," ",182],["T_VARIABLE","$target",182],["T_WHITESPACE"," ",182],"=",["T_WHITESPACE"," ",182],["T_STRING","null",182],",",["T_WHITESPACE"," ",182],["T_VARIABLE","$argv",182],["T_WHITESPACE"," ",182],"=",["T_WHITESPACE"," ",182],["T_ARRAY","array",182],"(",")",",",["T_WHITESPACE"," ",182],["T_VARIABLE","$callback",182],["T_WHITESPACE"," ",182],"=",["T_WHITESPACE"," ",182],["T_STRING","null",182],")",["T_WHITESPACE","\n    ",182],"{",["T_WHITESPACE","\n        ",183],["T_IF","if",184],["T_WHITESPACE"," ",184],"(",["T_VARIABLE","$event",184],["T_WHITESPACE"," ",184],["T_INSTANCEOF","instanceof",184],["T_WHITESPACE"," ",184],["T_STRING","Zend_EventManager_EventDescription",184],")",["T_WHITESPACE"," ",184],"{",["T_WHITESPACE","\n            ",184],["T_VARIABLE","$e",185],["T_WHITESPACE","        ",185],"=",["T_WHITESPACE"," ",185],["T_VARIABLE","$event",185],";",["T_WHITESPACE","\n            ",185],["T_VARIABLE","$event",186],["T_WHITESPACE","    ",186],"=",["T_WHITESPACE"," ",186],["T_VARIABLE","$e",186],["T_OBJECT_OPERATOR","->",186],["T_STRING","getName",186],"(",")",";",["T_WHITESPACE","\n            ",186],["T_VARIABLE","$callback",187],["T_WHITESPACE"," ",187],"=",["T_WHITESPACE"," ",187],["T_VARIABLE","$target",187],";",["T_WHITESPACE","\n        ",187],"}",["T_WHITESPACE"," ",188],["T_ELSEIF","elseif",188],["T_WHITESPACE"," ",188],"(",["T_VARIABLE","$target",188],["T_WHITESPACE"," ",188],["T_INSTANCEOF","instanceof",188],["T_WHITESPACE"," ",188],["T_STRING","Zend_EventManager_EventDescription",188],")",["T_WHITESPACE"," ",188],"{",["T_WHITESPACE","\n            ",188],["T_VARIABLE","$e",189],["T_WHITESPACE"," ",189],"=",["T_WHITESPACE"," ",189],["T_VARIABLE","$target",189],";",["T_WHITESPACE","\n            ",189],["T_VARIABLE","$e",190],["T_OBJECT_OPERATOR","->",190],["T_STRING","setName",190],"(",["T_VARIABLE","$event",190],")",";",["T_WHITESPACE","\n            ",190],["T_VARIABLE","$callback",191],["T_WHITESPACE"," ",191],"=",["T_WHITESPACE"," ",191],["T_VARIABLE","$argv",191],";",["T_WHITESPACE","\n        ",191],"}",["T_WHITESPACE"," ",192],["T_ELSEIF","elseif",192],["T_WHITESPACE"," ",192],"(",["T_VARIABLE","$argv",192],["T_WHITESPACE"," ",192],["T_INSTANCEOF","instanceof",192],["T_WHITESPACE"," ",192],["T_STRING","Zend_EventManager_EventDescription",192],")",["T_WHITESPACE"," ",192],"{",["T_WHITESPACE","\n            ",192],["T_VARIABLE","$e",193],["T_WHITESPACE"," ",193],"=",["T_WHITESPACE"," ",193],["T_VARIABLE","$argv",193],";",["T_WHITESPACE","\n            ",193],["T_VARIABLE","$e",194],["T_OBJECT_OPERATOR","->",194],["T_STRING","setName",194],"(",["T_VARIABLE","$event",194],")",";",["T_WHITESPACE","\n            ",194],["T_VARIABLE","$e",195],["T_OBJECT_OPERATOR","->",195],["T_STRING","setTarget",195],"(",["T_VARIABLE","$target",195],")",";",["T_WHITESPACE","\n        ",195],"}",["T_WHITESPACE"," ",196],["T_ELSE","else",196],["T_WHITESPACE"," ",196],"{",["T_WHITESPACE","\n            ",196],["T_VARIABLE","$e",197],["T_WHITESPACE"," ",197],"=",["T_WHITESPACE"," ",197],["T_NEW","new",197],["T_WHITESPACE"," ",197],["T_VARIABLE","$this",197],["T_OBJECT_OPERATOR","->",197],["T_STRING","eventClass",197],"(",")",";",["T_WHITESPACE","\n            ",197],["T_VARIABLE","$e",198],["T_OBJECT_OPERATOR","->",198],["T_STRING","setName",198],"(",["T_VARIABLE","$event",198],")",";",["T_WHITESPACE","\n            ",198],["T_VARIABLE","$e",199],["T_OBJECT_OPERATOR","->",199],["T_STRING","setTarget",199],"(",["T_VARIABLE","$target",199],")",";",["T_WHITESPACE","\n            ",199],["T_VARIABLE","$e",200],["T_OBJECT_OPERATOR","->",200],["T_STRING","setParams",200],"(",["T_VARIABLE","$argv",200],")",";",["T_WHITESPACE","\n        ",200],"}",["T_WHITESPACE","\n\n        ",201],["T_IF","if",203],["T_WHITESPACE"," ",203],"(",["T_VARIABLE","$callback",203],["T_WHITESPACE"," ",203],["T_BOOLEAN_AND","&&",203],["T_WHITESPACE"," ",203],"!",["T_STRING","is_callable",203],"(",["T_VARIABLE","$callback",203],")",")",["T_WHITESPACE"," ",203],"{",["T_WHITESPACE","\n            ",203],["T_COMMENT","#require_once 'Zend\/Stdlib\/Exception\/InvalidCallbackException.php';\n",204],["T_WHITESPACE","            ",205],["T_THROW","throw",205],["T_WHITESPACE"," ",205],["T_NEW","new",205],["T_WHITESPACE"," ",205],["T_STRING","Zend_Stdlib_Exception_InvalidCallbackException",205],"(",["T_CONSTANT_ENCAPSED_STRING","'Invalid callback provided'",205],")",";",["T_WHITESPACE","\n        ",205],"}",["T_WHITESPACE","\n\n        ",206],["T_RETURN","return",208],["T_WHITESPACE"," ",208],["T_VARIABLE","$this",208],["T_OBJECT_OPERATOR","->",208],["T_STRING","triggerListeners",208],"(",["T_VARIABLE","$event",208],",",["T_WHITESPACE"," ",208],["T_VARIABLE","$e",208],",",["T_WHITESPACE"," ",208],["T_VARIABLE","$callback",208],")",";",["T_WHITESPACE","\n    ",208],"}",["T_WHITESPACE","\n\n    ",209],["T_DOC_COMMENT","\/**\n     * Trigger listeners until return value of one causes a callback to\n     * evaluate to true\n     *\n     * Triggers listeners until the provided callback evaluates the return\n     * value of one as true, or until all listeners have been executed.\n     *\n     * @param  string $event\n     * @param  string|object $target Object calling emit, or symbol describing target (such as static method name)\n     * @param  array|ArrayAccess $argv Array of arguments; typically, should be associative\n     * @param  Callable $callback\n     * @throws Zend_Stdlib_Exception_InvalidCallbackException if invalid callback provided\n     *\/",211],["T_WHITESPACE","\n    ",223],["T_PUBLIC","public",224],["T_WHITESPACE"," ",224],["T_FUNCTION","function",224],["T_WHITESPACE"," ",224],["T_STRING","triggerUntil",224],"(",["T_VARIABLE","$event",224],",",["T_WHITESPACE"," ",224],["T_VARIABLE","$target",224],",",["T_WHITESPACE"," ",224],["T_VARIABLE","$argv",224],["T_WHITESPACE"," ",224],"=",["T_WHITESPACE"," ",224],["T_STRING","null",224],",",["T_WHITESPACE"," ",224],["T_VARIABLE","$callback",224],["T_WHITESPACE"," ",224],"=",["T_WHITESPACE"," ",224],["T_STRING","null",224],")",["T_WHITESPACE","\n    ",224],"{",["T_WHITESPACE","\n        ",225],["T_IF","if",226],["T_WHITESPACE"," ",226],"(",["T_VARIABLE","$event",226],["T_WHITESPACE"," ",226],["T_INSTANCEOF","instanceof",226],["T_WHITESPACE"," ",226],["T_STRING","Zend_EventManager_EventDescription",226],")",["T_WHITESPACE"," ",226],"{",["T_WHITESPACE","\n            ",226],["T_VARIABLE","$e",227],["T_WHITESPACE","        ",227],"=",["T_WHITESPACE"," ",227],["T_VARIABLE","$event",227],";",["T_WHITESPACE","\n            ",227],["T_VARIABLE","$event",228],["T_WHITESPACE","    ",228],"=",["T_WHITESPACE"," ",228],["T_VARIABLE","$e",228],["T_OBJECT_OPERATOR","->",228],["T_STRING","getName",228],"(",")",";",["T_WHITESPACE","\n            ",228],["T_VARIABLE","$callback",229],["T_WHITESPACE"," ",229],"=",["T_WHITESPACE"," ",229],["T_VARIABLE","$target",229],";",["T_WHITESPACE","\n        ",229],"}",["T_WHITESPACE"," ",230],["T_ELSEIF","elseif",230],["T_WHITESPACE"," ",230],"(",["T_VARIABLE","$target",230],["T_WHITESPACE"," ",230],["T_INSTANCEOF","instanceof",230],["T_WHITESPACE"," ",230],["T_STRING","Zend_EventManager_EventDescription",230],")",["T_WHITESPACE"," ",230],"{",["T_WHITESPACE","\n            ",230],["T_VARIABLE","$e",231],["T_WHITESPACE"," ",231],"=",["T_WHITESPACE"," ",231],["T_VARIABLE","$target",231],";",["T_WHITESPACE","\n            ",231],["T_VARIABLE","$e",232],["T_OBJECT_OPERATOR","->",232],["T_STRING","setName",232],"(",["T_VARIABLE","$event",232],")",";",["T_WHITESPACE","\n            ",232],["T_VARIABLE","$callback",233],["T_WHITESPACE"," ",233],"=",["T_WHITESPACE"," ",233],["T_VARIABLE","$argv",233],";",["T_WHITESPACE","\n        ",233],"}",["T_WHITESPACE"," ",234],["T_ELSEIF","elseif",234],["T_WHITESPACE"," ",234],"(",["T_VARIABLE","$argv",234],["T_WHITESPACE"," ",234],["T_INSTANCEOF","instanceof",234],["T_WHITESPACE"," ",234],["T_STRING","Zend_EventManager_EventDescription",234],")",["T_WHITESPACE"," ",234],"{",["T_WHITESPACE","\n            ",234],["T_VARIABLE","$e",235],["T_WHITESPACE"," ",235],"=",["T_WHITESPACE"," ",235],["T_VARIABLE","$argv",235],";",["T_WHITESPACE","\n            ",235],["T_VARIABLE","$e",236],["T_OBJECT_OPERATOR","->",236],["T_STRING","setName",236],"(",["T_VARIABLE","$event",236],")",";",["T_WHITESPACE","\n            ",236],["T_VARIABLE","$e",237],["T_OBJECT_OPERATOR","->",237],["T_STRING","setTarget",237],"(",["T_VARIABLE","$target",237],")",";",["T_WHITESPACE","\n        ",237],"}",["T_WHITESPACE"," ",238],["T_ELSE","else",238],["T_WHITESPACE"," ",238],"{",["T_WHITESPACE","\n            ",238],["T_VARIABLE","$e",239],["T_WHITESPACE"," ",239],"=",["T_WHITESPACE"," ",239],["T_NEW","new",239],["T_WHITESPACE"," ",239],["T_VARIABLE","$this",239],["T_OBJECT_OPERATOR","->",239],["T_STRING","eventClass",239],"(",")",";",["T_WHITESPACE","\n            ",239],["T_VARIABLE","$e",240],["T_OBJECT_OPERATOR","->",240],["T_STRING","setName",240],"(",["T_VARIABLE","$event",240],")",";",["T_WHITESPACE","\n            ",240],["T_VARIABLE","$e",241],["T_OBJECT_OPERATOR","->",241],["T_STRING","setTarget",241],"(",["T_VARIABLE","$target",241],")",";",["T_WHITESPACE","\n            ",241],["T_VARIABLE","$e",242],["T_OBJECT_OPERATOR","->",242],["T_STRING","setParams",242],"(",["T_VARIABLE","$argv",242],")",";",["T_WHITESPACE","\n        ",242],"}",["T_WHITESPACE","\n\n        ",243],["T_IF","if",245],["T_WHITESPACE"," ",245],"(","!",["T_STRING","is_callable",245],"(",["T_VARIABLE","$callback",245],")",")",["T_WHITESPACE"," ",245],"{",["T_WHITESPACE","\n            ",245],["T_COMMENT","#require_once 'Zend\/Stdlib\/Exception\/InvalidCallbackException.php';\n",246],["T_WHITESPACE","            ",247],["T_THROW","throw",247],["T_WHITESPACE"," ",247],["T_NEW","new",247],["T_WHITESPACE"," ",247],["T_STRING","Zend_Stdlib_Exception_InvalidCallbackException",247],"(",["T_CONSTANT_ENCAPSED_STRING","'Invalid callback provided'",247],")",";",["T_WHITESPACE","\n        ",247],"}",["T_WHITESPACE","\n\n        ",248],["T_RETURN","return",250],["T_WHITESPACE"," ",250],["T_VARIABLE","$this",250],["T_OBJECT_OPERATOR","->",250],["T_STRING","triggerListeners",250],"(",["T_VARIABLE","$event",250],",",["T_WHITESPACE"," ",250],["T_VARIABLE","$e",250],",",["T_WHITESPACE"," ",250],["T_VARIABLE","$callback",250],")",";",["T_WHITESPACE","\n    ",250],"}",["T_WHITESPACE","\n\n    ",251],["T_DOC_COMMENT","\/**\n     * Attach a listener to an event\n     *\n     * The first argument is the event, and the next argument describes a\n     * callback that will respond to that event. A CallbackHandler instance\n     * describing the event listener combination will be returned.\n     *\n     * The last argument indicates a priority at which the event should be\n     * executed. By default, this value is 1; however, you may set it for any\n     * integer value. Higher values have higher priority (i.e., execute first).\n     *\n     * You can specify \"*\" for the event name. In such cases, the listener will \n     * be triggered for every event.\n     *\n     * @param  string|array|Zend_EventManager_ListenerAggregate $event An event or array of event names. If a ListenerAggregate, proxies to {@link attachAggregate()}.\n     * @param  callback|int $callback If string $event provided, expects PHP callback; for a ListenerAggregate $event, this will be the priority\n     * @param  int $priority If provided, the priority at which to register the callback\n     * @return Zend_Stdlib_CallbackHandler|mixed CallbackHandler if attaching callback (to allow later unsubscribe); mixed if attaching aggregate\n     *\/",253],["T_WHITESPACE","\n    ",271],["T_PUBLIC","public",272],["T_WHITESPACE"," ",272],["T_FUNCTION","function",272],["T_WHITESPACE"," ",272],["T_STRING","attach",272],"(",["T_VARIABLE","$event",272],",",["T_WHITESPACE"," ",272],["T_VARIABLE","$callback",272],["T_WHITESPACE"," ",272],"=",["T_WHITESPACE"," ",272],["T_STRING","null",272],",",["T_WHITESPACE"," ",272],["T_VARIABLE","$priority",272],["T_WHITESPACE"," ",272],"=",["T_WHITESPACE"," ",272],["T_LNUMBER","1",272],")",["T_WHITESPACE","\n    ",272],"{",["T_WHITESPACE","\n        ",273],["T_COMMENT","\/\/ Proxy ListenerAggregate arguments to attachAggregate()\n",274],["T_WHITESPACE","        ",275],["T_IF","if",275],["T_WHITESPACE"," ",275],"(",["T_VARIABLE","$event",275],["T_WHITESPACE"," ",275],["T_INSTANCEOF","instanceof",275],["T_WHITESPACE"," ",275],["T_STRING","Zend_EventManager_ListenerAggregate",275],")",["T_WHITESPACE"," ",275],"{",["T_WHITESPACE","\n            ",275],["T_RETURN","return",276],["T_WHITESPACE"," ",276],["T_VARIABLE","$this",276],["T_OBJECT_OPERATOR","->",276],["T_STRING","attachAggregate",276],"(",["T_VARIABLE","$event",276],",",["T_WHITESPACE"," ",276],["T_VARIABLE","$callback",276],")",";",["T_WHITESPACE","\n        ",276],"}",["T_WHITESPACE","\n\n        ",277],["T_COMMENT","\/\/ Null callback is invalid\n",279],["T_WHITESPACE","        ",280],["T_IF","if",280],["T_WHITESPACE"," ",280],"(",["T_STRING","null",280],["T_WHITESPACE"," ",280],["T_IS_IDENTICAL","===",280],["T_WHITESPACE"," ",280],["T_VARIABLE","$callback",280],")",["T_WHITESPACE"," ",280],"{",["T_WHITESPACE","\n            ",280],["T_COMMENT","#require_once 'Zend\/EventManager\/Exception\/InvalidArgumentException.php';\n",281],["T_WHITESPACE","            ",282],["T_THROW","throw",282],["T_WHITESPACE"," ",282],["T_NEW","new",282],["T_WHITESPACE"," ",282],["T_STRING","Zend_EventManager_Exception_InvalidArgumentException",282],"(",["T_STRING","sprintf",282],"(",["T_WHITESPACE","\n                ",282],["T_CONSTANT_ENCAPSED_STRING","'%s: expects a callback; none provided'",283],",",["T_WHITESPACE","\n                ",283],["T_METHOD_C","__METHOD__",284],["T_WHITESPACE","\n            ",284],")",")",";",["T_WHITESPACE","\n        ",285],"}",["T_WHITESPACE","\n\n        ",286],["T_COMMENT","\/\/ Array of events should be registered individually, and return an array of all listeners\n",288],["T_WHITESPACE","        ",289],["T_IF","if",289],["T_WHITESPACE"," ",289],"(",["T_STRING","is_array",289],"(",["T_VARIABLE","$event",289],")",")",["T_WHITESPACE"," ",289],"{",["T_WHITESPACE","\n            ",289],["T_VARIABLE","$listeners",290],["T_WHITESPACE"," ",290],"=",["T_WHITESPACE"," ",290],["T_ARRAY","array",290],"(",")",";",["T_WHITESPACE","\n            ",290],["T_FOREACH","foreach",291],["T_WHITESPACE"," ",291],"(",["T_VARIABLE","$event",291],["T_WHITESPACE"," ",291],["T_AS","as",291],["T_WHITESPACE"," ",291],["T_VARIABLE","$name",291],")",["T_WHITESPACE"," ",291],"{",["T_WHITESPACE","\n                ",291],["T_VARIABLE","$listeners",292],"[","]",["T_WHITESPACE"," ",292],"=",["T_WHITESPACE"," ",292],["T_VARIABLE","$this",292],["T_OBJECT_OPERATOR","->",292],["T_STRING","attach",292],"(",["T_VARIABLE","$name",292],",",["T_WHITESPACE"," ",292],["T_VARIABLE","$callback",292],",",["T_WHITESPACE"," ",292],["T_VARIABLE","$priority",292],")",";",["T_WHITESPACE","\n            ",292],"}",["T_WHITESPACE","\n            ",293],["T_RETURN","return",294],["T_WHITESPACE"," ",294],["T_VARIABLE","$listeners",294],";",["T_WHITESPACE","\n        ",294],"}",["T_WHITESPACE","\n\n        ",295],["T_COMMENT","\/\/ If we don't have a priority queue for the event yet, create one\n",297],["T_WHITESPACE","        ",298],["T_IF","if",298],["T_WHITESPACE"," ",298],"(",["T_EMPTY","empty",298],"(",["T_VARIABLE","$this",298],["T_OBJECT_OPERATOR","->",298],["T_STRING","events",298],"[",["T_VARIABLE","$event",298],"]",")",")",["T_WHITESPACE"," ",298],"{",["T_WHITESPACE","\n            ",298],["T_VARIABLE","$this",299],["T_OBJECT_OPERATOR","->",299],["T_STRING","events",299],"[",["T_VARIABLE","$event",299],"]",["T_WHITESPACE"," ",299],"=",["T_WHITESPACE"," ",299],["T_NEW","new",299],["T_WHITESPACE"," ",299],["T_STRING","Zend_Stdlib_PriorityQueue",299],"(",")",";",["T_WHITESPACE","\n        ",299],"}",["T_WHITESPACE","\n\n        ",300],["T_COMMENT","\/\/ Create a callback handler, setting the event and priority in its metadata\n",302],["T_WHITESPACE","        ",303],["T_VARIABLE","$listener",303],["T_WHITESPACE"," ",303],"=",["T_WHITESPACE"," ",303],["T_NEW","new",303],["T_WHITESPACE"," ",303],["T_STRING","Zend_Stdlib_CallbackHandler",303],"(",["T_VARIABLE","$callback",303],",",["T_WHITESPACE"," ",303],["T_ARRAY","array",303],"(",["T_CONSTANT_ENCAPSED_STRING","'event'",303],["T_WHITESPACE"," ",303],["T_DOUBLE_ARROW","=>",303],["T_WHITESPACE"," ",303],["T_VARIABLE","$event",303],",",["T_WHITESPACE"," ",303],["T_CONSTANT_ENCAPSED_STRING","'priority'",303],["T_WHITESPACE"," ",303],["T_DOUBLE_ARROW","=>",303],["T_WHITESPACE"," ",303],["T_VARIABLE","$priority",303],")",")",";",["T_WHITESPACE","\n\n        ",303],["T_COMMENT","\/\/ Inject the callback handler into the queue\n",305],["T_WHITESPACE","        ",306],["T_VARIABLE","$this",306],["T_OBJECT_OPERATOR","->",306],["T_STRING","events",306],"[",["T_VARIABLE","$event",306],"]",["T_OBJECT_OPERATOR","->",306],["T_STRING","insert",306],"(",["T_VARIABLE","$listener",306],",",["T_WHITESPACE"," ",306],["T_VARIABLE","$priority",306],")",";",["T_WHITESPACE","\n        ",306],["T_RETURN","return",307],["T_WHITESPACE"," ",307],["T_VARIABLE","$listener",307],";",["T_WHITESPACE","\n    ",307],"}",["T_WHITESPACE","\n\n    ",308],["T_DOC_COMMENT","\/**\n     * Attach a listener aggregate\n     *\n     * Listener aggregates accept an EventCollection instance, and call attach()\n     * one or more times, typically to attach to multiple events using local\n     * methods.\n     *\n     * @param  Zend_EventManager_ListenerAggregate $aggregate\n     * @param  int $priority If provided, a suggested priority for the aggregate to use\n     * @return mixed return value of {@link Zend_EventManager_ListenerAggregate::attach()}\n     *\/",310],["T_WHITESPACE","\n    ",320],["T_PUBLIC","public",321],["T_WHITESPACE"," ",321],["T_FUNCTION","function",321],["T_WHITESPACE"," ",321],["T_STRING","attachAggregate",321],"(",["T_STRING","Zend_EventManager_ListenerAggregate",321],["T_WHITESPACE"," ",321],["T_VARIABLE","$aggregate",321],",",["T_WHITESPACE"," ",321],["T_VARIABLE","$priority",321],["T_WHITESPACE"," ",321],"=",["T_WHITESPACE"," ",321],["T_LNUMBER","1",321],")",["T_WHITESPACE","\n    ",321],"{",["T_WHITESPACE","\n        ",322],["T_RETURN","return",323],["T_WHITESPACE"," ",323],["T_VARIABLE","$aggregate",323],["T_OBJECT_OPERATOR","->",323],["T_STRING","attach",323],"(",["T_VARIABLE","$this",323],",",["T_WHITESPACE"," ",323],["T_VARIABLE","$priority",323],")",";",["T_WHITESPACE","\n    ",323],"}",["T_WHITESPACE","\n\n    ",324],["T_DOC_COMMENT","\/**\n     * Unsubscribe a listener from an event\n     *\n     * @param  Zend_Stdlib_CallbackHandler|Zend_EventManager_ListenerAggregate $listener\n     * @return bool Returns true if event and listener found, and unsubscribed; returns false if either event or listener not found\n     * @throws Zend_EventManager_Exception_InvalidArgumentException if invalid listener provided\n     *\/",326],["T_WHITESPACE","\n    ",332],["T_PUBLIC","public",333],["T_WHITESPACE"," ",333],["T_FUNCTION","function",333],["T_WHITESPACE"," ",333],["T_STRING","detach",333],"(",["T_VARIABLE","$listener",333],")",["T_WHITESPACE","\n    ",333],"{",["T_WHITESPACE","\n        ",334],["T_IF","if",335],["T_WHITESPACE"," ",335],"(",["T_VARIABLE","$listener",335],["T_WHITESPACE"," ",335],["T_INSTANCEOF","instanceof",335],["T_WHITESPACE"," ",335],["T_STRING","Zend_EventManager_ListenerAggregate",335],")",["T_WHITESPACE"," ",335],"{",["T_WHITESPACE","\n            ",335],["T_RETURN","return",336],["T_WHITESPACE"," ",336],["T_VARIABLE","$this",336],["T_OBJECT_OPERATOR","->",336],["T_STRING","detachAggregate",336],"(",["T_VARIABLE","$listener",336],")",";",["T_WHITESPACE","\n        ",336],"}",["T_WHITESPACE","\n\n        ",337],["T_IF","if",339],["T_WHITESPACE"," ",339],"(","!",["T_VARIABLE","$listener",339],["T_WHITESPACE"," ",339],["T_INSTANCEOF","instanceof",339],["T_WHITESPACE"," ",339],["T_STRING","Zend_Stdlib_CallbackHandler",339],")",["T_WHITESPACE"," ",339],"{",["T_WHITESPACE","\n            ",339],["T_COMMENT","#require_once 'Zend\/EventManager\/Exception\/InvalidArgumentException.php';\n",340],["T_WHITESPACE","            ",341],["T_THROW","throw",341],["T_WHITESPACE"," ",341],["T_NEW","new",341],["T_WHITESPACE"," ",341],["T_STRING","Zend_EventManager_Exception_InvalidArgumentException",341],"(",["T_STRING","sprintf",341],"(",["T_WHITESPACE","\n                ",341],["T_CONSTANT_ENCAPSED_STRING","'%s: expected a Zend_EventManager_ListenerAggregate or Zend_Stdlib_CallbackHandler; received \"%s\"'",342],",",["T_WHITESPACE","\n                ",342],["T_METHOD_C","__METHOD__",343],",",["T_WHITESPACE","\n                ",343],"(",["T_STRING","is_object",344],"(",["T_VARIABLE","$listener",344],")",["T_WHITESPACE"," ",344],"?",["T_WHITESPACE"," ",344],["T_STRING","get_class",344],"(",["T_VARIABLE","$listener",344],")",["T_WHITESPACE"," ",344],":",["T_WHITESPACE"," ",344],["T_STRING","gettype",344],"(",["T_VARIABLE","$listener",344],")",")",["T_WHITESPACE","\n            ",344],")",")",";",["T_WHITESPACE","\n        ",345],"}",["T_WHITESPACE","\n\n        ",346],["T_VARIABLE","$event",348],["T_WHITESPACE"," ",348],"=",["T_WHITESPACE"," ",348],["T_VARIABLE","$listener",348],["T_OBJECT_OPERATOR","->",348],["T_STRING","getMetadatum",348],"(",["T_CONSTANT_ENCAPSED_STRING","'event'",348],")",";",["T_WHITESPACE","\n        ",348],["T_IF","if",349],["T_WHITESPACE"," ",349],"(","!",["T_VARIABLE","$event",349],["T_WHITESPACE"," ",349],["T_BOOLEAN_OR","||",349],["T_WHITESPACE"," ",349],["T_EMPTY","empty",349],"(",["T_VARIABLE","$this",349],["T_OBJECT_OPERATOR","->",349],["T_STRING","events",349],"[",["T_VARIABLE","$event",349],"]",")",")",["T_WHITESPACE"," ",349],"{",["T_WHITESPACE","\n            ",349],["T_RETURN","return",350],["T_WHITESPACE"," ",350],["T_STRING","false",350],";",["T_WHITESPACE","\n        ",350],"}",["T_WHITESPACE","\n        ",351],["T_VARIABLE","$return",352],["T_WHITESPACE"," ",352],"=",["T_WHITESPACE"," ",352],["T_VARIABLE","$this",352],["T_OBJECT_OPERATOR","->",352],["T_STRING","events",352],"[",["T_VARIABLE","$event",352],"]",["T_OBJECT_OPERATOR","->",352],["T_STRING","remove",352],"(",["T_VARIABLE","$listener",352],")",";",["T_WHITESPACE","\n        ",352],["T_IF","if",353],["T_WHITESPACE"," ",353],"(","!",["T_VARIABLE","$return",353],")",["T_WHITESPACE"," ",353],"{",["T_WHITESPACE","\n            ",353],["T_RETURN","return",354],["T_WHITESPACE"," ",354],["T_STRING","false",354],";",["T_WHITESPACE","\n        ",354],"}",["T_WHITESPACE","\n        ",355],["T_IF","if",356],["T_WHITESPACE"," ",356],"(","!",["T_STRING","count",356],"(",["T_VARIABLE","$this",356],["T_OBJECT_OPERATOR","->",356],["T_STRING","events",356],"[",["T_VARIABLE","$event",356],"]",")",")",["T_WHITESPACE"," ",356],"{",["T_WHITESPACE","\n            ",356],["T_UNSET","unset",357],"(",["T_VARIABLE","$this",357],["T_OBJECT_OPERATOR","->",357],["T_STRING","events",357],"[",["T_VARIABLE","$event",357],"]",")",";",["T_WHITESPACE","\n        ",357],"}",["T_WHITESPACE","\n        ",358],["T_RETURN","return",359],["T_WHITESPACE"," ",359],["T_STRING","true",359],";",["T_WHITESPACE","\n    ",359],"}",["T_WHITESPACE","\n\n    ",360],["T_DOC_COMMENT","\/**\n     * Detach a listener aggregate\n     *\n     * Listener aggregates accept an EventCollection instance, and call detach()\n     * of all previously attached listeners.\n     *\n     * @param  Zend_EventManager_ListenerAggregate $aggregate\n     * @return mixed return value of {@link Zend_EventManager_ListenerAggregate::detach()}\n     *\/",362],["T_WHITESPACE","\n    ",370],["T_PUBLIC","public",371],["T_WHITESPACE"," ",371],["T_FUNCTION","function",371],["T_WHITESPACE"," ",371],["T_STRING","detachAggregate",371],"(",["T_STRING","Zend_EventManager_ListenerAggregate",371],["T_WHITESPACE"," ",371],["T_VARIABLE","$aggregate",371],")",["T_WHITESPACE","\n    ",371],"{",["T_WHITESPACE","\n        ",372],["T_RETURN","return",373],["T_WHITESPACE"," ",373],["T_VARIABLE","$aggregate",373],["T_OBJECT_OPERATOR","->",373],["T_STRING","detach",373],"(",["T_VARIABLE","$this",373],")",";",["T_WHITESPACE","\n    ",373],"}",["T_WHITESPACE","\n\n    ",374],["T_DOC_COMMENT","\/**\n     * Retrieve all registered events\n     *\n     * @return array\n     *\/",376],["T_WHITESPACE","\n    ",380],["T_PUBLIC","public",381],["T_WHITESPACE"," ",381],["T_FUNCTION","function",381],["T_WHITESPACE"," ",381],["T_STRING","getEvents",381],"(",")",["T_WHITESPACE","\n    ",381],"{",["T_WHITESPACE","\n        ",382],["T_RETURN","return",383],["T_WHITESPACE"," ",383],["T_STRING","array_keys",383],"(",["T_VARIABLE","$this",383],["T_OBJECT_OPERATOR","->",383],["T_STRING","events",383],")",";",["T_WHITESPACE","\n    ",383],"}",["T_WHITESPACE","\n\n    ",384],["T_DOC_COMMENT","\/**\n     * Retrieve all listeners for a given event\n     *\n     * @param  string $event\n     * @return Zend_Stdlib_PriorityQueue\n     *\/",386],["T_WHITESPACE","\n    ",391],["T_PUBLIC","public",392],["T_WHITESPACE"," ",392],["T_FUNCTION","function",392],["T_WHITESPACE"," ",392],["T_STRING","getListeners",392],"(",["T_VARIABLE","$event",392],")",["T_WHITESPACE","\n    ",392],"{",["T_WHITESPACE","\n        ",393],["T_IF","if",394],["T_WHITESPACE"," ",394],"(","!",["T_STRING","array_key_exists",394],"(",["T_VARIABLE","$event",394],",",["T_WHITESPACE"," ",394],["T_VARIABLE","$this",394],["T_OBJECT_OPERATOR","->",394],["T_STRING","events",394],")",")",["T_WHITESPACE"," ",394],"{",["T_WHITESPACE","\n            ",394],["T_RETURN","return",395],["T_WHITESPACE"," ",395],["T_NEW","new",395],["T_WHITESPACE"," ",395],["T_STRING","Zend_Stdlib_PriorityQueue",395],"(",")",";",["T_WHITESPACE","\n        ",395],"}",["T_WHITESPACE","\n        ",396],["T_RETURN","return",397],["T_WHITESPACE"," ",397],["T_VARIABLE","$this",397],["T_OBJECT_OPERATOR","->",397],["T_STRING","events",397],"[",["T_VARIABLE","$event",397],"]",";",["T_WHITESPACE","\n    ",397],"}",["T_WHITESPACE","\n\n    ",398],["T_DOC_COMMENT","\/**\n     * Clear all listeners for a given event\n     *\n     * @param  string $event\n     * @return void\n     *\/",400],["T_WHITESPACE","\n    ",405],["T_PUBLIC","public",406],["T_WHITESPACE"," ",406],["T_FUNCTION","function",406],["T_WHITESPACE"," ",406],["T_STRING","clearListeners",406],"(",["T_VARIABLE","$event",406],")",["T_WHITESPACE","\n    ",406],"{",["T_WHITESPACE","\n        ",407],["T_IF","if",408],["T_WHITESPACE"," ",408],"(","!",["T_EMPTY","empty",408],"(",["T_VARIABLE","$this",408],["T_OBJECT_OPERATOR","->",408],["T_STRING","events",408],"[",["T_VARIABLE","$event",408],"]",")",")",["T_WHITESPACE"," ",408],"{",["T_WHITESPACE","\n            ",408],["T_UNSET","unset",409],"(",["T_VARIABLE","$this",409],["T_OBJECT_OPERATOR","->",409],["T_STRING","events",409],"[",["T_VARIABLE","$event",409],"]",")",";",["T_WHITESPACE","\n        ",409],"}",["T_WHITESPACE","\n    ",410],"}",["T_WHITESPACE","\n\n    ",411],["T_DOC_COMMENT","\/**\n     * Prepare arguments\n     *\n     * Use this method if you want to be able to modify arguments from within a\n     * listener. It returns an ArrayObject of the arguments, which may then be\n     * passed to trigger() or triggerUntil().\n     *\n     * @param  array $args\n     * @return ArrayObject\n     *\/",413],["T_WHITESPACE","\n    ",422],["T_PUBLIC","public",423],["T_WHITESPACE"," ",423],["T_FUNCTION","function",423],["T_WHITESPACE"," ",423],["T_STRING","prepareArgs",423],"(",["T_ARRAY","array",423],["T_WHITESPACE"," ",423],["T_VARIABLE","$args",423],")",["T_WHITESPACE","\n    ",423],"{",["T_WHITESPACE","\n        ",424],["T_RETURN","return",425],["T_WHITESPACE"," ",425],["T_NEW","new",425],["T_WHITESPACE"," ",425],["T_STRING","ArrayObject",425],"(",["T_VARIABLE","$args",425],")",";",["T_WHITESPACE","\n    ",425],"}",["T_WHITESPACE","\n\n    ",426],["T_DOC_COMMENT","\/**\n     * Trigger listeners\n     *\n     * Actual functionality for triggering listeners, to which both trigger() and triggerUntil()\n     * delegate.\n     *\n     * @param  string           $event Event name\n     * @param  EventDescription $e\n     * @param  null|callback    $callback\n     * @return ResponseCollection\n     *\/",428],["T_WHITESPACE","\n    ",438],["T_PROTECTED","protected",439],["T_WHITESPACE"," ",439],["T_FUNCTION","function",439],["T_WHITESPACE"," ",439],["T_STRING","triggerListeners",439],"(",["T_VARIABLE","$event",439],",",["T_WHITESPACE"," ",439],["T_STRING","Zend_EventManager_EventDescription",439],["T_WHITESPACE"," ",439],["T_VARIABLE","$e",439],",",["T_WHITESPACE"," ",439],["T_VARIABLE","$callback",439],["T_WHITESPACE"," ",439],"=",["T_WHITESPACE"," ",439],["T_STRING","null",439],")",["T_WHITESPACE","\n    ",439],"{",["T_WHITESPACE","\n        ",440],["T_VARIABLE","$responses",441],["T_WHITESPACE"," ",441],"=",["T_WHITESPACE"," ",441],["T_NEW","new",441],["T_WHITESPACE"," ",441],["T_STRING","Zend_EventManager_ResponseCollection",441],";",["T_WHITESPACE","\n        ",441],["T_VARIABLE","$listeners",442],["T_WHITESPACE"," ",442],"=",["T_WHITESPACE"," ",442],["T_VARIABLE","$this",442],["T_OBJECT_OPERATOR","->",442],["T_STRING","getListeners",442],"(",["T_VARIABLE","$event",442],")",";",["T_WHITESPACE","\n\n        ",442],["T_COMMENT","\/\/ Add shared\/wildcard listeners to the list of listeners,\n",444],["T_WHITESPACE","        ",445],["T_COMMENT","\/\/ but don't modify the listeners object\n",445],["T_WHITESPACE","        ",446],["T_VARIABLE","$sharedListeners",446],["T_WHITESPACE","         ",446],"=",["T_WHITESPACE"," ",446],["T_VARIABLE","$this",446],["T_OBJECT_OPERATOR","->",446],["T_STRING","getSharedListeners",446],"(",["T_VARIABLE","$event",446],")",";",["T_WHITESPACE","\n        ",446],["T_VARIABLE","$sharedWildcardListeners",447],["T_WHITESPACE"," ",447],"=",["T_WHITESPACE"," ",447],["T_VARIABLE","$this",447],["T_OBJECT_OPERATOR","->",447],["T_STRING","getSharedListeners",447],"(",["T_CONSTANT_ENCAPSED_STRING","'*'",447],")",";",["T_WHITESPACE","\n        ",447],["T_VARIABLE","$wildcardListeners",448],["T_WHITESPACE","       ",448],"=",["T_WHITESPACE"," ",448],["T_VARIABLE","$this",448],["T_OBJECT_OPERATOR","->",448],["T_STRING","getListeners",448],"(",["T_CONSTANT_ENCAPSED_STRING","'*'",448],")",";",["T_WHITESPACE","\n        ",448],["T_IF","if",449],["T_WHITESPACE"," ",449],"(",["T_STRING","count",449],"(",["T_VARIABLE","$sharedListeners",449],")",["T_WHITESPACE"," ",449],["T_BOOLEAN_OR","||",449],["T_WHITESPACE"," ",449],["T_STRING","count",449],"(",["T_VARIABLE","$sharedWildcardListeners",449],")",["T_WHITESPACE"," ",449],["T_BOOLEAN_OR","||",449],["T_WHITESPACE"," ",449],["T_STRING","count",449],"(",["T_VARIABLE","$wildcardListeners",449],")",")",["T_WHITESPACE"," ",449],"{",["T_WHITESPACE","\n            ",449],["T_VARIABLE","$listeners",450],["T_WHITESPACE"," ",450],"=",["T_WHITESPACE"," ",450],["T_CLONE","clone",450],["T_WHITESPACE"," ",450],["T_VARIABLE","$listeners",450],";",["T_WHITESPACE","\n        ",450],"}",["T_WHITESPACE","\n\n        ",451],["T_COMMENT","\/\/ Shared listeners on this specific event\n",453],["T_WHITESPACE","        ",454],["T_VARIABLE","$this",454],["T_OBJECT_OPERATOR","->",454],["T_STRING","insertListeners",454],"(",["T_VARIABLE","$listeners",454],",",["T_WHITESPACE"," ",454],["T_VARIABLE","$sharedListeners",454],")",";",["T_WHITESPACE","\n\n        ",454],["T_COMMENT","\/\/ Shared wildcard listeners\n",456],["T_WHITESPACE","        ",457],["T_VARIABLE","$this",457],["T_OBJECT_OPERATOR","->",457],["T_STRING","insertListeners",457],"(",["T_VARIABLE","$listeners",457],",",["T_WHITESPACE"," ",457],["T_VARIABLE","$sharedWildcardListeners",457],")",";",["T_WHITESPACE","\n\n        ",457],["T_COMMENT","\/\/ Add wildcard listeners\n",459],["T_WHITESPACE","        ",460],["T_VARIABLE","$this",460],["T_OBJECT_OPERATOR","->",460],["T_STRING","insertListeners",460],"(",["T_VARIABLE","$listeners",460],",",["T_WHITESPACE"," ",460],["T_VARIABLE","$wildcardListeners",460],")",";",["T_WHITESPACE","\n\n        ",460],["T_IF","if",462],["T_WHITESPACE"," ",462],"(",["T_VARIABLE","$listeners",462],["T_OBJECT_OPERATOR","->",462],["T_STRING","isEmpty",462],"(",")",")",["T_WHITESPACE"," ",462],"{",["T_WHITESPACE","\n            ",462],["T_RETURN","return",463],["T_WHITESPACE"," ",463],["T_VARIABLE","$responses",463],";",["T_WHITESPACE","\n        ",463],"}",["T_WHITESPACE","\n\n        ",464],["T_FOREACH","foreach",466],["T_WHITESPACE"," ",466],"(",["T_VARIABLE","$listeners",466],["T_WHITESPACE"," ",466],["T_AS","as",466],["T_WHITESPACE"," ",466],["T_VARIABLE","$listener",466],")",["T_WHITESPACE"," ",466],"{",["T_WHITESPACE","\n            ",466],["T_COMMENT","\/\/ Trigger the listener's callback, and push its result onto the\n",467],["T_WHITESPACE","            ",468],["T_COMMENT","\/\/ response collection\n",468],["T_WHITESPACE","            ",469],["T_VARIABLE","$responses",469],["T_OBJECT_OPERATOR","->",469],["T_STRING","push",469],"(",["T_STRING","call_user_func",469],"(",["T_VARIABLE","$listener",469],["T_OBJECT_OPERATOR","->",469],["T_STRING","getCallback",469],"(",")",",",["T_WHITESPACE"," ",469],["T_VARIABLE","$e",469],")",")",";",["T_WHITESPACE","\n\n            ",469],["T_COMMENT","\/\/ If the event was asked to stop propagating, do so\n",471],["T_WHITESPACE","            ",472],["T_IF","if",472],["T_WHITESPACE"," ",472],"(",["T_VARIABLE","$e",472],["T_OBJECT_OPERATOR","->",472],["T_STRING","propagationIsStopped",472],"(",")",")",["T_WHITESPACE"," ",472],"{",["T_WHITESPACE","\n                ",472],["T_VARIABLE","$responses",473],["T_OBJECT_OPERATOR","->",473],["T_STRING","setStopped",473],"(",["T_STRING","true",473],")",";",["T_WHITESPACE","\n                ",473],["T_BREAK","break",474],";",["T_WHITESPACE","\n            ",474],"}",["T_WHITESPACE","\n\n            ",475],["T_COMMENT","\/\/ If the result causes our validation callback to return true,\n",477],["T_WHITESPACE","            ",478],["T_COMMENT","\/\/ stop propagation\n",478],["T_WHITESPACE","            ",479],["T_IF","if",479],["T_WHITESPACE"," ",479],"(",["T_VARIABLE","$callback",479],["T_WHITESPACE"," ",479],["T_BOOLEAN_AND","&&",479],["T_WHITESPACE"," ",479],["T_STRING","call_user_func",479],"(",["T_VARIABLE","$callback",479],",",["T_WHITESPACE"," ",479],["T_VARIABLE","$responses",479],["T_OBJECT_OPERATOR","->",479],["T_STRING","last",479],"(",")",")",")",["T_WHITESPACE"," ",479],"{",["T_WHITESPACE","\n                ",479],["T_VARIABLE","$responses",480],["T_OBJECT_OPERATOR","->",480],["T_STRING","setStopped",480],"(",["T_STRING","true",480],")",";",["T_WHITESPACE","\n                ",480],["T_BREAK","break",481],";",["T_WHITESPACE","\n            ",481],"}",["T_WHITESPACE","\n        ",482],"}",["T_WHITESPACE","\n\n        ",483],["T_RETURN","return",485],["T_WHITESPACE"," ",485],["T_VARIABLE","$responses",485],";",["T_WHITESPACE","\n    ",485],"}",["T_WHITESPACE","\n\n    ",486],["T_DOC_COMMENT","\/**\n     * Get list of all listeners attached to the shared collection for\n     * identifiers registered by this instance\n     *\n     * @param  string $event\n     * @return array\n     *\/",488],["T_WHITESPACE","\n    ",494],["T_PROTECTED","protected",495],["T_WHITESPACE"," ",495],["T_FUNCTION","function",495],["T_WHITESPACE"," ",495],["T_STRING","getSharedListeners",495],"(",["T_VARIABLE","$event",495],")",["T_WHITESPACE","\n    ",495],"{",["T_WHITESPACE","\n        ",496],["T_IF","if",497],["T_WHITESPACE"," ",497],"(","!",["T_VARIABLE","$sharedCollections",497],["T_WHITESPACE"," ",497],"=",["T_WHITESPACE"," ",497],["T_VARIABLE","$this",497],["T_OBJECT_OPERATOR","->",497],["T_STRING","getSharedCollections",497],"(",")",")",["T_WHITESPACE"," ",497],"{",["T_WHITESPACE","\n            ",497],["T_RETURN","return",498],["T_WHITESPACE"," ",498],["T_ARRAY","array",498],"(",")",";",["T_WHITESPACE","\n        ",498],"}",["T_WHITESPACE","\n\n        ",499],["T_VARIABLE","$identifiers",501],["T_WHITESPACE","     ",501],"=",["T_WHITESPACE"," ",501],["T_VARIABLE","$this",501],["T_OBJECT_OPERATOR","->",501],["T_STRING","getIdentifiers",501],"(",")",";",["T_WHITESPACE","\n        ",501],["T_VARIABLE","$sharedListeners",502],["T_WHITESPACE"," ",502],"=",["T_WHITESPACE"," ",502],["T_ARRAY","array",502],"(",")",";",["T_WHITESPACE","\n\n        ",502],["T_FOREACH","foreach",504],["T_WHITESPACE"," ",504],"(",["T_VARIABLE","$identifiers",504],["T_WHITESPACE"," ",504],["T_AS","as",504],["T_WHITESPACE"," ",504],["T_VARIABLE","$id",504],")",["T_WHITESPACE"," ",504],"{",["T_WHITESPACE","\n            ",504],["T_IF","if",505],["T_WHITESPACE"," ",505],"(","!",["T_VARIABLE","$listeners",505],["T_WHITESPACE"," ",505],"=",["T_WHITESPACE"," ",505],["T_VARIABLE","$sharedCollections",505],["T_OBJECT_OPERATOR","->",505],["T_STRING","getListeners",505],"(",["T_VARIABLE","$id",505],",",["T_WHITESPACE"," ",505],["T_VARIABLE","$event",505],")",")",["T_WHITESPACE"," ",505],"{",["T_WHITESPACE","\n                ",505],["T_CONTINUE","continue",506],";",["T_WHITESPACE","\n            ",506],"}",["T_WHITESPACE","\n\n            ",507],["T_IF","if",509],["T_WHITESPACE"," ",509],"(","!",["T_STRING","is_array",509],"(",["T_VARIABLE","$listeners",509],")",["T_WHITESPACE"," ",509],["T_BOOLEAN_AND","&&",509],["T_WHITESPACE"," ",509],"!","(",["T_VARIABLE","$listeners",509],["T_WHITESPACE"," ",509],["T_INSTANCEOF","instanceof",509],["T_WHITESPACE"," ",509],["T_STRING","Traversable",509],")",")",["T_WHITESPACE"," ",509],"{",["T_WHITESPACE","\n                ",509],["T_CONTINUE","continue",510],";",["T_WHITESPACE","\n            ",510],"}",["T_WHITESPACE","\n\n            ",511],["T_FOREACH","foreach",513],["T_WHITESPACE"," ",513],"(",["T_VARIABLE","$listeners",513],["T_WHITESPACE"," ",513],["T_AS","as",513],["T_WHITESPACE"," ",513],["T_VARIABLE","$listener",513],")",["T_WHITESPACE"," ",513],"{",["T_WHITESPACE","\n                ",513],["T_IF","if",514],["T_WHITESPACE"," ",514],"(","!",["T_VARIABLE","$listener",514],["T_WHITESPACE"," ",514],["T_INSTANCEOF","instanceof",514],["T_WHITESPACE"," ",514],["T_STRING","Zend_Stdlib_CallbackHandler",514],")",["T_WHITESPACE"," ",514],"{",["T_WHITESPACE","\n                    ",514],["T_CONTINUE","continue",515],";",["T_WHITESPACE","\n                ",515],"}",["T_WHITESPACE","\n                ",516],["T_VARIABLE","$sharedListeners",517],"[","]",["T_WHITESPACE"," ",517],"=",["T_WHITESPACE"," ",517],["T_VARIABLE","$listener",517],";",["T_WHITESPACE","\n            ",517],"}",["T_WHITESPACE","\n        ",518],"}",["T_WHITESPACE","\n\n        ",519],["T_RETURN","return",521],["T_WHITESPACE"," ",521],["T_VARIABLE","$sharedListeners",521],";",["T_WHITESPACE","\n    ",521],"}",["T_WHITESPACE","\n\n    ",522],["T_DOC_COMMENT","\/**\n     * Add listeners to the master queue of listeners\n     *\n     * Used to inject shared listeners and wildcard listeners.\n     * \n     * @param  Zend_Stdlib_PriorityQueue $masterListeners \n     * @param  Zend_Stdlib_PriorityQueue $listeners \n     * @return void\n     *\/",524],["T_WHITESPACE","\n    ",532],["T_PROTECTED","protected",533],["T_WHITESPACE"," ",533],["T_FUNCTION","function",533],["T_WHITESPACE"," ",533],["T_STRING","insertListeners",533],"(",["T_VARIABLE","$masterListeners",533],",",["T_WHITESPACE"," ",533],["T_VARIABLE","$listeners",533],")",["T_WHITESPACE","\n    ",533],"{",["T_WHITESPACE","\n        ",534],["T_IF","if",535],["T_WHITESPACE"," ",535],"(","!",["T_STRING","count",535],"(",["T_VARIABLE","$listeners",535],")",")",["T_WHITESPACE"," ",535],"{",["T_WHITESPACE","\n            ",535],["T_RETURN","return",536],";",["T_WHITESPACE","\n        ",536],"}",["T_WHITESPACE","\n\n        ",537],["T_FOREACH","foreach",539],["T_WHITESPACE"," ",539],"(",["T_VARIABLE","$listeners",539],["T_WHITESPACE"," ",539],["T_AS","as",539],["T_WHITESPACE"," ",539],["T_VARIABLE","$listener",539],")",["T_WHITESPACE"," ",539],"{",["T_WHITESPACE","\n            ",539],["T_VARIABLE","$priority",540],["T_WHITESPACE"," ",540],"=",["T_WHITESPACE"," ",540],["T_VARIABLE","$listener",540],["T_OBJECT_OPERATOR","->",540],["T_STRING","getMetadatum",540],"(",["T_CONSTANT_ENCAPSED_STRING","'priority'",540],")",";",["T_WHITESPACE","\n            ",540],["T_IF","if",541],["T_WHITESPACE"," ",541],"(",["T_STRING","null",541],["T_WHITESPACE"," ",541],["T_IS_IDENTICAL","===",541],["T_WHITESPACE"," ",541],["T_VARIABLE","$priority",541],")",["T_WHITESPACE"," ",541],"{",["T_WHITESPACE","\n                ",541],["T_VARIABLE","$priority",542],["T_WHITESPACE"," ",542],"=",["T_WHITESPACE"," ",542],["T_LNUMBER","1",542],";",["T_WHITESPACE","\n            ",542],"}",["T_WHITESPACE"," ",543],["T_ELSEIF","elseif",543],["T_WHITESPACE"," ",543],"(",["T_STRING","is_array",543],"(",["T_VARIABLE","$priority",543],")",")",["T_WHITESPACE"," ",543],"{",["T_WHITESPACE","\n                ",543],["T_COMMENT","\/\/ If we have an array, likely using PriorityQueue. Grab first\n",544],["T_WHITESPACE","                ",545],["T_COMMENT","\/\/ element of the array, as that's the actual priority.\n",545],["T_WHITESPACE","                ",546],["T_VARIABLE","$priority",546],["T_WHITESPACE"," ",546],"=",["T_WHITESPACE"," ",546],["T_STRING","array_shift",546],"(",["T_VARIABLE","$priority",546],")",";",["T_WHITESPACE","\n            ",546],"}",["T_WHITESPACE","\n            ",547],["T_VARIABLE","$masterListeners",548],["T_OBJECT_OPERATOR","->",548],["T_STRING","insert",548],"(",["T_VARIABLE","$listener",548],",",["T_WHITESPACE"," ",548],["T_VARIABLE","$priority",548],")",";",["T_WHITESPACE","\n        ",548],"}",["T_WHITESPACE","\n    ",549],"}",["T_WHITESPACE","\n",550],"}",["T_WHITESPACE","\n",551]]