[["T_OPEN_TAG","<?php\n",1],["T_DOC_COMMENT","\/**\n * Zend Framework\n *\n * LICENSE\n *\n * This source file is subject to the new BSD license that is bundled\n * with this package in the file LICENSE.txt.\n * It is also available through the world-wide-web at this URL:\n * http:\/\/framework.zend.com\/license\/new-bsd\n * If you did not receive a copy of the license and are unable to\n * obtain it through the world-wide-web, please send an email\n * to license@zend.com so we can send you a copy immediately.\n *\n * @category   Zend\n * @package    Zend_XmlRpc\n * @subpackage Value\n * @copyright  Copyright (c) 2005-2015 Zend Technologies USA Inc. (http:\/\/www.zend.com)\n * @license    http:\/\/framework.zend.com\/license\/new-bsd     New BSD License\n * @version    $Id$\n *\/",2],["T_WHITESPACE","\n\n\n",21],["T_DOC_COMMENT","\/**\n * Zend_XmlRpc_Value_Scalar\n *\/",24],["T_WHITESPACE","\n",26],["T_COMMENT","#require_once 'Zend\/XmlRpc\/Value\/Scalar.php';\n",27],["T_WHITESPACE","\n\n",28],["T_DOC_COMMENT","\/**\n * @category   Zend\n * @package    Zend_XmlRpc\n * @subpackage Value\n * @copyright  Copyright (c) 2005-2015 Zend Technologies USA Inc. (http:\/\/www.zend.com)\n * @license    http:\/\/framework.zend.com\/license\/new-bsd     New BSD License\n *\/",30],["T_WHITESPACE","\n",36],["T_CLASS","class",37],["T_WHITESPACE"," ",37],["T_STRING","Zend_XmlRpc_Value_Boolean",37],["T_WHITESPACE"," ",37],["T_EXTENDS","extends",37],["T_WHITESPACE"," ",37],["T_STRING","Zend_XmlRpc_Value_Scalar",37],["T_WHITESPACE","\n",37],"{",["T_WHITESPACE","\n\n    ",38],["T_DOC_COMMENT","\/**\n     * Set the value of a boolean native type\n     * We hold the boolean type as an integer (0 or 1)\n     *\n     * @param bool $value\n     *\/",40],["T_WHITESPACE","\n    ",45],["T_PUBLIC","public",46],["T_WHITESPACE"," ",46],["T_FUNCTION","function",46],["T_WHITESPACE"," ",46],["T_STRING","__construct",46],"(",["T_VARIABLE","$value",46],")",["T_WHITESPACE","\n    ",46],"{",["T_WHITESPACE","\n        ",47],["T_VARIABLE","$this",48],["T_OBJECT_OPERATOR","->",48],["T_STRING","_type",48],["T_WHITESPACE"," ",48],"=",["T_WHITESPACE"," ",48],["T_STRING","self",48],["T_DOUBLE_COLON","::",48],["T_STRING","XMLRPC_TYPE_BOOLEAN",48],";",["T_WHITESPACE","\n        ",48],["T_COMMENT","\/\/ Make sure the value is boolean and then convert it into a integer\n",49],["T_WHITESPACE","        ",50],["T_COMMENT","\/\/ The double convertion is because a bug in the ZendOptimizer in PHP version 5.0.4\n",50],["T_WHITESPACE","        ",51],["T_VARIABLE","$this",51],["T_OBJECT_OPERATOR","->",51],["T_STRING","_value",51],["T_WHITESPACE"," ",51],"=",["T_WHITESPACE"," ",51],["T_INT_CAST","(int)",51],["T_BOOL_CAST","(bool)",51],["T_VARIABLE","$value",51],";",["T_WHITESPACE","\n    ",51],"}",["T_WHITESPACE","\n\n    ",52],["T_DOC_COMMENT","\/**\n     * Return the value of this object, convert the XML-RPC native boolean value into a PHP boolean\n     *\n     * @return bool\n     *\/",54],["T_WHITESPACE","\n    ",58],["T_PUBLIC","public",59],["T_WHITESPACE"," ",59],["T_FUNCTION","function",59],["T_WHITESPACE"," ",59],["T_STRING","getValue",59],"(",")",["T_WHITESPACE","\n    ",59],"{",["T_WHITESPACE","\n        ",60],["T_RETURN","return",61],["T_WHITESPACE"," ",61],["T_BOOL_CAST","(bool)",61],["T_VARIABLE","$this",61],["T_OBJECT_OPERATOR","->",61],["T_STRING","_value",61],";",["T_WHITESPACE","\n    ",61],"}",["T_WHITESPACE","\n",62],"}",["T_WHITESPACE","\n",63]]